  .text
  .globl svcudp_reply
  .type svcudp_reply, @function

#! file-offset 0x137440
#! rip-offset  0x137440
#! capacity    640 bytes

# Text                              #  Line  RIP       Bytes  Opcode              
.svcudp_reply:                      #        0x137440  0      OPC=<label>         
  pushq %r15                        #  1     0x137440  2      OPC=pushq_r64_1     
  pushq %r14                        #  2     0x137442  2      OPC=pushq_r64_1     
  pushq %r13                        #  3     0x137444  2      OPC=pushq_r64_1     
  pushq %r12                        #  4     0x137446  2      OPC=pushq_r64_1     
  movq %rsi, %r13                   #  5     0x137448  3      OPC=movq_r64_r64    
  pushq %rbp                        #  6     0x13744b  1      OPC=pushq_r64_1     
  pushq %rbx                        #  7     0x13744c  1      OPC=pushq_r64_1     
  xorl %esi, %esi                   #  8     0x13744d  2      OPC=xorl_r32_r32    
  movq %rdi, %rbp                   #  9     0x13744f  3      OPC=movq_r64_r64    
  subq $0x18, %rsp                  #  10    0x137452  4      OPC=subq_r64_imm8   
  movq 0x48(%rdi), %rbx             #  11    0x137456  4      OPC=movq_r64_m64    
  movq 0x18(%rbx), %rax             #  12    0x13745a  4      OPC=movq_r64_m64    
  leaq 0x10(%rbx), %r12             #  13    0x13745e  4      OPC=leaq_r64_m16    
  movl $0x0, 0x10(%rbx)             #  14    0x137462  7      OPC=movl_m32_imm32  
  movq %r12, %rdi                   #  15    0x137469  3      OPC=movq_r64_r64    
  callq 0x28(%rax)                  #  16    0x13746c  3      OPC=callq_m64       
  movq 0x8(%rbx), %rax              #  17    0x13746f  4      OPC=movq_r64_m64    
  movq %r13, %rsi                   #  18    0x137473  3      OPC=movq_r64_r64    
  movq %r12, %rdi                   #  19    0x137476  3      OPC=movq_r64_r64    
  movq %rax, (%r13)                 #  20    0x137479  4      OPC=movq_m64_r64    
  callq .xdr_replymsg_GLIBC_2_2_5   #  21    0x13747d  5      OPC=callq_label     
  testl %eax, %eax                  #  22    0x137482  2      OPC=testl_r32_r32   
  jne .L_1374a0                     #  23    0x137484  2      OPC=jne_label       
.L_137486:                          #        0x137486  0      OPC=<label>         
  xorl %eax, %eax                   #  24    0x137486  2      OPC=xorl_r32_r32    
.L_137488:                          #        0x137488  0      OPC=<label>         
  addq $0x18, %rsp                  #  25    0x137488  4      OPC=addq_r64_imm8   
  popq %rbx                         #  26    0x13748c  1      OPC=popq_r64_1      
  popq %rbp                         #  27    0x13748d  1      OPC=popq_r64_1      
  popq %r12                         #  28    0x13748e  2      OPC=popq_r64_1      
  popq %r13                         #  29    0x137490  2      OPC=popq_r64_1      
  popq %r14                         #  30    0x137492  2      OPC=popq_r64_1      
  popq %r15                         #  31    0x137494  2      OPC=popq_r64_1      
  retq                              #  32    0x137496  1      OPC=retq            
  nop                               #  33    0x137497  1      OPC=nop             
  nop                               #  34    0x137498  1      OPC=nop             
  nop                               #  35    0x137499  1      OPC=nop             
  nop                               #  36    0x13749a  1      OPC=nop             
  nop                               #  37    0x13749b  1      OPC=nop             
  nop                               #  38    0x13749c  1      OPC=nop             
  nop                               #  39    0x13749d  1      OPC=nop             
  nop                               #  40    0x13749e  1      OPC=nop             
  nop                               #  41    0x13749f  1      OPC=nop             
.L_1374a0:                          #        0x1374a0  0      OPC=<label>         
  movq 0x18(%rbx), %rax             #  42    0x1374a0  4      OPC=movq_r64_m64    
  movq %r12, %rdi                   #  43    0x1374a4  3      OPC=movq_r64_r64    
  callq 0x20(%rax)                  #  44    0x1374a7  3      OPC=callq_m64       
  cmpq $0x0, 0x78(%rbp)             #  45    0x1374aa  5      OPC=cmpq_m64_imm8   
  movl %eax, %r12d                  #  46    0x1374af  3      OPC=movl_r32_r32    
  jne .L_137590                     #  47    0x1374b2  6      OPC=jne_label_1     
  movq 0x40(%rbp), %rsi             #  48    0x1374b8  4      OPC=movq_r64_m64    
  movl 0x10(%rbp), %r9d             #  49    0x1374bc  4      OPC=movl_r32_m32    
  leaq 0x14(%rbp), %r8              #  50    0x1374c0  4      OPC=leaq_r64_m16    
  movl (%rbp), %edi                 #  51    0x1374c4  3      OPC=movl_r32_m32    
  movslq %eax, %rdx                 #  52    0x1374c7  3      OPC=movslq_r64_r32  
  xorl %ecx, %ecx                   #  53    0x1374ca  2      OPC=xorl_r32_r32    
  callq .sendto                     #  54    0x1374cc  5      OPC=callq_label     
  movl %eax, %edx                   #  55    0x1374d1  2      OPC=movl_r32_r32    
.L_1374d3:                          #        0x1374d3  0      OPC=<label>         
  cmpl %r12d, %edx                  #  56    0x1374d3  3      OPC=cmpl_r32_r32    
  jne .L_137486                     #  57    0x1374d6  2      OPC=jne_label       
  testl %edx, %edx                  #  58    0x1374d8  2      OPC=testl_r32_r32   
  js .L_13757c                      #  59    0x1374da  6      OPC=js_label_1      
  cmpq $0x0, 0x1d0(%rbx)            #  60    0x1374e0  8      OPC=cmpq_m64_imm8   
  je .L_13757c                      #  61    0x1374e8  6      OPC=je_label_1      
  movq 0x48(%rbp), %r14             #  62    0x1374ee  4      OPC=movq_r64_m64    
  movslq %edx, %r12                 #  63    0x1374f2  3      OPC=movslq_r64_r32  
  movq 0x1d0(%r14), %r13            #  64    0x1374f5  7      OPC=movq_r64_m64    
  movq 0x18(%r13), %rdx             #  65    0x1374fc  4      OPC=movq_r64_m64    
  movq 0x10(%r13), %rax             #  66    0x137500  4      OPC=movq_r64_m64    
  movq (%rax,%rdx,8), %rbx          #  67    0x137504  4      OPC=movq_r64_m64    
  testq %rbx, %rbx                  #  68    0x137508  3      OPC=testq_r64_r64   
  je .L_137663                      #  69    0x13750b  6      OPC=je_label_1      
  movq (%r13), %rax                 #  70    0x137511  4      OPC=movq_r64_m64    
  xorl %edx, %edx                   #  71    0x137515  2      OPC=xorl_r32_r32    
  leaq (,%rax,4), %rcx              #  72    0x137517  8      OPC=leaq_r64_m16    
  movq (%rbx), %rax                 #  73    0x13751f  3      OPC=movq_r64_m64    
  divq %rcx                         #  74    0x137522  3      OPC=divq_r64        
  movq 0x8(%r13), %rax              #  75    0x137525  4      OPC=movq_r64_m64    
  movl %edx, %edx                   #  76    0x137529  2      OPC=movl_r32_r32    
  leaq (%rax,%rdx,8), %rax          #  77    0x13752b  4      OPC=leaq_r64_m16    
  movq (%rax), %rcx                 #  78    0x13752f  3      OPC=movq_r64_m64    
  testq %rcx, %rcx                  #  79    0x137532  3      OPC=testq_r64_r64   
  je .L_137551                      #  80    0x137535  2      OPC=je_label        
  cmpq %rcx, %rbx                   #  81    0x137537  3      OPC=cmpq_r64_r64    
  jne .L_137548                     #  82    0x13753a  2      OPC=jne_label       
  jmpq .L_1375bc                    #  83    0x13753c  2      OPC=jmpq_label      
  xchgw %ax, %ax                    #  84    0x13753e  2      OPC=xchgw_ax_r16    
.L_137540:                          #        0x137540  0      OPC=<label>         
  cmpq %rdx, %rbx                   #  85    0x137540  3      OPC=cmpq_r64_r64    
  je .L_1375b8                      #  86    0x137543  2      OPC=je_label        
  movq %rdx, %rcx                   #  87    0x137545  3      OPC=movq_r64_r64    
.L_137548:                          #        0x137548  0      OPC=<label>         
  movq 0x40(%rcx), %rdx             #  88    0x137548  4      OPC=movq_r64_m64    
  testq %rdx, %rdx                  #  89    0x13754c  3      OPC=testq_r64_r64   
  jne .L_137540                     #  90    0x13754f  2      OPC=jne_label       
.L_137551:                          #        0x137551  0      OPC=<label>         
  leaq 0x5649c(%rip), %rsi          #  91    0x137551  7      OPC=leaq_r64_m16    
  movl $0x5, %edx                   #  92    0x137558  5      OPC=movl_r32_imm32  
.L_13755d:                          #        0x13755d  0      OPC=<label>         
  leaq 0x53038(%rip), %rdi          #  93    0x13755d  7      OPC=leaq_r64_m16    
  callq .__dcgettext                #  94    0x137564  5      OPC=callq_label     
  leaq 0x55ddf(%rip), %rsi          #  95    0x137569  7      OPC=leaq_r64_m16    
  movq %rax, %rdx                   #  96    0x137570  3      OPC=movq_r64_r64    
  xorl %edi, %edi                   #  97    0x137573  2      OPC=xorl_r32_r32    
  xorl %eax, %eax                   #  98    0x137575  2      OPC=xorl_r32_r32    
  callq .__fxprintf                 #  99    0x137577  5      OPC=callq_label     
.L_13757c:                          #        0x13757c  0      OPC=<label>         
  movl $0x1, %eax                   #  100   0x13757c  5      OPC=movl_r32_imm32  
  jmpq .L_137488                    #  101   0x137581  5      OPC=jmpq_label_1    
  nop                               #  102   0x137586  1      OPC=nop             
  nop                               #  103   0x137587  1      OPC=nop             
  nop                               #  104   0x137588  1      OPC=nop             
  nop                               #  105   0x137589  1      OPC=nop             
  nop                               #  106   0x13758a  1      OPC=nop             
  nop                               #  107   0x13758b  1      OPC=nop             
  nop                               #  108   0x13758c  1      OPC=nop             
  nop                               #  109   0x13758d  1      OPC=nop             
  nop                               #  110   0x13758e  1      OPC=nop             
  nop                               #  111   0x13758f  1      OPC=nop             
.L_137590:                          #        0x137590  0      OPC=<label>         
  movq 0x40(%rbp), %rax             #  112   0x137590  4      OPC=movq_r64_m64    
  movl (%rbp), %edi                 #  113   0x137594  3      OPC=movl_r32_m32    
  leaq 0x60(%rbp), %rsi             #  114   0x137597  4      OPC=leaq_r64_m16    
  xorl %edx, %edx                   #  115   0x13759b  2      OPC=xorl_r32_r32    
  movq %rax, 0x50(%rbp)             #  116   0x13759d  4      OPC=movq_m64_r64    
  movslq %r12d, %rax                #  117   0x1375a1  3      OPC=movslq_r64_r32  
  movq %rax, 0x58(%rbp)             #  118   0x1375a4  4      OPC=movq_m64_r64    
  callq .sendmsg                    #  119   0x1375a8  5      OPC=callq_label     
  movl %eax, %edx                   #  120   0x1375ad  2      OPC=movl_r32_r32    
  jmpq .L_1374d3                    #  121   0x1375af  5      OPC=jmpq_label_1    
  nop                               #  122   0x1375b4  1      OPC=nop             
  nop                               #  123   0x1375b5  1      OPC=nop             
  nop                               #  124   0x1375b6  1      OPC=nop             
  nop                               #  125   0x1375b7  1      OPC=nop             
.L_1375b8:                          #        0x1375b8  0      OPC=<label>         
  leaq 0x40(%rcx), %rax             #  126   0x1375b8  4      OPC=leaq_r64_m16    
.L_1375bc:                          #        0x1375bc  0      OPC=<label>         
  movq 0x40(%rbx), %rdx             #  127   0x1375bc  4      OPC=movq_r64_m64    
  movq %rdx, (%rax)                 #  128   0x1375c0  3      OPC=movq_m64_r64    
  movl (%r14), %edx                 #  129   0x1375c3  3      OPC=movl_r32_m32    
  movq 0x30(%rbx), %rsi             #  130   0x1375c6  4      OPC=movq_r64_m64    
.L_1375ca:                          #        0x1375ca  0      OPC=<label>         
  movq 0x40(%rbp), %rax             #  131   0x1375ca  4      OPC=movq_r64_m64    
  leaq 0x10(%r14), %rdi             #  132   0x1375ce  4      OPC=leaq_r64_m16    
  movq %r12, 0x38(%rbx)             #  133   0x1375d2  4      OPC=movq_m64_r64    
  xorl %ecx, %ecx                   #  134   0x1375d6  2      OPC=xorl_r32_r32    
  movq %rax, 0x30(%rbx)             #  135   0x1375d8  4      OPC=movq_m64_r64    
  movq %rsi, 0x40(%rbp)             #  136   0x1375dc  4      OPC=movq_m64_r64    
  callq .xdrmem_create_GLIBC_2_2_5  #  137   0x1375e0  5      OPC=callq_label     
  movq 0x30(%r13), %rdx             #  138   0x1375e5  4      OPC=movq_r64_m64    
  movq 0x8(%r14), %rax              #  139   0x1375e9  4      OPC=movq_r64_m64    
  movq %rdx, 0x8(%rbx)              #  140   0x1375ed  4      OPC=movq_m64_r64    
  movq 0x28(%r13), %rdx             #  141   0x1375f1  4      OPC=movq_r64_m64    
  movq %rax, (%rbx)                 #  142   0x1375f5  3      OPC=movq_m64_r64    
  movq %rdx, 0x10(%rbx)             #  143   0x1375f8  4      OPC=movq_m64_r64    
  movq 0x20(%r13), %rdx             #  144   0x1375fc  4      OPC=movq_r64_m64    
  movq %rdx, 0x18(%rbx)             #  145   0x137600  4      OPC=movq_m64_r64    
  movq 0x38(%r13), %rsi             #  146   0x137604  4      OPC=movq_r64_m64    
  movq 0x40(%r13), %rdi             #  147   0x137608  4      OPC=movq_r64_m64    
  movq %rsi, 0x20(%rbx)             #  148   0x13760c  4      OPC=movq_m64_r64    
  movq %rdi, 0x28(%rbx)             #  149   0x137610  4      OPC=movq_m64_r64    
  movq 0x48(%rbp), %rdx             #  150   0x137614  4      OPC=movq_r64_m64    
  movq 0x1d0(%rdx), %rdx            #  151   0x137618  7      OPC=movq_r64_m64    
  movq (%rdx), %rcx                 #  152   0x13761f  3      OPC=movq_r64_m64    
  xorl %edx, %edx                   #  153   0x137622  2      OPC=xorl_r32_r32    
  shlq $0x2, %rcx                   #  154   0x137624  4      OPC=shlq_r64_imm8   
  divq %rcx                         #  155   0x137628  3      OPC=divq_r64        
  movl %edx, %eax                   #  156   0x13762b  2      OPC=movl_r32_r32    
  movq 0x8(%r13), %rdx              #  157   0x13762d  4      OPC=movq_r64_m64    
  leaq (%rdx,%rax,8), %rax          #  158   0x137631  4      OPC=leaq_r64_m16    
  movq (%rax), %rdx                 #  159   0x137635  3      OPC=movq_r64_m64    
  movq %rdx, 0x40(%rbx)             #  160   0x137638  4      OPC=movq_m64_r64    
  movq %rbx, (%rax)                 #  161   0x13763c  3      OPC=movq_m64_r64    
  movq 0x18(%r13), %rax             #  162   0x13763f  4      OPC=movq_r64_m64    
  movq 0x10(%r13), %rdx             #  163   0x137643  4      OPC=movq_r64_m64    
  movq %rbx, (%rdx,%rax,8)          #  164   0x137647  4      OPC=movq_m64_r64    
  addq $0x1, %rax                   #  165   0x13764b  4      OPC=addq_r64_imm8   
  xorl %edx, %edx                   #  166   0x13764f  2      OPC=xorl_r32_r32    
  divq (%r13)                       #  167   0x137651  4      OPC=divq_m64        
  movl $0x1, %eax                   #  168   0x137655  5      OPC=movl_r32_imm32  
  movq %rdx, 0x18(%r13)             #  169   0x13765a  4      OPC=movq_m64_r64    
  jmpq .L_137488                    #  170   0x13765e  5      OPC=jmpq_label_1    
.L_137663:                          #        0x137663  0      OPC=<label>         
  movl $0x48, %edi                  #  171   0x137663  5      OPC=movl_r32_imm32  
  callq .memalign_plt               #  172   0x137668  5      OPC=callq_label     
  testq %rax, %rax                  #  173   0x13766d  3      OPC=testq_r64_r64   
  movq %rax, %r15                   #  174   0x137670  3      OPC=movq_r64_r64    
  movq %rax, %rbx                   #  175   0x137673  3      OPC=movq_r64_r64    
  movl $0x5, %edx                   #  176   0x137676  5      OPC=movl_r32_imm32  
  leaq 0x593e6(%rip), %rsi          #  177   0x13767b  7      OPC=leaq_r64_m16    
  je .L_13755d                      #  178   0x137682  6      OPC=je_label_1      
  movl (%r14), %edi                 #  179   0x137688  3      OPC=movl_r32_m32    
  movl %edi, 0xc(%rsp)              #  180   0x13768b  4      OPC=movl_m32_r32    
  callq .memalign_plt               #  181   0x13768f  5      OPC=callq_label     
  testq %rax, %rax                  #  182   0x137694  3      OPC=testq_r64_r64   
  movq %rax, %rsi                   #  183   0x137697  3      OPC=movq_r64_r64    
  movl 0xc(%rsp), %edx              #  184   0x13769a  4      OPC=movl_r32_m32    
  jne .L_1375ca                     #  185   0x13769e  6      OPC=jne_label_1     
  movq %r15, %rdi                   #  186   0x1376a4  3      OPC=movq_r64_r64    
  callq .L_1f8c0                    #  187   0x1376a7  5      OPC=callq_label     
  movl $0x5, %edx                   #  188   0x1376ac  5      OPC=movl_r32_imm32  
  leaq 0x593d0(%rip), %rsi          #  189   0x1376b1  7      OPC=leaq_r64_m16    
  jmpq .L_13755d                    #  190   0x1376b8  5      OPC=jmpq_label_1    
  nop                               #  191   0x1376bd  1      OPC=nop             
  nop                               #  192   0x1376be  1      OPC=nop             
  nop                               #  193   0x1376bf  1      OPC=nop             
                                                                                  
.size svcudp_reply, .-svcudp_reply

