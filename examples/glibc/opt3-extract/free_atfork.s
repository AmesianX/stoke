  .text
  .globl free_atfork
  .type free_atfork, @function

#! file-offset 0x7eb60
#! rip-offset  0x7eb60
#! capacity    384 bytes

# Text                       #  Line  RIP      Bytes  Opcode               
.free_atfork:                #        0x7eb60  0      OPC=<label>          
  testq %rdi, %rdi           #  1     0x7eb60  3      OPC=testq_r64_r64    
  je .L_7eba6                #  2     0x7eb63  2      OPC=je_label         
  pushq %r13                 #  3     0x7eb65  2      OPC=pushq_r64_1      
  pushq %r12                 #  4     0x7eb67  2      OPC=pushq_r64_1      
  leaq -0x10(%rdi), %rsi     #  5     0x7eb69  4      OPC=leaq_r64_m16     
  pushq %rbp                 #  6     0x7eb6d  1      OPC=pushq_r64_1      
  pushq %rbx                 #  7     0x7eb6e  1      OPC=pushq_r64_1      
  subq $0x28, %rsp           #  8     0x7eb6f  4      OPC=subq_r64_imm8    
  movq -0x8(%rdi), %rax      #  9     0x7eb73  4      OPC=movq_r64_m64     
  testb $0x2, %al            #  10    0x7eb77  2      OPC=testb_al_imm8    
  jne .L_7ebc0               #  11    0x7eb79  2      OPC=jne_label        
  testb $0x4, %al            #  12    0x7eb7b  2      OPC=testb_al_imm8    
  leaq 0x3430bc(%rip), %rdi  #  13    0x7eb7d  7      OPC=leaq_r64_m16     
  jne .L_7ebb0               #  14    0x7eb84  2      OPC=jne_label        
.L_7eb86:                    #        0x7eb86  0      OPC=<label>          
  movq 0x34220b(%rip), %rax  #  15    0x7eb86  7      OPC=movq_r64_m64     
  xorl %edx, %edx            #  16    0x7eb8d  2      OPC=xorl_r32_r32     
  cmpq $0xff, (%rax)         #  17    0x7eb8f  4      OPC=cmpq_m64_imm8    
  nop                        #  18    0x7eb93  1      OPC=nop              
  sete %dl                   #  19    0x7eb94  3      OPC=sete_r8          
  callq ._int_free           #  20    0x7eb97  5      OPC=callq_label      
.L_7eb9c:                    #        0x7eb9c  0      OPC=<label>          
  addq $0x28, %rsp           #  21    0x7eb9c  4      OPC=addq_r64_imm8    
  popq %rbx                  #  22    0x7eba0  1      OPC=popq_r64_1       
  popq %rbp                  #  23    0x7eba1  1      OPC=popq_r64_1       
  popq %r12                  #  24    0x7eba2  2      OPC=popq_r64_1       
  popq %r13                  #  25    0x7eba4  2      OPC=popq_r64_1       
.L_7eba6:                    #        0x7eba6  0      OPC=<label>          
  retq                       #  26    0x7eba6  1      OPC=retq             
  nop                        #  27    0x7eba7  1      OPC=nop              
  nop                        #  28    0x7eba8  1      OPC=nop              
  nop                        #  29    0x7eba9  1      OPC=nop              
  nop                        #  30    0x7ebaa  1      OPC=nop              
  nop                        #  31    0x7ebab  1      OPC=nop              
  nop                        #  32    0x7ebac  1      OPC=nop              
  nop                        #  33    0x7ebad  1      OPC=nop              
  nop                        #  34    0x7ebae  1      OPC=nop              
  nop                        #  35    0x7ebaf  1      OPC=nop              
.L_7ebb0:                    #        0x7ebb0  0      OPC=<label>          
  movq %rsi, %rax            #  36    0x7ebb0  3      OPC=movq_r64_r64     
  andq $0xfc000000, %rax     #  37    0x7ebb3  6      OPC=andq_rax_imm32   
  movq (%rax), %rdi          #  38    0x7ebb9  3      OPC=movq_r64_m64     
  jmpq .L_7eb86              #  39    0x7ebbc  2      OPC=jmpq_label       
  xchgw %ax, %ax             #  40    0x7ebbe  2      OPC=xchgw_ax_r16     
.L_7ebc0:                    #        0x7ebc0  0      OPC=<label>          
  movq -0x10(%rdi), %rcx     #  41    0x7ebc0  4      OPC=movq_r64_m64     
  andq $0xf8, %rax           #  42    0x7ebc4  4      OPC=andq_r64_imm8    
  movq %rsi, %rdx            #  43    0x7ebc8  3      OPC=movq_r64_r64     
  leaq (%rax,%rcx,1), %rsi   #  44    0x7ebcb  4      OPC=leaq_r64_m16     
  movq 0x3422a2(%rip), %rax  #  45    0x7ebcf  7      OPC=movq_r64_m64     
  subq %rcx, %rdx            #  46    0x7ebd6  3      OPC=subq_r64_r64     
  movq %rdx, %rcx            #  47    0x7ebd9  3      OPC=movq_r64_r64     
  orq %rsi, %rcx             #  48    0x7ebdc  3      OPC=orq_r64_r64      
  movq 0x18(%rax), %rax      #  49    0x7ebdf  4      OPC=movq_r64_m64     
  subq $0x1, %rax            #  50    0x7ebe3  4      OPC=subq_r64_imm8    
  testq %rax, %rcx           #  51    0x7ebe7  3      OPC=testq_r64_r64    
  jne .L_7ec10               #  52    0x7ebea  2      OPC=jne_label        
  lock                       #  53    0x7ebec  1      OPC=lock             
  decl 0x342635(%rip)        #  54    0x7ebed  6      OPC=decl_m32         
  nop                        #  55    0x7ebf3  1      OPC=nop              
  movq %rsi, %rax            #  56    0x7ebf4  3      OPC=movq_r64_r64     
  negq %rax                  #  57    0x7ebf7  3      OPC=negq_r64         
  lock                       #  58    0x7ebfa  1      OPC=lock             
  addq %rax, 0x342637(%rip)  #  59    0x7ebfb  7      OPC=addq_m64_r64     
  nop                        #  60    0x7ec02  1      OPC=nop              
  movq %rdx, %rdi            #  61    0x7ec03  3      OPC=movq_r64_r64     
  callq .munmap              #  62    0x7ec06  5      OPC=callq_label      
  jmpq .L_7eb9c              #  63    0x7ec0b  2      OPC=jmpq_label       
  nop                        #  64    0x7ec0d  1      OPC=nop              
  nop                        #  65    0x7ec0e  1      OPC=nop              
  nop                        #  66    0x7ec0f  1      OPC=nop              
  nop                        #  67    0x7ec10  1      OPC=nop              
  nop                        #  68    0x7ec11  1      OPC=nop              
.L_7ec10:                    #        0x7ec12  0      OPC=<label>          
  movl 0x3425ba(%rip), %ebx  #  69    0x7ec12  6      OPC=movl_r32_m32     
  movl %ebx, %eax            #  70    0x7ec18  2      OPC=movl_r32_r32     
  andl $0x5, %eax            #  71    0x7ec1a  3      OPC=andl_r32_imm8    
  cmpl $0x5, %eax            #  72    0x7ec1d  3      OPC=cmpl_r32_imm8    
  je .L_7ecbd                #  73    0x7ec20  6      OPC=je_label_1       
  testb $0x1, %bl            #  74    0x7ec26  3      OPC=testb_r8_imm8    
  jne .L_7ec40               #  75    0x7ec29  2      OPC=jne_label        
  andl $0x2, %ebx            #  76    0x7ec2b  3      OPC=andl_r32_imm8    
  je .L_7eb9c                #  77    0x7ec2e  6      OPC=je_label_1       
  callq .abort               #  78    0x7ec34  5      OPC=callq_label      
  nop                        #  79    0x7ec39  1      OPC=nop              
  nop                        #  80    0x7ec3a  1      OPC=nop              
  nop                        #  81    0x7ec3b  1      OPC=nop              
  nop                        #  82    0x7ec3c  1      OPC=nop              
  nop                        #  83    0x7ec3d  1      OPC=nop              
  nop                        #  84    0x7ec3e  1      OPC=nop              
  nop                        #  85    0x7ec3f  1      OPC=nop              
  nop                        #  86    0x7ec40  1      OPC=nop              
  nop                        #  87    0x7ec41  1      OPC=nop              
.L_7ec40:                    #        0x7ec42  0      OPC=<label>          
  leaq 0x10(%rsp), %rsi      #  88    0x7ec42  5      OPC=leaq_r64_m16     
  xorl %ecx, %ecx            #  89    0x7ec47  2      OPC=xorl_r32_r32     
  movl $0x10, %edx           #  90    0x7ec49  5      OPC=movl_r32_imm32   
  movb $0x0, 0x10(%rsp)      #  91    0x7ec4e  5      OPC=movb_m8_imm8     
  callq ._itoa_word          #  92    0x7ec53  5      OPC=callq_label      
  cmpq %rsp, %rax            #  93    0x7ec58  3      OPC=cmpq_r64_r64     
  movq %rax, %rbp            #  94    0x7ec5b  3      OPC=movq_r64_r64     
  jbe .L_7ec83               #  95    0x7ec5e  2      OPC=jbe_label        
  movq %rax, %rdx            #  96    0x7ec60  3      OPC=movq_r64_r64     
  movq %rax, %rdi            #  97    0x7ec63  3      OPC=movq_r64_r64     
  movl $0x30, %esi           #  98    0x7ec66  5      OPC=movl_r32_imm32   
  subq %rsp, %rdx            #  99    0x7ec6b  3      OPC=subq_r64_r64     
  leaq -0x1(%rax), %r13      #  100   0x7ec6e  4      OPC=leaq_r64_m16     
  subq %rdx, %rdi            #  101   0x7ec72  3      OPC=subq_r64_r64     
  callq .__GI_memset         #  102   0x7ec75  5      OPC=callq_label      
  leaq -0x1(%rsp), %rax      #  103   0x7ec7a  5      OPC=leaq_r64_m16     
  subq %r13, %rax            #  104   0x7ec7f  3      OPC=subq_r64_r64     
  addq %rax, %rbp            #  105   0x7ec82  3      OPC=addq_r64_r64     
.L_7ec83:                    #        0x7ec85  0      OPC=<label>          
  movq 0x347b0e(%rip), %rax  #  106   0x7ec85  7      OPC=movq_r64_m64     
  leaq 0x10c9ca(%rip), %rdx  #  107   0x7ec8c  7      OPC=leaq_r64_m16     
  leaq 0x10fe98(%rip), %rcx  #  108   0x7ec93  7      OPC=leaq_r64_m16     
  leaq 0x10fe69(%rip), %rsi  #  109   0x7ec9a  7      OPC=leaq_r64_m16     
  movq %rbp, %r8             #  110   0x7eca1  3      OPC=movq_r64_r64     
  movq (%rax), %rax          #  111   0x7eca4  3      OPC=movq_r64_m64     
  testq %rax, %rax           #  112   0x7eca7  3      OPC=testq_r64_r64    
  cmovneq %rax, %rdx         #  113   0x7ecaa  4      OPC=cmovneq_r64_r64  
  andl $0x2, %ebx            #  114   0x7ecae  3      OPC=andl_r32_imm8    
  xorl %eax, %eax            #  115   0x7ecb1  2      OPC=xorl_r32_r32     
  movl %ebx, %edi            #  116   0x7ecb3  2      OPC=movl_r32_r32     
  callq .__libc_message      #  117   0x7ecb5  5      OPC=callq_label      
  jmpq .L_7eb9c              #  118   0x7ecba  5      OPC=jmpq_label_1     
.L_7ecbd:                    #        0x7ecbf  0      OPC=<label>          
  andl $0x2, %ebx            #  119   0x7ecbf  3      OPC=andl_r32_imm8    
  leaq 0x10fe69(%rip), %rdx  #  120   0x7ecc2  7      OPC=leaq_r64_m16     
  leaq 0x10e681(%rip), %rsi  #  121   0x7ecc9  7      OPC=leaq_r64_m16     
  movl %ebx, %edi            #  122   0x7ecd0  2      OPC=movl_r32_r32     
  xorl %eax, %eax            #  123   0x7ecd2  2      OPC=xorl_r32_r32     
  callq .__libc_message      #  124   0x7ecd4  5      OPC=callq_label      
  jmpq .L_7eb9c              #  125   0x7ecd9  5      OPC=jmpq_label_1     
  nop                        #  126   0x7ecde  1      OPC=nop              
  nop                        #  127   0x7ecdf  1      OPC=nop              
  nop                        #  128   0x7ece0  1      OPC=nop              
  nop                        #  129   0x7ece1  1      OPC=nop              
                                                                           
.size free_atfork, .-free_atfork

