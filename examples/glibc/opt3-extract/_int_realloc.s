  .text
  .globl _int_realloc
  .type _int_realloc, @function

#! file-offset 0x80b30
#! rip-offset  0x80b30
#! capacity    1552 bytes

# Text                          #  Line  RIP      Bytes  Opcode               
._int_realloc:                  #        0x80b30  0      OPC=<label>          
  pushq %r15                    #  1     0x80b30  2      OPC=pushq_r64_1      
  pushq %r14                    #  2     0x80b32  2      OPC=pushq_r64_1      
  pushq %r13                    #  3     0x80b34  2      OPC=pushq_r64_1      
  pushq %r12                    #  4     0x80b36  2      OPC=pushq_r64_1      
  pushq %rbp                    #  5     0x80b38  1      OPC=pushq_r64_1      
  pushq %rbx                    #  6     0x80b39  1      OPC=pushq_r64_1      
  movq %rdi, %rbp               #  7     0x80b3a  3      OPC=movq_r64_r64     
  movq %rsi, %rbx               #  8     0x80b3d  3      OPC=movq_r64_r64     
  subq $0x38, %rsp              #  9     0x80b40  4      OPC=subq_r64_imm8    
  movq 0x8(%rsi), %rax          #  10    0x80b44  4      OPC=movq_r64_m64     
  cmpq $0x10, %rax              #  11    0x80b48  4      OPC=cmpq_r64_imm8    
  jbe .L_80d68                  #  12    0x80b4c  6      OPC=jbe_label_1      
  movq %rcx, %r13               #  13    0x80b52  3      OPC=movq_r64_r64     
  movq 0x880(%rdi), %rcx        #  14    0x80b55  7      OPC=movq_r64_m64     
  cmpq %rdx, %rcx               #  15    0x80b5c  3      OPC=cmpq_r64_r64     
  jbe .L_80e10                  #  16    0x80b5f  6      OPC=jbe_label_1      
  movq %rax, %r15               #  17    0x80b65  3      OPC=movq_r64_r64     
  andl $0x2, %r15d              #  18    0x80b68  4      OPC=andl_r32_imm8    
  jne .L_810d2                  #  19    0x80b6c  6      OPC=jne_label_1      
  leaq (%rsi,%rdx,1), %r14      #  20    0x80b72  4      OPC=leaq_r64_m16     
  movq 0x8(%r14), %rsi          #  21    0x80b76  4      OPC=movq_r64_m64     
  movq %rsi, %r12               #  22    0x80b7a  3      OPC=movq_r64_r64     
  andq $0xf8, %r12              #  23    0x80b7d  4      OPC=andq_r64_imm8    
  cmpq %r12, %rcx               #  24    0x80b81  3      OPC=cmpq_r64_r64     
  jbe .L_80eb8                  #  25    0x80b84  6      OPC=jbe_label_1      
  cmpq $0x10, %rsi              #  26    0x80b8a  4      OPC=cmpq_r64_imm8    
  jbe .L_80eb8                  #  27    0x80b8e  6      OPC=jbe_label_1      
  cmpq %r13, %rdx               #  28    0x80b94  3      OPC=cmpq_r64_r64     
  movq %rax, %r8                #  29    0x80b97  3      OPC=movq_r64_r64     
  jb .L_80bf0                   #  30    0x80b9a  2      OPC=jb_label         
.L_80b9c:                       #        0x80b9c  0      OPC=<label>          
  movq %rdx, %rax               #  31    0x80b9c  3      OPC=movq_r64_r64     
  subq %r13, %rax               #  32    0x80b9f  3      OPC=subq_r64_r64     
  cmpq $0x1f, %rax              #  33    0x80ba2  4      OPC=cmpq_r64_imm8    
  ja .L_80dc0                   #  34    0x80ba6  6      OPC=ja_label_1       
  leaq 0x34108d(%rip), %rax     #  35    0x80bac  7      OPC=leaq_r64_m16     
  andl $0x7, %r8d               #  36    0x80bb3  4      OPC=andl_r32_imm8    
  cmpq %rax, %rbp               #  37    0x80bb7  3      OPC=cmpq_r64_r64     
  movl $0x4, %eax               #  38    0x80bba  5      OPC=movl_r32_imm32   
  cmovneq %rax, %r15            #  39    0x80bbf  4      OPC=cmovneq_r64_r64  
  orq %rdx, %r8                 #  40    0x80bc3  3      OPC=orq_r64_r64      
  orq %r8, %r15                 #  41    0x80bc6  3      OPC=orq_r64_r64      
  movq %r15, 0x8(%rbx)          #  42    0x80bc9  4      OPC=movq_m64_r64     
  orq $0x1, 0x8(%rbx,%rdx,1)    #  43    0x80bcd  6      OPC=orq_m64_imm8     
.L_80bd3:                       #        0x80bd3  0      OPC=<label>          
  leaq 0x10(%rbx), %rax         #  44    0x80bd3  4      OPC=leaq_r64_m16     
.L_80bd7:                       #        0x80bd7  0      OPC=<label>          
  addq $0x38, %rsp              #  45    0x80bd7  4      OPC=addq_r64_imm8    
  popq %rbx                     #  46    0x80bdb  1      OPC=popq_r64_1       
  popq %rbp                     #  47    0x80bdc  1      OPC=popq_r64_1       
  popq %r12                     #  48    0x80bdd  2      OPC=popq_r64_1       
  popq %r13                     #  49    0x80bdf  2      OPC=popq_r64_1       
  popq %r14                     #  50    0x80be1  2      OPC=popq_r64_1       
  popq %r15                     #  51    0x80be3  2      OPC=popq_r64_1       
  retq                          #  52    0x80be5  1      OPC=retq             
  nop                           #  53    0x80be6  1      OPC=nop              
  nop                           #  54    0x80be7  1      OPC=nop              
  nop                           #  55    0x80be8  1      OPC=nop              
  nop                           #  56    0x80be9  1      OPC=nop              
  nop                           #  57    0x80bea  1      OPC=nop              
  nop                           #  58    0x80beb  1      OPC=nop              
  nop                           #  59    0x80bec  1      OPC=nop              
  nop                           #  60    0x80bed  1      OPC=nop              
  nop                           #  61    0x80bee  1      OPC=nop              
  nop                           #  62    0x80bef  1      OPC=nop              
.L_80bf0:                       #        0x80bf0  0      OPC=<label>          
  cmpq %r14, 0x58(%rdi)         #  63    0x80bf0  4      OPC=cmpq_m64_r64     
  je .L_80f40                   #  64    0x80bf4  6      OPC=je_label_1       
  testb $0x1, 0x8(%r14,%r12,1)  #  65    0x80bfa  6      OPC=testb_m8_imm8    
  jne .L_80c90                  #  66    0x80c00  6      OPC=jne_label_1      
  addq %rdx, %r12               #  67    0x80c06  3      OPC=addq_r64_r64     
  cmpq %r12, %r13               #  68    0x80c09  3      OPC=cmpq_r64_r64     
  ja .L_80c90                   #  69    0x80c0c  6      OPC=ja_label_1       
  movq 0x10(%r14), %r9          #  70    0x80c12  4      OPC=movq_r64_m64     
  movq 0x18(%r14), %rdx         #  71    0x80c16  4      OPC=movq_r64_m64     
  cmpq 0x18(%r9), %r14          #  72    0x80c1a  4      OPC=cmpq_r64_m64     
  jne .L_80f10                  #  73    0x80c1e  6      OPC=jne_label_1      
  cmpq 0x10(%rdx), %r14         #  74    0x80c24  4      OPC=cmpq_r64_m64     
  jne .L_80f10                  #  75    0x80c28  6      OPC=jne_label_1      
  cmpq $0x3ff, %rsi             #  76    0x80c2e  7      OPC=cmpq_r64_imm32   
  movq %rdx, 0x18(%r9)          #  77    0x80c35  4      OPC=movq_m64_r64     
  movq %r9, 0x10(%rdx)          #  78    0x80c39  4      OPC=movq_m64_r64     
  jbe .L_80c80                  #  79    0x80c3d  2      OPC=jbe_label        
  movq 0x20(%r14), %rdx         #  80    0x80c3f  4      OPC=movq_r64_m64     
  testq %rdx, %rdx              #  81    0x80c43  3      OPC=testq_r64_r64    
  je .L_80c80                   #  82    0x80c46  2      OPC=je_label         
  cmpq 0x28(%rdx), %r14         #  83    0x80c48  4      OPC=cmpq_r64_m64     
  jne .L_81078                  #  84    0x80c4c  6      OPC=jne_label_1      
  movq 0x28(%r14), %rcx         #  85    0x80c52  4      OPC=movq_r64_m64     
  cmpq 0x20(%rcx), %r14         #  86    0x80c56  4      OPC=cmpq_r64_m64     
  jne .L_81078                  #  87    0x80c5a  6      OPC=jne_label_1      
.L_80c60:                       #        0x80c60  0      OPC=<label>          
  cmpq $0x0, 0x20(%r9)          #  88    0x80c60  5      OPC=cmpq_m64_imm8    
  je .L_810a5                   #  89    0x80c65  6      OPC=je_label_1       
  movq 0x28(%r14), %rcx         #  90    0x80c6b  4      OPC=movq_r64_m64     
  movq %rax, %r8                #  91    0x80c6f  3      OPC=movq_r64_r64     
  movq %rcx, 0x28(%rdx)         #  92    0x80c72  4      OPC=movq_m64_r64     
  movq 0x28(%r14), %rcx         #  93    0x80c76  4      OPC=movq_r64_m64     
  movq %rdx, 0x20(%rcx)         #  94    0x80c7a  4      OPC=movq_m64_r64     
  xchgw %ax, %ax                #  95    0x80c7e  2      OPC=xchgw_ax_r16     
.L_80c80:                       #        0x80c80  0      OPC=<label>          
  movq %r12, %rdx               #  96    0x80c80  3      OPC=movq_r64_r64     
  jmpq .L_80b9c                 #  97    0x80c83  5      OPC=jmpq_label_1     
  nop                           #  98    0x80c88  1      OPC=nop              
  nop                           #  99    0x80c89  1      OPC=nop              
  nop                           #  100   0x80c8a  1      OPC=nop              
  nop                           #  101   0x80c8b  1      OPC=nop              
  nop                           #  102   0x80c8c  1      OPC=nop              
  nop                           #  103   0x80c8d  1      OPC=nop              
  nop                           #  104   0x80c8e  1      OPC=nop              
  nop                           #  105   0x80c8f  1      OPC=nop              
.L_80c90:                       #        0x80c90  0      OPC=<label>          
  leaq -0xf(%r13), %rsi         #  106   0x80c90  4      OPC=leaq_r64_m16     
  movq %rbp, %rdi               #  107   0x80c94  3      OPC=movq_r64_r64     
  movq %rdx, (%rsp)             #  108   0x80c97  4      OPC=movq_m64_r64     
  callq ._int_malloc            #  109   0x80c9b  5      OPC=callq_label      
  testq %rax, %rax              #  110   0x80ca0  3      OPC=testq_r64_r64    
  movq %rax, %r12               #  111   0x80ca3  3      OPC=movq_r64_r64     
  je .L_80dab                   #  112   0x80ca6  6      OPC=je_label_1       
  movq -0x8(%rax), %rcx         #  113   0x80cac  4      OPC=movq_r64_m64     
  leaq -0x10(%rax), %rax        #  114   0x80cb0  4      OPC=leaq_r64_m16     
  movq (%rsp), %rdx             #  115   0x80cb4  4      OPC=movq_r64_m64     
  cmpq %rax, %r14               #  116   0x80cb8  3      OPC=cmpq_r64_r64     
  je .L_80ee0                   #  117   0x80cbb  6      OPC=je_label_1       
  subq $0x8, %rdx               #  118   0x80cc1  4      OPC=subq_r64_imm8    
  movq %rdx, %rax               #  119   0x80cc5  3      OPC=movq_r64_r64     
  shrq $0x3, %rax               #  120   0x80cc8  4      OPC=shrq_r64_imm8    
  cmpl $0x2, %eax               #  121   0x80ccc  3      OPC=cmpl_r32_imm8    
  jbe .L_81110                  #  122   0x80ccf  6      OPC=jbe_label_1      
  cmpl $0x9, %eax               #  123   0x80cd5  3      OPC=cmpl_r32_imm8    
  ja .L_80ec8                   #  124   0x80cd8  6      OPC=ja_label_1       
  movq 0x10(%rbx), %rdx         #  125   0x80cde  4      OPC=movq_r64_m64     
  cmpl $0x4, %eax               #  126   0x80ce2  3      OPC=cmpl_r32_imm8    
  movq %rdx, (%r12)             #  127   0x80ce5  4      OPC=movq_m64_r64     
  movq 0x18(%rbx), %rdx         #  128   0x80ce9  4      OPC=movq_r64_m64     
  movq %rdx, 0x8(%r12)          #  129   0x80ced  5      OPC=movq_m64_r64     
  movq 0x20(%rbx), %rdx         #  130   0x80cf2  4      OPC=movq_r64_m64     
  movq %rdx, 0x10(%r12)         #  131   0x80cf6  5      OPC=movq_m64_r64     
  jbe .L_80d40                  #  132   0x80cfb  2      OPC=jbe_label        
  movq 0x28(%rbx), %rdx         #  133   0x80cfd  4      OPC=movq_r64_m64     
  cmpl $0x6, %eax               #  134   0x80d01  3      OPC=cmpl_r32_imm8    
  movq %rdx, 0x18(%r12)         #  135   0x80d04  5      OPC=movq_m64_r64     
  movq 0x30(%rbx), %rdx         #  136   0x80d09  4      OPC=movq_r64_m64     
  movq %rdx, 0x20(%r12)         #  137   0x80d0d  5      OPC=movq_m64_r64     
  jbe .L_80d40                  #  138   0x80d12  2      OPC=jbe_label        
  movq 0x38(%rbx), %rdx         #  139   0x80d14  4      OPC=movq_r64_m64     
  cmpl $0x9, %eax               #  140   0x80d18  3      OPC=cmpl_r32_imm8    
  movq %rdx, 0x28(%r12)         #  141   0x80d1b  5      OPC=movq_m64_r64     
  movq 0x40(%rbx), %rdx         #  142   0x80d20  4      OPC=movq_r64_m64     
  movq %rdx, 0x30(%r12)         #  143   0x80d24  5      OPC=movq_m64_r64     
  jne .L_80d40                  #  144   0x80d29  2      OPC=jne_label        
  movq 0x48(%rbx), %rax         #  145   0x80d2b  4      OPC=movq_r64_m64     
  movq %rax, 0x38(%r12)         #  146   0x80d2f  5      OPC=movq_m64_r64     
  movq 0x50(%rbx), %rax         #  147   0x80d34  4      OPC=movq_r64_m64     
  movq %rax, 0x40(%r12)         #  148   0x80d38  5      OPC=movq_m64_r64     
  nop                           #  149   0x80d3d  1      OPC=nop              
  nop                           #  150   0x80d3e  1      OPC=nop              
  nop                           #  151   0x80d3f  1      OPC=nop              
.L_80d40:                       #        0x80d40  0      OPC=<label>          
  movq %rbx, %rsi               #  152   0x80d40  3      OPC=movq_r64_r64     
  movq %rbp, %rdi               #  153   0x80d43  3      OPC=movq_r64_r64     
  movl $0x1, %edx               #  154   0x80d46  5      OPC=movl_r32_imm32   
  callq ._int_free              #  155   0x80d4b  5      OPC=callq_label      
  addq $0x38, %rsp              #  156   0x80d50  4      OPC=addq_r64_imm8    
  movq %r12, %rax               #  157   0x80d54  3      OPC=movq_r64_r64     
  popq %rbx                     #  158   0x80d57  1      OPC=popq_r64_1       
  popq %rbp                     #  159   0x80d58  1      OPC=popq_r64_1       
  popq %r12                     #  160   0x80d59  2      OPC=popq_r64_1       
  popq %r13                     #  161   0x80d5b  2      OPC=popq_r64_1       
  popq %r14                     #  162   0x80d5d  2      OPC=popq_r64_1       
  popq %r15                     #  163   0x80d5f  2      OPC=popq_r64_1       
  retq                          #  164   0x80d61  1      OPC=retq             
  nop                           #  165   0x80d62  1      OPC=nop              
  nop                           #  166   0x80d63  1      OPC=nop              
  nop                           #  167   0x80d64  1      OPC=nop              
  nop                           #  168   0x80d65  1      OPC=nop              
  nop                           #  169   0x80d66  1      OPC=nop              
  nop                           #  170   0x80d67  1      OPC=nop              
.L_80d68:                       #        0x80d68  0      OPC=<label>          
  testq %rbp, %rbp              #  171   0x80d68  3      OPC=testq_r64_r64    
  leaq 0x10(%rsi), %rdi         #  172   0x80d6b  4      OPC=leaq_r64_m16     
  movl 0x34045a(%rip), %r12d    #  173   0x80d6f  7      OPC=movl_r32_m32     
  leaq 0x10a9d7(%rip), %r13     #  174   0x80d76  7      OPC=leaq_r64_m16     
  jne .L_80e22                  #  175   0x80d7d  6      OPC=jne_label_1      
  nop                           #  176   0x80d83  1      OPC=nop              
  nop                           #  177   0x80d84  1      OPC=nop              
  nop                           #  178   0x80d85  1      OPC=nop              
  nop                           #  179   0x80d86  1      OPC=nop              
  nop                           #  180   0x80d87  1      OPC=nop              
.L_80d88:                       #        0x80d88  0      OPC=<label>          
  movl %r12d, %esi              #  181   0x80d88  3      OPC=movl_r32_r32     
  andl $0x5, %esi               #  182   0x80d8b  3      OPC=andl_r32_imm8    
  cmpl $0x5, %esi               #  183   0x80d8e  3      OPC=cmpl_r32_imm8    
  je .L_80f90                   #  184   0x80d91  6      OPC=je_label_1       
  testb $0x1, %r12b             #  185   0x80d97  4      OPC=testb_r8_imm8    
  jne .L_80e30                  #  186   0x80d9b  6      OPC=jne_label_1      
  andl $0x2, %r12d              #  187   0x80da1  4      OPC=andl_r32_imm8    
  jne .L_80f3a                  #  188   0x80da5  6      OPC=jne_label_1      
.L_80dab:                       #        0x80dab  0      OPC=<label>          
  addq $0x38, %rsp              #  189   0x80dab  4      OPC=addq_r64_imm8    
  xorl %eax, %eax               #  190   0x80daf  2      OPC=xorl_r32_r32     
  popq %rbx                     #  191   0x80db1  1      OPC=popq_r64_1       
  popq %rbp                     #  192   0x80db2  1      OPC=popq_r64_1       
  popq %r12                     #  193   0x80db3  2      OPC=popq_r64_1       
  popq %r13                     #  194   0x80db5  2      OPC=popq_r64_1       
  popq %r14                     #  195   0x80db7  2      OPC=popq_r64_1       
  popq %r15                     #  196   0x80db9  2      OPC=popq_r64_1       
  retq                          #  197   0x80dbb  1      OPC=retq             
  nop                           #  198   0x80dbc  1      OPC=nop              
  nop                           #  199   0x80dbd  1      OPC=nop              
  nop                           #  200   0x80dbe  1      OPC=nop              
  nop                           #  201   0x80dbf  1      OPC=nop              
.L_80dc0:                       #        0x80dc0  0      OPC=<label>          
  leaq 0x340e79(%rip), %rdx     #  202   0x80dc0  7      OPC=leaq_r64_m16     
  andl $0x7, %r8d               #  203   0x80dc7  4      OPC=andl_r32_imm8    
  leaq (%rbx,%r13,1), %rsi      #  204   0x80dcb  4      OPC=leaq_r64_m16     
  cmpq %rdx, %rbp               #  205   0x80dcf  3      OPC=cmpq_r64_r64     
  je .L_80f00                   #  206   0x80dd2  6      OPC=je_label_1       
  orq $0x4, %r13                #  207   0x80dd8  4      OPC=orq_r64_imm8     
  movl $0x4, %r15d              #  208   0x80ddc  6      OPC=movl_r32_imm32   
  orq %r8, %r13                 #  209   0x80de2  3      OPC=orq_r64_r64      
.L_80de5:                       #        0x80de5  0      OPC=<label>          
  movq %rax, %r8                #  210   0x80de5  3      OPC=movq_r64_r64     
  movq %r13, 0x8(%rbx)          #  211   0x80de8  4      OPC=movq_m64_r64     
  movl $0x1, %edx               #  212   0x80dec  5      OPC=movl_r32_imm32   
  orq $0x1, %r8                 #  213   0x80df1  4      OPC=orq_r64_imm8     
  movq %rbp, %rdi               #  214   0x80df5  3      OPC=movq_r64_r64     
  orq %r8, %r15                 #  215   0x80df8  3      OPC=orq_r64_r64      
  movq %r15, 0x8(%rsi)          #  216   0x80dfb  4      OPC=movq_m64_r64     
  orq $0x1, 0x8(%rsi,%rax,1)    #  217   0x80dff  6      OPC=orq_m64_imm8     
  callq ._int_free              #  218   0x80e05  5      OPC=callq_label      
  jmpq .L_80bd3                 #  219   0x80e0a  5      OPC=jmpq_label_1     
  nop                           #  220   0x80e0f  1      OPC=nop              
.L_80e10:                       #        0x80e10  0      OPC=<label>          
  leaq 0x10a93d(%rip), %r13     #  221   0x80e10  7      OPC=leaq_r64_m16     
.L_80e17:                       #        0x80e17  0      OPC=<label>          
  movl 0x3403b2(%rip), %r12d    #  222   0x80e17  7      OPC=movl_r32_m32     
  leaq 0x10(%rbx), %rdi         #  223   0x80e1e  4      OPC=leaq_r64_m16     
.L_80e22:                       #        0x80e22  0      OPC=<label>          
  orl $0x4, 0x4(%rbp)           #  224   0x80e22  4      OPC=orl_m32_imm8     
  jmpq .L_80d88                 #  225   0x80e26  5      OPC=jmpq_label_1     
  nop                           #  226   0x80e2b  1      OPC=nop              
  nop                           #  227   0x80e2c  1      OPC=nop              
  nop                           #  228   0x80e2d  1      OPC=nop              
  nop                           #  229   0x80e2e  1      OPC=nop              
  nop                           #  230   0x80e2f  1      OPC=nop              
.L_80e30:                       #        0x80e30  0      OPC=<label>          
  leaq 0x10(%rsp), %rbp         #  231   0x80e30  5      OPC=leaq_r64_m16     
  leaq 0x20(%rsp), %rsi         #  232   0x80e35  5      OPC=leaq_r64_m16     
  xorl %ecx, %ecx               #  233   0x80e3a  2      OPC=xorl_r32_r32     
  movl $0x10, %edx              #  234   0x80e3c  5      OPC=movl_r32_imm32   
  movb $0x0, 0x20(%rsp)         #  235   0x80e41  5      OPC=movb_m8_imm8     
  callq ._itoa_word             #  236   0x80e46  5      OPC=callq_label      
  cmpq %rbp, %rax               #  237   0x80e4b  3      OPC=cmpq_r64_r64     
  movq %rax, %rbx               #  238   0x80e4e  3      OPC=movq_r64_r64     
  jbe .L_80e78                  #  239   0x80e51  2      OPC=jbe_label        
  movq %rax, %rdx               #  240   0x80e53  3      OPC=movq_r64_r64     
  movq %rax, %rdi               #  241   0x80e56  3      OPC=movq_r64_r64     
  movl $0x30, %esi              #  242   0x80e59  5      OPC=movl_r32_imm32   
  subq %rbp, %rdx               #  243   0x80e5e  3      OPC=subq_r64_r64     
  leaq -0x1(%rax), %r14         #  244   0x80e61  4      OPC=leaq_r64_m16     
  subq %rdx, %rdi               #  245   0x80e65  3      OPC=subq_r64_r64     
  callq .__GI_memset            #  246   0x80e68  5      OPC=callq_label      
  leaq 0xf(%rsp), %rax          #  247   0x80e6d  5      OPC=leaq_r64_m16     
  subq %r14, %rax               #  248   0x80e72  3      OPC=subq_r64_r64     
  addq %rax, %rbx               #  249   0x80e75  3      OPC=addq_r64_r64     
.L_80e78:                       #        0x80e78  0      OPC=<label>          
  movq 0x345919(%rip), %rax     #  250   0x80e78  7      OPC=movq_r64_m64     
  leaq 0x10a7d5(%rip), %rdx     #  251   0x80e7f  7      OPC=leaq_r64_m16     
  movl %r12d, %edi              #  252   0x80e86  3      OPC=movl_r32_r32     
  leaq 0x10dc78(%rip), %rsi     #  253   0x80e89  7      OPC=leaq_r64_m16     
  movq %rbx, %r8                #  254   0x80e90  3      OPC=movq_r64_r64     
  movq %r13, %rcx               #  255   0x80e93  3      OPC=movq_r64_r64     
  movq (%rax), %rax             #  256   0x80e96  3      OPC=movq_r64_m64     
  testq %rax, %rax              #  257   0x80e99  3      OPC=testq_r64_r64    
  cmovneq %rax, %rdx            #  258   0x80e9c  4      OPC=cmovneq_r64_r64  
  xorl %eax, %eax               #  259   0x80ea0  2      OPC=xorl_r32_r32     
  andl $0x2, %edi               #  260   0x80ea2  3      OPC=andl_r32_imm8    
  callq .__libc_message         #  261   0x80ea5  5      OPC=callq_label      
  xorl %eax, %eax               #  262   0x80eaa  2      OPC=xorl_r32_r32     
  jmpq .L_80bd7                 #  263   0x80eac  5      OPC=jmpq_label_1     
  nop                           #  264   0x80eb1  1      OPC=nop              
  nop                           #  265   0x80eb2  1      OPC=nop              
  nop                           #  266   0x80eb3  1      OPC=nop              
  nop                           #  267   0x80eb4  1      OPC=nop              
  nop                           #  268   0x80eb5  1      OPC=nop              
  nop                           #  269   0x80eb6  1      OPC=nop              
  nop                           #  270   0x80eb7  1      OPC=nop              
.L_80eb8:                       #        0x80eb8  0      OPC=<label>          
  leaq 0x10a8b1(%rip), %r13     #  271   0x80eb8  7      OPC=leaq_r64_m16     
  jmpq .L_80e17                 #  272   0x80ebf  5      OPC=jmpq_label_1     
  nop                           #  273   0x80ec4  1      OPC=nop              
  nop                           #  274   0x80ec5  1      OPC=nop              
  nop                           #  275   0x80ec6  1      OPC=nop              
  nop                           #  276   0x80ec7  1      OPC=nop              
.L_80ec8:                       #        0x80ec8  0      OPC=<label>          
  leaq 0x10(%rbx), %rsi         #  277   0x80ec8  4      OPC=leaq_r64_m16     
  movq %r12, %rdi               #  278   0x80ecc  3      OPC=movq_r64_r64     
  callq .__GI_memcpy            #  279   0x80ecf  5      OPC=callq_label      
  jmpq .L_80d40                 #  280   0x80ed4  5      OPC=jmpq_label_1     
  nop                           #  281   0x80ed9  1      OPC=nop              
  nop                           #  282   0x80eda  1      OPC=nop              
  nop                           #  283   0x80edb  1      OPC=nop              
  nop                           #  284   0x80edc  1      OPC=nop              
  nop                           #  285   0x80edd  1      OPC=nop              
  nop                           #  286   0x80ede  1      OPC=nop              
  nop                           #  287   0x80edf  1      OPC=nop              
.L_80ee0:                       #        0x80ee0  0      OPC=<label>          
  andq $0xf8, %rcx              #  288   0x80ee0  4      OPC=andq_r64_imm8    
  addq %rcx, %rdx               #  289   0x80ee4  3      OPC=addq_r64_r64     
  cmpq %rdx, %r13               #  290   0x80ee7  3      OPC=cmpq_r64_r64     
  ja .L_810f1                   #  291   0x80eea  6      OPC=ja_label_1       
  movq 0x8(%rbx), %r8           #  292   0x80ef0  4      OPC=movq_r64_m64     
  jmpq .L_80b9c                 #  293   0x80ef4  5      OPC=jmpq_label_1     
  nop                           #  294   0x80ef9  1      OPC=nop              
  nop                           #  295   0x80efa  1      OPC=nop              
  nop                           #  296   0x80efb  1      OPC=nop              
  nop                           #  297   0x80efc  1      OPC=nop              
  nop                           #  298   0x80efd  1      OPC=nop              
  nop                           #  299   0x80efe  1      OPC=nop              
  nop                           #  300   0x80eff  1      OPC=nop              
.L_80f00:                       #        0x80f00  0      OPC=<label>          
  orq %r8, %r13                 #  301   0x80f00  3      OPC=orq_r64_r64      
  jmpq .L_80de5                 #  302   0x80f03  5      OPC=jmpq_label_1     
  nop                           #  303   0x80f08  1      OPC=nop              
  nop                           #  304   0x80f09  1      OPC=nop              
  nop                           #  305   0x80f0a  1      OPC=nop              
  nop                           #  306   0x80f0b  1      OPC=nop              
  nop                           #  307   0x80f0c  1      OPC=nop              
  nop                           #  308   0x80f0d  1      OPC=nop              
  nop                           #  309   0x80f0e  1      OPC=nop              
  nop                           #  310   0x80f0f  1      OPC=nop              
.L_80f10:                       #        0x80f10  0      OPC=<label>          
  movl 0x3402b9(%rip), %r9d     #  311   0x80f10  7      OPC=movl_r32_m32     
  orl $0x4, 0x4(%rbp)           #  312   0x80f17  4      OPC=orl_m32_imm8     
  movl %r9d, %eax               #  313   0x80f1b  3      OPC=movl_r32_r32     
  andl $0x5, %eax               #  314   0x80f1e  3      OPC=andl_r32_imm8    
  cmpl $0x5, %eax               #  315   0x80f21  3      OPC=cmpl_r32_imm8    
  je .L_81054                   #  316   0x80f24  6      OPC=je_label_1       
  testb $0x1, %r9b              #  317   0x80f2a  4      OPC=testb_r8_imm8    
  jne .L_80fae                  #  318   0x80f2e  2      OPC=jne_label        
  andl $0x2, %r9d               #  319   0x80f30  4      OPC=andl_r32_imm8    
  je .L_80c80                   #  320   0x80f34  6      OPC=je_label_1       
.L_80f3a:                       #        0x80f3a  0      OPC=<label>          
  callq .abort                  #  321   0x80f3a  5      OPC=callq_label      
  nop                           #  322   0x80f3f  1      OPC=nop              
.L_80f40:                       #        0x80f40  0      OPC=<label>          
  leaq 0x20(%r13), %rcx         #  323   0x80f40  4      OPC=leaq_r64_m16     
  addq %rdx, %r12               #  324   0x80f44  3      OPC=addq_r64_r64     
  cmpq %rcx, %r12               #  325   0x80f47  3      OPC=cmpq_r64_r64     
  jb .L_80c90                   #  326   0x80f4a  6      OPC=jb_label_1       
  leaq 0x340ce9(%rip), %rdx     #  327   0x80f50  7      OPC=leaq_r64_m16     
  andl $0x7, %eax               #  328   0x80f57  3      OPC=andl_r32_imm8    
  cmpq %rdx, %rdi               #  329   0x80f5a  3      OPC=cmpq_r64_r64     
  movl $0x4, %edx               #  330   0x80f5d  5      OPC=movl_r32_imm32   
  cmovneq %rdx, %r15            #  331   0x80f62  4      OPC=cmovneq_r64_r64  
  orq %r13, %rax                #  332   0x80f66  3      OPC=orq_r64_r64      
  subq %r13, %r12               #  333   0x80f69  3      OPC=subq_r64_r64     
  orq %rax, %r15                #  334   0x80f6c  3      OPC=orq_r64_r64      
  leaq (%rbx,%r13,1), %rax      #  335   0x80f6f  4      OPC=leaq_r64_m16     
  orq $0x1, %r12                #  336   0x80f73  4      OPC=orq_r64_imm8     
  movq %r15, 0x8(%rbx)          #  337   0x80f77  4      OPC=movq_m64_r64     
  movq %rax, 0x58(%rdi)         #  338   0x80f7b  4      OPC=movq_m64_r64     
  movq %r12, 0x8(%rax)          #  339   0x80f7f  4      OPC=movq_m64_r64     
  leaq 0x10(%rbx), %rax         #  340   0x80f83  4      OPC=leaq_r64_m16     
  jmpq .L_80bd7                 #  341   0x80f87  5      OPC=jmpq_label_1     
  nop                           #  342   0x80f8c  1      OPC=nop              
  nop                           #  343   0x80f8d  1      OPC=nop              
  nop                           #  344   0x80f8e  1      OPC=nop              
  nop                           #  345   0x80f8f  1      OPC=nop              
.L_80f90:                       #        0x80f90  0      OPC=<label>          
  movl %r12d, %edi              #  346   0x80f90  3      OPC=movl_r32_r32     
  leaq 0x10c3b5(%rip), %rsi     #  347   0x80f93  7      OPC=leaq_r64_m16     
  xorl %eax, %eax               #  348   0x80f9a  2      OPC=xorl_r32_r32     
  andl $0x2, %edi               #  349   0x80f9c  3      OPC=andl_r32_imm8    
  movq %r13, %rdx               #  350   0x80f9f  3      OPC=movq_r64_r64     
  callq .__libc_message         #  351   0x80fa2  5      OPC=callq_label      
  xorl %eax, %eax               #  352   0x80fa7  2      OPC=xorl_r32_r32     
  jmpq .L_80bd7                 #  353   0x80fa9  5      OPC=jmpq_label_1     
.L_80fae:                       #        0x80fae  0      OPC=<label>          
  leaq 0x10(%rsp), %r10         #  354   0x80fae  5      OPC=leaq_r64_m16     
  leaq 0x20(%rsp), %rsi         #  355   0x80fb3  5      OPC=leaq_r64_m16     
  xorl %ecx, %ecx               #  356   0x80fb8  2      OPC=xorl_r32_r32     
  movl $0x10, %edx              #  357   0x80fba  5      OPC=movl_r32_imm32   
  movq %r14, %rdi               #  358   0x80fbf  3      OPC=movq_r64_r64     
  movl %r9d, 0xc(%rsp)          #  359   0x80fc2  5      OPC=movl_m32_r32     
  movq %r10, (%rsp)             #  360   0x80fc7  4      OPC=movq_m64_r64     
  movb $0x0, 0x20(%rsp)         #  361   0x80fcb  5      OPC=movb_m8_imm8     
  callq ._itoa_word             #  362   0x80fd0  5      OPC=callq_label      
  movq (%rsp), %r10             #  363   0x80fd5  4      OPC=movq_r64_m64     
  movq %rax, %r8                #  364   0x80fd9  3      OPC=movq_r64_r64     
  movl 0xc(%rsp), %r9d          #  365   0x80fdc  5      OPC=movl_r32_m32     
  cmpq %r10, %rax               #  366   0x80fe1  3      OPC=cmpq_r64_r64     
  jbe .L_81018                  #  367   0x80fe4  2      OPC=jbe_label        
  movq %rax, %rdx               #  368   0x80fe6  3      OPC=movq_r64_r64     
  movq %rax, %rdi               #  369   0x80fe9  3      OPC=movq_r64_r64     
  movl $0x30, %esi              #  370   0x80fec  5      OPC=movl_r32_imm32   
  subq %r10, %rdx               #  371   0x80ff1  3      OPC=subq_r64_r64     
  leaq -0x1(%rax), %r14         #  372   0x80ff4  4      OPC=leaq_r64_m16     
  movq %rax, (%rsp)             #  373   0x80ff8  4      OPC=movq_m64_r64     
  subq %rdx, %rdi               #  374   0x80ffc  3      OPC=subq_r64_r64     
  callq .__GI_memset            #  375   0x80fff  5      OPC=callq_label      
  leaq 0xf(%rsp), %rax          #  376   0x81004  5      OPC=leaq_r64_m16     
  movq (%rsp), %r8              #  377   0x81009  4      OPC=movq_r64_m64     
  movl 0xc(%rsp), %r9d          #  378   0x8100d  5      OPC=movl_r32_m32     
  subq %r14, %rax               #  379   0x81012  3      OPC=subq_r64_r64     
  addq %rax, %r8                #  380   0x81015  3      OPC=addq_r64_r64     
.L_81018:                       #        0x81018  0      OPC=<label>          
  movq 0x345779(%rip), %rax     #  381   0x81018  7      OPC=movq_r64_m64     
  leaq 0x10a635(%rip), %rdx     #  382   0x8101f  7      OPC=leaq_r64_m16     
  movl %r9d, %edi               #  383   0x81026  3      OPC=movl_r32_r32     
  leaq 0x10a652(%rip), %rcx     #  384   0x81029  7      OPC=leaq_r64_m16     
  leaq 0x10dad1(%rip), %rsi     #  385   0x81030  7      OPC=leaq_r64_m16     
  movq (%rax), %rax             #  386   0x81037  3      OPC=movq_r64_m64     
  testq %rax, %rax              #  387   0x8103a  3      OPC=testq_r64_r64    
  cmovneq %rax, %rdx            #  388   0x8103d  4      OPC=cmovneq_r64_r64  
  andl $0x2, %edi               #  389   0x81041  3      OPC=andl_r32_imm8    
  xorl %eax, %eax               #  390   0x81044  2      OPC=xorl_r32_r32     
  callq .__libc_message         #  391   0x81046  5      OPC=callq_label      
  movq 0x8(%rbx), %r8           #  392   0x8104b  4      OPC=movq_r64_m64     
  jmpq .L_80c80                 #  393   0x8104f  5      OPC=jmpq_label_1     
.L_81054:                       #        0x81054  0      OPC=<label>          
  movl %r9d, %edi               #  394   0x81054  3      OPC=movl_r32_r32     
  leaq 0x10a624(%rip), %rdx     #  395   0x81057  7      OPC=leaq_r64_m16     
  leaq 0x10c2ea(%rip), %rsi     #  396   0x8105e  7      OPC=leaq_r64_m16     
  andl $0x2, %edi               #  397   0x81065  3      OPC=andl_r32_imm8    
  xorl %eax, %eax               #  398   0x81068  2      OPC=xorl_r32_r32     
  callq .__libc_message         #  399   0x8106a  5      OPC=callq_label      
  movq 0x8(%rbx), %r8           #  400   0x8106f  4      OPC=movq_r64_m64     
  jmpq .L_80c80                 #  401   0x81073  5      OPC=jmpq_label_1     
.L_81078:                       #        0x81078  0      OPC=<label>          
  movl 0x340152(%rip), %edi     #  402   0x81078  6      OPC=movl_r32_m32     
  leaq 0x10dacb(%rip), %rsi     #  403   0x8107e  7      OPC=leaq_r64_m16     
  movq %r14, %rdx               #  404   0x81085  3      OPC=movq_r64_r64     
  movq %rbp, %rcx               #  405   0x81088  3      OPC=movq_r64_r64     
  movq %r9, (%rsp)              #  406   0x8108b  4      OPC=movq_m64_r64     
  callq .malloc_printerr        #  407   0x8108f  5      OPC=callq_label      
  movq 0x20(%r14), %rdx         #  408   0x81094  4      OPC=movq_r64_m64     
  movq 0x8(%rbx), %rax          #  409   0x81098  4      OPC=movq_r64_m64     
  movq (%rsp), %r9              #  410   0x8109c  4      OPC=movq_r64_m64     
  jmpq .L_80c60                 #  411   0x810a0  5      OPC=jmpq_label_1     
.L_810a5:                       #        0x810a5  0      OPC=<label>          
  cmpq %rdx, %r14               #  412   0x810a5  3      OPC=cmpq_r64_r64     
  je .L_8112f                   #  413   0x810a8  6      OPC=je_label_1       
  movq %rdx, 0x20(%r9)          #  414   0x810ae  4      OPC=movq_m64_r64     
  movq 0x28(%r14), %rdx         #  415   0x810b2  4      OPC=movq_r64_m64     
  movq %rax, %r8                #  416   0x810b6  3      OPC=movq_r64_r64     
  movq %rdx, 0x28(%r9)          #  417   0x810b9  4      OPC=movq_m64_r64     
  movq 0x20(%r14), %rdx         #  418   0x810bd  4      OPC=movq_r64_m64     
  movq %r9, 0x28(%rdx)          #  419   0x810c1  4      OPC=movq_m64_r64     
  movq 0x28(%r14), %rdx         #  420   0x810c5  4      OPC=movq_r64_m64     
  movq %r9, 0x20(%rdx)          #  421   0x810c9  4      OPC=movq_m64_r64     
  jmpq .L_80c80                 #  422   0x810cd  5      OPC=jmpq_label_1     
.L_810d2:                       #        0x810d2  0      OPC=<label>          
  leaq 0x10a881(%rip), %rcx     #  423   0x810d2  7      OPC=leaq_r64_m16     
  leaq 0x10a529(%rip), %rsi     #  424   0x810d9  7      OPC=leaq_r64_m16     
  leaq 0x10a6a6(%rip), %rdi     #  425   0x810e0  7      OPC=leaq_r64_m16     
  movl $0x10a4, %edx            #  426   0x810e7  5      OPC=movl_r32_imm32   
  callq .__malloc_assert        #  427   0x810ec  5      OPC=callq_label      
.L_810f1:                       #        0x810f1  0      OPC=<label>          
  leaq 0x10a862(%rip), %rcx     #  428   0x810f1  7      OPC=leaq_r64_m16     
  leaq 0x10a50a(%rip), %rsi     #  429   0x810f8  7      OPC=leaq_r64_m16     
  leaq 0x10df7a(%rip), %rdi     #  430   0x810ff  7      OPC=leaq_r64_m16     
  movl $0x1110, %edx            #  431   0x81106  5      OPC=movl_r32_imm32   
  callq .__malloc_assert        #  432   0x8110b  5      OPC=callq_label      
.L_81110:                       #        0x81110  0      OPC=<label>          
  leaq 0x10a843(%rip), %rcx     #  433   0x81110  7      OPC=leaq_r64_m16     
  leaq 0x10a4eb(%rip), %rsi     #  434   0x81117  7      OPC=leaq_r64_m16     
  leaq 0x10a681(%rip), %rdi     #  435   0x8111e  7      OPC=leaq_r64_m16     
  movl $0x10ec, %edx            #  436   0x81125  5      OPC=movl_r32_imm32   
  callq .__malloc_assert        #  437   0x8112a  5      OPC=callq_label      
.L_8112f:                       #        0x8112f  0      OPC=<label>          
  movq %r9, 0x28(%r9)           #  438   0x8112f  4      OPC=movq_m64_r64     
  movq %r9, 0x20(%r9)           #  439   0x81133  4      OPC=movq_m64_r64     
  movq %rax, %r8                #  440   0x81137  3      OPC=movq_r64_r64     
  jmpq .L_80c80                 #  441   0x8113a  5      OPC=jmpq_label_1     
  nop                           #  442   0x8113f  1      OPC=nop              
                                                                              
.size _int_realloc, .-_int_realloc

