  .text
  .globl tr_reallochook
  .type tr_reallochook, @function

#! file-offset 0x86a40
#! rip-offset  0x86a40
#! capacity    560 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
.tr_reallochook:                    #        0x86a40  0      OPC=<label>           
  pushq %r15                        #  1     0x86a40  2      OPC=pushq_r64_1       
  pushq %r14                        #  2     0x86a42  2      OPC=pushq_r64_1       
  movq %rsi, %r14                   #  3     0x86a44  3      OPC=movq_r64_r64      
  pushq %r13                        #  4     0x86a47  2      OPC=pushq_r64_1       
  pushq %r12                        #  5     0x86a49  2      OPC=pushq_r64_1       
  movq %rdi, %r13                   #  6     0x86a4b  3      OPC=movq_r64_r64      
  pushq %rbp                        #  7     0x86a4e  1      OPC=pushq_r64_1       
  pushq %rbx                        #  8     0x86a4f  1      OPC=pushq_r64_1       
  movq %rdx, %rbp                   #  9     0x86a50  3      OPC=movq_r64_r64      
  subq $0x28, %rsp                  #  10    0x86a53  4      OPC=subq_r64_imm8     
  testq %rdx, %rdx                  #  11    0x86a57  3      OPC=testq_r64_r64     
  je .L_86c60                       #  12    0x86a5a  6      OPC=je_label_1        
  xorl %ecx, %ecx                   #  13    0x86a60  2      OPC=xorl_r32_r32      
  xorl %edx, %edx                   #  14    0x86a62  2      OPC=xorl_r32_r32      
  movq %rsp, %rsi                   #  15    0x86a64  3      OPC=movq_r64_r64      
  movq %rbp, %rdi                   #  16    0x86a67  3      OPC=movq_r64_r64      
  movq %rsp, %rbx                   #  17    0x86a6a  3      OPC=movq_r64_r64      
  callq ._dl_addr                   #  18    0x86a6d  5      OPC=callq_label       
  testl %eax, %eax                  #  19    0x86a72  2      OPC=testl_r32_r32     
  movl $0x0, %eax                   #  20    0x86a74  5      OPC=movl_r32_imm32    
  movl $0x1, %esi                   #  21    0x86a79  5      OPC=movl_r32_imm32    
  cmoveq %rax, %rbx                 #  22    0x86a7e  4      OPC=cmoveq_r64_r64    
  cmpl $0x0, 0x340177(%rip)         #  23    0x86a82  7      OPC=cmpl_m32_imm8     
  je .L_86a97                       #  24    0x86a89  2      OPC=je_label          
  lock                              #  25    0x86a8b  1      OPC=lock              
  cmpxchgl %esi, 0x33d05d(%rip)     #  26    0x86a8c  7      OPC=cmpxchgl_m32_r32  
  nop                               #  27    0x86a93  1      OPC=nop               
  jne .L_86aa0                      #  28    0x86a94  2      OPC=jne_label         
  jmpq .L_86aba                     #  29    0x86a96  2      OPC=jmpq_label        
.L_86a97:                           #        0x86a98  0      OPC=<label>           
  cmpxchgl %esi, 0x33d052(%rip)     #  30    0x86a98  7      OPC=cmpxchgl_m32_r32  
  je .L_86aba                       #  31    0x86a9f  2      OPC=je_label          
.L_86aa0:                           #        0x86aa1  0      OPC=<label>           
  leaq 0x33d049(%rip), %rdi         #  32    0x86aa1  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  33    0x86aa8  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  34    0x86aaf  5      OPC=callq_label       
  addq $0x80, %rsp                  #  35    0x86ab4  7      OPC=addq_r64_imm32    
.L_86aba:                           #        0x86abb  0      OPC=<label>           
  movq 0x33d027(%rip), %rax         #  36    0x86abb  7      OPC=movq_r64_m64      
  movq 0x33a438(%rip), %r15         #  37    0x86ac2  7      OPC=movq_r64_m64      
  movq 0x33a429(%rip), %rcx         #  38    0x86ac9  7      OPC=movq_r64_m64      
  movq %rax, (%r15)                 #  39    0x86ad0  3      OPC=movq_m64_r64      
  movq 0x33d007(%rip), %rax         #  40    0x86ad3  7      OPC=movq_r64_m64      
  movq %rax, (%rcx)                 #  41    0x86ada  3      OPC=movq_m64_r64      
  movq 0x33cff5(%rip), %rax         #  42    0x86add  7      OPC=movq_r64_m64      
  movq 0x33a4ee(%rip), %rcx         #  43    0x86ae4  7      OPC=movq_r64_m64      
  testq %rax, %rax                  #  44    0x86aeb  3      OPC=testq_r64_r64     
  movq %rax, (%rcx)                 #  45    0x86aee  3      OPC=movq_m64_r64      
  je .L_86c00                       #  46    0x86af1  6      OPC=je_label_1        
  movq %rbp, %rdx                   #  47    0x86af7  3      OPC=movq_r64_r64      
  movq %r14, %rsi                   #  48    0x86afa  3      OPC=movq_r64_r64      
  movq %r13, %rdi                   #  49    0x86afd  3      OPC=movq_r64_r64      
  callq %rax                        #  50    0x86b00  2      OPC=callq_r64         
  movq %rax, %r12                   #  51    0x86b02  3      OPC=movq_r64_r64      
.L_86b04:                           #        0x86b05  0      OPC=<label>           
  leaq 0x405(%rip), %rax            #  52    0x86b05  7      OPC=leaq_r64_m16      
  leaq 0x15e(%rip), %rdx            #  53    0x86b0c  7      OPC=leaq_r64_m16      
  leaq -0xd9(%rip), %rcx            #  54    0x86b13  7      OPC=leaq_r64_m16      
  movq %rbx, %rsi                   #  55    0x86b1a  3      OPC=movq_r64_r64      
  movq %rbp, %rdi                   #  56    0x86b1d  3      OPC=movq_r64_r64      
  movq %rax, (%r15)                 #  57    0x86b20  3      OPC=movq_m64_r64      
  movq 0x33a3cf(%rip), %rax         #  58    0x86b23  7      OPC=movq_r64_m64      
  movq %rdx, (%rax)                 #  59    0x86b2a  3      OPC=movq_m64_r64      
  movq 0x33a4a5(%rip), %rax         #  60    0x86b2d  7      OPC=movq_r64_m64      
  movq %rcx, (%rax)                 #  61    0x86b34  3      OPC=movq_m64_r64      
  callq .tr_where                   #  62    0x86b37  5      OPC=callq_label       
  testq %r12, %r12                  #  63    0x86b3c  3      OPC=testq_r64_r64     
  je .L_86bd8                       #  64    0x86b3f  6      OPC=je_label_1        
  testq %r13, %r13                  #  65    0x86b45  3      OPC=testq_r64_r64     
  je .L_86c18                       #  66    0x86b48  6      OPC=je_label_1        
  movq 0x33cfac(%rip), %rdi         #  67    0x86b4e  7      OPC=movq_r64_m64      
  leaq 0x104ea3(%rip), %rsi         #  68    0x86b55  7      OPC=leaq_r64_m16      
  movq %r13, %rdx                   #  69    0x86b5c  3      OPC=movq_r64_r64      
  xorl %eax, %eax                   #  70    0x86b5f  2      OPC=xorl_r32_r32      
  callq .fprintf                    #  71    0x86b61  5      OPC=callq_label       
  movq %rbx, %rsi                   #  72    0x86b66  3      OPC=movq_r64_r64      
  movq %rbp, %rdi                   #  73    0x86b69  3      OPC=movq_r64_r64      
  callq .tr_where                   #  74    0x86b6c  5      OPC=callq_label       
  movq 0x33cf89(%rip), %rdi         #  75    0x86b71  7      OPC=movq_r64_m64      
  leaq 0x104e86(%rip), %rsi         #  76    0x86b78  7      OPC=leaq_r64_m16      
  movq %r14, %rcx                   #  77    0x86b7f  3      OPC=movq_r64_r64      
  movq %r12, %rdx                   #  78    0x86b82  3      OPC=movq_r64_r64      
  xorl %eax, %eax                   #  79    0x86b85  2      OPC=xorl_r32_r32      
  callq .fprintf                    #  80    0x86b87  5      OPC=callq_label       
.L_86b8b:                           #        0x86b8c  0      OPC=<label>           
  cmpl $0x0, 0x34006e(%rip)         #  81    0x86b8c  7      OPC=cmpl_m32_imm8     
  je .L_86b9f                       #  82    0x86b93  2      OPC=je_label          
  lock                              #  83    0x86b95  1      OPC=lock              
  decl 0x33cf55(%rip)               #  84    0x86b96  6      OPC=decl_m32          
  nop                               #  85    0x86b9c  1      OPC=nop               
  jne .L_86ba7                      #  86    0x86b9d  2      OPC=jne_label         
  jmpq .L_86bc1                     #  87    0x86b9f  2      OPC=jmpq_label        
.L_86b9f:                           #        0x86ba1  0      OPC=<label>           
  decl 0x33cf4b(%rip)               #  88    0x86ba1  6      OPC=decl_m32          
  je .L_86bc1                       #  89    0x86ba7  2      OPC=je_label          
.L_86ba7:                           #        0x86ba9  0      OPC=<label>           
  leaq 0x33cf42(%rip), %rdi         #  90    0x86ba9  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  91    0x86bb0  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  92    0x86bb7  5      OPC=callq_label       
  addq $0x80, %rsp                  #  93    0x86bbc  7      OPC=addq_r64_imm32    
.L_86bc1:                           #        0x86bc3  0      OPC=<label>           
  addq $0x28, %rsp                  #  94    0x86bc3  4      OPC=addq_r64_imm8     
  movq %r12, %rax                   #  95    0x86bc7  3      OPC=movq_r64_r64      
  popq %rbx                         #  96    0x86bca  1      OPC=popq_r64_1        
  popq %rbp                         #  97    0x86bcb  1      OPC=popq_r64_1        
  popq %r12                         #  98    0x86bcc  2      OPC=popq_r64_1        
  popq %r13                         #  99    0x86bce  2      OPC=popq_r64_1        
  popq %r14                         #  100   0x86bd0  2      OPC=popq_r64_1        
  popq %r15                         #  101   0x86bd2  2      OPC=popq_r64_1        
  retq                              #  102   0x86bd4  1      OPC=retq              
  nop                               #  103   0x86bd5  1      OPC=nop               
  nop                               #  104   0x86bd6  1      OPC=nop               
  nop                               #  105   0x86bd7  1      OPC=nop               
  nop                               #  106   0x86bd8  1      OPC=nop               
  nop                               #  107   0x86bd9  1      OPC=nop               
.L_86bd8:                           #        0x86bda  0      OPC=<label>           
  testq %r14, %r14                  #  108   0x86bda  3      OPC=testq_r64_r64     
  je .L_86c40                       #  109   0x86bdd  2      OPC=je_label          
  movq 0x33cf1c(%rip), %rdi         #  110   0x86bdf  7      OPC=movq_r64_m64      
  leaq 0x104df7(%rip), %rsi         #  111   0x86be6  7      OPC=leaq_r64_m16      
  movq %r14, %rcx                   #  112   0x86bed  3      OPC=movq_r64_r64      
  movq %r13, %rdx                   #  113   0x86bf0  3      OPC=movq_r64_r64      
  xorl %eax, %eax                   #  114   0x86bf3  2      OPC=xorl_r32_r32      
  callq .fprintf                    #  115   0x86bf5  5      OPC=callq_label       
  jmpq .L_86b8b                     #  116   0x86bfa  2      OPC=jmpq_label        
  nop                               #  117   0x86bfc  1      OPC=nop               
  nop                               #  118   0x86bfd  1      OPC=nop               
  nop                               #  119   0x86bfe  1      OPC=nop               
  nop                               #  120   0x86bff  1      OPC=nop               
  nop                               #  121   0x86c00  1      OPC=nop               
  nop                               #  122   0x86c01  1      OPC=nop               
.L_86c00:                           #        0x86c02  0      OPC=<label>           
  movq %r14, %rsi                   #  123   0x86c02  3      OPC=movq_r64_r64      
  movq %r13, %rdi                   #  124   0x86c05  3      OPC=movq_r64_r64      
  callq .__tls_get_addr_plt         #  125   0x86c08  5      OPC=callq_label       
  movq %rax, %r12                   #  126   0x86c0d  3      OPC=movq_r64_r64      
  jmpq .L_86b04                     #  127   0x86c10  5      OPC=jmpq_label_1      
  nop                               #  128   0x86c15  1      OPC=nop               
  nop                               #  129   0x86c16  1      OPC=nop               
  nop                               #  130   0x86c17  1      OPC=nop               
  nop                               #  131   0x86c18  1      OPC=nop               
  nop                               #  132   0x86c19  1      OPC=nop               
.L_86c18:                           #        0x86c1a  0      OPC=<label>           
  movq 0x33cee1(%rip), %rdi         #  133   0x86c1a  7      OPC=movq_r64_m64      
  leaq 0x104dcd(%rip), %rsi         #  134   0x86c21  7      OPC=leaq_r64_m16      
  movq %r14, %rcx                   #  135   0x86c28  3      OPC=movq_r64_r64      
  movq %r12, %rdx                   #  136   0x86c2b  3      OPC=movq_r64_r64      
  xorl %eax, %eax                   #  137   0x86c2e  2      OPC=xorl_r32_r32      
  callq .fprintf                    #  138   0x86c30  5      OPC=callq_label       
  jmpq .L_86b8b                     #  139   0x86c35  5      OPC=jmpq_label_1      
  nop                               #  140   0x86c3a  1      OPC=nop               
  nop                               #  141   0x86c3b  1      OPC=nop               
  nop                               #  142   0x86c3c  1      OPC=nop               
  nop                               #  143   0x86c3d  1      OPC=nop               
  nop                               #  144   0x86c3e  1      OPC=nop               
  nop                               #  145   0x86c3f  1      OPC=nop               
  nop                               #  146   0x86c40  1      OPC=nop               
  nop                               #  147   0x86c41  1      OPC=nop               
.L_86c40:                           #        0x86c42  0      OPC=<label>           
  movq 0x33ceb9(%rip), %rdi         #  148   0x86c42  7      OPC=movq_r64_m64      
  leaq 0x104d9f(%rip), %rsi         #  149   0x86c49  7      OPC=leaq_r64_m16      
  movq %r13, %rdx                   #  150   0x86c50  3      OPC=movq_r64_r64      
  xorl %eax, %eax                   #  151   0x86c53  2      OPC=xorl_r32_r32      
  callq .fprintf                    #  152   0x86c55  5      OPC=callq_label       
  jmpq .L_86b8b                     #  153   0x86c5a  5      OPC=jmpq_label_1      
  nop                               #  154   0x86c5f  1      OPC=nop               
  nop                               #  155   0x86c60  1      OPC=nop               
  nop                               #  156   0x86c61  1      OPC=nop               
.L_86c60:                           #        0x86c62  0      OPC=<label>           
  xorl %ebx, %ebx                   #  157   0x86c62  2      OPC=xorl_r32_r32      
  jmpq .L_86aba                     #  158   0x86c64  5      OPC=jmpq_label_1      
  nop                               #  159   0x86c69  1      OPC=nop               
  nop                               #  160   0x86c6a  1      OPC=nop               
  nop                               #  161   0x86c6b  1      OPC=nop               
  nop                               #  162   0x86c6c  1      OPC=nop               
  nop                               #  163   0x86c6d  1      OPC=nop               
  nop                               #  164   0x86c6e  1      OPC=nop               
  nop                               #  165   0x86c6f  1      OPC=nop               
  nop                               #  166   0x86c70  1      OPC=nop               
  nop                               #  167   0x86c71  1      OPC=nop               
                                                                                   
.size tr_reallochook, .-tr_reallochook

