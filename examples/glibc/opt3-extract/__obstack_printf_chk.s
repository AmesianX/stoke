  .text
  .globl __obstack_printf_chk
  .type __obstack_printf_chk, @function

#! file-offset 0x117160
#! rip-offset  0x117160
#! capacity    544 bytes

# Text                                 #  Line  RIP       Bytes  Opcode                
.__obstack_printf_chk:                 #        0x117160  0      OPC=<label>           
  pushq %r15                           #  1     0x117160  2      OPC=pushq_r64_1       
  pushq %r14                           #  2     0x117162  2      OPC=pushq_r64_1       
  movl %esi, %r14d                     #  3     0x117164  3      OPC=movl_r32_r32      
  pushq %r13                           #  4     0x117167  2      OPC=pushq_r64_1       
  pushq %r12                           #  5     0x117169  2      OPC=pushq_r64_1       
  pushq %rbp                           #  6     0x11716b  1      OPC=pushq_r64_1       
  pushq %rbx                           #  7     0x11716c  1      OPC=pushq_r64_1       
  movq %rdi, %rbp                      #  8     0x11716d  3      OPC=movq_r64_r64      
  subq $0x1c8, %rsp                    #  9     0x117170  7      OPC=subq_r64_imm32    
  testb %al, %al                       #  10    0x117177  2      OPC=testb_r8_r8       
  movq %rcx, 0x128(%rsp)               #  11    0x117179  8      OPC=movq_m64_r64      
  movq %r8, 0x130(%rsp)                #  12    0x117181  8      OPC=movq_m64_r64      
  movq %r9, 0x138(%rsp)                #  13    0x117189  8      OPC=movq_m64_r64      
  je .L_1171d3                         #  14    0x117191  2      OPC=je_label          
  movaps %xmm0, 0x140(%rsp)            #  15    0x117193  8      OPC=movaps_m128_xmm   
  movaps %xmm1, 0x150(%rsp)            #  16    0x11719b  8      OPC=movaps_m128_xmm   
  movaps %xmm2, 0x160(%rsp)            #  17    0x1171a3  8      OPC=movaps_m128_xmm   
  movaps %xmm3, 0x170(%rsp)            #  18    0x1171ab  8      OPC=movaps_m128_xmm   
  movaps %xmm4, 0x180(%rsp)            #  19    0x1171b3  8      OPC=movaps_m128_xmm   
  movaps %xmm5, 0x190(%rsp)            #  20    0x1171bb  8      OPC=movaps_m128_xmm   
  movaps %xmm6, 0x1a0(%rsp)            #  21    0x1171c3  8      OPC=movaps_m128_xmm   
  movaps %xmm7, 0x1b0(%rsp)            #  22    0x1171cb  8      OPC=movaps_m128_xmm   
.L_1171d3:                             #        0x1171d3  0      OPC=<label>           
  leaq 0x200(%rsp), %rax               #  23    0x1171d3  8      OPC=leaq_r64_m16      
  leaq 0x20(%rsp), %r12                #  24    0x1171db  5      OPC=leaq_r64_m16      
  xorl %ecx, %ecx                      #  25    0x1171e0  2      OPC=xorl_r32_r32      
  xorl %r8d, %r8d                      #  26    0x1171e2  3      OPC=xorl_r32_r32      
  movl $0x8000, %esi                   #  27    0x1171e5  5      OPC=movl_r32_imm32    
  movq %rdx, %r13                      #  28    0x1171ea  3      OPC=movq_r64_r64      
  movq %r12, %rdi                      #  29    0x1171ed  3      OPC=movq_r64_r64      
  movl $0xffffffff, %edx               #  30    0x1171f0  6      OPC=movl_r32_imm32_1  
  movq %rax, 0x10(%rsp)                #  31    0x1171f6  5      OPC=movq_m64_r64      
  leaq 0x110(%rsp), %rax               #  32    0x1171fb  8      OPC=leaq_r64_m16      
  movl $0x18, 0x8(%rsp)                #  33    0x117203  8      OPC=movl_m32_imm32    
  movl $0x30, 0xc(%rsp)                #  34    0x11720b  8      OPC=movl_m32_imm32    
  movq $0x0, 0xa8(%rsp)                #  35    0x117213  12     OPC=movq_m64_imm32    
  movq %rax, 0x18(%rsp)                #  36    0x11721f  5      OPC=movq_m64_r64      
  callq ._IO_no_init                   #  37    0x117224  5      OPC=callq_label       
  movq 0x18(%rbp), %rcx                #  38    0x117229  4      OPC=movq_r64_m64      
  movq 0x20(%rbp), %rbx                #  39    0x11722d  4      OPC=movq_r64_m64      
  leaq 0x2a7e49(%rip), %rax            #  40    0x117231  7      OPC=leaq_r64_m16      
  movq 0x10(%rbp), %rsi                #  41    0x117238  4      OPC=movq_r64_m64      
  movq %rax, 0xf8(%rsp)                #  42    0x11723c  8      OPC=movq_m64_r64      
  movq %rcx, %rdx                      #  43    0x117244  3      OPC=movq_r64_r64      
  subq %rcx, %rbx                      #  44    0x117247  3      OPC=subq_r64_r64      
  subq %rsi, %rdx                      #  45    0x11724a  3      OPC=subq_r64_r64      
  movl %ebx, %eax                      #  46    0x11724d  2      OPC=movl_r32_r32      
  addl %ebx, %edx                      #  47    0x11724f  2      OPC=addl_r32_r32      
  jne .L_1172f8                        #  48    0x117251  6      OPC=jne_label_1       
  cmpq $0x3f, %rbx                     #  49    0x117257  4      OPC=cmpq_r64_imm8     
  jle .L_117300                        #  50    0x11725b  6      OPC=jle_label_1       
.L_117260:                             #        0x117261  0      OPC=<label>           
  testl %eax, %eax                     #  51    0x117261  2      OPC=testl_r32_r32     
  je .L_117359                         #  52    0x117263  6      OPC=je_label_1        
  movq 0x10(%rbp), %rsi                #  53    0x117269  4      OPC=movq_r64_m64      
  movl %eax, %ebx                      #  54    0x11726d  2      OPC=movl_r32_r32      
.L_11726e:                             #        0x11726f  0      OPC=<label>           
  movslq %eax, %r15                    #  55    0x11726f  3      OPC=movslq_r64_r32    
  movq %r12, %rdi                      #  56    0x117272  3      OPC=movq_r64_r64      
  movq %r15, %rdx                      #  57    0x117275  3      OPC=movq_r64_r64      
  callq ._IO_str_init_static_internal  #  58    0x117278  5      OPC=callq_label       
  movq 0x40(%rsp), %rcx                #  59    0x11727d  5      OPC=movq_r64_m64      
  movq 0x50(%rsp), %rdx                #  60    0x117282  5      OPC=movq_r64_m64      
  subq %rcx, %rdx                      #  61    0x117287  3      OPC=subq_r64_r64      
  cmpq %rdx, %r15                      #  62    0x11728a  3      OPC=cmpq_r64_r64      
  jne .L_11733a                        #  63    0x11728d  6      OPC=jne_label_1       
  movq 0x18(%rbp), %rdx                #  64    0x117293  4      OPC=movq_r64_m64      
  movl %edx, %eax                      #  65    0x117297  2      OPC=movl_r32_r32      
  subl 0x10(%rbp), %eax                #  66    0x117299  3      OPC=subl_r32_m32      
  addq %rcx, %rax                      #  67    0x11729c  3      OPC=addq_r64_r64      
  cmpq %rax, 0x48(%rsp)                #  68    0x11729f  5      OPC=cmpq_m64_r64      
  jne .L_11731b                        #  69    0x1172a4  2      OPC=jne_label         
  movslq %ebx, %rbx                    #  70    0x1172a6  3      OPC=movslq_r64_r32    
  movq %rbp, 0x100(%rsp)               #  71    0x1172a9  8      OPC=movq_m64_r64      
  addq %rdx, %rbx                      #  72    0x1172b1  3      OPC=addq_r64_r64      
  testl %r14d, %r14d                   #  73    0x1172b4  3      OPC=testl_r32_r32     
  movq %rbx, 0x18(%rbp)                #  74    0x1172b7  4      OPC=movq_m64_r64      
  jle .L_1172c4                        #  75    0x1172bb  2      OPC=jle_label         
  orl $0x4, 0x94(%rsp)                 #  76    0x1172bd  8      OPC=orl_m32_imm8      
.L_1172c4:                             #        0x1172c5  0      OPC=<label>           
  leaq 0x8(%rsp), %rdx                 #  77    0x1172c5  5      OPC=leaq_r64_m16      
  movq %r13, %rsi                      #  78    0x1172ca  3      OPC=movq_r64_r64      
  movq %r12, %rdi                      #  79    0x1172cd  3      OPC=movq_r64_r64      
  callq ._IO_vfprintf                  #  80    0x1172d0  5      OPC=callq_label       
  movq 0x48(%rsp), %rdx                #  81    0x1172d5  5      OPC=movq_r64_m64      
  subq 0x50(%rsp), %rdx                #  82    0x1172da  5      OPC=subq_r64_m64      
  addq %rdx, 0x18(%rbp)                #  83    0x1172df  4      OPC=addq_m64_r64      
  addq $0x1c8, %rsp                    #  84    0x1172e3  7      OPC=addq_r64_imm32    
  popq %rbx                            #  85    0x1172ea  1      OPC=popq_r64_1        
  popq %rbp                            #  86    0x1172eb  1      OPC=popq_r64_1        
  popq %r12                            #  87    0x1172ec  2      OPC=popq_r64_1        
  popq %r13                            #  88    0x1172ee  2      OPC=popq_r64_1        
  popq %r14                            #  89    0x1172f0  2      OPC=popq_r64_1        
  popq %r15                            #  90    0x1172f2  2      OPC=popq_r64_1        
  retq                                 #  91    0x1172f4  1      OPC=retq              
  nop                                  #  92    0x1172f5  1      OPC=nop               
  nop                                  #  93    0x1172f6  1      OPC=nop               
  nop                                  #  94    0x1172f7  1      OPC=nop               
  nop                                  #  95    0x1172f8  1      OPC=nop               
.L_1172f8:                             #        0x1172f9  0      OPC=<label>           
  movl %edx, %eax                      #  96    0x1172f9  2      OPC=movl_r32_r32      
  jmpq .L_11726e                       #  97    0x1172fb  5      OPC=jmpq_label_1      
  nop                                  #  98    0x117300  1      OPC=nop               
.L_117300:                             #        0x117301  0      OPC=<label>           
  movl $0x40, %esi                     #  99    0x117301  5      OPC=movl_r32_imm32    
  movq %rbp, %rdi                      #  100   0x117306  3      OPC=movq_r64_r64      
  callq ._obstack_newchunk             #  101   0x117309  5      OPC=callq_label       
  movq 0x18(%rbp), %rcx                #  102   0x11730e  4      OPC=movq_r64_m64      
  movl 0x20(%rbp), %eax                #  103   0x117312  3      OPC=movl_r32_m32      
  subl %ecx, %eax                      #  104   0x117315  2      OPC=subl_r32_r32      
  jmpq .L_117260                       #  105   0x117317  5      OPC=jmpq_label_1      
.L_11731b:                             #        0x11731c  0      OPC=<label>           
  leaq 0x79efe(%rip), %rcx             #  106   0x11731c  7      OPC=leaq_r64_m16      
  leaq 0x75d8c(%rip), %rsi             #  107   0x117323  7      OPC=leaq_r64_m16      
  leaq 0x776e0(%rip), %rdi             #  108   0x11732a  7      OPC=leaq_r64_m16      
  movl $0x54, %edx                     #  109   0x117331  5      OPC=movl_r32_imm32    
  callq .__assert_fail                 #  110   0x117336  5      OPC=callq_label       
.L_11733a:                             #        0x11733b  0      OPC=<label>           
  leaq 0x79edf(%rip), %rcx             #  111   0x11733b  7      OPC=leaq_r64_m16      
  leaq 0x75d6d(%rip), %rsi             #  112   0x117342  7      OPC=leaq_r64_m16      
  leaq 0x77669(%rip), %rdi             #  113   0x117349  7      OPC=leaq_r64_m16      
  movl $0x51, %edx                     #  114   0x117350  5      OPC=movl_r32_imm32    
  callq .__assert_fail                 #  115   0x117355  5      OPC=callq_label       
.L_117359:                             #        0x11735a  0      OPC=<label>           
  leaq 0x79ec0(%rip), %rcx             #  116   0x11735a  7      OPC=leaq_r64_m16      
  leaq 0x75d4e(%rip), %rsi             #  117   0x117361  7      OPC=leaq_r64_m16      
  leaq 0x7420c(%rip), %rdi             #  118   0x117368  7      OPC=leaq_r64_m16      
  movl $0x49, %edx                     #  119   0x11736f  5      OPC=movl_r32_imm32    
  callq .__assert_fail                 #  120   0x117374  5      OPC=callq_label       
  nop                                  #  121   0x117379  1      OPC=nop               
  nop                                  #  122   0x11737a  1      OPC=nop               
  nop                                  #  123   0x11737b  1      OPC=nop               
  nop                                  #  124   0x11737c  1      OPC=nop               
  nop                                  #  125   0x11737d  1      OPC=nop               
  nop                                  #  126   0x11737e  1      OPC=nop               
  nop                                  #  127   0x11737f  1      OPC=nop               
  nop                                  #  128   0x117380  1      OPC=nop               
                                                                                       
.size __obstack_printf_chk, .-__obstack_printf_chk

