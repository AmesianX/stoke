  .text
  .globl error_tail
  .type error_tail, @function

#! file-offset 0x103510
#! rip-offset  0x103510
#! capacity    544 bytes

# Text                            #  Line  RIP       Bytes  Opcode               
.error_tail:                      #        0x103510  0      OPC=<label>          
  pushq %rbp                      #  1     0x103510  1      OPC=pushq_r64_1      
  movq %rsp, %rbp                 #  2     0x103511  3      OPC=movq_r64_r64     
  pushq %r15                      #  3     0x103514  2      OPC=pushq_r64_1      
  pushq %r14                      #  4     0x103516  2      OPC=pushq_r64_1      
  pushq %r13                      #  5     0x103518  2      OPC=pushq_r64_1      
  pushq %r12                      #  6     0x10351a  2      OPC=pushq_r64_1      
  movq %rdx, %r14                 #  7     0x10351c  3      OPC=movq_r64_r64     
  pushq %rbx                      #  8     0x10351f  1      OPC=pushq_r64_1      
  subq $0x38, %rsp                #  9     0x103520  4      OPC=subq_r64_imm8    
  movq 0x2bd895(%rip), %rax       #  10    0x103524  7      OPC=movq_r64_m64     
  movl %edi, -0x50(%rbp)          #  11    0x10352b  3      OPC=movl_m32_r32     
  movl %esi, -0x4c(%rbp)          #  12    0x10352e  3      OPC=movl_m32_r32     
  movq %rcx, -0x58(%rbp)          #  13    0x103531  4      OPC=movq_m64_r64     
  movq (%rax), %rdi               #  14    0x103535  3      OPC=movq_r64_m64     
  movl 0xc0(%rdi), %esi           #  15    0x103538  6      OPC=movl_r32_m32     
  testl %esi, %esi                #  16    0x10353e  2      OPC=testl_r32_r32    
  jle .L_1036e0                   #  17    0x103540  6      OPC=jle_label_1      
  movq %rdx, %rdi                 #  18    0x103546  3      OPC=movq_r64_r64     
  xorl %r15d, %r15d               #  19    0x103549  3      OPC=xorl_r32_r32     
  xorl %ebx, %ebx                 #  20    0x10354c  2      OPC=xorl_r32_r32     
  callq .strlen                   #  21    0x10354e  5      OPC=callq_label      
  leaq 0x1(%rax), %r12            #  22    0x103553  4      OPC=leaq_r64_m16     
  leaq -0x38(%rbp), %rax          #  23    0x103557  4      OPC=leaq_r64_m16     
  leaq -0x40(%rbp), %r13          #  24    0x10355b  4      OPC=leaq_r64_m16     
  movq %rax, -0x48(%rbp)          #  25    0x10355f  4      OPC=movq_m64_r64     
  jmpq .L_1035bf                  #  26    0x103563  2      OPC=jmpq_label       
  nop                             #  27    0x103565  1      OPC=nop              
  nop                             #  28    0x103566  1      OPC=nop              
  nop                             #  29    0x103567  1      OPC=nop              
.L_103568:                        #        0x103568  0      OPC=<label>          
  leaq 0x1e(%rsi), %rax           #  30    0x103568  4      OPC=leaq_r64_m16     
  movl $0x10, %ecx                #  31    0x10356c  5      OPC=movl_r32_imm32   
  xorl %edx, %edx                 #  32    0x103571  2      OPC=xorl_r32_r32     
  divq %rcx                       #  33    0x103573  3      OPC=divq_r64         
  shlq $0x4, %rax                 #  34    0x103576  4      OPC=shlq_r64_imm8    
  subq %rax, %rsp                 #  35    0x10357a  3      OPC=subq_r64_r64     
  leaq 0xf(%rsp), %rbx            #  36    0x10357d  5      OPC=leaq_r64_m16     
  andq $0xf0, %rbx                #  37    0x103582  4      OPC=andq_r64_imm8    
.L_103586:                        #        0x103586  0      OPC=<label>          
  movq -0x48(%rbp), %rsi          #  38    0x103586  4      OPC=movq_r64_m64     
  movq $0x0, (%r13)               #  39    0x10358a  8      OPC=movq_m64_imm32   
  movq %r13, %rcx                 #  40    0x103592  3      OPC=movq_r64_r64     
  movq %r12, %rdx                 #  41    0x103595  3      OPC=movq_r64_r64     
  movq %rbx, %rdi                 #  42    0x103598  3      OPC=movq_r64_r64     
  movq %r14, -0x38(%rbp)          #  43    0x10359b  4      OPC=movq_m64_r64     
  callq .mbsrtowcs                #  44    0x10359f  5      OPC=callq_label      
  cmpq %rax, %r12                 #  45    0x1035a4  3      OPC=cmpq_r64_r64     
  jne .L_1036a0                   #  46    0x1035a7  6      OPC=jne_label_1      
  movq $0x1ffffffffffffffe, %rax  #  47    0x1035ad  10     OPC=movq_r64_imm64   
  cmpq %rax, %r12                 #  48    0x1035b7  3      OPC=cmpq_r64_r64     
  ja .L_103610                    #  49    0x1035ba  2      OPC=ja_label         
  addq %r12, %r12                 #  50    0x1035bc  3      OPC=addq_r64_r64     
.L_1035bf:                        #        0x1035bf  0      OPC=<label>          
  leaq (,%r12,4), %rsi            #  51    0x1035bf  8      OPC=leaq_r64_m16     
  cmpq $0x1000, %rsi              #  52    0x1035c7  7      OPC=cmpq_r64_imm32   
  jbe .L_103568                   #  53    0x1035ce  2      OPC=jbe_label        
  movq %rsi, %rdi                 #  54    0x1035d0  3      OPC=movq_r64_r64     
  movq %rsi, -0x60(%rbp)          #  55    0x1035d3  4      OPC=movq_m64_r64     
  callq .__libc_alloca_cutoff     #  56    0x1035d7  5      OPC=callq_label      
  testl %eax, %eax                #  57    0x1035dc  2      OPC=testl_r32_r32    
  movq -0x60(%rbp), %rsi          #  58    0x1035de  4      OPC=movq_r64_m64     
  jne .L_103568                   #  59    0x1035e2  2      OPC=jne_label        
  testb %r15b, %r15b              #  60    0x1035e4  3      OPC=testb_r8_r8      
  movl $0x0, %r15d                #  61    0x1035e7  6      OPC=movl_r32_imm32   
  cmovneq %rbx, %r15              #  62    0x1035ed  4      OPC=cmovneq_r64_r64  
  movq %r15, %rdi                 #  63    0x1035f1  3      OPC=movq_r64_r64     
  callq .__tls_get_addr_plt       #  64    0x1035f4  5      OPC=callq_label      
  testq %rax, %rax                #  65    0x1035f9  3      OPC=testq_r64_r64    
  movq %rax, %rbx                 #  66    0x1035fc  3      OPC=movq_r64_r64     
  je .L_1036f0                    #  67    0x1035ff  6      OPC=je_label_1       
  movl $0x1, %r15d                #  68    0x103605  6      OPC=movl_r32_imm32   
  jmpq .L_103586                  #  69    0x10360b  5      OPC=jmpq_label_1     
.L_103610:                        #        0x103610  0      OPC=<label>          
  testb %r15b, %r15b              #  70    0x103610  3      OPC=testb_r8_r8      
  jne .L_103690                   #  71    0x103613  2      OPC=jne_label        
.L_103615:                        #        0x103615  0      OPC=<label>          
  movq 0x2bd7a4(%rip), %rax       #  72    0x103615  7      OPC=movq_r64_m64     
  movq -0x58(%rbp), %rdx          #  73    0x10361c  4      OPC=movq_r64_m64     
  leaq 0x8e715(%rip), %rsi        #  74    0x103620  7      OPC=leaq_r64_m16     
  movq (%rax), %rdi               #  75    0x103627  3      OPC=movq_r64_m64     
  callq .vfwprintf                #  76    0x10362a  5      OPC=callq_label      
.L_10362f:                        #        0x10362f  0      OPC=<label>          
  movq 0x2bd952(%rip), %rax       #  77    0x10362f  7      OPC=movq_r64_m64     
  movl -0x4c(%rbp), %edx          #  78    0x103636  3      OPC=movl_r32_m32     
  addl $0x1, (%rax)               #  79    0x103639  3      OPC=addl_m32_imm8    
  testl %edx, %edx                #  80    0x10363c  2      OPC=testl_r32_r32    
  jne .L_103680                   #  81    0x10363e  2      OPC=jne_label        
.L_103640:                        #        0x103640  0      OPC=<label>          
  leaq 0x86a02(%rip), %rsi        #  82    0x103640  7      OPC=leaq_r64_m16     
  xorl %edi, %edi                 #  83    0x103647  2      OPC=xorl_r32_r32     
  xorl %eax, %eax                 #  84    0x103649  2      OPC=xorl_r32_r32     
  callq .__fxprintf               #  85    0x10364b  5      OPC=callq_label      
  movq 0x2bd769(%rip), %rax       #  86    0x103650  7      OPC=movq_r64_m64     
  movq (%rax), %rdi               #  87    0x103657  3      OPC=movq_r64_m64     
  callq ._IO_fflush               #  88    0x10365a  5      OPC=callq_label      
  movl -0x50(%rbp), %eax          #  89    0x10365f  3      OPC=movl_r32_m32     
  testl %eax, %eax                #  90    0x103662  2      OPC=testl_r32_r32    
  jne .L_10371d                   #  91    0x103664  6      OPC=jne_label_1      
  leaq -0x28(%rbp), %rsp          #  92    0x10366a  4      OPC=leaq_r64_m16     
  popq %rbx                       #  93    0x10366e  1      OPC=popq_r64_1       
  popq %r12                       #  94    0x10366f  2      OPC=popq_r64_1       
  popq %r13                       #  95    0x103671  2      OPC=popq_r64_1       
  popq %r14                       #  96    0x103673  2      OPC=popq_r64_1       
  popq %r15                       #  97    0x103675  2      OPC=popq_r64_1       
  popq %rbp                       #  98    0x103677  1      OPC=popq_r64_1       
  retq                            #  99    0x103678  1      OPC=retq             
  nop                             #  100   0x103679  1      OPC=nop              
  nop                             #  101   0x10367a  1      OPC=nop              
  nop                             #  102   0x10367b  1      OPC=nop              
  nop                             #  103   0x10367c  1      OPC=nop              
  nop                             #  104   0x10367d  1      OPC=nop              
  nop                             #  105   0x10367e  1      OPC=nop              
  nop                             #  106   0x10367f  1      OPC=nop              
.L_103680:                        #        0x103680  0      OPC=<label>          
  movl -0x4c(%rbp), %edi          #  107   0x103680  3      OPC=movl_r32_m32     
  callq .print_errno_message      #  108   0x103683  5      OPC=callq_label      
  jmpq .L_103640                  #  109   0x103688  2      OPC=jmpq_label       
  nop                             #  110   0x10368a  1      OPC=nop              
  nop                             #  111   0x10368b  1      OPC=nop              
  nop                             #  112   0x10368c  1      OPC=nop              
  nop                             #  113   0x10368d  1      OPC=nop              
  nop                             #  114   0x10368e  1      OPC=nop              
  nop                             #  115   0x10368f  1      OPC=nop              
.L_103690:                        #        0x103690  0      OPC=<label>          
  movq %rbx, %rdi                 #  116   0x103690  3      OPC=movq_r64_r64     
  callq .L_1f8c0                  #  117   0x103693  5      OPC=callq_label      
  jmpq .L_103615                  #  118   0x103698  5      OPC=jmpq_label_1     
  nop                             #  119   0x10369d  1      OPC=nop              
  nop                             #  120   0x10369e  1      OPC=nop              
  nop                             #  121   0x10369f  1      OPC=nop              
.L_1036a0:                        #        0x1036a0  0      OPC=<label>          
  cmpq $0xff, %rax                #  122   0x1036a0  4      OPC=cmpq_r64_imm8    
  je .L_103610                    #  123   0x1036a4  6      OPC=je_label_1       
  movq 0x2bd70f(%rip), %rax       #  124   0x1036aa  7      OPC=movq_r64_m64     
  movq -0x58(%rbp), %rdx          #  125   0x1036b1  4      OPC=movq_r64_m64     
  movq %rbx, %rsi                 #  126   0x1036b5  3      OPC=movq_r64_r64     
  movq (%rax), %rdi               #  127   0x1036b8  3      OPC=movq_r64_m64     
  callq .vfwprintf                #  128   0x1036bb  5      OPC=callq_label      
  testb %r15b, %r15b              #  129   0x1036c0  3      OPC=testb_r8_r8      
  je .L_10362f                    #  130   0x1036c3  6      OPC=je_label_1       
  movq %rbx, %rdi                 #  131   0x1036c9  3      OPC=movq_r64_r64     
  callq .L_1f8c0                  #  132   0x1036cc  5      OPC=callq_label      
  jmpq .L_10362f                  #  133   0x1036d1  5      OPC=jmpq_label_1     
  nop                             #  134   0x1036d6  1      OPC=nop              
  nop                             #  135   0x1036d7  1      OPC=nop              
  nop                             #  136   0x1036d8  1      OPC=nop              
  nop                             #  137   0x1036d9  1      OPC=nop              
  nop                             #  138   0x1036da  1      OPC=nop              
  nop                             #  139   0x1036db  1      OPC=nop              
  nop                             #  140   0x1036dc  1      OPC=nop              
  nop                             #  141   0x1036dd  1      OPC=nop              
  nop                             #  142   0x1036de  1      OPC=nop              
  nop                             #  143   0x1036df  1      OPC=nop              
.L_1036e0:                        #        0x1036e0  0      OPC=<label>          
  movq %rcx, %rdx                 #  144   0x1036e0  3      OPC=movq_r64_r64     
  movq %r14, %rsi                 #  145   0x1036e3  3      OPC=movq_r64_r64     
  callq ._IO_vfprintf             #  146   0x1036e6  5      OPC=callq_label      
  jmpq .L_10362f                  #  147   0x1036eb  5      OPC=jmpq_label_1     
.L_1036f0:                        #        0x1036f0  0      OPC=<label>          
  movq %r15, %rdi                 #  148   0x1036f0  3      OPC=movq_r64_r64     
  callq .L_1f8c0                  #  149   0x1036f3  5      OPC=callq_label      
  movq 0x2bd6c1(%rip), %rax       #  150   0x1036f8  7      OPC=movq_r64_m64     
  leaq 0x8e942(%rip), %rdi        #  151   0x1036ff  7      OPC=leaq_r64_m16     
  movq (%rax), %rsi               #  152   0x103706  3      OPC=movq_r64_m64     
  callq .fputws_unlocked          #  153   0x103709  5      OPC=callq_label      
  leaq -0x28(%rbp), %rsp          #  154   0x10370e  4      OPC=leaq_r64_m16     
  popq %rbx                       #  155   0x103712  1      OPC=popq_r64_1       
  popq %r12                       #  156   0x103713  2      OPC=popq_r64_1       
  popq %r13                       #  157   0x103715  2      OPC=popq_r64_1       
  popq %r14                       #  158   0x103717  2      OPC=popq_r64_1       
  popq %r15                       #  159   0x103719  2      OPC=popq_r64_1       
  popq %rbp                       #  160   0x10371b  1      OPC=popq_r64_1       
  retq                            #  161   0x10371c  1      OPC=retq             
.L_10371d:                        #        0x10371d  0      OPC=<label>          
  movl -0x50(%rbp), %edi          #  162   0x10371d  3      OPC=movl_r32_m32     
  callq .exit                     #  163   0x103720  5      OPC=callq_label      
  nop                             #  164   0x103725  1      OPC=nop              
  nop                             #  165   0x103726  1      OPC=nop              
  nop                             #  166   0x103727  1      OPC=nop              
  nop                             #  167   0x103728  1      OPC=nop              
  nop                             #  168   0x103729  1      OPC=nop              
  nop                             #  169   0x10372a  1      OPC=nop              
  nop                             #  170   0x10372b  1      OPC=nop              
  nop                             #  171   0x10372c  1      OPC=nop              
  nop                             #  172   0x10372d  1      OPC=nop              
  nop                             #  173   0x10372e  1      OPC=nop              
  nop                             #  174   0x10372f  1      OPC=nop              
                                                                                 
.size error_tail, .-error_tail

