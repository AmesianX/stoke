  .text
  .globl _IO_str_overflow
  .type _IO_str_overflow, @function

#! file-offset 0x7b620
#! rip-offset  0x7b620
#! capacity    400 bytes

# Text                          #  Line  RIP      Bytes  Opcode                
._IO_str_overflow:              #        0x7b620  0      OPC=<label>           
  pushq %r15                    #  1     0x7b620  2      OPC=pushq_r64_1       
  pushq %r14                    #  2     0x7b622  2      OPC=pushq_r64_1       
  pushq %r13                    #  3     0x7b624  2      OPC=pushq_r64_1       
  pushq %r12                    #  4     0x7b626  2      OPC=pushq_r64_1       
  pushq %rbp                    #  5     0x7b628  1      OPC=pushq_r64_1       
  pushq %rbx                    #  6     0x7b629  1      OPC=pushq_r64_1       
  movl %esi, %ebp               #  7     0x7b62a  2      OPC=movl_r32_r32      
  movq %rdi, %rbx               #  8     0x7b62c  3      OPC=movq_r64_r64      
  subq $0x18, %rsp              #  9     0x7b62f  4      OPC=subq_r64_imm8     
  movl (%rdi), %ecx             #  10    0x7b633  2      OPC=movl_r32_m32      
  cmpl $0xffffffff, %esi        #  11    0x7b635  6      OPC=cmpl_r32_imm32    
  nop                           #  12    0x7b63b  1      OPC=nop               
  nop                           #  13    0x7b63c  1      OPC=nop               
  nop                           #  14    0x7b63d  1      OPC=nop               
  sete %r13b                    #  15    0x7b63e  4      OPC=sete_r8           
  testb $0x8, %cl               #  16    0x7b642  3      OPC=testb_r8_imm8     
  je .L_7b660                   #  17    0x7b645  2      OPC=je_label          
  movl %r13d, %eax              #  18    0x7b647  3      OPC=movl_r32_r32      
  xorl $0x1, %eax               #  19    0x7b64a  3      OPC=xorl_r32_imm8     
  movzbl %al, %eax              #  20    0x7b64d  3      OPC=movzbl_r32_r8     
  negl %eax                     #  21    0x7b650  2      OPC=negl_r32          
.L_7b64c:                       #        0x7b652  0      OPC=<label>           
  addq $0x18, %rsp              #  22    0x7b652  4      OPC=addq_r64_imm8     
  popq %rbx                     #  23    0x7b656  1      OPC=popq_r64_1        
  popq %rbp                     #  24    0x7b657  1      OPC=popq_r64_1        
  popq %r12                     #  25    0x7b658  2      OPC=popq_r64_1        
  popq %r13                     #  26    0x7b65a  2      OPC=popq_r64_1        
  popq %r14                     #  27    0x7b65c  2      OPC=popq_r64_1        
  popq %r15                     #  28    0x7b65e  2      OPC=popq_r64_1        
  retq                          #  29    0x7b660  1      OPC=retq              
  nop                           #  30    0x7b661  1      OPC=nop               
  nop                           #  31    0x7b662  1      OPC=nop               
  nop                           #  32    0x7b663  1      OPC=nop               
  nop                           #  33    0x7b664  1      OPC=nop               
  nop                           #  34    0x7b665  1      OPC=nop               
.L_7b660:                       #        0x7b666  0      OPC=<label>           
  movl %ecx, %eax               #  35    0x7b666  2      OPC=movl_r32_r32      
  andl $0xc00, %eax             #  36    0x7b668  5      OPC=andl_eax_imm32    
  cmpl $0x400, %eax             #  37    0x7b66d  5      OPC=cmpl_eax_imm32    
  je .L_7b780                   #  38    0x7b672  6      OPC=je_label_1        
  movq 0x28(%rdi), %rdx         #  39    0x7b678  4      OPC=movq_r64_m64      
.L_7b676:                       #        0x7b67c  0      OPC=<label>           
  movq 0x38(%rbx), %r15         #  40    0x7b67c  4      OPC=movq_r64_m64      
  movq 0x40(%rbx), %r12         #  41    0x7b680  4      OPC=movq_r64_m64      
  movq %rdx, %rsi               #  42    0x7b684  3      OPC=movq_r64_r64      
  subq 0x20(%rbx), %rsi         #  43    0x7b687  4      OPC=subq_r64_m64      
  movzbl %r13b, %eax            #  44    0x7b68b  4      OPC=movzbl_r32_r8     
  subq %r15, %r12               #  45    0x7b68f  3      OPC=subq_r64_r64      
  addq %r12, %rax               #  46    0x7b692  3      OPC=addq_r64_r64      
  cmpq %rax, %rsi               #  47    0x7b695  3      OPC=cmpq_r64_r64      
  jb .L_7b74d                   #  48    0x7b698  6      OPC=jb_label_1        
  andl $0x1, %ecx               #  49    0x7b69e  3      OPC=andl_r32_imm8     
  jne .L_7b7a0                  #  50    0x7b6a1  6      OPC=jne_label_1       
  leaq 0x64(%r12,%r12,1), %rax  #  51    0x7b6a7  5      OPC=leaq_r64_m16      
  cmpq %rax, %r12               #  52    0x7b6ac  3      OPC=cmpq_r64_r64      
  movq %rax, 0x8(%rsp)          #  53    0x7b6af  5      OPC=movq_m64_r64      
  ja .L_7b7a0                   #  54    0x7b6b4  6      OPC=ja_label_1        
  movq %rax, %rdi               #  55    0x7b6ba  3      OPC=movq_r64_r64      
  callq 0xe0(%rbx)              #  56    0x7b6bd  6      OPC=callq_m64         
  testq %rax, %rax              #  57    0x7b6c3  3      OPC=testq_r64_r64     
  movq %rax, %r14               #  58    0x7b6c6  3      OPC=movq_r64_r64      
  je .L_7b7a0                   #  59    0x7b6c9  6      OPC=je_label_1        
  testq %r15, %r15              #  60    0x7b6cf  3      OPC=testq_r64_r64     
  je .L_7b6ed                   #  61    0x7b6d2  2      OPC=je_label          
  movq %r12, %rdx               #  62    0x7b6d4  3      OPC=movq_r64_r64      
  movq %r15, %rsi               #  63    0x7b6d7  3      OPC=movq_r64_r64      
  movq %rax, %rdi               #  64    0x7b6da  3      OPC=movq_r64_r64      
  callq .__GI_memcpy            #  65    0x7b6dd  5      OPC=callq_label       
  movq %r15, %rdi               #  66    0x7b6e2  3      OPC=movq_r64_r64      
  callq 0xe8(%rbx)              #  67    0x7b6e5  6      OPC=callq_m64         
  movq $0x0, 0x38(%rbx)         #  68    0x7b6eb  8      OPC=movq_m64_imm32    
.L_7b6ed:                       #        0x7b6f3  0      OPC=<label>           
  movq 0x8(%rsp), %rdx          #  69    0x7b6f3  5      OPC=movq_r64_m64      
  leaq (%r14,%r12,1), %rdi      #  70    0x7b6f8  4      OPC=leaq_r64_m16      
  xorl %esi, %esi               #  71    0x7b6fc  2      OPC=xorl_r32_r32      
  subq %r12, %rdx               #  72    0x7b6fe  3      OPC=subq_r64_r64      
  callq .__GI_memset            #  73    0x7b701  5      OPC=callq_label       
  movq 0x8(%rsp), %rdx          #  74    0x7b706  5      OPC=movq_r64_m64      
  movl $0x1, %ecx               #  75    0x7b70b  5      OPC=movl_r32_imm32    
  movq %r14, %rsi               #  76    0x7b710  3      OPC=movq_r64_r64      
  movq %rbx, %rdi               #  77    0x7b713  3      OPC=movq_r64_r64      
  addq %r14, %rdx               #  78    0x7b716  3      OPC=addq_r64_r64      
  callq ._IO_setb               #  79    0x7b719  5      OPC=callq_label       
  movq %r14, %rax               #  80    0x7b71e  3      OPC=movq_r64_r64      
  movq %r14, 0x20(%rbx)         #  81    0x7b721  4      OPC=movq_m64_r64      
  subq %r15, %rax               #  82    0x7b725  3      OPC=subq_r64_r64      
  addq %rax, 0x18(%rbx)         #  83    0x7b728  4      OPC=addq_m64_r64      
  movq %r14, %rax               #  84    0x7b72c  3      OPC=movq_r64_r64      
  subq %r15, %rax               #  85    0x7b72f  3      OPC=subq_r64_r64      
  addq %rax, 0x8(%rbx)          #  86    0x7b732  4      OPC=addq_m64_r64      
  movq %r14, %rax               #  87    0x7b736  3      OPC=movq_r64_r64      
  subq %r15, %rax               #  88    0x7b739  3      OPC=subq_r64_r64      
  addq %rax, 0x10(%rbx)         #  89    0x7b73c  4      OPC=addq_m64_r64      
  movq %rax, %rdx               #  90    0x7b740  3      OPC=movq_r64_r64      
  addq 0x28(%rbx), %rdx         #  91    0x7b743  4      OPC=addq_r64_m64      
  movq 0x40(%rbx), %rax         #  92    0x7b747  4      OPC=movq_r64_m64      
  movq %rdx, 0x28(%rbx)         #  93    0x7b74b  4      OPC=movq_m64_r64      
  movq %rax, 0x30(%rbx)         #  94    0x7b74f  4      OPC=movq_m64_r64      
.L_7b74d:                       #        0x7b753  0      OPC=<label>           
  testb %r13b, %r13b            #  95    0x7b753  3      OPC=testb_r8_r8       
  jne .L_7b761                  #  96    0x7b756  2      OPC=jne_label         
  leaq 0x1(%rdx), %rax          #  97    0x7b758  4      OPC=leaq_r64_m16      
  movq %rax, 0x28(%rbx)         #  98    0x7b75c  4      OPC=movq_m64_r64      
  movb %bpl, (%rdx)             #  99    0x7b760  3      OPC=movb_m8_r8        
  movq 0x28(%rbx), %rdx         #  100   0x7b763  4      OPC=movq_r64_m64      
.L_7b761:                       #        0x7b767  0      OPC=<label>           
  cmpq %rdx, 0x10(%rbx)         #  101   0x7b767  4      OPC=cmpq_m64_r64      
  movl %ebp, %eax               #  102   0x7b76b  2      OPC=movl_r32_r32      
  jae .L_7b64c                  #  103   0x7b76d  6      OPC=jae_label_1       
  movq %rdx, 0x10(%rbx)         #  104   0x7b773  4      OPC=movq_m64_r64      
  addq $0x18, %rsp              #  105   0x7b777  4      OPC=addq_r64_imm8     
  popq %rbx                     #  106   0x7b77b  1      OPC=popq_r64_1        
  popq %rbp                     #  107   0x7b77c  1      OPC=popq_r64_1        
  popq %r12                     #  108   0x7b77d  2      OPC=popq_r64_1        
  popq %r13                     #  109   0x7b77f  2      OPC=popq_r64_1        
  popq %r14                     #  110   0x7b781  2      OPC=popq_r64_1        
  popq %r15                     #  111   0x7b783  2      OPC=popq_r64_1        
  retq                          #  112   0x7b785  1      OPC=retq              
.L_7b780:                       #        0x7b786  0      OPC=<label>           
  movq 0x8(%rdi), %rdx          #  113   0x7b786  4      OPC=movq_r64_m64      
  movq 0x10(%rdi), %rax         #  114   0x7b78a  4      OPC=movq_r64_m64      
  orb $0x8, %ch                 #  115   0x7b78e  3      OPC=orb_rh_imm8       
  movl %ecx, (%rdi)             #  116   0x7b791  2      OPC=movl_m32_r32      
  movq %rdx, 0x28(%rdi)         #  117   0x7b793  4      OPC=movq_m64_r64      
  movq %rax, 0x8(%rdi)          #  118   0x7b797  4      OPC=movq_m64_r64      
  jmpq .L_7b676                 #  119   0x7b79b  5      OPC=jmpq_label_1      
  nop                           #  120   0x7b7a0  1      OPC=nop               
  nop                           #  121   0x7b7a1  1      OPC=nop               
  nop                           #  122   0x7b7a2  1      OPC=nop               
  nop                           #  123   0x7b7a3  1      OPC=nop               
  nop                           #  124   0x7b7a4  1      OPC=nop               
  nop                           #  125   0x7b7a5  1      OPC=nop               
.L_7b7a0:                       #        0x7b7a6  0      OPC=<label>           
  movl $0xffffffff, %eax        #  126   0x7b7a6  6      OPC=movl_r32_imm32_1  
  jmpq .L_7b64c                 #  127   0x7b7ac  5      OPC=jmpq_label_1      
  nop                           #  128   0x7b7b1  1      OPC=nop               
  nop                           #  129   0x7b7b2  1      OPC=nop               
  nop                           #  130   0x7b7b3  1      OPC=nop               
  nop                           #  131   0x7b7b4  1      OPC=nop               
  nop                           #  132   0x7b7b5  1      OPC=nop               
  nop                           #  133   0x7b7b6  1      OPC=nop               
                                                                               
.size _IO_str_overflow, .-_IO_str_overflow

