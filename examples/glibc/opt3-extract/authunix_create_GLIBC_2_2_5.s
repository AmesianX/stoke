  .text
  .globl authunix_create_GLIBC_2_2_5
  .type authunix_create_GLIBC_2_2_5, @function

#! file-offset 0x131d30
#! rip-offset  0x131d30
#! capacity    576 bytes

# Text                                   #  Line  RIP       Bytes  Opcode              
.authunix_create_GLIBC_2_2_5:            #        0x131d30  0      OPC=<label>         
  pushq %r15                             #  1     0x131d30  2      OPC=pushq_r64_1     
  pushq %r14                             #  2     0x131d32  2      OPC=pushq_r64_1     
  movq %rdi, %r15                        #  3     0x131d34  3      OPC=movq_r64_r64    
  pushq %r13                             #  4     0x131d37  2      OPC=pushq_r64_1     
  pushq %r12                             #  5     0x131d39  2      OPC=pushq_r64_1     
  movl $0x48, %edi                       #  6     0x131d3b  5      OPC=movl_r32_imm32  
  pushq %rbp                             #  7     0x131d40  1      OPC=pushq_r64_1     
  pushq %rbx                             #  8     0x131d41  1      OPC=pushq_r64_1     
  movl %esi, %r14d                       #  9     0x131d42  3      OPC=movl_r32_r32    
  movl %ecx, %r12d                       #  10    0x131d45  3      OPC=movl_r32_r32    
  movq %r8, %rbp                         #  11    0x131d48  3      OPC=movq_r64_r64    
  subq $0x248, %rsp                      #  12    0x131d4b  7      OPC=subq_r64_imm32  
  movl %edx, 0xc(%rsp)                   #  13    0x131d52  4      OPC=movl_m32_r32    
  callq .memalign_plt                    #  14    0x131d56  5      OPC=callq_label     
  movl $0x1d0, %edi                      #  15    0x131d5b  5      OPC=movl_r32_imm32  
  movq %rax, %rbx                        #  16    0x131d60  3      OPC=movq_r64_r64    
  callq .memalign_plt                    #  17    0x131d63  5      OPC=callq_label     
  testq %rax, %rax                       #  18    0x131d68  3      OPC=testq_r64_r64   
  movq %rax, %r13                        #  19    0x131d6b  3      OPC=movq_r64_r64    
  je .L_131f20                           #  20    0x131d6e  6      OPC=je_label_1      
  testq %rbx, %rbx                       #  21    0x131d74  3      OPC=testq_r64_r64   
  je .L_131f20                           #  22    0x131d77  6      OPC=je_label_1      
  leaq 0x28da1c(%rip), %rax              #  23    0x131d7d  7      OPC=leaq_r64_m16    
  movq 0x2944a5(%rip), %rcx              #  24    0x131d84  7      OPC=movq_r64_m64    
  movq 0x2944a6(%rip), %rdx              #  25    0x131d8b  7      OPC=movq_r64_m64    
  leaq 0x10(%rsp), %rdi                  #  26    0x131d92  5      OPC=leaq_r64_m16    
  xorl %esi, %esi                        #  27    0x131d97  2      OPC=xorl_r32_r32    
  movq %r13, 0x40(%rbx)                  #  28    0x131d99  4      OPC=movq_m64_r64    
  movq %rax, 0x38(%rbx)                  #  29    0x131d9d  4      OPC=movq_m64_r64    
  movq 0x294498(%rip), %rax              #  30    0x131da1  7      OPC=movq_r64_m64    
  movq %rcx, 0x18(%r13)                  #  31    0x131da8  4      OPC=movq_m64_r64    
  movq %rdx, 0x20(%r13)                  #  32    0x131dac  4      OPC=movq_m64_r64    
  movq %rcx, 0x18(%rbx)                  #  33    0x131db0  4      OPC=movq_m64_r64    
  movq %rdx, 0x20(%rbx)                  #  34    0x131db4  4      OPC=movq_m64_r64    
  movq %rax, 0x28(%r13)                  #  35    0x131db8  4      OPC=movq_m64_r64    
  movq %rax, 0x28(%rbx)                  #  36    0x131dbc  4      OPC=movq_m64_r64    
  movq $0x0, 0x30(%r13)                  #  37    0x131dc0  8      OPC=movq_m64_imm32  
  callq .malloc_plt                      #  38    0x131dc8  5      OPC=callq_label     
  movq 0x10(%rsp), %rax                  #  39    0x131dcd  5      OPC=movq_r64_m64    
  movl %r12d, 0x38(%rsp)                 #  40    0x131dd2  5      OPC=movl_m32_r32    
  leaq 0xb0(%rsp), %r12                  #  41    0x131dd7  8      OPC=leaq_r64_m16    
  movq %rbp, 0x40(%rsp)                  #  42    0x131ddf  5      OPC=movq_m64_r64    
  leaq 0x50(%rsp), %rbp                  #  43    0x131de4  5      OPC=leaq_r64_m16    
  xorl %ecx, %ecx                        #  44    0x131de9  2      OPC=xorl_r32_r32    
  movl $0x190, %edx                      #  45    0x131deb  5      OPC=movl_r32_imm32  
  movq %r12, %rsi                        #  46    0x131df0  3      OPC=movq_r64_r64    
  movq %r15, 0x28(%rsp)                  #  47    0x131df3  5      OPC=movq_m64_r64    
  movq %rax, 0x20(%rsp)                  #  48    0x131df8  5      OPC=movq_m64_r64    
  movl 0xc(%rsp), %eax                   #  49    0x131dfd  4      OPC=movl_r32_m32    
  movq %rbp, %rdi                        #  50    0x131e01  3      OPC=movq_r64_r64    
  movl %r14d, 0x30(%rsp)                 #  51    0x131e04  5      OPC=movl_m32_r32    
  movl %eax, 0x34(%rsp)                  #  52    0x131e09  4      OPC=movl_m32_r32    
  callq .xdrmem_create_GLIBC_2_2_5       #  53    0x131e0d  5      OPC=callq_label     
  leaq 0x20(%rsp), %rsi                  #  54    0x131e12  5      OPC=leaq_r64_m16    
  movq %rbp, %rdi                        #  55    0x131e17  3      OPC=movq_r64_r64    
  callq .xdr_authunix_parms_GLIBC_2_2_5  #  56    0x131e1a  5      OPC=callq_label     
  testl %eax, %eax                       #  57    0x131e1f  2      OPC=testl_r32_r32   
  je .L_131f69                           #  58    0x131e21  6      OPC=je_label_1      
  movq 0x58(%rsp), %rax                  #  59    0x131e27  5      OPC=movq_r64_m64    
  movq %rbp, %rdi                        #  60    0x131e2c  3      OPC=movq_r64_r64    
  callq 0x20(%rax)                       #  61    0x131e2f  3      OPC=callq_m64       
  movl %eax, %ebp                        #  62    0x131e32  2      OPC=movl_r32_r32    
  movl %eax, 0x10(%r13)                  #  63    0x131e34  4      OPC=movl_m32_r32    
  movl $0x1, (%r13)                      #  64    0x131e38  8      OPC=movl_m32_imm32  
  movq %rbp, %rdi                        #  65    0x131e40  3      OPC=movq_r64_r64    
  callq .memalign_plt                    #  66    0x131e43  5      OPC=callq_label     
  testq %rax, %rax                       #  67    0x131e48  3      OPC=testq_r64_r64   
  movq %rax, 0x8(%r13)                   #  68    0x131e4b  4      OPC=movq_m64_r64    
  je .L_131f20                           #  69    0x131e4f  6      OPC=je_label_1      
  movq %rbp, %rdx                        #  70    0x131e55  3      OPC=movq_r64_r64    
  movq %r12, %rsi                        #  71    0x131e58  3      OPC=movq_r64_r64    
  movq %rax, %rdi                        #  72    0x131e5b  3      OPC=movq_r64_r64    
  callq .__GI_memcpy                     #  73    0x131e5e  5      OPC=callq_label     
  movq (%r13), %rax                      #  74    0x131e63  4      OPC=movq_r64_m64    
  movq 0x40(%rbx), %r12                  #  75    0x131e67  4      OPC=movq_r64_m64    
  leaq 0x80(%rsp), %rbp                  #  76    0x131e6b  8      OPC=leaq_r64_m16    
  xorl %ecx, %ecx                        #  77    0x131e73  2      OPC=xorl_r32_r32    
  movl $0x190, %edx                      #  78    0x131e75  5      OPC=movl_r32_imm32  
  movq %rbp, %rdi                        #  79    0x131e7a  3      OPC=movq_r64_r64    
  movq %rax, (%rbx)                      #  80    0x131e7d  3      OPC=movq_m64_r64    
  movq 0x8(%r13), %rax                   #  81    0x131e80  4      OPC=movq_r64_m64    
  leaq 0x38(%r12), %rsi                  #  82    0x131e84  5      OPC=leaq_r64_m16    
  movq %rax, 0x8(%rbx)                   #  83    0x131e89  4      OPC=movq_m64_r64    
  movq 0x10(%r13), %rax                  #  84    0x131e8d  4      OPC=movq_r64_m64    
  movq %rax, 0x10(%rbx)                  #  85    0x131e91  4      OPC=movq_m64_r64    
  callq .xdrmem_create_GLIBC_2_2_5       #  86    0x131e95  5      OPC=callq_label     
  movq %rbx, %rsi                        #  87    0x131e9a  3      OPC=movq_r64_r64    
  movq %rbp, %rdi                        #  88    0x131e9d  3      OPC=movq_r64_r64    
  callq .xdr_opaque_auth_GLIBC_2_2_5     #  89    0x131ea0  5      OPC=callq_label     
  testl %eax, %eax                       #  90    0x131ea5  2      OPC=testl_r32_r32   
  jne .L_131ef8                          #  91    0x131ea7  2      OPC=jne_label       
.L_131ea9:                               #        0x131ea9  0      OPC=<label>         
  leaq 0x586ec(%rip), %rdi               #  92    0x131ea9  7      OPC=leaq_r64_m16    
  leaq 0x5eac9(%rip), %rsi               #  93    0x131eb0  7      OPC=leaq_r64_m16    
  movl $0x5, %edx                        #  94    0x131eb7  5      OPC=movl_r32_imm32  
  callq .__dcgettext                     #  95    0x131ebc  5      OPC=callq_label     
  movq %rax, %rdi                        #  96    0x131ec1  3      OPC=movq_r64_r64    
  callq .perror                          #  97    0x131ec4  5      OPC=callq_label     
.L_131ec9:                               #        0x131ec9  0      OPC=<label>         
  movq 0x88(%rsp), %rax                  #  98    0x131ec9  8      OPC=movq_r64_m64    
  movq 0x38(%rax), %rax                  #  99    0x131ed1  4      OPC=movq_r64_m64    
  testq %rax, %rax                       #  100   0x131ed5  3      OPC=testq_r64_r64   
  je .L_131edf                           #  101   0x131ed8  2      OPC=je_label        
  movq %rbp, %rdi                        #  102   0x131eda  3      OPC=movq_r64_r64    
  callq %rax                             #  103   0x131edd  2      OPC=callq_r64       
.L_131edf:                               #        0x131edf  0      OPC=<label>         
  movq %rbx, %rax                        #  104   0x131edf  3      OPC=movq_r64_r64    
.L_131ee2:                               #        0x131ee2  0      OPC=<label>         
  addq $0x248, %rsp                      #  105   0x131ee2  7      OPC=addq_r64_imm32  
  popq %rbx                              #  106   0x131ee9  1      OPC=popq_r64_1      
  popq %rbp                              #  107   0x131eea  1      OPC=popq_r64_1      
  popq %r12                              #  108   0x131eeb  2      OPC=popq_r64_1      
  popq %r13                              #  109   0x131eed  2      OPC=popq_r64_1      
  popq %r14                              #  110   0x131eef  2      OPC=popq_r64_1      
  popq %r15                              #  111   0x131ef1  2      OPC=popq_r64_1      
  retq                                   #  112   0x131ef3  1      OPC=retq            
  nop                                    #  113   0x131ef4  1      OPC=nop             
  nop                                    #  114   0x131ef5  1      OPC=nop             
  nop                                    #  115   0x131ef6  1      OPC=nop             
  nop                                    #  116   0x131ef7  1      OPC=nop             
.L_131ef8:                               #        0x131ef8  0      OPC=<label>         
  leaq 0x18(%rbx), %rsi                  #  117   0x131ef8  4      OPC=leaq_r64_m16    
  movq %rbp, %rdi                        #  118   0x131efc  3      OPC=movq_r64_r64    
  callq .xdr_opaque_auth_GLIBC_2_2_5     #  119   0x131eff  5      OPC=callq_label     
  testl %eax, %eax                       #  120   0x131f04  2      OPC=testl_r32_r32   
  je .L_131ea9                           #  121   0x131f06  2      OPC=je_label        
  movq 0x88(%rsp), %rax                  #  122   0x131f08  8      OPC=movq_r64_m64    
  movq %rbp, %rdi                        #  123   0x131f10  3      OPC=movq_r64_r64    
  callq 0x20(%rax)                       #  124   0x131f13  3      OPC=callq_m64       
  movl %eax, 0x1c8(%r12)                 #  125   0x131f16  8      OPC=movl_m32_r32    
  jmpq .L_131ec9                         #  126   0x131f1e  2      OPC=jmpq_label      
.L_131f20:                               #        0x131f20  0      OPC=<label>         
  leaq 0x5b94c(%rip), %rsi               #  127   0x131f20  7      OPC=leaq_r64_m16    
  leaq 0x5866e(%rip), %rdi               #  128   0x131f27  7      OPC=leaq_r64_m16    
  movl $0x5, %edx                        #  129   0x131f2e  5      OPC=movl_r32_imm32  
  callq .__dcgettext                     #  130   0x131f33  5      OPC=callq_label     
  leaq 0x5f3b1(%rip), %rdx               #  131   0x131f38  7      OPC=leaq_r64_m16    
  leaq 0x5b047(%rip), %rsi               #  132   0x131f3f  7      OPC=leaq_r64_m16    
  movq %rax, %rcx                        #  133   0x131f46  3      OPC=movq_r64_r64    
  xorl %edi, %edi                        #  134   0x131f49  2      OPC=xorl_r32_r32    
  xorl %eax, %eax                        #  135   0x131f4b  2      OPC=xorl_r32_r32    
  callq .__fxprintf                      #  136   0x131f4d  5      OPC=callq_label     
  movq %rbx, %rdi                        #  137   0x131f52  3      OPC=movq_r64_r64    
  callq .L_1f8c0                         #  138   0x131f55  5      OPC=callq_label     
  movq %r13, %rdi                        #  139   0x131f5a  3      OPC=movq_r64_r64    
  callq .L_1f8c0                         #  140   0x131f5d  5      OPC=callq_label     
  xorl %eax, %eax                        #  141   0x131f62  2      OPC=xorl_r32_r32    
  jmpq .L_131ee2                         #  142   0x131f64  5      OPC=jmpq_label_1    
.L_131f69:                               #        0x131f69  0      OPC=<label>         
  callq .abort                           #  143   0x131f69  5      OPC=callq_label     
  xchgw %ax, %ax                         #  144   0x131f6e  2      OPC=xchgw_ax_r16    
                                                                                       
.size authunix_create_GLIBC_2_2_5, .-authunix_create_GLIBC_2_2_5

