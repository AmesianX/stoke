  .text
  .globl getkeyserv_handle
  .type getkeyserv_handle, @function

#! file-offset 0x134470
#! rip-offset  0x134470
#! capacity    544 bytes

# Text                                #  Line  RIP       Bytes  Opcode              
.getkeyserv_handle:                   #        0x134470  0      OPC=<label>         
  pushq %rbp                          #  1     0x134470  1      OPC=pushq_r64_1     
  pushq %rbx                          #  2     0x134471  1      OPC=pushq_r64_1     
  subq $0xa8, %rsp                    #  3     0x134472  7      OPC=subq_r64_imm32  
  movl %edi, 0xc(%rsp)                #  4     0x134479  4      OPC=movl_m32_r32    
  callq .__rpc_thread_variables       #  5     0x13447d  5      OPC=callq_label     
  movq 0xc8(%rax), %rbx               #  6     0x134482  7      OPC=movq_r64_m64    
  movq %rax, %rbp                     #  7     0x134489  3      OPC=movq_r64_r64    
  movl $0x6e, 0x1c(%rsp)              #  8     0x13448c  8      OPC=movl_m32_imm32  
  testq %rbx, %rbx                    #  9     0x134494  3      OPC=testq_r64_r64   
  je .L_134658                        #  10    0x134497  6      OPC=je_label_1      
  cmpq $0x0, (%rbx)                   #  11    0x13449d  4      OPC=cmpq_m64_imm8   
  je .L_1344d1                        #  12    0x1344a1  2      OPC=je_label        
  movl 0x8(%rbx), %ebp                #  13    0x1344a3  3      OPC=movl_r32_m32    
  callq .__getpid                     #  14    0x1344a6  5      OPC=callq_label     
  cmpl %eax, %ebp                     #  15    0x1344ab  2      OPC=cmpl_r32_r32    
  je .L_134580                        #  16    0x1344ad  6      OPC=je_label_1      
.L_1344b3:                            #        0x1344b3  0      OPC=<label>         
  movq (%rbx), %rax                   #  17    0x1344b3  3      OPC=movq_r64_m64    
  movq (%rax), %rdi                   #  18    0x1344b6  3      OPC=movq_r64_m64    
  movq 0x38(%rdi), %rax               #  19    0x1344b9  4      OPC=movq_r64_m64    
  callq 0x20(%rax)                    #  20    0x1344bd  3      OPC=callq_m64       
  movq (%rbx), %rdi                   #  21    0x1344c0  3      OPC=movq_r64_m64    
  movq 0x8(%rdi), %rax                #  22    0x1344c3  4      OPC=movq_r64_m64    
  callq 0x20(%rax)                    #  23    0x1344c7  3      OPC=callq_m64       
  movq $0x0, (%rbx)                   #  24    0x1344ca  7      OPC=movq_m64_imm32  
.L_1344d1:                            #        0x1344d1  0      OPC=<label>         
  movslq 0xc(%rsp), %rdx              #  25    0x1344d1  5      OPC=movslq_r64_m32  
  leaq 0x59432(%rip), %rcx            #  26    0x1344d6  7      OPC=leaq_r64_m16    
  leaq 0x594b9(%rip), %rdi            #  27    0x1344dd  7      OPC=leaq_r64_m16    
  movl $0x186bd, %esi                 #  28    0x1344e4  5      OPC=movl_r32_imm32  
  callq .clnt_create_GLIBC_2_2_5      #  29    0x1344e9  5      OPC=callq_label     
  testq %rax, %rax                    #  30    0x1344ee  3      OPC=testq_r64_r64   
  movq %rax, (%rbx)                   #  31    0x1344f1  3      OPC=movq_m64_r64    
  je .L_13468b                        #  32    0x1344f4  6      OPC=je_label_1      
  callq .geteuid                      #  33    0x1344fa  5      OPC=callq_label     
  movl %eax, 0xc(%rbx)                #  34    0x1344ff  3      OPC=movl_m32_r32    
  callq .__getpid                     #  35    0x134502  5      OPC=callq_label     
  movl 0xc(%rbx), %esi                #  36    0x134507  3      OPC=movl_r32_m32    
  leaq 0x55ff0(%rip), %rdi            #  37    0x13450a  7      OPC=leaq_r64_m16    
  xorl %r8d, %r8d                     #  38    0x134511  3      OPC=xorl_r32_r32    
  xorl %ecx, %ecx                     #  39    0x134514  2      OPC=xorl_r32_r32    
  xorl %edx, %edx                     #  40    0x134516  2      OPC=xorl_r32_r32    
  movl %eax, 0x8(%rbx)                #  41    0x134518  3      OPC=movl_m32_r32    
  movq (%rbx), %rbp                   #  42    0x13451b  3      OPC=movq_r64_m64    
  callq .authunix_create_GLIBC_2_2_5  #  43    0x13451e  5      OPC=callq_label     
  movq (%rbx), %rdi                   #  44    0x134523  3      OPC=movq_r64_m64    
  movq %rax, (%rbp)                   #  45    0x134526  4      OPC=movq_m64_r64    
  cmpq $0x0, (%rdi)                   #  46    0x13452a  4      OPC=cmpq_m64_imm8   
  je .L_13467d                        #  47    0x13452e  6      OPC=je_label_1      
  movq 0x8(%rdi), %rax                #  48    0x134534  4      OPC=movq_r64_m64    
  leaq 0x20(%rsp), %rdx               #  49    0x134538  5      OPC=leaq_r64_m16    
  movl $0x4, %esi                     #  50    0x13453d  5      OPC=movl_r32_imm32  
  movq $0x6, 0x20(%rsp)               #  51    0x134542  9      OPC=movq_m64_imm32  
  movq $0x0, 0x28(%rsp)               #  52    0x13454b  9      OPC=movq_m64_imm32  
  callq 0x28(%rax)                    #  53    0x134554  3      OPC=callq_m64       
  movq (%rbx), %rdi                   #  54    0x134557  3      OPC=movq_r64_m64    
  leaq 0x18(%rsp), %rdx               #  55    0x13455a  5      OPC=leaq_r64_m16    
  movl $0x6, %esi                     #  56    0x13455f  5      OPC=movl_r32_imm32  
  movq 0x8(%rdi), %rax                #  57    0x134564  4      OPC=movq_r64_m64    
  callq 0x28(%rax)                    #  58    0x134568  3      OPC=callq_m64       
  testl %eax, %eax                    #  59    0x13456b  2      OPC=testl_r32_r32   
  jne .L_134638                       #  60    0x13456d  6      OPC=jne_label_1     
.L_134573:                            #        0x134573  0      OPC=<label>         
  movq (%rbx), %rax                   #  61    0x134573  3      OPC=movq_r64_m64    
  addq $0xa8, %rsp                    #  62    0x134576  7      OPC=addq_r64_imm32  
  popq %rbx                           #  63    0x13457d  1      OPC=popq_r64_1      
  popq %rbp                           #  64    0x13457e  1      OPC=popq_r64_1      
  retq                                #  65    0x13457f  1      OPC=retq            
.L_134580:                            #        0x134580  0      OPC=<label>         
  movq (%rbx), %rdi                   #  66    0x134580  3      OPC=movq_r64_m64    
  testq %rdi, %rdi                    #  67    0x134583  3      OPC=testq_r64_r64   
  je .L_1344d1                        #  68    0x134586  6      OPC=je_label_1      
  movq 0x8(%rdi), %rax                #  69    0x13458c  4      OPC=movq_r64_m64    
  leaq 0x18(%rsp), %rdx               #  70    0x134590  5      OPC=leaq_r64_m16    
  movl $0x6, %esi                     #  71    0x134595  5      OPC=movl_r32_imm32  
  callq 0x28(%rax)                    #  72    0x13459a  3      OPC=callq_m64       
  movl 0x18(%rsp), %edi               #  73    0x13459d  4      OPC=movl_r32_m32    
  leaq 0x30(%rsp), %rsi               #  74    0x1345a1  5      OPC=leaq_r64_m16    
  leaq 0x1c(%rsp), %rdx               #  75    0x1345a6  5      OPC=leaq_r64_m16    
  callq .getpeername                  #  76    0x1345ab  5      OPC=callq_label     
  cmpl $0xffffffff, %eax              #  77    0x1345b0  6      OPC=cmpl_r32_imm32  
  nop                                 #  78    0x1345b6  1      OPC=nop             
  nop                                 #  79    0x1345b7  1      OPC=nop             
  nop                                 #  80    0x1345b8  1      OPC=nop             
  je .L_1344b3                        #  81    0x1345b9  6      OPC=je_label_1      
  cmpq $0x0, (%rbx)                   #  82    0x1345bf  4      OPC=cmpq_m64_imm8   
  je .L_1344d1                        #  83    0x1345c3  6      OPC=je_label_1      
  movl 0xc(%rbx), %ebp                #  84    0x1345c9  3      OPC=movl_r32_m32    
  callq .geteuid                      #  85    0x1345cc  5      OPC=callq_label     
  cmpl %eax, %ebp                     #  86    0x1345d1  2      OPC=cmpl_r32_r32    
  je .L_134630                        #  87    0x1345d3  2      OPC=je_label        
  callq .geteuid                      #  88    0x1345d5  5      OPC=callq_label     
  movl %eax, 0xc(%rbx)                #  89    0x1345da  3      OPC=movl_m32_r32    
  movq (%rbx), %rax                   #  90    0x1345dd  3      OPC=movq_r64_m64    
  movq (%rax), %rdi                   #  91    0x1345e0  3      OPC=movq_r64_m64    
  movq 0x38(%rdi), %rax               #  92    0x1345e3  4      OPC=movq_r64_m64    
  callq 0x20(%rax)                    #  93    0x1345e7  3      OPC=callq_m64       
  movl 0xc(%rbx), %esi                #  94    0x1345ea  3      OPC=movl_r32_m32    
  leaq 0x55f13(%rip), %rdi            #  95    0x1345ed  7      OPC=leaq_r64_m16    
  xorl %r8d, %r8d                     #  96    0x1345f4  3      OPC=xorl_r32_r32    
  xorl %ecx, %ecx                     #  97    0x1345f7  2      OPC=xorl_r32_r32    
  xorl %edx, %edx                     #  98    0x1345f9  2      OPC=xorl_r32_r32    
  movq (%rbx), %rbp                   #  99    0x1345fb  3      OPC=movq_r64_m64    
  callq .authunix_create_GLIBC_2_2_5  #  100   0x1345fe  5      OPC=callq_label     
  movq (%rbx), %rdi                   #  101   0x134603  3      OPC=movq_r64_m64    
  movq %rax, (%rbp)                   #  102   0x134606  4      OPC=movq_m64_r64    
  cmpq $0x0, (%rdi)                   #  103   0x13460a  4      OPC=cmpq_m64_imm8   
  je .L_13467d                        #  104   0x13460e  2      OPC=je_label        
.L_13460a:                            #        0x134610  0      OPC=<label>         
  movq 0x8(%rdi), %rax                #  105   0x134610  4      OPC=movq_r64_m64    
  leaq 0xc(%rsp), %rdx                #  106   0x134614  5      OPC=leaq_r64_m16    
  movl $0xd, %esi                     #  107   0x134619  5      OPC=movl_r32_imm32  
  callq 0x28(%rax)                    #  108   0x13461e  3      OPC=callq_m64       
  movq (%rbx), %rax                   #  109   0x134621  3      OPC=movq_r64_m64    
.L_13461e:                            #        0x134624  0      OPC=<label>         
  addq $0xa8, %rsp                    #  110   0x134624  7      OPC=addq_r64_imm32  
  popq %rbx                           #  111   0x13462b  1      OPC=popq_r64_1      
  popq %rbp                           #  112   0x13462c  1      OPC=popq_r64_1      
  retq                                #  113   0x13462d  1      OPC=retq            
  nop                                 #  114   0x13462e  1      OPC=nop             
  nop                                 #  115   0x13462f  1      OPC=nop             
  nop                                 #  116   0x134630  1      OPC=nop             
  nop                                 #  117   0x134631  1      OPC=nop             
  nop                                 #  118   0x134632  1      OPC=nop             
  nop                                 #  119   0x134633  1      OPC=nop             
  nop                                 #  120   0x134634  1      OPC=nop             
  nop                                 #  121   0x134635  1      OPC=nop             
.L_134630:                            #        0x134636  0      OPC=<label>         
  movq (%rbx), %rdi                   #  122   0x134636  3      OPC=movq_r64_m64    
  jmpq .L_13460a                      #  123   0x134639  2      OPC=jmpq_label      
  nop                                 #  124   0x13463b  1      OPC=nop             
  nop                                 #  125   0x13463c  1      OPC=nop             
  nop                                 #  126   0x13463d  1      OPC=nop             
.L_134638:                            #        0x13463e  0      OPC=<label>         
  movl 0x18(%rsp), %edi               #  127   0x13463e  4      OPC=movl_r32_m32    
  movl $0x1, %edx                     #  128   0x134642  5      OPC=movl_r32_imm32  
  movl $0x2, %esi                     #  129   0x134647  5      OPC=movl_r32_imm32  
  xorl %eax, %eax                     #  130   0x13464c  2      OPC=xorl_r32_r32    
  callq .__fcntl                      #  131   0x13464e  5      OPC=callq_label     
  jmpq .L_134573                      #  132   0x134653  5      OPC=jmpq_label_1    
  nop                                 #  133   0x134658  1      OPC=nop             
  nop                                 #  134   0x134659  1      OPC=nop             
  nop                                 #  135   0x13465a  1      OPC=nop             
  nop                                 #  136   0x13465b  1      OPC=nop             
  nop                                 #  137   0x13465c  1      OPC=nop             
  nop                                 #  138   0x13465d  1      OPC=nop             
.L_134658:                            #        0x13465e  0      OPC=<label>         
  movl $0x10, %edi                    #  139   0x13465e  5      OPC=movl_r32_imm32  
  callq .memalign_plt                 #  140   0x134663  5      OPC=callq_label     
  testq %rax, %rax                    #  141   0x134668  3      OPC=testq_r64_r64   
  movq %rax, %rbx                     #  142   0x13466b  3      OPC=movq_r64_r64    
  je .L_13468b                        #  143   0x13466e  2      OPC=je_label        
  movq %rax, 0xc8(%rbp)               #  144   0x134670  7      OPC=movq_m64_r64    
  movq $0x0, (%rax)                   #  145   0x134677  7      OPC=movq_m64_imm32  
  jmpq .L_1344d1                      #  146   0x13467e  5      OPC=jmpq_label_1    
.L_13467d:                            #        0x134683  0      OPC=<label>         
  movq 0x8(%rdi), %rax                #  147   0x134683  4      OPC=movq_r64_m64    
  callq 0x20(%rax)                    #  148   0x134687  3      OPC=callq_m64       
  movq $0x0, (%rbx)                   #  149   0x13468a  7      OPC=movq_m64_imm32  
.L_13468b:                            #        0x134691  0      OPC=<label>         
  xorl %eax, %eax                     #  150   0x134691  2      OPC=xorl_r32_r32    
  jmpq .L_13461e                      #  151   0x134693  2      OPC=jmpq_label      
  nop                                 #  152   0x134695  1      OPC=nop             
                                                                                    
.size getkeyserv_handle, .-getkeyserv_handle

