  .text
  .globl check_arrival_expand_ecl
  .type check_arrival_expand_ecl, @function

#! file-offset 0xd8da0
#! rip-offset  0xd8da0
#! capacity    352 bytes

# Text                                 #  Line  RIP      Bytes  Opcode              
.check_arrival_expand_ecl:             #        0xd8da0  0      OPC=<label>         
  pushq %r15                           #  1     0xd8da0  2      OPC=pushq_r64_1     
  pushq %r14                           #  2     0xd8da2  2      OPC=pushq_r64_1     
  movq %rdi, %r15                      #  3     0xd8da4  3      OPC=movq_r64_r64    
  pushq %r13                           #  4     0xd8da7  2      OPC=pushq_r64_1     
  pushq %r12                           #  5     0xd8da9  2      OPC=pushq_r64_1     
  movq %rsi, %r13                      #  6     0xd8dab  3      OPC=movq_r64_r64    
  pushq %rbp                           #  7     0xd8dae  1      OPC=pushq_r64_1     
  pushq %rbx                           #  8     0xd8daf  1      OPC=pushq_r64_1     
  movl %edx, %ebp                      #  9     0xd8db0  2      OPC=movl_r32_r32    
  movl %ecx, %ebx                      #  10    0xd8db2  2      OPC=movl_r32_r32    
  subq $0x28, %rsp                     #  11    0xd8db4  4      OPC=subq_r64_imm8   
  movslq 0x4(%rsi), %rdi               #  12    0xd8db8  4      OPC=movslq_r64_m32  
  movl $0x0, 0x14(%rsp)                #  13    0xd8dbc  8      OPC=movl_m32_imm32  
  movl %edi, 0x10(%rsp)                #  14    0xd8dc4  4      OPC=movl_m32_r32    
  movq %rdi, %r12                      #  15    0xd8dc8  3      OPC=movq_r64_r64    
  shlq $0x2, %rdi                      #  16    0xd8dcb  4      OPC=shlq_r64_imm8   
  callq .memalign_plt                  #  17    0xd8dcf  5      OPC=callq_label     
  testq %rax, %rax                     #  18    0xd8dd4  3      OPC=testq_r64_r64   
  movq %rax, 0x18(%rsp)                #  19    0xd8dd7  5      OPC=movq_m64_r64    
  je .L_d8ee7                          #  20    0xd8ddc  6      OPC=je_label_1      
  testl %r12d, %r12d                   #  21    0xd8de2  3      OPC=testl_r32_r32   
  jle .L_d8e89                         #  22    0xd8de5  6      OPC=jle_label_1     
  leaq 0x10(%rsp), %rax                #  23    0xd8deb  5      OPC=leaq_r64_m16    
  xorl %r12d, %r12d                    #  24    0xd8df0  3      OPC=xorl_r32_r32    
  xorl %r14d, %r14d                    #  25    0xd8df3  3      OPC=xorl_r32_r32    
  movq %rax, 0x8(%rsp)                 #  26    0xd8df6  5      OPC=movq_m64_r64    
  nop                                  #  27    0xd8dfb  1      OPC=nop             
  nop                                  #  28    0xd8dfc  1      OPC=nop             
  nop                                  #  29    0xd8dfd  1      OPC=nop             
  nop                                  #  30    0xd8dfe  1      OPC=nop             
  nop                                  #  31    0xd8dff  1      OPC=nop             
.L_d8e00:                              #        0xd8e00  0      OPC=<label>         
  movq 0x8(%r13), %rax                 #  32    0xd8e00  4      OPC=movq_r64_m64    
  movslq (%rax,%r12,1), %rsi           #  33    0xd8e04  4      OPC=movslq_r64_m32  
  movq %rsi, %rdx                      #  34    0xd8e08  3      OPC=movq_r64_r64    
  shlq $0x4, %rsi                      #  35    0xd8e0b  4      OPC=shlq_r64_imm8   
  addq 0x30(%r15), %rsi                #  36    0xd8e0f  4      OPC=addq_r64_m64    
  movl 0x4(%rsi), %eax                 #  37    0xd8e13  3      OPC=movl_r32_m32    
  testl %eax, %eax                     #  38    0xd8e16  2      OPC=testl_r32_r32   
  jle .L_d8eb8                         #  39    0xd8e18  6      OPC=jle_label_1     
  movq 0x8(%rsi), %rcx                 #  40    0xd8e1e  4      OPC=movq_r64_m64    
  subl $0x1, %eax                      #  41    0xd8e22  3      OPC=subl_r32_imm8   
  movq (%r15), %r10                    #  42    0xd8e25  3      OPC=movq_r64_m64    
  leaq 0x4(,%rax,4), %r8               #  43    0xd8e28  8      OPC=leaq_r64_m16    
  addq %rcx, %r8                       #  44    0xd8e30  3      OPC=addq_r64_r64    
  jmpq .L_d8e41                        #  45    0xd8e33  2      OPC=jmpq_label      
  nop                                  #  46    0xd8e35  1      OPC=nop             
  nop                                  #  47    0xd8e36  1      OPC=nop             
  nop                                  #  48    0xd8e37  1      OPC=nop             
.L_d8e38:                              #        0xd8e38  0      OPC=<label>         
  addq $0x4, %rcx                      #  49    0xd8e38  4      OPC=addq_r64_imm8   
  cmpq %r8, %rcx                       #  50    0xd8e3c  3      OPC=cmpq_r64_r64    
  je .L_d8eb8                          #  51    0xd8e3f  2      OPC=je_label        
.L_d8e41:                              #        0xd8e41  0      OPC=<label>         
  movslq (%rcx), %rax                  #  52    0xd8e41  3      OPC=movslq_r64_m32  
  movq %rax, %rdi                      #  53    0xd8e44  3      OPC=movq_r64_r64    
  shlq $0x4, %rax                      #  54    0xd8e47  4      OPC=shlq_r64_imm8   
  addq %r10, %rax                      #  55    0xd8e4b  3      OPC=addq_r64_r64    
  movzbl 0x8(%rax), %r11d              #  56    0xd8e4e  5      OPC=movzbl_r32_m8   
  cmpl %r11d, %ebx                     #  57    0xd8e53  3      OPC=cmpl_r32_r32    
  jne .L_d8e38                         #  58    0xd8e56  2      OPC=jne_label       
  cmpl (%rax), %ebp                    #  59    0xd8e58  2      OPC=cmpl_r32_m32    
  jne .L_d8e38                         #  60    0xd8e5a  2      OPC=jne_label       
  cmpl $0xffffffff, %edi               #  61    0xd8e5c  6      OPC=cmpl_r32_imm32  
  nop                                  #  62    0xd8e62  1      OPC=nop             
  nop                                  #  63    0xd8e63  1      OPC=nop             
  nop                                  #  64    0xd8e64  1      OPC=nop             
  je .L_d8eb8                          #  65    0xd8e65  2      OPC=je_label        
  movq 0x8(%rsp), %rsi                 #  66    0xd8e67  5      OPC=movq_r64_m64    
  movl %ebx, %r8d                      #  67    0xd8e6c  3      OPC=movl_r32_r32    
  movl %ebp, %ecx                      #  68    0xd8e6f  2      OPC=movl_r32_r32    
  movq %r15, %rdi                      #  69    0xd8e71  3      OPC=movq_r64_r64    
  callq .check_arrival_expand_ecl_sub  #  70    0xd8e74  5      OPC=callq_label     
  testl %eax, %eax                     #  71    0xd8e79  2      OPC=testl_r32_r32   
  jne .L_d8ec6                         #  72    0xd8e7b  2      OPC=jne_label       
.L_d8e77:                              #        0xd8e7d  0      OPC=<label>         
  addl $0x1, %r14d                     #  73    0xd8e7d  4      OPC=addl_r32_imm8   
  addq $0x4, %r12                      #  74    0xd8e81  4      OPC=addq_r64_imm8   
  cmpl %r14d, 0x4(%r13)                #  75    0xd8e85  4      OPC=cmpl_m32_r32    
  jg .L_d8e00                          #  76    0xd8e89  6      OPC=jg_label_1      
.L_d8e89:                              #        0xd8e8f  0      OPC=<label>         
  movq 0x8(%r13), %rdi                 #  77    0xd8e8f  4      OPC=movq_r64_m64    
  callq .L_1f8c0                       #  78    0xd8e93  5      OPC=callq_label     
  movq 0x10(%rsp), %rax                #  79    0xd8e98  5      OPC=movq_r64_m64    
  movq 0x18(%rsp), %rdx                #  80    0xd8e9d  5      OPC=movq_r64_m64    
  movq %rax, (%r13)                    #  81    0xd8ea2  4      OPC=movq_m64_r64    
  movq %rdx, 0x8(%r13)                 #  82    0xd8ea6  4      OPC=movq_m64_r64    
  addq $0x28, %rsp                     #  83    0xd8eaa  4      OPC=addq_r64_imm8   
  popq %rbx                            #  84    0xd8eae  1      OPC=popq_r64_1      
  xorl %eax, %eax                      #  85    0xd8eaf  2      OPC=xorl_r32_r32    
  popq %rbp                            #  86    0xd8eb1  1      OPC=popq_r64_1      
  popq %r12                            #  87    0xd8eb2  2      OPC=popq_r64_1      
  popq %r13                            #  88    0xd8eb4  2      OPC=popq_r64_1      
  popq %r14                            #  89    0xd8eb6  2      OPC=popq_r64_1      
  popq %r15                            #  90    0xd8eb8  2      OPC=popq_r64_1      
  retq                                 #  91    0xd8eba  1      OPC=retq            
  nop                                  #  92    0xd8ebb  1      OPC=nop             
  nop                                  #  93    0xd8ebc  1      OPC=nop             
  nop                                  #  94    0xd8ebd  1      OPC=nop             
.L_d8eb8:                              #        0xd8ebe  0      OPC=<label>         
  movq 0x8(%rsp), %rdi                 #  95    0xd8ebe  5      OPC=movq_r64_m64    
  callq .re_node_set_merge             #  96    0xd8ec3  5      OPC=callq_label     
  testl %eax, %eax                     #  97    0xd8ec8  2      OPC=testl_r32_r32   
  je .L_d8e77                          #  98    0xd8eca  2      OPC=je_label        
.L_d8ec6:                              #        0xd8ecc  0      OPC=<label>         
  movq 0x18(%rsp), %rdi                #  99    0xd8ecc  5      OPC=movq_r64_m64    
  movl %eax, 0x8(%rsp)                 #  100   0xd8ed1  4      OPC=movl_m32_r32    
  callq .L_1f8c0                       #  101   0xd8ed5  5      OPC=callq_label     
  movl 0x8(%rsp), %eax                 #  102   0xd8eda  4      OPC=movl_r32_m32    
  addq $0x28, %rsp                     #  103   0xd8ede  4      OPC=addq_r64_imm8   
  popq %rbx                            #  104   0xd8ee2  1      OPC=popq_r64_1      
  popq %rbp                            #  105   0xd8ee3  1      OPC=popq_r64_1      
  popq %r12                            #  106   0xd8ee4  2      OPC=popq_r64_1      
  popq %r13                            #  107   0xd8ee6  2      OPC=popq_r64_1      
  popq %r14                            #  108   0xd8ee8  2      OPC=popq_r64_1      
  popq %r15                            #  109   0xd8eea  2      OPC=popq_r64_1      
  retq                                 #  110   0xd8eec  1      OPC=retq            
.L_d8ee7:                              #        0xd8eed  0      OPC=<label>         
  addq $0x28, %rsp                     #  111   0xd8eed  4      OPC=addq_r64_imm8   
  movl $0xc, %eax                      #  112   0xd8ef1  5      OPC=movl_r32_imm32  
  popq %rbx                            #  113   0xd8ef6  1      OPC=popq_r64_1      
  popq %rbp                            #  114   0xd8ef7  1      OPC=popq_r64_1      
  popq %r12                            #  115   0xd8ef8  2      OPC=popq_r64_1      
  popq %r13                            #  116   0xd8efa  2      OPC=popq_r64_1      
  popq %r14                            #  117   0xd8efc  2      OPC=popq_r64_1      
  popq %r15                            #  118   0xd8efe  2      OPC=popq_r64_1      
  retq                                 #  119   0xd8f00  1      OPC=retq            
  nop                                  #  120   0xd8f01  1      OPC=nop             
  nop                                  #  121   0xd8f02  1      OPC=nop             
  nop                                  #  122   0xd8f03  1      OPC=nop             
  nop                                  #  123   0xd8f04  1      OPC=nop             
  nop                                  #  124   0xd8f05  1      OPC=nop             
                                                                                    
.size check_arrival_expand_ecl, .-check_arrival_expand_ecl

