  .text
  .globl lower_subexp
  .type lower_subexp, @function

#! file-offset 0xd70b0
#! rip-offset  0xd70b0
#! capacity    896 bytes

# Text                                 #  Line  RIP      Bytes  Opcode              
.lower_subexp:                         #        0xd70b0  0      OPC=<label>         
  pushq %r15                           #  1     0xd70b0  2      OPC=pushq_r64_1     
  pushq %r14                           #  2     0xd70b2  2      OPC=pushq_r64_1     
  pushq %r13                           #  3     0xd70b4  2      OPC=pushq_r64_1     
  pushq %r12                           #  4     0xd70b6  2      OPC=pushq_r64_1     
  pushq %rbp                           #  5     0xd70b8  1      OPC=pushq_r64_1     
  pushq %rbx                           #  6     0xd70b9  1      OPC=pushq_r64_1     
  subq $0x18, %rsp                     #  7     0xd70ba  4      OPC=subq_r64_imm8   
  movq 0x8(%rdx), %r14                 #  8     0xd70be  4      OPC=movq_r64_m64    
  movq (%rsi), %rbx                    #  9     0xd70c2  3      OPC=movq_r64_m64    
  testq %r14, %r14                     #  10    0xd70c5  3      OPC=testq_r64_r64   
  setne %r15b                          #  11    0xd70c8  4      OPC=setne_r8        
  testb $0x10, 0x38(%rsi)              #  12    0xd70cc  4      OPC=testb_m8_imm8   
  je .L_d70f7                          #  13    0xd70d0  2      OPC=je_label        
  testb %r15b, %r15b                   #  14    0xd70d2  3      OPC=testb_r8_r8     
  je .L_d70f7                          #  15    0xd70d5  2      OPC=je_label        
  movl 0x28(%rdx), %ecx                #  16    0xd70d7  3      OPC=movl_r32_m32    
  movq %r14, %rax                      #  17    0xd70da  3      OPC=movq_r64_r64    
  cmpl $0x3f, %ecx                     #  18    0xd70dd  3      OPC=cmpl_r32_imm8   
  ja .L_d7303                          #  19    0xd70e0  6      OPC=ja_label_1      
  movq 0x90(%rbx), %rsi                #  20    0xd70e6  7      OPC=movq_r64_m64    
  btq %rcx, %rsi                       #  21    0xd70ed  4      OPC=btq_r64_r64     
  jae .L_d7303                         #  22    0xd70f1  6      OPC=jae_label_1     
.L_d70f7:                              #        0xd70f7  0      OPC=<label>         
  movslq 0x80(%rbx), %rcx              #  23    0xd70f7  7      OPC=movslq_r64_m32  
  movq %rdx, %rbp                      #  24    0xd70fe  3      OPC=movq_r64_r64    
  movq %rdi, %r12                      #  25    0xd7101  3      OPC=movq_r64_r64    
  cmpl $0xf, %ecx                      #  26    0xd7104  3      OPC=cmpl_r32_imm8   
  je .L_d7338                          #  27    0xd7107  6      OPC=je_label_1      
  movq 0x70(%rbx), %rax                #  28    0xd710d  4      OPC=movq_r64_m64    
  leal 0x1(%rcx), %edx                 #  29    0xd7111  3      OPC=leal_r32_m16    
.L_d7114:                              #        0xd7114  0      OPC=<label>         
  shlq $0x6, %rcx                      #  30    0xd7114  4      OPC=shlq_r64_imm8   
  movl %edx, 0x80(%rbx)                #  31    0xd7118  6      OPC=movl_m32_r32    
  leaq (%rax,%rcx,1), %rsi             #  32    0xd711e  4      OPC=leaq_r64_m16    
  leaq 0x20(%rcx), %rdx                #  33    0xd7122  4      OPC=leaq_r64_m16    
  leaq 0x10(%rax,%rcx,1), %rdi         #  34    0xd7126  5      OPC=leaq_r64_m16    
  addq %rax, %rdx                      #  35    0xd712b  3      OPC=addq_r64_r64    
  leaq 0x8(%rsi), %r13                 #  36    0xd712e  4      OPC=leaq_r64_m16    
  movq $0x0, 0x8(%rsi)                 #  37    0xd7132  8      OPC=movq_m64_imm32  
  movq $0x0, 0x10(%rsi)                #  38    0xd713a  8      OPC=movq_m64_imm32  
  movq $0x0, 0x8(%rdi)                 #  39    0xd7142  8      OPC=movq_m64_imm32  
  movb $0x8, 0x38(%rax,%rcx,1)         #  40    0xd714a  5      OPC=movb_m8_imm8    
  andb $0xf3, 0x1a(%rdx)               #  41    0xd714f  4      OPC=andb_m8_imm8    
  movq $0x0, 0x10(%rdi)                #  42    0xd7153  8      OPC=movq_m64_imm32  
  movq $0x0, 0x8(%rdx)                 #  43    0xd715b  8      OPC=movq_m64_imm32  
  movl $0xffffffff, 0x40(%rax,%rcx,1)  #  44    0xd7163  8      OPC=movl_m32_imm32  
.L_d716b:                              #        0xd716b  0      OPC=<label>         
  movslq 0x80(%rbx), %rcx              #  45    0xd716b  7      OPC=movslq_r64_m32  
  cmpl $0xf, %ecx                      #  46    0xd7172  3      OPC=cmpl_r32_imm8   
  je .L_d7368                          #  47    0xd7175  6      OPC=je_label_1      
  movq 0x70(%rbx), %rax                #  48    0xd717b  4      OPC=movq_r64_m64    
  leal 0x1(%rcx), %edx                 #  49    0xd717f  3      OPC=leal_r32_m16    
.L_d7182:                              #        0xd7182  0      OPC=<label>         
  shlq $0x6, %rcx                      #  50    0xd7182  4      OPC=shlq_r64_imm8   
  movl %edx, 0x80(%rbx)                #  51    0xd7186  6      OPC=movl_m32_r32    
  leaq (%rax,%rcx,1), %rdx             #  52    0xd718c  4      OPC=leaq_r64_m16    
  leaq 0x10(%rax,%rcx,1), %rdi         #  53    0xd7190  5      OPC=leaq_r64_m16    
  movq $0x0, 0x8(%rdx)                 #  54    0xd7195  8      OPC=movq_m64_imm32  
  movq $0x0, 0x10(%rdx)                #  55    0xd719d  8      OPC=movq_m64_imm32  
  leaq 0x8(%rdx), %rsi                 #  56    0xd71a5  4      OPC=leaq_r64_m16    
  leaq 0x20(%rcx), %rdx                #  57    0xd71a9  4      OPC=leaq_r64_m16    
  movq $0x0, 0x8(%rdi)                 #  58    0xd71ad  8      OPC=movq_m64_imm32  
  movb $0x9, 0x38(%rax,%rcx,1)         #  59    0xd71b5  5      OPC=movb_m8_imm8    
  addq %rax, %rdx                      #  60    0xd71ba  3      OPC=addq_r64_r64    
  andb $0xf3, 0x1a(%rdx)               #  61    0xd71bd  4      OPC=andb_m8_imm8    
  movq $0x0, 0x10(%rdi)                #  62    0xd71c1  8      OPC=movq_m64_imm32  
  movq $0x0, 0x8(%rdx)                 #  63    0xd71c9  8      OPC=movq_m64_imm32  
  movl $0xffffffff, 0x40(%rax,%rcx,1)  #  64    0xd71d1  8      OPC=movl_m32_imm32  
.L_d71d9:                              #        0xd71d9  0      OPC=<label>         
  testb %r15b, %r15b                   #  65    0xd71d9  3      OPC=testb_r8_r8     
  movq %rsi, %r8                       #  66    0xd71dc  3      OPC=movq_r64_r64    
  je .L_d7252                          #  67    0xd71df  2      OPC=je_label        
  movslq 0x80(%rbx), %rdx              #  68    0xd71e1  7      OPC=movslq_r64_m32  
  cmpl $0xf, %edx                      #  69    0xd71e8  3      OPC=cmpl_r32_imm8   
  je .L_d73e0                          #  70    0xd71eb  6      OPC=je_label_1      
  movq 0x70(%rbx), %rax                #  71    0xd71f1  4      OPC=movq_r64_m64    
  leal 0x1(%rdx), %ecx                 #  72    0xd71f5  3      OPC=leal_r32_m16    
.L_d71f8:                              #        0xd71f8  0      OPC=<label>         
  shlq $0x6, %rdx                      #  73    0xd71f8  4      OPC=shlq_r64_imm8   
  movl %ecx, 0x80(%rbx)                #  74    0xd71fc  6      OPC=movl_m32_r32    
  leaq (%rax,%rdx,1), %rcx             #  75    0xd7202  4      OPC=leaq_r64_m16    
  leaq 0x10(%rax,%rdx,1), %rdi         #  76    0xd7206  5      OPC=leaq_r64_m16    
  movq $0x0, 0x8(%rcx)                 #  77    0xd720b  8      OPC=movq_m64_imm32  
  movq %r14, 0x10(%rcx)                #  78    0xd7213  4      OPC=movq_m64_r64    
  leaq 0x8(%rcx), %r8                  #  79    0xd7217  4      OPC=leaq_r64_m16    
  leaq 0x20(%rdx), %rcx                #  80    0xd721b  4      OPC=leaq_r64_m16    
  movq %rsi, 0x8(%rdi)                 #  81    0xd721f  4      OPC=movq_m64_r64    
  movb $0x10, 0x38(%rax,%rdx,1)        #  82    0xd7223  5      OPC=movb_m8_imm8    
  addq %rax, %rcx                      #  83    0xd7228  3      OPC=addq_r64_r64    
  andb $0xf3, 0x1a(%rcx)               #  84    0xd722b  4      OPC=andb_m8_imm8    
  testq %rsi, %rsi                     #  85    0xd722f  3      OPC=testq_r64_r64   
  movq $0x0, 0x10(%rdi)                #  86    0xd7232  8      OPC=movq_m64_imm32  
  movq $0x0, 0x8(%rcx)                 #  87    0xd723a  8      OPC=movq_m64_imm32  
  movl $0xffffffff, 0x40(%rax,%rdx,1)  #  88    0xd7242  8      OPC=movl_m32_imm32  
  movq %r8, (%r14)                     #  89    0xd724a  3      OPC=movq_m64_r64    
  je .L_d7252                          #  90    0xd724d  2      OPC=je_label        
  movq %r8, (%rsi)                     #  91    0xd724f  3      OPC=movq_m64_r64    
.L_d7252:                              #        0xd7252  0      OPC=<label>         
  movslq 0x80(%rbx), %rcx              #  92    0xd7252  7      OPC=movslq_r64_m32  
  cmpl $0xf, %ecx                      #  93    0xd7259  3      OPC=cmpl_r32_imm8   
  je .L_d7398                          #  94    0xd725c  6      OPC=je_label_1      
  movq 0x70(%rbx), %rdi                #  95    0xd7262  4      OPC=movq_r64_m64    
  leal 0x1(%rcx), %eax                 #  96    0xd7266  3      OPC=leal_r32_m16    
.L_d7269:                              #        0xd7269  0      OPC=<label>         
  shlq $0x6, %rcx                      #  97    0xd7269  4      OPC=shlq_r64_imm8   
  movl %eax, 0x80(%rbx)                #  98    0xd726d  6      OPC=movl_m32_r32    
  leaq (%rdi,%rcx,1), %rdx             #  99    0xd7273  4      OPC=leaq_r64_m16    
  leaq 0x10(%rdi,%rcx,1), %r9          #  100   0xd7277  5      OPC=leaq_r64_m16    
  movq $0x0, 0x8(%rdx)                 #  101   0xd727c  8      OPC=movq_m64_imm32  
  movq %r13, 0x10(%rdx)                #  102   0xd7284  4      OPC=movq_m64_r64    
  leaq 0x8(%rdx), %rax                 #  103   0xd7288  4      OPC=leaq_r64_m16    
  leaq 0x20(%rcx), %rdx                #  104   0xd728c  4      OPC=leaq_r64_m16    
  movq %r8, 0x8(%r9)                   #  105   0xd7290  4      OPC=movq_m64_r64    
  movb $0x10, 0x38(%rdi,%rcx,1)        #  106   0xd7294  5      OPC=movb_m8_imm8    
  addq %rdi, %rdx                      #  107   0xd7299  3      OPC=addq_r64_r64    
  andb $0xf3, 0x1a(%rdx)               #  108   0xd729c  4      OPC=andb_m8_imm8    
  testq %r13, %r13                     #  109   0xd72a0  3      OPC=testq_r64_r64   
  movq $0x0, 0x10(%r9)                 #  110   0xd72a3  8      OPC=movq_m64_imm32  
  movq $0x0, 0x8(%rdx)                 #  111   0xd72ab  8      OPC=movq_m64_imm32  
  movl $0xffffffff, 0x40(%rdi,%rcx,1)  #  112   0xd72b3  8      OPC=movl_m32_imm32  
  je .L_d72c1                          #  113   0xd72bb  2      OPC=je_label        
  movq %rax, (%r13)                    #  114   0xd72bd  4      OPC=movq_m64_r64    
.L_d72c1:                              #        0xd72c1  0      OPC=<label>         
  testq %r8, %r8                       #  115   0xd72c1  3      OPC=testq_r64_r64   
  je .L_d7318                          #  116   0xd72c4  2      OPC=je_label        
  testq %rax, %rax                     #  117   0xd72c6  3      OPC=testq_r64_r64   
  movq %rax, (%r8)                     #  118   0xd72c9  3      OPC=movq_m64_r64    
  je .L_d7318                          #  119   0xd72cc  2      OPC=je_label        
  testq %r13, %r13                     #  120   0xd72ce  3      OPC=testq_r64_r64   
  je .L_d7318                          #  121   0xd72d1  2      OPC=je_label        
  testq %rsi, %rsi                     #  122   0xd72d3  3      OPC=testq_r64_r64   
  je .L_d7318                          #  123   0xd72d6  2      OPC=je_label        
  movl 0x28(%rbp), %edx                #  124   0xd72d8  3      OPC=movl_r32_m32    
  movl %edx, 0x28(%rsi)                #  125   0xd72db  3      OPC=movl_m32_r32    
  movl %edx, 0x28(%r13)                #  126   0xd72de  4      OPC=movl_m32_r32    
  movzbl 0x32(%rbp), %edx              #  127   0xd72e2  4      OPC=movzbl_r32_m8   
  movzbl 0x32(%rsi), %ecx              #  128   0xd72e6  4      OPC=movzbl_r32_m8   
  andl $0x8, %edx                      #  129   0xd72ea  3      OPC=andl_r32_imm8   
  andl $0xfffffff7, %ecx               #  130   0xd72ed  6      OPC=andl_r32_imm32  
  nop                                  #  131   0xd72f3  1      OPC=nop             
  nop                                  #  132   0xd72f4  1      OPC=nop             
  nop                                  #  133   0xd72f5  1      OPC=nop             
  orl %edx, %ecx                       #  134   0xd72f6  2      OPC=orl_r32_r32     
  movb %cl, 0x32(%rsi)                 #  135   0xd72f8  3      OPC=movb_m8_r8      
  movzbl 0x32(%r13), %ecx              #  136   0xd72fb  5      OPC=movzbl_r32_m8   
  andl $0xfffffff7, %ecx               #  137   0xd7300  6      OPC=andl_r32_imm32  
  nop                                  #  138   0xd7306  1      OPC=nop             
  nop                                  #  139   0xd7307  1      OPC=nop             
  nop                                  #  140   0xd7308  1      OPC=nop             
  orl %ecx, %edx                       #  141   0xd7309  2      OPC=orl_r32_r32     
  movb %dl, 0x32(%r13)                 #  142   0xd730b  4      OPC=movb_m8_r8      
.L_d7303:                              #        0xd730f  0      OPC=<label>         
  addq $0x18, %rsp                     #  143   0xd730f  4      OPC=addq_r64_imm8   
  popq %rbx                            #  144   0xd7313  1      OPC=popq_r64_1      
  popq %rbp                            #  145   0xd7314  1      OPC=popq_r64_1      
  popq %r12                            #  146   0xd7315  2      OPC=popq_r64_1      
  popq %r13                            #  147   0xd7317  2      OPC=popq_r64_1      
  popq %r14                            #  148   0xd7319  2      OPC=popq_r64_1      
  popq %r15                            #  149   0xd731b  2      OPC=popq_r64_1      
  retq                                 #  150   0xd731d  1      OPC=retq            
  nop                                  #  151   0xd731e  1      OPC=nop             
  nop                                  #  152   0xd731f  1      OPC=nop             
  nop                                  #  153   0xd7320  1      OPC=nop             
  nop                                  #  154   0xd7321  1      OPC=nop             
  nop                                  #  155   0xd7322  1      OPC=nop             
  nop                                  #  156   0xd7323  1      OPC=nop             
.L_d7318:                              #        0xd7324  0      OPC=<label>         
  movl $0xc, (%r12)                    #  157   0xd7324  8      OPC=movl_m32_imm32  
  addq $0x18, %rsp                     #  158   0xd732c  4      OPC=addq_r64_imm8   
  xorl %eax, %eax                      #  159   0xd7330  2      OPC=xorl_r32_r32    
  popq %rbx                            #  160   0xd7332  1      OPC=popq_r64_1      
  popq %rbp                            #  161   0xd7333  1      OPC=popq_r64_1      
  popq %r12                            #  162   0xd7334  2      OPC=popq_r64_1      
  popq %r13                            #  163   0xd7336  2      OPC=popq_r64_1      
  popq %r14                            #  164   0xd7338  2      OPC=popq_r64_1      
  popq %r15                            #  165   0xd733a  2      OPC=popq_r64_1      
  retq                                 #  166   0xd733c  1      OPC=retq            
  nop                                  #  167   0xd733d  1      OPC=nop             
  nop                                  #  168   0xd733e  1      OPC=nop             
  nop                                  #  169   0xd733f  1      OPC=nop             
  nop                                  #  170   0xd7340  1      OPC=nop             
  nop                                  #  171   0xd7341  1      OPC=nop             
  nop                                  #  172   0xd7342  1      OPC=nop             
  nop                                  #  173   0xd7343  1      OPC=nop             
.L_d7338:                              #        0xd7344  0      OPC=<label>         
  movl $0x3c8, %edi                    #  174   0xd7344  5      OPC=movl_r32_imm32  
  callq .memalign_plt                  #  175   0xd7349  5      OPC=callq_label     
  testq %rax, %rax                     #  176   0xd734e  3      OPC=testq_r64_r64   
  je .L_d740e                          #  177   0xd7351  6      OPC=je_label_1      
  movq 0x70(%rbx), %rdx                #  178   0xd7357  4      OPC=movq_r64_m64    
  xorl %ecx, %ecx                      #  179   0xd735b  2      OPC=xorl_r32_r32    
  movq %rdx, (%rax)                    #  180   0xd735d  3      OPC=movq_m64_r64    
  movq %rax, 0x70(%rbx)                #  181   0xd7360  4      OPC=movq_m64_r64    
  movl $0x1, %edx                      #  182   0xd7364  5      OPC=movl_r32_imm32  
  jmpq .L_d7114                        #  183   0xd7369  5      OPC=jmpq_label_1    
  nop                                  #  184   0xd736e  1      OPC=nop             
  nop                                  #  185   0xd736f  1      OPC=nop             
  nop                                  #  186   0xd7370  1      OPC=nop             
  nop                                  #  187   0xd7371  1      OPC=nop             
  nop                                  #  188   0xd7372  1      OPC=nop             
  nop                                  #  189   0xd7373  1      OPC=nop             
.L_d7368:                              #        0xd7374  0      OPC=<label>         
  movl $0x3c8, %edi                    #  190   0xd7374  5      OPC=movl_r32_imm32  
  callq .memalign_plt                  #  191   0xd7379  5      OPC=callq_label     
  testq %rax, %rax                     #  192   0xd737e  3      OPC=testq_r64_r64   
  je .L_d7416                          #  193   0xd7381  6      OPC=je_label_1      
  movq 0x70(%rbx), %rdx                #  194   0xd7387  4      OPC=movq_r64_m64    
  xorl %ecx, %ecx                      #  195   0xd738b  2      OPC=xorl_r32_r32    
  movq %rdx, (%rax)                    #  196   0xd738d  3      OPC=movq_m64_r64    
  movq %rax, 0x70(%rbx)                #  197   0xd7390  4      OPC=movq_m64_r64    
  movl $0x1, %edx                      #  198   0xd7394  5      OPC=movl_r32_imm32  
  jmpq .L_d7182                        #  199   0xd7399  5      OPC=jmpq_label_1    
  nop                                  #  200   0xd739e  1      OPC=nop             
  nop                                  #  201   0xd739f  1      OPC=nop             
  nop                                  #  202   0xd73a0  1      OPC=nop             
  nop                                  #  203   0xd73a1  1      OPC=nop             
  nop                                  #  204   0xd73a2  1      OPC=nop             
  nop                                  #  205   0xd73a3  1      OPC=nop             
.L_d7398:                              #        0xd73a4  0      OPC=<label>         
  movl $0x3c8, %edi                    #  206   0xd73a4  5      OPC=movl_r32_imm32  
  movq %r8, 0x8(%rsp)                  #  207   0xd73a9  5      OPC=movq_m64_r64    
  movq %rsi, (%rsp)                    #  208   0xd73ae  4      OPC=movq_m64_r64    
  callq .memalign_plt                  #  209   0xd73b2  5      OPC=callq_label     
  testq %rax, %rax                     #  210   0xd73b7  3      OPC=testq_r64_r64   
  je .L_d7318                          #  211   0xd73ba  6      OPC=je_label_1      
  movq 0x70(%rbx), %rdx                #  212   0xd73c0  4      OPC=movq_r64_m64    
  movq %rax, %rdi                      #  213   0xd73c4  3      OPC=movq_r64_r64    
  xorl %ecx, %ecx                      #  214   0xd73c7  2      OPC=xorl_r32_r32    
  movq 0x8(%rsp), %r8                  #  215   0xd73c9  5      OPC=movq_r64_m64    
  movq (%rsp), %rsi                    #  216   0xd73ce  4      OPC=movq_r64_m64    
  movq %rdx, (%rax)                    #  217   0xd73d2  3      OPC=movq_m64_r64    
  movq %rax, 0x70(%rbx)                #  218   0xd73d5  4      OPC=movq_m64_r64    
  movl $0x1, %eax                      #  219   0xd73d9  5      OPC=movl_r32_imm32  
  jmpq .L_d7269                        #  220   0xd73de  5      OPC=jmpq_label_1    
  nop                                  #  221   0xd73e3  1      OPC=nop             
  nop                                  #  222   0xd73e4  1      OPC=nop             
  nop                                  #  223   0xd73e5  1      OPC=nop             
  nop                                  #  224   0xd73e6  1      OPC=nop             
  nop                                  #  225   0xd73e7  1      OPC=nop             
  nop                                  #  226   0xd73e8  1      OPC=nop             
  nop                                  #  227   0xd73e9  1      OPC=nop             
  nop                                  #  228   0xd73ea  1      OPC=nop             
  nop                                  #  229   0xd73eb  1      OPC=nop             
.L_d73e0:                              #        0xd73ec  0      OPC=<label>         
  movl $0x3c8, %edi                    #  230   0xd73ec  5      OPC=movl_r32_imm32  
  movq %rsi, (%rsp)                    #  231   0xd73f1  4      OPC=movq_m64_r64    
  callq .memalign_plt                  #  232   0xd73f5  5      OPC=callq_label     
  testq %rax, %rax                     #  233   0xd73fa  3      OPC=testq_r64_r64   
  movq (%rsp), %rsi                    #  234   0xd73fd  4      OPC=movq_r64_m64    
  je .L_d741d                          #  235   0xd7401  2      OPC=je_label        
  movq 0x70(%rbx), %rdx                #  236   0xd7403  4      OPC=movq_r64_m64    
  movl $0x1, %ecx                      #  237   0xd7407  5      OPC=movl_r32_imm32  
  movq %rdx, (%rax)                    #  238   0xd740c  3      OPC=movq_m64_r64    
  movq %rax, 0x70(%rbx)                #  239   0xd740f  4      OPC=movq_m64_r64    
  xorl %edx, %edx                      #  240   0xd7413  2      OPC=xorl_r32_r32    
  jmpq .L_d71f8                        #  241   0xd7415  5      OPC=jmpq_label_1    
.L_d740e:                              #        0xd741a  0      OPC=<label>         
  xorl %r13d, %r13d                    #  242   0xd741a  3      OPC=xorl_r32_r32    
  jmpq .L_d716b                        #  243   0xd741d  5      OPC=jmpq_label_1    
.L_d7416:                              #        0xd7422  0      OPC=<label>         
  xorl %esi, %esi                      #  244   0xd7422  2      OPC=xorl_r32_r32    
  jmpq .L_d71d9                        #  245   0xd7424  5      OPC=jmpq_label_1    
.L_d741d:                              #        0xd7429  0      OPC=<label>         
  xorl %r8d, %r8d                      #  246   0xd7429  3      OPC=xorl_r32_r32    
  jmpq .L_d7252                        #  247   0xd742c  5      OPC=jmpq_label_1    
  nop                                  #  248   0xd7431  1      OPC=nop             
  nop                                  #  249   0xd7432  1      OPC=nop             
  nop                                  #  250   0xd7433  1      OPC=nop             
  nop                                  #  251   0xd7434  1      OPC=nop             
  nop                                  #  252   0xd7435  1      OPC=nop             
  nop                                  #  253   0xd7436  1      OPC=nop             
  nop                                  #  254   0xd7437  1      OPC=nop             
  nop                                  #  255   0xd7438  1      OPC=nop             
  nop                                  #  256   0xd7439  1      OPC=nop             
  nop                                  #  257   0xd743a  1      OPC=nop             
  nop                                  #  258   0xd743b  1      OPC=nop             
                                                                                    
.size lower_subexp, .-lower_subexp

