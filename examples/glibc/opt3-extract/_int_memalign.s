  .text
  .globl _int_memalign
  .type _int_memalign, @function

#! file-offset 0x80710
#! rip-offset  0x80710
#! capacity    544 bytes

# Text                          #  Line  RIP      Bytes  Opcode               
._int_memalign:                 #        0x80710  0      OPC=<label>          
  cmpq $0xbf, %rdx              #  1     0x80710  4      OPC=cmpq_r64_imm8    
  ja .L_808c0                   #  2     0x80714  6      OPC=ja_label_1       
  addq $0x17, %rdx              #  3     0x8071a  4      OPC=addq_r64_imm8    
  pushq %r14                    #  4     0x8071e  2      OPC=pushq_r64_1      
  pushq %r13                    #  5     0x80720  2      OPC=pushq_r64_1      
  pushq %r12                    #  6     0x80722  2      OPC=pushq_r64_1      
  pushq %rbp                    #  7     0x80724  1      OPC=pushq_r64_1      
  movq %rdx, %rbp               #  8     0x80725  3      OPC=movq_r64_r64     
  andq $0xf0, %rbp              #  9     0x80728  4      OPC=andq_r64_imm8    
  movl $0x20, %eax              #  10    0x8072c  5      OPC=movl_r32_imm32   
  cmpq $0x20, %rdx              #  11    0x80731  4      OPC=cmpq_r64_imm8    
  cmovbq %rax, %rbp             #  12    0x80735  4      OPC=cmovbq_r64_r64   
  pushq %rbx                    #  13    0x80739  1      OPC=pushq_r64_1      
  movq %rsi, %r13               #  14    0x8073a  3      OPC=movq_r64_r64     
  leaq 0x20(%rbp,%rsi,1), %rsi  #  15    0x8073d  5      OPC=leaq_r64_m16     
  movq %rdi, %rbx               #  16    0x80742  3      OPC=movq_r64_r64     
  callq ._int_malloc            #  17    0x80745  5      OPC=callq_label      
  testq %rax, %rax              #  18    0x8074a  3      OPC=testq_r64_r64    
  movq %rax, %rcx               #  19    0x8074d  3      OPC=movq_r64_r64     
  je .L_80900                   #  20    0x80750  6      OPC=je_label_1       
  xorl %edx, %edx               #  21    0x80756  2      OPC=xorl_r32_r32     
  leaq -0x10(%rax), %rsi        #  22    0x80758  4      OPC=leaq_r64_m16     
  divq %r13                     #  23    0x8075c  3      OPC=divq_r64         
  testq %rdx, %rdx              #  24    0x8075f  3      OPC=testq_r64_r64    
  je .L_80830                   #  25    0x80762  6      OPC=je_label_1       
  leaq -0x1(%rcx,%r13,1), %rax  #  26    0x80768  5      OPC=leaq_r64_m16     
  movq %r13, %rdx               #  27    0x8076d  3      OPC=movq_r64_r64     
  negq %rdx                     #  28    0x80770  3      OPC=negq_r64         
  andq %rdx, %rax               #  29    0x80773  3      OPC=andq_r64_r64     
  subq $0x10, %rax              #  30    0x80776  4      OPC=subq_r64_imm8    
  movq %rax, %rdx               #  31    0x8077a  3      OPC=movq_r64_r64     
  leaq (%rax,%r13,1), %r12      #  32    0x8077d  4      OPC=leaq_r64_m16     
  subq %rsi, %rdx               #  33    0x80781  3      OPC=subq_r64_r64     
  cmpq $0x1f, %rdx              #  34    0x80784  4      OPC=cmpq_r64_imm8    
  cmovaq %rax, %r12             #  35    0x80788  4      OPC=cmovaq_r64_r64   
  movq -0x8(%rcx), %rax         #  36    0x8078c  4      OPC=movq_r64_m64     
  movq %r12, %rdi               #  37    0x80790  3      OPC=movq_r64_r64     
  subq %rsi, %rdi               #  38    0x80793  3      OPC=subq_r64_r64     
  movq %rax, %r14               #  39    0x80796  3      OPC=movq_r64_r64     
  andq $0xf8, %r14              #  40    0x80799  4      OPC=andq_r64_imm8    
  subq %rdi, %r14               #  41    0x8079d  3      OPC=subq_r64_r64     
  andl $0x2, %eax               #  42    0x807a0  3      OPC=andl_r32_imm8    
  jne .L_80898                  #  43    0x807a3  6      OPC=jne_label_1      
  leaq 0x341490(%rip), %rdx     #  44    0x807a9  7      OPC=leaq_r64_m16     
  cmpq %rdx, %rbx               #  45    0x807b0  3      OPC=cmpq_r64_r64     
  je .L_808d8                   #  46    0x807b3  6      OPC=je_label_1       
  movq %r14, %rax               #  47    0x807b9  3      OPC=movq_r64_r64     
  orq $0x5, %rax                #  48    0x807bc  4      OPC=orq_r64_imm8     
  movq %rax, 0x8(%r12)          #  49    0x807c0  5      OPC=movq_m64_r64     
  orq $0x1, 0x8(%r12,%r14,1)    #  50    0x807c5  6      OPC=orq_m64_imm8     
  movl $0x4, %eax               #  51    0x807cb  5      OPC=movl_r32_imm32   
  movq -0x8(%rcx), %rdx         #  52    0x807d0  4      OPC=movq_r64_m64     
  andl $0x7, %edx               #  53    0x807d4  3      OPC=andl_r32_imm8    
.L_807d7:                       #        0x807d7  0      OPC=<label>          
  orq %rdx, %rax                #  54    0x807d7  3      OPC=orq_r64_r64      
  movl $0x1, %edx               #  55    0x807da  5      OPC=movl_r32_imm32   
  orq %rdi, %rax                #  56    0x807df  3      OPC=orq_r64_r64      
  movq %rbx, %rdi               #  57    0x807e2  3      OPC=movq_r64_r64     
  movq %rax, -0x8(%rcx)         #  58    0x807e5  4      OPC=movq_m64_r64     
  callq ._int_free              #  59    0x807e9  5      OPC=callq_label      
  cmpq %r14, %rbp               #  60    0x807ee  3      OPC=cmpq_r64_r64     
  ja .L_80907                   #  61    0x807f1  6      OPC=ja_label_1       
  leaq 0x10(%r12), %rcx         #  62    0x807f7  5      OPC=leaq_r64_m16     
  xorl %edx, %edx               #  63    0x807fc  2      OPC=xorl_r32_r32     
  movq %rcx, %rax               #  64    0x807fe  3      OPC=movq_r64_r64     
  divq %r13                     #  65    0x80801  3      OPC=divq_r64         
  testq %rdx, %rdx              #  66    0x80804  3      OPC=testq_r64_r64    
  jne .L_80907                  #  67    0x80807  6      OPC=jne_label_1      
  movq 0x8(%r12), %rdx          #  68    0x8080d  5      OPC=movq_r64_m64     
  movq %rcx, %r13               #  69    0x80812  3      OPC=movq_r64_r64     
  movq %rdx, %rcx               #  70    0x80815  3      OPC=movq_r64_r64     
  andl $0x2, %ecx               #  71    0x80818  3      OPC=andl_r32_imm8    
  je .L_80843                   #  72    0x8081b  2      OPC=je_label         
  nop                           #  73    0x8081d  1      OPC=nop              
  nop                           #  74    0x8081e  1      OPC=nop              
  nop                           #  75    0x8081f  1      OPC=nop              
.L_80820:                       #        0x80820  0      OPC=<label>          
  movq %r13, %rax               #  76    0x80820  3      OPC=movq_r64_r64     
.L_80823:                       #        0x80823  0      OPC=<label>          
  popq %rbx                     #  77    0x80823  1      OPC=popq_r64_1       
  popq %rbp                     #  78    0x80824  1      OPC=popq_r64_1       
  popq %r12                     #  79    0x80825  2      OPC=popq_r64_1       
  popq %r13                     #  80    0x80827  2      OPC=popq_r64_1       
  popq %r14                     #  81    0x80829  2      OPC=popq_r64_1       
  retq                          #  82    0x8082b  1      OPC=retq             
  nop                           #  83    0x8082c  1      OPC=nop              
  nop                           #  84    0x8082d  1      OPC=nop              
  nop                           #  85    0x8082e  1      OPC=nop              
  nop                           #  86    0x8082f  1      OPC=nop              
.L_80830:                       #        0x80830  0      OPC=<label>          
  movq %rsi, %r12               #  87    0x80830  3      OPC=movq_r64_r64     
  movq %rcx, %r13               #  88    0x80833  3      OPC=movq_r64_r64     
  movq 0x8(%r12), %rdx          #  89    0x80836  5      OPC=movq_r64_m64     
  movq %rdx, %rcx               #  90    0x8083b  3      OPC=movq_r64_r64     
  andl $0x2, %ecx               #  91    0x8083e  3      OPC=andl_r32_imm8    
  jne .L_80820                  #  92    0x80841  2      OPC=jne_label        
.L_80843:                       #        0x80843  0      OPC=<label>          
  leaq 0x20(%rbp), %rsi         #  93    0x80843  4      OPC=leaq_r64_m16     
  andq $0xf8, %rdx              #  94    0x80847  4      OPC=andq_r64_imm8    
  cmpq %rsi, %rdx               #  95    0x8084b  3      OPC=cmpq_r64_r64     
  jbe .L_80820                  #  96    0x8084e  2      OPC=jbe_label        
  leaq 0x3413e9(%rip), %rdi     #  97    0x80850  7      OPC=leaq_r64_m16     
  subq %rbp, %rdx               #  98    0x80857  3      OPC=subq_r64_r64     
  leaq (%r12,%rbp,1), %rsi      #  99    0x8085a  4      OPC=leaq_r64_m16     
  cmpq %rdi, %rbx               #  100   0x8085e  3      OPC=cmpq_r64_r64     
  movl $0x4, %edi               #  101   0x80861  5      OPC=movl_r32_imm32   
  cmovneq %rdi, %rcx            #  102   0x80866  4      OPC=cmovneq_r64_r64  
  orq $0x1, %rdx                #  103   0x8086a  4      OPC=orq_r64_imm8     
  movq %rbx, %rdi               #  104   0x8086e  3      OPC=movq_r64_r64     
  orq %rcx, %rdx                #  105   0x80871  3      OPC=orq_r64_r64      
  movq %rdx, 0x8(%rsi)          #  106   0x80874  4      OPC=movq_m64_r64     
  movq 0x8(%r12), %rdx          #  107   0x80878  5      OPC=movq_r64_m64     
  andl $0x7, %edx               #  108   0x8087d  3      OPC=andl_r32_imm8    
  orq %rdx, %rbp                #  109   0x80880  3      OPC=orq_r64_r64      
  movl $0x1, %edx               #  110   0x80883  5      OPC=movl_r32_imm32   
  movq %rbp, 0x8(%r12)          #  111   0x80888  5      OPC=movq_m64_r64     
  callq ._int_free              #  112   0x8088d  5      OPC=callq_label      
  jmpq .L_80820                 #  113   0x80892  2      OPC=jmpq_label       
  nop                           #  114   0x80894  1      OPC=nop              
  nop                           #  115   0x80895  1      OPC=nop              
  nop                           #  116   0x80896  1      OPC=nop              
  nop                           #  117   0x80897  1      OPC=nop              
.L_80898:                       #        0x80898  0      OPC=<label>          
  movq %rdi, %rax               #  118   0x80898  3      OPC=movq_r64_r64     
  addq -0x10(%rcx), %rax        #  119   0x8089b  4      OPC=addq_r64_m64     
  orq $0x2, %r14                #  120   0x8089f  4      OPC=orq_r64_imm8     
  movq %r14, 0x8(%r12)          #  121   0x808a3  5      OPC=movq_m64_r64     
  movq %rax, (%r12)             #  122   0x808a8  4      OPC=movq_m64_r64     
  leaq 0x10(%r12), %rax         #  123   0x808ac  5      OPC=leaq_r64_m16     
  popq %rbx                     #  124   0x808b1  1      OPC=popq_r64_1       
  popq %rbp                     #  125   0x808b2  1      OPC=popq_r64_1       
  popq %r12                     #  126   0x808b3  2      OPC=popq_r64_1       
  popq %r13                     #  127   0x808b5  2      OPC=popq_r64_1       
  popq %r14                     #  128   0x808b7  2      OPC=popq_r64_1       
  retq                          #  129   0x808b9  1      OPC=retq             
  nop                           #  130   0x808ba  1      OPC=nop              
  nop                           #  131   0x808bb  1      OPC=nop              
  nop                           #  132   0x808bc  1      OPC=nop              
  nop                           #  133   0x808bd  1      OPC=nop              
  nop                           #  134   0x808be  1      OPC=nop              
  nop                           #  135   0x808bf  1      OPC=nop              
.L_808c0:                       #        0x808c0  0      OPC=<label>          
  movq 0x3405b9(%rip), %rax     #  136   0x808c0  7      OPC=movq_r64_m64     
  movl $0xc, (%rax)             #  137   0x808c7  6      OPC=movl_m32_imm32   
  nop                           #  138   0x808cd  1      OPC=nop              
  xorl %eax, %eax               #  139   0x808ce  2      OPC=xorl_r32_r32     
  retq                          #  140   0x808d0  1      OPC=retq             
  nop                           #  141   0x808d1  1      OPC=nop              
  nop                           #  142   0x808d2  1      OPC=nop              
  nop                           #  143   0x808d3  1      OPC=nop              
  nop                           #  144   0x808d4  1      OPC=nop              
  nop                           #  145   0x808d5  1      OPC=nop              
  nop                           #  146   0x808d6  1      OPC=nop              
  nop                           #  147   0x808d7  1      OPC=nop              
.L_808d8:                       #        0x808d8  0      OPC=<label>          
  movq %r14, %rdx               #  148   0x808d8  3      OPC=movq_r64_r64     
  orq $0x1, %rdx                #  149   0x808db  4      OPC=orq_r64_imm8     
  movq %rdx, 0x8(%r12)          #  150   0x808df  5      OPC=movq_m64_r64     
  orq $0x1, 0x8(%r12,%r14,1)    #  151   0x808e4  6      OPC=orq_m64_imm8     
  movq -0x8(%rcx), %rdx         #  152   0x808ea  4      OPC=movq_r64_m64     
  andl $0x7, %edx               #  153   0x808ee  3      OPC=andl_r32_imm8    
  jmpq .L_807d7                 #  154   0x808f1  5      OPC=jmpq_label_1     
  nop                           #  155   0x808f6  1      OPC=nop              
  nop                           #  156   0x808f7  1      OPC=nop              
  nop                           #  157   0x808f8  1      OPC=nop              
  nop                           #  158   0x808f9  1      OPC=nop              
  nop                           #  159   0x808fa  1      OPC=nop              
  nop                           #  160   0x808fb  1      OPC=nop              
  nop                           #  161   0x808fc  1      OPC=nop              
  nop                           #  162   0x808fd  1      OPC=nop              
  nop                           #  163   0x808fe  1      OPC=nop              
  nop                           #  164   0x808ff  1      OPC=nop              
.L_80900:                       #        0x80900  0      OPC=<label>          
  xorl %eax, %eax               #  165   0x80900  2      OPC=xorl_r32_r32     
  jmpq .L_80823                 #  166   0x80902  5      OPC=jmpq_label_1     
.L_80907:                       #        0x80907  0      OPC=<label>          
  leaq 0x10b066(%rip), %rcx     #  167   0x80907  7      OPC=leaq_r64_m16     
  leaq 0x10acf4(%rip), %rsi     #  168   0x8090e  7      OPC=leaq_r64_m16     
  leaq 0x10e71c(%rip), %rdi     #  169   0x80915  7      OPC=leaq_r64_m16     
  movl $0x1170, %edx            #  170   0x8091c  5      OPC=movl_r32_imm32   
  callq .__malloc_assert        #  171   0x80921  5      OPC=callq_label      
  nop                           #  172   0x80926  1      OPC=nop              
  nop                           #  173   0x80927  1      OPC=nop              
  nop                           #  174   0x80928  1      OPC=nop              
  nop                           #  175   0x80929  1      OPC=nop              
  nop                           #  176   0x8092a  1      OPC=nop              
  nop                           #  177   0x8092b  1      OPC=nop              
  nop                           #  178   0x8092c  1      OPC=nop              
  nop                           #  179   0x8092d  1      OPC=nop              
  nop                           #  180   0x8092e  1      OPC=nop              
  nop                           #  181   0x8092f  1      OPC=nop              
                                                                              
.size _int_memalign, .-_int_memalign

