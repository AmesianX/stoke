  .text
  .globl re_match_2
  .type re_match_2, @function

#! file-offset 0xe64f0
#! rip-offset  0xe64f0
#! capacity    1584 bytes

# Text                              #  Line  RIP      Bytes  Opcode                   
.re_match_2:                        #        0xe64f0  0      OPC=<label>              
  pushq %r15                        #  1     0xe64f0  2      OPC=pushq_r64_1          
  movl %edx, %eax                   #  2     0xe64f2  2      OPC=movl_r32_r32         
  pushq %r14                        #  3     0xe64f4  2      OPC=pushq_r64_1          
  pushq %r13                        #  4     0xe64f6  2      OPC=pushq_r64_1          
  pushq %r12                        #  5     0xe64f8  2      OPC=pushq_r64_1          
  shrl $0x1f, %eax                  #  6     0xe64fa  3      OPC=shrl_r32_imm8        
  pushq %rbp                        #  7     0xe64fd  1      OPC=pushq_r64_1          
  pushq %rbx                        #  8     0xe64fe  1      OPC=pushq_r64_1          
  leal (%rdx,%r8,1), %r14d          #  9     0xe64ff  4      OPC=leal_r32_m16         
  subq $0x38, %rsp                  #  10    0xe6503  4      OPC=subq_r64_imm8        
  testb %al, %al                    #  11    0xe6507  2      OPC=testb_r8_r8          
  movq 0x70(%rsp), %r13             #  12    0xe6509  5      OPC=movq_r64_m64         
  jne .L_e69c0                      #  13    0xe650e  6      OPC=jne_label_1          
  movl %r8d, %eax                   #  14    0xe6514  3      OPC=movl_r32_r32         
  shrl $0x1f, %eax                  #  15    0xe6517  3      OPC=shrl_r32_imm8        
  testb %al, %al                    #  16    0xe651a  2      OPC=testb_r8_r8          
  jne .L_e69c0                      #  17    0xe651c  6      OPC=jne_label_1          
  movl 0x78(%rsp), %eax             #  18    0xe6522  4      OPC=movl_r32_m32         
  shrl $0x1f, %eax                  #  19    0xe6526  3      OPC=shrl_r32_imm8        
  testb %al, %al                    #  20    0xe6529  2      OPC=testb_r8_r8          
  jne .L_e69c0                      #  21    0xe652b  6      OPC=jne_label_1          
  cmpl %r14d, %edx                  #  22    0xe6531  3      OPC=cmpl_r32_r32         
  jg .L_e69c0                       #  23    0xe6534  6      OPC=jg_label_1           
  testl %r8d, %r8d                  #  24    0xe653a  3      OPC=testl_r32_r32        
  movl %r9d, %r12d                  #  25    0xe653d  3      OPC=movl_r32_r32         
  movl %r8d, %ebx                   #  26    0xe6540  3      OPC=movl_r32_r32         
  movq %rcx, 0x10(%rsp)             #  27    0xe6543  5      OPC=movq_m64_r64         
  movslq %edx, %rbp                 #  28    0xe6548  3      OPC=movslq_r64_r32       
  movq %rdi, %r15                   #  29    0xe654b  3      OPC=movq_r64_r64         
  je .L_e69a8                       #  30    0xe654e  6      OPC=je_label_1           
  testl %ebp, %ebp                  #  31    0xe6554  2      OPC=testl_r32_r32        
  movq %rsi, 0x18(%rsp)             #  32    0xe6556  5      OPC=movq_m64_r64         
  jle .L_e6850                      #  33    0xe655b  6      OPC=jle_label_1          
  movslq %r14d, %rdi                #  34    0xe6561  3      OPC=movslq_r64_r32       
  callq .memalign_plt               #  35    0xe6564  5      OPC=callq_label          
  testq %rax, %rax                  #  36    0xe6569  3      OPC=testq_r64_r64        
  movq %rax, 0x8(%rsp)              #  37    0xe656c  5      OPC=movq_m64_r64         
  je .L_e69c0                       #  38    0xe6571  6      OPC=je_label_1           
  movq 0x18(%rsp), %rsi             #  39    0xe6577  5      OPC=movq_r64_m64         
  movq %rbp, %rdx                   #  40    0xe657c  3      OPC=movq_r64_r64         
  movq %rax, %rdi                   #  41    0xe657f  3      OPC=movq_r64_r64         
  callq .__GI_memcpy                #  42    0xe6582  5      OPC=callq_label          
  movq 0x10(%rsp), %rsi             #  43    0xe6587  5      OPC=movq_r64_m64         
  leaq (%rax,%rbp,1), %rdi          #  44    0xe658c  4      OPC=leaq_r64_m16         
  movslq %ebx, %rdx                 #  45    0xe6590  3      OPC=movslq_r64_r32       
  callq .__GI_memcpy                #  46    0xe6593  5      OPC=callq_label          
  movq 0x8(%rsp), %rax              #  47    0xe6598  5      OPC=movq_r64_m64         
  movq %rax, 0x10(%rsp)             #  48    0xe659d  5      OPC=movq_m64_r64         
.L_e65a2:                           #        0xe65a2  0      OPC=<label>              
  cmpl %r14d, %r12d                 #  49    0xe65a2  3      OPC=cmpl_r32_r32         
  movq (%r15), %rbp                 #  50    0xe65a5  3      OPC=movq_r64_m64         
  jg .L_e6a58                       #  51    0xe65a8  6      OPC=jg_label_1           
  movl %r12d, %eax                  #  52    0xe65ae  3      OPC=movl_r32_r32         
  shrl $0x1f, %eax                  #  53    0xe65b1  3      OPC=shrl_r32_imm8        
  testb %al, %al                    #  54    0xe65b4  2      OPC=testb_r8_r8          
  jne .L_e6a58                      #  55    0xe65b6  6      OPC=jne_label_1          
  movl $0x1, %esi                   #  56    0xe65bc  5      OPC=movl_r32_imm32       
  xorl %eax, %eax                   #  57    0xe65c1  2      OPC=xorl_r32_r32         
  cmpl $0x0, 0x2e0636(%rip)         #  58    0xe65c3  7      OPC=cmpl_m32_imm8        
  je .L_e65d8                       #  59    0xe65ca  2      OPC=je_label             
  lock                              #  60    0xe65cc  1      OPC=lock                 
  cmpxchgl %esi, 0xd8(%rbp)         #  61    0xe65cd  7      OPC=cmpxchgl_m32_r32     
  nop                               #  62    0xe65d4  1      OPC=nop                  
  jne .L_e65e1                      #  63    0xe65d5  2      OPC=jne_label            
  jmpq .L_e65fb                     #  64    0xe65d7  2      OPC=jmpq_label           
.L_e65d8:                           #        0xe65d9  0      OPC=<label>              
  cmpxchgl %esi, 0xd8(%rbp)         #  65    0xe65d9  7      OPC=cmpxchgl_m32_r32     
  je .L_e65fb                       #  66    0xe65e0  2      OPC=je_label             
.L_e65e1:                           #        0xe65e2  0      OPC=<label>              
  leaq 0xd8(%rbp), %rdi             #  67    0xe65e2  7      OPC=leaq_r64_m16         
  subq $0x80, %rsp                  #  68    0xe65e9  7      OPC=subq_r64_imm32       
  callq .__lll_lock_wait_private    #  69    0xe65f0  5      OPC=callq_label          
  addq $0x80, %rsp                  #  70    0xe65f5  7      OPC=addq_r64_imm32       
.L_e65fb:                           #        0xe65fc  0      OPC=<label>              
  movzbl 0x38(%r15), %edx           #  71    0xe65fc  5      OPC=movzbl_r32_m8        
  movl %edx, %esi                   #  72    0xe6601  2      OPC=movl_r32_r32         
  shrl $0x5, %esi                   #  73    0xe6603  3      OPC=shrl_r32_imm8        
  andl $0x2, %esi                   #  74    0xe6606  3      OPC=andl_r32_imm8        
  testb $0x10, %dl                  #  75    0xe6609  3      OPC=testb_r8_imm8        
  jne .L_e6900                      #  76    0xe660c  6      OPC=jne_label_1          
  testq %r13, %r13                  #  77    0xe6612  3      OPC=testq_r64_r64        
  je .L_e6900                       #  78    0xe6615  6      OPC=je_label_1           
  movl %edx, %eax                   #  79    0xe661b  2      OPC=movl_r32_r32         
  andl $0x6, %eax                   #  80    0xe661d  3      OPC=andl_r32_imm8        
  cmpb $0x4, %al                    #  81    0xe6620  2      OPC=cmpb_al_imm8         
  je .L_e68e0                       #  82    0xe6622  6      OPC=je_label_1           
  movq 0x30(%r15), %rax             #  83    0xe6628  4      OPC=movq_r64_m64         
.L_e662b:                           #        0xe662c  0      OPC=<label>              
  leal 0x1(%rax), %ebx              #  84    0xe662c  3      OPC=leal_r32_m16         
.L_e662e:                           #        0xe662f  0      OPC=<label>              
  movslq %ebx, %rcx                 #  85    0xe662f  3      OPC=movslq_r64_r32       
  leaq (,%rcx,8), %rdi              #  86    0xe6632  8      OPC=leaq_r64_m16         
.L_e6639:                           #        0xe663a  0      OPC=<label>              
  movq %rcx, 0x28(%rsp)             #  87    0xe663a  5      OPC=movq_m64_r64         
  movl %esi, 0x20(%rsp)             #  88    0xe663f  4      OPC=movl_m32_r32         
  movb %dl, 0x18(%rsp)              #  89    0xe6643  4      OPC=movb_m8_r8           
  callq .memalign_plt               #  90    0xe6647  5      OPC=callq_label          
  testq %rax, %rax                  #  91    0xe664c  3      OPC=testq_r64_r64        
  je .L_e68d0                       #  92    0xe664f  6      OPC=je_label_1           
  subq $0x8, %rsp                   #  93    0xe6655  4      OPC=subq_r64_imm8        
  xorl %r8d, %r8d                   #  94    0xe6659  3      OPC=xorl_r32_r32         
  movq %r15, %rdi                   #  95    0xe665c  3      OPC=movq_r64_r64         
  movzbl 0x20(%rsp), %edx           #  96    0xe665f  5      OPC=movzbl_r32_m8        
  movl 0x28(%rsp), %esi             #  97    0xe6664  4      OPC=movl_r32_m32         
  shrb $0x5, %dl                    #  98    0xe6668  3      OPC=shrb_r8_imm8         
  andl $0x1, %edx                   #  99    0xe666b  3      OPC=andl_r32_imm8        
  orl %esi, %edx                    #  100   0xe666e  2      OPC=orl_r32_r32          
  pushq %rdx                        #  101   0xe6670  1      OPC=pushq_r64_1          
  pushq %rax                        #  102   0xe6671  1      OPC=pushq_r64_1          
  movl %r14d, %edx                  #  103   0xe6672  3      OPC=movl_r32_r32         
  movq 0x40(%rsp), %rcx             #  104   0xe6675  5      OPC=movq_r64_m64         
  movq %rax, 0x30(%rsp)             #  105   0xe667a  5      OPC=movq_m64_r64         
  pushq %rcx                        #  106   0xe667f  1      OPC=pushq_r64_1          
  movl 0x98(%rsp), %r9d             #  107   0xe6680  8      OPC=movl_r32_m32         
  movl %r12d, %ecx                  #  108   0xe6688  3      OPC=movl_r32_r32         
  movq 0x28(%rsp), %rsi             #  109   0xe668b  5      OPC=movq_r64_m64         
  callq .re_search_internal         #  110   0xe6690  5      OPC=callq_label          
  addq $0x20, %rsp                  #  111   0xe6695  4      OPC=addq_r64_imm8        
  testl %eax, %eax                  #  112   0xe6699  2      OPC=testl_r32_r32        
  movq 0x18(%rsp), %r11             #  113   0xe669b  5      OPC=movq_r64_m64         
  jne .L_e6870                      #  114   0xe66a0  6      OPC=jne_label_1          
  testq %r13, %r13                  #  115   0xe66a6  3      OPC=testq_r64_r64        
  je .L_e6990                       #  116   0xe66a9  6      OPC=je_label_1           
  movzbl 0x38(%r15), %eax           #  117   0xe66af  5      OPC=movzbl_r32_m8        
  leal 0x1(%rbx), %r8d              #  118   0xe66b4  4      OPC=leal_r32_m16         
  shrb $0x1, %al                    #  119   0xe66b8  2      OPC=shrb_r8_one          
  andl $0x3, %eax                   #  120   0xe66ba  3      OPC=andl_r32_imm8        
  je .L_e6920                       #  121   0xe66bd  6      OPC=je_label_1           
  cmpl $0x1, %eax                   #  122   0xe66c3  3      OPC=cmpl_r32_imm8        
  je .L_e69d8                       #  123   0xe66c6  6      OPC=je_label_1           
  cmpl $0x2, %eax                   #  124   0xe66cc  3      OPC=cmpl_r32_imm8        
  jne .L_e6afd                      #  125   0xe66cf  6      OPC=jne_label_1          
  movl (%r13), %eax                 #  126   0xe66d5  4      OPC=movl_r32_m32         
  cmpl %ebx, %eax                   #  127   0xe66d9  2      OPC=cmpl_r32_r32         
  jb .L_e6ade                       #  128   0xe66db  6      OPC=jb_label_1           
  movl $0x2, %r14d                  #  129   0xe66e1  6      OPC=movl_r32_imm32       
.L_e66e6:                           #        0xe66e7  0      OPC=<label>              
  testl %ebx, %ebx                  #  130   0xe66e7  2      OPC=testl_r32_r32        
  jle .L_e6a8c                      #  131   0xe66e9  6      OPC=jle_label_1          
  movq 0x10(%r13), %rcx             #  132   0xe66ef  4      OPC=movq_r64_m64         
  movq 0x8(%r13), %rdx              #  133   0xe66f3  4      OPC=movq_r64_m64         
  movslq %ebx, %rax                 #  134   0xe66f7  3      OPC=movslq_r64_r32       
  leaq (,%rax,4), %rsi              #  135   0xe66fa  8      OPC=leaq_r64_m16         
  leaq (%r11,%rax,8), %r8           #  136   0xe6702  4      OPC=leaq_r64_m16         
  cmpl $0xa, %ebx                   #  137   0xe6706  3      OPC=cmpl_r32_imm8        
  seta %r9b                         #  138   0xe6709  4      OPC=seta_r8              
  leaq 0x10(%rcx), %rax             #  139   0xe670d  4      OPC=leaq_r64_m16         
  leaq 0x10(%rdx), %rdi             #  140   0xe6711  4      OPC=leaq_r64_m16         
  cmpq %rax, %rdx                   #  141   0xe6715  3      OPC=cmpq_r64_r64         
  setae %al                         #  142   0xe6718  3      OPC=setae_r8             
  cmpq %rdi, %rcx                   #  143   0xe671b  3      OPC=cmpq_r64_r64         
  setae %dil                        #  144   0xe671e  4      OPC=setae_r8             
  orl %edi, %eax                    #  145   0xe6722  2      OPC=orl_r32_r32          
  leaq (%rdx,%rsi,1), %rdi          #  146   0xe6724  4      OPC=leaq_r64_m16         
  andl %r9d, %eax                   #  147   0xe6728  3      OPC=andl_r32_r32         
  cmpq %rdx, %r8                    #  148   0xe672b  3      OPC=cmpq_r64_r64         
  setbe %r9b                        #  149   0xe672e  4      OPC=setbe_r8             
  cmpq %rdi, %r11                   #  150   0xe6732  3      OPC=cmpq_r64_r64         
  setae %dil                        #  151   0xe6735  4      OPC=setae_r8             
  orl %r9d, %edi                    #  152   0xe6739  3      OPC=orl_r32_r32          
  testb %dil, %al                   #  153   0xe673c  3      OPC=testb_r8_r8          
  je .L_e6a68                       #  154   0xe673f  6      OPC=je_label_1           
  cmpq %rcx, %r8                    #  155   0xe6745  3      OPC=cmpq_r64_r64         
  setbe %dil                        #  156   0xe6748  4      OPC=setbe_r8             
  addq %rcx, %rsi                   #  157   0xe674c  3      OPC=addq_r64_r64         
  cmpq %rsi, %r11                   #  158   0xe674f  3      OPC=cmpq_r64_r64         
  setae %al                         #  159   0xe6752  3      OPC=setae_r8             
  orb %al, %dil                     #  160   0xe6755  3      OPC=orb_r8_r8            
  je .L_e6a68                       #  161   0xe6758  6      OPC=je_label_1           
  leal -0x4(%rbx), %edi             #  162   0xe675e  3      OPC=leal_r32_m16         
  xorl %esi, %esi                   #  163   0xe6761  2      OPC=xorl_r32_r32         
  xorl %r8d, %r8d                   #  164   0xe6763  3      OPC=xorl_r32_r32         
  shrl $0x2, %edi                   #  165   0xe6766  3      OPC=shrl_r32_imm8        
  addl $0x1, %edi                   #  166   0xe6769  3      OPC=addl_r32_imm8        
  leal (,%rdi,4), %eax              #  167   0xe676c  7      OPC=leal_r32_m16         
.L_e6772:                           #        0xe6773  0      OPC=<label>              
  movdqu (%r11,%rsi,2), %xmm0       #  168   0xe6773  6      OPC=movdqu_xmm_m128      
  addl $0x1, %r8d                   #  169   0xe6779  4      OPC=addl_r32_imm8        
  movdqu 0x10(%r11,%rsi,2), %xmm1   #  170   0xe677d  7      OPC=movdqu_xmm_m128      
  movdqa %xmm0, %xmm2               #  171   0xe6784  4      OPC=movdqa_xmm_xmm       
  shufps $0xdd, %xmm1, %xmm0        #  172   0xe6788  4      OPC=shufps_xmm_xmm_imm8  
  shufps $0x88, %xmm1, %xmm2        #  173   0xe678c  4      OPC=shufps_xmm_xmm_imm8  
  movups %xmm2, (%rdx,%rsi,1)       #  174   0xe6790  4      OPC=movups_m128_xmm      
  movups %xmm0, (%rcx,%rsi,1)       #  175   0xe6794  4      OPC=movups_m128_xmm      
  addq $0x10, %rsi                  #  176   0xe6798  4      OPC=addq_r64_imm8        
  cmpl %edi, %r8d                   #  177   0xe679c  3      OPC=cmpl_r32_r32         
  jb .L_e6772                       #  178   0xe679f  2      OPC=jb_label             
  cmpl %eax, %ebx                   #  179   0xe67a1  2      OPC=cmpl_r32_r32         
  je .L_e67eb                       #  180   0xe67a3  2      OPC=je_label             
  movslq %eax, %rsi                 #  181   0xe67a5  3      OPC=movslq_r64_r32       
  leaq (%r11,%rsi,8), %rdi          #  182   0xe67a8  4      OPC=leaq_r64_m16         
  movl (%rdi), %r8d                 #  183   0xe67ac  3      OPC=movl_r32_m32         
  movl %r8d, (%rdx,%rsi,4)          #  184   0xe67af  4      OPC=movl_m32_r32         
  movl 0x4(%rdi), %edi              #  185   0xe67b3  3      OPC=movl_r32_m32         
  movl %edi, (%rcx,%rsi,4)          #  186   0xe67b6  3      OPC=movl_m32_r32         
  leal 0x1(%rax), %esi              #  187   0xe67b9  3      OPC=leal_r32_m16         
  cmpl %esi, %ebx                   #  188   0xe67bc  2      OPC=cmpl_r32_r32         
  jle .L_e67eb                      #  189   0xe67be  2      OPC=jle_label            
  movslq %esi, %rsi                 #  190   0xe67c0  3      OPC=movslq_r64_r32       
  addl $0x2, %eax                   #  191   0xe67c3  3      OPC=addl_r32_imm8        
  leaq (%r11,%rsi,8), %rdi          #  192   0xe67c6  4      OPC=leaq_r64_m16         
  cmpl %eax, %ebx                   #  193   0xe67ca  2      OPC=cmpl_r32_r32         
  movl (%rdi), %r8d                 #  194   0xe67cc  3      OPC=movl_r32_m32         
  movl %r8d, (%rdx,%rsi,4)          #  195   0xe67cf  4      OPC=movl_m32_r32         
  movl 0x4(%rdi), %edi              #  196   0xe67d3  3      OPC=movl_r32_m32         
  movl %edi, (%rcx,%rsi,4)          #  197   0xe67d6  3      OPC=movl_m32_r32         
  jle .L_e67eb                      #  198   0xe67d9  2      OPC=jle_label            
  cltq                              #  199   0xe67db  2      OPC=cltq                 
  leaq (%r11,%rax,8), %rsi          #  200   0xe67dd  4      OPC=leaq_r64_m16         
  movl (%rsi), %edi                 #  201   0xe67e1  2      OPC=movl_r32_m32         
  movl %edi, (%rdx,%rax,4)          #  202   0xe67e3  3      OPC=movl_m32_r32         
  movl 0x4(%rsi), %edx              #  203   0xe67e6  3      OPC=movl_r32_m32         
  movl %edx, (%rcx,%rax,4)          #  204   0xe67e9  3      OPC=movl_m32_r32         
.L_e67eb:                           #        0xe67ec  0      OPC=<label>              
  movl (%r13), %eax                 #  205   0xe67ec  4      OPC=movl_r32_m32         
  movl %ebx, %edx                   #  206   0xe67f0  2      OPC=movl_r32_r32         
.L_e67f1:                           #        0xe67f2  0      OPC=<label>              
  cmpl %eax, %edx                   #  207   0xe67f2  2      OPC=cmpl_r32_r32         
  jae .L_e682b                      #  208   0xe67f4  2      OPC=jae_label            
  movslq %ebx, %rdx                 #  209   0xe67f6  3      OPC=movslq_r64_r32       
  xorl %eax, %eax                   #  210   0xe67f9  2      OPC=xorl_r32_r32         
  shlq $0x2, %rdx                   #  211   0xe67fb  4      OPC=shlq_r64_imm8        
  movq %rdx, %rcx                   #  212   0xe67ff  3      OPC=movq_r64_r64         
  addq 0x8(%r13), %rdx              #  213   0xe6802  4      OPC=addq_r64_m64         
  addq 0x10(%r13), %rcx             #  214   0xe6806  4      OPC=addq_r64_m64         
  nop                               #  215   0xe680a  1      OPC=nop                  
  nop                               #  216   0xe680b  1      OPC=nop                  
  nop                               #  217   0xe680c  1      OPC=nop                  
  nop                               #  218   0xe680d  1      OPC=nop                  
  nop                               #  219   0xe680e  1      OPC=nop                  
  nop                               #  220   0xe680f  1      OPC=nop                  
  nop                               #  221   0xe6810  1      OPC=nop                  
.L_e6810:                           #        0xe6811  0      OPC=<label>              
  movl $0xffffffff, (%rcx,%rax,1)   #  222   0xe6811  7      OPC=movl_m32_imm32       
  addl $0x1, %ebx                   #  223   0xe6818  3      OPC=addl_r32_imm8        
  movl $0xffffffff, (%rdx,%rax,1)   #  224   0xe681b  7      OPC=movl_m32_imm32       
  addq $0x4, %rax                   #  225   0xe6822  4      OPC=addq_r64_imm8        
  cmpl (%r13), %ebx                 #  226   0xe6826  4      OPC=cmpl_r32_m32         
  jb .L_e6810                       #  227   0xe682a  2      OPC=jb_label             
.L_e682b:                           #        0xe682c  0      OPC=<label>              
  movzbl 0x38(%r15), %eax           #  228   0xe682c  5      OPC=movzbl_r32_m8        
  addl %r14d, %r14d                 #  229   0xe6831  3      OPC=addl_r32_r32         
  andl $0xfffffff9, %eax            #  230   0xe6834  6      OPC=andl_r32_imm32       
  nop                               #  231   0xe683a  1      OPC=nop                  
  nop                               #  232   0xe683b  1      OPC=nop                  
  nop                               #  233   0xe683c  1      OPC=nop                  
  orl %eax, %r14d                   #  234   0xe683d  3      OPC=orl_r32_r32          
  movb %r14b, 0x38(%r15)            #  235   0xe6840  4      OPC=movb_m8_r8           
  andl $0x6, %r14d                  #  236   0xe6844  4      OPC=andl_r32_imm8        
  jne .L_e6990                      #  237   0xe6848  6      OPC=jne_label_1          
  movl $0xfffffffe, %ebx            #  238   0xe684e  6      OPC=movl_r32_imm32_1     
  jmpq .L_e6875                     #  239   0xe6854  2      OPC=jmpq_label           
  xchgw %ax, %ax                    #  240   0xe6856  2      OPC=xchgw_ax_r16         
.L_e6850:                           #        0xe6858  0      OPC=<label>              
  movq 0x10(%rsp), %rax             #  241   0xe6858  5      OPC=movq_r64_m64         
  movq $0x0, 0x10(%rsp)             #  242   0xe685d  9      OPC=movq_m64_imm32       
  movq %rax, 0x8(%rsp)              #  243   0xe6866  5      OPC=movq_m64_r64         
  jmpq .L_e65a2                     #  244   0xe686b  5      OPC=jmpq_label_1         
  nop                               #  245   0xe6870  1      OPC=nop                  
  nop                               #  246   0xe6871  1      OPC=nop                  
  nop                               #  247   0xe6872  1      OPC=nop                  
  nop                               #  248   0xe6873  1      OPC=nop                  
  nop                               #  249   0xe6874  1      OPC=nop                  
  nop                               #  250   0xe6875  1      OPC=nop                  
  nop                               #  251   0xe6876  1      OPC=nop                  
  nop                               #  252   0xe6877  1      OPC=nop                  
.L_e6870:                           #        0xe6878  0      OPC=<label>              
  movl $0xffffffff, %ebx            #  253   0xe6878  6      OPC=movl_r32_imm32_1     
.L_e6875:                           #        0xe687e  0      OPC=<label>              
  movq %r11, %rdi                   #  254   0xe687e  3      OPC=movq_r64_r64         
  callq .L_1f8c0                    #  255   0xe6881  5      OPC=callq_label          
.L_e687d:                           #        0xe6886  0      OPC=<label>              
  cmpl $0x0, 0x2e037c(%rip)         #  256   0xe6886  7      OPC=cmpl_m32_imm8        
  je .L_e6891                       #  257   0xe688d  2      OPC=je_label             
  lock                              #  258   0xe688f  1      OPC=lock                 
  decl 0xd8(%rbp)                   #  259   0xe6890  6      OPC=decl_m32             
  nop                               #  260   0xe6896  1      OPC=nop                  
  jne .L_e6899                      #  261   0xe6897  2      OPC=jne_label            
  jmpq .L_e68b3                     #  262   0xe6899  2      OPC=jmpq_label           
.L_e6891:                           #        0xe689b  0      OPC=<label>              
  decl 0xd8(%rbp)                   #  263   0xe689b  6      OPC=decl_m32             
  je .L_e68b3                       #  264   0xe68a1  2      OPC=je_label             
.L_e6899:                           #        0xe68a3  0      OPC=<label>              
  leaq 0xd8(%rbp), %rdi             #  265   0xe68a3  7      OPC=leaq_r64_m16         
  subq $0x80, %rsp                  #  266   0xe68aa  7      OPC=subq_r64_imm32       
  callq .__lll_unlock_wake_private  #  267   0xe68b1  5      OPC=callq_label          
  addq $0x80, %rsp                  #  268   0xe68b6  7      OPC=addq_r64_imm32       
.L_e68b3:                           #        0xe68bd  0      OPC=<label>              
  movq 0x10(%rsp), %rdi             #  269   0xe68bd  5      OPC=movq_r64_m64         
  callq .L_1f8c0                    #  270   0xe68c2  5      OPC=callq_label          
.L_e68bd:                           #        0xe68c7  0      OPC=<label>              
  addq $0x38, %rsp                  #  271   0xe68c7  4      OPC=addq_r64_imm8        
  movl %ebx, %eax                   #  272   0xe68cb  2      OPC=movl_r32_r32         
  popq %rbx                         #  273   0xe68cd  1      OPC=popq_r64_1           
  popq %rbp                         #  274   0xe68ce  1      OPC=popq_r64_1           
  popq %r12                         #  275   0xe68cf  2      OPC=popq_r64_1           
  popq %r13                         #  276   0xe68d1  2      OPC=popq_r64_1           
  popq %r14                         #  277   0xe68d3  2      OPC=popq_r64_1           
  popq %r15                         #  278   0xe68d5  2      OPC=popq_r64_1           
  retq                              #  279   0xe68d7  1      OPC=retq                 
  xchgw %ax, %ax                    #  280   0xe68d8  2      OPC=xchgw_ax_r16         
.L_e68d0:                           #        0xe68da  0      OPC=<label>              
  movl $0xfffffffe, %ebx            #  281   0xe68da  6      OPC=movl_r32_imm32_1     
  jmpq .L_e687d                     #  282   0xe68e0  2      OPC=jmpq_label           
  nop                               #  283   0xe68e2  1      OPC=nop                  
  nop                               #  284   0xe68e3  1      OPC=nop                  
  nop                               #  285   0xe68e4  1      OPC=nop                  
  nop                               #  286   0xe68e5  1      OPC=nop                  
  nop                               #  287   0xe68e6  1      OPC=nop                  
  nop                               #  288   0xe68e7  1      OPC=nop                  
  nop                               #  289   0xe68e8  1      OPC=nop                  
  nop                               #  290   0xe68e9  1      OPC=nop                  
  nop                               #  291   0xe68ea  1      OPC=nop                  
.L_e68e0:                           #        0xe68eb  0      OPC=<label>              
  movq 0x30(%r15), %rax             #  292   0xe68eb  4      OPC=movq_r64_m64         
  movl (%r13), %edi                 #  293   0xe68ef  4      OPC=movl_r32_m32         
  leaq 0x1(%rax), %rcx              #  294   0xe68f3  4      OPC=leaq_r64_m16         
  movq %rdi, %rbx                   #  295   0xe68f7  3      OPC=movq_r64_r64         
  cmpq %rcx, %rdi                   #  296   0xe68fa  3      OPC=cmpq_r64_r64         
  jae .L_e662b                      #  297   0xe68fd  6      OPC=jae_label_1          
  testl %edi, %edi                  #  298   0xe6903  2      OPC=testl_r32_r32        
  jg .L_e662e                       #  299   0xe6905  6      OPC=jg_label_1           
.L_e6900:                           #        0xe690b  0      OPC=<label>              
  movl $0x8, %edi                   #  300   0xe690b  5      OPC=movl_r32_imm32       
  movl $0x1, %ecx                   #  301   0xe6910  5      OPC=movl_r32_imm32       
  movl $0x1, %ebx                   #  302   0xe6915  5      OPC=movl_r32_imm32       
  xorl %r13d, %r13d                 #  303   0xe691a  3      OPC=xorl_r32_r32         
  jmpq .L_e6639                     #  304   0xe691d  5      OPC=jmpq_label_1         
  nop                               #  305   0xe6922  1      OPC=nop                  
  nop                               #  306   0xe6923  1      OPC=nop                  
  nop                               #  307   0xe6924  1      OPC=nop                  
  nop                               #  308   0xe6925  1      OPC=nop                  
  nop                               #  309   0xe6926  1      OPC=nop                  
  nop                               #  310   0xe6927  1      OPC=nop                  
  nop                               #  311   0xe6928  1      OPC=nop                  
  nop                               #  312   0xe6929  1      OPC=nop                  
  nop                               #  313   0xe692a  1      OPC=nop                  
.L_e6920:                           #        0xe692b  0      OPC=<label>              
  movslq %r8d, %r14                 #  314   0xe692b  3      OPC=movslq_r64_r32       
  movl %r8d, 0x8(%rsp)              #  315   0xe692e  5      OPC=movl_m32_r32         
  shlq $0x2, %r14                   #  316   0xe6933  4      OPC=shlq_r64_imm8        
  movq %r14, %rdi                   #  317   0xe6937  3      OPC=movq_r64_r64         
  callq .memalign_plt               #  318   0xe693a  5      OPC=callq_label          
  testq %rax, %rax                  #  319   0xe693f  3      OPC=testq_r64_r64        
  movq %rax, 0x8(%r13)              #  320   0xe6942  4      OPC=movq_m64_r64         
  movl 0x8(%rsp), %r8d              #  321   0xe6946  5      OPC=movl_r32_m32         
  movq 0x18(%rsp), %r11             #  322   0xe694b  5      OPC=movq_r64_m64         
  je .L_e69ca                       #  323   0xe6950  6      OPC=je_label_1           
  movq %r14, %rdi                   #  324   0xe6956  3      OPC=movq_r64_r64         
  movl %r8d, 0x18(%rsp)             #  325   0xe6959  5      OPC=movl_m32_r32         
  movq %r11, 0x8(%rsp)              #  326   0xe695e  5      OPC=movq_m64_r64         
  movq %rax, 0x20(%rsp)             #  327   0xe6963  5      OPC=movq_m64_r64         
  callq .memalign_plt               #  328   0xe6968  5      OPC=callq_label          
  testq %rax, %rax                  #  329   0xe696d  3      OPC=testq_r64_r64        
  movq %rax, 0x10(%r13)             #  330   0xe6970  4      OPC=movq_m64_r64         
  movq 0x8(%rsp), %r11              #  331   0xe6974  5      OPC=movq_r64_m64         
  movl 0x18(%rsp), %r8d             #  332   0xe6979  5      OPC=movl_r32_m32         
  movq 0x20(%rsp), %rdx             #  333   0xe697e  5      OPC=movq_r64_m64         
  je .L_e6a95                       #  334   0xe6983  6      OPC=je_label_1           
  movl %r8d, %eax                   #  335   0xe6989  3      OPC=movl_r32_r32         
  movl %r8d, (%r13)                 #  336   0xe698c  4      OPC=movl_m32_r32         
  movl $0x1, %r14d                  #  337   0xe6990  6      OPC=movl_r32_imm32       
  jmpq .L_e66e6                     #  338   0xe6996  5      OPC=jmpq_label_1         
.L_e6990:                           #        0xe699b  0      OPC=<label>              
  cmpl (%r11), %r12d                #  339   0xe699b  3      OPC=cmpl_r32_m32         
  jne .L_e6abf                      #  340   0xe699e  6      OPC=jne_label_1          
  movl 0x4(%r11), %ebx              #  341   0xe69a4  4      OPC=movl_r32_m32         
  subl %r12d, %ebx                  #  342   0xe69a8  3      OPC=subl_r32_r32         
  jmpq .L_e6875                     #  343   0xe69ab  5      OPC=jmpq_label_1         
  nop                               #  344   0xe69b0  1      OPC=nop                  
  nop                               #  345   0xe69b1  1      OPC=nop                  
  nop                               #  346   0xe69b2  1      OPC=nop                  
.L_e69a8:                           #        0xe69b3  0      OPC=<label>              
  movq %rsi, 0x8(%rsp)              #  347   0xe69b3  5      OPC=movq_m64_r64         
  movq $0x0, 0x10(%rsp)             #  348   0xe69b8  9      OPC=movq_m64_imm32       
  jmpq .L_e65a2                     #  349   0xe69c1  5      OPC=jmpq_label_1         
  nop                               #  350   0xe69c6  1      OPC=nop                  
  nop                               #  351   0xe69c7  1      OPC=nop                  
  nop                               #  352   0xe69c8  1      OPC=nop                  
  nop                               #  353   0xe69c9  1      OPC=nop                  
  nop                               #  354   0xe69ca  1      OPC=nop                  
.L_e69c0:                           #        0xe69cb  0      OPC=<label>              
  movl $0xfffffffe, %ebx            #  355   0xe69cb  6      OPC=movl_r32_imm32_1     
  jmpq .L_e68bd                     #  356   0xe69d1  5      OPC=jmpq_label_1         
.L_e69ca:                           #        0xe69d6  0      OPC=<label>              
  xorl %r14d, %r14d                 #  357   0xe69d6  3      OPC=xorl_r32_r32         
  jmpq .L_e682b                     #  358   0xe69d9  5      OPC=jmpq_label_1         
  nop                               #  359   0xe69de  1      OPC=nop                  
  nop                               #  360   0xe69df  1      OPC=nop                  
  nop                               #  361   0xe69e0  1      OPC=nop                  
  nop                               #  362   0xe69e1  1      OPC=nop                  
  nop                               #  363   0xe69e2  1      OPC=nop                  
  nop                               #  364   0xe69e3  1      OPC=nop                  
.L_e69d8:                           #        0xe69e4  0      OPC=<label>              
  movl (%r13), %eax                 #  365   0xe69e4  4      OPC=movl_r32_m32         
  movl $0x1, %r14d                  #  366   0xe69e8  6      OPC=movl_r32_imm32       
  cmpl %eax, %r8d                   #  367   0xe69ee  3      OPC=cmpl_r32_r32         
  jbe .L_e66e6                      #  368   0xe69f1  6      OPC=jbe_label_1          
  movslq %r8d, %rdx                 #  369   0xe69f7  3      OPC=movslq_r64_r32       
  movq 0x8(%r13), %rdi              #  370   0xe69fa  4      OPC=movq_r64_m64         
  movq %r11, 0x8(%rsp)              #  371   0xe69fe  5      OPC=movq_m64_r64         
  shlq $0x2, %rdx                   #  372   0xe6a03  4      OPC=shlq_r64_imm8        
  movl %r8d, 0x28(%rsp)             #  373   0xe6a07  5      OPC=movl_m32_r32         
  movq %rdx, %rsi                   #  374   0xe6a0c  3      OPC=movq_r64_r64         
  movq %rdx, 0x20(%rsp)             #  375   0xe6a0f  5      OPC=movq_m64_r64         
  callq .__tls_get_addr_plt         #  376   0xe6a14  5      OPC=callq_label          
  testq %rax, %rax                  #  377   0xe6a19  3      OPC=testq_r64_r64        
  movq %rax, 0x18(%rsp)             #  378   0xe6a1c  5      OPC=movq_m64_r64         
  movq 0x8(%rsp), %r11              #  379   0xe6a21  5      OPC=movq_r64_m64         
  je .L_e69ca                       #  380   0xe6a26  2      OPC=je_label             
  movq 0x20(%rsp), %rdx             #  381   0xe6a28  5      OPC=movq_r64_m64         
  movq 0x10(%r13), %rdi             #  382   0xe6a2d  4      OPC=movq_r64_m64         
  movq %rdx, %rsi                   #  383   0xe6a31  3      OPC=movq_r64_r64         
  callq .__tls_get_addr_plt         #  384   0xe6a34  5      OPC=callq_label          
  testq %rax, %rax                  #  385   0xe6a39  3      OPC=testq_r64_r64        
  movq 0x8(%rsp), %r11              #  386   0xe6a3c  5      OPC=movq_r64_m64         
  movq 0x18(%rsp), %rcx             #  387   0xe6a41  5      OPC=movq_r64_m64         
  movl 0x28(%rsp), %r8d             #  388   0xe6a46  5      OPC=movl_r32_m32         
  je .L_e6aaa                       #  389   0xe6a4b  2      OPC=je_label             
  movq %rax, 0x10(%r13)             #  390   0xe6a4d  4      OPC=movq_m64_r64         
  movq %rcx, 0x8(%r13)              #  391   0xe6a51  4      OPC=movq_m64_r64         
  movl %r8d, %eax                   #  392   0xe6a55  3      OPC=movl_r32_r32         
  movl %r8d, (%r13)                 #  393   0xe6a58  4      OPC=movl_m32_r32         
  jmpq .L_e66e6                     #  394   0xe6a5c  5      OPC=jmpq_label_1         
  nop                               #  395   0xe6a61  1      OPC=nop                  
  nop                               #  396   0xe6a62  1      OPC=nop                  
  nop                               #  397   0xe6a63  1      OPC=nop                  
.L_e6a58:                           #        0xe6a64  0      OPC=<label>              
  movl $0xffffffff, %ebx            #  398   0xe6a64  6      OPC=movl_r32_imm32_1     
  jmpq .L_e68b3                     #  399   0xe6a6a  5      OPC=jmpq_label_1         
  nop                               #  400   0xe6a6f  1      OPC=nop                  
  nop                               #  401   0xe6a70  1      OPC=nop                  
  nop                               #  402   0xe6a71  1      OPC=nop                  
  nop                               #  403   0xe6a72  1      OPC=nop                  
  nop                               #  404   0xe6a73  1      OPC=nop                  
  nop                               #  405   0xe6a74  1      OPC=nop                  
.L_e6a68:                           #        0xe6a75  0      OPC=<label>              
  xorl %eax, %eax                   #  406   0xe6a75  2      OPC=xorl_r32_r32         
  nop                               #  407   0xe6a77  1      OPC=nop                  
  nop                               #  408   0xe6a78  1      OPC=nop                  
  nop                               #  409   0xe6a79  1      OPC=nop                  
  nop                               #  410   0xe6a7a  1      OPC=nop                  
  nop                               #  411   0xe6a7b  1      OPC=nop                  
  nop                               #  412   0xe6a7c  1      OPC=nop                  
.L_e6a70:                           #        0xe6a7d  0      OPC=<label>              
  movl (%r11,%rax,8), %esi          #  413   0xe6a7d  4      OPC=movl_r32_m32         
  movl %esi, (%rdx,%rax,4)          #  414   0xe6a81  3      OPC=movl_m32_r32         
  movl 0x4(%r11,%rax,8), %esi       #  415   0xe6a84  5      OPC=movl_r32_m32         
  movl %esi, (%rcx,%rax,4)          #  416   0xe6a89  3      OPC=movl_m32_r32         
  addq $0x1, %rax                   #  417   0xe6a8c  4      OPC=addq_r64_imm8        
  cmpl %eax, %ebx                   #  418   0xe6a90  2      OPC=cmpl_r32_r32         
  jg .L_e6a70                       #  419   0xe6a92  2      OPC=jg_label             
  jmpq .L_e67eb                     #  420   0xe6a94  5      OPC=jmpq_label_1         
.L_e6a8c:                           #        0xe6a99  0      OPC=<label>              
  xorl %edx, %edx                   #  421   0xe6a99  2      OPC=xorl_r32_r32         
  xorl %ebx, %ebx                   #  422   0xe6a9b  2      OPC=xorl_r32_r32         
  jmpq .L_e67f1                     #  423   0xe6a9d  5      OPC=jmpq_label_1         
.L_e6a95:                           #        0xe6aa2  0      OPC=<label>              
  movq %rdx, %rdi                   #  424   0xe6aa2  3      OPC=movq_r64_r64         
  xorl %r14d, %r14d                 #  425   0xe6aa5  3      OPC=xorl_r32_r32         
  callq .L_1f8c0                    #  426   0xe6aa8  5      OPC=callq_label          
  movq 0x8(%rsp), %r11              #  427   0xe6aad  5      OPC=movq_r64_m64         
  jmpq .L_e682b                     #  428   0xe6ab2  5      OPC=jmpq_label_1         
.L_e6aaa:                           #        0xe6ab7  0      OPC=<label>              
  movq %rcx, %rdi                   #  429   0xe6ab7  3      OPC=movq_r64_r64         
  xorl %r14d, %r14d                 #  430   0xe6aba  3      OPC=xorl_r32_r32         
  callq .L_1f8c0                    #  431   0xe6abd  5      OPC=callq_label          
  movq 0x8(%rsp), %r11              #  432   0xe6ac2  5      OPC=movq_r64_m64         
  jmpq .L_e682b                     #  433   0xe6ac7  5      OPC=jmpq_label_1         
.L_e6abf:                           #        0xe6acc  0      OPC=<label>              
  leaq 0xa5653(%rip), %rcx          #  434   0xe6acc  7      OPC=leaq_r64_m16         
  leaq 0xa5557(%rip), %rsi          #  435   0xe6ad3  7      OPC=leaq_r64_m16         
  leaq 0xa561f(%rip), %rdi          #  436   0xe6ada  7      OPC=leaq_r64_m16         
  movl $0x1d5, %edx                 #  437   0xe6ae1  5      OPC=movl_r32_imm32       
  callq .__assert_fail              #  438   0xe6ae6  5      OPC=callq_label          
.L_e6ade:                           #        0xe6aeb  0      OPC=<label>              
  leaq 0xa5627(%rip), %rcx          #  439   0xe6aeb  7      OPC=leaq_r64_m16         
  leaq 0xa5538(%rip), %rsi          #  440   0xe6af2  7      OPC=leaq_r64_m16         
  leaq 0xa55e8(%rip), %rdi          #  441   0xe6af9  7      OPC=leaq_r64_m16         
  movl $0x213, %edx                 #  442   0xe6b00  5      OPC=movl_r32_imm32       
  callq .__assert_fail              #  443   0xe6b05  5      OPC=callq_label          
.L_e6afd:                           #        0xe6b0a  0      OPC=<label>              
  leaq 0xa5608(%rip), %rcx          #  444   0xe6b0a  7      OPC=leaq_r64_m16         
  leaq 0xa5519(%rip), %rsi          #  445   0xe6b11  7      OPC=leaq_r64_m16         
  leaq 0xa55ac(%rip), %rdi          #  446   0xe6b18  7      OPC=leaq_r64_m16         
  movl $0x211, %edx                 #  447   0xe6b1f  5      OPC=movl_r32_imm32       
  callq .__assert_fail              #  448   0xe6b24  5      OPC=callq_label          
  nop                               #  449   0xe6b29  1      OPC=nop                  
  nop                               #  450   0xe6b2a  1      OPC=nop                  
  nop                               #  451   0xe6b2b  1      OPC=nop                  
  nop                               #  452   0xe6b2c  1      OPC=nop                  
                                                                                      
.size re_match_2, .-re_match_2

