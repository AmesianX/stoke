  .text
  .globl xdr_netobj_GLIBC_2_2_5
  .type xdr_netobj_GLIBC_2_2_5, @function

#! file-offset 0x138d20
#! rip-offset  0x138d20
#! capacity    336 bytes

# Text                           #  Line  RIP       Bytes  Opcode              
.xdr_netobj_GLIBC_2_2_5:         #        0x138d20  0      OPC=<label>         
  pushq %r12                     #  1     0x138d20  2      OPC=pushq_r64_1     
  pushq %rbp                     #  2     0x138d22  1      OPC=pushq_r64_1     
  movq %rsi, %rbp                #  3     0x138d23  3      OPC=movq_r64_r64    
  pushq %rbx                     #  4     0x138d26  1      OPC=pushq_r64_1     
  movq %rdi, %rbx                #  5     0x138d27  3      OPC=movq_r64_r64    
  subq $0x20, %rsp               #  6     0x138d2a  4      OPC=subq_r64_imm8   
  movl (%rdi), %edx              #  7     0x138d2e  2      OPC=movl_r32_m32    
  movq 0x8(%rsi), %r12           #  8     0x138d30  4      OPC=movq_r64_m64    
  cmpl $0x1, %edx                #  9     0x138d34  3      OPC=cmpl_r32_imm8   
  je .L_138dc0                   #  10    0x138d37  6      OPC=je_label_1      
  jb .L_138d70                   #  11    0x138d3d  2      OPC=jb_label        
  cmpl $0x2, %edx                #  12    0x138d3f  3      OPC=cmpl_r32_imm8   
  jne .L_138da0                  #  13    0x138d42  2      OPC=jne_label       
.L_138d44:                       #        0x138d44  0      OPC=<label>         
  testq %r12, %r12               #  14    0x138d44  3      OPC=testq_r64_r64   
  movl $0x1, %eax                #  15    0x138d47  5      OPC=movl_r32_imm32  
  je .L_138da2                   #  16    0x138d4c  2      OPC=je_label        
  movq %r12, %rdi                #  17    0x138d4e  3      OPC=movq_r64_r64    
  movl %eax, 0xc(%rsp)           #  18    0x138d51  4      OPC=movl_m32_r32    
  callq .L_1f8c0                 #  19    0x138d55  5      OPC=callq_label     
  movq $0x0, 0x8(%rbp)           #  20    0x138d5a  8      OPC=movq_m64_imm32  
  movl 0xc(%rsp), %eax           #  21    0x138d62  4      OPC=movl_r32_m32    
  jmpq .L_138da2                 #  22    0x138d66  2      OPC=jmpq_label      
  nop                            #  23    0x138d68  1      OPC=nop             
  nop                            #  24    0x138d69  1      OPC=nop             
  nop                            #  25    0x138d6a  1      OPC=nop             
  nop                            #  26    0x138d6b  1      OPC=nop             
  nop                            #  27    0x138d6c  1      OPC=nop             
  nop                            #  28    0x138d6d  1      OPC=nop             
  nop                            #  29    0x138d6e  1      OPC=nop             
  nop                            #  30    0x138d6f  1      OPC=nop             
.L_138d70:                       #        0x138d70  0      OPC=<label>         
  movl (%rsi), %eax              #  31    0x138d70  2      OPC=movl_r32_m32    
  leaq 0x18(%rsp), %rsi          #  32    0x138d72  5      OPC=leaq_r64_m16    
  movq %rax, 0x18(%rsp)          #  33    0x138d77  5      OPC=movq_m64_r64    
  movq 0x8(%rdi), %rax           #  34    0x138d7c  4      OPC=movq_r64_m64    
  callq 0x8(%rax)                #  35    0x138d80  3      OPC=callq_m64       
  testl %eax, %eax               #  36    0x138d83  2      OPC=testl_r32_r32   
  je .L_138da2                   #  37    0x138d85  2      OPC=je_label        
.L_138d87:                       #        0x138d87  0      OPC=<label>         
  movl (%rbp), %edx              #  38    0x138d87  3      OPC=movl_r32_m32    
  movl (%rbx), %ecx              #  39    0x138d8a  2      OPC=movl_r32_m32    
  cmpl $0x400, %edx              #  40    0x138d8c  6      OPC=cmpl_r32_imm32  
  ja .L_138db0                   #  41    0x138d92  2      OPC=ja_label        
  cmpl $0x1, %ecx                #  42    0x138d94  3      OPC=cmpl_r32_imm8   
  je .L_138e00                   #  43    0x138d97  2      OPC=je_label        
  jb .L_138de0                   #  44    0x138d99  2      OPC=jb_label        
  cmpl $0x2, %ecx                #  45    0x138d9b  3      OPC=cmpl_r32_imm8   
  je .L_138d44                   #  46    0x138d9e  2      OPC=je_label        
.L_138da0:                       #        0x138da0  0      OPC=<label>         
  xorl %eax, %eax                #  47    0x138da0  2      OPC=xorl_r32_r32    
.L_138da2:                       #        0x138da2  0      OPC=<label>         
  addq $0x20, %rsp               #  48    0x138da2  4      OPC=addq_r64_imm8   
  popq %rbx                      #  49    0x138da6  1      OPC=popq_r64_1      
  popq %rbp                      #  50    0x138da7  1      OPC=popq_r64_1      
  popq %r12                      #  51    0x138da8  2      OPC=popq_r64_1      
  retq                           #  52    0x138daa  1      OPC=retq            
  nop                            #  53    0x138dab  1      OPC=nop             
  nop                            #  54    0x138dac  1      OPC=nop             
  nop                            #  55    0x138dad  1      OPC=nop             
  nop                            #  56    0x138dae  1      OPC=nop             
  nop                            #  57    0x138daf  1      OPC=nop             
.L_138db0:                       #        0x138db0  0      OPC=<label>         
  xorl %eax, %eax                #  58    0x138db0  2      OPC=xorl_r32_r32    
  cmpl $0x2, %ecx                #  59    0x138db2  3      OPC=cmpl_r32_imm8   
  je .L_138d44                   #  60    0x138db5  2      OPC=je_label        
  addq $0x20, %rsp               #  61    0x138db7  4      OPC=addq_r64_imm8   
  popq %rbx                      #  62    0x138dbb  1      OPC=popq_r64_1      
  popq %rbp                      #  63    0x138dbc  1      OPC=popq_r64_1      
  popq %r12                      #  64    0x138dbd  2      OPC=popq_r64_1      
  retq                           #  65    0x138dbf  1      OPC=retq            
.L_138dc0:                       #        0x138dc0  0      OPC=<label>         
  movq 0x8(%rdi), %rax           #  66    0x138dc0  4      OPC=movq_r64_m64    
  leaq 0x18(%rsp), %rsi          #  67    0x138dc4  5      OPC=leaq_r64_m16    
  callq (%rax)                   #  68    0x138dc9  2      OPC=callq_m64       
  testl %eax, %eax               #  69    0x138dcb  2      OPC=testl_r32_r32   
  je .L_138da2                   #  70    0x138dcd  2      OPC=je_label        
  movq 0x18(%rsp), %rax          #  71    0x138dcf  5      OPC=movq_r64_m64    
  movl %eax, (%rbp)              #  72    0x138dd4  3      OPC=movl_m32_r32    
  jmpq .L_138d87                 #  73    0x138dd7  2      OPC=jmpq_label      
  nop                            #  74    0x138dd9  1      OPC=nop             
  nop                            #  75    0x138dda  1      OPC=nop             
  nop                            #  76    0x138ddb  1      OPC=nop             
  nop                            #  77    0x138ddc  1      OPC=nop             
  nop                            #  78    0x138ddd  1      OPC=nop             
  nop                            #  79    0x138dde  1      OPC=nop             
  nop                            #  80    0x138ddf  1      OPC=nop             
.L_138de0:                       #        0x138de0  0      OPC=<label>         
  testl %edx, %edx               #  81    0x138de0  2      OPC=testl_r32_r32   
  movl $0x1, %eax                #  82    0x138de2  5      OPC=movl_r32_imm32  
  je .L_138da2                   #  83    0x138de7  2      OPC=je_label        
  nop                            #  84    0x138de9  1      OPC=nop             
  nop                            #  85    0x138dea  1      OPC=nop             
  nop                            #  86    0x138deb  1      OPC=nop             
  nop                            #  87    0x138dec  1      OPC=nop             
  nop                            #  88    0x138ded  1      OPC=nop             
  nop                            #  89    0x138dee  1      OPC=nop             
  nop                            #  90    0x138def  1      OPC=nop             
.L_138df0:                       #        0x138df0  0      OPC=<label>         
  movq %r12, %rsi                #  91    0x138df0  3      OPC=movq_r64_r64    
  movq %rbx, %rdi                #  92    0x138df3  3      OPC=movq_r64_r64    
  callq .__GI_xdr_opaque_part_5  #  93    0x138df6  5      OPC=callq_label     
  jmpq .L_138da2                 #  94    0x138dfb  2      OPC=jmpq_label      
  nop                            #  95    0x138dfd  1      OPC=nop             
  nop                            #  96    0x138dfe  1      OPC=nop             
  nop                            #  97    0x138dff  1      OPC=nop             
.L_138e00:                       #        0x138e00  0      OPC=<label>         
  testl %edx, %edx               #  98    0x138e00  2      OPC=testl_r32_r32   
  movl $0x1, %eax                #  99    0x138e02  5      OPC=movl_r32_imm32  
  je .L_138da2                   #  100   0x138e07  2      OPC=je_label        
  testq %r12, %r12               #  101   0x138e09  3      OPC=testq_r64_r64   
  jne .L_138df0                  #  102   0x138e0c  2      OPC=jne_label       
  movl %edx, %edi                #  103   0x138e0e  2      OPC=movl_r32_r32    
  movl %edx, 0xc(%rsp)           #  104   0x138e10  4      OPC=movl_m32_r32    
  callq .memalign_plt            #  105   0x138e14  5      OPC=callq_label     
  testq %rax, %rax               #  106   0x138e19  3      OPC=testq_r64_r64   
  movq %rax, %r12                #  107   0x138e1c  3      OPC=movq_r64_r64    
  movq %rax, 0x8(%rbp)           #  108   0x138e1f  4      OPC=movq_m64_r64    
  movl 0xc(%rsp), %edx           #  109   0x138e23  4      OPC=movl_r32_m32    
  jne .L_138df0                  #  110   0x138e27  2      OPC=jne_label       
  leaq 0x54a43(%rip), %rsi       #  111   0x138e29  7      OPC=leaq_r64_m16    
  leaq 0x51765(%rip), %rdi       #  112   0x138e30  7      OPC=leaq_r64_m16    
  movl $0x5, %edx                #  113   0x138e37  5      OPC=movl_r32_imm32  
  callq .__dcgettext             #  114   0x138e3c  5      OPC=callq_label     
  leaq 0x54beb(%rip), %rdx       #  115   0x138e41  7      OPC=leaq_r64_m16    
  leaq 0x5413e(%rip), %rsi       #  116   0x138e48  7      OPC=leaq_r64_m16    
  movq %rax, %rcx                #  117   0x138e4f  3      OPC=movq_r64_r64    
  xorl %edi, %edi                #  118   0x138e52  2      OPC=xorl_r32_r32    
  xorl %eax, %eax                #  119   0x138e54  2      OPC=xorl_r32_r32    
  callq .__fxprintf              #  120   0x138e56  5      OPC=callq_label     
  xorl %eax, %eax                #  121   0x138e5b  2      OPC=xorl_r32_r32    
  jmpq .L_138da2                 #  122   0x138e5d  5      OPC=jmpq_label_1    
  nop                            #  123   0x138e62  1      OPC=nop             
  nop                            #  124   0x138e63  1      OPC=nop             
  nop                            #  125   0x138e64  1      OPC=nop             
  nop                            #  126   0x138e65  1      OPC=nop             
  nop                            #  127   0x138e66  1      OPC=nop             
  nop                            #  128   0x138e67  1      OPC=nop             
  nop                            #  129   0x138e68  1      OPC=nop             
  nop                            #  130   0x138e69  1      OPC=nop             
  nop                            #  131   0x138e6a  1      OPC=nop             
  nop                            #  132   0x138e6b  1      OPC=nop             
  nop                            #  133   0x138e6c  1      OPC=nop             
  nop                            #  134   0x138e6d  1      OPC=nop             
  nop                            #  135   0x138e6e  1      OPC=nop             
  nop                            #  136   0x138e6f  1      OPC=nop             
                                                                               
.size xdr_netobj_GLIBC_2_2_5, .-xdr_netobj_GLIBC_2_2_5

