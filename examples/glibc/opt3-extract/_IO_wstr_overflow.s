  .text
  .globl _IO_wstr_overflow
  .type _IO_wstr_overflow, @function

#! file-offset 0x71cf0
#! rip-offset  0x71cf0
#! capacity    512 bytes

# Text                            #  Line  RIP      Bytes  Opcode                
._IO_wstr_overflow:               #        0x71cf0  0      OPC=<label>           
  pushq %r15                      #  1     0x71cf0  2      OPC=pushq_r64_1       
  pushq %r14                      #  2     0x71cf2  2      OPC=pushq_r64_1       
  pushq %r13                      #  3     0x71cf4  2      OPC=pushq_r64_1       
  pushq %r12                      #  4     0x71cf6  2      OPC=pushq_r64_1       
  pushq %rbp                      #  5     0x71cf8  1      OPC=pushq_r64_1       
  pushq %rbx                      #  6     0x71cf9  1      OPC=pushq_r64_1       
  subq $0x28, %rsp                #  7     0x71cfa  4      OPC=subq_r64_imm8     
  movl (%rdi), %edx               #  8     0x71cfe  2      OPC=movl_r32_m32      
  cmpl $0xffffffff, %esi          #  9     0x71d00  6      OPC=cmpl_r32_imm32    
  nop                             #  10    0x71d06  1      OPC=nop               
  nop                             #  11    0x71d07  1      OPC=nop               
  nop                             #  12    0x71d08  1      OPC=nop               
  sete %bpl                       #  13    0x71d09  4      OPC=sete_r8           
  testb $0x8, %dl                 #  14    0x71d0d  3      OPC=testb_r8_imm8     
  je .L_71d28                     #  15    0x71d10  2      OPC=je_label          
  movl %ebp, %eax                 #  16    0x71d12  2      OPC=movl_r32_r32      
  xorl $0x1, %eax                 #  17    0x71d14  3      OPC=xorl_r32_imm8     
  movzbl %al, %eax                #  18    0x71d17  3      OPC=movzbl_r32_r8     
  negl %eax                       #  19    0x71d1a  2      OPC=negl_r32          
.L_71d16:                         #        0x71d1c  0      OPC=<label>           
  addq $0x28, %rsp                #  20    0x71d1c  4      OPC=addq_r64_imm8     
  popq %rbx                       #  21    0x71d20  1      OPC=popq_r64_1        
  popq %rbp                       #  22    0x71d21  1      OPC=popq_r64_1        
  popq %r12                       #  23    0x71d22  2      OPC=popq_r64_1        
  popq %r13                       #  24    0x71d24  2      OPC=popq_r64_1        
  popq %r14                       #  25    0x71d26  2      OPC=popq_r64_1        
  popq %r15                       #  26    0x71d28  2      OPC=popq_r64_1        
  retq                            #  27    0x71d2a  1      OPC=retq              
  nop                             #  28    0x71d2b  1      OPC=nop               
  nop                             #  29    0x71d2c  1      OPC=nop               
  nop                             #  30    0x71d2d  1      OPC=nop               
.L_71d28:                         #        0x71d2e  0      OPC=<label>           
  movl %edx, %eax                 #  31    0x71d2e  2      OPC=movl_r32_r32      
  andl $0xc00, %eax               #  32    0x71d30  5      OPC=andl_eax_imm32    
  cmpl $0x400, %eax               #  33    0x71d35  5      OPC=cmpl_eax_imm32    
  je .L_71ec8                     #  34    0x71d3a  6      OPC=je_label_1        
  movq 0xa0(%rdi), %rcx           #  35    0x71d40  7      OPC=movq_r64_m64      
  movq 0x20(%rcx), %r8            #  36    0x71d47  4      OPC=movq_r64_m64      
.L_71d45:                         #        0x71d4b  0      OPC=<label>           
  movq 0x30(%rcx), %r14           #  37    0x71d4b  4      OPC=movq_r64_m64      
  movq 0x38(%rcx), %r13           #  38    0x71d4f  4      OPC=movq_r64_m64      
  movzbl %bpl, %eax               #  39    0x71d53  4      OPC=movzbl_r32_r8     
  subq 0x18(%rcx), %r8            #  40    0x71d57  4      OPC=subq_r64_m64      
  movl %esi, %r12d                #  41    0x71d5b  3      OPC=movl_r32_r32      
  movq %rdi, %rbx                 #  42    0x71d5e  3      OPC=movq_r64_r64      
  subq %r14, %r13                 #  43    0x71d61  3      OPC=subq_r64_r64      
  movq %r13, %r9                  #  44    0x71d64  3      OPC=movq_r64_r64      
  sarq $0x2, %r9                  #  45    0x71d67  4      OPC=sarq_r64_imm8     
  sarq $0x2, %r8                  #  46    0x71d6b  4      OPC=sarq_r64_imm8     
  addq %r9, %rax                  #  47    0x71d6f  3      OPC=addq_r64_r64      
  cmpq %rax, %r8                  #  48    0x71d72  3      OPC=cmpq_r64_r64      
  jb .L_71e80                     #  49    0x71d75  6      OPC=jb_label_1        
  testb $0x8, 0x74(%rdi)          #  50    0x71d7b  4      OPC=testb_m8_imm8     
  je .L_71d90                     #  51    0x71d7f  2      OPC=je_label          
.L_71d7b:                         #        0x71d81  0      OPC=<label>           
  addq $0x28, %rsp                #  52    0x71d81  4      OPC=addq_r64_imm8     
  movl $0xffffffff, %eax          #  53    0x71d85  6      OPC=movl_r32_imm32_1  
  popq %rbx                       #  54    0x71d8b  1      OPC=popq_r64_1        
  popq %rbp                       #  55    0x71d8c  1      OPC=popq_r64_1        
  popq %r12                       #  56    0x71d8d  2      OPC=popq_r64_1        
  popq %r13                       #  57    0x71d8f  2      OPC=popq_r64_1        
  popq %r14                       #  58    0x71d91  2      OPC=popq_r64_1        
  popq %r15                       #  59    0x71d93  2      OPC=popq_r64_1        
  retq                            #  60    0x71d95  1      OPC=retq              
  nop                             #  61    0x71d96  1      OPC=nop               
.L_71d90:                         #        0x71d97  0      OPC=<label>           
  leaq 0x32(%r9), %r15            #  62    0x71d97  4      OPC=leaq_r64_m16      
  movq %r9, 0x8(%rsp)             #  63    0x71d9b  5      OPC=movq_m64_r64      
  leaq (%r15,%r15,1), %rcx        #  64    0x71da0  4      OPC=leaq_r64_m16      
  cmpq %rcx, %r9                  #  65    0x71da4  3      OPC=cmpq_r64_r64      
  ja .L_71d7b                     #  66    0x71da7  2      OPC=ja_label          
  movq $0x3fffffffffffffff, %rax  #  67    0x71da9  10     OPC=movq_r64_imm64    
  movq %rcx, 0x10(%rsp)           #  68    0x71db3  5      OPC=movq_m64_r64      
  cmpq %rax, %rcx                 #  69    0x71db8  3      OPC=cmpq_r64_r64      
  ja .L_71d7b                     #  70    0x71dbb  2      OPC=ja_label          
  leaq (,%r15,8), %rax            #  71    0x71dbd  8      OPC=leaq_r64_m16      
  movq %rax, 0x18(%rsp)           #  72    0x71dc5  5      OPC=movq_m64_r64      
  movq %rax, %rdi                 #  73    0x71dca  3      OPC=movq_r64_r64      
  callq 0xe0(%rbx)                #  74    0x71dcd  6      OPC=callq_m64         
  testq %rax, %rax                #  75    0x71dd3  3      OPC=testq_r64_r64     
  movq %rax, %r15                 #  76    0x71dd6  3      OPC=movq_r64_r64      
  je .L_71d7b                     #  77    0x71dd9  2      OPC=je_label          
  testq %r14, %r14                #  78    0x71ddb  3      OPC=testq_r64_r64     
  movq 0x10(%rsp), %rcx           #  79    0x71dde  5      OPC=movq_r64_m64      
  movq 0x8(%rsp), %r9             #  80    0x71de3  5      OPC=movq_r64_m64      
  je .L_71e13                     #  81    0x71de8  2      OPC=je_label          
  movq %r9, %rdx                  #  82    0x71dea  3      OPC=movq_r64_r64      
  movq %r14, %rsi                 #  83    0x71ded  3      OPC=movq_r64_r64      
  movq %rax, %rdi                 #  84    0x71df0  3      OPC=movq_r64_r64      
  callq .wmemcpy                  #  85    0x71df3  5      OPC=callq_label       
  movq %r14, %rdi                 #  86    0x71df8  3      OPC=movq_r64_r64      
  callq 0xe8(%rbx)                #  87    0x71dfb  6      OPC=callq_m64         
  movq 0xa0(%rbx), %rax           #  88    0x71e01  7      OPC=movq_r64_m64      
  movq 0x10(%rsp), %rcx           #  89    0x71e08  5      OPC=movq_r64_m64      
  movq 0x8(%rsp), %r9             #  90    0x71e0d  5      OPC=movq_r64_m64      
  movq $0x0, 0x30(%rax)           #  91    0x71e12  8      OPC=movq_m64_imm32    
.L_71e13:                         #        0x71e1a  0      OPC=<label>           
  movq %rcx, %rdx                 #  92    0x71e1a  3      OPC=movq_r64_r64      
  leaq (%r15,%r13,1), %rdi        #  93    0x71e1d  4      OPC=leaq_r64_m16      
  xorl %esi, %esi                 #  94    0x71e21  2      OPC=xorl_r32_r32      
  subq %r9, %rdx                  #  95    0x71e23  3      OPC=subq_r64_r64      
  callq .wmemset                  #  96    0x71e26  5      OPC=callq_label       
  movq 0x18(%rsp), %rdx           #  97    0x71e2b  5      OPC=movq_r64_m64      
  movl $0x1, %ecx                 #  98    0x71e30  5      OPC=movl_r32_imm32    
  movq %r15, %rsi                 #  99    0x71e35  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                 #  100   0x71e38  3      OPC=movq_r64_r64      
  addq %r15, %rdx                 #  101   0x71e3b  3      OPC=addq_r64_r64      
  callq ._IO_wsetb                #  102   0x71e3e  5      OPC=callq_label       
  movq 0xa0(%rbx), %rcx           #  103   0x71e43  7      OPC=movq_r64_m64      
  movq %r15, %rax                 #  104   0x71e4a  3      OPC=movq_r64_r64      
  subq %r14, %rax                 #  105   0x71e4d  3      OPC=subq_r64_r64      
  addq %rax, 0x10(%rcx)           #  106   0x71e50  4      OPC=addq_m64_r64      
  movq %r15, %rax                 #  107   0x71e54  3      OPC=movq_r64_r64      
  movq %r15, 0x18(%rcx)           #  108   0x71e57  4      OPC=movq_m64_r64      
  subq %r14, %rax                 #  109   0x71e5b  3      OPC=subq_r64_r64      
  addq %rax, (%rcx)               #  110   0x71e5e  3      OPC=addq_m64_r64      
  movq %r15, %rax                 #  111   0x71e61  3      OPC=movq_r64_r64      
  subq %r14, %rax                 #  112   0x71e64  3      OPC=subq_r64_r64      
  addq %rax, 0x8(%rcx)            #  113   0x71e67  4      OPC=addq_m64_r64      
  movq %r15, %rax                 #  114   0x71e6b  3      OPC=movq_r64_r64      
  subq %r14, %rax                 #  115   0x71e6e  3      OPC=subq_r64_r64      
  addq %rax, 0x20(%rcx)           #  116   0x71e71  4      OPC=addq_m64_r64      
  movq 0x38(%rcx), %rax           #  117   0x71e75  4      OPC=movq_r64_m64      
  movq %rax, 0x28(%rcx)           #  118   0x71e79  4      OPC=movq_m64_r64      
  nop                             #  119   0x71e7d  1      OPC=nop               
  nop                             #  120   0x71e7e  1      OPC=nop               
  nop                             #  121   0x71e7f  1      OPC=nop               
  nop                             #  122   0x71e80  1      OPC=nop               
  nop                             #  123   0x71e81  1      OPC=nop               
  nop                             #  124   0x71e82  1      OPC=nop               
  nop                             #  125   0x71e83  1      OPC=nop               
  nop                             #  126   0x71e84  1      OPC=nop               
  nop                             #  127   0x71e85  1      OPC=nop               
  nop                             #  128   0x71e86  1      OPC=nop               
.L_71e80:                         #        0x71e87  0      OPC=<label>           
  testb %bpl, %bpl                #  129   0x71e87  3      OPC=testb_r8_r8       
  je .L_71eb0                     #  130   0x71e8a  2      OPC=je_label          
  movq 0x20(%rcx), %rdx           #  131   0x71e8c  4      OPC=movq_r64_m64      
.L_71e89:                         #        0x71e90  0      OPC=<label>           
  cmpq %rdx, 0x8(%rcx)            #  132   0x71e90  4      OPC=cmpq_m64_r64      
  movl %r12d, %eax                #  133   0x71e94  3      OPC=movl_r32_r32      
  jae .L_71d16                    #  134   0x71e97  6      OPC=jae_label_1       
  movq %rdx, 0x8(%rcx)            #  135   0x71e9d  4      OPC=movq_m64_r64      
  addq $0x28, %rsp                #  136   0x71ea1  4      OPC=addq_r64_imm8     
  popq %rbx                       #  137   0x71ea5  1      OPC=popq_r64_1        
  popq %rbp                       #  138   0x71ea6  1      OPC=popq_r64_1        
  popq %r12                       #  139   0x71ea7  2      OPC=popq_r64_1        
  popq %r13                       #  140   0x71ea9  2      OPC=popq_r64_1        
  popq %r14                       #  141   0x71eab  2      OPC=popq_r64_1        
  popq %r15                       #  142   0x71ead  2      OPC=popq_r64_1        
  retq                            #  143   0x71eaf  1      OPC=retq              
  nop                             #  144   0x71eb0  1      OPC=nop               
  nop                             #  145   0x71eb1  1      OPC=nop               
  nop                             #  146   0x71eb2  1      OPC=nop               
  nop                             #  147   0x71eb3  1      OPC=nop               
  nop                             #  148   0x71eb4  1      OPC=nop               
  nop                             #  149   0x71eb5  1      OPC=nop               
  nop                             #  150   0x71eb6  1      OPC=nop               
.L_71eb0:                         #        0x71eb7  0      OPC=<label>           
  movq 0x20(%rcx), %rax           #  151   0x71eb7  4      OPC=movq_r64_m64      
  leaq 0x4(%rax), %rdx            #  152   0x71ebb  4      OPC=leaq_r64_m16      
  movq %rdx, 0x20(%rcx)           #  153   0x71ebf  4      OPC=movq_m64_r64      
  movl %r12d, (%rax)              #  154   0x71ec3  3      OPC=movl_m32_r32      
  jmpq .L_71e89                   #  155   0x71ec6  2      OPC=jmpq_label        
  nop                             #  156   0x71ec8  1      OPC=nop               
  nop                             #  157   0x71ec9  1      OPC=nop               
  nop                             #  158   0x71eca  1      OPC=nop               
  nop                             #  159   0x71ecb  1      OPC=nop               
  nop                             #  160   0x71ecc  1      OPC=nop               
  nop                             #  161   0x71ecd  1      OPC=nop               
  nop                             #  162   0x71ece  1      OPC=nop               
.L_71ec8:                         #        0x71ecf  0      OPC=<label>           
  movq 0xa0(%rdi), %rcx           #  163   0x71ecf  7      OPC=movq_r64_m64      
  orb $0x8, %dh                   #  164   0x71ed6  3      OPC=orb_rh_imm8       
  movl %edx, (%rdi)               #  165   0x71ed9  2      OPC=movl_m32_r32      
  movq (%rcx), %r8                #  166   0x71edb  3      OPC=movq_r64_m64      
  movq 0x8(%rcx), %rax            #  167   0x71ede  4      OPC=movq_r64_m64      
  movq %r8, 0x20(%rcx)            #  168   0x71ee2  4      OPC=movq_m64_r64      
  movq %rax, (%rcx)               #  169   0x71ee6  3      OPC=movq_m64_r64      
  jmpq .L_71d45                   #  170   0x71ee9  5      OPC=jmpq_label_1      
  nop                             #  171   0x71eee  1      OPC=nop               
  nop                             #  172   0x71eef  1      OPC=nop               
  nop                             #  173   0x71ef0  1      OPC=nop               
  nop                             #  174   0x71ef1  1      OPC=nop               
  nop                             #  175   0x71ef2  1      OPC=nop               
  nop                             #  176   0x71ef3  1      OPC=nop               
  nop                             #  177   0x71ef4  1      OPC=nop               
  nop                             #  178   0x71ef5  1      OPC=nop               
  nop                             #  179   0x71ef6  1      OPC=nop               
                                                                                 
.size _IO_wstr_overflow, .-_IO_wstr_overflow

