  .text
  .globl __libc_free
  .type __libc_free, @function

#! file-offset 0x82680
#! rip-offset  0x82680
#! capacity    464 bytes

# Text                       #  Line  RIP      Bytes  Opcode               
.__libc_free:                #        0x82680  0      OPC=<label>          
  pushq %r13                 #  1     0x82680  2      OPC=pushq_r64_1      
  pushq %r12                 #  2     0x82682  2      OPC=pushq_r64_1      
  pushq %rbp                 #  3     0x82684  1      OPC=pushq_r64_1      
  pushq %rbx                 #  4     0x82685  1      OPC=pushq_r64_1      
  subq $0x28, %rsp           #  5     0x82686  4      OPC=subq_r64_imm8    
  movq 0x33e86f(%rip), %rax  #  6     0x8268a  7      OPC=movq_r64_m64     
  movq (%rax), %rax          #  7     0x82691  3      OPC=movq_r64_m64     
  testq %rax, %rax           #  8     0x82694  3      OPC=testq_r64_r64    
  jne .L_82770               #  9     0x82697  6      OPC=jne_label_1      
  testq %rdi, %rdi           #  10    0x8269d  3      OPC=testq_r64_r64    
  je .L_826cc                #  11    0x826a0  2      OPC=je_label         
  movq -0x8(%rdi), %rax      #  12    0x826a2  4      OPC=movq_r64_m64     
  leaq -0x10(%rdi), %rsi     #  13    0x826a6  4      OPC=leaq_r64_m16     
  testb $0x2, %al            #  14    0x826aa  2      OPC=testb_al_imm8    
  jne .L_826e0               #  15    0x826ac  2      OPC=jne_label        
  testb $0x4, %al            #  16    0x826ae  2      OPC=testb_al_imm8    
  leaq 0x33f589(%rip), %rdi  #  17    0x826b0  7      OPC=leaq_r64_m16     
  je .L_826c5                #  18    0x826b7  2      OPC=je_label         
  movq %rsi, %rax            #  19    0x826b9  3      OPC=movq_r64_r64     
  andq $0xfc000000, %rax     #  20    0x826bc  6      OPC=andq_rax_imm32   
  movq (%rax), %rdi          #  21    0x826c2  3      OPC=movq_r64_m64     
.L_826c5:                    #        0x826c5  0      OPC=<label>          
  xorl %edx, %edx            #  22    0x826c5  2      OPC=xorl_r32_r32     
  callq ._int_free           #  23    0x826c7  5      OPC=callq_label      
.L_826cc:                    #        0x826cc  0      OPC=<label>          
  addq $0x28, %rsp           #  24    0x826cc  4      OPC=addq_r64_imm8    
  popq %rbx                  #  25    0x826d0  1      OPC=popq_r64_1       
  popq %rbp                  #  26    0x826d1  1      OPC=popq_r64_1       
  popq %r12                  #  27    0x826d2  2      OPC=popq_r64_1       
  popq %r13                  #  28    0x826d4  2      OPC=popq_r64_1       
  retq                       #  29    0x826d6  1      OPC=retq             
  nop                        #  30    0x826d7  1      OPC=nop              
  nop                        #  31    0x826d8  1      OPC=nop              
  nop                        #  32    0x826d9  1      OPC=nop              
  nop                        #  33    0x826da  1      OPC=nop              
  nop                        #  34    0x826db  1      OPC=nop              
  nop                        #  35    0x826dc  1      OPC=nop              
  nop                        #  36    0x826dd  1      OPC=nop              
  nop                        #  37    0x826de  1      OPC=nop              
  nop                        #  38    0x826df  1      OPC=nop              
.L_826e0:                    #        0x826e0  0      OPC=<label>          
  movl 0x33eb4e(%rip), %edx  #  39    0x826e0  6      OPC=movl_r32_m32     
  testl %edx, %edx           #  40    0x826e6  2      OPC=testl_r32_r32    
  jne .L_82718               #  41    0x826e8  2      OPC=jne_label        
  cmpq 0x33eb1f(%rip), %rax  #  42    0x826ea  7      OPC=cmpq_r64_m64     
  jbe .L_82718               #  43    0x826f1  2      OPC=jbe_label        
  cmpq $0x2000000, %rax      #  44    0x826f3  6      OPC=cmpq_rax_imm32   
  ja .L_82718                #  45    0x826f9  2      OPC=ja_label         
  andq $0xf8, %rax           #  46    0x826fb  4      OPC=andq_r64_imm8    
  leaq (%rax,%rax,1), %rdx   #  47    0x826ff  4      OPC=leaq_r64_m16     
  movq %rax, 0x33eb06(%rip)  #  48    0x82703  7      OPC=movq_m64_r64     
  movq %rdx, 0x33eaef(%rip)  #  49    0x8270a  7      OPC=movq_m64_r64     
  jmpq .L_8271c              #  50    0x82711  2      OPC=jmpq_label       
  nop                        #  51    0x82713  1      OPC=nop              
  nop                        #  52    0x82714  1      OPC=nop              
  nop                        #  53    0x82715  1      OPC=nop              
  nop                        #  54    0x82716  1      OPC=nop              
  nop                        #  55    0x82717  1      OPC=nop              
.L_82718:                    #        0x82718  0      OPC=<label>          
  andq $0xf8, %rax           #  56    0x82718  4      OPC=andq_r64_imm8    
.L_8271c:                    #        0x8271c  0      OPC=<label>          
  movq -0x10(%rdi), %rcx     #  57    0x8271c  4      OPC=movq_r64_m64     
  movq %rsi, %rdx            #  58    0x82720  3      OPC=movq_r64_r64     
  leaq (%rax,%rcx,1), %rsi   #  59    0x82723  4      OPC=leaq_r64_m16     
  movq 0x33e74a(%rip), %rax  #  60    0x82727  7      OPC=movq_r64_m64     
  subq %rcx, %rdx            #  61    0x8272e  3      OPC=subq_r64_r64     
  movq %rsi, %rcx            #  62    0x82731  3      OPC=movq_r64_r64     
  movq 0x18(%rax), %rax      #  63    0x82734  4      OPC=movq_r64_m64     
  orq %rdx, %rcx             #  64    0x82738  3      OPC=orq_r64_r64      
  subq $0x1, %rax            #  65    0x8273b  4      OPC=subq_r64_imm8    
  testq %rax, %rcx           #  66    0x8273f  3      OPC=testq_r64_r64    
  jne .L_82788               #  67    0x82742  2      OPC=jne_label        
  lock                       #  68    0x82744  1      OPC=lock             
  decl 0x33eadd(%rip)        #  69    0x82745  6      OPC=decl_m32         
  nop                        #  70    0x8274b  1      OPC=nop              
  movq %rsi, %rax            #  71    0x8274c  3      OPC=movq_r64_r64     
  negq %rax                  #  72    0x8274f  3      OPC=negq_r64         
  lock                       #  73    0x82752  1      OPC=lock             
  addq %rax, 0x33eadf(%rip)  #  74    0x82753  7      OPC=addq_m64_r64     
  nop                        #  75    0x8275a  1      OPC=nop              
  movq %rdx, %rdi            #  76    0x8275b  3      OPC=movq_r64_r64     
  callq .munmap              #  77    0x8275e  5      OPC=callq_label      
  addq $0x28, %rsp           #  78    0x82763  4      OPC=addq_r64_imm8    
  popq %rbx                  #  79    0x82767  1      OPC=popq_r64_1       
  popq %rbp                  #  80    0x82768  1      OPC=popq_r64_1       
  popq %r12                  #  81    0x82769  2      OPC=popq_r64_1       
  popq %r13                  #  82    0x8276b  2      OPC=popq_r64_1       
  retq                       #  83    0x8276d  1      OPC=retq             
  nop                        #  84    0x8276e  1      OPC=nop              
  nop                        #  85    0x8276f  1      OPC=nop              
  nop                        #  86    0x82770  1      OPC=nop              
  nop                        #  87    0x82771  1      OPC=nop              
.L_82770:                    #        0x82772  0      OPC=<label>          
  movq 0x48(%rsp), %rsi      #  88    0x82772  5      OPC=movq_r64_m64     
  callq %rax                 #  89    0x82777  2      OPC=callq_r64        
  addq $0x28, %rsp           #  90    0x82779  4      OPC=addq_r64_imm8    
  popq %rbx                  #  91    0x8277d  1      OPC=popq_r64_1       
  popq %rbp                  #  92    0x8277e  1      OPC=popq_r64_1       
  popq %r12                  #  93    0x8277f  2      OPC=popq_r64_1       
  popq %r13                  #  94    0x82781  2      OPC=popq_r64_1       
  retq                       #  95    0x82783  1      OPC=retq             
  nop                        #  96    0x82784  1      OPC=nop              
  nop                        #  97    0x82785  1      OPC=nop              
  nop                        #  98    0x82786  1      OPC=nop              
  nop                        #  99    0x82787  1      OPC=nop              
  nop                        #  100   0x82788  1      OPC=nop              
  nop                        #  101   0x82789  1      OPC=nop              
.L_82788:                    #        0x8278a  0      OPC=<label>          
  movl 0x33ea42(%rip), %ebx  #  102   0x8278a  6      OPC=movl_r32_m32     
  movl %ebx, %eax            #  103   0x82790  2      OPC=movl_r32_r32     
  andl $0x5, %eax            #  104   0x82792  3      OPC=andl_r32_imm8    
  cmpl $0x5, %eax            #  105   0x82795  3      OPC=cmpl_r32_imm8    
  je .L_8282d                #  106   0x82798  6      OPC=je_label_1       
  testb $0x1, %bl            #  107   0x8279e  3      OPC=testb_r8_imm8    
  jne .L_827b0               #  108   0x827a1  2      OPC=jne_label        
  andl $0x2, %ebx            #  109   0x827a3  3      OPC=andl_r32_imm8    
  je .L_826cc                #  110   0x827a6  6      OPC=je_label_1       
  callq .abort               #  111   0x827ac  5      OPC=callq_label      
  nop                        #  112   0x827b1  1      OPC=nop              
.L_827b0:                    #        0x827b2  0      OPC=<label>          
  leaq 0x10(%rsp), %rsi      #  113   0x827b2  5      OPC=leaq_r64_m16     
  xorl %ecx, %ecx            #  114   0x827b7  2      OPC=xorl_r32_r32     
  movl $0x10, %edx           #  115   0x827b9  5      OPC=movl_r32_imm32   
  movb $0x0, 0x10(%rsp)      #  116   0x827be  5      OPC=movb_m8_imm8     
  callq ._itoa_word          #  117   0x827c3  5      OPC=callq_label      
  cmpq %rsp, %rax            #  118   0x827c8  3      OPC=cmpq_r64_r64     
  movq %rax, %rbp            #  119   0x827cb  3      OPC=movq_r64_r64     
  jbe .L_827f3               #  120   0x827ce  2      OPC=jbe_label        
  movq %rax, %rdx            #  121   0x827d0  3      OPC=movq_r64_r64     
  movq %rax, %rdi            #  122   0x827d3  3      OPC=movq_r64_r64     
  movl $0x30, %esi           #  123   0x827d6  5      OPC=movl_r32_imm32   
  subq %rsp, %rdx            #  124   0x827db  3      OPC=subq_r64_r64     
  leaq -0x1(%rax), %r13      #  125   0x827de  4      OPC=leaq_r64_m16     
  subq %rdx, %rdi            #  126   0x827e2  3      OPC=subq_r64_r64     
  callq .__GI_memset         #  127   0x827e5  5      OPC=callq_label      
  leaq -0x1(%rsp), %rax      #  128   0x827ea  5      OPC=leaq_r64_m16     
  subq %r13, %rax            #  129   0x827ef  3      OPC=subq_r64_r64     
  addq %rax, %rbp            #  130   0x827f2  3      OPC=addq_r64_r64     
.L_827f3:                    #        0x827f5  0      OPC=<label>          
  movq 0x343f9e(%rip), %rax  #  131   0x827f5  7      OPC=movq_r64_m64     
  leaq 0x108e5a(%rip), %rdx  #  132   0x827fc  7      OPC=leaq_r64_m16     
  leaq 0x10c328(%rip), %rcx  #  133   0x82803  7      OPC=leaq_r64_m16     
  leaq 0x10c2f9(%rip), %rsi  #  134   0x8280a  7      OPC=leaq_r64_m16     
  movq %rbp, %r8             #  135   0x82811  3      OPC=movq_r64_r64     
  movq (%rax), %rax          #  136   0x82814  3      OPC=movq_r64_m64     
  testq %rax, %rax           #  137   0x82817  3      OPC=testq_r64_r64    
  cmovneq %rax, %rdx         #  138   0x8281a  4      OPC=cmovneq_r64_r64  
  andl $0x2, %ebx            #  139   0x8281e  3      OPC=andl_r32_imm8    
  xorl %eax, %eax            #  140   0x82821  2      OPC=xorl_r32_r32     
  movl %ebx, %edi            #  141   0x82823  2      OPC=movl_r32_r32     
  callq .__libc_message      #  142   0x82825  5      OPC=callq_label      
  jmpq .L_826cc              #  143   0x8282a  5      OPC=jmpq_label_1     
.L_8282d:                    #        0x8282f  0      OPC=<label>          
  andl $0x2, %ebx            #  144   0x8282f  3      OPC=andl_r32_imm8    
  leaq 0x10c2f9(%rip), %rdx  #  145   0x82832  7      OPC=leaq_r64_m16     
  leaq 0x10ab11(%rip), %rsi  #  146   0x82839  7      OPC=leaq_r64_m16     
  movl %ebx, %edi            #  147   0x82840  2      OPC=movl_r32_r32     
  xorl %eax, %eax            #  148   0x82842  2      OPC=xorl_r32_r32     
  callq .__libc_message      #  149   0x82844  5      OPC=callq_label      
  jmpq .L_826cc              #  150   0x82849  5      OPC=jmpq_label_1     
  nop                        #  151   0x8284e  1      OPC=nop              
  nop                        #  152   0x8284f  1      OPC=nop              
  nop                        #  153   0x82850  1      OPC=nop              
  nop                        #  154   0x82851  1      OPC=nop              
                                                                           
.size __libc_free, .-__libc_free

