  .text
  .globl registerrpc_GLIBC_2_2_5
  .type registerrpc_GLIBC_2_2_5, @function

#! file-offset 0x12be00
#! rip-offset  0x12be00
#! capacity    464 bytes

# Text                              #  Line  RIP       Bytes  Opcode                
.registerrpc_GLIBC_2_2_5:           #        0x12be00  0      OPC=<label>           
  pushq %r15                        #  1     0x12be00  2      OPC=pushq_r64_1       
  pushq %r14                        #  2     0x12be02  2      OPC=pushq_r64_1       
  pushq %r13                        #  3     0x12be04  2      OPC=pushq_r64_1       
  pushq %r12                        #  4     0x12be06  2      OPC=pushq_r64_1       
  pushq %rbp                        #  5     0x12be08  1      OPC=pushq_r64_1       
  pushq %rbx                        #  6     0x12be09  1      OPC=pushq_r64_1       
  movq %rdx, %rbp                   #  7     0x12be0a  3      OPC=movq_r64_r64      
  subq $0x28, %rsp                  #  8     0x12be0d  4      OPC=subq_r64_imm8     
  testq %rdx, %rdx                  #  9     0x12be11  3      OPC=testq_r64_r64     
  movq %r9, 0x8(%rsp)               #  10    0x12be14  5      OPC=movq_m64_r64      
  je .L_12bf20                      #  11    0x12be19  6      OPC=je_label_1        
  movq %rdi, %rbx                   #  12    0x12be1f  3      OPC=movq_r64_r64      
  movq %rsi, %r15                   #  13    0x12be22  3      OPC=movq_r64_r64      
  movq %rcx, %r14                   #  14    0x12be25  3      OPC=movq_r64_r64      
  movq %r8, %r13                    #  15    0x12be28  3      OPC=movq_r64_r64      
  callq .__rpc_thread_variables     #  16    0x12be2b  5      OPC=callq_label       
  cmpq $0x0, 0x100(%rax)            #  17    0x12be30  8      OPC=cmpq_m64_imm8     
  movq %rax, %r12                   #  18    0x12be38  3      OPC=movq_r64_r64      
  je .L_12bf60                      #  19    0x12be3b  6      OPC=je_label_1        
.L_12be41:                          #        0x12be41  0      OPC=<label>           
  movq %r15, %rsi                   #  20    0x12be41  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                   #  21    0x12be44  3      OPC=movq_r64_r64      
  callq .pmap_unset_GLIBC_2_2_5     #  22    0x12be47  5      OPC=callq_label       
  movq 0x100(%r12), %rdi            #  23    0x12be4c  8      OPC=movq_r64_m64      
  leaq -0x22b(%rip), %rcx           #  24    0x12be54  7      OPC=leaq_r64_m16      
  movl $0x11, %r8d                  #  25    0x12be5b  6      OPC=movl_r32_imm32    
  movq %r15, %rdx                   #  26    0x12be61  3      OPC=movq_r64_r64      
  movq %rbx, %rsi                   #  27    0x12be64  3      OPC=movq_r64_r64      
  callq .svc_register_GLIBC_2_2_5   #  28    0x12be67  5      OPC=callq_label       
  testl %eax, %eax                  #  29    0x12be6c  2      OPC=testl_r32_r32     
  jne .L_12bed0                     #  30    0x12be6e  2      OPC=jne_label         
  leaq 0x64a81(%rip), %rsi          #  31    0x12be70  7      OPC=leaq_r64_m16      
  leaq 0x5e71e(%rip), %rdi          #  32    0x12be77  7      OPC=leaq_r64_m16      
  movl $0x5, %edx                   #  33    0x12be7e  5      OPC=movl_r32_imm32    
  callq .__dcgettext                #  34    0x12be83  5      OPC=callq_label       
  leaq 0x18(%rsp), %rdi             #  35    0x12be88  5      OPC=leaq_r64_m16      
  movq %rax, %rsi                   #  36    0x12be8d  3      OPC=movq_r64_r64      
  movq %r15, %rcx                   #  37    0x12be90  3      OPC=movq_r64_r64      
  xorl %eax, %eax                   #  38    0x12be93  2      OPC=xorl_r32_r32      
  movq %rbx, %rdx                   #  39    0x12be95  3      OPC=movq_r64_r64      
  callq .__asprintf                 #  40    0x12be98  5      OPC=callq_label       
  testl %eax, %eax                  #  41    0x12be9d  2      OPC=testl_r32_r32     
  js .L_12bf51                      #  42    0x12be9f  6      OPC=js_label_1        
.L_12bea5:                          #        0x12bea5  0      OPC=<label>           
  movq 0x18(%rsp), %rdx             #  43    0x12bea5  5      OPC=movq_r64_m64      
.L_12beaa:                          #        0x12beaa  0      OPC=<label>           
  testq %rdx, %rdx                  #  44    0x12beaa  3      OPC=testq_r64_r64     
  movl $0xffffffff, %ebx            #  45    0x12bead  6      OPC=movl_r32_imm32_1  
  je .L_12bf0f                      #  46    0x12beb3  2      OPC=je_label          
  leaq 0x6105e(%rip), %rsi          #  47    0x12beb5  7      OPC=leaq_r64_m16      
  xorl %edi, %edi                   #  48    0x12bebc  2      OPC=xorl_r32_r32      
  xorl %eax, %eax                   #  49    0x12bebe  2      OPC=xorl_r32_r32      
  callq .__fxprintf                 #  50    0x12bec0  5      OPC=callq_label       
  movq 0x18(%rsp), %rdi             #  51    0x12bec5  5      OPC=movq_r64_m64      
  callq .L_1f8c0                    #  52    0x12beca  5      OPC=callq_label       
  jmpq .L_12bf0f                    #  53    0x12becf  2      OPC=jmpq_label        
.L_12bed0:                          #        0x12bed1  0      OPC=<label>           
  movl $0x28, %edi                  #  54    0x12bed1  5      OPC=movl_r32_imm32    
  callq .memalign_plt               #  55    0x12bed6  5      OPC=callq_label       
  testq %rax, %rax                  #  56    0x12bedb  3      OPC=testq_r64_r64     
  je .L_12bfb8                      #  57    0x12bede  6      OPC=je_label_1        
  movq 0xf8(%r12), %rdx             #  58    0x12bee4  8      OPC=movq_r64_m64      
  movq 0x8(%rsp), %rcx              #  59    0x12beec  5      OPC=movq_r64_m64      
  movl %ebx, 0x8(%rax)              #  60    0x12bef1  3      OPC=movl_m32_r32      
  movq %r14, (%rax)                 #  61    0x12bef4  3      OPC=movq_m64_r64      
  xorl %ebx, %ebx                   #  62    0x12bef7  2      OPC=xorl_r32_r32      
  movl %ebp, 0xc(%rax)              #  63    0x12bef9  3      OPC=movl_m32_r32      
  movq %r13, 0x10(%rax)             #  64    0x12befc  4      OPC=movq_m64_r64      
  movq %rcx, 0x18(%rax)             #  65    0x12bf00  4      OPC=movq_m64_r64      
  movq %rdx, 0x20(%rax)             #  66    0x12bf04  4      OPC=movq_m64_r64      
  movq %rax, 0xf8(%r12)             #  67    0x12bf08  8      OPC=movq_m64_r64      
.L_12bf0f:                          #        0x12bf10  0      OPC=<label>           
  addq $0x28, %rsp                  #  68    0x12bf10  4      OPC=addq_r64_imm8     
  movl %ebx, %eax                   #  69    0x12bf14  2      OPC=movl_r32_r32      
  popq %rbx                         #  70    0x12bf16  1      OPC=popq_r64_1        
  popq %rbp                         #  71    0x12bf17  1      OPC=popq_r64_1        
  popq %r12                         #  72    0x12bf18  2      OPC=popq_r64_1        
  popq %r13                         #  73    0x12bf1a  2      OPC=popq_r64_1        
  popq %r14                         #  74    0x12bf1c  2      OPC=popq_r64_1        
  popq %r15                         #  75    0x12bf1e  2      OPC=popq_r64_1        
  retq                              #  76    0x12bf20  1      OPC=retq              
.L_12bf20:                          #        0x12bf21  0      OPC=<label>           
  leaq 0x64989(%rip), %rsi          #  77    0x12bf21  7      OPC=leaq_r64_m16      
  leaq 0x5e66e(%rip), %rdi          #  78    0x12bf28  7      OPC=leaq_r64_m16      
  movl $0x5, %edx                   #  79    0x12bf2f  5      OPC=movl_r32_imm32    
  callq .__dcgettext                #  80    0x12bf34  5      OPC=callq_label       
  leaq 0x18(%rsp), %rdi             #  81    0x12bf39  5      OPC=leaq_r64_m16      
  xorl %edx, %edx                   #  82    0x12bf3e  2      OPC=xorl_r32_r32      
  movq %rax, %rsi                   #  83    0x12bf40  3      OPC=movq_r64_r64      
  xorl %eax, %eax                   #  84    0x12bf43  2      OPC=xorl_r32_r32      
  callq .__asprintf                 #  85    0x12bf45  5      OPC=callq_label       
  testl %eax, %eax                  #  86    0x12bf4a  2      OPC=testl_r32_r32     
  jns .L_12bea5                     #  87    0x12bf4c  6      OPC=jns_label_1       
.L_12bf51:                          #        0x12bf52  0      OPC=<label>           
  movl $0xffffffff, %ebx            #  88    0x12bf52  6      OPC=movl_r32_imm32_1  
  jmpq .L_12bf0f                    #  89    0x12bf58  2      OPC=jmpq_label        
  nop                               #  90    0x12bf5a  1      OPC=nop               
  nop                               #  91    0x12bf5b  1      OPC=nop               
  nop                               #  92    0x12bf5c  1      OPC=nop               
  nop                               #  93    0x12bf5d  1      OPC=nop               
  nop                               #  94    0x12bf5e  1      OPC=nop               
  nop                               #  95    0x12bf5f  1      OPC=nop               
  nop                               #  96    0x12bf60  1      OPC=nop               
  nop                               #  97    0x12bf61  1      OPC=nop               
.L_12bf60:                          #        0x12bf62  0      OPC=<label>           
  movl $0xffffffff, %edi            #  98    0x12bf62  6      OPC=movl_r32_imm32_1  
  callq .svcudp_create_GLIBC_2_2_5  #  99    0x12bf68  5      OPC=callq_label       
  testq %rax, %rax                  #  100   0x12bf6d  3      OPC=testq_r64_r64     
  movq %rax, 0x100(%r12)            #  101   0x12bf70  8      OPC=movq_m64_r64      
  movl $0x5, %edx                   #  102   0x12bf78  5      OPC=movl_r32_imm32    
  leaq 0x64957(%rip), %rsi          #  103   0x12bf7d  7      OPC=leaq_r64_m16      
  jne .L_12be41                     #  104   0x12bf84  6      OPC=jne_label_1       
  nop                               #  105   0x12bf8a  1      OPC=nop               
  nop                               #  106   0x12bf8b  1      OPC=nop               
  nop                               #  107   0x12bf8c  1      OPC=nop               
  nop                               #  108   0x12bf8d  1      OPC=nop               
  nop                               #  109   0x12bf8e  1      OPC=nop               
  nop                               #  110   0x12bf8f  1      OPC=nop               
  nop                               #  111   0x12bf90  1      OPC=nop               
  nop                               #  112   0x12bf91  1      OPC=nop               
  nop                               #  113   0x12bf92  1      OPC=nop               
.L_12bf90:                          #        0x12bf93  0      OPC=<label>           
  leaq 0x5e605(%rip), %rdi          #  114   0x12bf93  7      OPC=leaq_r64_m16      
  callq .__dcgettext                #  115   0x12bf9a  5      OPC=callq_label       
  movq %rax, %rdi                   #  116   0x12bf9f  3      OPC=movq_r64_r64      
  callq .__strdup                   #  117   0x12bfa2  5      OPC=callq_label       
  movq %rax, %rdx                   #  118   0x12bfa7  3      OPC=movq_r64_r64      
  movq %rax, 0x18(%rsp)             #  119   0x12bfaa  5      OPC=movq_m64_r64      
  jmpq .L_12beaa                    #  120   0x12bfaf  5      OPC=jmpq_label_1      
  nop                               #  121   0x12bfb4  1      OPC=nop               
  nop                               #  122   0x12bfb5  1      OPC=nop               
  nop                               #  123   0x12bfb6  1      OPC=nop               
  nop                               #  124   0x12bfb7  1      OPC=nop               
  nop                               #  125   0x12bfb8  1      OPC=nop               
  nop                               #  126   0x12bfb9  1      OPC=nop               
  nop                               #  127   0x12bfba  1      OPC=nop               
.L_12bfb8:                          #        0x12bfbb  0      OPC=<label>           
  movl $0x5, %edx                   #  128   0x12bfbb  5      OPC=movl_r32_imm32    
  leaq 0x618a2(%rip), %rsi          #  129   0x12bfc0  7      OPC=leaq_r64_m16      
  jmpq .L_12bf90                    #  130   0x12bfc7  2      OPC=jmpq_label        
  nop                               #  131   0x12bfc9  1      OPC=nop               
  nop                               #  132   0x12bfca  1      OPC=nop               
  nop                               #  133   0x12bfcb  1      OPC=nop               
  nop                               #  134   0x12bfcc  1      OPC=nop               
  nop                               #  135   0x12bfcd  1      OPC=nop               
  nop                               #  136   0x12bfce  1      OPC=nop               
  nop                               #  137   0x12bfcf  1      OPC=nop               
  nop                               #  138   0x12bfd0  1      OPC=nop               
  nop                               #  139   0x12bfd1  1      OPC=nop               
  nop                               #  140   0x12bfd2  1      OPC=nop               
                                                                                    
.size registerrpc_GLIBC_2_2_5, .-registerrpc_GLIBC_2_2_5

