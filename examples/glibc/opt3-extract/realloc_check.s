  .text
  .globl realloc_check
  .type realloc_check, @function

#! file-offset 0x81cc0
#! rip-offset  0x81cc0
#! capacity    1088 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
.realloc_check:                     #        0x81cc0  0      OPC=<label>           
  pushq %r15                        #  1     0x81cc0  2      OPC=pushq_r64_1       
  pushq %r14                        #  2     0x81cc2  2      OPC=pushq_r64_1       
  pushq %r13                        #  3     0x81cc4  2      OPC=pushq_r64_1       
  pushq %r12                        #  4     0x81cc6  2      OPC=pushq_r64_1       
  pushq %rbp                        #  5     0x81cc8  1      OPC=pushq_r64_1       
  pushq %rbx                        #  6     0x81cc9  1      OPC=pushq_r64_1       
  movq %rsi, %rbx                   #  7     0x81cca  3      OPC=movq_r64_r64      
  subq $0x58, %rsp                  #  8     0x81ccd  4      OPC=subq_r64_imm8     
  cmpq $0xff, %rsi                  #  9     0x81cd1  4      OPC=cmpq_r64_imm8     
  je .L_81f58                       #  10    0x81cd5  6      OPC=je_label_1        
  testq %rdi, %rdi                  #  11    0x81cdb  3      OPC=testq_r64_r64     
  movq %rdi, %rbp                   #  12    0x81cde  3      OPC=movq_r64_r64      
  je .L_82020                       #  13    0x81ce1  6      OPC=je_label_1        
  testq %rsi, %rsi                  #  14    0x81ce7  3      OPC=testq_r64_r64     
  je .L_81f90                       #  15    0x81cea  6      OPC=je_label_1        
  movl $0x1, %r12d                  #  16    0x81cf0  6      OPC=movl_r32_imm32    
  xorl %r13d, %r13d                 #  17    0x81cf6  3      OPC=xorl_r32_r32      
  movl %r12d, %esi                  #  18    0x81cf9  3      OPC=movl_r32_r32      
  movl %r13d, %eax                  #  19    0x81cfc  3      OPC=movl_r32_r32      
  cmpl $0x0, 0x344efa(%rip)         #  20    0x81cff  7      OPC=cmpl_m32_imm8     
  je .L_81d14                       #  21    0x81d06  2      OPC=je_label          
  lock                              #  22    0x81d08  1      OPC=lock              
  cmpxchgl %esi, 0x33ff30(%rip)     #  23    0x81d09  7      OPC=cmpxchgl_m32_r32  
  nop                               #  24    0x81d10  1      OPC=nop               
  jne .L_81d1d                      #  25    0x81d11  2      OPC=jne_label         
  jmpq .L_81d37                     #  26    0x81d13  2      OPC=jmpq_label        
.L_81d14:                           #        0x81d15  0      OPC=<label>           
  cmpxchgl %esi, 0x33ff25(%rip)     #  27    0x81d15  7      OPC=cmpxchgl_m32_r32  
  je .L_81d37                       #  28    0x81d1c  2      OPC=je_label          
.L_81d1d:                           #        0x81d1e  0      OPC=<label>           
  leaq 0x33ff1c(%rip), %rdi         #  29    0x81d1e  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  30    0x81d25  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  31    0x81d2c  5      OPC=callq_label       
  addq $0x80, %rsp                  #  32    0x81d31  7      OPC=addq_r64_imm32    
.L_81d37:                           #        0x81d38  0      OPC=<label>           
  leaq 0x28(%rsp), %rsi             #  33    0x81d38  5      OPC=leaq_r64_m16      
  movq %rbp, %rdi                   #  34    0x81d3d  3      OPC=movq_r64_r64      
  callq .mem2chunk_check            #  35    0x81d40  5      OPC=callq_label       
  movq %rax, %r14                   #  36    0x81d45  3      OPC=movq_r64_r64      
  cmpl $0x0, 0x344eb2(%rip)         #  37    0x81d48  7      OPC=cmpl_m32_imm8     
  je .L_81d5b                       #  38    0x81d4f  2      OPC=je_label          
  lock                              #  39    0x81d51  1      OPC=lock              
  decl 0x33fee9(%rip)               #  40    0x81d52  6      OPC=decl_m32          
  nop                               #  41    0x81d58  1      OPC=nop               
  jne .L_81d63                      #  42    0x81d59  2      OPC=jne_label         
  jmpq .L_81d7d                     #  43    0x81d5b  2      OPC=jmpq_label        
.L_81d5b:                           #        0x81d5d  0      OPC=<label>           
  decl 0x33fedf(%rip)               #  44    0x81d5d  6      OPC=decl_m32          
  je .L_81d7d                       #  45    0x81d63  2      OPC=je_label          
.L_81d63:                           #        0x81d65  0      OPC=<label>           
  leaq 0x33fed6(%rip), %rdi         #  46    0x81d65  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  47    0x81d6c  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  48    0x81d73  5      OPC=callq_label       
  addq $0x80, %rsp                  #  49    0x81d78  7      OPC=addq_r64_imm32    
.L_81d7d:                           #        0x81d7f  0      OPC=<label>           
  testq %r14, %r14                  #  50    0x81d7f  3      OPC=testq_r64_r64     
  je .L_8209f                       #  51    0x81d82  6      OPC=je_label_1        
  movq 0x8(%r14), %rax              #  52    0x81d88  4      OPC=movq_r64_m64      
  leaq 0x1(%rbx), %r9               #  53    0x81d8c  4      OPC=leaq_r64_m16      
  andq $0xf8, %rax                  #  54    0x81d90  4      OPC=andq_r64_imm8     
  cmpq $0xbf, %r9                   #  55    0x81d94  4      OPC=cmpq_r64_imm8     
  movq %rax, 0x8(%rsp)              #  56    0x81d98  5      OPC=movq_m64_r64      
  ja .L_81f58                       #  57    0x81d9d  6      OPC=ja_label_1        
  leaq 0x18(%rbx), %r15             #  58    0x81da3  4      OPC=leaq_r64_m16      
  movl $0x20, %r8d                  #  59    0x81da7  6      OPC=movl_r32_imm32    
  movl %r12d, %esi                  #  60    0x81dad  3      OPC=movl_r32_r32      
  movq %r8, %r10                    #  61    0x81db0  3      OPC=movq_r64_r64      
  movl %r13d, %eax                  #  62    0x81db3  3      OPC=movl_r32_r32      
  movq %r15, %rdx                   #  63    0x81db6  3      OPC=movq_r64_r64      
  andq $0xf0, %rdx                  #  64    0x81db9  4      OPC=andq_r64_imm8     
  cmpq $0x20, %r15                  #  65    0x81dbd  4      OPC=cmpq_r64_imm8     
  cmovaeq %rdx, %r10                #  66    0x81dc1  4      OPC=cmovaeq_r64_r64   
  cmpl $0x0, 0x344e36(%rip)         #  67    0x81dc5  7      OPC=cmpl_m32_imm8     
  je .L_81dd8                       #  68    0x81dcc  2      OPC=je_label          
  lock                              #  69    0x81dce  1      OPC=lock              
  cmpxchgl %esi, 0x33fe6c(%rip)     #  70    0x81dcf  7      OPC=cmpxchgl_m32_r32  
  nop                               #  71    0x81dd6  1      OPC=nop               
  jne .L_81de1                      #  72    0x81dd7  2      OPC=jne_label         
  jmpq .L_81dfb                     #  73    0x81dd9  2      OPC=jmpq_label        
.L_81dd8:                           #        0x81ddb  0      OPC=<label>           
  cmpxchgl %esi, 0x33fe61(%rip)     #  74    0x81ddb  7      OPC=cmpxchgl_m32_r32  
  je .L_81dfb                       #  75    0x81de2  2      OPC=je_label          
.L_81de1:                           #        0x81de4  0      OPC=<label>           
  leaq 0x33fe58(%rip), %rdi         #  76    0x81de4  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  77    0x81deb  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  78    0x81df2  5      OPC=callq_label       
  addq $0x80, %rsp                  #  79    0x81df7  7      OPC=addq_r64_imm32    
.L_81dfb:                           #        0x81dfe  0      OPC=<label>           
  testb $0x2, 0x8(%r14)             #  80    0x81dfe  5      OPC=testb_m8_imm8     
  jne .L_81f20                      #  81    0x81e03  6      OPC=jne_label_1       
  movq %r8, 0x18(%rsp)              #  82    0x81e09  5      OPC=movq_m64_r64      
  movq %rdx, 0x10(%rsp)             #  83    0x81e0e  5      OPC=movq_m64_r64      
  callq .top_check                  #  84    0x81e13  5      OPC=callq_label       
  testl %eax, %eax                  #  85    0x81e18  2      OPC=testl_r32_r32     
  js .L_81f80                       #  86    0x81e1a  6      OPC=js_label_1        
  movq 0x18(%rsp), %r8              #  87    0x81e20  5      OPC=movq_r64_m64      
  movq 0x10(%rsp), %rdx             #  88    0x81e25  5      OPC=movq_r64_m64      
  cmpq $0x20, %r15                  #  89    0x81e2a  4      OPC=cmpq_r64_imm8     
  leaq 0x33fe0e(%rip), %rdi         #  90    0x81e2e  7      OPC=leaq_r64_m16      
  movq %r14, %rsi                   #  91    0x81e35  3      OPC=movq_r64_r64      
  movq %r8, %rcx                    #  92    0x81e38  3      OPC=movq_r64_r64      
  cmovaeq %rdx, %rcx                #  93    0x81e3b  4      OPC=cmovaeq_r64_r64   
  movq 0x8(%rsp), %rdx              #  94    0x81e3f  5      OPC=movq_r64_m64      
  callq ._int_realloc               #  95    0x81e44  5      OPC=callq_label       
  movq %rax, %rbp                   #  96    0x81e49  3      OPC=movq_r64_r64      
.L_81e49:                           #        0x81e4c  0      OPC=<label>           
  testq %rbp, %rbp                  #  97    0x81e4c  3      OPC=testq_r64_r64     
  je .L_81f80                       #  98    0x81e4f  6      OPC=je_label_1        
.L_81e52:                           #        0x81e55  0      OPC=<label>           
  cmpl $0x0, 0x344da7(%rip)         #  99    0x81e55  7      OPC=cmpl_m32_imm8     
  je .L_81e66                       #  100   0x81e5c  2      OPC=je_label          
  lock                              #  101   0x81e5e  1      OPC=lock              
  decl 0x33fdde(%rip)               #  102   0x81e5f  6      OPC=decl_m32          
  nop                               #  103   0x81e65  1      OPC=nop               
  jne .L_81e6e                      #  104   0x81e66  2      OPC=jne_label         
  jmpq .L_81e88                     #  105   0x81e68  2      OPC=jmpq_label        
.L_81e66:                           #        0x81e6a  0      OPC=<label>           
  decl 0x33fdd4(%rip)               #  106   0x81e6a  6      OPC=decl_m32          
  je .L_81e88                       #  107   0x81e70  2      OPC=je_label          
.L_81e6e:                           #        0x81e72  0      OPC=<label>           
  leaq 0x33fdcb(%rip), %rdi         #  108   0x81e72  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  109   0x81e79  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  110   0x81e80  5      OPC=callq_label       
  addq $0x80, %rsp                  #  111   0x81e85  7      OPC=addq_r64_imm32    
.L_81e88:                           #        0x81e8c  0      OPC=<label>           
  testq %rbp, %rbp                  #  112   0x81e8c  3      OPC=testq_r64_r64     
  je .L_82030                       #  113   0x81e8f  6      OPC=je_label_1        
  leaq -0x10(%rbp), %rax            #  114   0x81e95  4      OPC=leaq_r64_m16      
  movq -0x8(%rbp), %rcx             #  115   0x81e99  4      OPC=movq_r64_m64      
  movl $0xff, %esi                  #  116   0x81e9d  5      OPC=movl_r32_imm32    
  movq %rax, %r8                    #  117   0x81ea2  3      OPC=movq_r64_r64      
  shrq $0x3, %rax                   #  118   0x81ea5  4      OPC=shrq_r64_imm8     
  shrq $0xb, %r8                    #  119   0x81ea9  4      OPC=shrq_r64_imm8     
  xorl %eax, %r8d                   #  120   0x81ead  3      OPC=xorl_r32_r32      
  movl $0x2, %eax                   #  121   0x81eb0  5      OPC=movl_r32_imm32    
  cmpb $0x1, %r8b                   #  122   0x81eb5  4      OPC=cmpb_r8_imm8      
  cmovel %eax, %r8d                 #  123   0x81eb9  4      OPC=cmovel_r32_r32    
  movq %rcx, %rax                   #  124   0x81ebd  3      OPC=movq_r64_r64      
  andq $0xf8, %rax                  #  125   0x81ec0  4      OPC=andq_r64_imm8     
  movzbl %r8b, %edi                 #  126   0x81ec4  4      OPC=movzbl_r32_r8     
  leaq -0x10(%rax), %rdx            #  127   0x81ec8  4      OPC=leaq_r64_m16      
  subq $0x8, %rax                   #  128   0x81ecc  4      OPC=subq_r64_imm8     
  andl $0x2, %ecx                   #  129   0x81ed0  3      OPC=andl_r32_imm8     
  cmoveq %rax, %rdx                 #  130   0x81ed3  4      OPC=cmoveq_r64_r64    
  subq $0x1, %rdx                   #  131   0x81ed7  4      OPC=subq_r64_imm8     
  cmpq %rdx, %rbx                   #  132   0x81edb  3      OPC=cmpq_r64_r64      
  jae .L_81f07                      #  133   0x81ede  2      OPC=jae_label         
  nop                               #  134   0x81ee0  1      OPC=nop               
  nop                               #  135   0x81ee1  1      OPC=nop               
  nop                               #  136   0x81ee2  1      OPC=nop               
  nop                               #  137   0x81ee3  1      OPC=nop               
.L_81ee0:                           #        0x81ee4  0      OPC=<label>           
  movq %rdx, %rax                   #  138   0x81ee4  3      OPC=movq_r64_r64      
  subq %rbx, %rax                   #  139   0x81ee7  3      OPC=subq_r64_r64      
  cmpq $0xff, %rax                  #  140   0x81eea  6      OPC=cmpq_rax_imm32    
  cmovaq %rsi, %rax                 #  141   0x81ef0  4      OPC=cmovaq_r64_r64    
  leaq -0x1(%rax), %rcx             #  142   0x81ef4  4      OPC=leaq_r64_m16      
  cmpq %rdi, %rax                   #  143   0x81ef8  3      OPC=cmpq_r64_r64      
  cmoveq %rcx, %rax                 #  144   0x81efb  4      OPC=cmoveq_r64_r64    
  movb %al, (%rbp,%rdx,1)           #  145   0x81eff  4      OPC=movb_m8_r8        
  subq %rax, %rdx                   #  146   0x81f03  3      OPC=subq_r64_r64      
  cmpq %rdx, %rbx                   #  147   0x81f06  3      OPC=cmpq_r64_r64      
  jb .L_81ee0                       #  148   0x81f09  2      OPC=jb_label          
.L_81f07:                           #        0x81f0b  0      OPC=<label>           
  movb %r8b, (%rbp,%rbx,1)          #  149   0x81f0b  5      OPC=movb_m8_r8        
  movq %rbp, %rax                   #  150   0x81f10  3      OPC=movq_r64_r64      
.L_81f0f:                           #        0x81f13  0      OPC=<label>           
  addq $0x58, %rsp                  #  151   0x81f13  4      OPC=addq_r64_imm8     
  popq %rbx                         #  152   0x81f17  1      OPC=popq_r64_1        
  popq %rbp                         #  153   0x81f18  1      OPC=popq_r64_1        
  popq %r12                         #  154   0x81f19  2      OPC=popq_r64_1        
  popq %r13                         #  155   0x81f1b  2      OPC=popq_r64_1        
  popq %r14                         #  156   0x81f1d  2      OPC=popq_r64_1        
  popq %r15                         #  157   0x81f1f  2      OPC=popq_r64_1        
  retq                              #  158   0x81f21  1      OPC=retq              
  xchgw %ax, %ax                    #  159   0x81f22  2      OPC=xchgw_ax_r16      
.L_81f20:                           #        0x81f24  0      OPC=<label>           
  movq %r10, %rsi                   #  160   0x81f24  3      OPC=movq_r64_r64      
  movq %r14, %rdi                   #  161   0x81f27  3      OPC=movq_r64_r64      
  movq %r9, 0x18(%rsp)              #  162   0x81f2a  5      OPC=movq_m64_r64      
  movq %r10, 0x10(%rsp)             #  163   0x81f2f  5      OPC=movq_m64_r64      
  callq .mremap_chunk               #  164   0x81f34  5      OPC=callq_label       
  testq %rax, %rax                  #  165   0x81f39  3      OPC=testq_r64_r64     
  movq 0x10(%rsp), %r10             #  166   0x81f3c  5      OPC=movq_r64_m64      
  movq 0x18(%rsp), %r9              #  167   0x81f41  5      OPC=movq_r64_m64      
  je .L_82037                       #  168   0x81f46  6      OPC=je_label_1        
  leaq 0x10(%rax), %rbp             #  169   0x81f4c  4      OPC=leaq_r64_m16      
  jmpq .L_81e49                     #  170   0x81f50  5      OPC=jmpq_label_1      
  nop                               #  171   0x81f55  1      OPC=nop               
  nop                               #  172   0x81f56  1      OPC=nop               
  nop                               #  173   0x81f57  1      OPC=nop               
  nop                               #  174   0x81f58  1      OPC=nop               
  nop                               #  175   0x81f59  1      OPC=nop               
  nop                               #  176   0x81f5a  1      OPC=nop               
  nop                               #  177   0x81f5b  1      OPC=nop               
.L_81f58:                           #        0x81f5c  0      OPC=<label>           
  movq 0x33ef21(%rip), %rax         #  178   0x81f5c  7      OPC=movq_r64_m64      
  movl $0xc, (%rax)                 #  179   0x81f63  6      OPC=movl_m32_imm32    
  nop                               #  180   0x81f69  1      OPC=nop               
  addq $0x58, %rsp                  #  181   0x81f6a  4      OPC=addq_r64_imm8     
  xorl %eax, %eax                   #  182   0x81f6e  2      OPC=xorl_r32_r32      
  popq %rbx                         #  183   0x81f70  1      OPC=popq_r64_1        
  popq %rbp                         #  184   0x81f71  1      OPC=popq_r64_1        
  popq %r12                         #  185   0x81f72  2      OPC=popq_r64_1        
  popq %r13                         #  186   0x81f74  2      OPC=popq_r64_1        
  popq %r14                         #  187   0x81f76  2      OPC=popq_r64_1        
  popq %r15                         #  188   0x81f78  2      OPC=popq_r64_1        
  retq                              #  189   0x81f7a  1      OPC=retq              
  nop                               #  190   0x81f7b  1      OPC=nop               
  nop                               #  191   0x81f7c  1      OPC=nop               
  nop                               #  192   0x81f7d  1      OPC=nop               
  nop                               #  193   0x81f7e  1      OPC=nop               
  nop                               #  194   0x81f7f  1      OPC=nop               
  nop                               #  195   0x81f80  1      OPC=nop               
  nop                               #  196   0x81f81  1      OPC=nop               
  nop                               #  197   0x81f82  1      OPC=nop               
  nop                               #  198   0x81f83  1      OPC=nop               
.L_81f80:                           #        0x81f84  0      OPC=<label>           
  movq 0x28(%rsp), %rax             #  199   0x81f84  5      OPC=movq_r64_m64      
  xorl %ebp, %ebp                   #  200   0x81f89  2      OPC=xorl_r32_r32      
  notb (%rax)                       #  201   0x81f8b  2      OPC=notb_m8           
  jmpq .L_81e52                     #  202   0x81f8d  5      OPC=jmpq_label_1      
  xchgw %ax, %ax                    #  203   0x81f92  2      OPC=xchgw_ax_r16      
.L_81f90:                           #        0x81f94  0      OPC=<label>           
  xorl %esi, %esi                   #  204   0x81f94  2      OPC=xorl_r32_r32      
  callq .free_check                 #  205   0x81f96  5      OPC=callq_label       
  xorl %eax, %eax                   #  206   0x81f9b  2      OPC=xorl_r32_r32      
  jmpq .L_81f0f                     #  207   0x81f9d  5      OPC=jmpq_label_1      
.L_81f9e:                           #        0x81fa2  0      OPC=<label>           
  leaq 0x30(%rsp), %r13             #  208   0x81fa2  5      OPC=leaq_r64_m16      
  leaq 0x40(%rsp), %rsi             #  209   0x81fa7  5      OPC=leaq_r64_m16      
  xorl %ecx, %ecx                   #  210   0x81fac  2      OPC=xorl_r32_r32      
  movq %rbp, %rdi                   #  211   0x81fae  3      OPC=movq_r64_r64      
  movl $0x10, %edx                  #  212   0x81fb1  5      OPC=movl_r32_imm32    
  movb $0x0, 0x40(%rsp)             #  213   0x81fb6  5      OPC=movb_m8_imm8      
  callq ._itoa_word                 #  214   0x81fbb  5      OPC=callq_label       
  cmpq %r13, %rax                   #  215   0x81fc0  3      OPC=cmpq_r64_r64      
  movq %rax, %rbp                   #  216   0x81fc3  3      OPC=movq_r64_r64      
  jbe .L_81fe9                      #  217   0x81fc6  2      OPC=jbe_label         
  movq %rax, %rdx                   #  218   0x81fc8  3      OPC=movq_r64_r64      
  movq %rax, %rdi                   #  219   0x81fcb  3      OPC=movq_r64_r64      
  movl $0x30, %esi                  #  220   0x81fce  5      OPC=movl_r32_imm32    
  subq %r13, %rdx                   #  221   0x81fd3  3      OPC=subq_r64_r64      
  leaq -0x1(%rax), %r14             #  222   0x81fd6  4      OPC=leaq_r64_m16      
  subq %rdx, %rdi                   #  223   0x81fda  3      OPC=subq_r64_r64      
  callq .__GI_memset                #  224   0x81fdd  5      OPC=callq_label       
  leaq 0x2f(%rsp), %rax             #  225   0x81fe2  5      OPC=leaq_r64_m16      
  subq %r14, %rax                   #  226   0x81fe7  3      OPC=subq_r64_r64      
  addq %rax, %rbp                   #  227   0x81fea  3      OPC=addq_r64_r64      
.L_81fe9:                           #        0x81fed  0      OPC=<label>           
  movq 0x3447a8(%rip), %rax         #  228   0x81fed  7      OPC=movq_r64_m64      
  leaq 0x109664(%rip), %rdx         #  229   0x81ff4  7      OPC=leaq_r64_m16      
  movl %r12d, %edi                  #  230   0x81ffb  3      OPC=movl_r32_r32      
  leaq 0x1097b2(%rip), %rcx         #  231   0x81ffe  7      OPC=leaq_r64_m16      
  leaq 0x10cb00(%rip), %rsi         #  232   0x82005  7      OPC=leaq_r64_m16      
  movq %rbp, %r8                    #  233   0x8200c  3      OPC=movq_r64_r64      
  movq (%rax), %rax                 #  234   0x8200f  3      OPC=movq_r64_m64      
  testq %rax, %rax                  #  235   0x82012  3      OPC=testq_r64_r64     
  cmovneq %rax, %rdx                #  236   0x82015  4      OPC=cmovneq_r64_r64   
  andl $0x2, %edi                   #  237   0x82019  3      OPC=andl_r32_imm8     
  xorl %eax, %eax                   #  238   0x8201c  2      OPC=xorl_r32_r32      
  callq .__libc_message             #  239   0x8201e  5      OPC=callq_label       
  nop                               #  240   0x82023  1      OPC=nop               
.L_82020:                           #        0x82024  0      OPC=<label>           
  xorl %esi, %esi                   #  241   0x82024  2      OPC=xorl_r32_r32      
  movq %rbx, %rdi                   #  242   0x82026  3      OPC=movq_r64_r64      
  callq .malloc_check               #  243   0x82029  5      OPC=callq_label       
  jmpq .L_81f0f                     #  244   0x8202e  5      OPC=jmpq_label_1      
  nop                               #  245   0x82033  1      OPC=nop               
.L_82030:                           #        0x82034  0      OPC=<label>           
  xorl %eax, %eax                   #  246   0x82034  2      OPC=xorl_r32_r32      
  jmpq .L_81f0f                     #  247   0x82036  5      OPC=jmpq_label_1      
.L_82037:                           #        0x8203b  0      OPC=<label>           
  movq 0x8(%rsp), %rax              #  248   0x8203b  5      OPC=movq_r64_m64      
  subq $0x8, %rax                   #  249   0x82040  4      OPC=subq_r64_imm8     
  cmpq %rax, %r10                   #  250   0x82044  3      OPC=cmpq_r64_r64      
  jbe .L_81e52                      #  251   0x82047  6      OPC=jbe_label_1       
  movq %r9, 0x10(%rsp)              #  252   0x8204d  5      OPC=movq_m64_r64      
  callq .top_check                  #  253   0x82052  5      OPC=callq_label       
  testl %eax, %eax                  #  254   0x82057  2      OPC=testl_r32_r32     
  js .L_81f80                       #  255   0x82059  6      OPC=js_label_1        
  movq 0x10(%rsp), %r9              #  256   0x8205f  5      OPC=movq_r64_m64      
  leaq 0x33fbd9(%rip), %rdi         #  257   0x82064  7      OPC=leaq_r64_m16      
  movq %r9, %rsi                    #  258   0x8206b  3      OPC=movq_r64_r64      
  callq ._int_malloc                #  259   0x8206e  5      OPC=callq_label       
  testq %rax, %rax                  #  260   0x82073  3      OPC=testq_r64_r64     
  movq %rax, %r12                   #  261   0x82076  3      OPC=movq_r64_r64      
  je .L_81f80                       #  262   0x82079  6      OPC=je_label_1        
  movq 0x8(%rsp), %rdx              #  263   0x8207f  5      OPC=movq_r64_m64      
  movq %rbp, %rsi                   #  264   0x82084  3      OPC=movq_r64_r64      
  movq %rax, %rdi                   #  265   0x82087  3      OPC=movq_r64_r64      
  movq %r12, %rbp                   #  266   0x8208a  3      OPC=movq_r64_r64      
  subq $0x10, %rdx                  #  267   0x8208d  4      OPC=subq_r64_imm8     
  callq .__GI_memcpy                #  268   0x82091  5      OPC=callq_label       
  movq %r14, %rdi                   #  269   0x82096  3      OPC=movq_r64_r64      
  callq .munmap_chunk               #  270   0x82099  5      OPC=callq_label       
  jmpq .L_81e52                     #  271   0x8209e  5      OPC=jmpq_label_1      
.L_8209f:                           #        0x820a3  0      OPC=<label>           
  movl 0x33f12a(%rip), %r12d        #  272   0x820a3  7      OPC=movl_r32_m32      
  orl $0x4, 0x33fb97(%rip)          #  273   0x820aa  7      OPC=orl_m32_imm8      
  movl %r12d, %eax                  #  274   0x820b1  3      OPC=movl_r32_r32      
  andl $0x5, %eax                   #  275   0x820b4  3      OPC=andl_r32_imm8     
  cmpl $0x5, %eax                   #  276   0x820b7  3      OPC=cmpl_r32_imm8     
  je .L_820d8                       #  277   0x820ba  2      OPC=je_label          
  testb $0x1, %r12b                 #  278   0x820bc  4      OPC=testb_r8_imm8     
  jne .L_81f9e                      #  279   0x820c0  6      OPC=jne_label_1       
  andl $0x2, %r12d                  #  280   0x820c6  4      OPC=andl_r32_imm8     
  je .L_82020                       #  281   0x820ca  6      OPC=je_label_1        
  callq .abort                      #  282   0x820d0  5      OPC=callq_label       
  nop                               #  283   0x820d5  1      OPC=nop               
  nop                               #  284   0x820d6  1      OPC=nop               
  nop                               #  285   0x820d7  1      OPC=nop               
  nop                               #  286   0x820d8  1      OPC=nop               
  nop                               #  287   0x820d9  1      OPC=nop               
  nop                               #  288   0x820da  1      OPC=nop               
  nop                               #  289   0x820db  1      OPC=nop               
.L_820d8:                           #        0x820dc  0      OPC=<label>           
  movl %r12d, %edi                  #  290   0x820dc  3      OPC=movl_r32_r32      
  leaq 0x1096d1(%rip), %rdx         #  291   0x820df  7      OPC=leaq_r64_m16      
  leaq 0x10b266(%rip), %rsi         #  292   0x820e6  7      OPC=leaq_r64_m16      
  andl $0x2, %edi                   #  293   0x820ed  3      OPC=andl_r32_imm8     
  xorl %eax, %eax                   #  294   0x820f0  2      OPC=xorl_r32_r32      
  callq .__libc_message             #  295   0x820f2  5      OPC=callq_label       
  jmpq .L_82020                     #  296   0x820f7  5      OPC=jmpq_label_1      
  nop                               #  297   0x820fc  1      OPC=nop               
  nop                               #  298   0x820fd  1      OPC=nop               
  nop                               #  299   0x820fe  1      OPC=nop               
  nop                               #  300   0x820ff  1      OPC=nop               
  nop                               #  301   0x82100  1      OPC=nop               
  nop                               #  302   0x82101  1      OPC=nop               
  nop                               #  303   0x82102  1      OPC=nop               
  nop                               #  304   0x82103  1      OPC=nop               
                                                                                   
.size realloc_check, .-realloc_check

