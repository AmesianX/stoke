  .text
  .globl _IO_wstr_seekoff
  .type _IO_wstr_seekoff, @function

#! file-offset 0x721b0
#! rip-offset  0x721b0
#! capacity    512 bytes

# Text                           #  Line  RIP      Bytes  Opcode              
._IO_wstr_seekoff:               #        0x721b0  0      OPC=<label>         
  testl %ecx, %ecx               #  1     0x721b0  2      OPC=testl_r32_r32   
  pushq %r14                     #  2     0x721b2  2      OPC=pushq_r64_1     
  pushq %r13                     #  3     0x721b4  2      OPC=pushq_r64_1     
  movq %rsi, %r13                #  4     0x721b6  3      OPC=movq_r64_r64    
  pushq %r12                     #  5     0x721b9  2      OPC=pushq_r64_1     
  movl %edx, %r12d               #  6     0x721bb  3      OPC=movl_r32_r32    
  pushq %rbp                     #  7     0x721be  1      OPC=pushq_r64_1     
  movl %ecx, %ebp                #  8     0x721bf  2      OPC=movl_r32_r32    
  pushq %rbx                     #  9     0x721c1  1      OPC=pushq_r64_1     
  movq %rdi, %rbx                #  10    0x721c2  3      OPC=movq_r64_r64    
  jne .L_72240                   #  11    0x721c5  2      OPC=jne_label       
  movl (%rdi), %eax              #  12    0x721c7  2      OPC=movl_r32_m32    
  testb $0x4, %ah                #  13    0x721c9  3      OPC=testb_rh_imm8   
  je .L_722d0                    #  14    0x721cc  6      OPC=je_label_1      
  testb $0x8, %ah                #  15    0x721d2  3      OPC=testb_rh_imm8   
  je .L_72310                    #  16    0x721d5  6      OPC=je_label_1      
  callq ._IO_wstr_count          #  17    0x721db  5      OPC=callq_label     
  movq %rax, %r14                #  18    0x721e0  3      OPC=movq_r64_r64    
.L_721e3:                        #        0x721e3  0      OPC=<label>         
  cmpl $0x1, %r12d               #  19    0x721e3  4      OPC=cmpl_r32_imm8   
  je .L_72370                    #  20    0x721e7  6      OPC=je_label_1      
  leaq (%r13,%r14,1), %rax       #  21    0x721ed  5      OPC=leaq_r64_m16    
  cmpl $0x2, %r12d               #  22    0x721f2  4      OPC=cmpl_r32_imm8   
  cmoveq %rax, %r13              #  23    0x721f6  4      OPC=cmoveq_r64_r64  
.L_721fa:                        #        0x721fa  0      OPC=<label>         
  testq %r13, %r13               #  24    0x721fa  3      OPC=testq_r64_r64   
  js .L_7233d                    #  25    0x721fd  6      OPC=js_label_1      
  cmpq %r14, %r13                #  26    0x72203  3      OPC=cmpq_r64_r64    
  jle .L_72219                   #  27    0x72206  2      OPC=jle_label       
  movq 0x40(%rbx), %rax          #  28    0x72208  4      OPC=movq_r64_m64    
  subq 0x38(%rbx), %rax          #  29    0x7220c  4      OPC=subq_r64_m64    
  cmpq %rax, %r13                #  30    0x72210  3      OPC=cmpq_r64_r64    
  jg .L_72328                    #  31    0x72213  6      OPC=jg_label_1      
.L_72219:                        #        0x72219  0      OPC=<label>         
  movq 0xa0(%rbx), %rax          #  32    0x72219  7      OPC=movq_r64_m64    
  movq 0x18(%rax), %rdx          #  33    0x72220  4      OPC=movq_r64_m64    
  leaq (%rdx,%r13,4), %rdx       #  34    0x72224  4      OPC=leaq_r64_m16    
  movq %rdx, 0x20(%rax)          #  35    0x72228  4      OPC=movq_m64_r64    
  movq %r13, %rax                #  36    0x7222c  3      OPC=movq_r64_r64    
.L_7222f:                        #        0x7222f  0      OPC=<label>         
  popq %rbx                      #  37    0x7222f  1      OPC=popq_r64_1      
  popq %rbp                      #  38    0x72230  1      OPC=popq_r64_1      
  popq %r12                      #  39    0x72231  2      OPC=popq_r64_1      
  popq %r13                      #  40    0x72233  2      OPC=popq_r64_1      
  popq %r14                      #  41    0x72235  2      OPC=popq_r64_1      
  retq                           #  42    0x72237  1      OPC=retq            
  nop                            #  43    0x72238  1      OPC=nop             
  nop                            #  44    0x72239  1      OPC=nop             
  nop                            #  45    0x7223a  1      OPC=nop             
  nop                            #  46    0x7223b  1      OPC=nop             
  nop                            #  47    0x7223c  1      OPC=nop             
  nop                            #  48    0x7223d  1      OPC=nop             
  nop                            #  49    0x7223e  1      OPC=nop             
  nop                            #  50    0x7223f  1      OPC=nop             
.L_72240:                        #        0x72240  0      OPC=<label>         
  callq ._IO_wstr_count          #  51    0x72240  5      OPC=callq_label     
  testb $0x1, %bpl               #  52    0x72245  4      OPC=testb_r8_imm8   
  movq %rax, %r14                #  53    0x72249  3      OPC=movq_r64_r64    
  je .L_722b0                    #  54    0x7224c  2      OPC=je_label        
.L_7224e:                        #        0x7224e  0      OPC=<label>         
  cmpl $0x1, %r12d               #  55    0x7224e  4      OPC=cmpl_r32_imm8   
  je .L_72350                    #  56    0x72252  6      OPC=je_label_1      
  leaq (%r13,%r14,1), %rax       #  57    0x72258  5      OPC=leaq_r64_m16    
  cmpl $0x2, %r12d               #  58    0x7225d  4      OPC=cmpl_r32_imm8   
  cmoveq %rax, %r13              #  59    0x72261  4      OPC=cmoveq_r64_r64  
.L_72265:                        #        0x72265  0      OPC=<label>         
  testq %r13, %r13               #  60    0x72265  3      OPC=testq_r64_r64   
  js .L_7233d                    #  61    0x72268  6      OPC=js_label_1      
  cmpq %r14, %r13                #  62    0x7226e  3      OPC=cmpq_r64_r64    
  jle .L_72284                   #  63    0x72271  2      OPC=jle_label       
  movq 0x40(%rbx), %rax          #  64    0x72273  4      OPC=movq_r64_m64    
  subq 0x38(%rbx), %rax          #  65    0x72277  4      OPC=subq_r64_m64    
  cmpq %rax, %r13                #  66    0x7227b  3      OPC=cmpq_r64_r64    
  jg .L_72390                    #  67    0x7227e  6      OPC=jg_label_1      
.L_72284:                        #        0x72284  0      OPC=<label>         
  movq 0xa0(%rbx), %rdx          #  68    0x72284  7      OPC=movq_r64_m64    
  andl $0x2, %ebp                #  69    0x7228b  3      OPC=andl_r32_imm8   
  movq %r13, %r8                 #  70    0x7228e  3      OPC=movq_r64_r64    
  movq 0x10(%rdx), %rax          #  71    0x72291  4      OPC=movq_r64_m64    
  leaq (%rax,%r13,4), %rcx       #  72    0x72295  4      OPC=leaq_r64_m16    
  leaq (%rax,%r14,4), %rax       #  73    0x72299  4      OPC=leaq_r64_m16    
  movq %rcx, (%rdx)              #  74    0x7229d  3      OPC=movq_m64_r64    
  movq %rax, 0x8(%rdx)           #  75    0x722a0  4      OPC=movq_m64_r64    
  jmpq .L_722ba                  #  76    0x722a4  2      OPC=jmpq_label      
  nop                            #  77    0x722a6  1      OPC=nop             
  nop                            #  78    0x722a7  1      OPC=nop             
  nop                            #  79    0x722a8  1      OPC=nop             
  nop                            #  80    0x722a9  1      OPC=nop             
  nop                            #  81    0x722aa  1      OPC=nop             
  nop                            #  82    0x722ab  1      OPC=nop             
  nop                            #  83    0x722ac  1      OPC=nop             
  nop                            #  84    0x722ad  1      OPC=nop             
  nop                            #  85    0x722ae  1      OPC=nop             
  nop                            #  86    0x722af  1      OPC=nop             
.L_722b0:                        #        0x722b0  0      OPC=<label>         
  andl $0x2, %ebp                #  87    0x722b0  3      OPC=andl_r32_imm8   
  movq $0xffffffff, %r8          #  88    0x722b3  7      OPC=movq_r64_imm32  
.L_722ba:                        #        0x722ba  0      OPC=<label>         
  testl %ebp, %ebp               #  89    0x722ba  2      OPC=testl_r32_r32   
  movq %r8, %rax                 #  90    0x722bc  3      OPC=movq_r64_r64    
  jne .L_721e3                   #  91    0x722bf  6      OPC=jne_label_1     
  popq %rbx                      #  92    0x722c5  1      OPC=popq_r64_1      
  popq %rbp                      #  93    0x722c6  1      OPC=popq_r64_1      
  popq %r12                      #  94    0x722c7  2      OPC=popq_r64_1      
  popq %r13                      #  95    0x722c9  2      OPC=popq_r64_1      
  popq %r14                      #  96    0x722cb  2      OPC=popq_r64_1      
  retq                           #  97    0x722cd  1      OPC=retq            
  xchgw %ax, %ax                 #  98    0x722ce  2      OPC=xchgw_ax_r16    
.L_722d0:                        #        0x722d0  0      OPC=<label>         
  testb $0x8, %al                #  99    0x722d0  2      OPC=testb_al_imm8   
  je .L_722f0                    #  100   0x722d2  2      OPC=je_label        
  movq 0xa0(%rbx), %rdx          #  101   0x722d4  7      OPC=movq_r64_m64    
  popq %rbx                      #  102   0x722db  1      OPC=popq_r64_1      
  popq %rbp                      #  103   0x722dc  1      OPC=popq_r64_1      
  movq (%rdx), %rax              #  104   0x722dd  3      OPC=movq_r64_m64    
  subq 0x10(%rdx), %rax          #  105   0x722e0  4      OPC=subq_r64_m64    
  popq %r12                      #  106   0x722e4  2      OPC=popq_r64_1      
  popq %r13                      #  107   0x722e6  2      OPC=popq_r64_1      
  popq %r14                      #  108   0x722e8  2      OPC=popq_r64_1      
  sarq $0x2, %rax                #  109   0x722ea  4      OPC=sarq_r64_imm8   
  retq                           #  110   0x722ee  1      OPC=retq            
  nop                            #  111   0x722ef  1      OPC=nop             
.L_722f0:                        #        0x722f0  0      OPC=<label>         
  movq 0xa0(%rbx), %rdx          #  112   0x722f0  7      OPC=movq_r64_m64    
  popq %rbx                      #  113   0x722f7  1      OPC=popq_r64_1      
  popq %rbp                      #  114   0x722f8  1      OPC=popq_r64_1      
  movq 0x20(%rdx), %rax          #  115   0x722f9  4      OPC=movq_r64_m64    
  subq 0x18(%rdx), %rax          #  116   0x722fd  4      OPC=subq_r64_m64    
  popq %r12                      #  117   0x72301  2      OPC=popq_r64_1      
  popq %r13                      #  118   0x72303  2      OPC=popq_r64_1      
  popq %r14                      #  119   0x72305  2      OPC=popq_r64_1      
  sarq $0x2, %rax                #  120   0x72307  4      OPC=sarq_r64_imm8   
  retq                           #  121   0x7230b  1      OPC=retq            
  nop                            #  122   0x7230c  1      OPC=nop             
  nop                            #  123   0x7230d  1      OPC=nop             
  nop                            #  124   0x7230e  1      OPC=nop             
  nop                            #  125   0x7230f  1      OPC=nop             
.L_72310:                        #        0x72310  0      OPC=<label>         
  callq ._IO_wstr_count          #  126   0x72310  5      OPC=callq_label     
  movl $0x1, %ebp                #  127   0x72315  5      OPC=movl_r32_imm32  
  movq %rax, %r14                #  128   0x7231a  3      OPC=movq_r64_r64    
  jmpq .L_7224e                  #  129   0x7231d  5      OPC=jmpq_label_1    
  nop                            #  130   0x72322  1      OPC=nop             
  nop                            #  131   0x72323  1      OPC=nop             
  nop                            #  132   0x72324  1      OPC=nop             
  nop                            #  133   0x72325  1      OPC=nop             
  nop                            #  134   0x72326  1      OPC=nop             
  nop                            #  135   0x72327  1      OPC=nop             
.L_72328:                        #        0x72328  0      OPC=<label>         
  xorl %edx, %edx                #  136   0x72328  2      OPC=xorl_r32_r32    
  movq %r13, %rsi                #  137   0x7232a  3      OPC=movq_r64_r64    
  movq %rbx, %rdi                #  138   0x7232d  3      OPC=movq_r64_r64    
  callq .enlarge_userbuf_part_0  #  139   0x72330  5      OPC=callq_label     
  testl %eax, %eax               #  140   0x72335  2      OPC=testl_r32_r32   
  je .L_72219                    #  141   0x72337  6      OPC=je_label_1      
.L_7233d:                        #        0x7233d  0      OPC=<label>         
  movq $0xffffffff, %rax         #  142   0x7233d  7      OPC=movq_r64_imm32  
  jmpq .L_7222f                  #  143   0x72344  5      OPC=jmpq_label_1    
  nop                            #  144   0x72349  1      OPC=nop             
  nop                            #  145   0x7234a  1      OPC=nop             
  nop                            #  146   0x7234b  1      OPC=nop             
  nop                            #  147   0x7234c  1      OPC=nop             
  nop                            #  148   0x7234d  1      OPC=nop             
  nop                            #  149   0x7234e  1      OPC=nop             
  nop                            #  150   0x7234f  1      OPC=nop             
.L_72350:                        #        0x72350  0      OPC=<label>         
  movq 0xa0(%rbx), %rdx          #  151   0x72350  7      OPC=movq_r64_m64    
  movq (%rdx), %rax              #  152   0x72357  3      OPC=movq_r64_m64    
  subq 0x10(%rdx), %rax          #  153   0x7235a  4      OPC=subq_r64_m64    
  sarq $0x2, %rax                #  154   0x7235e  4      OPC=sarq_r64_imm8   
  addq %rax, %r13                #  155   0x72362  3      OPC=addq_r64_r64    
  jmpq .L_72265                  #  156   0x72365  5      OPC=jmpq_label_1    
  nop                            #  157   0x7236a  1      OPC=nop             
  nop                            #  158   0x7236b  1      OPC=nop             
  nop                            #  159   0x7236c  1      OPC=nop             
  nop                            #  160   0x7236d  1      OPC=nop             
  nop                            #  161   0x7236e  1      OPC=nop             
  nop                            #  162   0x7236f  1      OPC=nop             
.L_72370:                        #        0x72370  0      OPC=<label>         
  movq 0xa0(%rbx), %rdx          #  163   0x72370  7      OPC=movq_r64_m64    
  movq 0x20(%rdx), %rax          #  164   0x72377  4      OPC=movq_r64_m64    
  subq 0x18(%rdx), %rax          #  165   0x7237b  4      OPC=subq_r64_m64    
  sarq $0x2, %rax                #  166   0x7237f  4      OPC=sarq_r64_imm8   
  addq %rax, %r13                #  167   0x72383  3      OPC=addq_r64_r64    
  jmpq .L_721fa                  #  168   0x72386  5      OPC=jmpq_label_1    
  nop                            #  169   0x7238b  1      OPC=nop             
  nop                            #  170   0x7238c  1      OPC=nop             
  nop                            #  171   0x7238d  1      OPC=nop             
  nop                            #  172   0x7238e  1      OPC=nop             
  nop                            #  173   0x7238f  1      OPC=nop             
.L_72390:                        #        0x72390  0      OPC=<label>         
  movl $0x1, %edx                #  174   0x72390  5      OPC=movl_r32_imm32  
  movq %r13, %rsi                #  175   0x72395  3      OPC=movq_r64_r64    
  movq %rbx, %rdi                #  176   0x72398  3      OPC=movq_r64_r64    
  callq .enlarge_userbuf_part_0  #  177   0x7239b  5      OPC=callq_label     
  testl %eax, %eax               #  178   0x723a0  2      OPC=testl_r32_r32   
  je .L_72284                    #  179   0x723a2  6      OPC=je_label_1      
  jmpq .L_7233d                  #  180   0x723a8  2      OPC=jmpq_label      
  nop                            #  181   0x723aa  1      OPC=nop             
  nop                            #  182   0x723ab  1      OPC=nop             
  nop                            #  183   0x723ac  1      OPC=nop             
  nop                            #  184   0x723ad  1      OPC=nop             
  nop                            #  185   0x723ae  1      OPC=nop             
  nop                            #  186   0x723af  1      OPC=nop             
                                                                              
.size _IO_wstr_seekoff, .-_IO_wstr_seekoff

