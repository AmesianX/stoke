  .text
  .globl sgetspent
  .type sgetspent, @function

#! file-offset 0x109c90
#! rip-offset  0x109c90
#! capacity    416 bytes

# Text                              #  Line  RIP       Bytes  Opcode                
.sgetspent:                         #        0x109c90  0      OPC=<label>           
  pushq %r13                        #  1     0x109c90  2      OPC=pushq_r64_1       
  pushq %r12                        #  2     0x109c92  2      OPC=pushq_r64_1       
  movl $0x1, %esi                   #  3     0x109c94  5      OPC=movl_r32_imm32    
  pushq %rbp                        #  4     0x109c99  1      OPC=pushq_r64_1       
  pushq %rbx                        #  5     0x109c9a  1      OPC=pushq_r64_1       
  movq %rdi, %rbp                   #  6     0x109c9b  3      OPC=movq_r64_r64      
  xorl %eax, %eax                   #  7     0x109c9e  2      OPC=xorl_r32_r32      
  subq $0x18, %rsp                  #  8     0x109ca0  4      OPC=subq_r64_imm8     
  cmpl $0x0, 0x2bcf55(%rip)         #  9     0x109ca4  7      OPC=cmpl_m32_imm8     
  je .L_109cb9                      #  10    0x109cab  2      OPC=je_label          
  lock                              #  11    0x109cad  1      OPC=lock              
  cmpxchgl %esi, 0x2bad23(%rip)     #  12    0x109cae  7      OPC=cmpxchgl_m32_r32  
  nop                               #  13    0x109cb5  1      OPC=nop               
  jne .L_109cc2                     #  14    0x109cb6  2      OPC=jne_label         
  jmpq .L_109cdc                    #  15    0x109cb8  2      OPC=jmpq_label        
.L_109cb9:                          #        0x109cba  0      OPC=<label>           
  cmpxchgl %esi, 0x2bad18(%rip)     #  16    0x109cba  7      OPC=cmpxchgl_m32_r32  
  je .L_109cdc                      #  17    0x109cc1  2      OPC=je_label          
.L_109cc2:                          #        0x109cc3  0      OPC=<label>           
  leaq 0x2bad0f(%rip), %rdi         #  18    0x109cc3  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  19    0x109cca  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  20    0x109cd1  5      OPC=callq_label       
  addq $0x80, %rsp                  #  21    0x109cd6  7      OPC=addq_r64_imm32    
.L_109cdc:                          #        0x109cdd  0      OPC=<label>           
  movq 0x2baced(%rip), %rdx         #  22    0x109cdd  7      OPC=movq_r64_m64      
  movq 0x2bacde(%rip), %rbx         #  23    0x109ce4  7      OPC=movq_r64_m64      
  testq %rdx, %rdx                  #  24    0x109ceb  3      OPC=testq_r64_r64     
  je .L_109df0                      #  25    0x109cee  6      OPC=je_label_1        
.L_109cf3:                          #        0x109cf4  0      OPC=<label>           
  leaq 0x8(%rsp), %r12              #  26    0x109cf4  5      OPC=leaq_r64_m16      
  jmpq .L_109d0a                    #  27    0x109cf9  2      OPC=jmpq_label        
  nop                               #  28    0x109cfb  1      OPC=nop               
  nop                               #  29    0x109cfc  1      OPC=nop               
  nop                               #  30    0x109cfd  1      OPC=nop               
  nop                               #  31    0x109cfe  1      OPC=nop               
  nop                               #  32    0x109cff  1      OPC=nop               
  nop                               #  33    0x109d00  1      OPC=nop               
.L_109d00:                          #        0x109d01  0      OPC=<label>           
  movq %rax, 0x2bacc9(%rip)         #  34    0x109d01  7      OPC=movq_m64_r64      
  movq %rax, %rdx                   #  35    0x109d08  3      OPC=movq_r64_r64      
.L_109d0a:                          #        0x109d0b  0      OPC=<label>           
  leaq 0x2bac6f(%rip), %rsi         #  36    0x109d0b  7      OPC=leaq_r64_m16      
  movq %r12, %r8                    #  37    0x109d12  3      OPC=movq_r64_r64      
  movq %rbx, %rcx                   #  38    0x109d15  3      OPC=movq_r64_r64      
  movq %rbp, %rdi                   #  39    0x109d18  3      OPC=movq_r64_r64      
  callq .sgetspent_r                #  40    0x109d1b  5      OPC=callq_label       
  cmpl $0x22, %eax                  #  41    0x109d20  3      OPC=cmpl_r32_imm8     
  jne .L_109dd0                     #  42    0x109d23  6      OPC=jne_label_1       
  movq 0x2bac99(%rip), %rax         #  43    0x109d29  7      OPC=movq_r64_m64      
  movq 0x2bac9a(%rip), %r13         #  44    0x109d30  7      OPC=movq_r64_m64      
  leaq 0x400(%rax), %rbx            #  45    0x109d37  7      OPC=leaq_r64_m16      
  movq %r13, %rdi                   #  46    0x109d3e  3      OPC=movq_r64_r64      
  movq %rbx, %rsi                   #  47    0x109d41  3      OPC=movq_r64_r64      
  movq %rbx, 0x2bac7e(%rip)         #  48    0x109d44  7      OPC=movq_m64_r64      
  callq .__tls_get_addr_plt         #  49    0x109d4b  5      OPC=callq_label       
  testq %rax, %rax                  #  50    0x109d50  3      OPC=testq_r64_r64     
  jne .L_109d00                     #  51    0x109d53  2      OPC=jne_label         
  movq 0x2b7125(%rip), %rbp         #  52    0x109d55  7      OPC=movq_r64_m64      
  movq %r13, %rdi                   #  53    0x109d5c  3      OPC=movq_r64_r64      
  movl (%rbp), %ebx                 #  54    0x109d5f  3      OPC=movl_r32_m32      
  nop                               #  55    0x109d62  1      OPC=nop               
  callq .L_1f8c0                    #  56    0x109d63  5      OPC=callq_label       
  movq $0x0, 0x2bac5e(%rip)         #  57    0x109d68  11     OPC=movq_m64_imm32    
  movl %ebx, (%rbp)                 #  58    0x109d73  3      OPC=movl_m32_r32      
  nop                               #  59    0x109d76  1      OPC=nop               
  movl %ebx, %edx                   #  60    0x109d77  2      OPC=movl_r32_r32      
.L_109d78:                          #        0x109d79  0      OPC=<label>           
  movq $0x0, 0x8(%rsp)              #  61    0x109d79  9      OPC=movq_m64_imm32    
.L_109d81:                          #        0x109d82  0      OPC=<label>           
  cmpl $0x0, 0x2bce78(%rip)         #  62    0x109d82  7      OPC=cmpl_m32_imm8     
  je .L_109d95                      #  63    0x109d89  2      OPC=je_label          
  lock                              #  64    0x109d8b  1      OPC=lock              
  decl 0x2bac47(%rip)               #  65    0x109d8c  6      OPC=decl_m32          
  nop                               #  66    0x109d92  1      OPC=nop               
  jne .L_109d9d                     #  67    0x109d93  2      OPC=jne_label         
  jmpq .L_109db7                    #  68    0x109d95  2      OPC=jmpq_label        
.L_109d95:                          #        0x109d97  0      OPC=<label>           
  decl 0x2bac3d(%rip)               #  69    0x109d97  6      OPC=decl_m32          
  je .L_109db7                      #  70    0x109d9d  2      OPC=je_label          
.L_109d9d:                          #        0x109d9f  0      OPC=<label>           
  leaq 0x2bac34(%rip), %rdi         #  71    0x109d9f  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  72    0x109da6  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  73    0x109dad  5      OPC=callq_label       
  addq $0x80, %rsp                  #  74    0x109db2  7      OPC=addq_r64_imm32    
.L_109db7:                          #        0x109db9  0      OPC=<label>           
  movl %edx, (%rbp)                 #  75    0x109db9  3      OPC=movl_m32_r32      
  nop                               #  76    0x109dbc  1      OPC=nop               
  movq 0x8(%rsp), %rax              #  77    0x109dbd  5      OPC=movq_r64_m64      
  addq $0x18, %rsp                  #  78    0x109dc2  4      OPC=addq_r64_imm8     
  popq %rbx                         #  79    0x109dc6  1      OPC=popq_r64_1        
  popq %rbp                         #  80    0x109dc7  1      OPC=popq_r64_1        
  popq %r12                         #  81    0x109dc8  2      OPC=popq_r64_1        
  popq %r13                         #  82    0x109dca  2      OPC=popq_r64_1        
  retq                              #  83    0x109dcc  1      OPC=retq              
  nop                               #  84    0x109dcd  1      OPC=nop               
  nop                               #  85    0x109dce  1      OPC=nop               
  nop                               #  86    0x109dcf  1      OPC=nop               
  nop                               #  87    0x109dd0  1      OPC=nop               
  nop                               #  88    0x109dd1  1      OPC=nop               
.L_109dd0:                          #        0x109dd2  0      OPC=<label>           
  cmpq $0x0, 0x2babf8(%rip)         #  89    0x109dd2  8      OPC=cmpq_m64_imm8     
  movq 0x2b70a1(%rip), %rbp         #  90    0x109dda  7      OPC=movq_r64_m64      
  movl (%rbp), %edx                 #  91    0x109de1  3      OPC=movl_r32_m32      
  nop                               #  92    0x109de4  1      OPC=nop               
  jne .L_109d81                     #  93    0x109de5  2      OPC=jne_label         
  jmpq .L_109d78                    #  94    0x109de7  2      OPC=jmpq_label        
  nop                               #  95    0x109de9  1      OPC=nop               
  nop                               #  96    0x109dea  1      OPC=nop               
  nop                               #  97    0x109deb  1      OPC=nop               
  nop                               #  98    0x109dec  1      OPC=nop               
  nop                               #  99    0x109ded  1      OPC=nop               
  nop                               #  100   0x109dee  1      OPC=nop               
  nop                               #  101   0x109def  1      OPC=nop               
  nop                               #  102   0x109df0  1      OPC=nop               
  nop                               #  103   0x109df1  1      OPC=nop               
.L_109df0:                          #        0x109df2  0      OPC=<label>           
  movl $0x400, %edi                 #  104   0x109df2  5      OPC=movl_r32_imm32    
  movq $0x400, 0x2babc8(%rip)       #  105   0x109df7  11     OPC=movq_m64_imm32    
  callq .memalign_plt               #  106   0x109e02  5      OPC=callq_label       
  testq %rax, %rax                  #  107   0x109e07  3      OPC=testq_r64_r64     
  movq %rax, 0x2babc1(%rip)         #  108   0x109e0a  7      OPC=movq_m64_r64      
  jne .L_109e21                     #  109   0x109e11  2      OPC=jne_label         
  movq 0x2b7068(%rip), %rbp         #  110   0x109e13  7      OPC=movq_r64_m64      
  movl (%rbp), %edx                 #  111   0x109e1a  3      OPC=movl_r32_m32      
  nop                               #  112   0x109e1d  1      OPC=nop               
  jmpq .L_109d78                    #  113   0x109e1e  5      OPC=jmpq_label_1      
.L_109e21:                          #        0x109e23  0      OPC=<label>           
  movq %rax, %rdx                   #  114   0x109e23  3      OPC=movq_r64_r64      
  movl $0x400, %ebx                 #  115   0x109e26  5      OPC=movl_r32_imm32    
  jmpq .L_109cf3                    #  116   0x109e2b  5      OPC=jmpq_label_1      
  xchgw %ax, %ax                    #  117   0x109e30  2      OPC=xchgw_ax_r16      
                                                                                    
.size sgetspent, .-sgetspent

