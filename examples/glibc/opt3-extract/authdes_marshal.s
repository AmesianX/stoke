  .text
  .globl authdes_marshal
  .type authdes_marshal, @function

#! file-offset 0x131210
#! rip-offset  0x131210
#! capacity    528 bytes

# Text                                 #  Line  RIP       Bytes  Opcode              
.authdes_marshal:                      #        0x131210  0      OPC=<label>         
  pushq %r12                           #  1     0x131210  2      OPC=pushq_r64_1     
  pushq %rbp                           #  2     0x131212  1      OPC=pushq_r64_1     
  movq %rdi, %r12                      #  3     0x131213  3      OPC=movq_r64_r64    
  pushq %rbx                           #  4     0x131216  1      OPC=pushq_r64_1     
  movq %rsi, %rbp                      #  5     0x131217  3      OPC=movq_r64_r64    
  xorl %esi, %esi                      #  6     0x13121a  2      OPC=xorl_r32_r32    
  subq $0x40, %rsp                     #  7     0x13121c  4      OPC=subq_r64_imm8   
  movq 0x40(%rdi), %rbx                #  8     0x131220  4      OPC=movq_r64_m64    
  leaq 0x30(%rsp), %rdi                #  9     0x131224  5      OPC=leaq_r64_m16    
  callq .malloc_plt                    #  10    0x131229  5      OPC=callq_label     
  movl 0x38(%rbx), %eax                #  11    0x13122e  3      OPC=movl_r32_m32    
  addl 0x38(%rsp), %eax                #  12    0x131231  4      OPC=addl_r32_m32    
  movl 0x34(%rbx), %edx                #  13    0x131235  3      OPC=movl_r32_m32    
  addl 0x30(%rsp), %edx                #  14    0x131238  4      OPC=addl_r32_m32    
  cmpl $0xf423f, %eax                  #  15    0x13123c  5      OPC=cmpl_eax_imm32  
  movl %edx, 0x74(%rbx)                #  16    0x131241  3      OPC=movl_m32_r32    
  ja .L_131380                         #  17    0x131244  6      OPC=ja_label_1      
  movl %eax, 0x78(%rbx)                #  18    0x13124a  3      OPC=movl_m32_r32    
.L_13124d:                             #        0x13124d  0      OPC=<label>         
  bswap %edx                           #  19    0x13124d  2      OPC=bswap_r32       
  bswap %eax                           #  20    0x13124f  2      OPC=bswap_r32       
  movl %edx, 0x20(%rsp)                #  21    0x131251  4      OPC=movl_m32_r32    
  movl 0x40(%rbx), %edx                #  22    0x131255  3      OPC=movl_r32_m32    
  movl %eax, 0x24(%rsp)                #  23    0x131258  4      OPC=movl_m32_r32    
  testl %edx, %edx                     #  24    0x13125c  2      OPC=testl_r32_r32   
  jne .L_1312b0                        #  25    0x13125e  2      OPC=jne_label       
  movl 0x1c(%rbx), %eax                #  26    0x131260  3      OPC=movl_r32_m32    
  leaq 0x20(%rsp), %rsi                #  27    0x131263  5      OPC=leaq_r64_m16    
  leaq 0x30(%r12), %rdi                #  28    0x131268  5      OPC=leaq_r64_m16    
  leaq 0x10(%rsp), %r8                 #  29    0x13126d  5      OPC=leaq_r64_m16    
  xorl %ecx, %ecx                      #  30    0x131272  2      OPC=xorl_r32_r32    
  movl $0x0, 0x14(%rsp)                #  31    0x131274  8      OPC=movl_m32_imm32  
  movl $0x0, 0x10(%rsp)                #  32    0x13127c  8      OPC=movl_m32_imm32  
  movl %eax, %edx                      #  33    0x131284  2      OPC=movl_r32_r32    
  subl $0x1, %eax                      #  34    0x131286  3      OPC=subl_r32_imm8   
  bswap %edx                           #  35    0x131289  2      OPC=bswap_r32       
  bswap %eax                           #  36    0x13128b  2      OPC=bswap_r32       
  movl %edx, 0x28(%rsp)                #  37    0x13128d  4      OPC=movl_m32_r32    
  movl $0x10, %edx                     #  38    0x131291  5      OPC=movl_r32_imm32  
  movl %eax, 0x2c(%rsp)                #  39    0x131296  4      OPC=movl_m32_r32    
  callq .cbc_crypt_GLIBC_2_2_5         #  40    0x13129a  5      OPC=callq_label     
  cmpl $0x1, %eax                      #  41    0x13129f  3      OPC=cmpl_r32_imm8   
  jle .L_1312cb                        #  42    0x1312a2  2      OPC=jle_label       
.L_1312a4:                             #        0x1312a4  0      OPC=<label>         
  addq $0x40, %rsp                     #  43    0x1312a4  4      OPC=addq_r64_imm8   
  xorl %eax, %eax                      #  44    0x1312a8  2      OPC=xorl_r32_r32    
  popq %rbx                            #  45    0x1312aa  1      OPC=popq_r64_1      
  popq %rbp                            #  46    0x1312ab  1      OPC=popq_r64_1      
  popq %r12                            #  47    0x1312ac  2      OPC=popq_r64_1      
  retq                                 #  48    0x1312ae  1      OPC=retq            
  nop                                  #  49    0x1312af  1      OPC=nop             
.L_1312b0:                             #        0x1312b0  0      OPC=<label>         
  leaq 0x20(%rsp), %rsi                #  50    0x1312b0  5      OPC=leaq_r64_m16    
  leaq 0x30(%r12), %rdi                #  51    0x1312b5  5      OPC=leaq_r64_m16    
  xorl %ecx, %ecx                      #  52    0x1312ba  2      OPC=xorl_r32_r32    
  movl $0x8, %edx                      #  53    0x1312bc  5      OPC=movl_r32_imm32  
  callq .ecb_crypt_GLIBC_2_2_5         #  54    0x1312c1  5      OPC=callq_label     
  cmpl $0x1, %eax                      #  55    0x1312c6  3      OPC=cmpl_r32_imm8   
  jg .L_1312a4                         #  56    0x1312c9  2      OPC=jg_label        
.L_1312cb:                             #        0x1312cb  0      OPC=<label>         
  movq 0x20(%rsp), %rax                #  57    0x1312cb  5      OPC=movq_r64_m64    
  movq %rax, 0x68(%rbx)                #  58    0x1312d0  4      OPC=movq_m64_r64    
  movl 0x40(%rbx), %eax                #  59    0x1312d4  3      OPC=movl_r32_m32    
  testl %eax, %eax                     #  60    0x1312d7  2      OPC=testl_r32_r32   
  je .L_131398                         #  61    0x1312d9  6      OPC=je_label_1      
  movl 0x3c(%rbx), %eax                #  62    0x1312df  3      OPC=movl_r32_m32    
  movl $0x0, 0x70(%rbx)                #  63    0x1312e2  7      OPC=movl_m32_imm32  
  movl %eax, 0x60(%rbx)                #  64    0x1312e9  3      OPC=movl_m32_r32    
  movl $0x8, %eax                      #  65    0x1312ec  5      OPC=movl_r32_imm32  
.L_1312f1:                             #        0x1312f1  0      OPC=<label>         
  movl %eax, 0xc(%rsp)                 #  66    0x1312f1  4      OPC=movl_m32_r32    
  movq 0x8(%rbp), %rax                 #  67    0x1312f5  4      OPC=movq_r64_m64    
  movl $0x8, %esi                      #  68    0x1312f9  5      OPC=movl_r32_imm32  
  movq %rbp, %rdi                      #  69    0x1312fe  3      OPC=movq_r64_r64    
  callq 0x30(%rax)                     #  70    0x131301  3      OPC=callq_m64       
  testq %rax, %rax                     #  71    0x131304  3      OPC=testq_r64_r64   
  je .L_1313b8                         #  72    0x131307  6      OPC=je_label_1      
  movl $0x3000000, (%rax)              #  73    0x13130d  6      OPC=movl_m32_imm32  
  movl 0xc(%rsp), %edx                 #  74    0x131313  4      OPC=movl_r32_m32    
  bswap %edx                           #  75    0x131317  2      OPC=bswap_r32       
  movl %edx, 0x4(%rax)                 #  76    0x131319  3      OPC=movl_m32_r32    
.L_13131c:                             #        0x13131c  0      OPC=<label>         
  leaq 0x40(%rbx), %rsi                #  77    0x13131c  4      OPC=leaq_r64_m16    
  movq %rbp, %rdi                      #  78    0x131320  3      OPC=movq_r64_r64    
  callq .xdr_authdes_cred_GLIBC_2_2_5  #  79    0x131323  5      OPC=callq_label     
  testl %eax, %eax                     #  80    0x131328  2      OPC=testl_r32_r32   
  je .L_1312a4                         #  81    0x13132a  6      OPC=je_label_1      
  movq 0x8(%rbp), %rax                 #  82    0x131330  4      OPC=movq_r64_m64    
  movl $0xc, 0xc(%rsp)                 #  83    0x131334  8      OPC=movl_m32_imm32  
  movl $0x8, %esi                      #  84    0x13133c  5      OPC=movl_r32_imm32  
  movq %rbp, %rdi                      #  85    0x131341  3      OPC=movq_r64_r64    
  callq 0x30(%rax)                     #  86    0x131344  3      OPC=callq_m64       
  testq %rax, %rax                     #  87    0x131347  3      OPC=testq_r64_r64   
  je .L_1313e9                         #  88    0x13134a  6      OPC=je_label_1      
  movl $0x3000000, (%rax)              #  89    0x131350  6      OPC=movl_m32_imm32  
  movl 0xc(%rsp), %edx                 #  90    0x131356  4      OPC=movl_r32_m32    
  bswap %edx                           #  91    0x13135a  2      OPC=bswap_r32       
  movl %edx, 0x4(%rax)                 #  92    0x13135c  3      OPC=movl_m32_r32    
.L_13135f:                             #        0x13135f  0      OPC=<label>         
  leaq 0x68(%rbx), %rsi                #  93    0x13135f  4      OPC=leaq_r64_m16    
  movq %rbp, %rdi                      #  94    0x131363  3      OPC=movq_r64_r64    
  callq .xdr_authdes_verf_GLIBC_2_2_5  #  95    0x131366  5      OPC=callq_label     
  testl %eax, %eax                     #  96    0x13136b  2      OPC=testl_r32_r32   
  setne %al                            #  97    0x13136d  3      OPC=setne_r8        
  addq $0x40, %rsp                     #  98    0x131370  4      OPC=addq_r64_imm8   
  popq %rbx                            #  99    0x131374  1      OPC=popq_r64_1      
  movzbl %al, %eax                     #  100   0x131375  3      OPC=movzbl_r32_r8   
  popq %rbp                            #  101   0x131378  1      OPC=popq_r64_1      
  popq %r12                            #  102   0x131379  2      OPC=popq_r64_1      
  retq                                 #  103   0x13137b  1      OPC=retq            
  nop                                  #  104   0x13137c  1      OPC=nop             
  nop                                  #  105   0x13137d  1      OPC=nop             
  nop                                  #  106   0x13137e  1      OPC=nop             
  nop                                  #  107   0x13137f  1      OPC=nop             
.L_131380:                             #        0x131380  0      OPC=<label>         
  subl $0xf4240, %eax                  #  108   0x131380  5      OPC=subl_eax_imm32  
  addl $0x1, %edx                      #  109   0x131385  3      OPC=addl_r32_imm8   
  movl %eax, 0x78(%rbx)                #  110   0x131388  3      OPC=movl_m32_r32    
  movl %edx, 0x74(%rbx)                #  111   0x13138b  3      OPC=movl_m32_r32    
  jmpq .L_13124d                       #  112   0x13138e  5      OPC=jmpq_label_1    
  nop                                  #  113   0x131393  1      OPC=nop             
  nop                                  #  114   0x131394  1      OPC=nop             
  nop                                  #  115   0x131395  1      OPC=nop             
  nop                                  #  116   0x131396  1      OPC=nop             
  nop                                  #  117   0x131397  1      OPC=nop             
.L_131398:                             #        0x131398  0      OPC=<label>         
  movl 0x28(%rsp), %eax                #  118   0x131398  4      OPC=movl_r32_m32    
  movl %eax, 0x58(%rbx)                #  119   0x13139c  3      OPC=movl_m32_r32    
  movl 0x2c(%rsp), %eax                #  120   0x13139f  4      OPC=movl_r32_m32    
  movl %eax, 0x70(%rbx)                #  121   0x1313a3  3      OPC=movl_m32_r32    
  movl 0x8(%rbx), %eax                 #  122   0x1313a6  3      OPC=movl_r32_m32    
  addl $0x14, %eax                     #  123   0x1313a9  3      OPC=addl_r32_imm8   
  jmpq .L_1312f1                       #  124   0x1313ac  5      OPC=jmpq_label_1    
  nop                                  #  125   0x1313b1  1      OPC=nop             
  nop                                  #  126   0x1313b2  1      OPC=nop             
  nop                                  #  127   0x1313b3  1      OPC=nop             
  nop                                  #  128   0x1313b4  1      OPC=nop             
  nop                                  #  129   0x1313b5  1      OPC=nop             
  nop                                  #  130   0x1313b6  1      OPC=nop             
  nop                                  #  131   0x1313b7  1      OPC=nop             
.L_1313b8:                             #        0x1313b8  0      OPC=<label>         
  movq 0x8(%rbp), %rax                 #  132   0x1313b8  4      OPC=movq_r64_m64    
  movq %r12, %rsi                      #  133   0x1313bc  3      OPC=movq_r64_r64    
  movq %rbp, %rdi                      #  134   0x1313bf  3      OPC=movq_r64_r64    
  callq 0x48(%rax)                     #  135   0x1313c2  3      OPC=callq_m64       
  testl %eax, %eax                     #  136   0x1313c5  2      OPC=testl_r32_r32   
  je .L_1312a4                         #  137   0x1313c7  6      OPC=je_label_1      
  movq 0x8(%rbp), %rax                 #  138   0x1313cd  4      OPC=movq_r64_m64    
  leaq 0xc(%rsp), %rsi                 #  139   0x1313d1  5      OPC=leaq_r64_m16    
  movq %rbp, %rdi                      #  140   0x1313d6  3      OPC=movq_r64_r64    
  callq 0x48(%rax)                     #  141   0x1313d9  3      OPC=callq_m64       
  testl %eax, %eax                     #  142   0x1313dc  2      OPC=testl_r32_r32   
  jne .L_13131c                        #  143   0x1313de  6      OPC=jne_label_1     
  jmpq .L_1312a4                       #  144   0x1313e4  5      OPC=jmpq_label_1    
.L_1313e9:                             #        0x1313e9  0      OPC=<label>         
  movq 0x8(%rbp), %rax                 #  145   0x1313e9  4      OPC=movq_r64_m64    
  leaq 0x18(%r12), %rsi                #  146   0x1313ed  5      OPC=leaq_r64_m16    
  movq %rbp, %rdi                      #  147   0x1313f2  3      OPC=movq_r64_r64    
  callq 0x48(%rax)                     #  148   0x1313f5  3      OPC=callq_m64       
  testl %eax, %eax                     #  149   0x1313f8  2      OPC=testl_r32_r32   
  je .L_1312a4                         #  150   0x1313fa  6      OPC=je_label_1      
  movq 0x8(%rbp), %rax                 #  151   0x131400  4      OPC=movq_r64_m64    
  leaq 0xc(%rsp), %rsi                 #  152   0x131404  5      OPC=leaq_r64_m16    
  movq %rbp, %rdi                      #  153   0x131409  3      OPC=movq_r64_r64    
  callq 0x48(%rax)                     #  154   0x13140c  3      OPC=callq_m64       
  testl %eax, %eax                     #  155   0x13140f  2      OPC=testl_r32_r32   
  jne .L_13135f                        #  156   0x131411  6      OPC=jne_label_1     
  jmpq .L_1312a4                       #  157   0x131417  5      OPC=jmpq_label_1    
  nop                                  #  158   0x13141c  1      OPC=nop             
  nop                                  #  159   0x13141d  1      OPC=nop             
  nop                                  #  160   0x13141e  1      OPC=nop             
  nop                                  #  161   0x13141f  1      OPC=nop             
                                                                                     
.size authdes_marshal, .-authdes_marshal

