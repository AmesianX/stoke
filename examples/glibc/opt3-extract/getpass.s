  .text
  .globl getpass
  .type getpass, @function

#! file-offset 0xfe280
#! rip-offset  0xfe280
#! capacity    512 bytes

# Text                            #  Line  RIP      Bytes  Opcode              
.getpass:                         #        0xfe280  0      OPC=<label>         
  pushq %r15                      #  1     0xfe280  2      OPC=pushq_r64_1     
  pushq %r14                      #  2     0xfe282  2      OPC=pushq_r64_1     
  movq %rdi, %r15                 #  3     0xfe284  3      OPC=movq_r64_r64    
  pushq %r13                      #  4     0xfe287  2      OPC=pushq_r64_1     
  pushq %r12                      #  5     0xfe289  2      OPC=pushq_r64_1     
  leaq 0x8e2c8(%rip), %rsi        #  6     0xfe28b  7      OPC=leaq_r64_m16    
  pushq %rbp                      #  7     0xfe292  1      OPC=pushq_r64_1     
  pushq %rbx                      #  8     0xfe293  1      OPC=pushq_r64_1     
  leaq 0x8c51c(%rip), %rdi        #  9     0xfe294  7      OPC=leaq_r64_m16    
  subq $0x88, %rsp                #  10    0xfe29b  7      OPC=subq_r64_imm32  
  callq ._IO_fopen__GLIBC_2_2_5   #  11    0xfe2a2  5      OPC=callq_label     
  testq %rax, %rax                #  12    0xfe2a7  3      OPC=testq_r64_r64   
  movq %rax, %rbx                 #  13    0xfe2aa  3      OPC=movq_r64_r64    
  je .L_fe440                     #  14    0xfe2ad  6      OPC=je_label_1      
  orl $0x8000, (%rax)             #  15    0xfe2b3  6      OPC=orl_m32_imm32   
  movq %rax, %rbp                 #  16    0xfe2b9  3      OPC=movq_r64_r64    
  movq %rax, %r13                 #  17    0xfe2bc  3      OPC=movq_r64_r64    
.L_fe2bf:                         #        0xfe2bf  0      OPC=<label>         
  leaq 0x40(%rsp), %r14           #  18    0xfe2bf  5      OPC=leaq_r64_m16    
  movq %rbx, %rdi                 #  19    0xfe2c4  3      OPC=movq_r64_r64    
  callq .fileno                   #  20    0xfe2c7  5      OPC=callq_label     
  movq %r14, %rsi                 #  21    0xfe2cc  3      OPC=movq_r64_r64    
  movl %eax, %edi                 #  22    0xfe2cf  2      OPC=movl_r32_r32    
  callq .tcgetattr                #  23    0xfe2d1  5      OPC=callq_label     
  xorl %r12d, %r12d               #  24    0xfe2d6  3      OPC=xorl_r32_r32    
  testl %eax, %eax                #  25    0xfe2d9  2      OPC=testl_r32_r32   
  je .L_fe370                     #  26    0xfe2db  6      OPC=je_label_1      
.L_fe2e1:                         #        0xfe2e1  0      OPC=<label>         
  leaq 0x8ec31(%rip), %rsi        #  27    0xfe2e1  7      OPC=leaq_r64_m16    
  movq %r15, %rdx                 #  28    0xfe2e8  3      OPC=movq_r64_r64    
  movq %rbp, %rdi                 #  29    0xfe2eb  3      OPC=movq_r64_r64    
  xorl %eax, %eax                 #  30    0xfe2ee  2      OPC=xorl_r32_r32    
  callq .__fxprintf               #  31    0xfe2f0  5      OPC=callq_label     
  movq %rbp, %rdi                 #  32    0xfe2f5  3      OPC=movq_r64_r64    
  callq .fflush_unlocked          #  33    0xfe2f8  5      OPC=callq_label     
  leaq 0x2c6134(%rip), %rsi       #  34    0xfe2fd  7      OPC=leaq_r64_m16    
  leaq 0x2c6135(%rip), %rdi       #  35    0xfe304  7      OPC=leaq_r64_m16    
  movq %rbx, %rdx                 #  36    0xfe30b  3      OPC=movq_r64_r64    
  callq .getline                  #  37    0xfe30e  5      OPC=callq_label     
  movq 0x2c6126(%rip), %rdx       #  38    0xfe313  7      OPC=movq_r64_m64    
  testq %rdx, %rdx                #  39    0xfe31a  3      OPC=testq_r64_r64   
  je .L_fe336                     #  40    0xfe31d  2      OPC=je_label        
  testq %rax, %rax                #  41    0xfe31f  3      OPC=testq_r64_r64   
  js .L_fe430                     #  42    0xfe322  6      OPC=js_label_1      
  leaq -0x1(%rdx,%rax,1), %rax    #  43    0xfe328  5      OPC=leaq_r64_m16    
  cmpb $0xa, (%rax)               #  44    0xfe32d  3      OPC=cmpb_m8_imm8    
  je .L_fe3f0                     #  45    0xfe330  6      OPC=je_label_1      
.L_fe336:                         #        0xfe336  0      OPC=<label>         
  testl %r12d, %r12d              #  46    0xfe336  3      OPC=testl_r32_r32   
  jne .L_fe410                    #  47    0xfe339  6      OPC=jne_label_1     
.L_fe33f:                         #        0xfe33f  0      OPC=<label>         
  movq 0x2c2c72(%rip), %rax       #  48    0xfe33f  7      OPC=movq_r64_m64    
  cmpq (%rax), %rbx               #  49    0xfe346  3      OPC=cmpq_r64_m64    
  je .L_fe353                     #  50    0xfe349  2      OPC=je_label        
  movq %rbx, %rdi                 #  51    0xfe34b  3      OPC=movq_r64_r64    
  callq ._IO_fclose__GLIBC_2_2_5  #  52    0xfe34e  5      OPC=callq_label     
.L_fe353:                         #        0xfe353  0      OPC=<label>         
  movq 0x2c60e6(%rip), %rax       #  53    0xfe353  7      OPC=movq_r64_m64    
  addq $0x88, %rsp                #  54    0xfe35a  7      OPC=addq_r64_imm32  
  popq %rbx                       #  55    0xfe361  1      OPC=popq_r64_1      
  popq %rbp                       #  56    0xfe362  1      OPC=popq_r64_1      
  popq %r12                       #  57    0xfe363  2      OPC=popq_r64_1      
  popq %r13                       #  58    0xfe365  2      OPC=popq_r64_1      
  popq %r14                       #  59    0xfe367  2      OPC=popq_r64_1      
  popq %r15                       #  60    0xfe369  2      OPC=popq_r64_1      
  retq                            #  61    0xfe36b  1      OPC=retq            
  nop                             #  62    0xfe36c  1      OPC=nop             
  nop                             #  63    0xfe36d  1      OPC=nop             
  nop                             #  64    0xfe36e  1      OPC=nop             
  nop                             #  65    0xfe36f  1      OPC=nop             
.L_fe370:                         #        0xfe370  0      OPC=<label>         
  movq 0x40(%rsp), %rax           #  66    0xfe370  5      OPC=movq_r64_m64    
  movq %rbx, %rdi                 #  67    0xfe375  3      OPC=movq_r64_r64    
  xorl %r12d, %r12d               #  68    0xfe378  3      OPC=xorl_r32_r32    
  movq %rax, (%rsp)               #  69    0xfe37b  4      OPC=movq_m64_r64    
  movq 0x48(%rsp), %rax           #  70    0xfe37f  5      OPC=movq_r64_m64    
  andl $0xfffffff6, 0x4c(%rsp)    #  71    0xfe384  8      OPC=andl_m32_imm32  
  nop                             #  72    0xfe38c  1      OPC=nop             
  nop                             #  73    0xfe38d  1      OPC=nop             
  nop                             #  74    0xfe38e  1      OPC=nop             
  nop                             #  75    0xfe38f  1      OPC=nop             
  nop                             #  76    0xfe390  1      OPC=nop             
  movq %rax, 0x8(%rsp)            #  77    0xfe391  5      OPC=movq_m64_r64    
  movq 0x50(%rsp), %rax           #  78    0xfe396  5      OPC=movq_r64_m64    
  movq %rax, 0x10(%rsp)           #  79    0xfe39b  5      OPC=movq_m64_r64    
  movq 0x58(%rsp), %rax           #  80    0xfe3a0  5      OPC=movq_r64_m64    
  movq %rax, 0x18(%rsp)           #  81    0xfe3a5  5      OPC=movq_m64_r64    
  movq 0x60(%rsp), %rax           #  82    0xfe3aa  5      OPC=movq_r64_m64    
  movq %rax, 0x20(%rsp)           #  83    0xfe3af  5      OPC=movq_m64_r64    
  movq 0x68(%rsp), %rax           #  84    0xfe3b4  5      OPC=movq_r64_m64    
  movq %rax, 0x28(%rsp)           #  85    0xfe3b9  5      OPC=movq_m64_r64    
  movq 0x70(%rsp), %rax           #  86    0xfe3be  5      OPC=movq_r64_m64    
  movq %rax, 0x30(%rsp)           #  87    0xfe3c3  5      OPC=movq_m64_r64    
  movl 0x78(%rsp), %eax           #  88    0xfe3c8  4      OPC=movl_r32_m32    
  movl %eax, 0x38(%rsp)           #  89    0xfe3cc  4      OPC=movl_m32_r32    
  callq .fileno                   #  90    0xfe3d0  5      OPC=callq_label     
  movq %r14, %rdx                 #  91    0xfe3d5  3      OPC=movq_r64_r64    
  movl $0x2, %esi                 #  92    0xfe3d8  5      OPC=movl_r32_imm32  
  movl %eax, %edi                 #  93    0xfe3dd  2      OPC=movl_r32_r32    
  callq .tcsetattr                #  94    0xfe3df  5      OPC=callq_label     
  testl %eax, %eax                #  95    0xfe3e4  2      OPC=testl_r32_r32   
  sete %r12b                      #  96    0xfe3e6  4      OPC=sete_r8         
  jmpq .L_fe2e1                   #  97    0xfe3ea  5      OPC=jmpq_label_1    
  nop                             #  98    0xfe3ef  1      OPC=nop             
  nop                             #  99    0xfe3f0  1      OPC=nop             
  nop                             #  100   0xfe3f1  1      OPC=nop             
  nop                             #  101   0xfe3f2  1      OPC=nop             
  nop                             #  102   0xfe3f3  1      OPC=nop             
  nop                             #  103   0xfe3f4  1      OPC=nop             
  nop                             #  104   0xfe3f5  1      OPC=nop             
  nop                             #  105   0xfe3f6  1      OPC=nop             
  nop                             #  106   0xfe3f7  1      OPC=nop             
.L_fe3f0:                         #        0xfe3f8  0      OPC=<label>         
  testl %r12d, %r12d              #  107   0xfe3f8  3      OPC=testl_r32_r32   
  movb $0x0, (%rax)               #  108   0xfe3fb  3      OPC=movb_m8_imm8    
  je .L_fe33f                     #  109   0xfe3fe  6      OPC=je_label_1      
  leaq 0x8bc46(%rip), %rsi        #  110   0xfe404  7      OPC=leaq_r64_m16    
  movq %rbp, %rdi                 #  111   0xfe40b  3      OPC=movq_r64_r64    
  xorl %eax, %eax                 #  112   0xfe40e  2      OPC=xorl_r32_r32    
  callq .__fxprintf               #  113   0xfe410  5      OPC=callq_label     
  nop                             #  114   0xfe415  1      OPC=nop             
  nop                             #  115   0xfe416  1      OPC=nop             
  nop                             #  116   0xfe417  1      OPC=nop             
.L_fe410:                         #        0xfe418  0      OPC=<label>         
  movq %rbx, %rdi                 #  117   0xfe418  3      OPC=movq_r64_r64    
  callq .fileno                   #  118   0xfe41b  5      OPC=callq_label     
  movq %rsp, %rdx                 #  119   0xfe420  3      OPC=movq_r64_r64    
  movl $0x2, %esi                 #  120   0xfe423  5      OPC=movl_r32_imm32  
  movl %eax, %edi                 #  121   0xfe428  2      OPC=movl_r32_r32    
  callq .tcsetattr                #  122   0xfe42a  5      OPC=callq_label     
  jmpq .L_fe33f                   #  123   0xfe42f  5      OPC=jmpq_label_1    
  nop                             #  124   0xfe434  1      OPC=nop             
  nop                             #  125   0xfe435  1      OPC=nop             
  nop                             #  126   0xfe436  1      OPC=nop             
  nop                             #  127   0xfe437  1      OPC=nop             
.L_fe430:                         #        0xfe438  0      OPC=<label>         
  movb $0x0, (%rdx)               #  128   0xfe438  3      OPC=movb_m8_imm8    
  jmpq .L_fe336                   #  129   0xfe43b  5      OPC=jmpq_label_1    
  nop                             #  130   0xfe440  1      OPC=nop             
  nop                             #  131   0xfe441  1      OPC=nop             
  nop                             #  132   0xfe442  1      OPC=nop             
  nop                             #  133   0xfe443  1      OPC=nop             
  nop                             #  134   0xfe444  1      OPC=nop             
  nop                             #  135   0xfe445  1      OPC=nop             
  nop                             #  136   0xfe446  1      OPC=nop             
  nop                             #  137   0xfe447  1      OPC=nop             
.L_fe440:                         #        0xfe448  0      OPC=<label>         
  movq 0x2c2b71(%rip), %rax       #  138   0xfe448  7      OPC=movq_r64_m64    
  movl $0x0, %r13d                #  139   0xfe44f  6      OPC=movl_r32_imm32  
  movq (%rax), %rbx               #  140   0xfe455  3      OPC=movq_r64_m64    
  movq 0x2c2969(%rip), %rax       #  141   0xfe458  7      OPC=movq_r64_m64    
  movq (%rax), %rbp               #  142   0xfe45f  3      OPC=movq_r64_m64    
  cmpq %rbp, %rbx                 #  143   0xfe462  3      OPC=cmpq_r64_r64    
  cmoveq %rbx, %r13               #  144   0xfe465  4      OPC=cmoveq_r64_r64  
  jmpq .L_fe2bf                   #  145   0xfe469  5      OPC=jmpq_label_1    
  movq %rax, %rbx                 #  146   0xfe46e  3      OPC=movq_r64_r64    
  testq %r13, %r13                #  147   0xfe471  3      OPC=testq_r64_r64   
  je .L_fe476                     #  148   0xfe474  2      OPC=je_label        
  movq %r13, %rdi                 #  149   0xfe476  3      OPC=movq_r64_r64    
  callq ._IO_fclose__GLIBC_2_2_5  #  150   0xfe479  5      OPC=callq_label     
.L_fe476:                         #        0xfe47e  0      OPC=<label>         
  movq %rbx, %rdi                 #  151   0xfe47e  3      OPC=movq_r64_r64    
  callq ._Unwind_Resume           #  152   0xfe481  5      OPC=callq_label     
  xchgw %ax, %ax                  #  153   0xfe486  2      OPC=xchgw_ax_r16    
                                                                               
.size getpass, .-getpass

