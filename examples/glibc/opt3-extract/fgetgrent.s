  .text
  .globl fgetgrent
  .type fgetgrent, @function

#! file-offset 0xc5d60
#! rip-offset  0xc5d60
#! capacity    480 bytes

# Text                               #  Line  RIP      Bytes  Opcode                
.fgetgrent:                          #        0xc5d60  0      OPC=<label>           
  pushq %r15                         #  1     0xc5d60  2      OPC=pushq_r64_1       
  pushq %r14                         #  2     0xc5d62  2      OPC=pushq_r64_1       
  pushq %r13                         #  3     0xc5d64  2      OPC=pushq_r64_1       
  pushq %r12                         #  4     0xc5d66  2      OPC=pushq_r64_1       
  pushq %rbp                         #  5     0xc5d68  1      OPC=pushq_r64_1       
  pushq %rbx                         #  6     0xc5d69  1      OPC=pushq_r64_1       
  movq %rdi, %rbx                    #  7     0xc5d6a  3      OPC=movq_r64_r64      
  subq $0x38, %rsp                   #  8     0xc5d6d  4      OPC=subq_r64_imm8     
  leaq 0x20(%rsp), %rbp              #  9     0xc5d71  5      OPC=leaq_r64_m16      
  movq %rbp, %rsi                    #  10    0xc5d76  3      OPC=movq_r64_r64      
  callq ._IO_fgetpos64__GLIBC_2_2_5  #  11    0xc5d79  5      OPC=callq_label       
  testl %eax, %eax                   #  12    0xc5d7e  2      OPC=testl_r32_r32     
  jne .L_c5f02                       #  13    0xc5d80  6      OPC=jne_label_1       
  movl $0x1, %esi                    #  14    0xc5d86  5      OPC=movl_r32_imm32    
  cmpl $0x0, 0x300e6e(%rip)          #  15    0xc5d8b  7      OPC=cmpl_m32_imm8     
  je .L_c5da0                        #  16    0xc5d92  2      OPC=je_label          
  lock                               #  17    0xc5d94  1      OPC=lock              
  cmpxchgl %esi, 0x2fe12c(%rip)      #  18    0xc5d95  7      OPC=cmpxchgl_m32_r32  
  nop                                #  19    0xc5d9c  1      OPC=nop               
  jne .L_c5da9                       #  20    0xc5d9d  2      OPC=jne_label         
  jmpq .L_c5dc3                      #  21    0xc5d9f  2      OPC=jmpq_label        
.L_c5da0:                            #        0xc5da1  0      OPC=<label>           
  cmpxchgl %esi, 0x2fe121(%rip)      #  22    0xc5da1  7      OPC=cmpxchgl_m32_r32  
  je .L_c5dc3                        #  23    0xc5da8  2      OPC=je_label          
.L_c5da9:                            #        0xc5daa  0      OPC=<label>           
  leaq 0x2fe118(%rip), %rdi          #  24    0xc5daa  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                   #  25    0xc5db1  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private     #  26    0xc5db8  5      OPC=callq_label       
  addq $0x80, %rsp                   #  27    0xc5dbd  7      OPC=addq_r64_imm32    
.L_c5dc3:                            #        0xc5dc4  0      OPC=<label>           
  movq 0x2fcae6(%rip), %rdx          #  28    0xc5dc4  7      OPC=movq_r64_m64      
  testq %rdx, %rdx                   #  29    0xc5dcb  3      OPC=testq_r64_r64     
  je .L_c5f13                        #  30    0xc5dce  6      OPC=je_label_1        
.L_c5dd3:                            #        0xc5dd4  0      OPC=<label>           
  movq 0x2fb0a6(%rip), %r13          #  31    0xc5dd4  7      OPC=movq_r64_m64      
  leaq 0x18(%rsp), %r12              #  32    0xc5ddb  5      OPC=leaq_r64_m16      
  jmpq .L_c5e09                      #  33    0xc5de0  2      OPC=jmpq_label        
  nop                                #  34    0xc5de2  1      OPC=nop               
  nop                                #  35    0xc5de3  1      OPC=nop               
  nop                                #  36    0xc5de4  1      OPC=nop               
  nop                                #  37    0xc5de5  1      OPC=nop               
  nop                                #  38    0xc5de6  1      OPC=nop               
  nop                                #  39    0xc5de7  1      OPC=nop               
  nop                                #  40    0xc5de8  1      OPC=nop               
.L_c5de8:                            #        0xc5de9  0      OPC=<label>           
  movq %rbp, %rsi                    #  41    0xc5de9  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                    #  42    0xc5dec  3      OPC=movq_r64_r64      
  movq %rax, 0x2fcabb(%rip)          #  43    0xc5def  7      OPC=movq_m64_r64      
  callq ._IO_fsetpos64__GLIBC_2_2_5  #  44    0xc5df6  5      OPC=callq_label       
  testl %eax, %eax                   #  45    0xc5dfb  2      OPC=testl_r32_r32     
  jne .L_c5ef0                       #  46    0xc5dfd  6      OPC=jne_label_1       
  movq 0x2fcaa7(%rip), %rdx          #  47    0xc5e03  7      OPC=movq_r64_m64      
.L_c5e09:                            #        0xc5e0a  0      OPC=<label>           
  testq %rdx, %rdx                   #  48    0xc5e0a  3      OPC=testq_r64_r64     
  je .L_c5e90                        #  49    0xc5e0d  6      OPC=je_label_1        
  movq 0x2fe0a7(%rip), %rcx          #  50    0xc5e13  7      OPC=movq_r64_m64      
  leaq 0x2fe080(%rip), %rsi          #  51    0xc5e1a  7      OPC=leaq_r64_m16      
  movq %r12, %r8                     #  52    0xc5e21  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                    #  53    0xc5e24  3      OPC=movq_r64_r64      
  callq .fgetgrent_r                 #  54    0xc5e27  5      OPC=callq_label       
  cmpl $0x22, %eax                   #  55    0xc5e2c  3      OPC=cmpl_r32_imm8     
  jne .L_c5e80                       #  56    0xc5e2f  2      OPC=jne_label         
  movq 0x2fe089(%rip), %rax          #  57    0xc5e31  7      OPC=movq_r64_m64      
  movq 0x2fca72(%rip), %r14          #  58    0xc5e38  7      OPC=movq_r64_m64      
  leaq 0x400(%rax), %rsi             #  59    0xc5e3f  7      OPC=leaq_r64_m16      
  movq %r14, %rdi                    #  60    0xc5e46  3      OPC=movq_r64_r64      
  movq %rsi, 0x2fe071(%rip)          #  61    0xc5e49  7      OPC=movq_m64_r64      
  callq .__tls_get_addr_plt          #  62    0xc5e50  5      OPC=callq_label       
  testq %rax, %rax                   #  63    0xc5e55  3      OPC=testq_r64_r64     
  jne .L_c5de8                       #  64    0xc5e58  2      OPC=jne_label         
  movl (%r13), %r15d                 #  65    0xc5e5a  4      OPC=movl_r32_m32      
  nop                                #  66    0xc5e5e  1      OPC=nop               
  movq %r14, %rdi                    #  67    0xc5e5f  3      OPC=movq_r64_r64      
  movq %rax, 0x8(%rsp)               #  68    0xc5e62  5      OPC=movq_m64_r64      
  callq .L_1f8c0                     #  69    0xc5e67  5      OPC=callq_label       
  movq 0x8(%rsp), %rax               #  70    0xc5e6c  5      OPC=movq_r64_m64      
  movl %r15d, (%r13)                 #  71    0xc5e71  4      OPC=movl_m32_r32      
  nop                                #  72    0xc5e75  1      OPC=nop               
  jmpq .L_c5de8                      #  73    0xc5e76  5      OPC=jmpq_label_1      
  nop                                #  74    0xc5e7b  1      OPC=nop               
  nop                                #  75    0xc5e7c  1      OPC=nop               
  nop                                #  76    0xc5e7d  1      OPC=nop               
  nop                                #  77    0xc5e7e  1      OPC=nop               
  nop                                #  78    0xc5e7f  1      OPC=nop               
  nop                                #  79    0xc5e80  1      OPC=nop               
.L_c5e80:                            #        0xc5e81  0      OPC=<label>           
  cmpq $0x0, 0x2fca28(%rip)          #  80    0xc5e81  8      OPC=cmpq_m64_imm8     
  jne .L_c5e99                       #  81    0xc5e89  2      OPC=jne_label         
  nop                                #  82    0xc5e8b  1      OPC=nop               
  nop                                #  83    0xc5e8c  1      OPC=nop               
  nop                                #  84    0xc5e8d  1      OPC=nop               
  nop                                #  85    0xc5e8e  1      OPC=nop               
  nop                                #  86    0xc5e8f  1      OPC=nop               
  nop                                #  87    0xc5e90  1      OPC=nop               
.L_c5e90:                            #        0xc5e91  0      OPC=<label>           
  movq $0x0, 0x18(%rsp)              #  88    0xc5e91  9      OPC=movq_m64_imm32    
.L_c5e99:                            #        0xc5e9a  0      OPC=<label>           
  movl (%r13), %edx                  #  89    0xc5e9a  4      OPC=movl_r32_m32      
  nop                                #  90    0xc5e9e  1      OPC=nop               
  cmpl $0x0, 0x300d5b(%rip)          #  91    0xc5e9f  7      OPC=cmpl_m32_imm8     
  je .L_c5eb2                        #  92    0xc5ea6  2      OPC=je_label          
  lock                               #  93    0xc5ea8  1      OPC=lock              
  decl 0x2fe01a(%rip)                #  94    0xc5ea9  6      OPC=decl_m32          
  nop                                #  95    0xc5eaf  1      OPC=nop               
  jne .L_c5eba                       #  96    0xc5eb0  2      OPC=jne_label         
  jmpq .L_c5ed4                      #  97    0xc5eb2  2      OPC=jmpq_label        
.L_c5eb2:                            #        0xc5eb4  0      OPC=<label>           
  decl 0x2fe010(%rip)                #  98    0xc5eb4  6      OPC=decl_m32          
  je .L_c5ed4                        #  99    0xc5eba  2      OPC=je_label          
.L_c5eba:                            #        0xc5ebc  0      OPC=<label>           
  leaq 0x2fe007(%rip), %rdi          #  100   0xc5ebc  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                   #  101   0xc5ec3  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private   #  102   0xc5eca  5      OPC=callq_label       
  addq $0x80, %rsp                   #  103   0xc5ecf  7      OPC=addq_r64_imm32    
.L_c5ed4:                            #        0xc5ed6  0      OPC=<label>           
  movl %edx, (%r13)                  #  104   0xc5ed6  4      OPC=movl_m32_r32      
  nop                                #  105   0xc5eda  1      OPC=nop               
  movq 0x18(%rsp), %rax              #  106   0xc5edb  5      OPC=movq_r64_m64      
  addq $0x38, %rsp                   #  107   0xc5ee0  4      OPC=addq_r64_imm8     
  popq %rbx                          #  108   0xc5ee4  1      OPC=popq_r64_1        
  popq %rbp                          #  109   0xc5ee5  1      OPC=popq_r64_1        
  popq %r12                          #  110   0xc5ee6  2      OPC=popq_r64_1        
  popq %r13                          #  111   0xc5ee8  2      OPC=popq_r64_1        
  popq %r14                          #  112   0xc5eea  2      OPC=popq_r64_1        
  popq %r15                          #  113   0xc5eec  2      OPC=popq_r64_1        
  retq                               #  114   0xc5eee  1      OPC=retq              
  nop                                #  115   0xc5eef  1      OPC=nop               
  nop                                #  116   0xc5ef0  1      OPC=nop               
  nop                                #  117   0xc5ef1  1      OPC=nop               
.L_c5ef0:                            #        0xc5ef2  0      OPC=<label>           
  movq $0x0, 0x2fc9b5(%rip)          #  118   0xc5ef2  11     OPC=movq_m64_imm32    
  xorl %edx, %edx                    #  119   0xc5efd  2      OPC=xorl_r32_r32      
  jmpq .L_c5e09                      #  120   0xc5eff  5      OPC=jmpq_label_1      
.L_c5f02:                            #        0xc5f04  0      OPC=<label>           
  addq $0x38, %rsp                   #  121   0xc5f04  4      OPC=addq_r64_imm8     
  xorl %eax, %eax                    #  122   0xc5f08  2      OPC=xorl_r32_r32      
  popq %rbx                          #  123   0xc5f0a  1      OPC=popq_r64_1        
  popq %rbp                          #  124   0xc5f0b  1      OPC=popq_r64_1        
  popq %r12                          #  125   0xc5f0c  2      OPC=popq_r64_1        
  popq %r13                          #  126   0xc5f0e  2      OPC=popq_r64_1        
  popq %r14                          #  127   0xc5f10  2      OPC=popq_r64_1        
  popq %r15                          #  128   0xc5f12  2      OPC=popq_r64_1        
  retq                               #  129   0xc5f14  1      OPC=retq              
.L_c5f13:                            #        0xc5f15  0      OPC=<label>           
  movl $0x400, %edi                  #  130   0xc5f15  5      OPC=movl_r32_imm32    
  movq $0x400, 0x2fdf9d(%rip)        #  131   0xc5f1a  11     OPC=movq_m64_imm32    
  callq .memalign_plt                #  132   0xc5f25  5      OPC=callq_label       
  movq %rax, 0x2fc981(%rip)          #  133   0xc5f2a  7      OPC=movq_m64_r64      
  movq %rax, %rdx                    #  134   0xc5f31  3      OPC=movq_r64_r64      
  jmpq .L_c5dd3                      #  135   0xc5f34  5      OPC=jmpq_label_1      
  nop                                #  136   0xc5f39  1      OPC=nop               
  nop                                #  137   0xc5f3a  1      OPC=nop               
  nop                                #  138   0xc5f3b  1      OPC=nop               
  nop                                #  139   0xc5f3c  1      OPC=nop               
  nop                                #  140   0xc5f3d  1      OPC=nop               
  nop                                #  141   0xc5f3e  1      OPC=nop               
  nop                                #  142   0xc5f3f  1      OPC=nop               
  nop                                #  143   0xc5f40  1      OPC=nop               
  nop                                #  144   0xc5f41  1      OPC=nop               
                                                                                    
.size fgetgrent, .-fgetgrent

