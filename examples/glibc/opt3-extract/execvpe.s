  .text
  .globl execvpe
  .type execvpe, @function

#! file-offset 0xc9c40
#! rip-offset  0xc9c40
#! capacity    1184 bytes

# Text                         #  Line  RIP      Bytes  Opcode                
.execvpe:                      #        0xc9c40  0      OPC=<label>           
  cmpb $0x0, (%rdi)            #  1     0xc9c40  3      OPC=cmpb_m8_imm8      
  je .L_c9ca8                  #  2     0xc9c43  2      OPC=je_label          
  pushq %rbp                   #  3     0xc9c45  1      OPC=pushq_r64_1       
  movq %rsp, %rbp              #  4     0xc9c46  3      OPC=movq_r64_r64      
  pushq %r15                   #  5     0xc9c49  2      OPC=pushq_r64_1       
  pushq %r14                   #  6     0xc9c4b  2      OPC=pushq_r64_1       
  pushq %r13                   #  7     0xc9c4d  2      OPC=pushq_r64_1       
  pushq %r12                   #  8     0xc9c4f  2      OPC=pushq_r64_1       
  movq %rdi, %r13              #  9     0xc9c51  3      OPC=movq_r64_r64      
  pushq %rbx                   #  10    0xc9c54  1      OPC=pushq_r64_1       
  movq %rsi, %rbx              #  11    0xc9c55  3      OPC=movq_r64_r64      
  movl $0x2f, %esi             #  12    0xc9c58  5      OPC=movl_r32_imm32    
  movq %rdx, %r12              #  13    0xc9c5d  3      OPC=movq_r64_r64      
  subq $0x48, %rsp             #  14    0xc9c60  4      OPC=subq_r64_imm8     
  callq .__GI_strchr           #  15    0xc9c64  5      OPC=callq_label       
  testq %rax, %rax             #  16    0xc9c69  3      OPC=testq_r64_r64     
  je .L_c9d78                  #  17    0xc9c6c  6      OPC=je_label_1        
  movq %r12, %rdx              #  18    0xc9c72  3      OPC=movq_r64_r64      
  movq %rbx, %rsi              #  19    0xc9c75  3      OPC=movq_r64_r64      
  movq %r13, %rdi              #  20    0xc9c78  3      OPC=movq_r64_r64      
  callq .execve                #  21    0xc9c7b  5      OPC=callq_label       
  movq 0x2f71f9(%rip), %rax    #  22    0xc9c80  7      OPC=movq_r64_m64      
  cmpl $0x8, (%rax)            #  23    0xc9c87  3      OPC=cmpl_m32_imm8     
  nop                          #  24    0xc9c8a  1      OPC=nop               
  je .L_c9cc0                  #  25    0xc9c8b  2      OPC=je_label          
.L_c9c8d:                      #        0xc9c8d  0      OPC=<label>           
  leaq -0x28(%rbp), %rsp       #  26    0xc9c8d  4      OPC=leaq_r64_m16      
  movl $0xffffffff, %eax       #  27    0xc9c91  6      OPC=movl_r32_imm32_1  
  popq %rbx                    #  28    0xc9c97  1      OPC=popq_r64_1        
  popq %r12                    #  29    0xc9c98  2      OPC=popq_r64_1        
  popq %r13                    #  30    0xc9c9a  2      OPC=popq_r64_1        
  popq %r14                    #  31    0xc9c9c  2      OPC=popq_r64_1        
  popq %r15                    #  32    0xc9c9e  2      OPC=popq_r64_1        
  popq %rbp                    #  33    0xc9ca0  1      OPC=popq_r64_1        
  retq                         #  34    0xc9ca1  1      OPC=retq              
  nop                          #  35    0xc9ca2  1      OPC=nop               
  nop                          #  36    0xc9ca3  1      OPC=nop               
  nop                          #  37    0xc9ca4  1      OPC=nop               
  nop                          #  38    0xc9ca5  1      OPC=nop               
  nop                          #  39    0xc9ca6  1      OPC=nop               
  nop                          #  40    0xc9ca7  1      OPC=nop               
  nop                          #  41    0xc9ca8  1      OPC=nop               
.L_c9ca8:                      #        0xc9ca9  0      OPC=<label>           
  movq 0x2f71d1(%rip), %rax    #  42    0xc9ca9  7      OPC=movq_r64_m64      
  movl $0x2, (%rax)            #  43    0xc9cb0  6      OPC=movl_m32_imm32    
  nop                          #  44    0xc9cb6  1      OPC=nop               
  movl $0xffffffff, %eax       #  45    0xc9cb7  6      OPC=movl_r32_imm32_1  
  retq                         #  46    0xc9cbd  1      OPC=retq              
  nop                          #  47    0xc9cbe  1      OPC=nop               
  nop                          #  48    0xc9cbf  1      OPC=nop               
  nop                          #  49    0xc9cc0  1      OPC=nop               
  nop                          #  50    0xc9cc1  1      OPC=nop               
.L_c9cc0:                      #        0xc9cc2  0      OPC=<label>           
  movq %rbx, %rax              #  51    0xc9cc2  3      OPC=movq_r64_r64      
  xorl %edx, %edx              #  52    0xc9cc5  2      OPC=xorl_r32_r32      
  jmpq .L_c9cd3                #  53    0xc9cc7  2      OPC=jmpq_label        
  nop                          #  54    0xc9cc9  1      OPC=nop               
  nop                          #  55    0xc9cca  1      OPC=nop               
  nop                          #  56    0xc9ccb  1      OPC=nop               
  nop                          #  57    0xc9ccc  1      OPC=nop               
  nop                          #  58    0xc9ccd  1      OPC=nop               
  nop                          #  59    0xc9cce  1      OPC=nop               
  nop                          #  60    0xc9ccf  1      OPC=nop               
  nop                          #  61    0xc9cd0  1      OPC=nop               
  nop                          #  62    0xc9cd1  1      OPC=nop               
.L_c9cd0:                      #        0xc9cd2  0      OPC=<label>           
  movl %r15d, %edx             #  63    0xc9cd2  3      OPC=movl_r32_r32      
.L_c9cd3:                      #        0xc9cd5  0      OPC=<label>           
  addq $0x8, %rax              #  64    0xc9cd5  4      OPC=addq_r64_imm8     
  leal 0x1(%rdx), %r15d        #  65    0xc9cd9  4      OPC=leal_r32_m16      
  cmpq $0x0, -0x8(%rax)        #  66    0xc9cdd  5      OPC=cmpq_m64_imm8     
  jne .L_c9cd0                 #  67    0xc9ce2  2      OPC=jne_label         
  leal 0x2(%rdx), %r14d        #  68    0xc9ce4  4      OPC=leal_r32_m16      
  movslq %r14d, %r14           #  69    0xc9ce8  3      OPC=movslq_r64_r32    
  shlq $0x3, %r14              #  70    0xc9ceb  4      OPC=shlq_r64_imm8     
  cmpq $0x1000, %r14           #  71    0xc9cef  7      OPC=cmpq_r64_imm32    
  ja .L_c9fb3                  #  72    0xc9cf6  6      OPC=ja_label_1        
.L_c9cfa:                      #        0xc9cfc  0      OPC=<label>           
  addq $0x1e, %r14             #  73    0xc9cfc  4      OPC=addq_r64_imm8     
  andq $0xf0, %r14             #  74    0xc9d00  4      OPC=andq_r64_imm8     
  subq %r14, %rsp              #  75    0xc9d04  3      OPC=subq_r64_r64      
  xorl %r14d, %r14d            #  76    0xc9d07  3      OPC=xorl_r32_r32      
  leaq 0xf(%rsp), %rcx         #  77    0xc9d0a  5      OPC=leaq_r64_m16      
  andq $0xf0, %rcx             #  78    0xc9d0f  4      OPC=andq_r64_imm8     
.L_c9d11:                      #        0xc9d13  0      OPC=<label>           
  leaq 0xc0a2a(%rip), %rax     #  79    0xc9d13  7      OPC=leaq_r64_m16      
  cmpl $0x1, %r15d             #  80    0xc9d1a  4      OPC=cmpl_r32_imm8     
  movq %r13, 0x8(%rcx)         #  81    0xc9d1e  4      OPC=movq_m64_r64      
  movq %rax, (%rcx)            #  82    0xc9d22  3      OPC=movq_m64_r64      
  je .L_c9fe0                  #  83    0xc9d25  6      OPC=je_label_1        
  leal -0x2(%r15), %eax        #  84    0xc9d2b  4      OPC=leal_r32_m16      
  movslq %r15d, %r15           #  85    0xc9d2f  3      OPC=movslq_r64_r32    
  movq %rcx, -0x38(%rbp)       #  86    0xc9d32  4      OPC=movq_m64_r64      
  shlq $0x3, %r15              #  87    0xc9d36  4      OPC=shlq_r64_imm8     
  leaq 0x8(,%rax,8), %rdx      #  88    0xc9d3a  8      OPC=leaq_r64_m16      
  leaq 0x8(%r15), %rdi         #  89    0xc9d42  4      OPC=leaq_r64_m16      
  subq %rdx, %r15              #  90    0xc9d46  3      OPC=subq_r64_r64      
  subq %rdx, %rdi              #  91    0xc9d49  3      OPC=subq_r64_r64      
  leaq (%rbx,%r15,1), %rsi     #  92    0xc9d4c  4      OPC=leaq_r64_m16      
  addq %rcx, %rdi              #  93    0xc9d50  3      OPC=addq_r64_r64      
  callq .__GI_memcpy           #  94    0xc9d53  5      OPC=callq_label       
  movq -0x38(%rbp), %rcx       #  95    0xc9d58  4      OPC=movq_r64_m64      
  movq (%rcx), %rdi            #  96    0xc9d5c  3      OPC=movq_r64_m64      
.L_c9d5d:                      #        0xc9d5f  0      OPC=<label>           
  movq %r12, %rdx              #  97    0xc9d5f  3      OPC=movq_r64_r64      
  movq %rcx, %rsi              #  98    0xc9d62  3      OPC=movq_r64_r64      
  callq .execve                #  99    0xc9d65  5      OPC=callq_label       
  movq %r14, %rdi              #  100   0xc9d6a  3      OPC=movq_r64_r64      
  callq .L_1f8c0               #  101   0xc9d6d  5      OPC=callq_label       
  jmpq .L_c9c8d                #  102   0xc9d72  5      OPC=jmpq_label_1      
  nop                          #  103   0xc9d77  1      OPC=nop               
  nop                          #  104   0xc9d78  1      OPC=nop               
  nop                          #  105   0xc9d79  1      OPC=nop               
.L_c9d78:                      #        0xc9d7a  0      OPC=<label>           
  leaq 0xc05dd(%rip), %rdi     #  106   0xc9d7a  7      OPC=leaq_r64_m16      
  callq .getenv                #  107   0xc9d81  5      OPC=callq_label       
  testq %rax, %rax             #  108   0xc9d86  3      OPC=testq_r64_r64     
  movq %rax, %r15              #  109   0xc9d89  3      OPC=movq_r64_r64      
  je .L_ca046                  #  110   0xc9d8c  6      OPC=je_label_1        
  movq %rax, %rdi              #  111   0xc9d92  3      OPC=movq_r64_r64      
  movl $0x1, %r14d             #  112   0xc9d95  6      OPC=movl_r32_imm32    
  callq .strlen                #  113   0xc9d9b  5      OPC=callq_label       
  movq %rax, %r8               #  114   0xc9da0  3      OPC=movq_r64_r64      
.L_c9da1:                      #        0xc9da3  0      OPC=<label>           
  movq %r13, %rdi              #  115   0xc9da3  3      OPC=movq_r64_r64      
  movq %r8, -0x38(%rbp)        #  116   0xc9da6  4      OPC=movq_m64_r64      
  callq .strlen                #  117   0xc9daa  5      OPC=callq_label       
  movq -0x38(%rbp), %r8        #  118   0xc9daf  4      OPC=movq_r64_m64      
  leaq 0x1(%rax), %rcx         #  119   0xc9db3  4      OPC=leaq_r64_m16      
  leaq (%rcx,%r8,1), %rdx      #  120   0xc9db7  4      OPC=leaq_r64_m16      
  leaq (%rdx,%r14,1), %rax     #  121   0xc9dbb  4      OPC=leaq_r64_m16      
  cmpq $0x1000, %rax           #  122   0xc9dbf  6      OPC=cmpq_rax_imm32    
  movq %rax, -0x48(%rbp)       #  123   0xc9dc5  4      OPC=movq_m64_r64      
  ja .L_c9fec                  #  124   0xc9dc9  6      OPC=ja_label_1        
.L_c9dcd:                      #        0xc9dcf  0      OPC=<label>           
  movq -0x48(%rbp), %rax       #  125   0xc9dcf  4      OPC=movq_r64_m64      
  movq $0x0, -0x58(%rbp)       #  126   0xc9dd3  8      OPC=movq_m64_imm32    
  leaq 0x1e(%rax), %rsi        #  127   0xc9ddb  4      OPC=leaq_r64_m16      
  andq $0xf0, %rsi             #  128   0xc9ddf  4      OPC=andq_r64_imm8     
  subq %rsi, %rsp              #  129   0xc9de3  3      OPC=subq_r64_r64      
  leaq 0xf(%rsp), %r14         #  130   0xc9de6  5      OPC=leaq_r64_m16      
  andq $0xf0, %r14             #  131   0xc9deb  4      OPC=andq_r64_imm8     
.L_c9ded:                      #        0xc9def  0      OPC=<label>           
  testq %r15, %r15             #  132   0xc9def  3      OPC=testq_r64_r64     
  je .L_ca05d                  #  133   0xc9df2  6      OPC=je_label_1        
.L_c9df6:                      #        0xc9df8  0      OPC=<label>           
  leaq 0x1(%r14,%r8,1), %rdi   #  134   0xc9df8  5      OPC=leaq_r64_m16      
  movq %rcx, %rdx              #  135   0xc9dfd  3      OPC=movq_r64_r64      
  movq %r13, %rsi              #  136   0xc9e00  3      OPC=movq_r64_r64      
  callq .__GI_memcpy           #  137   0xc9e03  5      OPC=callq_label       
  movb $0x0, -0x50(%rbp)       #  138   0xc9e08  4      OPC=movb_m8_imm8      
  movq %rax, -0x38(%rbp)       #  139   0xc9e0c  4      OPC=movq_m64_r64      
  movb $0x2f, -0x1(%rax)       #  140   0xc9e10  4      OPC=movb_m8_imm8      
  movq $0x0, -0x60(%rbp)       #  141   0xc9e14  8      OPC=movq_m64_imm32    
  movq $0x0, -0x40(%rbp)       #  142   0xc9e1c  8      OPC=movq_m64_imm32    
.L_c9e22:                      #        0xc9e24  0      OPC=<label>           
  movl $0x3a, %esi             #  143   0xc9e24  5      OPC=movl_r32_imm32    
  movq %r15, %rdi              #  144   0xc9e29  3      OPC=movq_r64_r64      
  callq .strchrnul             #  145   0xc9e2c  5      OPC=callq_label       
  movq %rax, %r13              #  146   0xc9e31  3      OPC=movq_r64_r64      
  movq -0x38(%rbp), %rax       #  147   0xc9e34  4      OPC=movq_r64_m64      
  cmpq %r13, %r15              #  148   0xc9e38  3      OPC=cmpq_r64_r64      
  movq %rax, %r14              #  149   0xc9e3b  3      OPC=movq_r64_r64      
  je .L_c9e58                  #  150   0xc9e3e  2      OPC=je_label          
  movq %r13, %rdx              #  151   0xc9e40  3      OPC=movq_r64_r64      
  movq %r15, %rsi              #  152   0xc9e43  3      OPC=movq_r64_r64      
  subq %r15, %rdx              #  153   0xc9e46  3      OPC=subq_r64_r64      
  movq %rdx, %rdi              #  154   0xc9e49  3      OPC=movq_r64_r64      
  notq %rdi                    #  155   0xc9e4c  3      OPC=notq_r64          
  addq %rax, %rdi              #  156   0xc9e4f  3      OPC=addq_r64_r64      
  callq .__GI_memcpy           #  157   0xc9e52  5      OPC=callq_label       
  movq %rax, %r14              #  158   0xc9e57  3      OPC=movq_r64_r64      
.L_c9e58:                      #        0xc9e5a  0      OPC=<label>           
  movq %r12, %rdx              #  159   0xc9e5a  3      OPC=movq_r64_r64      
  movq %rbx, %rsi              #  160   0xc9e5d  3      OPC=movq_r64_r64      
  movq %r14, %rdi              #  161   0xc9e60  3      OPC=movq_r64_r64      
  callq .execve                #  162   0xc9e63  5      OPC=callq_label       
  movq 0x2f7013(%rip), %rax    #  163   0xc9e68  7      OPC=movq_r64_m64      
  movl (%rax), %edx            #  164   0xc9e6f  2      OPC=movl_r32_m32      
  nop                          #  165   0xc9e71  1      OPC=nop               
  cmpl $0x8, %edx              #  166   0xc9e72  3      OPC=cmpl_r32_imm8     
  je .L_c9ee0                  #  167   0xc9e75  2      OPC=je_label          
.L_c9e75:                      #        0xc9e77  0      OPC=<label>           
  cmpl $0x14, %edx             #  168   0xc9e77  3      OPC=cmpl_r32_imm8     
  jg .L_c9ed0                  #  169   0xc9e7a  2      OPC=jg_label          
  cmpl $0x13, %edx             #  170   0xc9e7c  3      OPC=cmpl_r32_imm8     
  jge .L_c9e91                 #  171   0xc9e7f  2      OPC=jge_label         
  cmpl $0x2, %edx              #  172   0xc9e81  3      OPC=cmpl_r32_imm8     
  je .L_c9e91                  #  173   0xc9e84  2      OPC=je_label          
  cmpl $0xd, %edx              #  174   0xc9e86  3      OPC=cmpl_r32_imm8     
  jne .L_c9c8d                 #  175   0xc9e89  6      OPC=jne_label_1       
  movb $0x1, -0x50(%rbp)       #  176   0xc9e8f  4      OPC=movb_m8_imm8      
.L_c9e91:                      #        0xc9e93  0      OPC=<label>           
  cmpb $0x0, (%r13)            #  177   0xc9e93  5      OPC=cmpb_m8_imm8      
  leaq 0x1(%r13), %r15         #  178   0xc9e98  4      OPC=leaq_r64_m16      
  jne .L_c9e22                 #  179   0xc9e9c  2      OPC=jne_label         
  cmpb $0x0, -0x50(%rbp)       #  180   0xc9e9e  4      OPC=cmpb_m8_imm8      
  je .L_c9eb0                  #  181   0xc9ea2  2      OPC=je_label          
  movq 0x2f6fd7(%rip), %rax    #  182   0xc9ea4  7      OPC=movq_r64_m64      
  movl $0xd, (%rax)            #  183   0xc9eab  6      OPC=movl_m32_imm32    
  nop                          #  184   0xc9eb1  1      OPC=nop               
.L_c9eb0:                      #        0xc9eb2  0      OPC=<label>           
  movq -0x60(%rbp), %rdi       #  185   0xc9eb2  4      OPC=movq_r64_m64      
  callq .L_1f8c0               #  186   0xc9eb6  5      OPC=callq_label       
  movq -0x58(%rbp), %rdi       #  187   0xc9ebb  4      OPC=movq_r64_m64      
  callq .L_1f8c0               #  188   0xc9ebf  5      OPC=callq_label       
  jmpq .L_c9c8d                #  189   0xc9ec4  5      OPC=jmpq_label_1      
  nop                          #  190   0xc9ec9  1      OPC=nop               
  nop                          #  191   0xc9eca  1      OPC=nop               
  nop                          #  192   0xc9ecb  1      OPC=nop               
  nop                          #  193   0xc9ecc  1      OPC=nop               
  nop                          #  194   0xc9ecd  1      OPC=nop               
  nop                          #  195   0xc9ece  1      OPC=nop               
  nop                          #  196   0xc9ecf  1      OPC=nop               
  nop                          #  197   0xc9ed0  1      OPC=nop               
  nop                          #  198   0xc9ed1  1      OPC=nop               
.L_c9ed0:                      #        0xc9ed2  0      OPC=<label>           
  cmpl $0x6e, %edx             #  199   0xc9ed2  3      OPC=cmpl_r32_imm8     
  je .L_c9e91                  #  200   0xc9ed5  2      OPC=je_label          
  cmpl $0x74, %edx             #  201   0xc9ed7  3      OPC=cmpl_r32_imm8     
  jne .L_c9c8d                 #  202   0xc9eda  6      OPC=jne_label_1       
  jmpq .L_c9e91                #  203   0xc9ee0  2      OPC=jmpq_label        
.L_c9ee0:                      #        0xc9ee2  0      OPC=<label>           
  movq -0x40(%rbp), %rax       #  204   0xc9ee2  4      OPC=movq_r64_m64      
  testq %rax, %rax             #  205   0xc9ee6  3      OPC=testq_r64_r64     
  je .L_c9f07                  #  206   0xc9ee9  2      OPC=je_label          
  movq (%rax), %rdi            #  207   0xc9eeb  3      OPC=movq_r64_m64      
.L_c9eec:                      #        0xc9eee  0      OPC=<label>           
  movq -0x40(%rbp), %rsi       #  208   0xc9eee  4      OPC=movq_r64_m64      
  movq %r12, %rdx              #  209   0xc9ef2  3      OPC=movq_r64_r64      
  callq .execve                #  210   0xc9ef5  5      OPC=callq_label       
  movq 0x2f6f81(%rip), %rax    #  211   0xc9efa  7      OPC=movq_r64_m64      
  movl (%rax), %edx            #  212   0xc9f01  2      OPC=movl_r32_m32      
  nop                          #  213   0xc9f03  1      OPC=nop               
  jmpq .L_c9e75                #  214   0xc9f04  5      OPC=jmpq_label_1      
.L_c9f07:                      #        0xc9f09  0      OPC=<label>           
  movq %rbx, %rax              #  215   0xc9f09  3      OPC=movq_r64_r64      
  xorl %edx, %edx              #  216   0xc9f0c  2      OPC=xorl_r32_r32      
  jmpq .L_c9f12                #  217   0xc9f0e  2      OPC=jmpq_label        
  xchgw %ax, %ax               #  218   0xc9f10  2      OPC=xchgw_ax_r16      
.L_c9f10:                      #        0xc9f12  0      OPC=<label>           
  movl %ecx, %edx              #  219   0xc9f12  2      OPC=movl_r32_r32      
.L_c9f12:                      #        0xc9f14  0      OPC=<label>           
  addq $0x8, %rax              #  220   0xc9f14  4      OPC=addq_r64_imm8     
  leal 0x1(%rdx), %ecx         #  221   0xc9f18  3      OPC=leal_r32_m16      
  cmpq $0x0, -0x8(%rax)        #  222   0xc9f1b  5      OPC=cmpq_m64_imm8     
  jne .L_c9f10                 #  223   0xc9f20  2      OPC=jne_label         
  leal 0x2(%rdx), %r15d        #  224   0xc9f22  4      OPC=leal_r32_m16      
  movq -0x48(%rbp), %rax       #  225   0xc9f26  4      OPC=movq_r64_m64      
  movslq %r15d, %r15           #  226   0xc9f2a  3      OPC=movslq_r64_r32    
  shlq $0x3, %r15              #  227   0xc9f2d  4      OPC=shlq_r64_imm8     
  leaq (%r15,%rax,1), %rdi     #  228   0xc9f31  4      OPC=leaq_r64_m16      
  cmpq $0x1000, %rdi           #  229   0xc9f35  7      OPC=cmpq_r64_imm32    
  ja .L_ca089                  #  230   0xc9f3c  6      OPC=ja_label_1        
.L_c9f40:                      #        0xc9f42  0      OPC=<label>           
  leaq 0x1e(%r15), %rax        #  231   0xc9f42  4      OPC=leaq_r64_m16      
  movl $0x10, %esi             #  232   0xc9f46  5      OPC=movl_r32_imm32    
  xorl %edx, %edx              #  233   0xc9f4b  2      OPC=xorl_r32_r32      
  divq %rsi                    #  234   0xc9f4d  3      OPC=divq_r64          
  shlq $0x4, %rax              #  235   0xc9f50  4      OPC=shlq_r64_imm8     
  subq %rax, %rsp              #  236   0xc9f54  3      OPC=subq_r64_r64      
  leaq 0xf(%rsp), %r15         #  237   0xc9f57  5      OPC=leaq_r64_m16      
  andq $0xf0, %r15             #  238   0xc9f5c  4      OPC=andq_r64_imm8     
  movq %r15, -0x40(%rbp)       #  239   0xc9f60  4      OPC=movq_m64_r64      
  movq %r15, %rax              #  240   0xc9f64  3      OPC=movq_r64_r64      
.L_c9f65:                      #        0xc9f67  0      OPC=<label>           
  leaq 0xc07d6(%rip), %rsi     #  241   0xc9f67  7      OPC=leaq_r64_m16      
  cmpl $0x1, %ecx              #  242   0xc9f6e  3      OPC=cmpl_r32_imm8     
  movq %r14, 0x8(%rax)         #  243   0xc9f71  4      OPC=movq_m64_r64      
  movq %rsi, (%rax)            #  244   0xc9f75  3      OPC=movq_m64_r64      
  movq %rax, %rsi              #  245   0xc9f78  3      OPC=movq_r64_r64      
  je .L_ca0c0                  #  246   0xc9f7b  6      OPC=je_label_1        
  leal -0x2(%rcx), %eax        #  247   0xc9f81  3      OPC=leal_r32_m16      
  movq %rsi, %r14              #  248   0xc9f84  3      OPC=movq_r64_r64      
  leaq 0x8(,%rax,8), %rdx      #  249   0xc9f87  8      OPC=leaq_r64_m16      
  movslq %ecx, %rax            #  250   0xc9f8f  3      OPC=movslq_r64_r32    
  movq %rsi, %rcx              #  251   0xc9f92  3      OPC=movq_r64_r64      
  shlq $0x3, %rax              #  252   0xc9f95  4      OPC=shlq_r64_imm8     
  subq %rdx, %rcx              #  253   0xc9f99  3      OPC=subq_r64_r64      
  leaq 0x8(%rcx,%rax,1), %rdi  #  254   0xc9f9c  5      OPC=leaq_r64_m16      
  subq %rdx, %rax              #  255   0xc9fa1  3      OPC=subq_r64_r64      
  leaq (%rbx,%rax,1), %rsi     #  256   0xc9fa4  4      OPC=leaq_r64_m16      
  callq .__GI_memcpy           #  257   0xc9fa8  5      OPC=callq_label       
  movq (%r14), %rdi            #  258   0xc9fad  3      OPC=movq_r64_m64      
  jmpq .L_c9eec                #  259   0xc9fb0  5      OPC=jmpq_label_1      
.L_c9fb3:                      #        0xc9fb5  0      OPC=<label>           
  movq %r14, %rdi              #  260   0xc9fb5  3      OPC=movq_r64_r64      
  callq .__libc_alloca_cutoff  #  261   0xc9fb8  5      OPC=callq_label       
  testl %eax, %eax             #  262   0xc9fbd  2      OPC=testl_r32_r32     
  jne .L_c9cfa                 #  263   0xc9fbf  6      OPC=jne_label_1       
  movq %r14, %rdi              #  264   0xc9fc5  3      OPC=movq_r64_r64      
  callq .memalign_plt          #  265   0xc9fc8  5      OPC=callq_label       
  testq %rax, %rax             #  266   0xc9fcd  3      OPC=testq_r64_r64     
  movq %rax, %r14              #  267   0xc9fd0  3      OPC=movq_r64_r64      
  movq %rax, %rcx              #  268   0xc9fd3  3      OPC=movq_r64_r64      
  jne .L_c9d11                 #  269   0xc9fd6  6      OPC=jne_label_1       
  jmpq .L_c9c8d                #  270   0xc9fdc  5      OPC=jmpq_label_1      
  nop                          #  271   0xc9fe1  1      OPC=nop               
.L_c9fe0:                      #        0xc9fe2  0      OPC=<label>           
  leaq 0xc075b(%rip), %rdi     #  272   0xc9fe2  7      OPC=leaq_r64_m16      
  jmpq .L_c9d5d                #  273   0xc9fe9  5      OPC=jmpq_label_1      
.L_c9fec:                      #        0xc9fee  0      OPC=<label>           
  movq %rax, %rdi              #  274   0xc9fee  3      OPC=movq_r64_r64      
  movq %rdx, -0x50(%rbp)       #  275   0xc9ff1  4      OPC=movq_m64_r64      
  movq %rcx, -0x40(%rbp)       #  276   0xc9ff5  4      OPC=movq_m64_r64      
  callq .__libc_alloca_cutoff  #  277   0xc9ff9  5      OPC=callq_label       
  testl %eax, %eax             #  278   0xc9ffe  2      OPC=testl_r32_r32     
  movq -0x38(%rbp), %r8        #  279   0xca000  4      OPC=movq_r64_m64      
  movq -0x40(%rbp), %rcx       #  280   0xca004  4      OPC=movq_r64_m64      
  movq -0x50(%rbp), %rdx       #  281   0xca008  4      OPC=movq_r64_m64      
  jne .L_c9dcd                 #  282   0xca00c  6      OPC=jne_label_1       
  movq -0x48(%rbp), %rdi       #  283   0xca012  4      OPC=movq_r64_m64      
  movq %rdx, -0x50(%rbp)       #  284   0xca016  4      OPC=movq_m64_r64      
  movq %rcx, -0x40(%rbp)       #  285   0xca01a  4      OPC=movq_m64_r64      
  movq %r8, -0x38(%rbp)        #  286   0xca01e  4      OPC=movq_m64_r64      
  callq .memalign_plt          #  287   0xca022  5      OPC=callq_label       
  testq %rax, %rax             #  288   0xca027  3      OPC=testq_r64_r64     
  movq %rax, %r14              #  289   0xca02a  3      OPC=movq_r64_r64      
  je .L_c9c8d                  #  290   0xca02d  6      OPC=je_label_1        
  movq %rax, -0x58(%rbp)       #  291   0xca033  4      OPC=movq_m64_r64      
  movq -0x38(%rbp), %r8        #  292   0xca037  4      OPC=movq_r64_m64      
  movq -0x40(%rbp), %rcx       #  293   0xca03b  4      OPC=movq_r64_m64      
  movq -0x50(%rbp), %rdx       #  294   0xca03f  4      OPC=movq_r64_m64      
  jmpq .L_c9ded                #  295   0xca043  5      OPC=jmpq_label_1      
.L_ca046:                      #        0xca048  0      OPC=<label>           
  xorl %edx, %edx              #  296   0xca048  2      OPC=xorl_r32_r32      
  xorl %esi, %esi              #  297   0xca04a  2      OPC=xorl_r32_r32      
  xorl %edi, %edi              #  298   0xca04c  2      OPC=xorl_r32_r32      
  callq .confstr               #  299   0xca04e  5      OPC=callq_label       
  movq %rax, %r8               #  300   0xca053  3      OPC=movq_r64_r64      
  leaq 0x2(%rax), %r14         #  301   0xca056  4      OPC=leaq_r64_m16      
  jmpq .L_c9da1                #  302   0xca05a  5      OPC=jmpq_label_1      
.L_ca05d:                      #        0xca05f  0      OPC=<label>           
  leaq 0x1(%r14,%rdx,1), %r15  #  303   0xca05f  5      OPC=leaq_r64_m16      
  xorl %edi, %edi              #  304   0xca064  2      OPC=xorl_r32_r32      
  movq %r8, %rdx               #  305   0xca066  3      OPC=movq_r64_r64      
  movq %rcx, -0x40(%rbp)       #  306   0xca069  4      OPC=movq_m64_r64      
  movq %r8, -0x38(%rbp)        #  307   0xca06d  4      OPC=movq_m64_r64      
  leaq 0x1(%r15), %rsi         #  308   0xca071  4      OPC=leaq_r64_m16      
  movb $0x3a, (%r15)           #  309   0xca075  4      OPC=movb_m8_imm8      
  callq .confstr               #  310   0xca079  5      OPC=callq_label       
  movq -0x40(%rbp), %rcx       #  311   0xca07e  4      OPC=movq_r64_m64      
  movq -0x38(%rbp), %r8        #  312   0xca082  4      OPC=movq_r64_m64      
  jmpq .L_c9df6                #  313   0xca086  5      OPC=jmpq_label_1      
.L_ca089:                      #        0xca08b  0      OPC=<label>           
  movl %ecx, -0x40(%rbp)       #  314   0xca08b  3      OPC=movl_m32_r32      
  callq .__libc_alloca_cutoff  #  315   0xca08e  5      OPC=callq_label       
  testl %eax, %eax             #  316   0xca093  2      OPC=testl_r32_r32     
  movl -0x40(%rbp), %ecx       #  317   0xca095  3      OPC=movl_r32_m32      
  jne .L_c9f40                 #  318   0xca098  6      OPC=jne_label_1       
  movq %r15, %rdi              #  319   0xca09e  3      OPC=movq_r64_r64      
  movl %ecx, -0x64(%rbp)       #  320   0xca0a1  3      OPC=movl_m32_r32      
  callq .memalign_plt          #  321   0xca0a4  5      OPC=callq_label       
  testq %rax, %rax             #  322   0xca0a9  3      OPC=testq_r64_r64     
  movq %rax, -0x40(%rbp)       #  323   0xca0ac  4      OPC=movq_m64_r64      
  je .L_ca0cc                  #  324   0xca0b0  2      OPC=je_label          
  movq %rax, -0x60(%rbp)       #  325   0xca0b2  4      OPC=movq_m64_r64      
  movl -0x64(%rbp), %ecx       #  326   0xca0b6  3      OPC=movl_r32_m32      
  movq -0x40(%rbp), %rax       #  327   0xca0b9  4      OPC=movq_r64_m64      
  jmpq .L_c9f65                #  328   0xca0bd  5      OPC=jmpq_label_1      
.L_ca0c0:                      #        0xca0c2  0      OPC=<label>           
  leaq 0xc067b(%rip), %rdi     #  329   0xca0c2  7      OPC=leaq_r64_m16      
  jmpq .L_c9eec                #  330   0xca0c9  5      OPC=jmpq_label_1      
.L_ca0cc:                      #        0xca0ce  0      OPC=<label>           
  movq $0x0, -0x60(%rbp)       #  331   0xca0ce  8      OPC=movq_m64_imm32    
  jmpq .L_c9eb0                #  332   0xca0d6  5      OPC=jmpq_label_1      
  nop                          #  333   0xca0db  1      OPC=nop               
  nop                          #  334   0xca0dc  1      OPC=nop               
  nop                          #  335   0xca0dd  1      OPC=nop               
  nop                          #  336   0xca0de  1      OPC=nop               
  nop                          #  337   0xca0df  1      OPC=nop               
  nop                          #  338   0xca0e0  1      OPC=nop               
  nop                          #  339   0xca0e1  1      OPC=nop               
                                                                              
.size execvpe, .-execvpe

