  .text
  .globl malloc_info
  .type malloc_info, @function

#! file-offset 0x855d0
#! rip-offset  0x855d0
#! capacity    1184 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
.malloc_info:                       #        0x855d0  0      OPC=<label>           
  testl %edi, %edi                  #  1     0x855d0  2      OPC=testl_r32_r32     
  movl $0x16, %eax                  #  2     0x855d2  5      OPC=movl_r32_imm32    
  je .L_855e0                       #  3     0x855d7  2      OPC=je_label          
  retq                              #  4     0x855d9  1      OPC=retq              
  nop                               #  5     0x855da  1      OPC=nop               
  nop                               #  6     0x855db  1      OPC=nop               
  nop                               #  7     0x855dc  1      OPC=nop               
  nop                               #  8     0x855dd  1      OPC=nop               
  nop                               #  9     0x855de  1      OPC=nop               
  nop                               #  10    0x855df  1      OPC=nop               
.L_855e0:                           #        0x855e0  0      OPC=<label>           
  pushq %r15                        #  11    0x855e0  2      OPC=pushq_r64_1       
  pushq %r14                        #  12    0x855e2  2      OPC=pushq_r64_1       
  pushq %r13                        #  13    0x855e4  2      OPC=pushq_r64_1       
  pushq %r12                        #  14    0x855e6  2      OPC=pushq_r64_1       
  pushq %rbp                        #  15    0x855e8  1      OPC=pushq_r64_1       
  pushq %rbx                        #  16    0x855e9  1      OPC=pushq_r64_1       
  movq %rsi, %rbx                   #  17    0x855ea  3      OPC=movq_r64_r64      
  subq $0x1198, %rsp                #  18    0x855ed  7      OPC=subq_r64_imm32    
  movl 0x33bbca(%rip), %ecx         #  19    0x855f4  6      OPC=movl_r32_m32      
  testl %ecx, %ecx                  #  20    0x855fa  2      OPC=testl_r32_r32     
  js .L_85a65                       #  21    0x855fc  6      OPC=js_label_1        
.L_85602:                           #        0x85602  0      OPC=<label>           
  leaq 0x1062ce(%rip), %rdi         #  22    0x85602  7      OPC=leaq_r64_m16      
  movq %rbx, %rsi                   #  23    0x85609  3      OPC=movq_r64_r64      
  leaq 0x33c62d(%rip), %r13         #  24    0x8560c  7      OPC=leaq_r64_m16      
  callq ._IO_fputs                  #  25    0x85613  5      OPC=callq_label       
  leaq 0x70(%rsp), %rax             #  26    0x85618  5      OPC=leaq_r64_m16      
  movq $0x0, 0x10(%rsp)             #  27    0x8561d  9      OPC=movq_m64_imm32    
  movq $0x0, 0x8(%rsp)              #  28    0x85626  9      OPC=movq_m64_imm32    
  movq $0x0, 0x48(%rsp)             #  29    0x8562f  9      OPC=movq_m64_imm32    
  movq $0x0, 0x40(%rsp)             #  30    0x85638  9      OPC=movq_m64_imm32    
  xorl %edx, %edx                   #  31    0x85641  2      OPC=xorl_r32_r32      
  movq %rax, 0x18(%rsp)             #  32    0x85643  5      OPC=movq_m64_r64      
  leaq 0x1b8(%rsp), %rax            #  33    0x85648  8      OPC=leaq_r64_m16      
  movq $0x0, 0x38(%rsp)             #  34    0x85650  9      OPC=movq_m64_imm32    
  movq $0x0, 0x30(%rsp)             #  35    0x85659  9      OPC=movq_m64_imm32    
  movq $0x0, 0x28(%rsp)             #  36    0x85662  9      OPC=movq_m64_imm32    
  movq $0x0, 0x20(%rsp)             #  37    0x8566b  9      OPC=movq_m64_imm32    
  movq %rax, 0x68(%rsp)             #  38    0x85674  5      OPC=movq_m64_r64      
.L_85679:                           #        0x85679  0      OPC=<label>           
  leal 0x1(%rdx), %eax              #  39    0x85679  3      OPC=leal_r32_m16      
  leaq 0x10626a(%rip), %rsi         #  40    0x8567c  7      OPC=leaq_r64_m16      
  movq %rbx, %rdi                   #  41    0x85683  3      OPC=movq_r64_r64      
  movl %eax, 0x64(%rsp)             #  42    0x85686  4      OPC=movl_m32_r32      
  xorl %eax, %eax                   #  43    0x8568a  2      OPC=xorl_r32_r32      
  callq .fprintf                    #  44    0x8568c  5      OPC=callq_label       
  movl $0x1, %esi                   #  45    0x85691  5      OPC=movl_r32_imm32    
  xorl %eax, %eax                   #  46    0x85696  2      OPC=xorl_r32_r32      
  cmpl $0x0, 0x341561(%rip)         #  47    0x85698  7      OPC=cmpl_m32_imm8     
  je .L_856ab                       #  48    0x8569f  2      OPC=je_label          
  lock                              #  49    0x856a1  1      OPC=lock              
  cmpxchgl %esi, (%r13)             #  50    0x856a2  5      OPC=cmpxchgl_m32_r32  
  nop                               #  51    0x856a7  1      OPC=nop               
  jne .L_856b2                      #  52    0x856a8  2      OPC=jne_label         
  jmpq .L_856c9                     #  53    0x856aa  2      OPC=jmpq_label        
.L_856ab:                           #        0x856ac  0      OPC=<label>           
  cmpxchgl %esi, (%r13)             #  54    0x856ac  5      OPC=cmpxchgl_m32_r32  
  je .L_856c9                       #  55    0x856b1  2      OPC=je_label          
.L_856b2:                           #        0x856b3  0      OPC=<label>           
  leaq (%r13), %rdi                 #  56    0x856b3  4      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  57    0x856b7  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  58    0x856be  5      OPC=callq_label       
  addq $0x80, %rsp                  #  59    0x856c3  7      OPC=addq_r64_imm32    
.L_856c9:                           #        0x856ca  0      OPC=<label>           
  movq 0x18(%rsp), %rax             #  60    0x856ca  5      OPC=movq_r64_m64      
  movq 0x68(%rsp), %r10             #  61    0x856cf  5      OPC=movq_r64_m64      
  leaq 0x8(%r13), %rdi              #  62    0x856d4  4      OPC=leaq_r64_m16      
  xorl %r9d, %r9d                   #  63    0x856d8  3      OPC=xorl_r32_r32      
  xorl %r8d, %r8d                   #  64    0x856db  3      OPC=xorl_r32_r32      
  leaq 0x8(%rax), %rcx              #  65    0x856de  4      OPC=leaq_r64_m16      
  nop                               #  66    0x856e2  1      OPC=nop               
  nop                               #  67    0x856e3  1      OPC=nop               
  nop                               #  68    0x856e4  1      OPC=nop               
  nop                               #  69    0x856e5  1      OPC=nop               
  nop                               #  70    0x856e6  1      OPC=nop               
  nop                               #  71    0x856e7  1      OPC=nop               
  nop                               #  72    0x856e8  1      OPC=nop               
.L_856e8:                           #        0x856e9  0      OPC=<label>           
  movq (%rdi), %rax                 #  73    0x856e9  3      OPC=movq_r64_m64      
  testq %rax, %rax                  #  74    0x856ec  3      OPC=testq_r64_r64     
  je .L_859e8                       #  75    0x856ef  6      OPC=je_label_1        
  movq 0x8(%rax), %rsi              #  76    0x856f5  4      OPC=movq_r64_m64      
  xorl %edx, %edx                   #  77    0x856f9  2      OPC=xorl_r32_r32      
  andq $0xf8, %rsi                  #  78    0x856fb  4      OPC=andq_r64_imm8     
  xchgw %ax, %ax                    #  79    0x856ff  2      OPC=xchgw_ax_r16      
.L_85700:                           #        0x85701  0      OPC=<label>           
  movq 0x10(%rax), %rax             #  80    0x85701  4      OPC=movq_r64_m64      
  addq $0x1, %rdx                   #  81    0x85705  4      OPC=addq_r64_imm8     
  testq %rax, %rax                  #  82    0x85709  3      OPC=testq_r64_r64     
  jne .L_85700                      #  83    0x8570c  2      OPC=jne_label         
  movq %rdx, %rax                   #  84    0x8570e  3      OPC=movq_r64_r64      
  addq %rdx, %r8                    #  85    0x85711  3      OPC=addq_r64_r64      
  movq %rsi, (%rcx)                 #  86    0x85714  3      OPC=movq_m64_r64      
  imulq %rsi, %rax                  #  87    0x85717  4      OPC=imulq_r64_r64     
  movq %rdx, 0x10(%rcx)             #  88    0x8571b  4      OPC=movq_m64_r64      
  addq %rax, %r9                    #  89    0x8571f  3      OPC=addq_r64_r64      
  leaq -0xf(%rsi), %rax             #  90    0x85722  4      OPC=leaq_r64_m16      
  movq %rax, -0x8(%rcx)             #  91    0x85726  4      OPC=movq_m64_r64      
.L_85729:                           #        0x8572a  0      OPC=<label>           
  movq %rdx, %rax                   #  92    0x8572a  3      OPC=movq_r64_r64      
  addq $0x20, %rcx                  #  93    0x8572d  4      OPC=addq_r64_imm8     
  addq $0x8, %rdi                   #  94    0x85731  4      OPC=addq_r64_imm8     
  imulq -0x20(%rcx), %rax           #  95    0x85735  5      OPC=imulq_r64_m64     
  movq %rax, -0x18(%rcx)            #  96    0x8573a  4      OPC=movq_m64_r64      
  cmpq %r10, %rcx                   #  97    0x8573e  3      OPC=cmpq_r64_r64      
  jne .L_856e8                      #  98    0x85741  2      OPC=jne_label         
  movq 0x18(%rsp), %rax             #  99    0x85743  5      OPC=movq_r64_m64      
  leaq 0x58(%r13), %rdi             #  100   0x85748  4      OPC=leaq_r64_m16      
  leaq 0x1190(%rsp), %r11           #  101   0x8574c  8      OPC=leaq_r64_m16      
  movq %r8, 0x50(%rsp)              #  102   0x85754  5      OPC=movq_m64_r64      
  movq %r9, 0x58(%rsp)              #  103   0x85759  5      OPC=movq_m64_r64      
  xorl %r8d, %r8d                   #  104   0x8575e  3      OPC=xorl_r32_r32      
  xorl %r14d, %r14d                 #  105   0x85761  3      OPC=xorl_r32_r32      
  leaq 0x140(%rax), %r10            #  106   0x85764  7      OPC=leaq_r64_m16      
  nop                               #  107   0x8576b  1      OPC=nop               
  nop                               #  108   0x8576c  1      OPC=nop               
  nop                               #  109   0x8576d  1      OPC=nop               
  nop                               #  110   0x8576e  1      OPC=nop               
  nop                               #  111   0x8576f  1      OPC=nop               
  nop                               #  112   0x85770  1      OPC=nop               
.L_85770:                           #        0x85771  0      OPC=<label>           
  movq 0x10(%rdi), %rdx             #  113   0x85771  4      OPC=movq_r64_m64      
  pxor %xmm2, %xmm2                 #  114   0x85775  4      OPC=pxor_xmm_xmm      
  movdqa 0x10bcf0(%rip), %xmm1      #  115   0x85779  8      OPC=movdqa_xmm_m128   
  testq %rdx, %rdx                  #  116   0x85781  3      OPC=testq_r64_r64     
  movaps %xmm1, (%r10)              #  117   0x85784  4      OPC=movaps_m128_xmm   
  movaps %xmm2, 0x10(%r10)          #  118   0x85788  5      OPC=movaps_m128_xmm   
  je .L_85800                       #  119   0x8578d  2      OPC=je_label          
  cmpq %rdx, %rdi                   #  120   0x8578f  3      OPC=cmpq_r64_r64      
  je .L_85800                       #  121   0x85792  2      OPC=je_label          
  movq 0x18(%r10), %rax             #  122   0x85794  4      OPC=movq_r64_m64      
  movq 0x10(%r10), %rbp             #  123   0x85798  4      OPC=movq_r64_m64      
  xorl %ecx, %ecx                   #  124   0x8579c  2      OPC=xorl_r32_r32      
  movq (%r10), %rsi                 #  125   0x8579e  3      OPC=movq_r64_m64      
  leaq 0x1(%rax), %r9               #  126   0x857a1  4      OPC=leaq_r64_m16      
  jmpq .L_857b3                     #  127   0x857a5  2      OPC=jmpq_label        
  nop                               #  128   0x857a7  1      OPC=nop               
  nop                               #  129   0x857a8  1      OPC=nop               
  nop                               #  130   0x857a9  1      OPC=nop               
  nop                               #  131   0x857aa  1      OPC=nop               
  nop                               #  132   0x857ab  1      OPC=nop               
  nop                               #  133   0x857ac  1      OPC=nop               
  nop                               #  134   0x857ad  1      OPC=nop               
  nop                               #  135   0x857ae  1      OPC=nop               
  nop                               #  136   0x857af  1      OPC=nop               
  nop                               #  137   0x857b0  1      OPC=nop               
.L_857b0:                           #        0x857b1  0      OPC=<label>           
  movq %rax, %r9                    #  138   0x857b1  3      OPC=movq_r64_r64      
.L_857b3:                           #        0x857b4  0      OPC=<label>           
  movq 0x8(%rdx), %rax              #  139   0x857b4  4      OPC=movq_r64_m64      
  movq 0x10(%rdx), %rdx             #  140   0x857b8  4      OPC=movq_r64_m64      
  addq %rax, %rbp                   #  141   0x857bc  3      OPC=addq_r64_r64      
  cmpq %rax, %rsi                   #  142   0x857bf  3      OPC=cmpq_r64_r64      
  cmovaq %rax, %rsi                 #  143   0x857c2  4      OPC=cmovaq_r64_r64    
  cmpq %rax, %rcx                   #  144   0x857c6  3      OPC=cmpq_r64_r64      
  cmovbq %rax, %rcx                 #  145   0x857c9  4      OPC=cmovbq_r64_r64    
  cmpq %rdx, %rdi                   #  146   0x857cd  3      OPC=cmpq_r64_r64      
  leaq 0x1(%r9), %rax               #  147   0x857d0  4      OPC=leaq_r64_m16      
  jne .L_857b0                      #  148   0x857d4  2      OPC=jne_label         
  movq %rsi, (%rsp)                 #  149   0x857d6  4      OPC=movq_m64_r64      
  movq (%rsp), %xmm0                #  150   0x857da  5      OPC=movq_xmm_m64_1    
  movq %rcx, (%rsp)                 #  151   0x857df  4      OPC=movq_m64_r64      
  movhps (%rsp), %xmm0              #  152   0x857e3  4      OPC=movhps_xmm_m64    
  movq %rbp, (%rsp)                 #  153   0x857e7  4      OPC=movq_m64_r64      
  movaps %xmm0, (%r10)              #  154   0x857eb  4      OPC=movaps_m128_xmm   
  movq (%rsp), %xmm0                #  155   0x857ef  5      OPC=movq_xmm_m64_1    
  movq %r9, (%rsp)                  #  156   0x857f4  4      OPC=movq_m64_r64      
  movhps (%rsp), %xmm0              #  157   0x857f8  4      OPC=movhps_xmm_m64    
  movaps %xmm0, 0x10(%r10)          #  158   0x857fc  5      OPC=movaps_m128_xmm   
.L_85800:                           #        0x85801  0      OPC=<label>           
  movq 0x18(%r10), %rax             #  159   0x85801  4      OPC=movq_r64_m64      
  testq %rax, %rax                  #  160   0x85805  3      OPC=testq_r64_r64     
  jne .L_85810                      #  161   0x85808  2      OPC=jne_label         
  movq $0x0, (%r10)                 #  162   0x8580a  7      OPC=movq_m64_imm32    
.L_85810:                           #        0x85811  0      OPC=<label>           
  movq %r8, %r15                    #  163   0x85811  3      OPC=movq_r64_r64      
  addq 0x10(%r10), %r15             #  164   0x85814  4      OPC=addq_r64_m64      
  addq $0x20, %r10                  #  165   0x85818  4      OPC=addq_r64_imm8     
  addq %rax, %r14                   #  166   0x8581c  3      OPC=addq_r64_r64      
  addq $0x10, %rdi                  #  167   0x8581f  4      OPC=addq_r64_imm8     
  cmpq %r11, %r10                   #  168   0x85823  3      OPC=cmpq_r64_r64      
  movq %r15, %r8                    #  169   0x85826  3      OPC=movq_r64_r64      
  jne .L_85770                      #  170   0x85829  6      OPC=jne_label_1       
  cmpl $0x0, 0x3413cb(%rip)         #  171   0x8582f  7      OPC=cmpl_m32_imm8     
  je .L_85840                       #  172   0x85836  2      OPC=je_label          
  lock                              #  173   0x85838  1      OPC=lock              
  decl (%r13)                       #  174   0x85839  4      OPC=decl_m32          
  nop                               #  175   0x8583d  1      OPC=nop               
  jne .L_85846                      #  176   0x8583e  2      OPC=jne_label         
  jmpq .L_8585d                     #  177   0x85840  2      OPC=jmpq_label        
.L_85840:                           #        0x85842  0      OPC=<label>           
  decl (%r13)                       #  178   0x85842  4      OPC=decl_m32          
  je .L_8585d                       #  179   0x85846  2      OPC=je_label          
.L_85846:                           #        0x85848  0      OPC=<label>           
  leaq (%r13), %rdi                 #  180   0x85848  4      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  181   0x8584c  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  182   0x85853  5      OPC=callq_label       
  addq $0x80, %rsp                  #  183   0x85858  7      OPC=addq_r64_imm32    
.L_8585d:                           #        0x8585f  0      OPC=<label>           
  movq 0x18(%rsp), %rax             #  184   0x8585f  5      OPC=movq_r64_m64      
  movq 0x50(%rsp), %rdi             #  185   0x85864  5      OPC=movq_r64_m64      
  xorl %ebp, %ebp                   #  186   0x85869  2      OPC=xorl_r32_r32      
  addq %rdi, 0x28(%rsp)             #  187   0x8586b  5      OPC=addq_m64_r64      
  addq %r14, 0x20(%rsp)             #  188   0x85870  5      OPC=addq_m64_r64      
  movq 0x58(%rsp), %rdi             #  189   0x85875  5      OPC=movq_r64_m64      
  addq %r15, 0x30(%rsp)             #  190   0x8587a  5      OPC=addq_m64_r64      
  addq %rdi, 0x38(%rsp)             #  191   0x8587f  5      OPC=addq_m64_r64      
  leaq 0x18(%rax), %r12             #  192   0x85884  4      OPC=leaq_r64_m16      
  nop                               #  193   0x85888  1      OPC=nop               
  nop                               #  194   0x85889  1      OPC=nop               
  nop                               #  195   0x8588a  1      OPC=nop               
  nop                               #  196   0x8588b  1      OPC=nop               
  nop                               #  197   0x8588c  1      OPC=nop               
  nop                               #  198   0x8588d  1      OPC=nop               
  nop                               #  199   0x8588e  1      OPC=nop               
  nop                               #  200   0x8588f  1      OPC=nop               
  nop                               #  201   0x85890  1      OPC=nop               
  nop                               #  202   0x85891  1      OPC=nop               
.L_85890:                           #        0x85892  0      OPC=<label>           
  movq (%r12), %r9                  #  203   0x85892  4      OPC=movq_r64_m64      
  testq %r9, %r9                    #  204   0x85896  3      OPC=testq_r64_r64     
  je .L_858bf                       #  205   0x85899  2      OPC=je_label          
  cmpq $0xa, %rbp                   #  206   0x8589b  4      OPC=cmpq_r64_imm8     
  je .L_858bf                       #  207   0x8589f  2      OPC=je_label          
  movq -0x10(%r12), %rcx            #  208   0x858a1  5      OPC=movq_r64_m64      
  movq -0x18(%r12), %rdx            #  209   0x858a6  5      OPC=movq_r64_m64      
  leaq 0x109a10(%rip), %rsi         #  210   0x858ab  7      OPC=leaq_r64_m16      
  movq -0x8(%r12), %r8              #  211   0x858b2  5      OPC=movq_r64_m64      
  movq %rbx, %rdi                   #  212   0x858b7  3      OPC=movq_r64_r64      
  xorl %eax, %eax                   #  213   0x858ba  2      OPC=xorl_r32_r32      
  callq .fprintf                    #  214   0x858bc  5      OPC=callq_label       
.L_858bf:                           #        0x858c1  0      OPC=<label>           
  addq $0x1, %rbp                   #  215   0x858c1  4      OPC=addq_r64_imm8     
  addq $0x20, %r12                  #  216   0x858c5  4      OPC=addq_r64_imm8     
  cmpq $0x89, %rbp                  #  217   0x858c9  7      OPC=cmpq_r64_imm32    
  jne .L_85890                      #  218   0x858d0  2      OPC=jne_label         
  movq 0x1c8(%rsp), %r9             #  219   0x858d2  8      OPC=movq_r64_m64      
  testq %r9, %r9                    #  220   0x858da  3      OPC=testq_r64_r64     
  jne .L_85a06                      #  221   0x858dd  6      OPC=jne_label_1       
.L_858e1:                           #        0x858e3  0      OPC=<label>           
  movq 0x880(%r13), %rax            #  222   0x858e3  7      OPC=movq_r64_m64      
  movq 0x888(%r13), %rdx            #  223   0x858ea  7      OPC=movq_r64_m64      
  leaq 0x109a52(%rip), %rsi         #  224   0x858f1  7      OPC=leaq_r64_m16      
  addq %rax, 0x40(%rsp)             #  225   0x858f8  5      OPC=addq_m64_r64      
  addq %rdx, 0x48(%rsp)             #  226   0x858fd  5      OPC=addq_m64_r64      
  movq %r15, %r9                    #  227   0x85902  3      OPC=movq_r64_r64      
  movq %r14, %r8                    #  228   0x85905  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                   #  229   0x85908  3      OPC=movq_r64_r64      
  pushq %rdx                        #  230   0x8590b  1      OPC=pushq_r64_1       
  pushq %rax                        #  231   0x8590c  1      OPC=pushq_r64_1       
  xorl %eax, %eax                   #  232   0x8590d  2      OPC=xorl_r32_r32      
  movq 0x68(%rsp), %rcx             #  233   0x8590f  5      OPC=movq_r64_m64      
  movq 0x60(%rsp), %rdx             #  234   0x85914  5      OPC=movq_r64_m64      
  callq .fprintf                    #  235   0x85919  5      OPC=callq_label       
  popq %rax                         #  236   0x8591e  1      OPC=popq_r64_1        
  leaq 0x33c31c(%rip), %rax         #  237   0x8591f  7      OPC=leaq_r64_m16      
  popq %rdx                         #  238   0x85926  1      OPC=popq_r64_1        
  cmpq %rax, %r13                   #  239   0x85927  3      OPC=cmpq_r64_r64      
  je .L_85a34                       #  240   0x8592a  6      OPC=je_label_1        
  movq 0x58(%r13), %rbp             #  241   0x85930  4      OPC=movq_r64_m64      
  leaq 0x109ab7(%rip), %rsi         #  242   0x85934  7      OPC=leaq_r64_m16      
  movq %rbx, %rdi                   #  243   0x8593b  3      OPC=movq_r64_r64      
  xorl %eax, %eax                   #  244   0x8593e  2      OPC=xorl_r32_r32      
  andq $0xfc000000, %rbp            #  245   0x85940  7      OPC=andq_r64_imm32    
  movq 0x18(%rbp), %rcx             #  246   0x85947  4      OPC=movq_r64_m64      
  movq 0x10(%rbp), %rdx             #  247   0x8594b  4      OPC=movq_r64_m64      
  callq .fprintf                    #  248   0x8594f  5      OPC=callq_label       
  movq 0x10(%rbp), %rdi             #  249   0x85954  4      OPC=movq_r64_m64      
  addq %rdi, 0x8(%rsp)              #  250   0x85958  5      OPC=addq_m64_r64      
  movq 0x18(%rbp), %rdi             #  251   0x8595d  4      OPC=movq_r64_m64      
  addq %rdi, 0x10(%rsp)             #  252   0x85961  5      OPC=addq_m64_r64      
.L_85964:                           #        0x85966  0      OPC=<label>           
  leaq 0x105f9a(%rip), %rdi         #  253   0x85966  7      OPC=leaq_r64_m16      
  movq %rbx, %rsi                   #  254   0x8596d  3      OPC=movq_r64_r64      
  callq ._IO_fputs                  #  255   0x85970  5      OPC=callq_label       
  movq 0x868(%r13), %r13            #  256   0x85975  7      OPC=movq_r64_m64      
  leaq 0x33c2bf(%rip), %rax         #  257   0x8597c  7      OPC=leaq_r64_m16      
  movl 0x64(%rsp), %edx             #  258   0x85983  4      OPC=movl_r32_m32      
  cmpq %rax, %r13                   #  259   0x85987  3      OPC=cmpq_r64_r64      
  jne .L_85679                      #  260   0x8598a  6      OPC=jne_label_1       
  movl 0x33b894(%rip), %eax         #  261   0x85990  6      OPC=movl_r32_m32      
  pushq 0x10(%rsp)                  #  262   0x85996  4      OPC=pushq_m64         
  leaq 0x109a99(%rip), %rsi         #  263   0x8599a  7      OPC=leaq_r64_m16      
  pushq 0x10(%rsp)                  #  264   0x859a1  4      OPC=pushq_m64         
  pushq 0x58(%rsp)                  #  265   0x859a5  4      OPC=pushq_m64         
  movq %rbx, %rdi                   #  266   0x859a9  3      OPC=movq_r64_r64      
  pushq 0x58(%rsp)                  #  267   0x859ac  4      OPC=pushq_m64         
  pushq 0x33b884(%rip)              #  268   0x859b0  6      OPC=pushq_m64         
  pushq %rax                        #  269   0x859b6  1      OPC=pushq_r64_1       
  movq 0x60(%rsp), %r9              #  270   0x859b7  5      OPC=movq_r64_m64      
  xorl %eax, %eax                   #  271   0x859bc  2      OPC=xorl_r32_r32      
  movq 0x50(%rsp), %r8              #  272   0x859be  5      OPC=movq_r64_m64      
  movq 0x68(%rsp), %rcx             #  273   0x859c3  5      OPC=movq_r64_m64      
  movq 0x58(%rsp), %rdx             #  274   0x859c8  5      OPC=movq_r64_m64      
  callq .fprintf                    #  275   0x859cd  5      OPC=callq_label       
  addq $0x11c8, %rsp                #  276   0x859d2  7      OPC=addq_r64_imm32    
  xorl %eax, %eax                   #  277   0x859d9  2      OPC=xorl_r32_r32      
  popq %rbx                         #  278   0x859db  1      OPC=popq_r64_1        
  popq %rbp                         #  279   0x859dc  1      OPC=popq_r64_1        
  popq %r12                         #  280   0x859dd  2      OPC=popq_r64_1        
  popq %r13                         #  281   0x859df  2      OPC=popq_r64_1        
  popq %r14                         #  282   0x859e1  2      OPC=popq_r64_1        
  popq %r15                         #  283   0x859e3  2      OPC=popq_r64_1        
  retq                              #  284   0x859e5  1      OPC=retq              
  nop                               #  285   0x859e6  1      OPC=nop               
  nop                               #  286   0x859e7  1      OPC=nop               
  nop                               #  287   0x859e8  1      OPC=nop               
  nop                               #  288   0x859e9  1      OPC=nop               
.L_859e8:                           #        0x859ea  0      OPC=<label>           
  movq $0x0, 0x10(%rcx)             #  289   0x859ea  8      OPC=movq_m64_imm32    
  movq $0x0, (%rcx)                 #  290   0x859f2  7      OPC=movq_m64_imm32    
  xorl %edx, %edx                   #  291   0x859f9  2      OPC=xorl_r32_r32      
  movq $0x0, -0x8(%rcx)             #  292   0x859fb  8      OPC=movq_m64_imm32    
  jmpq .L_85729                     #  293   0x85a03  5      OPC=jmpq_label_1      
.L_85a06:                           #        0x85a08  0      OPC=<label>           
  movq 0x1c0(%rsp), %r8             #  294   0x85a08  8      OPC=movq_r64_m64      
  movq 0x1b8(%rsp), %rcx            #  295   0x85a10  8      OPC=movq_r64_m64      
  leaq 0x1098eb(%rip), %rsi         #  296   0x85a18  7      OPC=leaq_r64_m16      
  movq 0x1b0(%rsp), %rdx            #  297   0x85a1f  8      OPC=movq_r64_m64      
  movq %rbx, %rdi                   #  298   0x85a27  3      OPC=movq_r64_r64      
  xorl %eax, %eax                   #  299   0x85a2a  2      OPC=xorl_r32_r32      
  callq .fprintf                    #  300   0x85a2c  5      OPC=callq_label       
  jmpq .L_858e1                     #  301   0x85a31  5      OPC=jmpq_label_1      
.L_85a34:                           #        0x85a36  0      OPC=<label>           
  movq 0x880(%r13), %rdx            #  302   0x85a36  7      OPC=movq_r64_m64      
  leaq 0x1099ae(%rip), %rsi         #  303   0x85a3d  7      OPC=leaq_r64_m16      
  movq %rbx, %rdi                   #  304   0x85a44  3      OPC=movq_r64_r64      
  xorl %eax, %eax                   #  305   0x85a47  2      OPC=xorl_r32_r32      
  movq %rdx, %rcx                   #  306   0x85a49  3      OPC=movq_r64_r64      
  callq .fprintf                    #  307   0x85a4c  5      OPC=callq_label       
  movq 0x880(%r13), %rax            #  308   0x85a51  7      OPC=movq_r64_m64      
  addq %rax, 0x8(%rsp)              #  309   0x85a58  5      OPC=addq_m64_r64      
  addq %rax, 0x10(%rsp)             #  310   0x85a5d  5      OPC=addq_m64_r64      
  jmpq .L_85964                     #  311   0x85a62  5      OPC=jmpq_label_1      
.L_85a65:                           #        0x85a67  0      OPC=<label>           
  callq .ptmalloc_init_part_7       #  312   0x85a67  5      OPC=callq_label       
  jmpq .L_85602                     #  313   0x85a6c  5      OPC=jmpq_label_1      
  nop                               #  314   0x85a71  1      OPC=nop               
                                                                                   
.size malloc_info, .-malloc_info

