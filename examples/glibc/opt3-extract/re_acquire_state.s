  .text
  .globl re_acquire_state
  .type re_acquire_state, @function

#! file-offset 0xd8300
#! rip-offset  0xd8300
#! capacity    1104 bytes

# Text                       #  Line  RIP      Bytes  Opcode               
.re_acquire_state:           #        0xd8300  0      OPC=<label>          
  pushq %r15                 #  1     0xd8300  2      OPC=pushq_r64_1      
  pushq %r14                 #  2     0xd8302  2      OPC=pushq_r64_1      
  pushq %r13                 #  3     0xd8304  2      OPC=pushq_r64_1      
  pushq %r12                 #  4     0xd8306  2      OPC=pushq_r64_1      
  pushq %rbp                 #  5     0xd8308  1      OPC=pushq_r64_1      
  pushq %rbx                 #  6     0xd8309  1      OPC=pushq_r64_1      
  subq $0x18, %rsp           #  7     0xd830a  4      OPC=subq_r64_imm8    
  movl 0x4(%rdx), %ebp       #  8     0xd830e  3      OPC=movl_r32_m32     
  cmpl $0x0, %ebp            #  9     0xd8311  3      OPC=cmpl_r32_imm8    
  je .L_d8724                #  10    0xd8314  6      OPC=je_label_1       
  jle .L_d873b               #  11    0xd831a  6      OPC=jle_label_1      
  movq 0x8(%rdx), %rcx       #  12    0xd8320  4      OPC=movq_r64_m64     
  movq %rcx, %rax            #  13    0xd8324  3      OPC=movq_r64_r64     
  andl $0xf, %eax            #  14    0xd8327  3      OPC=andl_r32_imm8    
  shrq $0x2, %rax            #  15    0xd832a  4      OPC=shrq_r64_imm8    
  negq %rax                  #  16    0xd832e  3      OPC=negq_r64         
  andl $0x3, %eax            #  17    0xd8331  3      OPC=andl_r32_imm8    
  cmpl %eax, %ebp            #  18    0xd8334  2      OPC=cmpl_r32_r32     
  cmovbel %ebp, %eax         #  19    0xd8336  3      OPC=cmovbel_r32_r32  
  cmpl $0x7, %ebp            #  20    0xd8339  3      OPC=cmpl_r32_imm8    
  ja .L_d86b0                #  21    0xd833c  6      OPC=ja_label_1       
  movl %ebp, %eax            #  22    0xd8342  2      OPC=movl_r32_r32     
.L_d8344:                    #        0xd8344  0      OPC=<label>          
  movl (%rcx), %r13d         #  23    0xd8344  3      OPC=movl_r32_m32     
  addl %ebp, %r13d           #  24    0xd8347  3      OPC=addl_r32_r32     
  cmpl $0x1, %eax            #  25    0xd834a  3      OPC=cmpl_r32_imm8    
  je .L_d8703                #  26    0xd834d  6      OPC=je_label_1       
  addl 0x4(%rcx), %r13d      #  27    0xd8353  4      OPC=addl_r32_m32     
  cmpl $0x2, %eax            #  28    0xd8357  3      OPC=cmpl_r32_imm8    
  je .L_d870e                #  29    0xd835a  6      OPC=je_label_1       
  addl 0x8(%rcx), %r13d      #  30    0xd8360  4      OPC=addl_r32_m32     
  cmpl $0x3, %eax            #  31    0xd8364  3      OPC=cmpl_r32_imm8    
  je .L_d8719                #  32    0xd8367  6      OPC=je_label_1       
  addl 0xc(%rcx), %r13d      #  33    0xd836d  4      OPC=addl_r32_m32     
  cmpl $0x4, %eax            #  34    0xd8371  3      OPC=cmpl_r32_imm8    
  je .L_d86ed                #  35    0xd8374  6      OPC=je_label_1       
  addl 0x10(%rcx), %r13d     #  36    0xd837a  4      OPC=addl_r32_m32     
  cmpl $0x5, %eax            #  37    0xd837e  3      OPC=cmpl_r32_imm8    
  je .L_d86e2                #  38    0xd8381  6      OPC=je_label_1       
  addl 0x14(%rcx), %r13d     #  39    0xd8387  4      OPC=addl_r32_m32     
  cmpl $0x7, %eax            #  40    0xd838b  3      OPC=cmpl_r32_imm8    
  jne .L_d86f8               #  41    0xd838e  6      OPC=jne_label_1      
  addl 0x18(%rcx), %r13d     #  42    0xd8394  4      OPC=addl_r32_m32     
  movl $0x7, %r9d            #  43    0xd8398  6      OPC=movl_r32_imm32   
.L_d839e:                    #        0xd839e  0      OPC=<label>          
  cmpl %eax, %ebp            #  44    0xd839e  2      OPC=cmpl_r32_r32     
  je .L_d8437                #  45    0xd83a0  6      OPC=je_label_1       
.L_d83a6:                    #        0xd83a6  0      OPC=<label>          
  movl %ebp, %ebx            #  46    0xd83a6  2      OPC=movl_r32_r32     
  leal -0x1(%rbp), %r11d     #  47    0xd83a8  4      OPC=leal_r32_m16     
  movl %eax, %r12d           #  48    0xd83ac  3      OPC=movl_r32_r32     
  subl %eax, %ebx            #  49    0xd83af  2      OPC=subl_r32_r32     
  leal -0x4(%rbx), %r10d     #  50    0xd83b1  4      OPC=leal_r32_m16     
  subl %eax, %r11d           #  51    0xd83b5  3      OPC=subl_r32_r32     
  shrl $0x2, %r10d           #  52    0xd83b8  4      OPC=shrl_r32_imm8    
  addl $0x1, %r10d           #  53    0xd83bc  4      OPC=addl_r32_imm8    
  cmpl $0x2, %r11d           #  54    0xd83c0  4      OPC=cmpl_r32_imm8    
  leal (,%r10,4), %r8d       #  55    0xd83c4  8      OPC=leal_r32_m16     
  jbe .L_d8412               #  56    0xd83cc  2      OPC=jbe_label        
  pxor %xmm0, %xmm0          #  57    0xd83ce  4      OPC=pxor_xmm_xmm     
  leaq (%rcx,%r12,4), %r11   #  58    0xd83d2  4      OPC=leaq_r64_m16     
  xorl %eax, %eax            #  59    0xd83d6  2      OPC=xorl_r32_r32     
.L_d83d8:                    #        0xd83d8  0      OPC=<label>          
  addl $0x1, %eax            #  60    0xd83d8  3      OPC=addl_r32_imm8    
  paddd (%r11), %xmm0        #  61    0xd83db  5      OPC=paddd_xmm_m128   
  addq $0x10, %r11           #  62    0xd83e0  4      OPC=addq_r64_imm8    
  cmpl %r10d, %eax           #  63    0xd83e4  3      OPC=cmpl_r32_r32     
  jb .L_d83d8                #  64    0xd83e7  2      OPC=jb_label         
  movdqa %xmm0, %xmm1        #  65    0xd83e9  4      OPC=movdqa_xmm_xmm   
  addl %r8d, %r9d            #  66    0xd83ed  3      OPC=addl_r32_r32     
  psrldq $0x8, %xmm1         #  67    0xd83f0  5      OPC=psrldq_xmm_imm8  
  paddd %xmm1, %xmm0         #  68    0xd83f5  4      OPC=paddd_xmm_xmm    
  movdqa %xmm0, %xmm1        #  69    0xd83f9  4      OPC=movdqa_xmm_xmm   
  psrldq $0x4, %xmm1         #  70    0xd83fd  5      OPC=psrldq_xmm_imm8  
  paddd %xmm1, %xmm0         #  71    0xd8402  4      OPC=paddd_xmm_xmm    
  movd %xmm0, %eax           #  72    0xd8406  4      OPC=movd_r32_xmm     
  addl %eax, %r13d           #  73    0xd840a  3      OPC=addl_r32_r32     
  cmpl %ebx, %r8d            #  74    0xd840d  3      OPC=cmpl_r32_r32     
  je .L_d8437                #  75    0xd8410  2      OPC=je_label         
.L_d8412:                    #        0xd8412  0      OPC=<label>          
  movslq %r9d, %rax          #  76    0xd8412  3      OPC=movslq_r64_r32   
  addl (%rcx,%rax,4), %r13d  #  77    0xd8415  4      OPC=addl_r32_m32     
  leal 0x1(%r9), %eax        #  78    0xd8419  4      OPC=leal_r32_m16     
  cmpl %eax, %ebp            #  79    0xd841d  2      OPC=cmpl_r32_r32     
  jle .L_d8437               #  80    0xd841f  2      OPC=jle_label        
  cltq                       #  81    0xd8421  2      OPC=cltq             
  addl $0x2, %r9d            #  82    0xd8423  4      OPC=addl_r32_imm8    
  addl (%rcx,%rax,4), %r13d  #  83    0xd8427  4      OPC=addl_r32_m32     
  cmpl %r9d, %ebp            #  84    0xd842b  3      OPC=cmpl_r32_r32     
  jle .L_d8437               #  85    0xd842e  2      OPC=jle_label        
  movslq %r9d, %r9           #  86    0xd8430  3      OPC=movslq_r64_r32   
  addl (%rcx,%r9,4), %r13d   #  87    0xd8433  4      OPC=addl_r32_m32     
.L_d8437:                    #        0xd8437  0      OPC=<label>          
  movl %r13d, %eax           #  88    0xd8437  3      OPC=movl_r32_r32     
  andl 0x84(%rsi), %eax      #  89    0xd843a  6      OPC=andl_r32_m32     
  shlq $0x4, %rax            #  90    0xd8440  4      OPC=shlq_r64_imm8    
  addq 0x40(%rsi), %rax      #  91    0xd8444  4      OPC=addq_r64_m64     
  movl (%rax), %r9d          #  92    0xd8448  3      OPC=movl_r32_m32     
  testl %r9d, %r9d           #  93    0xd844b  3      OPC=testl_r32_r32    
  jle .L_d84c0               #  94    0xd844e  2      OPC=jle_label        
  movq 0x8(%rax), %rcx       #  95    0xd8450  4      OPC=movq_r64_m64     
  subl $0x1, %r9d            #  96    0xd8454  4      OPC=subl_r32_imm8    
  movslq %ebp, %rbx          #  97    0xd8458  3      OPC=movslq_r64_r32   
  leaq 0x8(,%r9,8), %r11     #  98    0xd845b  8      OPC=leaq_r64_m16     
  shlq $0x2, %rbx            #  99    0xd8463  4      OPC=shlq_r64_imm8    
  addq %rcx, %r11            #  100   0xd8467  3      OPC=addq_r64_r64     
  jmpq .L_d8479              #  101   0xd846a  2      OPC=jmpq_label       
  nop                        #  102   0xd846c  1      OPC=nop              
  nop                        #  103   0xd846d  1      OPC=nop              
  nop                        #  104   0xd846e  1      OPC=nop              
  nop                        #  105   0xd846f  1      OPC=nop              
.L_d8470:                    #        0xd8470  0      OPC=<label>          
  addq $0x8, %rcx            #  106   0xd8470  4      OPC=addq_r64_imm8    
  cmpq %r11, %rcx            #  107   0xd8474  3      OPC=cmpq_r64_r64     
  je .L_d84c0                #  108   0xd8477  2      OPC=je_label         
.L_d8479:                    #        0xd8479  0      OPC=<label>          
  movq (%rcx), %rax          #  109   0xd8479  3      OPC=movq_r64_m64     
  cmpl %r13d, (%rax)         #  110   0xd847c  3      OPC=cmpl_m32_r32     
  jne .L_d8470               #  111   0xd847f  2      OPC=jne_label        
  cmpl 0xc(%rax), %ebp       #  112   0xd8481  3      OPC=cmpl_r32_m32     
  jne .L_d8470               #  113   0xd8484  2      OPC=jne_label        
  leaq -0x4(%rbx), %r9       #  114   0xd8486  4      OPC=leaq_r64_m16     
  movl %ebp, %r10d           #  115   0xd848a  3      OPC=movl_r32_r32     
  jmpq .L_d84a9              #  116   0xd848d  2      OPC=jmpq_label       
  nop                        #  117   0xd848f  1      OPC=nop              
.L_d8490:                    #        0xd8490  0      OPC=<label>          
  movq 0x10(%rax), %r8       #  118   0xd8490  4      OPC=movq_r64_m64     
  movq 0x8(%rdx), %r12       #  119   0xd8494  4      OPC=movq_r64_m64     
  movl (%r8,%r9,1), %r14d    #  120   0xd8498  4      OPC=movl_r32_m32     
  movl (%r12,%r9,1), %r12d   #  121   0xd849c  4      OPC=movl_r32_m32     
  subq $0x4, %r9             #  122   0xd84a0  4      OPC=subq_r64_imm8    
  cmpl %r12d, %r14d          #  123   0xd84a4  3      OPC=cmpl_r32_r32     
  jne .L_d8470               #  124   0xd84a7  2      OPC=jne_label        
.L_d84a9:                    #        0xd84a9  0      OPC=<label>          
  subl $0x1, %r10d           #  125   0xd84a9  4      OPC=subl_r32_imm8    
  jns .L_d8490               #  126   0xd84ad  2      OPC=jns_label        
.L_d84af:                    #        0xd84af  0      OPC=<label>          
  addq $0x18, %rsp           #  127   0xd84af  4      OPC=addq_r64_imm8    
  popq %rbx                  #  128   0xd84b3  1      OPC=popq_r64_1       
  popq %rbp                  #  129   0xd84b4  1      OPC=popq_r64_1       
  popq %r12                  #  130   0xd84b5  2      OPC=popq_r64_1       
  popq %r13                  #  131   0xd84b7  2      OPC=popq_r64_1       
  popq %r14                  #  132   0xd84b9  2      OPC=popq_r64_1       
  popq %r15                  #  133   0xd84bb  2      OPC=popq_r64_1       
  retq                       #  134   0xd84bd  1      OPC=retq             
  xchgw %ax, %ax             #  135   0xd84be  2      OPC=xchgw_ax_r16     
.L_d84c0:                    #        0xd84c0  0      OPC=<label>          
  movq %rdi, 0x8(%rsp)       #  136   0xd84c0  5      OPC=movq_m64_r64     
  movq %rsi, %rbx            #  137   0xd84c5  3      OPC=movq_r64_r64     
  movl $0x58, %edi           #  138   0xd84c8  5      OPC=movl_r32_imm32   
  movl $0x1, %esi            #  139   0xd84cd  5      OPC=movl_r32_imm32   
  movq %rdx, %r15            #  140   0xd84d2  3      OPC=movq_r64_r64     
  callq .L_1f8b0             #  141   0xd84d5  5      OPC=callq_label      
  testq %rax, %rax           #  142   0xd84da  3      OPC=testq_r64_r64    
  movq %rax, %r14            #  143   0xd84dd  3      OPC=movq_r64_r64     
  je .L_d8669                #  144   0xd84e0  6      OPC=je_label_1       
  testl %ebp, %ebp           #  145   0xd84e6  2      OPC=testl_r32_r32    
  leaq 0x8(%rax), %r12       #  146   0xd84e8  4      OPC=leaq_r64_m16     
  movl %ebp, 0xc(%rax)       #  147   0xd84ec  3      OPC=movl_m32_r32     
  jle .L_d86c8               #  148   0xd84ef  6      OPC=jle_label_1      
  movslq %ebp, %rdx          #  149   0xd84f5  3      OPC=movslq_r64_r32   
  movl %ebp, 0x8(%rax)       #  150   0xd84f8  3      OPC=movl_m32_r32     
  shlq $0x2, %rdx            #  151   0xd84fb  4      OPC=shlq_r64_imm8    
  movq %rdx, %rdi            #  152   0xd84ff  3      OPC=movq_r64_r64     
  movq %rdx, (%rsp)          #  153   0xd8502  4      OPC=movq_m64_r64     
  callq .memalign_plt        #  154   0xd8506  5      OPC=callq_label      
  testq %rax, %rax           #  155   0xd850b  3      OPC=testq_r64_r64    
  movq %rax, 0x10(%r14)      #  156   0xd850e  4      OPC=movq_m64_r64     
  movq (%rsp), %rdx          #  157   0xd8512  4      OPC=movq_r64_m64     
  je .L_d8661                #  158   0xd8516  6      OPC=je_label_1       
  movq 0x8(%r15), %rsi       #  159   0xd851c  4      OPC=movq_r64_m64     
  movq %rax, %rdi            #  160   0xd8520  3      OPC=movq_r64_r64     
  callq .__GI_memcpy         #  161   0xd8523  5      OPC=callq_label      
  movq %r12, 0x38(%r14)      #  162   0xd8528  4      OPC=movq_m64_r64     
  movq (%rbx), %rdi          #  163   0xd852c  3      OPC=movq_r64_m64     
  movl %ebp, %r8d            #  164   0xd852f  3      OPC=movl_r32_r32     
  movq 0x8(%r15), %rsi       #  165   0xd8532  4      OPC=movq_r64_m64     
  xorl %edx, %edx            #  166   0xd8536  2      OPC=xorl_r32_r32     
  jmpq .L_d859b              #  167   0xd8538  2      OPC=jmpq_label       
  nop                        #  168   0xd853a  1      OPC=nop              
  nop                        #  169   0xd853b  1      OPC=nop              
  nop                        #  170   0xd853c  1      OPC=nop              
  nop                        #  171   0xd853d  1      OPC=nop              
  nop                        #  172   0xd853e  1      OPC=nop              
  nop                        #  173   0xd853f  1      OPC=nop              
.L_d8540:                    #        0xd8540  0      OPC=<label>          
  movzbl 0x50(%r14), %ecx    #  174   0xd8540  5      OPC=movzbl_r32_m8    
  movzbl 0xa(%r9), %r8d      #  175   0xd8545  5      OPC=movzbl_r32_m8    
  movl %ecx, %r10d           #  176   0xd854a  3      OPC=movl_r32_r32     
  shrb $0x4, %r8b            #  177   0xd854d  4      OPC=shrb_r8_imm8     
  andl $0xffffffdf, %ecx     #  178   0xd8551  6      OPC=andl_r32_imm32   
  nop                        #  179   0xd8557  1      OPC=nop              
  nop                        #  180   0xd8558  1      OPC=nop              
  nop                        #  181   0xd8559  1      OPC=nop              
  shrb $0x5, %r10b           #  182   0xd855a  4      OPC=shrb_r8_imm8     
  orl %r10d, %r8d            #  183   0xd855e  3      OPC=orl_r32_r32      
  andl $0x1, %r8d            #  184   0xd8561  4      OPC=andl_r32_imm8    
  shll $0x5, %r8d            #  185   0xd8565  4      OPC=shll_r32_imm8    
  orl %r8d, %ecx             #  186   0xd8569  3      OPC=orl_r32_r32      
  cmpl $0x2, %eax            #  187   0xd856c  3      OPC=cmpl_r32_imm8    
  movb %cl, 0x50(%r14)       #  188   0xd856f  4      OPC=movb_m8_r8       
  je .L_d8688                #  189   0xd8573  6      OPC=je_label_1       
  cmpl $0x4, %eax            #  190   0xd8579  3      OPC=cmpl_r32_imm8    
  je .L_d86a0                #  191   0xd857c  6      OPC=je_label_1       
  cmpl $0xc, %eax            #  192   0xd8582  3      OPC=cmpl_r32_imm8    
  je .L_d85e9                #  193   0xd8585  2      OPC=je_label         
  testl $0x3ff00, 0x8(%r9)   #  194   0xd8587  8      OPC=testl_m32_imm32  
  jne .L_d85e9               #  195   0xd858f  2      OPC=jne_label        
.L_d858b:                    #        0xd8591  0      OPC=<label>          
  movl 0x4(%r15), %r8d       #  196   0xd8591  4      OPC=movl_r32_m32     
.L_d858f:                    #        0xd8595  0      OPC=<label>          
  addl $0x1, %edx            #  197   0xd8595  3      OPC=addl_r32_imm8    
  addq $0x4, %rsi            #  198   0xd8598  4      OPC=addq_r64_imm8    
  cmpl %r8d, %edx            #  199   0xd859c  3      OPC=cmpl_r32_r32     
  jge .L_d85fe               #  200   0xd859f  2      OPC=jge_label        
.L_d859b:                    #        0xd85a1  0      OPC=<label>          
  movslq (%rsi), %r9         #  201   0xd85a1  3      OPC=movslq_r64_m32   
  shlq $0x4, %r9             #  202   0xd85a4  4      OPC=shlq_r64_imm8    
  addq %rdi, %r9             #  203   0xd85a8  3      OPC=addq_r64_r64     
  movzbl 0x8(%r9), %eax      #  204   0xd85ab  5      OPC=movzbl_r32_m8    
  cmpl $0x1, %eax            #  205   0xd85b0  3      OPC=cmpl_r32_imm8    
  jne .L_d8540               #  206   0xd85b3  2      OPC=jne_label        
  testl $0x3ff00, 0x8(%r9)   #  207   0xd85b5  8      OPC=testl_m32_imm32  
  je .L_d858f                #  208   0xd85bd  2      OPC=je_label         
  movzbl 0x50(%r14), %eax    #  209   0xd85bf  5      OPC=movzbl_r32_m8    
  movzbl 0xa(%r9), %ecx      #  210   0xd85c4  5      OPC=movzbl_r32_m8    
  movl %eax, %r8d            #  211   0xd85c9  3      OPC=movl_r32_r32     
  shrb $0x4, %cl             #  212   0xd85cc  3      OPC=shrb_r8_imm8     
  andl $0xffffffdf, %eax     #  213   0xd85cf  6      OPC=andl_r32_imm32   
  nop                        #  214   0xd85d5  1      OPC=nop              
  nop                        #  215   0xd85d6  1      OPC=nop              
  nop                        #  216   0xd85d7  1      OPC=nop              
  shrb $0x5, %r8b            #  217   0xd85d8  4      OPC=shrb_r8_imm8     
  orl %r8d, %ecx             #  218   0xd85dc  3      OPC=orl_r32_r32      
  andl $0x1, %ecx            #  219   0xd85df  3      OPC=andl_r32_imm8    
  shll $0x5, %ecx            #  220   0xd85e2  3      OPC=shll_r32_imm8    
  orl %ecx, %eax             #  221   0xd85e5  2      OPC=orl_r32_r32      
  movb %al, 0x50(%r14)       #  222   0xd85e7  4      OPC=movb_m8_r8       
  testl $0x3ff00, 0x8(%r9)   #  223   0xd85eb  8      OPC=testl_m32_imm32  
  je .L_d858b                #  224   0xd85f3  2      OPC=je_label         
.L_d85e9:                    #        0xd85f5  0      OPC=<label>          
  movl 0x4(%r15), %r8d       #  225   0xd85f5  4      OPC=movl_r32_m32     
  addl $0x1, %edx            #  226   0xd85f9  3      OPC=addl_r32_imm8    
  orb $0x80, 0x50(%r14)      #  227   0xd85fc  5      OPC=orb_m8_imm8      
  addq $0x4, %rsi            #  228   0xd8601  4      OPC=addq_r64_imm8    
  cmpl %r8d, %edx            #  229   0xd8605  3      OPC=cmpl_r32_r32     
  jl .L_d859b                #  230   0xd8608  2      OPC=jl_label         
.L_d85fe:                    #        0xd860a  0      OPC=<label>          
  movl %r13d, %edx           #  231   0xd860a  3      OPC=movl_r32_r32     
  movq %r14, %rsi            #  232   0xd860d  3      OPC=movq_r64_r64     
  movq %rbx, %rdi            #  233   0xd8610  3      OPC=movq_r64_r64     
  callq .register_state      #  234   0xd8613  5      OPC=callq_label      
  movl %eax, %edx            #  235   0xd8618  2      OPC=movl_r32_r32     
  movq %r14, %rax            #  236   0xd861a  3      OPC=movq_r64_r64     
  testl %edx, %edx           #  237   0xd861d  2      OPC=testl_r32_r32    
  je .L_d84af                #  238   0xd861f  6      OPC=je_label_1       
  movq 0x20(%r14), %rdi      #  239   0xd8625  4      OPC=movq_r64_m64     
  callq .L_1f8c0             #  240   0xd8629  5      OPC=callq_label      
  movq 0x30(%r14), %rdi      #  241   0xd862e  4      OPC=movq_r64_m64     
  callq .L_1f8c0             #  242   0xd8632  5      OPC=callq_label      
  movq 0x38(%r14), %rax      #  243   0xd8637  4      OPC=movq_r64_m64     
  cmpq %rax, %r12            #  244   0xd863b  3      OPC=cmpq_r64_r64     
  je .L_d8646                #  245   0xd863e  2      OPC=je_label         
  movq 0x8(%rax), %rdi       #  246   0xd8640  4      OPC=movq_r64_m64     
  callq .L_1f8c0             #  247   0xd8644  5      OPC=callq_label      
  movq 0x38(%r14), %rdi      #  248   0xd8649  4      OPC=movq_r64_m64     
  callq .L_1f8c0             #  249   0xd864d  5      OPC=callq_label      
.L_d8646:                    #        0xd8652  0      OPC=<label>          
  movq 0x10(%r14), %rdi      #  250   0xd8652  4      OPC=movq_r64_m64     
  callq .L_1f8c0             #  251   0xd8656  5      OPC=callq_label      
  movq 0x48(%r14), %rdi      #  252   0xd865b  4      OPC=movq_r64_m64     
  callq .L_1f8c0             #  253   0xd865f  5      OPC=callq_label      
  movq 0x40(%r14), %rdi      #  254   0xd8664  4      OPC=movq_r64_m64     
  callq .L_1f8c0             #  255   0xd8668  5      OPC=callq_label      
.L_d8661:                    #        0xd866d  0      OPC=<label>          
  movq %r14, %rdi            #  256   0xd866d  3      OPC=movq_r64_r64     
  callq .L_1f8c0             #  257   0xd8670  5      OPC=callq_label      
.L_d8669:                    #        0xd8675  0      OPC=<label>          
  movq 0x8(%rsp), %rax       #  258   0xd8675  5      OPC=movq_r64_m64     
  movl $0xc, (%rax)          #  259   0xd867a  6      OPC=movl_m32_imm32   
  addq $0x18, %rsp           #  260   0xd8680  4      OPC=addq_r64_imm8    
  xorl %eax, %eax            #  261   0xd8684  2      OPC=xorl_r32_r32     
  popq %rbx                  #  262   0xd8686  1      OPC=popq_r64_1       
  popq %rbp                  #  263   0xd8687  1      OPC=popq_r64_1       
  popq %r12                  #  264   0xd8688  2      OPC=popq_r64_1       
  popq %r13                  #  265   0xd868a  2      OPC=popq_r64_1       
  popq %r14                  #  266   0xd868c  2      OPC=popq_r64_1       
  popq %r15                  #  267   0xd868e  2      OPC=popq_r64_1       
  retq                       #  268   0xd8690  1      OPC=retq             
  nop                        #  269   0xd8691  1      OPC=nop              
  nop                        #  270   0xd8692  1      OPC=nop              
  nop                        #  271   0xd8693  1      OPC=nop              
.L_d8688:                    #        0xd8694  0      OPC=<label>          
  orl $0x10, %ecx            #  272   0xd8694  3      OPC=orl_r32_imm8     
  movb %cl, 0x50(%r14)       #  273   0xd8697  4      OPC=movb_m8_r8       
  movl 0x4(%r15), %r8d       #  274   0xd869b  4      OPC=movl_r32_m32     
  jmpq .L_d858f              #  275   0xd869f  5      OPC=jmpq_label_1     
  nop                        #  276   0xd86a4  1      OPC=nop              
  nop                        #  277   0xd86a5  1      OPC=nop              
  nop                        #  278   0xd86a6  1      OPC=nop              
  nop                        #  279   0xd86a7  1      OPC=nop              
  nop                        #  280   0xd86a8  1      OPC=nop              
  nop                        #  281   0xd86a9  1      OPC=nop              
  nop                        #  282   0xd86aa  1      OPC=nop              
  nop                        #  283   0xd86ab  1      OPC=nop              
.L_d86a0:                    #        0xd86ac  0      OPC=<label>          
  orl $0x40, %ecx            #  284   0xd86ac  3      OPC=orl_r32_imm8     
  movb %cl, 0x50(%r14)       #  285   0xd86af  4      OPC=movb_m8_r8       
  movl 0x4(%r15), %r8d       #  286   0xd86b3  4      OPC=movl_r32_m32     
  jmpq .L_d858f              #  287   0xd86b7  5      OPC=jmpq_label_1     
.L_d86b0:                    #        0xd86bc  0      OPC=<label>          
  testl %eax, %eax           #  288   0xd86bc  2      OPC=testl_r32_r32    
  jne .L_d8344               #  289   0xd86be  6      OPC=jne_label_1      
  movl %ebp, %r13d           #  290   0xd86c4  3      OPC=movl_r32_r32     
  xorl %r9d, %r9d            #  291   0xd86c7  3      OPC=xorl_r32_r32     
  jmpq .L_d83a6              #  292   0xd86ca  5      OPC=jmpq_label_1     
  nop                        #  293   0xd86cf  1      OPC=nop              
  nop                        #  294   0xd86d0  1      OPC=nop              
  nop                        #  295   0xd86d1  1      OPC=nop              
  nop                        #  296   0xd86d2  1      OPC=nop              
  nop                        #  297   0xd86d3  1      OPC=nop              
.L_d86c8:                    #        0xd86d4  0      OPC=<label>          
  movq $0x0, 0x8(%rax)       #  298   0xd86d4  8      OPC=movq_m64_imm32   
  movq $0x0, 0x8(%r12)       #  299   0xd86dc  9      OPC=movq_m64_imm32   
  movq %r12, 0x38(%rax)      #  300   0xd86e5  4      OPC=movq_m64_r64     
  jmpq .L_d85fe              #  301   0xd86e9  5      OPC=jmpq_label_1     
.L_d86e2:                    #        0xd86ee  0      OPC=<label>          
  movl $0x5, %r9d            #  302   0xd86ee  6      OPC=movl_r32_imm32   
  jmpq .L_d839e              #  303   0xd86f4  5      OPC=jmpq_label_1     
.L_d86ed:                    #        0xd86f9  0      OPC=<label>          
  movl $0x4, %r9d            #  304   0xd86f9  6      OPC=movl_r32_imm32   
  jmpq .L_d839e              #  305   0xd86ff  5      OPC=jmpq_label_1     
.L_d86f8:                    #        0xd8704  0      OPC=<label>          
  movl $0x6, %r9d            #  306   0xd8704  6      OPC=movl_r32_imm32   
  jmpq .L_d839e              #  307   0xd870a  5      OPC=jmpq_label_1     
.L_d8703:                    #        0xd870f  0      OPC=<label>          
  movl $0x1, %r9d            #  308   0xd870f  6      OPC=movl_r32_imm32   
  jmpq .L_d839e              #  309   0xd8715  5      OPC=jmpq_label_1     
.L_d870e:                    #        0xd871a  0      OPC=<label>          
  movl $0x2, %r9d            #  310   0xd871a  6      OPC=movl_r32_imm32   
  jmpq .L_d839e              #  311   0xd8720  5      OPC=jmpq_label_1     
.L_d8719:                    #        0xd8725  0      OPC=<label>          
  movl $0x3, %r9d            #  312   0xd8725  6      OPC=movl_r32_imm32   
  jmpq .L_d839e              #  313   0xd872b  5      OPC=jmpq_label_1     
.L_d8724:                    #        0xd8730  0      OPC=<label>          
  movl $0x0, (%rdi)          #  314   0xd8730  6      OPC=movl_m32_imm32   
  addq $0x18, %rsp           #  315   0xd8736  4      OPC=addq_r64_imm8    
  xorl %eax, %eax            #  316   0xd873a  2      OPC=xorl_r32_r32     
  popq %rbx                  #  317   0xd873c  1      OPC=popq_r64_1       
  popq %rbp                  #  318   0xd873d  1      OPC=popq_r64_1       
  popq %r12                  #  319   0xd873e  2      OPC=popq_r64_1       
  popq %r13                  #  320   0xd8740  2      OPC=popq_r64_1       
  popq %r14                  #  321   0xd8742  2      OPC=popq_r64_1       
  popq %r15                  #  322   0xd8744  2      OPC=popq_r64_1       
  retq                       #  323   0xd8746  1      OPC=retq             
.L_d873b:                    #        0xd8747  0      OPC=<label>          
  movl %ebp, %r13d           #  324   0xd8747  3      OPC=movl_r32_r32     
  jmpq .L_d8437              #  325   0xd874a  5      OPC=jmpq_label_1     
  nop                        #  326   0xd874f  1      OPC=nop              
  nop                        #  327   0xd8750  1      OPC=nop              
  nop                        #  328   0xd8751  1      OPC=nop              
  nop                        #  329   0xd8752  1      OPC=nop              
  nop                        #  330   0xd8753  1      OPC=nop              
  nop                        #  331   0xd8754  1      OPC=nop              
  nop                        #  332   0xd8755  1      OPC=nop              
  nop                        #  333   0xd8756  1      OPC=nop              
  nop                        #  334   0xd8757  1      OPC=nop              
  nop                        #  335   0xd8758  1      OPC=nop              
  nop                        #  336   0xd8759  1      OPC=nop              
  nop                        #  337   0xd875a  1      OPC=nop              
  nop                        #  338   0xd875b  1      OPC=nop              
                                                                           
.size re_acquire_state, .-re_acquire_state

