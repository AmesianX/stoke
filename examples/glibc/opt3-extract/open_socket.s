  .text
  .globl open_socket
  .type open_socket, @function

#! file-offset 0x13d110
#! rip-offset  0x13d110
#! capacity    528 bytes

# Text                            #  Line  RIP       Bytes  Opcode                   
.open_socket:                     #        0x13d110  0      OPC=<label>              
  pushq %rbp                      #  1     0x13d110  1      OPC=pushq_r64_1          
  movq %rsp, %rbp                 #  2     0x13d111  3      OPC=movq_r64_r64         
  pushq %r15                      #  3     0x13d114  2      OPC=pushq_r64_1          
  pushq %r14                      #  4     0x13d116  2      OPC=pushq_r64_1          
  pushq %r13                      #  5     0x13d118  2      OPC=pushq_r64_1          
  pushq %r12                      #  6     0x13d11a  2      OPC=pushq_r64_1          
  movl %edi, %r15d                #  7     0x13d11c  3      OPC=movl_r32_r32         
  pushq %rbx                      #  8     0x13d11f  1      OPC=pushq_r64_1          
  movq %rdx, %r14                 #  9     0x13d120  3      OPC=movq_r64_r64         
  movl $0x1, %edi                 #  10    0x13d123  5      OPC=movl_r32_imm32       
  xorl %edx, %edx                 #  11    0x13d128  2      OPC=xorl_r32_r32         
  subq $0xb8, %rsp                #  12    0x13d12a  7      OPC=subq_r64_imm32       
  movq %rsi, -0xd8(%rbp)          #  13    0x13d131  7      OPC=movq_m64_r64         
  movl $0x80801, %esi             #  14    0x13d138  5      OPC=movl_r32_imm32       
  callq .__socket                 #  15    0x13d13d  5      OPC=callq_label          
  testl %eax, %eax                #  16    0x13d142  2      OPC=testl_r32_r32        
  movl %eax, %r12d                #  17    0x13d144  3      OPC=movl_r32_r32         
  js .L_13d310                    #  18    0x13d147  6      OPC=js_label_1           
  leaq 0x2a(%r14), %rax           #  19    0x13d14d  4      OPC=leaq_r64_m16         
  leaq -0xa0(%rbp), %rsi          #  20    0x13d151  7      OPC=leaq_r64_m16         
  movq $0x6e75722f7261762f, %rcx  #  21    0x13d158  10     OPC=movq_r64_imm64       
  movq %rcx, -0x9e(%rbp)          #  22    0x13d162  7      OPC=movq_m64_r64         
  movl $0x1, %edx                 #  23    0x13d169  5      OPC=movl_r32_imm32       
  movq $0x6f732f6463736e2f, %rcx  #  24    0x13d16e  10     OPC=movq_r64_imm64       
  andq $0xf0, %rax                #  25    0x13d178  4      OPC=andq_r64_imm8        
  movw %dx, -0xa0(%rbp)           #  26    0x13d17c  7      OPC=movw_m16_r16         
  movq %rcx, 0xa(%rsi)            #  27    0x13d183  4      OPC=movq_m64_r64         
  subq %rax, %rsp                 #  28    0x13d187  3      OPC=subq_r64_r64         
  movl $0x74656b63, 0x12(%rsi)    #  29    0x13d18a  7      OPC=movl_m32_imm32       
  movb $0x0, 0x16(%rsi)           #  30    0x13d191  4      OPC=movb_m8_imm8         
  leaq 0xf(%rsp), %rbx            #  31    0x13d195  5      OPC=leaq_r64_m16         
  movl $0x6e, %edx                #  32    0x13d19a  5      OPC=movl_r32_imm32       
  movl %r12d, %edi                #  33    0x13d19f  3      OPC=movl_r32_r32         
  callq .__connect                #  34    0x13d1a2  5      OPC=callq_label          
  andq $0xf0, %rbx                #  35    0x13d1a7  4      OPC=andq_r64_imm8        
  testl %eax, %eax                #  36    0x13d1ab  2      OPC=testl_r32_r32        
  leaq 0xc(%r14), %r13            #  37    0x13d1ad  4      OPC=leaq_r64_m16         
  js .L_13d220                    #  38    0x13d1b1  2      OPC=js_label             
.L_13d1b3:                        #        0x13d1b3  0      OPC=<label>              
  movq -0xd8(%rbp), %rsi          #  39    0x13d1b3  7      OPC=movq_r64_m64         
  leaq 0xc(%rbx), %rdi            #  40    0x13d1ba  4      OPC=leaq_r64_m16         
  movl %r15d, 0x4(%rbx)           #  41    0x13d1be  4      OPC=movl_m32_r32         
  movl %r14d, 0x8(%rbx)           #  42    0x13d1c2  4      OPC=movl_m32_r32         
  movq %r14, %rdx                 #  43    0x13d1c6  3      OPC=movq_r64_r64         
  movl $0x2, (%rbx)               #  44    0x13d1c9  6      OPC=movl_m32_imm32       
  leaq -0xb0(%rbp), %r15          #  45    0x13d1cf  7      OPC=leaq_r64_m16         
  movl $0x1, %r14d                #  46    0x13d1d6  6      OPC=movl_r32_imm32       
  callq .__GI_memcpy              #  47    0x13d1dc  5      OPC=callq_label          
  leaq -0xd0(%rbp), %rax          #  48    0x13d1e1  7      OPC=leaq_r64_m16         
  movq %rax, -0xd8(%rbp)          #  49    0x13d1e8  7      OPC=movq_m64_r64         
.L_13d1ef:                        #        0x13d1ef  0      OPC=<label>              
  movl $0x4000, %ecx              #  50    0x13d1ef  5      OPC=movl_r32_imm32       
  movq %r13, %rdx                 #  51    0x13d1f4  3      OPC=movq_r64_r64         
  movq %rbx, %rsi                 #  52    0x13d1f7  3      OPC=movq_r64_r64         
  movl %r12d, %edi                #  53    0x13d1fa  3      OPC=movl_r32_r32         
  callq .__send                   #  54    0x13d1fd  5      OPC=callq_label          
  cmpq $0xff, %rax                #  55    0x13d202  4      OPC=cmpq_r64_imm8        
  je .L_13d240                    #  56    0x13d206  2      OPC=je_label             
  cmpq %r13, %rax                 #  57    0x13d208  3      OPC=cmpq_r64_r64         
  jne .L_13d22d                   #  58    0x13d20b  2      OPC=jne_label            
.L_13d20d:                        #        0x13d20d  0      OPC=<label>              
  movl %r12d, %eax                #  59    0x13d20d  3      OPC=movl_r32_r32         
.L_13d210:                        #        0x13d210  0      OPC=<label>              
  leaq -0x28(%rbp), %rsp          #  60    0x13d210  4      OPC=leaq_r64_m16         
  popq %rbx                       #  61    0x13d214  1      OPC=popq_r64_1           
  popq %r12                       #  62    0x13d215  2      OPC=popq_r64_1           
  popq %r13                       #  63    0x13d217  2      OPC=popq_r64_1           
  popq %r14                       #  64    0x13d219  2      OPC=popq_r64_1           
  popq %r15                       #  65    0x13d21b  2      OPC=popq_r64_1           
  popq %rbp                       #  66    0x13d21d  1      OPC=popq_r64_1           
  retq                            #  67    0x13d21e  1      OPC=retq                 
  nop                             #  68    0x13d21f  1      OPC=nop                  
.L_13d220:                        #        0x13d220  0      OPC=<label>              
  movq 0x283c59(%rip), %rax       #  69    0x13d220  7      OPC=movq_r64_m64         
  cmpl $0x73, (%rax)              #  70    0x13d227  3      OPC=cmpl_m32_imm8        
  nop                             #  71    0x13d22a  1      OPC=nop                  
  je .L_13d1b3                    #  72    0x13d22b  2      OPC=je_label             
.L_13d22d:                        #        0x13d22d  0      OPC=<label>              
  movslq %r12d, %rdi              #  73    0x13d22d  3      OPC=movslq_r64_r32       
  movl $0x3, %eax                 #  74    0x13d230  5      OPC=movl_r32_imm32       
  syscall                         #  75    0x13d235  2      OPC=syscall              
  movl $0xffffffff, %eax          #  76    0x13d237  6      OPC=movl_r32_imm32_1     
  jmpq .L_13d210                  #  77    0x13d23d  2      OPC=jmpq_label           
  xchgw %ax, %ax                  #  78    0x13d23f  2      OPC=xchgw_ax_r16         
.L_13d240:                        #        0x13d241  0      OPC=<label>              
  movq 0x283c39(%rip), %rax       #  79    0x13d241  7      OPC=movq_r64_m64         
  movl (%rax), %eax               #  80    0x13d248  2      OPC=movl_r32_m32         
  nop                             #  81    0x13d24a  1      OPC=nop                  
  cmpl $0x4, %eax                 #  82    0x13d24b  3      OPC=cmpl_r32_imm8        
  je .L_13d1ef                    #  83    0x13d24e  2      OPC=je_label             
  cmpq $0xff, %r13                #  84    0x13d250  4      OPC=cmpq_r64_imm8        
  je .L_13d20d                    #  85    0x13d254  2      OPC=je_label             
  cmpl $0xb, %eax                 #  86    0x13d256  3      OPC=cmpl_r32_imm8        
  jne .L_13d22d                   #  87    0x13d259  2      OPC=jne_label            
  xorl %esi, %esi                 #  88    0x13d25b  2      OPC=xorl_r32_r32         
  movq %r15, %rdi                 #  89    0x13d25d  3      OPC=movq_r64_r64         
  callq .malloc_plt               #  90    0x13d260  5      OPC=callq_label          
  testb %r14b, %r14b              #  91    0x13d265  3      OPC=testb_r8_r8          
  jne .L_13d2e0                   #  92    0x13d268  2      OPC=jne_label            
  movq -0xb8(%rbp), %rcx          #  93    0x13d26a  7      OPC=movq_r64_m64         
  subq -0xa8(%rbp), %rcx          #  94    0x13d271  7      OPC=subq_r64_m64         
  movq $0x20c49ba5e353f7cf, %rax  #  95    0x13d278  10     OPC=movq_r64_imm64       
  imulq %rcx                      #  96    0x13d282  3      OPC=imulq_r64            
  movq -0xc0(%rbp), %rax          #  97    0x13d285  7      OPC=movq_r64_m64         
  subq -0xb0(%rbp), %rax          #  98    0x13d28c  7      OPC=subq_r64_m64         
  sarq $0x3f, %rcx                #  99    0x13d293  4      OPC=sarq_r64_imm8        
  imull $0x3e8, %eax, %eax        #  100   0x13d297  6      OPC=imull_r32_r32_imm32  
  sarq $0x7, %rdx                 #  101   0x13d29d  4      OPC=sarq_r64_imm8        
  subq %rcx, %rdx                 #  102   0x13d2a1  3      OPC=subq_r64_r64         
  addl %eax, %edx                 #  103   0x13d2a4  2      OPC=addl_r32_r32         
.L_13d2a5:                        #        0x13d2a6  0      OPC=<label>              
  movq -0xd8(%rbp), %rdi          #  104   0x13d2a6  7      OPC=movq_r64_m64         
  movl $0x1c, %eax                #  105   0x13d2ad  5      OPC=movl_r32_imm32       
  movl $0x1, %esi                 #  106   0x13d2b2  5      OPC=movl_r32_imm32       
  movl %r12d, -0xd0(%rbp)         #  107   0x13d2b7  7      OPC=movl_m32_r32         
  movw %ax, -0xcc(%rbp)           #  108   0x13d2be  7      OPC=movw_m16_r16         
  callq .__poll                   #  109   0x13d2c5  5      OPC=callq_label          
  testl %eax, %eax                #  110   0x13d2ca  2      OPC=testl_r32_r32        
  jle .L_13d22d                   #  111   0x13d2cc  6      OPC=jle_label_1          
  xorl %r14d, %r14d               #  112   0x13d2d2  3      OPC=xorl_r32_r32         
  jmpq .L_13d1ef                  #  113   0x13d2d5  5      OPC=jmpq_label_1         
  nop                             #  114   0x13d2da  1      OPC=nop                  
  nop                             #  115   0x13d2db  1      OPC=nop                  
  nop                             #  116   0x13d2dc  1      OPC=nop                  
  nop                             #  117   0x13d2dd  1      OPC=nop                  
  nop                             #  118   0x13d2de  1      OPC=nop                  
  nop                             #  119   0x13d2df  1      OPC=nop                  
  nop                             #  120   0x13d2e0  1      OPC=nop                  
.L_13d2e0:                        #        0x13d2e1  0      OPC=<label>              
  movq -0xa8(%rbp), %rax          #  121   0x13d2e1  7      OPC=movq_r64_m64         
  movl $0x1388, %edx              #  122   0x13d2e8  5      OPC=movl_r32_imm32       
  movq %rax, -0xb8(%rbp)          #  123   0x13d2ed  7      OPC=movq_m64_r64         
  movq -0xb0(%rbp), %rax          #  124   0x13d2f4  7      OPC=movq_r64_m64         
  addq $0x5, %rax                 #  125   0x13d2fb  4      OPC=addq_r64_imm8        
  movq %rax, -0xc0(%rbp)          #  126   0x13d2ff  7      OPC=movq_m64_r64         
  jmpq .L_13d2a5                  #  127   0x13d306  2      OPC=jmpq_label           
  nop                             #  128   0x13d308  1      OPC=nop                  
  nop                             #  129   0x13d309  1      OPC=nop                  
  nop                             #  130   0x13d30a  1      OPC=nop                  
  nop                             #  131   0x13d30b  1      OPC=nop                  
  nop                             #  132   0x13d30c  1      OPC=nop                  
  nop                             #  133   0x13d30d  1      OPC=nop                  
  nop                             #  134   0x13d30e  1      OPC=nop                  
  nop                             #  135   0x13d30f  1      OPC=nop                  
  nop                             #  136   0x13d310  1      OPC=nop                  
.L_13d310:                        #        0x13d311  0      OPC=<label>              
  movl $0xffffffff, %eax          #  137   0x13d311  6      OPC=movl_r32_imm32_1     
  jmpq .L_13d210                  #  138   0x13d317  5      OPC=jmpq_label_1         
  nop                             #  139   0x13d31c  1      OPC=nop                  
  nop                             #  140   0x13d31d  1      OPC=nop                  
  nop                             #  141   0x13d31e  1      OPC=nop                  
  nop                             #  142   0x13d31f  1      OPC=nop                  
  nop                             #  143   0x13d320  1      OPC=nop                  
  nop                             #  144   0x13d321  1      OPC=nop                  
                                                                                     
.size open_socket, .-open_socket

