  .text
  .globl getlogin_r_fd0
  .type getlogin_r_fd0, @function

#! file-offset 0x13e390
#! rip-offset  0x13e390
#! capacity    400 bytes

# Text                              #  Line  RIP       Bytes  Opcode                
.getlogin_r_fd0:                    #        0x13e390  0      OPC=<label>           
  pushq %r14                        #  1     0x13e390  2      OPC=pushq_r64_1       
  pushq %r13                        #  2     0x13e392  2      OPC=pushq_r64_1       
  movl $0x200, %edx                 #  3     0x13e394  5      OPC=movl_r32_imm32    
  pushq %r12                        #  4     0x13e399  2      OPC=pushq_r64_1       
  pushq %rbp                        #  5     0x13e39b  1      OPC=pushq_r64_1       
  movq %rdi, %r13                   #  6     0x13e39c  3      OPC=movq_r64_r64      
  pushq %rbx                        #  7     0x13e39f  1      OPC=pushq_r64_1       
  xorl %edi, %edi                   #  8     0x13e3a0  2      OPC=xorl_r32_r32      
  movq %rsi, %r12                   #  9     0x13e3a2  3      OPC=movq_r64_r64      
  subq $0x510, %rsp                 #  10    0x13e3a5  7      OPC=subq_r64_imm32    
  leaq 0x310(%rsp), %r14            #  11    0x13e3ac  8      OPC=leaq_r64_m16      
  movq %r14, %rsi                   #  12    0x13e3b4  3      OPC=movq_r64_r64      
  callq .ttyname_r                  #  13    0x13e3b7  5      OPC=callq_label       
  testl %eax, %eax                  #  14    0x13e3bc  2      OPC=testl_r32_r32     
  movl %eax, %ebx                   #  15    0x13e3be  2      OPC=movl_r32_r32      
  movl %eax, %ebp                   #  16    0x13e3c0  2      OPC=movl_r32_r32      
  je .L_13e3e0                      #  17    0x13e3c2  2      OPC=je_label          
.L_13e3c4:                          #        0x13e3c4  0      OPC=<label>           
  addq $0x510, %rsp                 #  18    0x13e3c4  7      OPC=addq_r64_imm32    
  movl %ebp, %eax                   #  19    0x13e3cb  2      OPC=movl_r32_r32      
  popq %rbx                         #  20    0x13e3cd  1      OPC=popq_r64_1        
  popq %rbp                         #  21    0x13e3ce  1      OPC=popq_r64_1        
  popq %r12                         #  22    0x13e3cf  2      OPC=popq_r64_1        
  popq %r13                         #  23    0x13e3d1  2      OPC=popq_r64_1        
  popq %r14                         #  24    0x13e3d3  2      OPC=popq_r64_1        
  retq                              #  25    0x13e3d5  1      OPC=retq              
  nop                               #  26    0x13e3d6  1      OPC=nop               
  nop                               #  27    0x13e3d7  1      OPC=nop               
  nop                               #  28    0x13e3d8  1      OPC=nop               
  nop                               #  29    0x13e3d9  1      OPC=nop               
  nop                               #  30    0x13e3da  1      OPC=nop               
  nop                               #  31    0x13e3db  1      OPC=nop               
  nop                               #  32    0x13e3dc  1      OPC=nop               
  nop                               #  33    0x13e3dd  1      OPC=nop               
  nop                               #  34    0x13e3de  1      OPC=nop               
  nop                               #  35    0x13e3df  1      OPC=nop               
.L_13e3e0:                          #        0x13e3e0  0      OPC=<label>           
  leaq 0x10(%rsp), %rbp             #  36    0x13e3e0  5      OPC=leaq_r64_m16      
  leaq 0x5(%r14), %rsi              #  37    0x13e3e5  4      OPC=leaq_r64_m16      
  movl $0x20, %edx                  #  38    0x13e3e9  5      OPC=movl_r32_imm32    
  leaq 0x8(%rbp), %rdi              #  39    0x13e3ee  4      OPC=leaq_r64_m16      
  callq .__GI_strncpy               #  40    0x13e3f2  5      OPC=callq_label       
  movl $0x1, %esi                   #  41    0x13e3f7  5      OPC=movl_r32_imm32    
  movl %ebx, %eax                   #  42    0x13e3fc  2      OPC=movl_r32_r32      
  cmpl $0x0, 0x2887fb(%rip)         #  43    0x13e3fe  7      OPC=cmpl_m32_imm8     
  je .L_13e413                      #  44    0x13e405  2      OPC=je_label          
  lock                              #  45    0x13e407  1      OPC=lock              
  cmpxchgl %esi, 0x288a69(%rip)     #  46    0x13e408  7      OPC=cmpxchgl_m32_r32  
  nop                               #  47    0x13e40f  1      OPC=nop               
  jne .L_13e41c                     #  48    0x13e410  2      OPC=jne_label         
  jmpq .L_13e436                    #  49    0x13e412  2      OPC=jmpq_label        
.L_13e413:                          #        0x13e414  0      OPC=<label>           
  cmpxchgl %esi, 0x288a5e(%rip)     #  50    0x13e414  7      OPC=cmpxchgl_m32_r32  
  je .L_13e436                      #  51    0x13e41b  2      OPC=je_label          
.L_13e41c:                          #        0x13e41d  0      OPC=<label>           
  leaq 0x288a55(%rip), %rdi         #  52    0x13e41d  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  53    0x13e424  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  54    0x13e42b  5      OPC=callq_label       
  addq $0x80, %rsp                  #  55    0x13e430  7      OPC=addq_r64_imm32    
.L_13e436:                          #        0x13e437  0      OPC=<label>           
  movq 0x2840f3(%rip), %rax         #  56    0x13e437  7      OPC=movq_r64_m64      
  callq (%rax)                      #  57    0x13e43e  2      OPC=callq_m64         
  movq 0x2840ea(%rip), %rax         #  58    0x13e440  7      OPC=movq_r64_m64      
  movq %rbp, %rdi                   #  59    0x13e447  3      OPC=movq_r64_r64      
  leaq 0x8(%rsp), %rdx              #  60    0x13e44a  5      OPC=leaq_r64_m16      
  leaq 0x190(%rsp), %rsi            #  61    0x13e44f  8      OPC=leaq_r64_m16      
  callq 0x18(%rax)                  #  62    0x13e457  3      OPC=callq_m64         
  testl %eax, %eax                  #  63    0x13e45a  2      OPC=testl_r32_r32     
  movl %eax, %ebp                   #  64    0x13e45c  2      OPC=movl_r32_r32      
  js .L_13e4f0                      #  65    0x13e45e  6      OPC=js_label_1        
.L_13e463:                          #        0x13e464  0      OPC=<label>           
  movq 0x2840c6(%rip), %rax         #  66    0x13e464  7      OPC=movq_r64_m64      
  callq 0x28(%rax)                  #  67    0x13e46b  3      OPC=callq_m64         
  leaq 0x2815ac(%rip), %rax         #  68    0x13e46e  7      OPC=leaq_r64_m16      
  movq %rax, 0x2840b5(%rip)         #  69    0x13e475  7      OPC=movq_m64_r64      
  cmpl $0x0, 0x28877e(%rip)         #  70    0x13e47c  7      OPC=cmpl_m32_imm8     
  je .L_13e48f                      #  71    0x13e483  2      OPC=je_label          
  lock                              #  72    0x13e485  1      OPC=lock              
  decl 0x2889ed(%rip)               #  73    0x13e486  6      OPC=decl_m32          
  nop                               #  74    0x13e48c  1      OPC=nop               
  jne .L_13e497                     #  75    0x13e48d  2      OPC=jne_label         
  jmpq .L_13e4b1                    #  76    0x13e48f  2      OPC=jmpq_label        
.L_13e48f:                          #        0x13e491  0      OPC=<label>           
  decl 0x2889e3(%rip)               #  77    0x13e491  6      OPC=decl_m32          
  je .L_13e4b1                      #  78    0x13e497  2      OPC=je_label          
.L_13e497:                          #        0x13e499  0      OPC=<label>           
  leaq 0x2889da(%rip), %rdi         #  79    0x13e499  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  80    0x13e4a0  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  81    0x13e4a7  5      OPC=callq_label       
  addq $0x80, %rsp                  #  82    0x13e4ac  7      OPC=addq_r64_imm32    
.L_13e4b1:                          #        0x13e4b3  0      OPC=<label>           
  testl %ebp, %ebp                  #  83    0x13e4b3  2      OPC=testl_r32_r32     
  jne .L_13e3c4                     #  84    0x13e4b5  6      OPC=jne_label_1       
  movq 0x8(%rsp), %rax              #  85    0x13e4bb  5      OPC=movq_r64_m64      
  leaq 0x2c(%rax), %rbx             #  86    0x13e4c0  4      OPC=leaq_r64_m16      
  movq %rbx, %rdi                   #  87    0x13e4c4  3      OPC=movq_r64_r64      
  callq .strlen                     #  88    0x13e4c7  5      OPC=callq_label       
  leaq 0x1(%rax), %rdx              #  89    0x13e4cc  4      OPC=leaq_r64_m16      
  cmpq %r12, %rdx                   #  90    0x13e4d0  3      OPC=cmpq_r64_r64      
  jbe .L_13e510                     #  91    0x13e4d3  2      OPC=jbe_label         
  movq 0x2829a6(%rip), %rax         #  92    0x13e4d5  7      OPC=movq_r64_m64      
  movb $0x22, %bpl                  #  93    0x13e4dc  3      OPC=movb_r8_imm8      
  movl $0x22, (%rax)                #  94    0x13e4df  6      OPC=movl_m32_imm32    
  nop                               #  95    0x13e4e5  1      OPC=nop               
  jmpq .L_13e3c4                    #  96    0x13e4e6  5      OPC=jmpq_label_1      
  nop                               #  97    0x13e4eb  1      OPC=nop               
  nop                               #  98    0x13e4ec  1      OPC=nop               
  nop                               #  99    0x13e4ed  1      OPC=nop               
  nop                               #  100   0x13e4ee  1      OPC=nop               
  nop                               #  101   0x13e4ef  1      OPC=nop               
  nop                               #  102   0x13e4f0  1      OPC=nop               
  nop                               #  103   0x13e4f1  1      OPC=nop               
.L_13e4f0:                          #        0x13e4f2  0      OPC=<label>           
  movq 0x282989(%rip), %rax         #  104   0x13e4f2  7      OPC=movq_r64_m64      
  movl (%rax), %ebp                 #  105   0x13e4f9  2      OPC=movl_r32_m32      
  nop                               #  106   0x13e4fb  1      OPC=nop               
  movl $0x2, %eax                   #  107   0x13e4fc  5      OPC=movl_r32_imm32    
  cmpl $0x3, %ebp                   #  108   0x13e501  3      OPC=cmpl_r32_imm8     
  cmovel %eax, %ebp                 #  109   0x13e504  3      OPC=cmovel_r32_r32    
  jmpq .L_13e463                    #  110   0x13e507  5      OPC=jmpq_label_1      
  nop                               #  111   0x13e50c  1      OPC=nop               
  nop                               #  112   0x13e50d  1      OPC=nop               
  nop                               #  113   0x13e50e  1      OPC=nop               
  nop                               #  114   0x13e50f  1      OPC=nop               
  nop                               #  115   0x13e510  1      OPC=nop               
  nop                               #  116   0x13e511  1      OPC=nop               
.L_13e510:                          #        0x13e512  0      OPC=<label>           
  movq %rbx, %rsi                   #  117   0x13e512  3      OPC=movq_r64_r64      
  movq %r13, %rdi                   #  118   0x13e515  3      OPC=movq_r64_r64      
  callq .__GI_memcpy                #  119   0x13e518  5      OPC=callq_label       
  jmpq .L_13e3c4                    #  120   0x13e51d  5      OPC=jmpq_label_1      
                                                                                    
.size getlogin_r_fd0, .-getlogin_r_fd0

