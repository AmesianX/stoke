  .text
  .globl save_for_backup
  .type save_for_backup, @function

#! file-offset 0x798d0
#! rip-offset  0x798d0
#! capacity    448 bytes

# Text                      #  Line  RIP      Bytes  Opcode                
.save_for_backup:           #        0x798d0  0      OPC=<label>           
  pushq %r15                #  1     0x798d0  2      OPC=pushq_r64_1       
  pushq %r14                #  2     0x798d2  2      OPC=pushq_r64_1       
  pushq %r13                #  3     0x798d4  2      OPC=pushq_r64_1       
  pushq %r12                #  4     0x798d6  2      OPC=pushq_r64_1       
  movq %rsi, %r13           #  5     0x798d8  3      OPC=movq_r64_r64      
  pushq %rbp                #  6     0x798db  1      OPC=pushq_r64_1       
  pushq %rbx                #  7     0x798dc  1      OPC=pushq_r64_1       
  movq %rdi, %rbp           #  8     0x798dd  3      OPC=movq_r64_r64      
  movq %r13, %rbx           #  9     0x798e0  3      OPC=movq_r64_r64      
  subq $0x28, %rsp          #  10    0x798e3  4      OPC=subq_r64_imm8     
  callq ._IO_least_marker   #  11    0x798e7  5      OPC=callq_label       
  movq 0x18(%rbp), %r8      #  12    0x798ec  4      OPC=movq_r64_m64      
  movq 0x58(%rbp), %rsi     #  13    0x798f0  4      OPC=movq_r64_m64      
  movq %rax, %r15           #  14    0x798f4  3      OPC=movq_r64_r64      
  movq 0x48(%rbp), %rcx     #  15    0x798f7  4      OPC=movq_r64_m64      
  subq %r8, %rbx            #  16    0x798fb  3      OPC=subq_r64_r64      
  movq %rsi, %rdx           #  17    0x798fe  3      OPC=movq_r64_r64      
  movq %rbx, %r12           #  18    0x79901  3      OPC=movq_r64_r64      
  subq %rcx, %rdx           #  19    0x79904  3      OPC=subq_r64_r64      
  subq %rax, %r12           #  20    0x79907  3      OPC=subq_r64_r64      
  cmpq %rdx, %r12           #  21    0x7990a  3      OPC=cmpq_r64_r64      
  ja .L_79960               #  22    0x7990d  2      OPC=ja_label          
  subq %r12, %rdx           #  23    0x7990f  3      OPC=subq_r64_r64      
  testq %rax, %rax          #  24    0x79912  3      OPC=testq_r64_r64     
  movq %rdx, %r14           #  25    0x79915  3      OPC=movq_r64_r64      
  js .L_79a13               #  26    0x79918  6      OPC=js_label_1        
  testq %r12, %r12          #  27    0x7991e  3      OPC=testq_r64_r64     
  leaq (%rcx,%rdx,1), %r9   #  28    0x79921  4      OPC=leaq_r64_m16      
  jne .L_799f0              #  29    0x79925  6      OPC=jne_label_1       
.L_7992b:                   #        0x7992b  0      OPC=<label>           
  movq 0x60(%rbp), %rax     #  30    0x7992b  4      OPC=movq_r64_m64      
  movq %r9, 0x50(%rbp)      #  31    0x7992f  4      OPC=movq_m64_r64      
  movl %ebx, %edx           #  32    0x79933  2      OPC=movl_r32_r32      
  testq %rax, %rax          #  33    0x79935  3      OPC=testq_r64_r64     
  je .L_7994b               #  34    0x79938  2      OPC=je_label          
  nop                       #  35    0x7993a  1      OPC=nop               
  nop                       #  36    0x7993b  1      OPC=nop               
  nop                       #  37    0x7993c  1      OPC=nop               
  nop                       #  38    0x7993d  1      OPC=nop               
  nop                       #  39    0x7993e  1      OPC=nop               
  nop                       #  40    0x7993f  1      OPC=nop               
.L_79940:                   #        0x79940  0      OPC=<label>           
  subl %edx, 0x10(%rax)     #  41    0x79940  3      OPC=subl_m32_r32      
  movq (%rax), %rax         #  42    0x79943  3      OPC=movq_r64_m64      
  testq %rax, %rax          #  43    0x79946  3      OPC=testq_r64_r64     
  jne .L_79940              #  44    0x79949  2      OPC=jne_label         
.L_7994b:                   #        0x7994b  0      OPC=<label>           
  xorl %eax, %eax           #  45    0x7994b  2      OPC=xorl_r32_r32      
.L_7994d:                   #        0x7994d  0      OPC=<label>           
  addq $0x28, %rsp          #  46    0x7994d  4      OPC=addq_r64_imm8     
  popq %rbx                 #  47    0x79951  1      OPC=popq_r64_1        
  popq %rbp                 #  48    0x79952  1      OPC=popq_r64_1        
  popq %r12                 #  49    0x79953  2      OPC=popq_r64_1        
  popq %r13                 #  50    0x79955  2      OPC=popq_r64_1        
  popq %r14                 #  51    0x79957  2      OPC=popq_r64_1        
  popq %r15                 #  52    0x79959  2      OPC=popq_r64_1        
  retq                      #  53    0x7995b  1      OPC=retq              
  nop                       #  54    0x7995c  1      OPC=nop               
  nop                       #  55    0x7995d  1      OPC=nop               
  nop                       #  56    0x7995e  1      OPC=nop               
  nop                       #  57    0x7995f  1      OPC=nop               
.L_79960:                   #        0x79960  0      OPC=<label>           
  leaq 0x64(%r12), %rax     #  58    0x79960  5      OPC=leaq_r64_m16      
  movq %rcx, 0x18(%rsp)     #  59    0x79965  5      OPC=movq_m64_r64      
  movq %rsi, 0x10(%rsp)     #  60    0x7996a  5      OPC=movq_m64_r64      
  movq %r8, 0x8(%rsp)       #  61    0x7996f  5      OPC=movq_m64_r64      
  movq %rax, %rdi           #  62    0x79974  3      OPC=movq_r64_r64      
  movq %rax, (%rsp)         #  63    0x79977  4      OPC=movq_m64_r64      
  callq .memalign_plt       #  64    0x7997b  5      OPC=callq_label       
  testq %rax, %rax          #  65    0x79980  3      OPC=testq_r64_r64     
  movq %rax, %r14           #  66    0x79983  3      OPC=movq_r64_r64      
  je .L_79a80               #  67    0x79986  6      OPC=je_label_1        
  testq %r15, %r15          #  68    0x7998c  3      OPC=testq_r64_r64     
  movq 0x8(%rsp), %r8       #  69    0x7998f  5      OPC=movq_r64_m64      
  movq 0x10(%rsp), %rsi     #  70    0x79994  5      OPC=movq_r64_m64      
  movq 0x18(%rsp), %rcx     #  71    0x79999  5      OPC=movq_r64_m64      
  js .L_79a3b               #  72    0x7999e  6      OPC=js_label_1        
  leaq 0x64(%rax), %r9      #  73    0x799a4  4      OPC=leaq_r64_m16      
  leaq (%r8,%r15,1), %rsi   #  74    0x799a8  4      OPC=leaq_r64_m16      
  movq %r12, %rdx           #  75    0x799ac  3      OPC=movq_r64_r64      
  movq %rcx, 0x8(%rsp)      #  76    0x799af  5      OPC=movq_m64_r64      
  movq %r9, %rdi            #  77    0x799b4  3      OPC=movq_r64_r64      
  callq .__GI_memcpy        #  78    0x799b7  5      OPC=callq_label       
  movq 0x8(%rsp), %rcx      #  79    0x799bc  5      OPC=movq_r64_m64      
  movq %rax, %r9            #  80    0x799c1  3      OPC=movq_r64_r64      
.L_799c4:                   #        0x799c4  0      OPC=<label>           
  movq %rcx, %rdi           #  81    0x799c4  3      OPC=movq_r64_r64      
  movq %r9, 0x8(%rsp)       #  82    0x799c7  5      OPC=movq_m64_r64      
  movq %r13, %rbx           #  83    0x799cc  3      OPC=movq_r64_r64      
  callq .L_1f8c0            #  84    0x799cf  5      OPC=callq_label       
  movq %r14, 0x48(%rbp)     #  85    0x799d4  4      OPC=movq_m64_r64      
  addq (%rsp), %r14         #  86    0x799d8  4      OPC=addq_r64_m64      
  subq 0x18(%rbp), %rbx     #  87    0x799dc  4      OPC=subq_r64_m64      
  movq 0x8(%rsp), %r9       #  88    0x799e0  5      OPC=movq_r64_m64      
  movq %r14, 0x58(%rbp)     #  89    0x799e5  4      OPC=movq_m64_r64      
  jmpq .L_7992b             #  90    0x799e9  5      OPC=jmpq_label_1      
  xchgw %ax, %ax            #  91    0x799ee  2      OPC=xchgw_ax_r16      
.L_799f0:                   #        0x799f0  0      OPC=<label>           
  leaq (%r8,%rax,1), %rsi   #  92    0x799f0  4      OPC=leaq_r64_m16      
  leaq (%rcx,%rdx,1), %rdi  #  93    0x799f4  4      OPC=leaq_r64_m16      
  movq %r12, %rdx           #  94    0x799f8  3      OPC=movq_r64_r64      
.L_799fb:                   #        0x799fb  0      OPC=<label>           
  callq .__GI_memcpy        #  95    0x799fb  5      OPC=callq_label       
  movq %r13, %rbx           #  96    0x79a00  3      OPC=movq_r64_r64      
  movq %r14, %r9            #  97    0x79a03  3      OPC=movq_r64_r64      
  subq 0x18(%rbp), %rbx     #  98    0x79a06  4      OPC=subq_r64_m64      
  addq 0x48(%rbp), %r9      #  99    0x79a0a  4      OPC=addq_r64_m64      
  jmpq .L_7992b             #  100   0x79a0e  5      OPC=jmpq_label_1      
.L_79a13:                   #        0x79a13  0      OPC=<label>           
  movq %rax, %rdx           #  101   0x79a13  3      OPC=movq_r64_r64      
  leaq (%rcx,%r14,1), %rdi  #  102   0x79a16  4      OPC=leaq_r64_m16      
  addq %rax, %rsi           #  103   0x79a1a  3      OPC=addq_r64_r64      
  negq %rdx                 #  104   0x79a1d  3      OPC=negq_r64          
  callq .__GI_memmove       #  105   0x79a20  5      OPC=callq_label       
  movq 0x18(%rbp), %rsi     #  106   0x79a25  4      OPC=movq_r64_m64      
  movq %r14, %rdi           #  107   0x79a29  3      OPC=movq_r64_r64      
  movq %r13, %rdx           #  108   0x79a2c  3      OPC=movq_r64_r64      
  subq %r15, %rdi           #  109   0x79a2f  3      OPC=subq_r64_r64      
  addq 0x48(%rbp), %rdi     #  110   0x79a32  4      OPC=addq_r64_m64      
  subq %rsi, %rdx           #  111   0x79a36  3      OPC=subq_r64_r64      
  jmpq .L_799fb             #  112   0x79a39  2      OPC=jmpq_label        
.L_79a3b:                   #        0x79a3b  0      OPC=<label>           
  leaq 0x64(%rax), %r9      #  113   0x79a3b  4      OPC=leaq_r64_m16      
  movq %r15, %r12           #  114   0x79a3f  3      OPC=movq_r64_r64      
  addq %r15, %rsi           #  115   0x79a42  3      OPC=addq_r64_r64      
  negq %r12                 #  116   0x79a45  3      OPC=negq_r64          
  movq %r8, 0x10(%rsp)      #  117   0x79a48  5      OPC=movq_m64_r64      
  movq %r9, %rdi            #  118   0x79a4d  3      OPC=movq_r64_r64      
  movq %r12, %rdx           #  119   0x79a50  3      OPC=movq_r64_r64      
  movq %r9, 0x8(%rsp)       #  120   0x79a53  5      OPC=movq_m64_r64      
  callq .__GI_memcpy        #  121   0x79a58  5      OPC=callq_label       
  movq 0x10(%rsp), %r8      #  122   0x79a5d  5      OPC=movq_r64_m64      
  leaq (%rax,%r12,1), %rdi  #  123   0x79a62  4      OPC=leaq_r64_m16      
  movq %rbx, %rdx           #  124   0x79a66  3      OPC=movq_r64_r64      
  movq %r8, %rsi            #  125   0x79a69  3      OPC=movq_r64_r64      
  callq .__GI_memcpy        #  126   0x79a6c  5      OPC=callq_label       
  movq 0x8(%rsp), %r9       #  127   0x79a71  5      OPC=movq_r64_m64      
  movq 0x18(%rsp), %rcx     #  128   0x79a76  5      OPC=movq_r64_m64      
  jmpq .L_799c4             #  129   0x79a7b  5      OPC=jmpq_label_1      
.L_79a80:                   #        0x79a80  0      OPC=<label>           
  movl $0xffffffff, %eax    #  130   0x79a80  6      OPC=movl_r32_imm32_1  
  jmpq .L_7994d             #  131   0x79a86  5      OPC=jmpq_label_1      
  nop                       #  132   0x79a8b  1      OPC=nop               
  nop                       #  133   0x79a8c  1      OPC=nop               
  nop                       #  134   0x79a8d  1      OPC=nop               
  nop                       #  135   0x79a8e  1      OPC=nop               
  nop                       #  136   0x79a8f  1      OPC=nop               
  nop                       #  137   0x79a90  1      OPC=nop               
                                                                           
.size save_for_backup, .-save_for_backup

