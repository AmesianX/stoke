  .text
  .globl fmemopen__GLIBC_2_22
  .type fmemopen__GLIBC_2_22, @function

#! file-offset 0x766f0
#! rip-offset  0x766f0
#! capacity    416 bytes

# Text                             #  Line  RIP      Bytes  Opcode              
.fmemopen__GLIBC_2_22:             #        0x766f0  0      OPC=<label>         
  pushq %r14                       #  1     0x766f0  2      OPC=pushq_r64_1     
  pushq %r13                       #  2     0x766f2  2      OPC=pushq_r64_1     
  movq %rsi, %r13                  #  3     0x766f4  3      OPC=movq_r64_r64    
  pushq %r12                       #  4     0x766f7  2      OPC=pushq_r64_1     
  pushq %rbp                       #  5     0x766f9  1      OPC=pushq_r64_1     
  movl $0x1, %esi                  #  6     0x766fa  5      OPC=movl_r32_imm32  
  pushq %rbx                       #  7     0x766ff  1      OPC=pushq_r64_1     
  movq %rdi, %rbp                  #  8     0x76700  3      OPC=movq_r64_r64    
  movl $0x28, %edi                 #  9     0x76703  5      OPC=movl_r32_imm32  
  movq %rdx, %r14                  #  10    0x76708  3      OPC=movq_r64_r64    
  subq $0x20, %rsp                 #  11    0x7670b  4      OPC=subq_r64_imm8   
  callq .L_1f8b0                   #  12    0x7670f  5      OPC=callq_label     
  testq %rax, %rax                 #  13    0x76714  3      OPC=testq_r64_r64   
  movq %rax, %rbx                  #  14    0x76717  3      OPC=movq_r64_r64    
  je .L_76880                      #  15    0x7671a  6      OPC=je_label_1      
  testq %rbp, %rbp                 #  16    0x76720  3      OPC=testq_r64_r64   
  sete %al                         #  17    0x76723  3      OPC=sete_r8         
  movzbl %al, %edx                 #  18    0x76726  3      OPC=movzbl_r32_r8   
  testb %al, %al                   #  19    0x76729  2      OPC=testb_r8_r8     
  movl %edx, 0x8(%rbx)             #  20    0x7672b  3      OPC=movl_m32_r32    
  jne .L_76770                     #  21    0x7672e  2      OPC=jne_label       
  movq %rbp, %rax                  #  22    0x76730  3      OPC=movq_r64_r64    
  negq %rax                        #  23    0x76733  3      OPC=negq_r64        
  cmpq %rax, %r13                  #  24    0x76736  3      OPC=cmpq_r64_r64    
  ja .L_76850                      #  25    0x76739  6      OPC=ja_label_1      
  movzbl (%r14), %r12d             #  26    0x7673f  4      OPC=movzbl_r32_m8   
  movq %rbp, (%rbx)                #  27    0x76743  3      OPC=movq_m64_r64    
  cmpb $0x77, %r12b                #  28    0x76746  4      OPC=cmpb_r8_imm8    
  je .L_767f0                      #  29    0x7674a  6      OPC=je_label_1      
.L_76750:                          #        0x76750  0      OPC=<label>         
  cmpb $0x61, %r12b                #  30    0x76750  4      OPC=cmpb_r8_imm8    
  je .L_76818                      #  31    0x76754  6      OPC=je_label_1      
  cmpb $0x72, %r12b                #  32    0x7675a  4      OPC=cmpb_r8_imm8    
  movq %r13, 0x10(%rbx)            #  33    0x7675e  4      OPC=movq_m64_r64    
  je .L_76795                      #  34    0x76762  2      OPC=je_label        
  movl $0x0, 0xc(%rbx)             #  35    0x76764  7      OPC=movl_m32_imm32  
  xorl %eax, %eax                  #  36    0x7676b  2      OPC=xorl_r32_r32    
  jmpq .L_767a2                    #  37    0x7676d  2      OPC=jmpq_label      
  nop                              #  38    0x7676f  1      OPC=nop             
.L_76770:                          #        0x76770  0      OPC=<label>         
  movq %r13, %rdi                  #  39    0x76770  3      OPC=movq_r64_r64    
  callq .memalign_plt              #  40    0x76773  5      OPC=callq_label     
  testq %rax, %rax                 #  41    0x76778  3      OPC=testq_r64_r64   
  movq %rax, (%rbx)                #  42    0x7677b  3      OPC=movq_m64_r64    
  je .L_7683f                      #  43    0x7677e  6      OPC=je_label_1      
  movzbl (%r14), %r12d             #  44    0x76784  4      OPC=movzbl_r32_m8   
  movb $0x0, (%rax)                #  45    0x76788  3      OPC=movb_m8_imm8    
  movq %r13, 0x10(%rbx)            #  46    0x7678b  4      OPC=movq_m64_r64    
  cmpb $0x72, %r12b                #  47    0x7678f  4      OPC=cmpb_r8_imm8    
  jne .L_767fb                     #  48    0x76793  2      OPC=jne_label       
.L_76795:                          #        0x76795  0      OPC=<label>         
  movq %r13, 0x20(%rbx)            #  49    0x76795  4      OPC=movq_m64_r64    
  movl $0x0, 0xc(%rbx)             #  50    0x76799  7      OPC=movl_m32_imm32  
  xorl %eax, %eax                  #  51    0x767a0  2      OPC=xorl_r32_r32    
.L_767a2:                          #        0x767a2  0      OPC=<label>         
  movq %rax, 0x18(%rbx)            #  52    0x767a2  4      OPC=movq_m64_r64    
  leaq -0x23d(%rip), %rax          #  53    0x767a6  7      OPC=leaq_r64_m16    
  movq %r14, %rsi                  #  54    0x767ad  3      OPC=movq_r64_r64    
  movq %rbx, %rdi                  #  55    0x767b0  3      OPC=movq_r64_r64    
  pushq %rax                       #  56    0x767b3  1      OPC=pushq_r64_1     
  leaq -0x29b(%rip), %rax          #  57    0x767b4  7      OPC=leaq_r64_m16    
  pushq %rax                       #  58    0x767bb  1      OPC=pushq_r64_1     
  leaq -0x233(%rip), %rax          #  59    0x767bc  7      OPC=leaq_r64_m16    
  pushq %rax                       #  60    0x767c3  1      OPC=pushq_r64_1     
  leaq -0x15b(%rip), %rax          #  61    0x767c4  7      OPC=leaq_r64_m16    
  pushq %rax                       #  62    0x767cb  1      OPC=pushq_r64_1     
  callq .fopencookie__GLIBC_2_2_5  #  63    0x767cc  5      OPC=callq_label     
  addq $0x20, %rsp                 #  64    0x767d1  4      OPC=addq_r64_imm8   
  testq %rax, %rax                 #  65    0x767d5  3      OPC=testq_r64_r64   
  je .L_76830                      #  66    0x767d8  2      OPC=je_label        
.L_767da:                          #        0x767da  0      OPC=<label>         
  addq $0x20, %rsp                 #  67    0x767da  4      OPC=addq_r64_imm8   
  popq %rbx                        #  68    0x767de  1      OPC=popq_r64_1      
  popq %rbp                        #  69    0x767df  1      OPC=popq_r64_1      
  popq %r12                        #  70    0x767e0  2      OPC=popq_r64_1      
  popq %r13                        #  71    0x767e2  2      OPC=popq_r64_1      
  popq %r14                        #  72    0x767e4  2      OPC=popq_r64_1      
  retq                             #  73    0x767e6  1      OPC=retq            
  nop                              #  74    0x767e7  1      OPC=nop             
  nop                              #  75    0x767e8  1      OPC=nop             
  nop                              #  76    0x767e9  1      OPC=nop             
  nop                              #  77    0x767ea  1      OPC=nop             
  nop                              #  78    0x767eb  1      OPC=nop             
  nop                              #  79    0x767ec  1      OPC=nop             
  nop                              #  80    0x767ed  1      OPC=nop             
  nop                              #  81    0x767ee  1      OPC=nop             
  nop                              #  82    0x767ef  1      OPC=nop             
.L_767f0:                          #        0x767f0  0      OPC=<label>         
  cmpb $0x2b, 0x1(%r14)            #  83    0x767f0  5      OPC=cmpb_m8_imm8    
  je .L_76870                      #  84    0x767f5  2      OPC=je_label        
.L_767f7:                          #        0x767f7  0      OPC=<label>         
  movq %r13, 0x10(%rbx)            #  85    0x767f7  4      OPC=movq_m64_r64    
.L_767fb:                          #        0x767fb  0      OPC=<label>         
  cmpb $0x61, %r12b                #  86    0x767fb  4      OPC=cmpb_r8_imm8    
  sete %dl                         #  87    0x767ff  3      OPC=sete_r8         
  movzbl %dl, %eax                 #  88    0x76802  3      OPC=movzbl_r32_r8   
  movl %eax, 0xc(%rbx)             #  89    0x76805  3      OPC=movl_m32_r32    
  xorl %eax, %eax                  #  90    0x76808  2      OPC=xorl_r32_r32    
  testb %dl, %dl                   #  91    0x7680a  2      OPC=testb_r8_r8     
  je .L_767a2                      #  92    0x7680c  2      OPC=je_label        
  movq 0x20(%rbx), %rax            #  93    0x7680e  4      OPC=movq_r64_m64    
  jmpq .L_767a2                    #  94    0x76812  2      OPC=jmpq_label      
  nop                              #  95    0x76814  1      OPC=nop             
  nop                              #  96    0x76815  1      OPC=nop             
  nop                              #  97    0x76816  1      OPC=nop             
  nop                              #  98    0x76817  1      OPC=nop             
.L_76818:                          #        0x76818  0      OPC=<label>         
  movq %r13, %rsi                  #  99    0x76818  3      OPC=movq_r64_r64    
  movq %rbp, %rdi                  #  100   0x7681b  3      OPC=movq_r64_r64    
  callq .strnlen                   #  101   0x7681e  5      OPC=callq_label     
  movq %rax, 0x20(%rbx)            #  102   0x76823  4      OPC=movq_m64_r64    
  jmpq .L_767f7                    #  103   0x76827  2      OPC=jmpq_label      
  nop                              #  104   0x76829  1      OPC=nop             
  nop                              #  105   0x7682a  1      OPC=nop             
  nop                              #  106   0x7682b  1      OPC=nop             
  nop                              #  107   0x7682c  1      OPC=nop             
  nop                              #  108   0x7682d  1      OPC=nop             
  nop                              #  109   0x7682e  1      OPC=nop             
  nop                              #  110   0x7682f  1      OPC=nop             
.L_76830:                          #        0x76830  0      OPC=<label>         
  movl 0x8(%rbx), %eax             #  111   0x76830  3      OPC=movl_r32_m32    
  testl %eax, %eax                 #  112   0x76833  2      OPC=testl_r32_r32   
  je .L_7683f                      #  113   0x76835  2      OPC=je_label        
  movq (%rbx), %rdi                #  114   0x76837  3      OPC=movq_r64_m64    
  callq .L_1f8c0                   #  115   0x7683a  5      OPC=callq_label     
.L_7683f:                          #        0x7683f  0      OPC=<label>         
  movq %rbx, %rdi                  #  116   0x7683f  3      OPC=movq_r64_r64    
  callq .L_1f8c0                   #  117   0x76842  5      OPC=callq_label     
  xorl %eax, %eax                  #  118   0x76847  2      OPC=xorl_r32_r32    
  jmpq .L_767da                    #  119   0x76849  2      OPC=jmpq_label      
  nop                              #  120   0x7684b  1      OPC=nop             
  nop                              #  121   0x7684c  1      OPC=nop             
  nop                              #  122   0x7684d  1      OPC=nop             
  nop                              #  123   0x7684e  1      OPC=nop             
  nop                              #  124   0x7684f  1      OPC=nop             
.L_76850:                          #        0x76850  0      OPC=<label>         
  movq %rbx, %rdi                  #  125   0x76850  3      OPC=movq_r64_r64    
  callq .L_1f8c0                   #  126   0x76853  5      OPC=callq_label     
  movq 0x34a621(%rip), %rax        #  127   0x76858  7      OPC=movq_r64_m64    
  movl $0x16, (%rax)               #  128   0x7685f  6      OPC=movl_m32_imm32  
  nop                              #  129   0x76865  1      OPC=nop             
  xorl %eax, %eax                  #  130   0x76866  2      OPC=xorl_r32_r32    
  jmpq .L_767da                    #  131   0x76868  5      OPC=jmpq_label_1    
  nop                              #  132   0x7686d  1      OPC=nop             
  nop                              #  133   0x7686e  1      OPC=nop             
  nop                              #  134   0x7686f  1      OPC=nop             
.L_76870:                          #        0x76870  0      OPC=<label>         
  movb $0x0, (%rbp)                #  135   0x76870  4      OPC=movb_m8_imm8    
  movzbl (%r14), %r12d             #  136   0x76874  4      OPC=movzbl_r32_m8   
  jmpq .L_76750                    #  137   0x76878  5      OPC=jmpq_label_1    
  nop                              #  138   0x7687d  1      OPC=nop             
  nop                              #  139   0x7687e  1      OPC=nop             
  nop                              #  140   0x7687f  1      OPC=nop             
.L_76880:                          #        0x76880  0      OPC=<label>         
  xorl %eax, %eax                  #  141   0x76880  2      OPC=xorl_r32_r32    
  jmpq .L_767da                    #  142   0x76882  5      OPC=jmpq_label_1    
  nop                              #  143   0x76887  1      OPC=nop             
  nop                              #  144   0x76888  1      OPC=nop             
  nop                              #  145   0x76889  1      OPC=nop             
  nop                              #  146   0x7688a  1      OPC=nop             
  nop                              #  147   0x7688b  1      OPC=nop             
  nop                              #  148   0x7688c  1      OPC=nop             
  nop                              #  149   0x7688d  1      OPC=nop             
  nop                              #  150   0x7688e  1      OPC=nop             
  nop                              #  151   0x7688f  1      OPC=nop             
                                                                                
.size fmemopen__GLIBC_2_22, .-fmemopen__GLIBC_2_22

