  .text
  .globl _IO_getline_info
  .type _IO_getline_info, @function

#! file-offset 0x6d830
#! rip-offset  0x6d830
#! capacity    432 bytes

# Text                          #  Line  RIP      Bytes  Opcode               
._IO_getline_info:              #        0x6d830  0      OPC=<label>          
  pushq %r15                    #  1     0x6d830  2      OPC=pushq_r64_1      
  pushq %r14                    #  2     0x6d832  2      OPC=pushq_r64_1      
  movq %rdi, %r15               #  3     0x6d834  3      OPC=movq_r64_r64     
  pushq %r13                    #  4     0x6d837  2      OPC=pushq_r64_1      
  pushq %r12                    #  5     0x6d839  2      OPC=pushq_r64_1      
  movq %rdx, %r13               #  6     0x6d83b  3      OPC=movq_r64_r64     
  pushq %rbp                    #  7     0x6d83e  1      OPC=pushq_r64_1      
  pushq %rbx                    #  8     0x6d83f  1      OPC=pushq_r64_1      
  movl %ecx, %r12d              #  9     0x6d840  3      OPC=movl_r32_r32     
  subq $0x28, %rsp              #  10    0x6d843  4      OPC=subq_r64_imm8    
  testq %r9, %r9                #  11    0x6d847  3      OPC=testq_r64_r64    
  movq %rsi, 0x8(%rsp)          #  12    0x6d84a  5      OPC=movq_m64_r64     
  movl %r8d, 0x14(%rsp)         #  13    0x6d84f  5      OPC=movl_m32_r32     
  movq %r9, 0x18(%rsp)          #  14    0x6d854  5      OPC=movq_m64_r64     
  je .L_6d862                   #  15    0x6d859  2      OPC=je_label         
  movl $0x0, (%r9)              #  16    0x6d85b  7      OPC=movl_m32_imm32   
.L_6d862:                       #        0x6d862  0      OPC=<label>          
  movl 0xc0(%r15), %eax         #  17    0x6d862  7      OPC=movl_r32_m32     
  testl %eax, %eax              #  18    0x6d869  2      OPC=testl_r32_r32    
  je .L_6d9a2                   #  19    0x6d86b  6      OPC=je_label_1       
.L_6d871:                       #        0x6d871  0      OPC=<label>          
  testq %r13, %r13              #  20    0x6d871  3      OPC=testq_r64_r64    
  je .L_6d9d0                   #  21    0x6d874  6      OPC=je_label_1       
  movq 0x8(%rsp), %rbp          #  22    0x6d87a  5      OPC=movq_r64_m64     
  jmpq .L_6d8c2                 #  23    0x6d87f  2      OPC=jmpq_label       
  nop                           #  24    0x6d881  1      OPC=nop              
  nop                           #  25    0x6d882  1      OPC=nop              
  nop                           #  26    0x6d883  1      OPC=nop              
  nop                           #  27    0x6d884  1      OPC=nop              
  nop                           #  28    0x6d885  1      OPC=nop              
  nop                           #  29    0x6d886  1      OPC=nop              
  nop                           #  30    0x6d887  1      OPC=nop              
.L_6d888:                       #        0x6d888  0      OPC=<label>          
  cmpq %r13, %rbx               #  31    0x6d888  3      OPC=cmpq_r64_r64     
  movl %r12d, %esi              #  32    0x6d88b  3      OPC=movl_r32_r32     
  movq %r14, %rdi               #  33    0x6d88e  3      OPC=movq_r64_r64     
  cmovaeq %r13, %rbx            #  34    0x6d891  4      OPC=cmovaeq_r64_r64  
  movq %rbx, %rdx               #  35    0x6d895  3      OPC=movq_r64_r64     
  callq .memchr                 #  36    0x6d898  5      OPC=callq_label      
  testq %rax, %rax              #  37    0x6d89d  3      OPC=testq_r64_r64    
  movq %rax, %r8                #  38    0x6d8a0  3      OPC=movq_r64_r64     
  jne .L_6d920                  #  39    0x6d8a3  2      OPC=jne_label        
  movq %rbp, %rdi               #  40    0x6d8a5  3      OPC=movq_r64_r64     
  movq %rbx, %rdx               #  41    0x6d8a8  3      OPC=movq_r64_r64     
  movq %r14, %rsi               #  42    0x6d8ab  3      OPC=movq_r64_r64     
  subq %rbx, %r13               #  43    0x6d8ae  3      OPC=subq_r64_r64     
  addq %rbx, %rbp               #  44    0x6d8b1  3      OPC=addq_r64_r64     
  callq .__GI_memcpy            #  45    0x6d8b4  5      OPC=callq_label      
  addq %rbx, 0x8(%r15)          #  46    0x6d8b9  4      OPC=addq_m64_r64     
  testq %r13, %r13              #  47    0x6d8bd  3      OPC=testq_r64_r64    
  je .L_6d900                   #  48    0x6d8c0  2      OPC=je_label         
.L_6d8c2:                       #        0x6d8c2  0      OPC=<label>          
  movq 0x8(%r15), %r14          #  49    0x6d8c2  4      OPC=movq_r64_m64     
  movq 0x10(%r15), %rbx         #  50    0x6d8c6  4      OPC=movq_r64_m64     
  subq %r14, %rbx               #  51    0x6d8ca  3      OPC=subq_r64_r64     
  testq %rbx, %rbx              #  52    0x6d8cd  3      OPC=testq_r64_r64    
  jg .L_6d888                   #  53    0x6d8d0  2      OPC=jg_label         
  movq %r15, %rdi               #  54    0x6d8d2  3      OPC=movq_r64_r64     
  callq .__uflow                #  55    0x6d8d5  5      OPC=callq_label      
  cmpl $0xffffffff, %eax        #  56    0x6d8da  6      OPC=cmpl_r32_imm32   
  nop                           #  57    0x6d8e0  1      OPC=nop              
  nop                           #  58    0x6d8e1  1      OPC=nop              
  nop                           #  59    0x6d8e2  1      OPC=nop              
  je .L_6d970                   #  60    0x6d8e3  6      OPC=je_label_1       
  cmpl %eax, %r12d              #  61    0x6d8e9  3      OPC=cmpl_r32_r32     
  je .L_6d98c                   #  62    0x6d8ec  6      OPC=je_label_1       
  subq $0x1, %r13               #  63    0x6d8f2  4      OPC=subq_r64_imm8    
  movb %al, (%rbp)              #  64    0x6d8f6  3      OPC=movb_m8_r8       
  addq $0x1, %rbp               #  65    0x6d8f9  4      OPC=addq_r64_imm8    
  testq %r13, %r13              #  66    0x6d8fd  3      OPC=testq_r64_r64    
  jne .L_6d8c2                  #  67    0x6d900  2      OPC=jne_label        
  nop                           #  68    0x6d902  1      OPC=nop              
  nop                           #  69    0x6d903  1      OPC=nop              
  nop                           #  70    0x6d904  1      OPC=nop              
  nop                           #  71    0x6d905  1      OPC=nop              
.L_6d900:                       #        0x6d906  0      OPC=<label>          
  movq %rbp, %rax               #  72    0x6d906  3      OPC=movq_r64_r64     
  subq 0x8(%rsp), %rax          #  73    0x6d909  5      OPC=subq_r64_m64     
.L_6d908:                       #        0x6d90e  0      OPC=<label>          
  addq $0x28, %rsp              #  74    0x6d90e  4      OPC=addq_r64_imm8    
  popq %rbx                     #  75    0x6d912  1      OPC=popq_r64_1       
  popq %rbp                     #  76    0x6d913  1      OPC=popq_r64_1       
  popq %r12                     #  77    0x6d914  2      OPC=popq_r64_1       
  popq %r13                     #  78    0x6d916  2      OPC=popq_r64_1       
  popq %r14                     #  79    0x6d918  2      OPC=popq_r64_1       
  popq %r15                     #  80    0x6d91a  2      OPC=popq_r64_1       
  retq                          #  81    0x6d91c  1      OPC=retq             
  nop                           #  82    0x6d91d  1      OPC=nop              
  nop                           #  83    0x6d91e  1      OPC=nop              
  nop                           #  84    0x6d91f  1      OPC=nop              
  nop                           #  85    0x6d920  1      OPC=nop              
  nop                           #  86    0x6d921  1      OPC=nop              
  nop                           #  87    0x6d922  1      OPC=nop              
  nop                           #  88    0x6d923  1      OPC=nop              
  nop                           #  89    0x6d924  1      OPC=nop              
  nop                           #  90    0x6d925  1      OPC=nop              
.L_6d920:                       #        0x6d926  0      OPC=<label>          
  movq %rax, %r12               #  91    0x6d926  3      OPC=movq_r64_r64     
  movl 0x14(%rsp), %eax         #  92    0x6d929  4      OPC=movl_r32_m32     
  movq %rbp, %rbx               #  93    0x6d92d  3      OPC=movq_r64_r64     
  subq %r14, %r12               #  94    0x6d930  3      OPC=subq_r64_r64     
  subq 0x8(%rsp), %rbx          #  95    0x6d933  5      OPC=subq_r64_m64     
  testl %eax, %eax              #  96    0x6d938  2      OPC=testl_r32_r32    
  js .L_6d941                   #  97    0x6d93a  2      OPC=js_label         
  addq $0x1, %r8                #  98    0x6d93c  4      OPC=addq_r64_imm8    
  cmpl $0x1, %eax               #  99    0x6d940  3      OPC=cmpl_r32_imm8    
  sbbq $0xff, %r12              #  100   0x6d943  4      OPC=sbbq_r64_imm8    
.L_6d941:                       #        0x6d947  0      OPC=<label>          
  movq %r12, %rdx               #  101   0x6d947  3      OPC=movq_r64_r64     
  movq %r14, %rsi               #  102   0x6d94a  3      OPC=movq_r64_r64     
  movq %rbp, %rdi               #  103   0x6d94d  3      OPC=movq_r64_r64     
  movq %r8, 0x8(%rsp)           #  104   0x6d950  5      OPC=movq_m64_r64     
  callq .__GI_memcpy            #  105   0x6d955  5      OPC=callq_label      
  movq 0x8(%rsp), %r8           #  106   0x6d95a  5      OPC=movq_r64_m64     
  leaq (%r12,%rbx,1), %rax      #  107   0x6d95f  4      OPC=leaq_r64_m16     
  movq %r8, 0x8(%r15)           #  108   0x6d963  4      OPC=movq_m64_r64     
  addq $0x28, %rsp              #  109   0x6d967  4      OPC=addq_r64_imm8    
  popq %rbx                     #  110   0x6d96b  1      OPC=popq_r64_1       
  popq %rbp                     #  111   0x6d96c  1      OPC=popq_r64_1       
  popq %r12                     #  112   0x6d96d  2      OPC=popq_r64_1       
  popq %r13                     #  113   0x6d96f  2      OPC=popq_r64_1       
  popq %r14                     #  114   0x6d971  2      OPC=popq_r64_1       
  popq %r15                     #  115   0x6d973  2      OPC=popq_r64_1       
  retq                          #  116   0x6d975  1      OPC=retq             
.L_6d970:                       #        0x6d976  0      OPC=<label>          
  cmpq $0x0, 0x18(%rsp)         #  117   0x6d976  6      OPC=cmpq_m64_imm8    
  je .L_6d900                   #  118   0x6d97c  2      OPC=je_label         
  movq 0x18(%rsp), %rcx         #  119   0x6d97e  5      OPC=movq_r64_m64     
  movl %eax, (%rcx)             #  120   0x6d983  2      OPC=movl_m32_r32     
  movq %rbp, %rax               #  121   0x6d985  3      OPC=movq_r64_r64     
  subq 0x8(%rsp), %rax          #  122   0x6d988  5      OPC=subq_r64_m64     
  jmpq .L_6d908                 #  123   0x6d98d  5      OPC=jmpq_label_1     
.L_6d98c:                       #        0x6d992  0      OPC=<label>          
  cmpl $0x0, 0x14(%rsp)         #  124   0x6d992  5      OPC=cmpl_m32_imm8    
  movq %rbp, %rax               #  125   0x6d997  3      OPC=movq_r64_r64     
  jle .L_6d9b2                  #  126   0x6d99a  2      OPC=jle_label        
  addq $0x1, %rbp               #  127   0x6d99c  4      OPC=addq_r64_imm8    
  movb %r12b, (%rax)            #  128   0x6d9a0  3      OPC=movb_m8_r8       
  jmpq .L_6d900                 #  129   0x6d9a3  5      OPC=jmpq_label_1     
.L_6d9a2:                       #        0x6d9a8  0      OPC=<label>          
  movl $0xffffffff, 0xc0(%r15)  #  130   0x6d9a8  11     OPC=movl_m32_imm32   
  jmpq .L_6d871                 #  131   0x6d9b3  5      OPC=jmpq_label_1     
.L_6d9b2:                       #        0x6d9b8  0      OPC=<label>          
  je .L_6d900                   #  132   0x6d9b8  6      OPC=je_label_1       
  movl %r12d, %esi              #  133   0x6d9be  3      OPC=movl_r32_r32     
  movq %r15, %rdi               #  134   0x6d9c1  3      OPC=movq_r64_r64     
  callq ._IO_sputbackc          #  135   0x6d9c4  5      OPC=callq_label      
  jmpq .L_6d900                 #  136   0x6d9c9  5      OPC=jmpq_label_1     
  nop                           #  137   0x6d9ce  1      OPC=nop              
  nop                           #  138   0x6d9cf  1      OPC=nop              
  nop                           #  139   0x6d9d0  1      OPC=nop              
  nop                           #  140   0x6d9d1  1      OPC=nop              
  nop                           #  141   0x6d9d2  1      OPC=nop              
  nop                           #  142   0x6d9d3  1      OPC=nop              
  nop                           #  143   0x6d9d4  1      OPC=nop              
  nop                           #  144   0x6d9d5  1      OPC=nop              
.L_6d9d0:                       #        0x6d9d6  0      OPC=<label>          
  xorl %eax, %eax               #  145   0x6d9d6  2      OPC=xorl_r32_r32     
  jmpq .L_6d908                 #  146   0x6d9d8  5      OPC=jmpq_label_1     
  nop                           #  147   0x6d9dd  1      OPC=nop              
  nop                           #  148   0x6d9de  1      OPC=nop              
  nop                           #  149   0x6d9df  1      OPC=nop              
  nop                           #  150   0x6d9e0  1      OPC=nop              
  nop                           #  151   0x6d9e1  1      OPC=nop              
  nop                           #  152   0x6d9e2  1      OPC=nop              
  nop                           #  153   0x6d9e3  1      OPC=nop              
  nop                           #  154   0x6d9e4  1      OPC=nop              
  nop                           #  155   0x6d9e5  1      OPC=nop              
                                                                              
.size _IO_getline_info, .-_IO_getline_info

