  .text
  .globl exec_comm
  .type exec_comm, @function

#! file-offset 0xef3b0
#! rip-offset  0xef3b0
#! capacity    2448 bytes

# Text                          #  Line  RIP      Bytes  Opcode               
.exec_comm:                     #        0xef3b0  0      OPC=<label>          
  pushq %r15                    #  1     0xef3b0  2      OPC=pushq_r64_1      
  pushq %r14                    #  2     0xef3b2  2      OPC=pushq_r64_1      
  movl %r8d, %eax               #  3     0xef3b4  3      OPC=movl_r32_r32     
  pushq %r13                    #  4     0xef3b7  2      OPC=pushq_r64_1      
  pushq %r12                    #  5     0xef3b9  2      OPC=pushq_r64_1      
  pushq %rbp                    #  6     0xef3bb  1      OPC=pushq_r64_1      
  pushq %rbx                    #  7     0xef3bc  1      OPC=pushq_r64_1      
  subq $0x1a8, %rsp             #  8     0xef3bd  7      OPC=subq_r64_imm32   
  andl $0x4, %eax               #  9     0xef3c4  3      OPC=andl_r32_imm8    
  movl $0x0, 0x5c(%rsp)         #  10    0xef3c7  8      OPC=movl_m32_imm32   
  movl %eax, 0x2c(%rsp)         #  11    0xef3cf  4      OPC=movl_m32_r32     
  je .L_ef3f8                   #  12    0xef3d3  2      OPC=je_label         
  movl $0x4, 0x2c(%rsp)         #  13    0xef3d5  8      OPC=movl_m32_imm32   
.L_ef3dd:                       #        0xef3dd  0      OPC=<label>          
  movl 0x2c(%rsp), %eax         #  14    0xef3dd  4      OPC=movl_r32_m32     
  addq $0x1a8, %rsp             #  15    0xef3e1  7      OPC=addq_r64_imm32   
  popq %rbx                     #  16    0xef3e8  1      OPC=popq_r64_1       
  popq %rbp                     #  17    0xef3e9  1      OPC=popq_r64_1       
  popq %r12                     #  18    0xef3ea  2      OPC=popq_r64_1       
  popq %r13                     #  19    0xef3ec  2      OPC=popq_r64_1       
  popq %r14                     #  20    0xef3ee  2      OPC=popq_r64_1       
  popq %r15                     #  21    0xef3f0  2      OPC=popq_r64_1       
  retq                          #  22    0xef3f2  1      OPC=retq             
  nop                           #  23    0xef3f3  1      OPC=nop              
  nop                           #  24    0xef3f4  1      OPC=nop              
  nop                           #  25    0xef3f5  1      OPC=nop              
  nop                           #  26    0xef3f6  1      OPC=nop              
  nop                           #  27    0xef3f7  1      OPC=nop              
.L_ef3f8:                       #        0xef3f8  0      OPC=<label>          
  testq %rdi, %rdi              #  28    0xef3f8  3      OPC=testq_r64_r64    
  je .L_ef3dd                   #  29    0xef3fb  2      OPC=je_label         
  cmpb $0x0, (%rdi)             #  30    0xef3fd  3      OPC=cmpb_m8_imm8     
  je .L_ef3dd                   #  31    0xef400  2      OPC=je_label         
  movq %rdi, 0x40(%rsp)         #  32    0xef402  5      OPC=movq_m64_r64     
  leaq 0x60(%rsp), %rdi         #  33    0xef407  5      OPC=leaq_r64_m16     
  movq %rsi, 0x10(%rsp)         #  34    0xef40c  5      OPC=movq_m64_r64     
  movl $0x80000, %esi           #  35    0xef411  5      OPC=movl_r32_imm32   
  movq %r9, %rbx                #  36    0xef416  3      OPC=movq_r64_r64     
  movl %r8d, 0x4c(%rsp)         #  37    0xef419  5      OPC=movl_m32_r32     
  movq %rcx, 0x20(%rsp)         #  38    0xef41e  5      OPC=movq_m64_r64     
  movq %rdx, %rbp               #  39    0xef423  3      OPC=movq_r64_r64     
  callq .pipe2                  #  40    0xef426  5      OPC=callq_label      
  testl %eax, %eax              #  41    0xef42b  2      OPC=testl_r32_r32    
  js .L_ef971                   #  42    0xef42d  6      OPC=js_label_1       
  leaq 0x90(%rsp), %rax         #  43    0xef433  8      OPC=leaq_r64_m16     
  xorl %r12d, %r12d             #  44    0xef43b  3      OPC=xorl_r32_r32     
  movq $0x0, 0x8(%rsp)          #  45    0xef43e  9      OPC=movq_m64_imm32   
  movq %rax, 0x30(%rsp)         #  46    0xef447  5      OPC=movq_m64_r64     
  leaq 0x5c(%rsp), %rax         #  47    0xef44c  5      OPC=leaq_r64_m16     
  movq %rax, 0x38(%rsp)         #  48    0xef451  5      OPC=movq_m64_r64     
.L_ef456:                       #        0xef456  0      OPC=<label>          
  callq .__fork                 #  49    0xef456  5      OPC=callq_label      
  testl %eax, %eax              #  50    0xef45b  2      OPC=testl_r32_r32    
  movl %eax, 0x48(%rsp)         #  51    0xef45d  4      OPC=movl_m32_r32     
  js .L_efafe                   #  52    0xef461  6      OPC=js_label_1       
  je .L_efb1d                   #  53    0xef467  6      OPC=je_label_1       
  testl %r12d, %r12d            #  54    0xef46d  3      OPC=testl_r32_r32    
  jne .L_efc13                  #  55    0xef470  6      OPC=jne_label_1      
  movl 0x64(%rsp), %edi         #  56    0xef476  4      OPC=movl_r32_m32     
  callq .__close                #  57    0xef47a  5      OPC=callq_label      
  testq %rbx, %rbx              #  58    0xef47f  3      OPC=testq_r64_r64    
  movl $0xffffffff, 0x64(%rsp)  #  59    0xef482  8      OPC=movl_m32_imm32   
  je .L_ef97e                   #  60    0xef48a  6      OPC=je_label_1       
  xorl %r13d, %r13d             #  61    0xef490  3      OPC=xorl_r32_r32     
  movq 0x8(%rsp), %r14          #  62    0xef493  5      OPC=movq_r64_m64     
  movl %r13d, 0x8(%rsp)         #  63    0xef498  5      OPC=movl_m32_r32     
.L_ef49d:                       #        0xef49d  0      OPC=<label>          
  movq 0x30(%rsp), %rsi         #  64    0xef49d  5      OPC=movq_r64_m64     
  movl 0x60(%rsp), %edi         #  65    0xef4a2  4      OPC=movl_r32_m32     
  movl $0x80, %edx              #  66    0xef4a6  5      OPC=movl_r32_imm32   
  callq .__read                 #  67    0xef4ab  5      OPC=callq_label      
  cmpq $0xff, %rax              #  68    0xef4b0  4      OPC=cmpq_r64_imm8    
  je .L_ef808                   #  69    0xef4b4  6      OPC=je_label_1       
  testl %eax, %eax              #  70    0xef4ba  2      OPC=testl_r32_r32    
  movl %eax, %ecx               #  71    0xef4bc  2      OPC=movl_r32_r32     
  jle .L_ef81b                  #  72    0xef4be  6      OPC=jle_label_1      
.L_ef4c4:                       #        0xef4c4  0      OPC=<label>          
  movq 0x30(%rsp), %rax         #  73    0xef4c4  5      OPC=movq_r64_m64     
  subl $0x1, %ecx               #  74    0xef4c9  3      OPC=subl_r32_imm8    
  movq %rax, %r15               #  75    0xef4cc  3      OPC=movq_r64_r64     
  leaq 0x1(%rax,%rcx,1), %rax   #  76    0xef4cf  5      OPC=leaq_r64_m16     
  movq %rax, 0x18(%rsp)         #  77    0xef4d4  5      OPC=movq_m64_r64     
  movq %rbx, %rax               #  78    0xef4d9  3      OPC=movq_r64_r64     
  movq %r15, %rbx               #  79    0xef4dc  3      OPC=movq_r64_r64     
  movq %rax, %r15               #  80    0xef4df  3      OPC=movq_r64_r64     
  nop                           #  81    0xef4e2  1      OPC=nop              
  nop                           #  82    0xef4e3  1      OPC=nop              
  nop                           #  83    0xef4e4  1      OPC=nop              
  nop                           #  84    0xef4e5  1      OPC=nop              
  nop                           #  85    0xef4e6  1      OPC=nop              
  nop                           #  86    0xef4e7  1      OPC=nop              
.L_ef4e8:                       #        0xef4e8  0      OPC=<label>          
  movsbl (%rbx), %r12d          #  87    0xef4e8  4      OPC=movsbl_r32_m8    
  movq 0x1e0(%rsp), %rdi        #  88    0xef4ec  8      OPC=movq_r64_m64     
  movl %r12d, %esi              #  89    0xef4f4  3      OPC=movl_r32_r32     
  movl %r12d, %r13d             #  90    0xef4f7  3      OPC=movl_r32_r32     
  callq .__GI_strchr            #  91    0xef4fa  5      OPC=callq_label      
  testq %rax, %rax              #  92    0xef4ff  3      OPC=testq_r64_r64    
  je .L_ef5c8                   #  93    0xef502  6      OPC=je_label_1       
  movq 0x1e8(%rsp), %rdi        #  94    0xef508  8      OPC=movq_r64_m64     
  movl %r12d, %esi              #  95    0xef510  3      OPC=movl_r32_r32     
  callq .__GI_strchr            #  96    0xef513  5      OPC=callq_label      
  testq %rax, %rax              #  97    0xef518  3      OPC=testq_r64_r64    
  je .L_ef650                   #  98    0xef51b  6      OPC=je_label_1       
  cmpb $0xa, %r13b              #  99    0xef521  4      OPC=cmpb_r8_imm8     
  movl 0x8(%rsp), %eax          #  100   0xef525  4      OPC=movl_r32_m32     
  je .L_ef700                   #  101   0xef529  6      OPC=je_label_1       
  andl $0xfffffffd, %eax        #  102   0xef52f  6      OPC=andl_r32_imm32   
  nop                           #  103   0xef535  1      OPC=nop              
  nop                           #  104   0xef536  1      OPC=nop              
  nop                           #  105   0xef537  1      OPC=nop              
  cmpl $0x1, %eax               #  106   0xef538  3      OPC=cmpl_r32_imm8    
  jne .L_ef630                  #  107   0xef53b  6      OPC=jne_label_1      
  movq 0x10(%rsp), %rax         #  108   0xef541  5      OPC=movq_r64_m64     
  movl $0x2, 0x8(%rsp)          #  109   0xef546  8      OPC=movl_m32_imm32   
  movq (%rax), %r12             #  110   0xef54e  3      OPC=movq_r64_m64     
  testq %r12, %r12              #  111   0xef551  3      OPC=testq_r64_r64    
  je .L_ef670                   #  112   0xef554  6      OPC=je_label_1       
.L_ef554:                       #        0xef55a  0      OPC=<label>          
  movq 0x10(%r15), %rax         #  113   0xef55a  4      OPC=movq_r64_m64     
  addq (%r15), %rax             #  114   0xef55e  3      OPC=addq_r64_m64     
  movq 0x8(%r15), %rdi          #  115   0xef561  4      OPC=movq_r64_m64     
  leaq 0x10(,%rax,8), %rsi      #  116   0xef565  8      OPC=leaq_r64_m16     
  callq .__tls_get_addr_plt     #  117   0xef56d  5      OPC=callq_label      
  testq %rax, %rax              #  118   0xef572  3      OPC=testq_r64_r64    
  je .L_ef7b4                   #  119   0xef575  6      OPC=je_label_1       
.L_ef575:                       #        0xef57b  0      OPC=<label>          
  movq (%r15), %rsi             #  120   0xef57b  3      OPC=movq_r64_m64     
  movq 0x10(%r15), %rcx         #  121   0xef57e  4      OPC=movq_r64_m64     
  xorl %r14d, %r14d             #  122   0xef582  3      OPC=xorl_r32_r32     
  movq %rax, 0x8(%r15)          #  123   0xef585  4      OPC=movq_m64_r64     
  leaq 0x1(%rsi), %rdi          #  124   0xef589  4      OPC=leaq_r64_m16     
  addq %rcx, %rsi               #  125   0xef58d  3      OPC=addq_r64_r64     
  movq %rdi, (%r15)             #  126   0xef590  3      OPC=movq_m64_r64     
  movq %r12, (%rax,%rsi,8)      #  127   0xef593  4      OPC=movq_m64_r64     
  addq %rdi, %rcx               #  128   0xef597  3      OPC=addq_r64_r64     
  movq 0x8(%r15), %rax          #  129   0xef59a  4      OPC=movq_r64_m64     
  movq $0x0, (%rax,%rcx,8)      #  130   0xef59e  8      OPC=movq_m64_imm32   
  movq 0x20(%rsp), %rax         #  131   0xef5a6  5      OPC=movq_r64_m64     
  movq $0x0, (%rax)             #  132   0xef5ab  7      OPC=movq_m64_imm32   
  movq 0x10(%rsp), %rax         #  133   0xef5b2  5      OPC=movq_r64_m64     
  movq $0x0, (%rbp)             #  134   0xef5b7  8      OPC=movq_m64_imm32   
  movq $0x0, (%rax)             #  135   0xef5bf  7      OPC=movq_m64_imm32   
  jmpq .L_ef630                 #  136   0xef5c6  2      OPC=jmpq_label       
  nop                           #  137   0xef5c8  1      OPC=nop              
  nop                           #  138   0xef5c9  1      OPC=nop              
  nop                           #  139   0xef5ca  1      OPC=nop              
  nop                           #  140   0xef5cb  1      OPC=nop              
  nop                           #  141   0xef5cc  1      OPC=nop              
  nop                           #  142   0xef5cd  1      OPC=nop              
.L_ef5c8:                       #        0xef5ce  0      OPC=<label>          
  cmpl $0x3, 0x8(%rsp)          #  143   0xef5ce  5      OPC=cmpl_m32_imm8    
  je .L_ef718                   #  144   0xef5d3  6      OPC=je_label_1       
  movq 0x10(%rsp), %rax         #  145   0xef5d9  5      OPC=movq_r64_m64     
  movq (%rbp), %rdi             #  146   0xef5de  4      OPC=movq_r64_m64     
  movq (%rax), %r12             #  147   0xef5e2  3      OPC=movq_r64_m64     
.L_ef5df:                       #        0xef5e5  0      OPC=<label>          
  addq $0x1, %r14               #  148   0xef5e5  4      OPC=addq_r64_imm8    
  movl $0x0, %eax               #  149   0xef5e9  5      OPC=movl_r32_imm32   
  cmpb $0xa, %r13b              #  150   0xef5ee  4      OPC=cmpb_r8_imm8     
  cmovneq %rax, %r14            #  151   0xef5f2  4      OPC=cmovneq_r64_r64  
  movq 0x20(%rsp), %rax         #  152   0xef5f6  5      OPC=movq_r64_m64     
  movq (%rax), %rsi             #  153   0xef5fb  3      OPC=movq_r64_m64     
  cmpq %rdi, %rsi               #  154   0xef5fe  3      OPC=cmpq_r64_r64     
  je .L_ef6c0                   #  155   0xef601  6      OPC=je_label_1       
  testq %r12, %r12              #  156   0xef607  3      OPC=testq_r64_r64    
  je .L_ef7a8                   #  157   0xef60a  6      OPC=je_label_1       
.L_ef60a:                       #        0xef610  0      OPC=<label>          
  movb %r13b, (%r12,%rdi,1)     #  158   0xef610  4      OPC=movb_m8_r8       
  movq (%rbp), %rax             #  159   0xef614  4      OPC=movq_r64_m64     
  movl $0x1, 0x8(%rsp)          #  160   0xef618  8      OPC=movl_m32_imm32   
  leaq 0x1(%rax), %rcx          #  161   0xef620  4      OPC=leaq_r64_m16     
  movq %rcx, (%rbp)             #  162   0xef624  4      OPC=movq_m64_r64     
  movb $0x0, 0x1(%r12,%rax,1)   #  163   0xef628  6      OPC=movb_m8_imm8     
  movq 0x10(%rsp), %rax         #  164   0xef62e  5      OPC=movq_r64_m64     
  movq %r12, (%rax)             #  165   0xef633  3      OPC=movq_m64_r64     
.L_ef630:                       #        0xef636  0      OPC=<label>          
  addq $0x1, %rbx               #  166   0xef636  4      OPC=addq_r64_imm8    
  cmpq 0x18(%rsp), %rbx         #  167   0xef63a  5      OPC=cmpq_r64_m64     
  jne .L_ef4e8                  #  168   0xef63f  6      OPC=jne_label_1      
  movq %r15, %rbx               #  169   0xef645  3      OPC=movq_r64_r64     
  jmpq .L_ef49d                 #  170   0xef648  5      OPC=jmpq_label_1     
  nop                           #  171   0xef64d  1      OPC=nop              
  nop                           #  172   0xef64e  1      OPC=nop              
  nop                           #  173   0xef64f  1      OPC=nop              
  nop                           #  174   0xef650  1      OPC=nop              
  nop                           #  175   0xef651  1      OPC=nop              
  nop                           #  176   0xef652  1      OPC=nop              
  nop                           #  177   0xef653  1      OPC=nop              
  nop                           #  178   0xef654  1      OPC=nop              
  nop                           #  179   0xef655  1      OPC=nop              
.L_ef650:                       #        0xef656  0      OPC=<label>          
  cmpl $0x2, 0x8(%rsp)          #  180   0xef656  5      OPC=cmpl_m32_imm8    
  movl $0x0, 0x8(%rsp)          #  181   0xef65b  8      OPC=movl_m32_imm32   
  je .L_ef630                   #  182   0xef663  2      OPC=je_label         
  movq 0x10(%rsp), %rax         #  183   0xef665  5      OPC=movq_r64_m64     
  movq (%rax), %r12             #  184   0xef66a  3      OPC=movq_r64_m64     
  testq %r12, %r12              #  185   0xef66d  3      OPC=testq_r64_r64    
  jne .L_ef554                  #  186   0xef670  6      OPC=jne_label_1      
.L_ef670:                       #        0xef676  0      OPC=<label>          
  movl $0x1, %esi               #  187   0xef676  5      OPC=movl_r32_imm32   
  movl $0x1, %edi               #  188   0xef67b  5      OPC=movl_r32_imm32   
  callq .L_1f8b0                #  189   0xef680  5      OPC=callq_label      
  testq %rax, %rax              #  190   0xef685  3      OPC=testq_r64_r64    
  movq %rax, %r14               #  191   0xef688  3      OPC=movq_r64_r64     
  movq %rax, %r12               #  192   0xef68b  3      OPC=movq_r64_r64     
  je .L_ef7b4                   #  193   0xef68e  6      OPC=je_label_1       
  movq 0x10(%r15), %rcx         #  194   0xef694  4      OPC=movq_r64_m64     
  addq (%r15), %rcx             #  195   0xef698  3      OPC=addq_r64_m64     
  movq 0x8(%r15), %rdi          #  196   0xef69b  4      OPC=movq_r64_m64     
  leaq 0x10(,%rcx,8), %rsi      #  197   0xef69f  8      OPC=leaq_r64_m16     
  callq .__tls_get_addr_plt     #  198   0xef6a7  5      OPC=callq_label      
  testq %rax, %rax              #  199   0xef6ac  3      OPC=testq_r64_r64    
  jne .L_ef575                  #  200   0xef6af  6      OPC=jne_label_1      
  movq %r14, %rdi               #  201   0xef6b5  3      OPC=movq_r64_r64     
  callq .L_1f8c0                #  202   0xef6b8  5      OPC=callq_label      
  jmpq .L_ef7b4                 #  203   0xef6bd  5      OPC=jmpq_label_1     
  nop                           #  204   0xef6c2  1      OPC=nop              
  nop                           #  205   0xef6c3  1      OPC=nop              
  nop                           #  206   0xef6c4  1      OPC=nop              
  nop                           #  207   0xef6c5  1      OPC=nop              
.L_ef6c0:                       #        0xef6c6  0      OPC=<label>          
  testq %r12, %r12              #  208   0xef6c6  3      OPC=testq_r64_r64    
  je .L_ef6ce                   #  209   0xef6c9  2      OPC=je_label         
  testq %rdi, %rdi              #  210   0xef6cb  3      OPC=testq_r64_r64    
  je .L_efd27                   #  211   0xef6ce  6      OPC=je_label_1       
.L_ef6ce:                       #        0xef6d4  0      OPC=<label>          
  movq 0x20(%rsp), %rdx         #  212   0xef6d4  5      OPC=movq_r64_m64     
  leaq 0x64(%rsi), %rax         #  213   0xef6d9  4      OPC=leaq_r64_m16     
  movq %r12, %rdi               #  214   0xef6dd  3      OPC=movq_r64_r64     
  addq $0x65, %rsi              #  215   0xef6e0  4      OPC=addq_r64_imm8    
  movq %rax, (%rdx)             #  216   0xef6e4  3      OPC=movq_m64_r64     
  callq .__tls_get_addr_plt     #  217   0xef6e7  5      OPC=callq_label      
  testq %rax, %rax              #  218   0xef6ec  3      OPC=testq_r64_r64    
  je .L_ef964                   #  219   0xef6ef  6      OPC=je_label_1       
  movq (%rbp), %rdi             #  220   0xef6f5  4      OPC=movq_r64_m64     
  movq %rax, %r12               #  221   0xef6f9  3      OPC=movq_r64_r64     
  jmpq .L_ef60a                 #  222   0xef6fc  5      OPC=jmpq_label_1     
  nop                           #  223   0xef701  1      OPC=nop              
  nop                           #  224   0xef702  1      OPC=nop              
  nop                           #  225   0xef703  1      OPC=nop              
  nop                           #  226   0xef704  1      OPC=nop              
  nop                           #  227   0xef705  1      OPC=nop              
.L_ef700:                       #        0xef706  0      OPC=<label>          
  cmpl $0x1, %eax               #  228   0xef706  3      OPC=cmpl_r32_imm8    
  movl $0x3, %edx               #  229   0xef709  5      OPC=movl_r32_imm32   
  cmovnel %eax, %edx            #  230   0xef70e  3      OPC=cmovnel_r32_r32  
  movl %edx, 0x8(%rsp)          #  231   0xef711  4      OPC=movl_m32_r32     
  jmpq .L_ef630                 #  232   0xef715  5      OPC=jmpq_label_1     
  nop                           #  233   0xef71a  1      OPC=nop              
  nop                           #  234   0xef71b  1      OPC=nop              
  nop                           #  235   0xef71c  1      OPC=nop              
  nop                           #  236   0xef71d  1      OPC=nop              
.L_ef718:                       #        0xef71e  0      OPC=<label>          
  movq 0x10(%rsp), %rax         #  237   0xef71e  5      OPC=movq_r64_m64     
  movq (%rax), %r12             #  238   0xef723  3      OPC=movq_r64_m64     
  testq %r12, %r12              #  239   0xef726  3      OPC=testq_r64_r64    
  je .L_ef918                   #  240   0xef729  6      OPC=je_label_1       
  movq 0x10(%r15), %rax         #  241   0xef72f  4      OPC=movq_r64_m64     
  addq (%r15), %rax             #  242   0xef733  3      OPC=addq_r64_m64     
  movq 0x8(%r15), %rdi          #  243   0xef736  4      OPC=movq_r64_m64     
  leaq 0x10(,%rax,8), %rsi      #  244   0xef73a  8      OPC=leaq_r64_m16     
  callq .__tls_get_addr_plt     #  245   0xef742  5      OPC=callq_label      
  testq %rax, %rax              #  246   0xef747  3      OPC=testq_r64_r64    
  je .L_ef7b4                   #  247   0xef74a  2      OPC=je_label         
.L_ef746:                       #        0xef74c  0      OPC=<label>          
  movq (%r15), %rsi             #  248   0xef74c  3      OPC=movq_r64_m64     
  movq 0x10(%r15), %rcx         #  249   0xef74f  4      OPC=movq_r64_m64     
  movq %rax, 0x8(%r15)          #  250   0xef753  4      OPC=movq_m64_r64     
  leaq 0x1(%rsi), %rdi          #  251   0xef757  4      OPC=leaq_r64_m16     
  addq %rcx, %rsi               #  252   0xef75b  3      OPC=addq_r64_r64     
  movq %rdi, (%r15)             #  253   0xef75e  3      OPC=movq_m64_r64     
  movq %r12, (%rax,%rsi,8)      #  254   0xef761  4      OPC=movq_m64_r64     
  addq %rdi, %rcx               #  255   0xef765  3      OPC=addq_r64_r64     
  movq 0x8(%r15), %rax          #  256   0xef768  4      OPC=movq_r64_m64     
  xorl %edi, %edi               #  257   0xef76c  2      OPC=xorl_r32_r32     
  xorl %r12d, %r12d             #  258   0xef76e  3      OPC=xorl_r32_r32     
  movq $0x0, (%rax,%rcx,8)      #  259   0xef771  8      OPC=movq_m64_imm32   
  movq 0x20(%rsp), %rax         #  260   0xef779  5      OPC=movq_r64_m64     
  movzbl (%rbx), %r13d          #  261   0xef77e  4      OPC=movzbl_r32_m8    
  movq $0x0, (%rax)             #  262   0xef782  7      OPC=movq_m64_imm32   
  movq 0x10(%rsp), %rax         #  263   0xef789  5      OPC=movq_r64_m64     
  movq $0x0, (%rbp)             #  264   0xef78e  8      OPC=movq_m64_imm32   
  movq $0x0, (%rax)             #  265   0xef796  7      OPC=movq_m64_imm32   
  jmpq .L_ef5df                 #  266   0xef79d  5      OPC=jmpq_label_1     
.L_ef79c:                       #        0xef7a2  0      OPC=<label>          
  movq %rbx, %rdi               #  267   0xef7a2  3      OPC=movq_r64_r64     
  callq .L_1f8c0                #  268   0xef7a5  5      OPC=callq_label      
  nop                           #  269   0xef7aa  1      OPC=nop              
  nop                           #  270   0xef7ab  1      OPC=nop              
  nop                           #  271   0xef7ac  1      OPC=nop              
  nop                           #  272   0xef7ad  1      OPC=nop              
.L_ef7a8:                       #        0xef7ae  0      OPC=<label>          
  movq 0x10(%rsp), %rax         #  273   0xef7ae  5      OPC=movq_r64_m64     
  movq $0x0, (%rax)             #  274   0xef7b3  7      OPC=movq_m64_imm32   
.L_ef7b4:                       #        0xef7ba  0      OPC=<label>          
  movl 0x48(%rsp), %ebx         #  275   0xef7ba  4      OPC=movl_r32_m32     
  movl $0x9, %esi               #  276   0xef7be  5      OPC=movl_r32_imm32   
  movl %ebx, %edi               #  277   0xef7c3  2      OPC=movl_r32_r32     
  callq .kill                   #  278   0xef7c5  5      OPC=callq_label      
  jmpq .L_ef7dd                 #  279   0xef7ca  2      OPC=jmpq_label       
  nop                           #  280   0xef7cc  1      OPC=nop              
  nop                           #  281   0xef7cd  1      OPC=nop              
  nop                           #  282   0xef7ce  1      OPC=nop              
  nop                           #  283   0xef7cf  1      OPC=nop              
  nop                           #  284   0xef7d0  1      OPC=nop              
  nop                           #  285   0xef7d1  1      OPC=nop              
  nop                           #  286   0xef7d2  1      OPC=nop              
  nop                           #  287   0xef7d3  1      OPC=nop              
  nop                           #  288   0xef7d4  1      OPC=nop              
  nop                           #  289   0xef7d5  1      OPC=nop              
.L_ef7d0:                       #        0xef7d6  0      OPC=<label>          
  movq 0x2d16a9(%rip), %rdx     #  290   0xef7d6  7      OPC=movq_r64_m64     
  cmpl $0x4, (%rdx)             #  291   0xef7dd  3      OPC=cmpl_m32_imm8    
  nop                           #  292   0xef7e0  1      OPC=nop              
  jne .L_ef7ed                  #  293   0xef7e1  2      OPC=jne_label        
.L_ef7dd:                       #        0xef7e3  0      OPC=<label>          
  xorl %edx, %edx               #  294   0xef7e3  2      OPC=xorl_r32_r32     
  xorl %esi, %esi               #  295   0xef7e5  2      OPC=xorl_r32_r32     
  movl %ebx, %edi               #  296   0xef7e7  2      OPC=movl_r32_r32     
  callq .__waitpid              #  297   0xef7e9  5      OPC=callq_label      
  cmpl $0xffffffff, %eax        #  298   0xef7ee  6      OPC=cmpl_r32_imm32   
  nop                           #  299   0xef7f4  1      OPC=nop              
  nop                           #  300   0xef7f5  1      OPC=nop              
  nop                           #  301   0xef7f6  1      OPC=nop              
  je .L_ef7d0                   #  302   0xef7f7  2      OPC=je_label         
.L_ef7ed:                       #        0xef7f9  0      OPC=<label>          
  movl 0x60(%rsp), %edi         #  303   0xef7f9  4      OPC=movl_r32_m32     
  callq .__close                #  304   0xef7fd  5      OPC=callq_label      
  movl $0x1, 0x2c(%rsp)         #  305   0xef802  8      OPC=movl_m32_imm32   
  jmpq .L_ef3dd                 #  306   0xef80a  5      OPC=jmpq_label_1     
  nop                           #  307   0xef80f  1      OPC=nop              
  nop                           #  308   0xef810  1      OPC=nop              
  nop                           #  309   0xef811  1      OPC=nop              
  nop                           #  310   0xef812  1      OPC=nop              
  nop                           #  311   0xef813  1      OPC=nop              
.L_ef808:                       #        0xef814  0      OPC=<label>          
  movq 0x2d1671(%rip), %rdx     #  312   0xef814  7      OPC=movq_r64_m64     
  movl %eax, %ecx               #  313   0xef81b  2      OPC=movl_r32_r32     
  cmpl $0x4, (%rdx)             #  314   0xef81d  3      OPC=cmpl_m32_imm8    
  nop                           #  315   0xef820  1      OPC=nop              
  je .L_ef49d                   #  316   0xef821  6      OPC=je_label_1       
.L_ef81b:                       #        0xef827  0      OPC=<label>          
  xorl %r12d, %r12d             #  317   0xef827  3      OPC=xorl_r32_r32     
  testl %ecx, %ecx              #  318   0xef82a  2      OPC=testl_r32_r32    
  movl 0x48(%rsp), %r13d        #  319   0xef82c  5      OPC=movl_r32_m32     
  setne %r12b                   #  320   0xef831  4      OPC=setne_r8         
  movq 0x38(%rsp), %r15         #  321   0xef835  5      OPC=movq_r64_m64     
  jmpq .L_ef83d                 #  322   0xef83a  2      OPC=jmpq_label       
.L_ef830:                       #        0xef83c  0      OPC=<label>          
  movq 0x2d1649(%rip), %rax     #  323   0xef83c  7      OPC=movq_r64_m64     
  cmpl $0x4, (%rax)             #  324   0xef843  3      OPC=cmpl_m32_imm8    
  nop                           #  325   0xef846  1      OPC=nop              
  jne .L_ef85c                  #  326   0xef847  2      OPC=jne_label        
.L_ef83d:                       #        0xef849  0      OPC=<label>          
  movl %r12d, %edx              #  327   0xef849  3      OPC=movl_r32_r32     
  movq %r15, %rsi               #  328   0xef84c  3      OPC=movq_r64_r64     
  movl %r13d, %edi              #  329   0xef84f  3      OPC=movl_r32_r32     
  callq .__waitpid              #  330   0xef852  5      OPC=callq_label      
  cltq                          #  331   0xef857  2      OPC=cltq             
  cmpq $0xff, %rax              #  332   0xef859  4      OPC=cmpq_r64_imm8    
  je .L_ef830                   #  333   0xef85d  2      OPC=je_label         
  testq %rax, %rax              #  334   0xef85f  3      OPC=testq_r64_r64    
  je .L_ef49d                   #  335   0xef862  6      OPC=je_label_1       
.L_ef85c:                       #        0xef868  0      OPC=<label>          
  movq 0x30(%rsp), %r12         #  336   0xef868  5      OPC=movq_r64_m64     
  jmpq .L_ef875                 #  337   0xef86d  2      OPC=jmpq_label       
  nop                           #  338   0xef86f  1      OPC=nop              
  nop                           #  339   0xef870  1      OPC=nop              
  nop                           #  340   0xef871  1      OPC=nop              
  nop                           #  341   0xef872  1      OPC=nop              
  nop                           #  342   0xef873  1      OPC=nop              
.L_ef868:                       #        0xef874  0      OPC=<label>          
  movq 0x2d1611(%rip), %rax     #  343   0xef874  7      OPC=movq_r64_m64     
  cmpl $0x4, (%rax)             #  344   0xef87b  3      OPC=cmpl_m32_imm8    
  nop                           #  345   0xef87e  1      OPC=nop              
  jne .L_ef896                  #  346   0xef87f  2      OPC=jne_label        
.L_ef875:                       #        0xef881  0      OPC=<label>          
  movl 0x60(%rsp), %edi         #  347   0xef881  4      OPC=movl_r32_m32     
  movl $0x80, %edx              #  348   0xef885  5      OPC=movl_r32_imm32   
  movq %r12, %rsi               #  349   0xef88a  3      OPC=movq_r64_r64     
  callq .__read                 #  350   0xef88d  5      OPC=callq_label      
  cmpq $0xff, %rax              #  351   0xef892  4      OPC=cmpq_r64_imm8    
  je .L_ef868                   #  352   0xef896  2      OPC=je_label         
  testl %eax, %eax              #  353   0xef898  2      OPC=testl_r32_r32    
  movl %eax, %ecx               #  354   0xef89a  2      OPC=movl_r32_r32     
  jg .L_ef4c4                   #  355   0xef89c  6      OPC=jg_label_1       
.L_ef896:                       #        0xef8a2  0      OPC=<label>          
  movq %r14, 0x8(%rsp)          #  356   0xef8a2  5      OPC=movq_m64_r64     
.L_ef89b:                       #        0xef8a7  0      OPC=<label>          
  subq $0x1, 0x8(%rsp)          #  357   0xef8a7  6      OPC=subq_m64_imm8    
  movq 0x10(%rsp), %rsi         #  358   0xef8ad  5      OPC=movq_r64_m64     
  movq 0x8(%rsp), %rax          #  359   0xef8b2  5      OPC=movq_r64_m64     
  movq %rax, %rcx               #  360   0xef8b7  3      OPC=movq_r64_r64     
  jmpq .L_ef8e1                 #  361   0xef8ba  2      OPC=jmpq_label       
.L_ef8b0:                       #        0xef8bc  0      OPC=<label>          
  movq (%rbp), %rax             #  362   0xef8bc  4      OPC=movq_r64_m64     
  testq %rax, %rax              #  363   0xef8c0  3      OPC=testq_r64_r64    
  je .L_ef8e7                   #  364   0xef8c3  2      OPC=je_label         
  subq $0x1, %rax               #  365   0xef8c5  4      OPC=subq_r64_imm8    
  movq %rax, %rdx               #  366   0xef8c9  3      OPC=movq_r64_r64     
  addq (%rsi), %rdx             #  367   0xef8cc  3      OPC=addq_r64_m64     
  cmpb $0xa, (%rdx)             #  368   0xef8cf  3      OPC=cmpb_m8_imm8     
  jne .L_ef8e7                  #  369   0xef8d2  2      OPC=jne_label        
  movq %rax, (%rbp)             #  370   0xef8d4  4      OPC=movq_m64_r64     
  movb $0x0, (%rdx)             #  371   0xef8d8  3      OPC=movb_m8_imm8     
  leaq -0x1(%rcx), %rax         #  372   0xef8db  4      OPC=leaq_r64_m16     
  cmpq $0x0, (%rbp)             #  373   0xef8df  5      OPC=cmpq_m64_imm8    
  je .L_efcdd                   #  374   0xef8e4  6      OPC=je_label_1       
  movq %rax, %rcx               #  375   0xef8ea  3      OPC=movq_r64_r64     
.L_ef8e1:                       #        0xef8ed  0      OPC=<label>          
  cmpq $0xff, %rcx              #  376   0xef8ed  4      OPC=cmpq_r64_imm8    
  jne .L_ef8b0                  #  377   0xef8f1  2      OPC=jne_label        
.L_ef8e7:                       #        0xef8f3  0      OPC=<label>          
  movq %rcx, 0x8(%rsp)          #  378   0xef8f3  5      OPC=movq_m64_r64     
.L_ef8ec:                       #        0xef8f8  0      OPC=<label>          
  movl 0x60(%rsp), %edi         #  379   0xef8f8  4      OPC=movl_r32_m32     
  movl $0x1, %r12d              #  380   0xef8fc  6      OPC=movl_r32_imm32   
  callq .__close                #  381   0xef902  5      OPC=callq_label      
  movl 0x5c(%rsp), %eax         #  382   0xef907  4      OPC=movl_r32_m32     
  movl $0xffffffff, 0x60(%rsp)  #  383   0xef90b  8      OPC=movl_m32_imm32   
  testl %eax, %eax              #  384   0xef913  2      OPC=testl_r32_r32    
  jne .L_ef456                  #  385   0xef915  6      OPC=jne_label_1      
  jmpq .L_ef3dd                 #  386   0xef91b  5      OPC=jmpq_label_1     
  nop                           #  387   0xef920  1      OPC=nop              
  nop                           #  388   0xef921  1      OPC=nop              
  nop                           #  389   0xef922  1      OPC=nop              
  nop                           #  390   0xef923  1      OPC=nop              
.L_ef918:                       #        0xef924  0      OPC=<label>          
  movl $0x1, %esi               #  391   0xef924  5      OPC=movl_r32_imm32   
  movl $0x1, %edi               #  392   0xef929  5      OPC=movl_r32_imm32   
  callq .L_1f8b0                #  393   0xef92e  5      OPC=callq_label      
  testq %rax, %rax              #  394   0xef933  3      OPC=testq_r64_r64    
  movq %rax, %r13               #  395   0xef936  3      OPC=movq_r64_r64     
  movq %rax, %r12               #  396   0xef939  3      OPC=movq_r64_r64     
  je .L_ef7b4                   #  397   0xef93c  6      OPC=je_label_1       
  movq 0x10(%r15), %rcx         #  398   0xef942  4      OPC=movq_r64_m64     
  addq (%r15), %rcx             #  399   0xef946  3      OPC=addq_r64_m64     
  movq 0x8(%r15), %rdi          #  400   0xef949  4      OPC=movq_r64_m64     
  leaq 0x10(,%rcx,8), %rsi      #  401   0xef94d  8      OPC=leaq_r64_m16     
  callq .__tls_get_addr_plt     #  402   0xef955  5      OPC=callq_label      
  testq %rax, %rax              #  403   0xef95a  3      OPC=testq_r64_r64    
  jne .L_ef746                  #  404   0xef95d  6      OPC=jne_label_1      
  movq %r13, %rdi               #  405   0xef963  3      OPC=movq_r64_r64     
  callq .L_1f8c0                #  406   0xef966  5      OPC=callq_label      
  jmpq .L_ef7b4                 #  407   0xef96b  5      OPC=jmpq_label_1     
.L_ef964:                       #        0xef970  0      OPC=<label>          
  movq %r12, %rdi               #  408   0xef970  3      OPC=movq_r64_r64     
  callq .L_1f8c0                #  409   0xef973  5      OPC=callq_label      
  jmpq .L_ef7a8                 #  410   0xef978  5      OPC=jmpq_label_1     
.L_ef971:                       #        0xef97d  0      OPC=<label>          
  movl $0x1, 0x2c(%rsp)         #  411   0xef97d  8      OPC=movl_m32_imm32   
  jmpq .L_ef3dd                 #  412   0xef985  5      OPC=jmpq_label_1     
.L_ef97e:                       #        0xef98a  0      OPC=<label>          
  movl 0x48(%rsp), %r14d        #  413   0xef98a  5      OPC=movl_r32_m32     
  movq 0x30(%rsp), %r13         #  414   0xef98f  5      OPC=movq_r64_m64     
  movq 0x38(%rsp), %r15         #  415   0xef994  5      OPC=movq_r64_m64     
  movq %rbx, 0x18(%rsp)         #  416   0xef999  5      OPC=movq_m64_r64     
  nop                           #  417   0xef99e  1      OPC=nop              
  nop                           #  418   0xef99f  1      OPC=nop              
  nop                           #  419   0xef9a0  1      OPC=nop              
  nop                           #  420   0xef9a1  1      OPC=nop              
  nop                           #  421   0xef9a2  1      OPC=nop              
  nop                           #  422   0xef9a3  1      OPC=nop              
.L_ef998:                       #        0xef9a4  0      OPC=<label>          
  movl 0x60(%rsp), %edi         #  423   0xef9a4  4      OPC=movl_r32_m32     
  movl $0x80, %edx              #  424   0xef9a8  5      OPC=movl_r32_imm32   
  movq %r13, %rsi               #  425   0xef9ad  3      OPC=movq_r64_r64     
  callq .__read                 #  426   0xef9b0  5      OPC=callq_label      
  cmpq $0xff, %rax              #  427   0xef9b5  4      OPC=cmpq_r64_imm8    
  je .L_efa50                   #  428   0xef9b9  6      OPC=je_label_1       
  testl %eax, %eax              #  429   0xef9bf  2      OPC=testl_r32_r32    
  movslq %eax, %r12             #  430   0xef9c1  3      OPC=movslq_r64_r32   
  jle .L_efa64                  #  431   0xef9c4  6      OPC=jle_label_1      
.L_ef9be:                       #        0xef9ca  0      OPC=<label>          
  movq 0x10(%rsp), %rax         #  432   0xef9ca  5      OPC=movq_r64_m64     
  movq (%rbp), %rdi             #  433   0xef9cf  4      OPC=movq_r64_m64     
  addq %r12, 0x8(%rsp)          #  434   0xef9d3  5      OPC=addq_m64_r64     
  movq (%rax), %rbx             #  435   0xef9d8  3      OPC=movq_r64_m64     
  movq 0x20(%rsp), %rax         #  436   0xef9db  5      OPC=movq_r64_m64     
  leaq (%r12,%rdi,1), %rdx      #  437   0xef9e0  4      OPC=leaq_r64_m16     
  movq (%rax), %rax             #  438   0xef9e4  3      OPC=movq_r64_m64     
  cmpq %rax, %rdx               #  439   0xef9e7  3      OPC=cmpq_r64_r64     
  jbe .L_efaf0                  #  440   0xef9ea  6      OPC=jbe_label_1      
  testq %rbx, %rbx              #  441   0xef9f0  3      OPC=testq_r64_r64    
  je .L_ef9f2                   #  442   0xef9f3  2      OPC=je_label         
  testq %rax, %rax              #  443   0xef9f5  3      OPC=testq_r64_r64    
  je .L_efd2c                   #  444   0xef9f8  6      OPC=je_label_1       
.L_ef9f2:                       #        0xef9fe  0      OPC=<label>          
  leaq (%r12,%r12,1), %rsi      #  445   0xef9fe  4      OPC=leaq_r64_m16     
  movl $0x64, %edx              #  446   0xefa02  5      OPC=movl_r32_imm32   
  movq %rbx, %rdi               #  447   0xefa07  3      OPC=movq_r64_r64     
  cmpq $0x64, %rsi              #  448   0xefa0a  4      OPC=cmpq_r64_imm8    
  cmovbq %rdx, %rsi             #  449   0xefa0e  4      OPC=cmovbq_r64_r64   
  movq 0x20(%rsp), %rdx         #  450   0xefa12  5      OPC=movq_r64_m64     
  addq %rsi, %rax               #  451   0xefa17  3      OPC=addq_r64_r64     
  leaq 0x1(%rax), %rsi          #  452   0xefa1a  4      OPC=leaq_r64_m16     
  movq %rax, (%rdx)             #  453   0xefa1e  3      OPC=movq_m64_r64     
  callq .__tls_get_addr_plt     #  454   0xefa21  5      OPC=callq_label      
  testq %rax, %rax              #  455   0xefa26  3      OPC=testq_r64_r64    
  je .L_ef79c                   #  456   0xefa29  6      OPC=je_label_1       
  movq (%rbp), %rdi             #  457   0xefa2f  4      OPC=movq_r64_m64     
  movq %rax, %rbx               #  458   0xefa33  3      OPC=movq_r64_r64     
.L_efa2a:                       #        0xefa36  0      OPC=<label>          
  addq %rbx, %rdi               #  459   0xefa36  3      OPC=addq_r64_r64     
  movq %r12, %rdx               #  460   0xefa39  3      OPC=movq_r64_r64     
  movq %r13, %rsi               #  461   0xefa3c  3      OPC=movq_r64_r64     
  callq .__GI_memcpy            #  462   0xefa3f  5      OPC=callq_label      
  movb $0x0, (%rax,%r12,1)      #  463   0xefa44  5      OPC=movb_m8_imm8     
  movq 0x10(%rsp), %rax         #  464   0xefa49  5      OPC=movq_r64_m64     
  addq %r12, (%rbp)             #  465   0xefa4e  4      OPC=addq_m64_r64     
  movq %rbx, (%rax)             #  466   0xefa52  3      OPC=movq_m64_r64     
  jmpq .L_ef998                 #  467   0xefa55  5      OPC=jmpq_label_1     
  xchgw %ax, %ax                #  468   0xefa5a  2      OPC=xchgw_ax_r16     
.L_efa50:                       #        0xefa5c  0      OPC=<label>          
  movq 0x2d1429(%rip), %rdx     #  469   0xefa5c  7      OPC=movq_r64_m64     
  movl %eax, %r12d              #  470   0xefa63  3      OPC=movl_r32_r32     
  cmpl $0x4, (%rdx)             #  471   0xefa66  3      OPC=cmpl_m32_imm8    
  nop                           #  472   0xefa69  1      OPC=nop              
  je .L_ef998                   #  473   0xefa6a  6      OPC=je_label_1       
.L_efa64:                       #        0xefa70  0      OPC=<label>          
  testl %r12d, %r12d            #  474   0xefa70  3      OPC=testl_r32_r32    
  setne %r12b                   #  475   0xefa73  4      OPC=setne_r8         
  movzbl %r12b, %r12d           #  476   0xefa77  4      OPC=movzbl_r32_r8    
  jmpq .L_efa85                 #  477   0xefa7b  2      OPC=jmpq_label       
  nop                           #  478   0xefa7d  1      OPC=nop              
  nop                           #  479   0xefa7e  1      OPC=nop              
  nop                           #  480   0xefa7f  1      OPC=nop              
  nop                           #  481   0xefa80  1      OPC=nop              
  nop                           #  482   0xefa81  1      OPC=nop              
  nop                           #  483   0xefa82  1      OPC=nop              
  nop                           #  484   0xefa83  1      OPC=nop              
.L_efa78:                       #        0xefa84  0      OPC=<label>          
  movq 0x2d1401(%rip), %rax     #  485   0xefa84  7      OPC=movq_r64_m64     
  cmpl $0x4, (%rax)             #  486   0xefa8b  3      OPC=cmpl_m32_imm8    
  nop                           #  487   0xefa8e  1      OPC=nop              
  jne .L_efabd                  #  488   0xefa8f  2      OPC=jne_label        
.L_efa85:                       #        0xefa91  0      OPC=<label>          
  movl %r12d, %edx              #  489   0xefa91  3      OPC=movl_r32_r32     
  movq %r15, %rsi               #  490   0xefa94  3      OPC=movq_r64_r64     
  movl %r14d, %edi              #  491   0xefa97  3      OPC=movl_r32_r32     
  callq .__waitpid              #  492   0xefa9a  5      OPC=callq_label      
  movslq %eax, %rcx             #  493   0xefa9f  3      OPC=movslq_r64_r32   
  cmpq $0xff, %rcx              #  494   0xefaa2  4      OPC=cmpq_r64_imm8    
  je .L_efa78                   #  495   0xefaa6  2      OPC=je_label         
  testq %rcx, %rcx              #  496   0xefaa8  3      OPC=testq_r64_r64    
  je .L_ef998                   #  497   0xefaab  6      OPC=je_label_1       
  jmpq .L_efabd                 #  498   0xefab1  2      OPC=jmpq_label       
  nop                           #  499   0xefab3  1      OPC=nop              
  nop                           #  500   0xefab4  1      OPC=nop              
  nop                           #  501   0xefab5  1      OPC=nop              
  nop                           #  502   0xefab6  1      OPC=nop              
  nop                           #  503   0xefab7  1      OPC=nop              
  nop                           #  504   0xefab8  1      OPC=nop              
  nop                           #  505   0xefab9  1      OPC=nop              
  nop                           #  506   0xefaba  1      OPC=nop              
  nop                           #  507   0xefabb  1      OPC=nop              
.L_efab0:                       #        0xefabc  0      OPC=<label>          
  movq 0x2d13c9(%rip), %rax     #  508   0xefabc  7      OPC=movq_r64_m64     
  cmpl $0x4, (%rax)             #  509   0xefac3  3      OPC=cmpl_m32_imm8    
  nop                           #  510   0xefac6  1      OPC=nop              
  jne .L_efadf                  #  511   0xefac7  2      OPC=jne_label        
.L_efabd:                       #        0xefac9  0      OPC=<label>          
  movl 0x60(%rsp), %edi         #  512   0xefac9  4      OPC=movl_r32_m32     
  movl $0x80, %edx              #  513   0xefacd  5      OPC=movl_r32_imm32   
  movq %r13, %rsi               #  514   0xefad2  3      OPC=movq_r64_r64     
  callq .__read                 #  515   0xefad5  5      OPC=callq_label      
  cmpq $0xff, %rax              #  516   0xefada  4      OPC=cmpq_r64_imm8    
  je .L_efab0                   #  517   0xefade  2      OPC=je_label         
  testl %eax, %eax              #  518   0xefae0  2      OPC=testl_r32_r32    
  movslq %eax, %r12             #  519   0xefae2  3      OPC=movslq_r64_r32   
  jg .L_ef9be                   #  520   0xefae5  6      OPC=jg_label_1       
.L_efadf:                       #        0xefaeb  0      OPC=<label>          
  movq 0x18(%rsp), %rbx         #  521   0xefaeb  5      OPC=movq_r64_m64     
  jmpq .L_ef89b                 #  522   0xefaf0  5      OPC=jmpq_label_1     
  nop                           #  523   0xefaf5  1      OPC=nop              
  nop                           #  524   0xefaf6  1      OPC=nop              
  nop                           #  525   0xefaf7  1      OPC=nop              
  nop                           #  526   0xefaf8  1      OPC=nop              
  nop                           #  527   0xefaf9  1      OPC=nop              
  nop                           #  528   0xefafa  1      OPC=nop              
  nop                           #  529   0xefafb  1      OPC=nop              
.L_efaf0:                       #        0xefafc  0      OPC=<label>          
  testq %rbx, %rbx              #  530   0xefafc  3      OPC=testq_r64_r64    
  jne .L_efa2a                  #  531   0xefaff  6      OPC=jne_label_1      
  jmpq .L_ef7a8                 #  532   0xefb05  5      OPC=jmpq_label_1     
.L_efafe:                       #        0xefb0a  0      OPC=<label>          
  movl 0x60(%rsp), %edi         #  533   0xefb0a  4      OPC=movl_r32_m32     
  callq .__close                #  534   0xefb0e  5      OPC=callq_label      
  movl 0x64(%rsp), %edi         #  535   0xefb13  4      OPC=movl_r32_m32     
  callq .__close                #  536   0xefb17  5      OPC=callq_label      
  movl $0x1, 0x2c(%rsp)         #  537   0xefb1c  8      OPC=movl_m32_imm32   
  jmpq .L_ef3dd                 #  538   0xefb24  5      OPC=jmpq_label_1     
.L_efb1d:                       #        0xefb29  0      OPC=<label>          
  testl %r12d, %r12d            #  539   0xefb29  3      OPC=testl_r32_r32    
  jne .L_efc72                  #  540   0xefb2c  6      OPC=jne_label_1      
  movl 0x4c(%rsp), %eax         #  541   0xefb32  4      OPC=movl_r32_m32     
  movq $0x0, 0x88(%rsp)         #  542   0xefb36  12     OPC=movq_m64_imm32   
  andl $0x10, %eax              #  543   0xefb42  3      OPC=andl_r32_imm8    
  movl %eax, 0x2c(%rsp)         #  544   0xefb45  4      OPC=movl_m32_r32     
  leaq 0x9abfe(%rip), %rax      #  545   0xefb49  7      OPC=leaq_r64_m16     
  movq %rax, 0x70(%rsp)         #  546   0xefb50  5      OPC=movq_m64_r64     
  leaq 0x9abef(%rip), %rax      #  547   0xefb55  7      OPC=leaq_r64_m16     
  movq %rax, 0x78(%rsp)         #  548   0xefb5c  5      OPC=movq_m64_r64     
  movq 0x40(%rsp), %rax         #  549   0xefb61  5      OPC=movq_r64_m64     
  movq %rax, 0x80(%rsp)         #  550   0xefb66  8      OPC=movq_m64_r64     
.L_efb62:                       #        0xefb6e  0      OPC=<label>          
  movl 0x64(%rsp), %edi         #  551   0xefb6e  4      OPC=movl_r32_m32     
  cmpl $0x1, %edi               #  552   0xefb72  3      OPC=cmpl_r32_imm8    
  je .L_efd0f                   #  553   0xefb75  6      OPC=je_label_1       
  movl $0x1, %esi               #  554   0xefb7b  5      OPC=movl_r32_imm32   
  callq .__dup2                 #  555   0xefb80  5      OPC=callq_label      
  movl 0x64(%rsp), %edi         #  556   0xefb85  4      OPC=movl_r32_m32     
  callq .__close                #  557   0xefb89  5      OPC=callq_label      
.L_efb82:                       #        0xefb8e  0      OPC=<label>          
  movl 0x2c(%rsp), %edx         #  558   0xefb8e  4      OPC=movl_r32_m32     
  testl %edx, %edx              #  559   0xefb92  2      OPC=testl_r32_r32    
  jne .L_efca8                  #  560   0xefb94  6      OPC=jne_label_1      
  movl $0x2, %edi               #  561   0xefb9a  5      OPC=movl_r32_imm32   
  callq .__close                #  562   0xefb9f  5      OPC=callq_label      
  leaq 0x9a4bd(%rip), %rdi      #  563   0xefba4  7      OPC=leaq_r64_m16     
  xorl %eax, %eax               #  564   0xefbab  2      OPC=xorl_r32_r32     
  movl $0x1, %esi               #  565   0xefbad  5      OPC=movl_r32_imm32   
  callq .__open                 #  566   0xefbb2  5      OPC=callq_label      
  cmpl $0x2, %eax               #  567   0xefbb7  3      OPC=cmpl_r32_imm8    
  movl %eax, %ebx               #  568   0xefbba  2      OPC=movl_r32_r32     
  je .L_efbc9                   #  569   0xefbbc  2      OPC=je_label         
  testl %eax, %eax              #  570   0xefbbe  2      OPC=testl_r32_r32    
  js .L_efbc9                   #  571   0xefbc0  2      OPC=js_label         
  movl %eax, %edi               #  572   0xefbc2  2      OPC=movl_r32_r32     
  movl $0x2, %esi               #  573   0xefbc4  5      OPC=movl_r32_imm32   
  callq .__dup2                 #  574   0xefbc9  5      OPC=callq_label      
  movl %ebx, %edi               #  575   0xefbce  2      OPC=movl_r32_r32     
  callq .__close                #  576   0xefbd0  5      OPC=callq_label      
.L_efbc9:                       #        0xefbd5  0      OPC=<label>          
  leaq 0x110(%rsp), %rdx        #  577   0xefbd5  8      OPC=leaq_r64_m16     
  movl $0x2, %esi               #  578   0xefbdd  5      OPC=movl_r32_imm32   
  movl $0x1, %edi               #  579   0xefbe2  5      OPC=movl_r32_imm32   
  callq .__fxstat               #  580   0xefbe7  5      OPC=callq_label      
  testl %eax, %eax              #  581   0xefbec  2      OPC=testl_r32_r32    
  jne .L_efc09                  #  582   0xefbee  2      OPC=jne_label        
  movl 0x128(%rsp), %eax        #  583   0xefbf0  7      OPC=movl_r32_m32     
  andl $0xf000, %eax            #  584   0xefbf7  5      OPC=andl_eax_imm32   
  cmpl $0x2000, %eax            #  585   0xefbfc  5      OPC=cmpl_eax_imm32   
  jne .L_efc09                  #  586   0xefc01  2      OPC=jne_label        
  cmpq $0x103, 0x138(%rsp)      #  587   0xefc03  12     OPC=cmpq_m64_imm32   
  je .L_efca8                   #  588   0xefc0f  6      OPC=je_label_1       
.L_efc09:                       #        0xefc15  0      OPC=<label>          
  movl $0x5a, %edi              #  589   0xefc15  5      OPC=movl_r32_imm32   
  callq ._exit                  #  590   0xefc1a  5      OPC=callq_label      
.L_efc13:                       #        0xefc1f  0      OPC=<label>          
  leaq 0x5c(%rsp), %rbx         #  591   0xefc1f  5      OPC=leaq_r64_m16     
  movl 0x48(%rsp), %ebp         #  592   0xefc24  4      OPC=movl_r32_m32     
  jmpq .L_efc31                 #  593   0xefc28  2      OPC=jmpq_label       
  xchgw %ax, %ax                #  594   0xefc2a  2      OPC=xchgw_ax_r16     
.L_efc20:                       #        0xefc2c  0      OPC=<label>          
  movq 0x2d1259(%rip), %rdx     #  595   0xefc2c  7      OPC=movq_r64_m64     
  cmpl $0x4, (%rdx)             #  596   0xefc33  3      OPC=cmpl_m32_imm8    
  nop                           #  597   0xefc36  1      OPC=nop              
  jne .L_ef3dd                  #  598   0xefc37  6      OPC=jne_label_1      
.L_efc31:                       #        0xefc3d  0      OPC=<label>          
  xorl %edx, %edx               #  599   0xefc3d  2      OPC=xorl_r32_r32     
  movq %rbx, %rsi               #  600   0xefc3f  3      OPC=movq_r64_r64     
  movl %ebp, %edi               #  601   0xefc42  2      OPC=movl_r32_r32     
  callq .__waitpid              #  602   0xefc44  5      OPC=callq_label      
  movslq %eax, %rdx             #  603   0xefc49  3      OPC=movslq_r64_r32   
  cmpq $0xff, %rdx              #  604   0xefc4c  4      OPC=cmpq_r64_imm8    
  je .L_efc20                   #  605   0xefc50  2      OPC=je_label         
  movq %rdx, %rax               #  606   0xefc52  3      OPC=movq_r64_r64     
  movslq 0x48(%rsp), %rdx       #  607   0xefc55  5      OPC=movslq_r64_m32   
  cmpq %rax, %rdx               #  608   0xefc5a  3      OPC=cmpq_r64_r64     
  jne .L_ef3dd                  #  609   0xefc5d  6      OPC=jne_label_1      
  movl 0x5c(%rsp), %eax         #  610   0xefc63  4      OPC=movl_r32_m32     
  movl %eax, %edx               #  611   0xefc67  2      OPC=movl_r32_r32     
  testl %eax, %eax              #  612   0xefc69  2      OPC=testl_r32_r32    
  movl $0x5, %eax               #  613   0xefc6b  5      OPC=movl_r32_imm32   
  movl %eax, %ebx               #  614   0xefc70  2      OPC=movl_r32_r32     
  cmovel %edx, %ebx             #  615   0xefc72  3      OPC=cmovel_r32_r32   
  movl %ebx, 0x2c(%rsp)         #  616   0xefc75  4      OPC=movl_m32_r32     
  jmpq .L_ef3dd                 #  617   0xefc79  5      OPC=jmpq_label_1     
.L_efc72:                       #        0xefc7e  0      OPC=<label>          
  leaq 0x9aac9(%rip), %rax      #  618   0xefc7e  7      OPC=leaq_r64_m16     
  movq $0x0, 0x88(%rsp)         #  619   0xefc85  12     OPC=movq_m64_imm32   
  movq %rax, 0x70(%rsp)         #  620   0xefc91  5      OPC=movq_m64_r64     
  movq 0x40(%rsp), %rax         #  621   0xefc96  5      OPC=movq_r64_m64     
  movq %rax, 0x80(%rsp)         #  622   0xefc9b  8      OPC=movq_m64_r64     
  leaq 0x9c607(%rip), %rax      #  623   0xefca3  7      OPC=leaq_r64_m16     
  movq %rax, 0x78(%rsp)         #  624   0xefcaa  5      OPC=movq_m64_r64     
  jmpq .L_efb62                 #  625   0xefcaf  5      OPC=jmpq_label_1     
.L_efca8:                       #        0xefcb4  0      OPC=<label>          
  leaq 0x9c5f2(%rip), %rdi      #  626   0xefcb4  7      OPC=leaq_r64_m16     
  callq .unsetenv               #  627   0xefcbb  5      OPC=callq_label      
  movl 0x60(%rsp), %edi         #  628   0xefcc0  4      OPC=movl_r32_m32     
  callq .__close                #  629   0xefcc4  5      OPC=callq_label      
  movq 0x2d11fc(%rip), %rax     #  630   0xefcc9  7      OPC=movq_r64_m64     
  leaq 0x70(%rsp), %rsi         #  631   0xefcd0  5      OPC=leaq_r64_m16     
  leaq 0x9aa72(%rip), %rdi      #  632   0xefcd5  7      OPC=leaq_r64_m16     
  movq (%rax), %rdx             #  633   0xefcdc  3      OPC=movq_r64_m64     
  callq .execve                 #  634   0xefcdf  5      OPC=callq_label      
  callq .abort                  #  635   0xefce4  5      OPC=callq_label      
.L_efcdd:                       #        0xefce9  0      OPC=<label>          
  movq 0x10(%rsp), %r14         #  636   0xefce9  5      OPC=movq_r64_m64     
  movq %rcx, 0x8(%rsp)          #  637   0xefcee  5      OPC=movq_m64_r64     
  movq (%r14), %rdi             #  638   0xefcf3  3      OPC=movq_r64_m64     
  callq .L_1f8c0                #  639   0xefcf6  5      OPC=callq_label      
  movq 0x20(%rsp), %rax         #  640   0xefcfb  5      OPC=movq_r64_m64     
  movq $0x0, (%rax)             #  641   0xefd00  7      OPC=movq_m64_imm32   
  movq $0x0, (%rbp)             #  642   0xefd07  8      OPC=movq_m64_imm32   
  movq $0x0, (%r14)             #  643   0xefd0f  7      OPC=movq_m64_imm32   
  jmpq .L_ef8ec                 #  644   0xefd16  5      OPC=jmpq_label_1     
.L_efd0f:                       #        0xefd1b  0      OPC=<label>          
  xorl %edx, %edx               #  645   0xefd1b  2      OPC=xorl_r32_r32     
  movl $0x2, %esi               #  646   0xefd1d  5      OPC=movl_r32_imm32   
  movl $0x1, %edi               #  647   0xefd22  5      OPC=movl_r32_imm32   
  xorl %eax, %eax               #  648   0xefd27  2      OPC=xorl_r32_r32     
  callq .__fcntl                #  649   0xefd29  5      OPC=callq_label      
  jmpq .L_efb82                 #  650   0xefd2e  5      OPC=jmpq_label_1     
.L_efd27:                       #        0xefd33  0      OPC=<label>          
  callq .w_addchar_part_1       #  651   0xefd33  5      OPC=callq_label      
.L_efd2c:                       #        0xefd38  0      OPC=<label>          
  callq .w_addmem_part_0        #  652   0xefd38  5      OPC=callq_label      
  nop                           #  653   0xefd3d  1      OPC=nop              
  nop                           #  654   0xefd3e  1      OPC=nop              
  nop                           #  655   0xefd3f  1      OPC=nop              
  nop                           #  656   0xefd40  1      OPC=nop              
  nop                           #  657   0xefd41  1      OPC=nop              
  nop                           #  658   0xefd42  1      OPC=nop              
  nop                           #  659   0xefd43  1      OPC=nop              
  nop                           #  660   0xefd44  1      OPC=nop              
  nop                           #  661   0xefd45  1      OPC=nop              
  nop                           #  662   0xefd46  1      OPC=nop              
  nop                           #  663   0xefd47  1      OPC=nop              
  nop                           #  664   0xefd48  1      OPC=nop              
  nop                           #  665   0xefd49  1      OPC=nop              
  nop                           #  666   0xefd4a  1      OPC=nop              
  nop                           #  667   0xefd4b  1      OPC=nop              
                                                                              
.size exec_comm, .-exec_comm

