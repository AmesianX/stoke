  .text
  .globl parse_branch
  .type parse_branch, @function

#! file-offset 0xe06f0
#! rip-offset  0xe06f0
#! capacity    448 bytes

# Text                                 #  Line  RIP      Bytes  Opcode              
.parse_branch:                         #        0xe06f0  0      OPC=<label>         
  pushq %r15                           #  1     0xe06f0  2      OPC=pushq_r64_1     
  pushq %r14                           #  2     0xe06f2  2      OPC=pushq_r64_1     
  pushq %r13                           #  3     0xe06f4  2      OPC=pushq_r64_1     
  pushq %r12                           #  4     0xe06f6  2      OPC=pushq_r64_1     
  movq %rsi, %r13                      #  5     0xe06f8  3      OPC=movq_r64_r64    
  pushq %rbp                           #  6     0xe06fb  1      OPC=pushq_r64_1     
  pushq %rbx                           #  7     0xe06fc  1      OPC=pushq_r64_1     
  movl %r8d, %ebp                      #  8     0xe06fd  3      OPC=movl_r32_r32    
  movq %rdx, %rbx                      #  9     0xe0700  3      OPC=movq_r64_r64    
  movq %r9, %r12                       #  10    0xe0703  3      OPC=movq_r64_r64    
  subq $0x28, %rsp                     #  11    0xe0706  4      OPC=subq_r64_imm8   
  movq (%rsi), %r15                    #  12    0xe070a  3      OPC=movq_r64_m64    
  movq %rdi, 0x8(%rsp)                 #  13    0xe070d  5      OPC=movq_m64_r64    
  movq %rcx, 0x10(%rsp)                #  14    0xe0712  5      OPC=movq_m64_r64    
  callq .parse_expression              #  15    0xe0717  5      OPC=callq_label     
  testq %rax, %rax                     #  16    0xe071c  3      OPC=testq_r64_r64   
  movq %rax, %r14                      #  17    0xe071f  3      OPC=movq_r64_r64    
  jne .L_e0730                         #  18    0xe0722  2      OPC=jne_label       
  movl (%r12), %edx                    #  19    0xe0724  4      OPC=movl_r32_m32    
  testl %edx, %edx                     #  20    0xe0728  2      OPC=testl_r32_r32   
  jne .L_e0896                         #  21    0xe072a  6      OPC=jne_label_1     
.L_e0730:                              #        0xe0730  0      OPC=<label>         
  movzbl 0x8(%rbx), %eax               #  22    0xe0730  4      OPC=movzbl_r32_m8   
  movl %eax, %edx                      #  23    0xe0734  2      OPC=movl_r32_r32    
  andl $0xfffffff7, %edx               #  24    0xe0736  6      OPC=andl_r32_imm32  
  nop                                  #  25    0xe073c  1      OPC=nop             
  nop                                  #  26    0xe073d  1      OPC=nop             
  nop                                  #  27    0xe073e  1      OPC=nop             
  cmpb $0x2, %dl                       #  28    0xe073f  3      OPC=cmpb_r8_imm8    
  je .L_e0794                          #  29    0xe0742  2      OPC=je_label        
.L_e073e:                              #        0xe0744  0      OPC=<label>         
  testl %ebp, %ebp                     #  30    0xe0744  2      OPC=testl_r32_r32   
  je .L_e0746                          #  31    0xe0746  2      OPC=je_label        
  cmpb $0x9, %al                       #  32    0xe0748  2      OPC=cmpb_al_imm8    
  je .L_e0794                          #  33    0xe074a  2      OPC=je_label        
.L_e0746:                              #        0xe074c  0      OPC=<label>         
  movq 0x10(%rsp), %rcx                #  34    0xe074c  5      OPC=movq_r64_m64    
  movq 0x8(%rsp), %rdi                 #  35    0xe0751  5      OPC=movq_r64_m64    
  movq %rbx, %rdx                      #  36    0xe0756  3      OPC=movq_r64_r64    
  movq %r12, %r9                       #  37    0xe0759  3      OPC=movq_r64_r64    
  movl %ebp, %r8d                      #  38    0xe075c  3      OPC=movl_r32_r32    
  movq %r13, %rsi                      #  39    0xe075f  3      OPC=movq_r64_r64    
  callq .parse_expression              #  40    0xe0762  5      OPC=callq_label     
  testq %rax, %rax                     #  41    0xe0767  3      OPC=testq_r64_r64   
  movq %rax, %rdx                      #  42    0xe076a  3      OPC=movq_r64_r64    
  jne .L_e0775                         #  43    0xe076d  2      OPC=jne_label       
  movl (%r12), %eax                    #  44    0xe076f  4      OPC=movl_r32_m32    
  testl %eax, %eax                     #  45    0xe0773  2      OPC=testl_r32_r32   
  jne .L_e0860                         #  46    0xe0775  6      OPC=jne_label_1     
.L_e0775:                              #        0xe077b  0      OPC=<label>         
  testq %rdx, %rdx                     #  47    0xe077b  3      OPC=testq_r64_r64   
  je .L_e077f                          #  48    0xe077e  2      OPC=je_label        
  testq %r14, %r14                     #  49    0xe0780  3      OPC=testq_r64_r64   
  jne .L_e07b0                         #  50    0xe0783  2      OPC=jne_label       
.L_e077f:                              #        0xe0785  0      OPC=<label>         
  movzbl 0x8(%rbx), %eax               #  51    0xe0785  4      OPC=movzbl_r32_m8   
  testq %r14, %r14                     #  52    0xe0789  3      OPC=testq_r64_r64   
  cmoveq %rdx, %r14                    #  53    0xe078c  4      OPC=cmoveq_r64_r64  
  movl %eax, %edx                      #  54    0xe0790  2      OPC=movl_r32_r32    
  andl $0xfffffff7, %edx               #  55    0xe0792  6      OPC=andl_r32_imm32  
  nop                                  #  56    0xe0798  1      OPC=nop             
  nop                                  #  57    0xe0799  1      OPC=nop             
  nop                                  #  58    0xe079a  1      OPC=nop             
  cmpb $0x2, %dl                       #  59    0xe079b  3      OPC=cmpb_r8_imm8    
  jne .L_e073e                         #  60    0xe079e  2      OPC=jne_label       
.L_e0794:                              #        0xe07a0  0      OPC=<label>         
  addq $0x28, %rsp                     #  61    0xe07a0  4      OPC=addq_r64_imm8   
  movq %r14, %rax                      #  62    0xe07a4  3      OPC=movq_r64_r64    
  popq %rbx                            #  63    0xe07a7  1      OPC=popq_r64_1      
  popq %rbp                            #  64    0xe07a8  1      OPC=popq_r64_1      
  popq %r12                            #  65    0xe07a9  2      OPC=popq_r64_1      
  popq %r13                            #  66    0xe07ab  2      OPC=popq_r64_1      
  popq %r14                            #  67    0xe07ad  2      OPC=popq_r64_1      
  popq %r15                            #  68    0xe07af  2      OPC=popq_r64_1      
  retq                                 #  69    0xe07b1  1      OPC=retq            
  nop                                  #  70    0xe07b2  1      OPC=nop             
  nop                                  #  71    0xe07b3  1      OPC=nop             
  nop                                  #  72    0xe07b4  1      OPC=nop             
  nop                                  #  73    0xe07b5  1      OPC=nop             
  nop                                  #  74    0xe07b6  1      OPC=nop             
  nop                                  #  75    0xe07b7  1      OPC=nop             
  nop                                  #  76    0xe07b8  1      OPC=nop             
  nop                                  #  77    0xe07b9  1      OPC=nop             
  nop                                  #  78    0xe07ba  1      OPC=nop             
  nop                                  #  79    0xe07bb  1      OPC=nop             
.L_e07b0:                              #        0xe07bc  0      OPC=<label>         
  movslq 0x80(%r15), %rcx              #  80    0xe07bc  7      OPC=movslq_r64_m32  
  cmpl $0xf, %ecx                      #  81    0xe07c3  3      OPC=cmpl_r32_imm8   
  je .L_e0830                          #  82    0xe07c6  2      OPC=je_label        
  movq 0x70(%r15), %rax                #  83    0xe07c8  4      OPC=movq_r64_m64    
  leal 0x1(%rcx), %esi                 #  84    0xe07cc  3      OPC=leal_r32_m16    
.L_e07c3:                              #        0xe07cf  0      OPC=<label>         
  shlq $0x6, %rcx                      #  85    0xe07cf  4      OPC=shlq_r64_imm8   
  movl %esi, 0x80(%r15)                #  86    0xe07d3  7      OPC=movl_m32_r32    
  leaq (%rax,%rcx,1), %rsi             #  87    0xe07da  4      OPC=leaq_r64_m16    
  leaq 0x10(%rax,%rcx,1), %r8          #  88    0xe07de  5      OPC=leaq_r64_m16    
  movq $0x0, 0x8(%rsi)                 #  89    0xe07e3  8      OPC=movq_m64_imm32  
  movq %r14, 0x10(%rsi)                #  90    0xe07eb  4      OPC=movq_m64_r64    
  leaq 0x8(%rsi), %rdi                 #  91    0xe07ef  4      OPC=leaq_r64_m16    
  leaq 0x20(%rcx), %rsi                #  92    0xe07f3  4      OPC=leaq_r64_m16    
  movq %rdx, 0x8(%r8)                  #  93    0xe07f7  4      OPC=movq_m64_r64    
  movb $0x10, 0x38(%rax,%rcx,1)        #  94    0xe07fb  5      OPC=movb_m8_imm8    
  addq %rax, %rsi                      #  95    0xe0800  3      OPC=addq_r64_r64    
  andb $0xf3, 0x1a(%rsi)               #  96    0xe0803  4      OPC=andb_m8_imm8    
  testq %rdi, %rdi                     #  97    0xe0807  3      OPC=testq_r64_r64   
  movq $0x0, 0x10(%r8)                 #  98    0xe080a  8      OPC=movq_m64_imm32  
  movq $0x0, 0x8(%rsi)                 #  99    0xe0812  8      OPC=movq_m64_imm32  
  movl $0xffffffff, 0x40(%rax,%rcx,1)  #  100   0xe081a  8      OPC=movl_m32_imm32  
  movq %rdi, (%r14)                    #  101   0xe0822  3      OPC=movq_m64_r64    
  movq %rdi, (%rdx)                    #  102   0xe0825  3      OPC=movq_m64_r64    
  je .L_e087e                          #  103   0xe0828  2      OPC=je_label        
  movq %rdi, %r14                      #  104   0xe082a  3      OPC=movq_r64_r64    
  jmpq .L_e0730                        #  105   0xe082d  5      OPC=jmpq_label_1    
  nop                                  #  106   0xe0832  1      OPC=nop             
  nop                                  #  107   0xe0833  1      OPC=nop             
  nop                                  #  108   0xe0834  1      OPC=nop             
  nop                                  #  109   0xe0835  1      OPC=nop             
  nop                                  #  110   0xe0836  1      OPC=nop             
  nop                                  #  111   0xe0837  1      OPC=nop             
  nop                                  #  112   0xe0838  1      OPC=nop             
  nop                                  #  113   0xe0839  1      OPC=nop             
  nop                                  #  114   0xe083a  1      OPC=nop             
  nop                                  #  115   0xe083b  1      OPC=nop             
.L_e0830:                              #        0xe083c  0      OPC=<label>         
  movl $0x3c8, %edi                    #  116   0xe083c  5      OPC=movl_r32_imm32  
  movq %rdx, 0x18(%rsp)                #  117   0xe0841  5      OPC=movq_m64_r64    
  callq .memalign_plt                  #  118   0xe0846  5      OPC=callq_label     
  testq %rax, %rax                     #  119   0xe084b  3      OPC=testq_r64_r64   
  movq 0x18(%rsp), %rdx                #  120   0xe084e  5      OPC=movq_r64_m64    
  je .L_e087e                          #  121   0xe0853  2      OPC=je_label        
  movq 0x70(%r15), %rcx                #  122   0xe0855  4      OPC=movq_r64_m64    
  movl $0x1, %esi                      #  123   0xe0859  5      OPC=movl_r32_imm32  
  movq %rcx, (%rax)                    #  124   0xe085e  3      OPC=movq_m64_r64    
  movq %rax, 0x70(%r15)                #  125   0xe0861  4      OPC=movq_m64_r64    
  xorl %ecx, %ecx                      #  126   0xe0865  2      OPC=xorl_r32_r32    
  jmpq .L_e07c3                        #  127   0xe0867  5      OPC=jmpq_label_1    
.L_e0860:                              #        0xe086c  0      OPC=<label>         
  testq %r14, %r14                     #  128   0xe086c  3      OPC=testq_r64_r64   
  je .L_e0896                          #  129   0xe086f  2      OPC=je_label        
  movq %r14, %rdi                      #  130   0xe0871  3      OPC=movq_r64_r64    
  callq .postorder_constprop_36        #  131   0xe0874  5      OPC=callq_label     
  addq $0x28, %rsp                     #  132   0xe0879  4      OPC=addq_r64_imm8   
  xorl %eax, %eax                      #  133   0xe087d  2      OPC=xorl_r32_r32    
  popq %rbx                            #  134   0xe087f  1      OPC=popq_r64_1      
  popq %rbp                            #  135   0xe0880  1      OPC=popq_r64_1      
  popq %r12                            #  136   0xe0881  2      OPC=popq_r64_1      
  popq %r13                            #  137   0xe0883  2      OPC=popq_r64_1      
  popq %r14                            #  138   0xe0885  2      OPC=popq_r64_1      
  popq %r15                            #  139   0xe0887  2      OPC=popq_r64_1      
  retq                                 #  140   0xe0889  1      OPC=retq            
.L_e087e:                              #        0xe088a  0      OPC=<label>         
  movq %rdx, %rdi                      #  141   0xe088a  3      OPC=movq_r64_r64    
  callq .postorder_constprop_36        #  142   0xe088d  5      OPC=callq_label     
  movq %r14, %rdi                      #  143   0xe0892  3      OPC=movq_r64_r64    
  callq .postorder_constprop_36        #  144   0xe0895  5      OPC=callq_label     
  movl $0xc, (%r12)                    #  145   0xe089a  8      OPC=movl_m32_imm32  
.L_e0896:                              #        0xe08a2  0      OPC=<label>         
  addq $0x28, %rsp                     #  146   0xe08a2  4      OPC=addq_r64_imm8   
  xorl %eax, %eax                      #  147   0xe08a6  2      OPC=xorl_r32_r32    
  popq %rbx                            #  148   0xe08a8  1      OPC=popq_r64_1      
  popq %rbp                            #  149   0xe08a9  1      OPC=popq_r64_1      
  popq %r12                            #  150   0xe08aa  2      OPC=popq_r64_1      
  popq %r13                            #  151   0xe08ac  2      OPC=popq_r64_1      
  popq %r14                            #  152   0xe08ae  2      OPC=popq_r64_1      
  popq %r15                            #  153   0xe08b0  2      OPC=popq_r64_1      
  retq                                 #  154   0xe08b2  1      OPC=retq            
  nop                                  #  155   0xe08b3  1      OPC=nop             
  nop                                  #  156   0xe08b4  1      OPC=nop             
  nop                                  #  157   0xe08b5  1      OPC=nop             
  nop                                  #  158   0xe08b6  1      OPC=nop             
  nop                                  #  159   0xe08b7  1      OPC=nop             
  nop                                  #  160   0xe08b8  1      OPC=nop             
  nop                                  #  161   0xe08b9  1      OPC=nop             
  nop                                  #  162   0xe08ba  1      OPC=nop             
  nop                                  #  163   0xe08bb  1      OPC=nop             
                                                                                    
.size parse_branch, .-parse_branch

