  .text
  .globl pmap_set_GLIBC_2_2_5
  .type pmap_set_GLIBC_2_2_5, @function

#! file-offset 0x129ff0
#! rip-offset  0x129ff0
#! capacity    448 bytes

# Text                                  #  Line  RIP       Bytes  Opcode              
.pmap_set_GLIBC_2_2_5:                  #        0x129ff0  0      OPC=<label>         
  pushq %r15                            #  1     0x129ff0  2      OPC=pushq_r64_1     
  pushq %r14                            #  2     0x129ff2  2      OPC=pushq_r64_1     
  movq %rsi, %r14                       #  3     0x129ff4  3      OPC=movq_r64_r64    
  pushq %r13                            #  4     0x129ff7  2      OPC=pushq_r64_1     
  pushq %r12                            #  5     0x129ff9  2      OPC=pushq_r64_1     
  movq %rdi, %r13                       #  6     0x129ffb  3      OPC=movq_r64_r64    
  pushq %rbp                            #  7     0x129ffe  1      OPC=pushq_r64_1     
  pushq %rbx                            #  8     0x129fff  1      OPC=pushq_r64_1     
  movslq %edx, %r12                     #  9     0x12a000  3      OPC=movslq_r64_r32  
  movzwl %cx, %ebx                      #  10    0x12a003  3      OPC=movzwl_r32_r16  
  subq $0x58, %rsp                      #  11    0x12a006  4      OPC=subq_r64_imm8   
  leaq 0x30(%rsp), %rbp                 #  12    0x12a00a  5      OPC=leaq_r64_m16    
  movl $0xffffffff, 0x18(%rsp)          #  13    0x12a00f  8      OPC=movl_m32_imm32  
  movq %rbp, %rdi                       #  14    0x12a017  3      OPC=movq_r64_r64    
  callq .getifaddrs                     #  15    0x12a01a  5      OPC=callq_label     
  testl %eax, %eax                      #  16    0x12a01f  2      OPC=testl_r32_r32   
  movl %eax, %r15d                      #  17    0x12a021  3      OPC=movl_r32_r32    
  jne .L_12a19a                         #  18    0x12a024  6      OPC=jne_label_1     
  movq 0x30(%rsp), %rdi                 #  19    0x12a02a  5      OPC=movq_r64_m64    
  movl $0x1, %esi                       #  20    0x12a02f  5      OPC=movl_r32_imm32  
  testq %rdi, %rdi                      #  21    0x12a034  3      OPC=testq_r64_r64   
  je .L_12a15c                          #  22    0x12a037  6      OPC=je_label_1      
.L_12a03d:                              #        0x12a03d  0      OPC=<label>         
  movl %esi, %ecx                       #  23    0x12a03d  2      OPC=movl_r32_r32    
  movq %rdi, %r8                        #  24    0x12a03f  3      OPC=movq_r64_r64    
  xorl $0x1, %ecx                       #  25    0x12a042  3      OPC=xorl_r32_imm8   
  andl $0x1, %ecx                       #  26    0x12a045  3      OPC=andl_r32_imm8   
  jmpq .L_12a05c                        #  27    0x12a048  2      OPC=jmpq_label      
  nop                                   #  28    0x12a04a  1      OPC=nop             
  nop                                   #  29    0x12a04b  1      OPC=nop             
  nop                                   #  30    0x12a04c  1      OPC=nop             
  nop                                   #  31    0x12a04d  1      OPC=nop             
  nop                                   #  32    0x12a04e  1      OPC=nop             
  nop                                   #  33    0x12a04f  1      OPC=nop             
.L_12a050:                              #        0x12a050  0      OPC=<label>         
  movq (%r8), %r8                       #  34    0x12a050  3      OPC=movq_r64_m64    
  testq %r8, %r8                        #  35    0x12a053  3      OPC=testq_r64_r64   
  je .L_12a150                          #  36    0x12a056  6      OPC=je_label_1      
.L_12a05c:                              #        0x12a05c  0      OPC=<label>         
  movl 0x10(%r8), %edx                  #  37    0x12a05c  4      OPC=movl_r32_m32    
  testb $0x1, %dl                       #  38    0x12a060  3      OPC=testb_r8_imm8   
  je .L_12a050                          #  39    0x12a063  2      OPC=je_label        
  movq 0x18(%r8), %rax                  #  40    0x12a065  4      OPC=movq_r64_m64    
  testq %rax, %rax                      #  41    0x12a069  3      OPC=testq_r64_r64   
  je .L_12a050                          #  42    0x12a06c  2      OPC=je_label        
  cmpw $0x2, (%rax)                     #  43    0x12a06e  4      OPC=cmpw_m16_imm8   
  jne .L_12a050                         #  44    0x12a072  2      OPC=jne_label       
  testb %cl, %cl                        #  45    0x12a074  2      OPC=testb_r8_r8     
  jne .L_12a07d                         #  46    0x12a076  2      OPC=jne_label       
  andl $0x8, %edx                       #  47    0x12a078  3      OPC=andl_r32_imm8   
  je .L_12a050                          #  48    0x12a07b  2      OPC=je_label        
.L_12a07d:                              #        0x12a07d  0      OPC=<label>         
  movq 0x8(%rax), %rdx                  #  49    0x12a07d  4      OPC=movq_r64_m64    
  movq (%rax), %rax                     #  50    0x12a081  3      OPC=movq_r64_m64    
  movl $0x6f00, %esi                    #  51    0x12a084  5      OPC=movl_r32_imm32  
  movq %rax, 0x20(%rsp)                 #  52    0x12a089  5      OPC=movq_m64_r64    
  movq %rdx, 0x28(%rsp)                 #  53    0x12a08e  5      OPC=movq_m64_r64    
  movw %si, 0x22(%rsp)                  #  54    0x12a093  5      OPC=movw_m16_r16    
  callq .freeifaddrs                    #  55    0x12a098  5      OPC=callq_label     
  leaq 0x20(%rsp), %rdi                 #  56    0x12a09d  5      OPC=leaq_r64_m16    
  pushq $0x190                          #  57    0x12a0a2  5      OPC=pushq_imm32     
  pushq $0x190                          #  58    0x12a0a7  5      OPC=pushq_imm32     
  movq 0x674c5(%rip), %r8               #  59    0x12a0ac  7      OPC=movq_r64_m64    
  movq 0x674b6(%rip), %rcx              #  60    0x12a0b3  7      OPC=movq_r64_m64    
  movl $0x2, %edx                       #  61    0x12a0ba  5      OPC=movl_r32_imm32  
  leaq 0x28(%rsp), %r9                  #  62    0x12a0bf  5      OPC=leaq_r64_m16    
  movl $0x186a0, %esi                   #  63    0x12a0c4  5      OPC=movl_r32_imm32  
  callq .clntudp_bufcreate_GLIBC_2_2_5  #  64    0x12a0c9  5      OPC=callq_label     
  testq %rax, %rax                      #  65    0x12a0ce  3      OPC=testq_r64_r64   
  movq %rax, %r10                       #  66    0x12a0d1  3      OPC=movq_r64_r64    
  popq %rdi                             #  67    0x12a0d4  1      OPC=popq_r64_1      
  popq %r8                              #  68    0x12a0d5  2      OPC=popq_r64_1      
  je .L_12a13c                          #  69    0x12a0d7  2      OPC=je_label        
  movq 0x8(%rax), %rax                  #  70    0x12a0d9  4      OPC=movq_r64_m64    
  movq %r13, 0x30(%rsp)                 #  71    0x12a0dd  5      OPC=movq_m64_r64    
  movq %rbp, %rcx                       #  72    0x12a0e2  3      OPC=movq_r64_r64    
  movq %r14, 0x38(%rsp)                 #  73    0x12a0e5  5      OPC=movq_m64_r64    
  movq %r12, 0x40(%rsp)                 #  74    0x12a0ea  5      OPC=movq_m64_r64    
  leaq 0x41a(%rip), %rdx                #  75    0x12a0ef  7      OPC=leaq_r64_m16    
  movq %rbx, 0x48(%rsp)                 #  76    0x12a0f6  5      OPC=movq_m64_r64    
  pushq 0x67467(%rip)                   #  77    0x12a0fb  6      OPC=pushq_m64       
  movq %r10, %rdi                       #  78    0x12a101  3      OPC=movq_r64_r64    
  pushq 0x67456(%rip)                   #  79    0x12a104  6      OPC=pushq_m64       
  leaq 0xe8ff(%rip), %r8                #  80    0x12a10a  7      OPC=leaq_r64_m16    
  movl $0x1, %esi                       #  81    0x12a111  5      OPC=movl_r32_imm32  
  movq %r10, 0x18(%rsp)                 #  82    0x12a116  5      OPC=movq_m64_r64    
  leaq 0x2c(%rsp), %r9                  #  83    0x12a11b  5      OPC=leaq_r64_m16    
  callq (%rax)                          #  84    0x12a120  2      OPC=callq_m64       
  popq %rdx                             #  85    0x12a122  1      OPC=popq_r64_1      
  testl %eax, %eax                      #  86    0x12a123  2      OPC=testl_r32_r32   
  popq %rcx                             #  87    0x12a125  1      OPC=popq_r64_1      
  movq 0x8(%rsp), %r10                  #  88    0x12a126  5      OPC=movq_r64_m64    
  jne .L_12a163                         #  89    0x12a12b  2      OPC=jne_label       
.L_12a12d:                              #        0x12a12d  0      OPC=<label>         
  movq 0x8(%r10), %rax                  #  90    0x12a12d  4      OPC=movq_r64_m64    
  movq %r10, %rdi                       #  91    0x12a131  3      OPC=movq_r64_r64    
  callq 0x20(%rax)                      #  92    0x12a134  3      OPC=callq_m64       
  movl 0x1c(%rsp), %r15d                #  93    0x12a137  5      OPC=movl_r32_m32    
.L_12a13c:                              #        0x12a13c  0      OPC=<label>         
  addq $0x58, %rsp                      #  94    0x12a13c  4      OPC=addq_r64_imm8   
  movl %r15d, %eax                      #  95    0x12a140  3      OPC=movl_r32_r32    
  popq %rbx                             #  96    0x12a143  1      OPC=popq_r64_1      
  popq %rbp                             #  97    0x12a144  1      OPC=popq_r64_1      
  popq %r12                             #  98    0x12a145  2      OPC=popq_r64_1      
  popq %r13                             #  99    0x12a147  2      OPC=popq_r64_1      
  popq %r14                             #  100   0x12a149  2      OPC=popq_r64_1      
  popq %r15                             #  101   0x12a14b  2      OPC=popq_r64_1      
  retq                                  #  102   0x12a14d  1      OPC=retq            
  xchgw %ax, %ax                        #  103   0x12a14e  2      OPC=xchgw_ax_r16    
.L_12a150:                              #        0x12a150  0      OPC=<label>         
  cmpl $0x1, %esi                       #  104   0x12a150  3      OPC=cmpl_r32_imm8   
  jne .L_12a15c                         #  105   0x12a153  2      OPC=jne_label       
  xorl %esi, %esi                       #  106   0x12a155  2      OPC=xorl_r32_r32    
  jmpq .L_12a03d                        #  107   0x12a157  5      OPC=jmpq_label_1    
.L_12a15c:                              #        0x12a15c  0      OPC=<label>         
  callq .freeifaddrs                    #  108   0x12a15c  5      OPC=callq_label     
  jmpq .L_12a13c                        #  109   0x12a161  2      OPC=jmpq_label      
.L_12a163:                              #        0x12a163  0      OPC=<label>         
  leaq 0x63642(%rip), %rsi              #  110   0x12a163  7      OPC=leaq_r64_m16    
  leaq 0x6042b(%rip), %rdi              #  111   0x12a16a  7      OPC=leaq_r64_m16    
  movl $0x5, %edx                       #  112   0x12a171  5      OPC=movl_r32_imm32  
  callq .__dcgettext                    #  113   0x12a176  5      OPC=callq_label     
  movq 0x8(%rsp), %r10                  #  114   0x12a17b  5      OPC=movq_r64_m64    
  movq %rax, %rsi                       #  115   0x12a180  3      OPC=movq_r64_r64    
  movq %r10, %rdi                       #  116   0x12a183  3      OPC=movq_r64_r64    
  callq .clnt_perror_GLIBC_2_2_5        #  117   0x12a186  5      OPC=callq_label     
  movl $0x0, 0x1c(%rsp)                 #  118   0x12a18b  8      OPC=movl_m32_imm32  
  movq 0x8(%rsp), %r10                  #  119   0x12a193  5      OPC=movq_r64_m64    
  jmpq .L_12a12d                        #  120   0x12a198  2      OPC=jmpq_label      
.L_12a19a:                              #        0x12a19a  0      OPC=<label>         
  leaq 0x635f1(%rip), %rdi              #  121   0x12a19a  7      OPC=leaq_r64_m16    
  callq .perror                         #  122   0x12a1a1  5      OPC=callq_label     
  movl $0x1, %edi                       #  123   0x12a1a6  5      OPC=movl_r32_imm32  
  callq .exit                           #  124   0x12a1ab  5      OPC=callq_label     
                                                                                      
.size pmap_set_GLIBC_2_2_5, .-pmap_set_GLIBC_2_2_5

