  .text
  .globl __tzfile_default
  .type __tzfile_default, @function

#! file-offset 0xbb990
#! rip-offset  0xbb990
#! capacity    512 bytes

# Text                        #  Line  RIP      Bytes  Opcode              
.__tzfile_default:            #        0xbb990  0      OPC=<label>         
  pushq %r15                  #  1     0xbb990  2      OPC=pushq_r64_1     
  pushq %r14                  #  2     0xbb992  2      OPC=pushq_r64_1     
  movq %rsi, %r14             #  3     0xbb994  3      OPC=movq_r64_r64    
  pushq %r13                  #  4     0xbb997  2      OPC=pushq_r64_1     
  pushq %r12                  #  5     0xbb999  2      OPC=pushq_r64_1     
  movq %rdx, %r13             #  6     0xbb99b  3      OPC=movq_r64_r64    
  pushq %rbp                  #  7     0xbb99e  1      OPC=pushq_r64_1     
  pushq %rbx                  #  8     0xbb99f  1      OPC=pushq_r64_1     
  movq %rdi, %r15             #  9     0xbb9a0  3      OPC=movq_r64_r64    
  subq $0x28, %rsp            #  10    0xbb9a3  4      OPC=subq_r64_imm8   
  movq %rcx, (%rsp)           #  11    0xbb9a7  4      OPC=movq_m64_r64    
  callq .strlen               #  12    0xbb9ab  5      OPC=callq_label     
  movq %r14, %rdi             #  13    0xbb9b0  3      OPC=movq_r64_r64    
  leaq 0x1(%rax), %rbp        #  14    0xbb9b3  4      OPC=leaq_r64_m16    
  callq .strlen               #  15    0xbb9b7  5      OPC=callq_label     
  leaq 0x1(%rax), %r12        #  16    0xbb9bc  4      OPC=leaq_r64_m16    
  leaq 0x18(%rsp), %rdx       #  17    0xbb9c0  5      OPC=leaq_r64_m16    
  leaq 0xd0340(%rip), %rdi    #  18    0xbb9c5  7      OPC=leaq_r64_m16    
  leaq (%r12,%rbp,1), %rbx    #  19    0xbb9cc  4      OPC=leaq_r64_m16    
  movq %rbx, %rsi             #  20    0xbb9d0  3      OPC=movq_r64_r64    
  callq .__tzfile_read        #  21    0xbb9d3  5      OPC=callq_label     
  movl 0x30afc2(%rip), %eax   #  22    0xbb9d8  6      OPC=movl_r32_m32    
  testl %eax, %eax            #  23    0xbb9de  2      OPC=testl_r32_r32   
  je .L_bbb68                 #  24    0xbb9e0  6      OPC=je_label_1      
  cmpq $0x1, 0x308432(%rip)   #  25    0xbb9e6  8      OPC=cmpq_m64_imm8   
  jbe .L_bbb77                #  26    0xbb9ee  6      OPC=jbe_label_1     
  movq 0x18(%rsp), %rdi       #  27    0xbb9f4  5      OPC=movq_r64_m64    
  movq %rbp, %rdx             #  28    0xbb9f9  3      OPC=movq_r64_r64    
  movq %r15, %rsi             #  29    0xbb9fc  3      OPC=movq_r64_r64    
  callq .__GI_memcpy          #  30    0xbb9ff  5      OPC=callq_label     
  leaq (%rax,%rbp,1), %rdi    #  31    0xbba04  4      OPC=leaq_r64_m16    
  movq %r12, %rdx             #  32    0xbba08  3      OPC=movq_r64_r64    
  movq %r14, %rsi             #  33    0xbba0b  3      OPC=movq_r64_r64    
  callq .__GI_memcpy          #  34    0xbba0e  5      OPC=callq_label     
  movq 0x308416(%rip), %r9    #  35    0xbba13  7      OPC=movq_r64_m64    
  movq 0x18(%rsp), %rcx       #  36    0xbba1a  5      OPC=movq_r64_m64    
  movq $0x2, 0x3083f6(%rip)   #  37    0xbba1f  11     OPC=movq_m64_imm32  
  movq 0x3083e7(%rip), %rdi   #  38    0xbba2a  7      OPC=movq_r64_m64    
  testq %r9, %r9              #  39    0xbba31  3      OPC=testq_r64_r64   
  movq %rcx, 0x3083d5(%rip)   #  40    0xbba34  7      OPC=movq_m64_r64    
  je .L_bbac2                 #  41    0xbba3b  6      OPC=je_label_1      
  movq (%rsp), %r12           #  42    0xbba41  4      OPC=movq_r64_m64    
  movq %r13, %r11             #  43    0xbba45  3      OPC=movq_r64_r64    
  movq 0x3083d9(%rip), %rsi   #  44    0xbba48  7      OPC=movq_r64_m64    
  movq 0x306e52(%rip), %r10   #  45    0xbba4f  7      OPC=movq_r64_m64    
  subq 0x3083a3(%rip), %r12   #  46    0xbba56  7      OPC=subq_r64_m64    
  xorl %r8d, %r8d             #  47    0xbba5d  3      OPC=xorl_r32_r32    
  subq 0x3083a1(%rip), %r11   #  48    0xbba60  7      OPC=subq_r64_m64    
  xorl %edx, %edx             #  49    0xbba67  2      OPC=xorl_r32_r32    
  movq %rcx, 0x8(%rsp)        #  50    0xbba69  5      OPC=movq_m64_r64    
  jmpq .L_bba8e               #  51    0xbba6e  2      OPC=jmpq_label      
.L_bba70:                     #        0xbba70  0      OPC=<label>         
  cmpb $0x0, 0xa(%rax)        #  52    0xbba70  4      OPC=cmpb_m8_imm8    
  jne .L_bbaab                #  53    0xbba74  2      OPC=jne_label       
  addq %r12, (%r10,%rdx,8)    #  54    0xbba76  4      OPC=addq_m64_r64    
  nop                         #  55    0xbba7a  1      OPC=nop             
  nop                         #  56    0xbba7b  1      OPC=nop             
  nop                         #  57    0xbba7c  1      OPC=nop             
  nop                         #  58    0xbba7d  1      OPC=nop             
  nop                         #  59    0xbba7e  1      OPC=nop             
  nop                         #  60    0xbba7f  1      OPC=nop             
.L_bba80:                     #        0xbba80  0      OPC=<label>         
  addq $0x1, %rdx             #  61    0xbba80  4      OPC=addq_r64_imm8   
  movzbl 0x8(%rax), %r8d      #  62    0xbba84  5      OPC=movzbl_r32_m8   
  cmpq %r9, %rdx              #  63    0xbba89  3      OPC=cmpq_r64_r64    
  je .L_bbabd                 #  64    0xbba8c  2      OPC=je_label        
.L_bba8e:                     #        0xbba8e  0      OPC=<label>         
  movzbl (%rsi,%rdx,1), %eax  #  65    0xbba8e  4      OPC=movzbl_r32_m8   
  shlq $0x4, %rax             #  66    0xbba92  4      OPC=shlq_r64_imm8   
  addq %rdi, %rax             #  67    0xbba96  3      OPC=addq_r64_r64    
  movzbl 0x8(%rax), %ecx      #  68    0xbba99  4      OPC=movzbl_r32_m8   
  movb %cl, (%rsi,%rdx,1)     #  69    0xbba9d  3      OPC=movb_m8_r8      
  cmpb $0x0, 0xb(%rax)        #  70    0xbbaa0  4      OPC=cmpb_m8_imm8    
  jne .L_bba80                #  71    0xbbaa4  2      OPC=jne_label       
  testl %r8d, %r8d            #  72    0xbbaa6  3      OPC=testl_r32_r32   
  jne .L_bba70                #  73    0xbbaa9  2      OPC=jne_label       
.L_bbaab:                     #        0xbbaab  0      OPC=<label>         
  addq %r11, (%r10,%rdx,8)    #  74    0xbbaab  4      OPC=addq_m64_r64    
  addq $0x1, %rdx             #  75    0xbbaaf  4      OPC=addq_r64_imm8   
  cmpq %r9, %rdx              #  76    0xbbab3  3      OPC=cmpq_r64_r64    
  movzbl 0x8(%rax), %r8d      #  77    0xbbab6  5      OPC=movzbl_r32_m8   
  jne .L_bba8e                #  78    0xbbabb  2      OPC=jne_label       
.L_bbabd:                     #        0xbbabd  0      OPC=<label>         
  movq 0x8(%rsp), %rcx        #  79    0xbbabd  5      OPC=movq_r64_m64    
.L_bbac2:                     #        0xbbac2  0      OPC=<label>         
  movq (%rsp), %rax           #  80    0xbbac2  4      OPC=movq_r64_m64    
  movq %r13, (%rdi)           #  81    0xbbac6  3      OPC=movq_m64_r64    
  addq %rcx, %rbx             #  82    0xbbac9  3      OPC=addq_r64_r64    
  movb $0x0, 0x9(%rdi)        #  83    0xbbacc  4      OPC=movb_m8_imm8    
  movb $0x0, 0x8(%rdi)        #  84    0xbbad0  4      OPC=movb_m8_imm8    
  movq 0x30aebd(%rip), %rsi   #  85    0xbbad4  7      OPC=movq_r64_m64    
  movq %r13, 0x308326(%rip)   #  86    0xbbadb  7      OPC=movq_m64_r64    
  negq %r13                   #  87    0xbbae2  3      OPC=negq_r64        
  movq %rax, 0x10(%rdi)       #  88    0xbbae5  4      OPC=movq_m64_r64    
  movq %rax, 0x308310(%rip)   #  89    0xbbae9  7      OPC=movq_m64_r64    
  movq 0x305369(%rip), %rax   #  90    0xbbaf0  7      OPC=movq_r64_m64    
  movb %bpl, 0x19(%rdi)       #  91    0xbbaf7  4      OPC=movb_m8_r8      
  movb $0x1, 0x18(%rdi)       #  92    0xbbafb  4      OPC=movb_m8_imm8    
  movq %r15, (%rax)           #  93    0xbbaff  3      OPC=movq_m64_r64    
  movq %r14, 0x8(%rax)        #  94    0xbbb02  4      OPC=movq_m64_r64    
  movq 0x30535b(%rip), %rax   #  95    0xbbb06  7      OPC=movq_r64_m64    
  movq %r13, (%rax)           #  96    0xbbb0d  3      OPC=movq_m64_r64    
.L_bbb10:                     #        0xbbb10  0      OPC=<label>         
  cmpb $0x0, (%rcx)           #  97    0xbbb10  3      OPC=cmpb_m8_imm8    
  movq %rcx, %rax             #  98    0xbbb13  3      OPC=movq_r64_r64    
  je .L_bbb3e                 #  99    0xbbb16  2      OPC=je_label        
  nop                         #  100   0xbbb18  1      OPC=nop             
  nop                         #  101   0xbbb19  1      OPC=nop             
  nop                         #  102   0xbbb1a  1      OPC=nop             
  nop                         #  103   0xbbb1b  1      OPC=nop             
  nop                         #  104   0xbbb1c  1      OPC=nop             
  nop                         #  105   0xbbb1d  1      OPC=nop             
  nop                         #  106   0xbbb1e  1      OPC=nop             
  nop                         #  107   0xbbb1f  1      OPC=nop             
.L_bbb20:                     #        0xbbb20  0      OPC=<label>         
  addq $0x1, %rax             #  108   0xbbb20  4      OPC=addq_r64_imm8   
  cmpb $0x0, (%rax)           #  109   0xbbb24  3      OPC=cmpb_m8_imm8    
  jne .L_bbb20                #  110   0xbbb27  2      OPC=jne_label       
  movq %rax, %rdx             #  111   0xbbb29  3      OPC=movq_r64_r64    
  subq %rcx, %rdx             #  112   0xbbb2c  3      OPC=subq_r64_r64    
  cmpq %rsi, %rdx             #  113   0xbbb2f  3      OPC=cmpq_r64_r64    
  jbe .L_bbb3e                #  114   0xbbb32  2      OPC=jbe_label       
  movq %rdx, 0x30ae5d(%rip)   #  115   0xbbb34  7      OPC=movq_m64_r64    
  movq %rdx, %rsi             #  116   0xbbb3b  3      OPC=movq_r64_r64    
.L_bbb3e:                     #        0xbbb3e  0      OPC=<label>         
  leaq 0x1(%rax), %rcx        #  117   0xbbb3e  4      OPC=leaq_r64_m16    
  cmpq %rbx, %rcx             #  118   0xbbb42  3      OPC=cmpq_r64_r64    
  jb .L_bbb10                 #  119   0xbbb45  2      OPC=jb_label        
  movq $0x0, 0x3082f6(%rip)   #  120   0xbbb47  11     OPC=movq_m64_imm32  
  movq $0x0, 0x3082e3(%rip)   #  121   0xbbb52  11     OPC=movq_m64_imm32  
  movq $0x0, 0x3082d0(%rip)   #  122   0xbbb5d  11     OPC=movq_m64_imm32  
.L_bbb68:                     #        0xbbb68  0      OPC=<label>         
  addq $0x28, %rsp            #  123   0xbbb68  4      OPC=addq_r64_imm8   
  popq %rbx                   #  124   0xbbb6c  1      OPC=popq_r64_1      
  popq %rbp                   #  125   0xbbb6d  1      OPC=popq_r64_1      
  popq %r12                   #  126   0xbbb6e  2      OPC=popq_r64_1      
  popq %r13                   #  127   0xbbb70  2      OPC=popq_r64_1      
  popq %r14                   #  128   0xbbb72  2      OPC=popq_r64_1      
  popq %r15                   #  129   0xbbb74  2      OPC=popq_r64_1      
  retq                        #  130   0xbbb76  1      OPC=retq            
.L_bbb77:                     #        0xbbb77  0      OPC=<label>         
  movl $0x0, 0x30ae1f(%rip)   #  131   0xbbb77  10     OPC=movl_m32_imm32  
  addq $0x28, %rsp            #  132   0xbbb81  4      OPC=addq_r64_imm8   
  popq %rbx                   #  133   0xbbb85  1      OPC=popq_r64_1      
  popq %rbp                   #  134   0xbbb86  1      OPC=popq_r64_1      
  popq %r12                   #  135   0xbbb87  2      OPC=popq_r64_1      
  popq %r13                   #  136   0xbbb89  2      OPC=popq_r64_1      
  popq %r14                   #  137   0xbbb8b  2      OPC=popq_r64_1      
  popq %r15                   #  138   0xbbb8d  2      OPC=popq_r64_1      
  retq                        #  139   0xbbb8f  1      OPC=retq            
                                                                           
.size __tzfile_default, .-__tzfile_default

