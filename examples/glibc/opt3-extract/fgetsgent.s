  .text
  .globl fgetsgent
  .type fgetsgent, @function

#! file-offset 0x10b7e0
#! rip-offset  0x10b7e0
#! capacity    480 bytes

# Text                               #  Line  RIP       Bytes  Opcode                
.fgetsgent:                          #        0x10b7e0  0      OPC=<label>           
  pushq %r15                         #  1     0x10b7e0  2      OPC=pushq_r64_1       
  pushq %r14                         #  2     0x10b7e2  2      OPC=pushq_r64_1       
  pushq %r13                         #  3     0x10b7e4  2      OPC=pushq_r64_1       
  pushq %r12                         #  4     0x10b7e6  2      OPC=pushq_r64_1       
  pushq %rbp                         #  5     0x10b7e8  1      OPC=pushq_r64_1       
  pushq %rbx                         #  6     0x10b7e9  1      OPC=pushq_r64_1       
  movq %rdi, %rbx                    #  7     0x10b7ea  3      OPC=movq_r64_r64      
  subq $0x38, %rsp                   #  8     0x10b7ed  4      OPC=subq_r64_imm8     
  leaq 0x20(%rsp), %rbp              #  9     0x10b7f1  5      OPC=leaq_r64_m16      
  movq %rbp, %rsi                    #  10    0x10b7f6  3      OPC=movq_r64_r64      
  callq ._IO_fgetpos64__GLIBC_2_2_5  #  11    0x10b7f9  5      OPC=callq_label       
  testl %eax, %eax                   #  12    0x10b7fe  2      OPC=testl_r32_r32     
  jne .L_10b982                      #  13    0x10b800  6      OPC=jne_label_1       
  movl $0x1, %esi                    #  14    0x10b806  5      OPC=movl_r32_imm32    
  cmpl $0x0, 0x2bb3ee(%rip)          #  15    0x10b80b  7      OPC=cmpl_m32_imm8     
  je .L_10b820                       #  16    0x10b812  2      OPC=je_label          
  lock                               #  17    0x10b814  1      OPC=lock              
  cmpxchgl %esi, 0x2b938c(%rip)      #  18    0x10b815  7      OPC=cmpxchgl_m32_r32  
  nop                                #  19    0x10b81c  1      OPC=nop               
  jne .L_10b829                      #  20    0x10b81d  2      OPC=jne_label         
  jmpq .L_10b843                     #  21    0x10b81f  2      OPC=jmpq_label        
.L_10b820:                           #        0x10b821  0      OPC=<label>           
  cmpxchgl %esi, 0x2b9381(%rip)      #  22    0x10b821  7      OPC=cmpxchgl_m32_r32  
  je .L_10b843                       #  23    0x10b828  2      OPC=je_label          
.L_10b829:                           #        0x10b82a  0      OPC=<label>           
  leaq 0x2b9378(%rip), %rdi          #  24    0x10b82a  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                   #  25    0x10b831  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private     #  26    0x10b838  5      OPC=callq_label       
  addq $0x80, %rsp                   #  27    0x10b83d  7      OPC=addq_r64_imm32    
.L_10b843:                           #        0x10b844  0      OPC=<label>           
  movq 0x2b70f6(%rip), %rdx          #  28    0x10b844  7      OPC=movq_r64_m64      
  testq %rdx, %rdx                   #  29    0x10b84b  3      OPC=testq_r64_r64     
  je .L_10b993                       #  30    0x10b84e  6      OPC=je_label_1        
.L_10b853:                           #        0x10b854  0      OPC=<label>           
  movq 0x2b5626(%rip), %r13          #  31    0x10b854  7      OPC=movq_r64_m64      
  leaq 0x18(%rsp), %r12              #  32    0x10b85b  5      OPC=leaq_r64_m16      
  jmpq .L_10b889                     #  33    0x10b860  2      OPC=jmpq_label        
  nop                                #  34    0x10b862  1      OPC=nop               
  nop                                #  35    0x10b863  1      OPC=nop               
  nop                                #  36    0x10b864  1      OPC=nop               
  nop                                #  37    0x10b865  1      OPC=nop               
  nop                                #  38    0x10b866  1      OPC=nop               
  nop                                #  39    0x10b867  1      OPC=nop               
  nop                                #  40    0x10b868  1      OPC=nop               
.L_10b868:                           #        0x10b869  0      OPC=<label>           
  movq %rbp, %rsi                    #  41    0x10b869  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                    #  42    0x10b86c  3      OPC=movq_r64_r64      
  movq %rax, 0x2b70cb(%rip)          #  43    0x10b86f  7      OPC=movq_m64_r64      
  callq ._IO_fsetpos64__GLIBC_2_2_5  #  44    0x10b876  5      OPC=callq_label       
  testl %eax, %eax                   #  45    0x10b87b  2      OPC=testl_r32_r32     
  jne .L_10b970                      #  46    0x10b87d  6      OPC=jne_label_1       
  movq 0x2b70b7(%rip), %rdx          #  47    0x10b883  7      OPC=movq_r64_m64      
.L_10b889:                           #        0x10b88a  0      OPC=<label>           
  testq %rdx, %rdx                   #  48    0x10b88a  3      OPC=testq_r64_r64     
  je .L_10b910                       #  49    0x10b88d  6      OPC=je_label_1        
  movq 0x2b9307(%rip), %rcx          #  50    0x10b893  7      OPC=movq_r64_m64      
  leaq 0x2b92e0(%rip), %rsi          #  51    0x10b89a  7      OPC=leaq_r64_m16      
  movq %r12, %r8                     #  52    0x10b8a1  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                    #  53    0x10b8a4  3      OPC=movq_r64_r64      
  callq .fgetsgent_r                 #  54    0x10b8a7  5      OPC=callq_label       
  cmpl $0x22, %eax                   #  55    0x10b8ac  3      OPC=cmpl_r32_imm8     
  jne .L_10b900                      #  56    0x10b8af  2      OPC=jne_label         
  movq 0x2b92e9(%rip), %rax          #  57    0x10b8b1  7      OPC=movq_r64_m64      
  movq 0x2b7082(%rip), %r14          #  58    0x10b8b8  7      OPC=movq_r64_m64      
  leaq 0x400(%rax), %rsi             #  59    0x10b8bf  7      OPC=leaq_r64_m16      
  movq %r14, %rdi                    #  60    0x10b8c6  3      OPC=movq_r64_r64      
  movq %rsi, 0x2b92d1(%rip)          #  61    0x10b8c9  7      OPC=movq_m64_r64      
  callq .__tls_get_addr_plt          #  62    0x10b8d0  5      OPC=callq_label       
  testq %rax, %rax                   #  63    0x10b8d5  3      OPC=testq_r64_r64     
  jne .L_10b868                      #  64    0x10b8d8  2      OPC=jne_label         
  movl (%r13), %r15d                 #  65    0x10b8da  4      OPC=movl_r32_m32      
  nop                                #  66    0x10b8de  1      OPC=nop               
  movq %r14, %rdi                    #  67    0x10b8df  3      OPC=movq_r64_r64      
  movq %rax, 0x8(%rsp)               #  68    0x10b8e2  5      OPC=movq_m64_r64      
  callq .L_1f8c0                     #  69    0x10b8e7  5      OPC=callq_label       
  movq 0x8(%rsp), %rax               #  70    0x10b8ec  5      OPC=movq_r64_m64      
  movl %r15d, (%r13)                 #  71    0x10b8f1  4      OPC=movl_m32_r32      
  nop                                #  72    0x10b8f5  1      OPC=nop               
  jmpq .L_10b868                     #  73    0x10b8f6  5      OPC=jmpq_label_1      
  nop                                #  74    0x10b8fb  1      OPC=nop               
  nop                                #  75    0x10b8fc  1      OPC=nop               
  nop                                #  76    0x10b8fd  1      OPC=nop               
  nop                                #  77    0x10b8fe  1      OPC=nop               
  nop                                #  78    0x10b8ff  1      OPC=nop               
  nop                                #  79    0x10b900  1      OPC=nop               
.L_10b900:                           #        0x10b901  0      OPC=<label>           
  cmpq $0x0, 0x2b7038(%rip)          #  80    0x10b901  8      OPC=cmpq_m64_imm8     
  jne .L_10b919                      #  81    0x10b909  2      OPC=jne_label         
  nop                                #  82    0x10b90b  1      OPC=nop               
  nop                                #  83    0x10b90c  1      OPC=nop               
  nop                                #  84    0x10b90d  1      OPC=nop               
  nop                                #  85    0x10b90e  1      OPC=nop               
  nop                                #  86    0x10b90f  1      OPC=nop               
  nop                                #  87    0x10b910  1      OPC=nop               
.L_10b910:                           #        0x10b911  0      OPC=<label>           
  movq $0x0, 0x18(%rsp)              #  88    0x10b911  9      OPC=movq_m64_imm32    
.L_10b919:                           #        0x10b91a  0      OPC=<label>           
  movl (%r13), %edx                  #  89    0x10b91a  4      OPC=movl_r32_m32      
  nop                                #  90    0x10b91e  1      OPC=nop               
  cmpl $0x0, 0x2bb2db(%rip)          #  91    0x10b91f  7      OPC=cmpl_m32_imm8     
  je .L_10b932                       #  92    0x10b926  2      OPC=je_label          
  lock                               #  93    0x10b928  1      OPC=lock              
  decl 0x2b927a(%rip)                #  94    0x10b929  6      OPC=decl_m32          
  nop                                #  95    0x10b92f  1      OPC=nop               
  jne .L_10b93a                      #  96    0x10b930  2      OPC=jne_label         
  jmpq .L_10b954                     #  97    0x10b932  2      OPC=jmpq_label        
.L_10b932:                           #        0x10b934  0      OPC=<label>           
  decl 0x2b9270(%rip)                #  98    0x10b934  6      OPC=decl_m32          
  je .L_10b954                       #  99    0x10b93a  2      OPC=je_label          
.L_10b93a:                           #        0x10b93c  0      OPC=<label>           
  leaq 0x2b9267(%rip), %rdi          #  100   0x10b93c  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                   #  101   0x10b943  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private   #  102   0x10b94a  5      OPC=callq_label       
  addq $0x80, %rsp                   #  103   0x10b94f  7      OPC=addq_r64_imm32    
.L_10b954:                           #        0x10b956  0      OPC=<label>           
  movl %edx, (%r13)                  #  104   0x10b956  4      OPC=movl_m32_r32      
  nop                                #  105   0x10b95a  1      OPC=nop               
  movq 0x18(%rsp), %rax              #  106   0x10b95b  5      OPC=movq_r64_m64      
  addq $0x38, %rsp                   #  107   0x10b960  4      OPC=addq_r64_imm8     
  popq %rbx                          #  108   0x10b964  1      OPC=popq_r64_1        
  popq %rbp                          #  109   0x10b965  1      OPC=popq_r64_1        
  popq %r12                          #  110   0x10b966  2      OPC=popq_r64_1        
  popq %r13                          #  111   0x10b968  2      OPC=popq_r64_1        
  popq %r14                          #  112   0x10b96a  2      OPC=popq_r64_1        
  popq %r15                          #  113   0x10b96c  2      OPC=popq_r64_1        
  retq                               #  114   0x10b96e  1      OPC=retq              
  nop                                #  115   0x10b96f  1      OPC=nop               
  nop                                #  116   0x10b970  1      OPC=nop               
  nop                                #  117   0x10b971  1      OPC=nop               
.L_10b970:                           #        0x10b972  0      OPC=<label>           
  movq $0x0, 0x2b6fc5(%rip)          #  118   0x10b972  11     OPC=movq_m64_imm32    
  xorl %edx, %edx                    #  119   0x10b97d  2      OPC=xorl_r32_r32      
  jmpq .L_10b889                     #  120   0x10b97f  5      OPC=jmpq_label_1      
.L_10b982:                           #        0x10b984  0      OPC=<label>           
  addq $0x38, %rsp                   #  121   0x10b984  4      OPC=addq_r64_imm8     
  xorl %eax, %eax                    #  122   0x10b988  2      OPC=xorl_r32_r32      
  popq %rbx                          #  123   0x10b98a  1      OPC=popq_r64_1        
  popq %rbp                          #  124   0x10b98b  1      OPC=popq_r64_1        
  popq %r12                          #  125   0x10b98c  2      OPC=popq_r64_1        
  popq %r13                          #  126   0x10b98e  2      OPC=popq_r64_1        
  popq %r14                          #  127   0x10b990  2      OPC=popq_r64_1        
  popq %r15                          #  128   0x10b992  2      OPC=popq_r64_1        
  retq                               #  129   0x10b994  1      OPC=retq              
.L_10b993:                           #        0x10b995  0      OPC=<label>           
  movl $0x400, %edi                  #  130   0x10b995  5      OPC=movl_r32_imm32    
  movq $0x400, 0x2b91fd(%rip)        #  131   0x10b99a  11     OPC=movq_m64_imm32    
  callq .memalign_plt                #  132   0x10b9a5  5      OPC=callq_label       
  movq %rax, 0x2b6f91(%rip)          #  133   0x10b9aa  7      OPC=movq_m64_r64      
  movq %rax, %rdx                    #  134   0x10b9b1  3      OPC=movq_r64_r64      
  jmpq .L_10b853                     #  135   0x10b9b4  5      OPC=jmpq_label_1      
  nop                                #  136   0x10b9b9  1      OPC=nop               
  nop                                #  137   0x10b9ba  1      OPC=nop               
  nop                                #  138   0x10b9bb  1      OPC=nop               
  nop                                #  139   0x10b9bc  1      OPC=nop               
  nop                                #  140   0x10b9bd  1      OPC=nop               
  nop                                #  141   0x10b9be  1      OPC=nop               
  nop                                #  142   0x10b9bf  1      OPC=nop               
  nop                                #  143   0x10b9c0  1      OPC=nop               
  nop                                #  144   0x10b9c1  1      OPC=nop               
                                                                                     
.size fgetsgent, .-fgetsgent

