  .text
  .globl __vsyslog_chk
  .type __vsyslog_chk, @function

#! file-offset 0xfed40
#! rip-offset  0xfed40
#! capacity    1440 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
.__vsyslog_chk:                     #        0xfed40  0      OPC=<label>           
  pushq %r15                        #  1     0xfed40  2      OPC=pushq_r64_1       
  pushq %r14                        #  2     0xfed42  2      OPC=pushq_r64_1       
  movl %edi, %r15d                  #  3     0xfed44  3      OPC=movl_r32_r32      
  pushq %r13                        #  4     0xfed47  2      OPC=pushq_r64_1       
  pushq %r12                        #  5     0xfed49  2      OPC=pushq_r64_1       
  movq %rdx, %r13                   #  6     0xfed4b  3      OPC=movq_r64_r64      
  pushq %rbp                        #  7     0xfed4e  1      OPC=pushq_r64_1       
  pushq %rbx                        #  8     0xfed4f  1      OPC=pushq_r64_1       
  movl %esi, %ebp                   #  9     0xfed50  2      OPC=movl_r32_r32      
  movq %rcx, %r14                   #  10    0xfed52  3      OPC=movq_r64_r64      
  subq $0xa8, %rsp                  #  11    0xfed55  7      OPC=subq_r64_imm32    
  movq 0x2c211d(%rip), %rax         #  12    0xfed5c  7      OPC=movq_r64_m64      
  testl $0xfffffc00, %edi           #  13    0xfed63  6      OPC=testl_r32_imm32   
  movq $0x0, 0x10(%rsp)             #  14    0xfed69  9      OPC=movq_m64_imm32    
  movq $0x0, 0x18(%rsp)             #  15    0xfed72  9      OPC=movq_m64_imm32    
  movl (%rax), %r12d                #  16    0xfed7b  3      OPC=movl_r32_m32      
  nop                               #  17    0xfed7e  1      OPC=nop               
  jne .L_ff010                      #  18    0xfed7f  6      OPC=jne_label_1       
.L_fed85:                           #        0xfed85  0      OPC=<label>           
  movl 0x2c2525(%rip), %edx         #  19    0xfed85  6      OPC=movl_r32_m32      
  movl %r15d, %eax                  #  20    0xfed8b  3      OPC=movl_r32_r32      
  andl $0x7, %eax                   #  21    0xfed8e  3      OPC=andl_r32_imm8     
  btl %eax, %edx                    #  22    0xfed91  3      OPC=btl_r32_r32       
  jae .L_feffe                      #  23    0xfed94  6      OPC=jae_label_1       
  movl 0x2c2514(%rip), %eax         #  24    0xfed9a  6      OPC=movl_r32_m32      
  leaq 0x18(%rsp), %rsi             #  25    0xfeda0  5      OPC=leaq_r64_m16      
  leaq 0x10(%rsp), %rdi             #  26    0xfeda5  5      OPC=leaq_r64_m16      
  orl %r15d, %eax                   #  27    0xfedaa  3      OPC=orl_r32_r32       
  testl $0x3f8, %r15d               #  28    0xfedad  7      OPC=testl_r32_imm32   
  cmovel %eax, %r15d                #  29    0xfedb4  4      OPC=cmovel_r32_r32    
  callq .open_memstream             #  30    0xfedb8  5      OPC=callq_label       
  testq %rax, %rax                  #  31    0xfedbd  3      OPC=testq_r64_r64     
  movq %rax, %rbx                   #  32    0xfedc0  3      OPC=movq_r64_r64      
  je .L_ff038                       #  33    0xfedc3  6      OPC=je_label_1        
  orl $0x8000, (%rax)               #  34    0xfedc9  6      OPC=orl_m32_imm32     
  movl %r15d, %edx                  #  35    0xfedcf  3      OPC=movl_r32_r32      
  leaq 0x8d786(%rip), %rsi          #  36    0xfedd2  7      OPC=leaq_r64_m16      
  leaq 0x8(%rsp), %r15              #  37    0xfedd9  5      OPC=leaq_r64_m16      
  movq %rax, %rdi                   #  38    0xfedde  3      OPC=movq_r64_r64      
  xorl %eax, %eax                   #  39    0xfede1  2      OPC=xorl_r32_r32      
  callq .fprintf                    #  40    0xfede3  5      OPC=callq_label       
  movq %r15, %rdi                   #  41    0xfede8  3      OPC=movq_r64_r64      
  callq .L_1f8d0                    #  42    0xfedeb  5      OPC=callq_label       
  leaq 0x60(%rsp), %rsi             #  43    0xfedf0  5      OPC=leaq_r64_m16      
  movq %r15, %rdi                   #  44    0xfedf5  3      OPC=movq_r64_r64      
  callq .localtime_r                #  45    0xfedf8  5      OPC=callq_label       
  movq 0x28(%rbx), %rdi             #  46    0xfedfd  4      OPC=movq_r64_m64      
  movq 0x30(%rbx), %rsi             #  47    0xfee01  4      OPC=movq_r64_m64      
  leaq 0x2c0eb4(%rip), %r8          #  48    0xfee05  7      OPC=leaq_r64_m16      
  leaq 0x8d751(%rip), %rdx          #  49    0xfee0c  7      OPC=leaq_r64_m16      
  movq %rax, %rcx                   #  50    0xfee13  3      OPC=movq_r64_r64      
  subq %rdi, %rsi                   #  51    0xfee16  3      OPC=subq_r64_r64      
  callq .__strftime_l               #  52    0xfee19  5      OPC=callq_label       
  addq %rax, 0x28(%rbx)             #  53    0xfee1e  4      OPC=addq_m64_r64      
  movq %rbx, %rdi                   #  54    0xfee22  3      OPC=movq_r64_r64      
  callq ._IO_ftell                  #  55    0xfee25  5      OPC=callq_label       
  movq 0x2c56c7(%rip), %rdi         #  56    0xfee2a  7      OPC=movq_r64_m64      
  movq %rax, %r15                   #  57    0xfee31  3      OPC=movq_r64_r64      
  testq %rdi, %rdi                  #  58    0xfee34  3      OPC=testq_r64_r64     
  je .L_ff188                       #  59    0xfee37  6      OPC=je_label_1        
.L_fee3d:                           #        0xfee3d  0      OPC=<label>           
  movq %rbx, %rsi                   #  60    0xfee3d  3      OPC=movq_r64_r64      
  callq .fputs_unlocked             #  61    0xfee40  5      OPC=callq_label       
  testb $0x1, 0x2c56b4(%rip)        #  62    0xfee45  7      OPC=testb_m8_imm8     
  jne .L_ff1b0                      #  63    0xfee4c  6      OPC=jne_label_1       
.L_fee52:                           #        0xfee52  0      OPC=<label>           
  cmpq $0x0, 0x2c569e(%rip)         #  64    0xfee52  8      OPC=cmpq_m64_imm8     
  je .L_fee8e                       #  65    0xfee5a  2      OPC=je_label          
  movq 0x28(%rbx), %rax             #  66    0xfee5c  4      OPC=movq_r64_m64      
  cmpq 0x30(%rbx), %rax             #  67    0xfee60  4      OPC=cmpq_r64_m64      
  jae .L_ff298                      #  68    0xfee64  6      OPC=jae_label_1       
  leaq 0x1(%rax), %rdx              #  69    0xfee6a  4      OPC=leaq_r64_m16      
  movq %rdx, 0x28(%rbx)             #  70    0xfee6e  4      OPC=movq_m64_r64      
  movb $0x3a, (%rax)                #  71    0xfee72  3      OPC=movb_m8_imm8      
.L_fee75:                           #        0xfee75  0      OPC=<label>           
  movq 0x28(%rbx), %rax             #  72    0xfee75  4      OPC=movq_r64_m64      
  cmpq 0x30(%rbx), %rax             #  73    0xfee79  4      OPC=cmpq_r64_m64      
  jae .L_ff280                      #  74    0xfee7d  6      OPC=jae_label_1       
  leaq 0x1(%rax), %rdx              #  75    0xfee83  4      OPC=leaq_r64_m16      
  movq %rdx, 0x28(%rbx)             #  76    0xfee87  4      OPC=movq_m64_r64      
  movb $0x20, (%rax)                #  77    0xfee8b  3      OPC=movb_m8_imm8      
.L_fee8e:                           #        0xfee8e  0      OPC=<label>           
  movq 0x2c1feb(%rip), %rax         #  78    0xfee8e  7      OPC=movq_r64_m64      
  cmpl $0xffffffff, %ebp            #  79    0xfee95  6      OPC=cmpl_r32_imm32    
  nop                               #  80    0xfee9b  1      OPC=nop               
  nop                               #  81    0xfee9c  1      OPC=nop               
  nop                               #  82    0xfee9d  1      OPC=nop               
  movl %r12d, (%rax)                #  83    0xfee9e  3      OPC=movl_m32_r32      
  nop                               #  84    0xfeea1  1      OPC=nop               
  je .L_ff170                       #  85    0xfeea2  6      OPC=je_label_1        
  movq %r14, %rcx                   #  86    0xfeea8  3      OPC=movq_r64_r64      
  movq %r13, %rdx                   #  87    0xfeeab  3      OPC=movq_r64_r64      
  movl %ebp, %esi                   #  88    0xfeeae  2      OPC=movl_r32_r32      
  movq %rbx, %rdi                   #  89    0xfeeb0  3      OPC=movq_r64_r64      
  callq .__vfprintf_chk             #  90    0xfeeb3  5      OPC=callq_label       
.L_feeb2:                           #        0xfeeb8  0      OPC=<label>           
  movq %rbx, %rdi                   #  91    0xfeeb8  3      OPC=movq_r64_r64      
  callq ._IO_fclose__GLIBC_2_2_5    #  92    0xfeebb  5      OPC=callq_label       
  movq 0x10(%rsp), %rax             #  93    0xfeec0  5      OPC=movq_r64_m64      
.L_feebf:                           #        0xfeec5  0      OPC=<label>           
  testb $0x20, 0x2c563a(%rip)       #  94    0xfeec5  7      OPC=testb_m8_imm8     
  je .L_fef29                       #  95    0xfeecc  2      OPC=je_label          
  movq 0x18(%rsp), %rcx             #  96    0xfeece  5      OPC=movq_r64_m64      
  leaq (%rax,%r15,1), %rdx          #  97    0xfeed3  4      OPC=leaq_r64_m16      
  movq %rdx, 0x40(%rsp)             #  98    0xfeed7  5      OPC=movq_m64_r64      
  movq %rcx, %rdx                   #  99    0xfeedc  3      OPC=movq_r64_r64      
  subq %r15, %rdx                   #  100   0xfeedf  3      OPC=subq_r64_r64      
  movq %rdx, 0x48(%rsp)             #  101   0xfeee2  5      OPC=movq_m64_r64      
  cmpb $0xa, -0x1(%rax,%rcx,1)      #  102   0xfeee7  5      OPC=cmpb_m8_imm8      
  movl $0x1, %edx                   #  103   0xfeeec  5      OPC=movl_r32_imm32    
  je .L_fef04                       #  104   0xfeef1  2      OPC=je_label          
  leaq 0x8b155(%rip), %rbx          #  105   0xfeef3  7      OPC=leaq_r64_m16      
  movq $0x1, 0x58(%rsp)             #  106   0xfeefa  9      OPC=movq_m64_imm32    
  movb $0x2, %dl                    #  107   0xfef03  2      OPC=movb_r8_imm8      
  movq %rbx, 0x50(%rsp)             #  108   0xfef05  5      OPC=movq_m64_r64      
.L_fef04:                           #        0xfef0a  0      OPC=<label>           
  leaq 0x20(%rsp), %rcx             #  109   0xfef0a  5      OPC=leaq_r64_m16      
  leaq 0x40(%rsp), %rsi             #  110   0xfef0f  5      OPC=leaq_r64_m16      
  movl $0x0, %ebx                   #  111   0xfef14  5      OPC=movl_r32_imm32    
  movl $0x2, %edi                   #  112   0xfef19  5      OPC=movl_r32_imm32    
  cmpq %rcx, %rax                   #  113   0xfef1e  3      OPC=cmpq_r64_r64      
  cmovneq %rax, %rbx                #  114   0xfef21  4      OPC=cmovneq_r64_r64   
  callq .writev                     #  115   0xfef25  5      OPC=callq_label       
  movq 0x10(%rsp), %rax             #  116   0xfef2a  5      OPC=movq_r64_m64      
.L_fef29:                           #        0xfef2f  0      OPC=<label>           
  movq %rax, 0x40(%rsp)             #  117   0xfef2f  5      OPC=movq_m64_r64      
  movq $0x0, 0x48(%rsp)             #  118   0xfef34  9      OPC=movq_m64_imm32    
  movl $0x1, %esi                   #  119   0xfef3d  5      OPC=movl_r32_imm32    
  xorl %eax, %eax                   #  120   0xfef42  2      OPC=xorl_r32_r32      
  cmpl $0x0, 0x2c7cbb(%rip)         #  121   0xfef44  7      OPC=cmpl_m32_imm8     
  je .L_fef53                       #  122   0xfef4b  2      OPC=je_label          
  lock                              #  123   0xfef4d  1      OPC=lock              
  cmpxchgl %esi, 0x2c55a1(%rip)     #  124   0xfef4e  7      OPC=cmpxchgl_m32_r32  
  nop                               #  125   0xfef55  1      OPC=nop               
  jne .L_fef5c                      #  126   0xfef56  2      OPC=jne_label         
  jmpq .L_fef76                     #  127   0xfef58  2      OPC=jmpq_label        
.L_fef53:                           #        0xfef5a  0      OPC=<label>           
  cmpxchgl %esi, 0x2c5596(%rip)     #  128   0xfef5a  7      OPC=cmpxchgl_m32_r32  
  je .L_fef76                       #  129   0xfef61  2      OPC=je_label          
.L_fef5c:                           #        0xfef63  0      OPC=<label>           
  leaq 0x2c558d(%rip), %rdi         #  130   0xfef63  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  131   0xfef6a  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  132   0xfef71  5      OPC=callq_label       
  addq $0x80, %rsp                  #  133   0xfef76  7      OPC=addq_r64_imm32    
.L_fef76:                           #        0xfef7d  0      OPC=<label>           
  movl 0x2c5588(%rip), %eax         #  134   0xfef7d  6      OPC=movl_r32_m32      
  testl %eax, %eax                  #  135   0xfef83  2      OPC=testl_r32_r32     
  je .L_ff0e0                       #  136   0xfef85  6      OPC=je_label_1        
  cmpl $0x1, 0x2c2331(%rip)         #  137   0xfef8b  7      OPC=cmpl_m32_imm8     
  je .L_ff160                       #  138   0xfef92  6      OPC=je_label_1        
.L_fef91:                           #        0xfef98  0      OPC=<label>           
  movq 0x18(%rsp), %rdx             #  139   0xfef98  5      OPC=movq_r64_m64      
  movq 0x10(%rsp), %rsi             #  140   0xfef9d  5      OPC=movq_r64_m64      
  movl $0x4000, %ecx                #  141   0xfefa2  5      OPC=movl_r32_imm32    
  movl 0x2c2312(%rip), %edi         #  142   0xfefa7  6      OPC=movl_r32_m32      
  callq .__send                     #  143   0xfefad  5      OPC=callq_label       
  testq %rax, %rax                  #  144   0xfefb2  3      OPC=testq_r64_r64     
  js .L_ff1d0                       #  145   0xfefb5  6      OPC=js_label_1        
.L_fefb4:                           #        0xfefbb  0      OPC=<label>           
  cmpl $0x0, 0x2c7c45(%rip)         #  146   0xfefbb  7      OPC=cmpl_m32_imm8     
  je .L_fefc8                       #  147   0xfefc2  2      OPC=je_label          
  lock                              #  148   0xfefc4  1      OPC=lock              
  decl 0x2c552c(%rip)               #  149   0xfefc5  6      OPC=decl_m32          
  nop                               #  150   0xfefcb  1      OPC=nop               
  jne .L_fefd0                      #  151   0xfefcc  2      OPC=jne_label         
  jmpq .L_fefea                     #  152   0xfefce  2      OPC=jmpq_label        
.L_fefc8:                           #        0xfefd0  0      OPC=<label>           
  decl 0x2c5522(%rip)               #  153   0xfefd0  6      OPC=decl_m32          
  je .L_fefea                       #  154   0xfefd6  2      OPC=je_label          
.L_fefd0:                           #        0xfefd8  0      OPC=<label>           
  leaq 0x2c5519(%rip), %rdi         #  155   0xfefd8  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  156   0xfefdf  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  157   0xfefe6  5      OPC=callq_label       
  addq $0x80, %rsp                  #  158   0xfefeb  7      OPC=addq_r64_imm32    
.L_fefea:                           #        0xfeff2  0      OPC=<label>           
  movq 0x10(%rsp), %rdi             #  159   0xfeff2  5      OPC=movq_r64_m64      
  leaq 0x20(%rsp), %rax             #  160   0xfeff7  5      OPC=leaq_r64_m16      
  cmpq %rax, %rdi                   #  161   0xfeffc  3      OPC=cmpq_r64_r64      
  je .L_feffe                       #  162   0xfefff  2      OPC=je_label          
  callq .L_1f8c0                    #  163   0xff001  5      OPC=callq_label       
.L_feffe:                           #        0xff006  0      OPC=<label>           
  addq $0xa8, %rsp                  #  164   0xff006  7      OPC=addq_r64_imm32    
  popq %rbx                         #  165   0xff00d  1      OPC=popq_r64_1        
  popq %rbp                         #  166   0xff00e  1      OPC=popq_r64_1        
  popq %r12                         #  167   0xff00f  2      OPC=popq_r64_1        
  popq %r13                         #  168   0xff011  2      OPC=popq_r64_1        
  popq %r14                         #  169   0xff013  2      OPC=popq_r64_1        
  popq %r15                         #  170   0xff015  2      OPC=popq_r64_1        
  retq                              #  171   0xff017  1      OPC=retq              
.L_ff010:                           #        0xff018  0      OPC=<label>           
  leaq 0x910e1(%rip), %rsi          #  172   0xff018  7      OPC=leaq_r64_m16      
  movl %edi, %edx                   #  173   0xff01f  2      OPC=movl_r32_r32      
  xorl %eax, %eax                   #  174   0xff021  2      OPC=xorl_r32_r32      
  movl $0x23, %edi                  #  175   0xff023  5      OPC=movl_r32_imm32    
  andl $0x3ff, %r15d                #  176   0xff028  7      OPC=andl_r32_imm32    
  callq .syslog                     #  177   0xff02f  5      OPC=callq_label       
  jmpq .L_fed85                     #  178   0xff034  5      OPC=jmpq_label_1      
  nop                               #  179   0xff039  1      OPC=nop               
  nop                               #  180   0xff03a  1      OPC=nop               
  nop                               #  181   0xff03b  1      OPC=nop               
  nop                               #  182   0xff03c  1      OPC=nop               
  nop                               #  183   0xff03d  1      OPC=nop               
  nop                               #  184   0xff03e  1      OPC=nop               
  nop                               #  185   0xff03f  1      OPC=nop               
.L_ff038:                           #        0xff040  0      OPC=<label>           
  movq $0x6d20666f2074756f, %rax    #  186   0xff040  10     OPC=movq_r64_imm64    
  leaq 0x60(%rsp), %rbp             #  187   0xff04a  5      OPC=leaq_r64_m16      
  movq %rax, 0x20(%rsp)             #  188   0xff04f  5      OPC=movq_m64_r64      
  movq $0x5b2079726f6d65, %rax      #  189   0xff054  10     OPC=movq_r64_imm64    
  movq %rax, 0x28(%rsp)             #  190   0xff05e  5      OPC=movq_m64_r64      
  callq .__getpid                   #  191   0xff063  5      OPC=callq_label       
  leaq 0xc(%rbp), %rsi              #  192   0xff068  4      OPC=leaq_r64_m16      
  movl %eax, %ecx                   #  193   0xff06c  2      OPC=movl_r32_r32      
  movl $0x66666667, %edi            #  194   0xff06e  5      OPC=movl_r32_imm32    
  nop                               #  195   0xff073  1      OPC=nop               
  nop                               #  196   0xff074  1      OPC=nop               
  nop                               #  197   0xff075  1      OPC=nop               
  nop                               #  198   0xff076  1      OPC=nop               
  nop                               #  199   0xff077  1      OPC=nop               
.L_ff070:                           #        0xff078  0      OPC=<label>           
  movl %ecx, %eax                   #  200   0xff078  2      OPC=movl_r32_r32      
  subq $0x1, %rsi                   #  201   0xff07a  4      OPC=subq_r64_imm8     
  imull %edi                        #  202   0xff07e  2      OPC=imull_r32         
  movl %ecx, %eax                   #  203   0xff080  2      OPC=movl_r32_r32      
  sarl $0x1f, %eax                  #  204   0xff082  3      OPC=sarl_r32_imm8     
  sarl $0x2, %edx                   #  205   0xff085  3      OPC=sarl_r32_imm8     
  subl %eax, %edx                   #  206   0xff088  2      OPC=subl_r32_r32      
  leal (%rdx,%rdx,4), %eax          #  207   0xff08a  3      OPC=leal_r32_m16      
  addl %eax, %eax                   #  208   0xff08d  2      OPC=addl_r32_r32      
  subl %eax, %ecx                   #  209   0xff08f  2      OPC=subl_r32_r32      
  addl $0x30, %ecx                  #  210   0xff091  3      OPC=addl_r32_imm8     
  testl %edx, %edx                  #  211   0xff094  2      OPC=testl_r32_r32     
  movb %cl, (%rsi)                  #  212   0xff096  2      OPC=movb_m8_r8        
  movl %edx, %ecx                   #  213   0xff098  2      OPC=movl_r32_r32      
  jne .L_ff070                      #  214   0xff09a  2      OPC=jne_label         
  leaq 0xc(%rbp), %rax              #  215   0xff09c  4      OPC=leaq_r64_m16      
  leaq 0x2f(%rsp), %rdi             #  216   0xff0a0  5      OPC=leaq_r64_m16      
  leaq 0x20(%rsp), %rbx             #  217   0xff0a5  5      OPC=leaq_r64_m16      
  xorl %r15d, %r15d                 #  218   0xff0aa  3      OPC=xorl_r32_r32      
  subq %rsi, %rax                   #  219   0xff0ad  3      OPC=subq_r64_r64      
  movq %rax, %rbp                   #  220   0xff0b0  3      OPC=movq_r64_r64      
  movq %rax, %rdx                   #  221   0xff0b3  3      OPC=movq_r64_r64      
  callq .__GI_memcpy                #  222   0xff0b6  5      OPC=callq_label       
  addq %rbp, %rax                   #  223   0xff0bb  3      OPC=addq_r64_r64      
  movq %rbx, 0x10(%rsp)             #  224   0xff0be  5      OPC=movq_m64_r64      
  movb $0x5d, (%rax)                #  225   0xff0c3  3      OPC=movb_m8_imm8      
  movb $0x0, 0x1(%rax)              #  226   0xff0c6  4      OPC=movb_m8_imm8      
  addq $0x1, %rax                   #  227   0xff0ca  4      OPC=addq_r64_imm8     
  subq %rbx, %rax                   #  228   0xff0ce  3      OPC=subq_r64_r64      
  movq %rax, 0x18(%rsp)             #  229   0xff0d1  5      OPC=movq_m64_r64      
  movq %rbx, %rax                   #  230   0xff0d6  3      OPC=movq_r64_r64      
  jmpq .L_feebf                     #  231   0xff0d9  5      OPC=jmpq_label_1      
  nop                               #  232   0xff0de  1      OPC=nop               
  nop                               #  233   0xff0df  1      OPC=nop               
  nop                               #  234   0xff0e0  1      OPC=nop               
  nop                               #  235   0xff0e1  1      OPC=nop               
  nop                               #  236   0xff0e2  1      OPC=nop               
  nop                               #  237   0xff0e3  1      OPC=nop               
  nop                               #  238   0xff0e4  1      OPC=nop               
  nop                               #  239   0xff0e5  1      OPC=nop               
  nop                               #  240   0xff0e6  1      OPC=nop               
  nop                               #  241   0xff0e7  1      OPC=nop               
.L_ff0e0:                           #        0xff0e8  0      OPC=<label>           
  movl 0x2c541a(%rip), %esi         #  242   0xff0e8  6      OPC=movl_r32_m32      
  movq 0x2c540b(%rip), %rdi         #  243   0xff0ee  7      OPC=movq_r64_m64      
  xorl %edx, %edx                   #  244   0xff0f5  2      OPC=xorl_r32_r32      
  orl $0x8, %esi                    #  245   0xff0f7  3      OPC=orl_r32_imm8      
  callq .openlog_internal           #  246   0xff0fa  5      OPC=callq_label       
  cmpl $0x1, 0x2c21be(%rip)         #  247   0xff0ff  7      OPC=cmpl_m32_imm8     
  movl 0x2c5400(%rip), %eax         #  248   0xff106  6      OPC=movl_r32_m32      
  je .L_ff160                       #  249   0xff10c  2      OPC=je_label          
.L_ff106:                           #        0xff10e  0      OPC=<label>           
  testl %eax, %eax                  #  250   0xff10e  2      OPC=testl_r32_r32     
  jne .L_fef91                      #  251   0xff110  6      OPC=jne_label_1       
.L_ff10e:                           #        0xff116  0      OPC=<label>           
  testb $0x2, 0x2c53eb(%rip)        #  252   0xff116  7      OPC=testb_m8_imm8     
  je .L_fefb4                       #  253   0xff11d  6      OPC=je_label_1        
  leaq 0x8d451(%rip), %rdi          #  254   0xff123  7      OPC=leaq_r64_m16      
  xorl %edx, %edx                   #  255   0xff12a  2      OPC=xorl_r32_r32      
  movl $0x101, %esi                 #  256   0xff12c  5      OPC=movl_r32_imm32    
  xorl %eax, %eax                   #  257   0xff131  2      OPC=xorl_r32_r32      
  callq .__open                     #  258   0xff133  5      OPC=callq_label       
  testl %eax, %eax                  #  259   0xff138  2      OPC=testl_r32_r32     
  movl %eax, %ebx                   #  260   0xff13a  2      OPC=movl_r32_r32      
  js .L_fefb4                       #  261   0xff13c  6      OPC=js_label_1        
  movq %r15, %rdx                   #  262   0xff142  3      OPC=movq_r64_r64      
  addq 0x10(%rsp), %rdx             #  263   0xff145  5      OPC=addq_r64_m64      
  leaq 0x8d437(%rip), %rsi          #  264   0xff14a  7      OPC=leaq_r64_m16      
  movl %eax, %edi                   #  265   0xff151  2      OPC=movl_r32_r32      
  xorl %eax, %eax                   #  266   0xff153  2      OPC=xorl_r32_r32      
  callq .dprintf                    #  267   0xff155  5      OPC=callq_label       
  movl %ebx, %edi                   #  268   0xff15a  2      OPC=movl_r32_r32      
  callq .__close                    #  269   0xff15c  5      OPC=callq_label       
  jmpq .L_fefb4                     #  270   0xff161  5      OPC=jmpq_label_1      
  xchgw %ax, %ax                    #  271   0xff166  2      OPC=xchgw_ax_r16      
.L_ff160:                           #        0xff168  0      OPC=<label>           
  addq $0x1, 0x18(%rsp)             #  272   0xff168  6      OPC=addq_m64_imm8     
  jmpq .L_ff106                     #  273   0xff16e  2      OPC=jmpq_label        
  nop                               #  274   0xff170  1      OPC=nop               
  nop                               #  275   0xff171  1      OPC=nop               
  nop                               #  276   0xff172  1      OPC=nop               
  nop                               #  277   0xff173  1      OPC=nop               
  nop                               #  278   0xff174  1      OPC=nop               
  nop                               #  279   0xff175  1      OPC=nop               
  nop                               #  280   0xff176  1      OPC=nop               
  nop                               #  281   0xff177  1      OPC=nop               
.L_ff170:                           #        0xff178  0      OPC=<label>           
  movq %r14, %rdx                   #  282   0xff178  3      OPC=movq_r64_r64      
  movq %r13, %rsi                   #  283   0xff17b  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                   #  284   0xff17e  3      OPC=movq_r64_r64      
  callq ._IO_vfprintf               #  285   0xff181  5      OPC=callq_label       
  jmpq .L_feeb2                     #  286   0xff186  5      OPC=jmpq_label_1      
  nop                               #  287   0xff18b  1      OPC=nop               
  nop                               #  288   0xff18c  1      OPC=nop               
  nop                               #  289   0xff18d  1      OPC=nop               
  nop                               #  290   0xff18e  1      OPC=nop               
  nop                               #  291   0xff18f  1      OPC=nop               
.L_ff188:                           #        0xff190  0      OPC=<label>           
  movq 0x2c1c81(%rip), %rax         #  292   0xff190  7      OPC=movq_r64_m64      
  movq (%rax), %rdi                 #  293   0xff197  3      OPC=movq_r64_m64      
  testq %rdi, %rdi                  #  294   0xff19a  3      OPC=testq_r64_r64     
  movq %rdi, 0x2c535c(%rip)         #  295   0xff19d  7      OPC=movq_m64_r64      
  jne .L_fee3d                      #  296   0xff1a4  6      OPC=jne_label_1       
  testb $0x1, 0x2c5357(%rip)        #  297   0xff1aa  7      OPC=testb_m8_imm8     
  je .L_fee8e                       #  298   0xff1b1  6      OPC=je_label_1        
  nop                               #  299   0xff1b7  1      OPC=nop               
.L_ff1b0:                           #        0xff1b8  0      OPC=<label>           
  callq .__getpid                   #  300   0xff1b8  5      OPC=callq_label       
  leaq 0x8d3b2(%rip), %rsi          #  301   0xff1bd  7      OPC=leaq_r64_m16      
  movl %eax, %edx                   #  302   0xff1c4  2      OPC=movl_r32_r32      
  movq %rbx, %rdi                   #  303   0xff1c6  3      OPC=movq_r64_r64      
  xorl %eax, %eax                   #  304   0xff1c9  2      OPC=xorl_r32_r32      
  callq .fprintf                    #  305   0xff1cb  5      OPC=callq_label       
  jmpq .L_fee52                     #  306   0xff1d0  5      OPC=jmpq_label_1      
  nop                               #  307   0xff1d5  1      OPC=nop               
  nop                               #  308   0xff1d6  1      OPC=nop               
  nop                               #  309   0xff1d7  1      OPC=nop               
.L_ff1d0:                           #        0xff1d8  0      OPC=<label>           
  movl 0x2c532e(%rip), %eax         #  310   0xff1d8  6      OPC=movl_r32_m32      
  testl %eax, %eax                  #  311   0xff1de  2      OPC=testl_r32_r32     
  je .L_ff10e                       #  312   0xff1e0  6      OPC=je_label_1        
  movl 0x2c20d4(%rip), %edi         #  313   0xff1e6  6      OPC=movl_r32_m32      
  callq .__close                    #  314   0xff1ec  5      OPC=callq_label       
  movl 0x2c5311(%rip), %esi         #  315   0xff1f1  6      OPC=movl_r32_m32      
  movq 0x2c5302(%rip), %rdi         #  316   0xff1f7  7      OPC=movq_r64_m64      
  xorl %edx, %edx                   #  317   0xff1fe  2      OPC=xorl_r32_r32      
  movl $0xffffffff, 0x2c20b6(%rip)  #  318   0xff200  10     OPC=movl_m32_imm32    
  movl $0x0, 0x2c52f8(%rip)         #  319   0xff20a  10     OPC=movl_m32_imm32    
  orl $0x8, %esi                    #  320   0xff214  3      OPC=orl_r32_imm8      
  callq .openlog_internal           #  321   0xff217  5      OPC=callq_label       
  movl 0x2c52ea(%rip), %ecx         #  322   0xff21c  6      OPC=movl_r32_m32      
  testl %ecx, %ecx                  #  323   0xff222  2      OPC=testl_r32_r32     
  je .L_ff10e                       #  324   0xff224  6      OPC=je_label_1        
  movq 0x18(%rsp), %rdx             #  325   0xff22a  5      OPC=movq_r64_m64      
  movq 0x10(%rsp), %rsi             #  326   0xff22f  5      OPC=movq_r64_m64      
  movl $0x4000, %ecx                #  327   0xff234  5      OPC=movl_r32_imm32    
  movl 0x2c2081(%rip), %edi         #  328   0xff239  6      OPC=movl_r32_m32      
  callq .__send                     #  329   0xff23f  5      OPC=callq_label       
  testq %rax, %rax                  #  330   0xff244  3      OPC=testq_r64_r64     
  jns .L_fefb4                      #  331   0xff247  6      OPC=jns_label_1       
  movl 0x2c52b9(%rip), %edx         #  332   0xff24d  6      OPC=movl_r32_m32      
  testl %edx, %edx                  #  333   0xff253  2      OPC=testl_r32_r32     
  je .L_ff10e                       #  334   0xff255  6      OPC=je_label_1        
  movl 0x2c205f(%rip), %edi         #  335   0xff25b  6      OPC=movl_r32_m32      
  callq .__close                    #  336   0xff261  5      OPC=callq_label       
  movl $0xffffffff, 0x2c2050(%rip)  #  337   0xff266  10     OPC=movl_m32_imm32    
  movl $0x0, 0x2c5292(%rip)         #  338   0xff270  10     OPC=movl_m32_imm32    
  jmpq .L_ff10e                     #  339   0xff27a  5      OPC=jmpq_label_1      
  nop                               #  340   0xff27f  1      OPC=nop               
  nop                               #  341   0xff280  1      OPC=nop               
  nop                               #  342   0xff281  1      OPC=nop               
  nop                               #  343   0xff282  1      OPC=nop               
  nop                               #  344   0xff283  1      OPC=nop               
  nop                               #  345   0xff284  1      OPC=nop               
  nop                               #  346   0xff285  1      OPC=nop               
  nop                               #  347   0xff286  1      OPC=nop               
  nop                               #  348   0xff287  1      OPC=nop               
.L_ff280:                           #        0xff288  0      OPC=<label>           
  movl $0x20, %esi                  #  349   0xff288  5      OPC=movl_r32_imm32    
  movq %rbx, %rdi                   #  350   0xff28d  3      OPC=movq_r64_r64      
  callq .__overflow                 #  351   0xff290  5      OPC=callq_label       
  jmpq .L_fee8e                     #  352   0xff295  5      OPC=jmpq_label_1      
  nop                               #  353   0xff29a  1      OPC=nop               
  nop                               #  354   0xff29b  1      OPC=nop               
  nop                               #  355   0xff29c  1      OPC=nop               
  nop                               #  356   0xff29d  1      OPC=nop               
  nop                               #  357   0xff29e  1      OPC=nop               
  nop                               #  358   0xff29f  1      OPC=nop               
.L_ff298:                           #        0xff2a0  0      OPC=<label>           
  movl $0x3a, %esi                  #  359   0xff2a0  5      OPC=movl_r32_imm32    
  movq %rbx, %rdi                   #  360   0xff2a5  3      OPC=movq_r64_r64      
  callq .__overflow                 #  361   0xff2a8  5      OPC=callq_label       
  jmpq .L_fee75                     #  362   0xff2ad  5      OPC=jmpq_label_1      
  leaq 0x40(%rsp), %rdi             #  363   0xff2b2  5      OPC=leaq_r64_m16      
  movq %rax, %rbx                   #  364   0xff2b7  3      OPC=movq_r64_r64      
  callq .cancel_handler             #  365   0xff2ba  5      OPC=callq_label       
  movq %rbx, %rdi                   #  366   0xff2bf  3      OPC=movq_r64_r64      
  callq ._Unwind_Resume             #  367   0xff2c2  5      OPC=callq_label       
  movq %rax, %rbp                   #  368   0xff2c7  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                   #  369   0xff2ca  3      OPC=movq_r64_r64      
  callq .L_1f8c0                    #  370   0xff2cd  5      OPC=callq_label       
  movq %rbp, %rdi                   #  371   0xff2d2  3      OPC=movq_r64_r64      
  callq ._Unwind_Resume             #  372   0xff2d5  5      OPC=callq_label       
  nop                               #  373   0xff2da  1      OPC=nop               
  nop                               #  374   0xff2db  1      OPC=nop               
  nop                               #  375   0xff2dc  1      OPC=nop               
  nop                               #  376   0xff2dd  1      OPC=nop               
  nop                               #  377   0xff2de  1      OPC=nop               
  nop                               #  378   0xff2df  1      OPC=nop               
  nop                               #  379   0xff2e0  1      OPC=nop               
  nop                               #  380   0xff2e1  1      OPC=nop               
  nop                               #  381   0xff2e2  1      OPC=nop               
  nop                               #  382   0xff2e3  1      OPC=nop               
  nop                               #  383   0xff2e4  1      OPC=nop               
  nop                               #  384   0xff2e5  1      OPC=nop               
  nop                               #  385   0xff2e6  1      OPC=nop               
  nop                               #  386   0xff2e7  1      OPC=nop               
                                                                                   
.size __vsyslog_chk, .-__vsyslog_chk

