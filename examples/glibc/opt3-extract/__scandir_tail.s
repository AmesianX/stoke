  .text
  .globl __scandir_tail
  .type __scandir_tail, @function

#! file-offset 0xc5a60
#! rip-offset  0xc5a60
#! capacity    688 bytes

# Text                             #  Line  RIP      Bytes  Opcode                
.__scandir_tail:                   #        0xc5a60  0      OPC=<label>           
  testq %rdi, %rdi                 #  1     0xc5a60  3      OPC=testq_r64_r64     
  je .L_c5ce8                      #  2     0xc5a63  6      OPC=je_label_1        
  pushq %r15                       #  3     0xc5a69  2      OPC=pushq_r64_1       
  pushq %r14                       #  4     0xc5a6b  2      OPC=pushq_r64_1       
  pushq %r13                       #  5     0xc5a6d  2      OPC=pushq_r64_1       
  pushq %r12                       #  6     0xc5a6f  2      OPC=pushq_r64_1       
  xorl %r13d, %r13d                #  7     0xc5a71  3      OPC=xorl_r32_r32      
  pushq %rbp                       #  8     0xc5a74  1      OPC=pushq_r64_1       
  pushq %rbx                       #  9     0xc5a75  1      OPC=pushq_r64_1       
  movq %rdi, %r12                  #  10    0xc5a76  3      OPC=movq_r64_r64      
  subq $0x58, %rsp                 #  11    0xc5a79  4      OPC=subq_r64_imm8     
  movq 0x2fb3fc(%rip), %r14        #  12    0xc5a7d  7      OPC=movq_r64_m64      
  testq %rdx, %rdx                 #  13    0xc5a84  3      OPC=testq_r64_r64     
  movq %rcx, 0x18(%rsp)            #  14    0xc5a87  5      OPC=movq_m64_r64      
  movq %rdx, 0x10(%rsp)            #  15    0xc5a8c  5      OPC=movq_m64_r64      
  movq %rsi, 0x20(%rsp)            #  16    0xc5a91  5      OPC=movq_m64_r64      
  movq $0x0, 0x38(%rsp)            #  17    0xc5a96  9      OPC=movq_m64_imm32    
  movl (%r14), %ecx                #  18    0xc5a9f  3      OPC=movl_r32_m32      
  nop                              #  19    0xc5aa2  1      OPC=nop               
  movq $0x0, 0x40(%rsp)            #  20    0xc5aa3  9      OPC=movq_m64_imm32    
  movl $0x0, (%r14)                #  21    0xc5aac  7      OPC=movl_m32_imm32    
  nop                              #  22    0xc5ab3  1      OPC=nop               
  movq %rdi, 0x30(%rsp)            #  23    0xc5ab4  5      OPC=movq_m64_r64      
  movq $0x0, 0x8(%rsp)             #  24    0xc5ab9  9      OPC=movq_m64_imm32    
  movl %ecx, 0x2c(%rsp)            #  25    0xc5ac2  4      OPC=movl_m32_r32      
  je .L_c5bc0                      #  26    0xc5ac6  6      OPC=je_label_1        
  nop                              #  27    0xc5acc  1      OPC=nop               
  nop                              #  28    0xc5acd  1      OPC=nop               
  nop                              #  29    0xc5ace  1      OPC=nop               
  nop                              #  30    0xc5acf  1      OPC=nop               
.L_c5ad0:                          #        0xc5ad0  0      OPC=<label>           
  movq %r12, %rdi                  #  31    0xc5ad0  3      OPC=movq_r64_r64      
  leaq 0x30(%rsp), %rbp            #  32    0xc5ad3  5      OPC=leaq_r64_m16      
  callq .readdir                   #  33    0xc5ad8  5      OPC=callq_label       
  testq %rax, %rax                 #  34    0xc5add  3      OPC=testq_r64_r64     
  movq %rax, %rbx                  #  35    0xc5ae0  3      OPC=movq_r64_r64      
  je .L_c5b57                      #  36    0xc5ae3  2      OPC=je_label          
.L_c5ae5:                          #        0xc5ae5  0      OPC=<label>           
  leaq 0x30(%rsp), %rbp            #  37    0xc5ae5  5      OPC=leaq_r64_m16      
  movq %rbx, %rdi                  #  38    0xc5aea  3      OPC=movq_r64_r64      
  movq 0x10(%rsp), %rax            #  39    0xc5aed  5      OPC=movq_r64_m64      
  callq %rax                       #  40    0xc5af2  2      OPC=callq_r64         
  testl %eax, %eax                 #  41    0xc5af4  2      OPC=testl_r32_r32     
  movl $0x0, (%r14)                #  42    0xc5af6  7      OPC=movl_m32_imm32    
  nop                              #  43    0xc5afd  1      OPC=nop               
  je .L_c5ad0                      #  44    0xc5afe  2      OPC=je_label          
  movq 0x8(%rsp), %rax             #  45    0xc5b00  5      OPC=movq_r64_m64      
  cmpq 0x40(%rsp), %rax            #  46    0xc5b05  5      OPC=cmpq_r64_m64      
  je .L_c5c38                      #  47    0xc5b0a  6      OPC=je_label_1        
.L_c5b10:                          #        0xc5b10  0      OPC=<label>           
  movzwl 0x10(%rbx), %ebp          #  48    0xc5b10  4      OPC=movzwl_r32_m16    
  movq %rbp, %rdi                  #  49    0xc5b14  3      OPC=movq_r64_r64      
  callq .memalign_plt              #  50    0xc5b17  5      OPC=callq_label       
  testq %rax, %rax                 #  51    0xc5b1c  3      OPC=testq_r64_r64     
  je .L_c5b57                      #  52    0xc5b1f  2      OPC=je_label          
  movq 0x40(%rsp), %r15            #  53    0xc5b21  5      OPC=movq_r64_m64      
  movq %rax, %rdi                  #  54    0xc5b26  3      OPC=movq_r64_r64      
  movq %rbx, %rsi                  #  55    0xc5b29  3      OPC=movq_r64_r64      
  leaq 0x1(%r15), %rdx             #  56    0xc5b2c  4      OPC=leaq_r64_m16      
  movq %rdx, 0x40(%rsp)            #  57    0xc5b30  5      OPC=movq_m64_r64      
  movq %rbp, %rdx                  #  58    0xc5b35  3      OPC=movq_r64_r64      
  leaq 0x30(%rsp), %rbp            #  59    0xc5b38  5      OPC=leaq_r64_m16      
  callq .__GI_memcpy               #  60    0xc5b3d  5      OPC=callq_label       
  movq %r12, %rdi                  #  61    0xc5b42  3      OPC=movq_r64_r64      
  movq %rax, (%r13,%r15,8)         #  62    0xc5b45  5      OPC=movq_m64_r64      
  callq .readdir                   #  63    0xc5b4a  5      OPC=callq_label       
  testq %rax, %rax                 #  64    0xc5b4f  3      OPC=testq_r64_r64     
  movq %rax, %rbx                  #  65    0xc5b52  3      OPC=movq_r64_r64      
  jne .L_c5ae5                     #  66    0xc5b55  2      OPC=jne_label         
.L_c5b57:                          #        0xc5b57  0      OPC=<label>           
  movl (%r14), %eax                #  67    0xc5b57  3      OPC=movl_r32_m32      
  nop                              #  68    0xc5b5a  1      OPC=nop               
  leaq 0x30(%rsp), %rbp            #  69    0xc5b5b  5      OPC=leaq_r64_m16      
  testl %eax, %eax                 #  70    0xc5b60  2      OPC=testl_r32_r32     
  jne .L_c5ccc                     #  71    0xc5b62  6      OPC=jne_label_1       
  movq %r12, %rdi                  #  72    0xc5b68  3      OPC=movq_r64_r64      
  callq .closedir                  #  73    0xc5b6b  5      OPC=callq_label       
  cmpq $0x0, 0x18(%rsp)            #  74    0xc5b70  6      OPC=cmpq_m64_imm8     
  je .L_c5b94                      #  75    0xc5b76  2      OPC=je_label          
  movq 0x18(%rsp), %rcx            #  76    0xc5b78  5      OPC=movq_r64_m64      
  movq 0x40(%rsp), %rsi            #  77    0xc5b7d  5      OPC=movq_r64_m64      
  movl $0x8, %edx                  #  78    0xc5b82  5      OPC=movl_r32_imm32    
  movq %r13, %rdi                  #  79    0xc5b87  3      OPC=movq_r64_r64      
  leaq 0x30(%rsp), %rbp            #  80    0xc5b8a  5      OPC=leaq_r64_m16      
  callq .qsort                     #  81    0xc5b8f  5      OPC=callq_label       
.L_c5b94:                          #        0xc5b94  0      OPC=<label>           
  movq 0x20(%rsp), %rax            #  82    0xc5b94  5      OPC=movq_r64_m64      
  movq %r13, (%rax)                #  83    0xc5b99  3      OPC=movq_m64_r64      
  movq 0x40(%rsp), %rax            #  84    0xc5b9c  5      OPC=movq_r64_m64      
  testl %eax, %eax                 #  85    0xc5ba1  2      OPC=testl_r32_r32     
  js .L_c5bad                      #  86    0xc5ba3  2      OPC=js_label          
  movl 0x2c(%rsp), %ecx            #  87    0xc5ba5  4      OPC=movl_r32_m32      
  movl %ecx, (%r14)                #  88    0xc5ba9  3      OPC=movl_m32_r32      
  nop                              #  89    0xc5bac  1      OPC=nop               
.L_c5bad:                          #        0xc5bad  0      OPC=<label>           
  addq $0x58, %rsp                 #  90    0xc5bad  4      OPC=addq_r64_imm8     
  popq %rbx                        #  91    0xc5bb1  1      OPC=popq_r64_1        
  popq %rbp                        #  92    0xc5bb2  1      OPC=popq_r64_1        
  popq %r12                        #  93    0xc5bb3  2      OPC=popq_r64_1        
  popq %r13                        #  94    0xc5bb5  2      OPC=popq_r64_1        
  popq %r14                        #  95    0xc5bb7  2      OPC=popq_r64_1        
  popq %r15                        #  96    0xc5bb9  2      OPC=popq_r64_1        
  retq                             #  97    0xc5bbb  1      OPC=retq              
  nop                              #  98    0xc5bbc  1      OPC=nop               
  nop                              #  99    0xc5bbd  1      OPC=nop               
  nop                              #  100   0xc5bbe  1      OPC=nop               
  nop                              #  101   0xc5bbf  1      OPC=nop               
.L_c5bc0:                          #        0xc5bc0  0      OPC=<label>           
  movq %r12, %rdi                  #  102   0xc5bc0  3      OPC=movq_r64_r64      
  leaq 0x30(%rsp), %rbp            #  103   0xc5bc3  5      OPC=leaq_r64_m16      
  callq .readdir                   #  104   0xc5bc8  5      OPC=callq_label       
.L_c5bcd:                          #        0xc5bcd  0      OPC=<label>           
  testq %rax, %rax                 #  105   0xc5bcd  3      OPC=testq_r64_r64     
  movq %rax, %rbp                  #  106   0xc5bd0  3      OPC=movq_r64_r64      
  je .L_c5b57                      #  107   0xc5bd3  2      OPC=je_label          
  movq 0x8(%rsp), %rax             #  108   0xc5bd5  5      OPC=movq_r64_m64      
  cmpq 0x40(%rsp), %rax            #  109   0xc5bda  5      OPC=cmpq_r64_m64      
  movl $0x0, (%r14)                #  110   0xc5bdf  7      OPC=movl_m32_imm32    
  nop                              #  111   0xc5be6  1      OPC=nop               
  je .L_c5c80                      #  112   0xc5be7  6      OPC=je_label_1        
.L_c5bed:                          #        0xc5bed  0      OPC=<label>           
  movzwl 0x10(%rbp), %r15d         #  113   0xc5bed  5      OPC=movzwl_r32_m16    
  movq %r15, %rdi                  #  114   0xc5bf2  3      OPC=movq_r64_r64      
  callq .memalign_plt              #  115   0xc5bf5  5      OPC=callq_label       
  testq %rax, %rax                 #  116   0xc5bfa  3      OPC=testq_r64_r64     
  je .L_c5b57                      #  117   0xc5bfd  6      OPC=je_label_1        
  movq 0x40(%rsp), %rbx            #  118   0xc5c03  5      OPC=movq_r64_m64      
  movq %rbp, %rsi                  #  119   0xc5c08  3      OPC=movq_r64_r64      
  movq %rax, %rdi                  #  120   0xc5c0b  3      OPC=movq_r64_r64      
  leaq 0x30(%rsp), %rbp            #  121   0xc5c0e  5      OPC=leaq_r64_m16      
  leaq 0x1(%rbx), %rdx             #  122   0xc5c13  4      OPC=leaq_r64_m16      
  movq %rdx, 0x40(%rsp)            #  123   0xc5c17  5      OPC=movq_m64_r64      
  movq %r15, %rdx                  #  124   0xc5c1c  3      OPC=movq_r64_r64      
  callq .__GI_memcpy               #  125   0xc5c1f  5      OPC=callq_label       
  movq %r12, %rdi                  #  126   0xc5c24  3      OPC=movq_r64_r64      
  movq %rax, (%r13,%rbx,8)         #  127   0xc5c27  5      OPC=movq_m64_r64      
  callq .readdir                   #  128   0xc5c2c  5      OPC=callq_label       
  jmpq .L_c5bcd                    #  129   0xc5c31  2      OPC=jmpq_label        
  nop                              #  130   0xc5c33  1      OPC=nop               
  nop                              #  131   0xc5c34  1      OPC=nop               
  nop                              #  132   0xc5c35  1      OPC=nop               
  nop                              #  133   0xc5c36  1      OPC=nop               
  nop                              #  134   0xc5c37  1      OPC=nop               
.L_c5c38:                          #        0xc5c38  0      OPC=<label>           
  testq %rax, %rax                 #  135   0xc5c38  3      OPC=testq_r64_r64     
  je .L_c5c70                      #  136   0xc5c3b  2      OPC=je_label          
  shlq $0x1, 0x8(%rsp)             #  137   0xc5c3d  5      OPC=shlq_m64_one      
  movq 0x8(%rsp), %rax             #  138   0xc5c42  5      OPC=movq_r64_m64      
  leaq (,%rax,8), %rsi             #  139   0xc5c47  8      OPC=leaq_r64_m16      
.L_c5c4f:                          #        0xc5c4f  0      OPC=<label>           
  movq %r13, %rdi                  #  140   0xc5c4f  3      OPC=movq_r64_r64      
  callq .__tls_get_addr_plt        #  141   0xc5c52  5      OPC=callq_label       
  testq %rax, %rax                 #  142   0xc5c57  3      OPC=testq_r64_r64     
  je .L_c5b57                      #  143   0xc5c5a  6      OPC=je_label_1        
  movq %rax, 0x38(%rsp)            #  144   0xc5c60  5      OPC=movq_m64_r64      
  movq %rax, %r13                  #  145   0xc5c65  3      OPC=movq_r64_r64      
  jmpq .L_c5b10                    #  146   0xc5c68  5      OPC=jmpq_label_1      
  nop                              #  147   0xc5c6d  1      OPC=nop               
  nop                              #  148   0xc5c6e  1      OPC=nop               
  nop                              #  149   0xc5c6f  1      OPC=nop               
.L_c5c70:                          #        0xc5c70  0      OPC=<label>           
  movl $0x50, %esi                 #  150   0xc5c70  5      OPC=movl_r32_imm32    
  movq $0xa, 0x8(%rsp)             #  151   0xc5c75  9      OPC=movq_m64_imm32    
  jmpq .L_c5c4f                    #  152   0xc5c7e  2      OPC=jmpq_label        
.L_c5c80:                          #        0xc5c80  0      OPC=<label>           
  cmpq $0x0, 0x8(%rsp)             #  153   0xc5c80  6      OPC=cmpq_m64_imm8     
  jne .L_c5cb8                     #  154   0xc5c86  2      OPC=jne_label         
  movl $0x50, %esi                 #  155   0xc5c88  5      OPC=movl_r32_imm32    
  movq $0xa, 0x8(%rsp)             #  156   0xc5c8d  9      OPC=movq_m64_imm32    
.L_c5c96:                          #        0xc5c96  0      OPC=<label>           
  movq %r13, %rdi                  #  157   0xc5c96  3      OPC=movq_r64_r64      
  callq .__tls_get_addr_plt        #  158   0xc5c99  5      OPC=callq_label       
  testq %rax, %rax                 #  159   0xc5c9e  3      OPC=testq_r64_r64     
  je .L_c5b57                      #  160   0xc5ca1  6      OPC=je_label_1        
  movq %rax, 0x38(%rsp)            #  161   0xc5ca7  5      OPC=movq_m64_r64      
  movq %rax, %r13                  #  162   0xc5cac  3      OPC=movq_r64_r64      
  jmpq .L_c5bed                    #  163   0xc5caf  5      OPC=jmpq_label_1      
  nop                              #  164   0xc5cb4  1      OPC=nop               
  nop                              #  165   0xc5cb5  1      OPC=nop               
  nop                              #  166   0xc5cb6  1      OPC=nop               
  nop                              #  167   0xc5cb7  1      OPC=nop               
.L_c5cb8:                          #        0xc5cb8  0      OPC=<label>           
  shlq $0x1, 0x8(%rsp)             #  168   0xc5cb8  5      OPC=shlq_m64_one      
  movq 0x8(%rsp), %rax             #  169   0xc5cbd  5      OPC=movq_r64_m64      
  leaq (,%rax,8), %rsi             #  170   0xc5cc2  8      OPC=leaq_r64_m16      
  jmpq .L_c5c96                    #  171   0xc5cca  2      OPC=jmpq_label        
.L_c5ccc:                          #        0xc5ccc  0      OPC=<label>           
  movq %rbp, %rdi                  #  172   0xc5ccc  3      OPC=movq_r64_r64      
  callq .__scandir_cancel_handler  #  173   0xc5ccf  5      OPC=callq_label       
  addq $0x58, %rsp                 #  174   0xc5cd4  4      OPC=addq_r64_imm8     
  movl $0xffffffff, %eax           #  175   0xc5cd8  6      OPC=movl_r32_imm32_1  
  popq %rbx                        #  176   0xc5cde  1      OPC=popq_r64_1        
  popq %rbp                        #  177   0xc5cdf  1      OPC=popq_r64_1        
  popq %r12                        #  178   0xc5ce0  2      OPC=popq_r64_1        
  popq %r13                        #  179   0xc5ce2  2      OPC=popq_r64_1        
  popq %r14                        #  180   0xc5ce4  2      OPC=popq_r64_1        
  popq %r15                        #  181   0xc5ce6  2      OPC=popq_r64_1        
  retq                             #  182   0xc5ce8  1      OPC=retq              
.L_c5ce8:                          #        0xc5ce9  0      OPC=<label>           
  movl $0xffffffff, %eax           #  183   0xc5ce9  6      OPC=movl_r32_imm32_1  
  retq                             #  184   0xc5cef  1      OPC=retq              
  movq %rax, %rbx                  #  185   0xc5cf0  3      OPC=movq_r64_r64      
  movq %rbp, %rdi                  #  186   0xc5cf3  3      OPC=movq_r64_r64      
  callq .__scandir_cancel_handler  #  187   0xc5cf6  5      OPC=callq_label       
  movq %rbx, %rdi                  #  188   0xc5cfb  3      OPC=movq_r64_r64      
  callq ._Unwind_Resume            #  189   0xc5cfe  5      OPC=callq_label       
  nop                              #  190   0xc5d03  1      OPC=nop               
  nop                              #  191   0xc5d04  1      OPC=nop               
  nop                              #  192   0xc5d05  1      OPC=nop               
  nop                              #  193   0xc5d06  1      OPC=nop               
  nop                              #  194   0xc5d07  1      OPC=nop               
  nop                              #  195   0xc5d08  1      OPC=nop               
  nop                              #  196   0xc5d09  1      OPC=nop               
  nop                              #  197   0xc5d0a  1      OPC=nop               
  nop                              #  198   0xc5d0b  1      OPC=nop               
  nop                              #  199   0xc5d0c  1      OPC=nop               
  nop                              #  200   0xc5d0d  1      OPC=nop               
  nop                              #  201   0xc5d0e  1      OPC=nop               
  nop                              #  202   0xc5d0f  1      OPC=nop               
  nop                              #  203   0xc5d10  1      OPC=nop               
  nop                              #  204   0xc5d11  1      OPC=nop               
                                                                                  
.size __scandir_tail, .-__scandir_tail

