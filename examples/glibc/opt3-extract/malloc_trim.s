  .text
  .globl malloc_trim
  .type malloc_trim, @function

#! file-offset 0x84d70
#! rip-offset  0x84d70
#! capacity    720 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
.malloc_trim:                       #        0x84d70  0      OPC=<label>           
  pushq %r15                        #  1     0x84d70  2      OPC=pushq_r64_1       
  pushq %r14                        #  2     0x84d72  2      OPC=pushq_r64_1       
  pushq %r13                        #  3     0x84d74  2      OPC=pushq_r64_1       
  pushq %r12                        #  4     0x84d76  2      OPC=pushq_r64_1       
  pushq %rbp                        #  5     0x84d78  1      OPC=pushq_r64_1       
  pushq %rbx                        #  6     0x84d79  1      OPC=pushq_r64_1       
  subq $0x28, %rsp                  #  7     0x84d7a  4      OPC=subq_r64_imm8     
  movl 0x33c440(%rip), %eax         #  8     0x84d7e  6      OPC=movl_r32_m32      
  movq %rdi, 0x18(%rsp)             #  9     0x84d84  5      OPC=movq_m64_r64      
  testl %eax, %eax                  #  10    0x84d89  2      OPC=testl_r32_r32     
  js .L_84fef                       #  11    0x84d8b  6      OPC=js_label_1        
.L_84d91:                           #        0x84d91  0      OPC=<label>           
  leaq 0x33cea8(%rip), %rax         #  12    0x84d91  7      OPC=leaq_r64_m16      
  movl $0x0, 0x14(%rsp)             #  13    0x84d98  8      OPC=movl_m32_imm32    
  movq %rax, 0x8(%rsp)              #  14    0x84da0  5      OPC=movq_m64_r64      
.L_84da5:                           #        0x84da5  0      OPC=<label>           
  movl $0x1, %esi                   #  15    0x84da5  5      OPC=movl_r32_imm32    
  xorl %eax, %eax                   #  16    0x84daa  2      OPC=xorl_r32_r32      
  movq 0x8(%rsp), %rbx              #  17    0x84dac  5      OPC=movq_r64_m64      
  cmpl $0x0, 0x341e48(%rip)         #  18    0x84db1  7      OPC=cmpl_m32_imm8     
  je .L_84dc2                       #  19    0x84db8  2      OPC=je_label          
  lock                              #  20    0x84dba  1      OPC=lock              
  cmpxchgl %esi, (%rbx)             #  21    0x84dbb  3      OPC=cmpxchgl_m32_r32  
  nop                               #  22    0x84dbe  1      OPC=nop               
  jne .L_84dc7                      #  23    0x84dbf  2      OPC=jne_label         
  jmpq .L_84ddd                     #  24    0x84dc1  2      OPC=jmpq_label        
.L_84dc2:                           #        0x84dc3  0      OPC=<label>           
  cmpxchgl %esi, (%rbx)             #  25    0x84dc3  3      OPC=cmpxchgl_m32_r32  
  je .L_84ddd                       #  26    0x84dc6  2      OPC=je_label          
.L_84dc7:                           #        0x84dc8  0      OPC=<label>           
  leaq (%rbx), %rdi                 #  27    0x84dc8  3      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  28    0x84dcb  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  29    0x84dd2  5      OPC=callq_label       
  addq $0x80, %rsp                  #  30    0x84dd7  7      OPC=addq_r64_imm32    
.L_84ddd:                           #        0x84dde  0      OPC=<label>           
  xorl %r10d, %r10d                 #  31    0x84dde  3      OPC=xorl_r32_r32      
  testb $0x4, 0x4(%rbx)             #  32    0x84de1  4      OPC=testb_m8_imm8     
  je .L_84e49                       #  33    0x84de5  2      OPC=je_label          
.L_84de6:                           #        0x84de7  0      OPC=<label>           
  orl %r10d, 0x14(%rsp)             #  34    0x84de7  5      OPC=orl_m32_r32       
  movq 0x8(%rsp), %rbx              #  35    0x84dec  5      OPC=movq_r64_m64      
  cmpl $0x0, 0x341e09(%rip)         #  36    0x84df1  7      OPC=cmpl_m32_imm8     
  je .L_84e00                       #  37    0x84df8  2      OPC=je_label          
  lock                              #  38    0x84dfa  1      OPC=lock              
  decl (%rbx)                       #  39    0x84dfb  2      OPC=decl_m32          
  nop                               #  40    0x84dfd  1      OPC=nop               
  jne .L_84e04                      #  41    0x84dfe  2      OPC=jne_label         
  jmpq .L_84e1a                     #  42    0x84e00  2      OPC=jmpq_label        
.L_84e00:                           #        0x84e02  0      OPC=<label>           
  decl (%rbx)                       #  43    0x84e02  2      OPC=decl_m32          
  je .L_84e1a                       #  44    0x84e04  2      OPC=je_label          
.L_84e04:                           #        0x84e06  0      OPC=<label>           
  leaq (%rbx), %rdi                 #  45    0x84e06  3      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  46    0x84e09  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  47    0x84e10  5      OPC=callq_label       
  addq $0x80, %rsp                  #  48    0x84e15  7      OPC=addq_r64_imm32    
.L_84e1a:                           #        0x84e1c  0      OPC=<label>           
  movq 0x868(%rbx), %rax            #  49    0x84e1c  7      OPC=movq_r64_m64      
  leaq 0x33ce18(%rip), %rcx         #  50    0x84e23  7      OPC=leaq_r64_m16      
  cmpq %rcx, %rax                   #  51    0x84e2a  3      OPC=cmpq_r64_r64      
  movq %rax, 0x8(%rsp)              #  52    0x84e2d  5      OPC=movq_m64_r64      
  jne .L_84da5                      #  53    0x84e32  6      OPC=jne_label_1       
  movl 0x14(%rsp), %eax             #  54    0x84e38  4      OPC=movl_r32_m32      
  addq $0x28, %rsp                  #  55    0x84e3c  4      OPC=addq_r64_imm8     
  popq %rbx                         #  56    0x84e40  1      OPC=popq_r64_1        
  popq %rbp                         #  57    0x84e41  1      OPC=popq_r64_1        
  popq %r12                         #  58    0x84e42  2      OPC=popq_r64_1        
  popq %r13                         #  59    0x84e44  2      OPC=popq_r64_1        
  popq %r14                         #  60    0x84e46  2      OPC=popq_r64_1        
  popq %r15                         #  61    0x84e48  2      OPC=popq_r64_1        
  retq                              #  62    0x84e4a  1      OPC=retq              
.L_84e49:                           #        0x84e4b  0      OPC=<label>           
  movq 0x8(%rsp), %rdi              #  63    0x84e4b  5      OPC=movq_r64_m64      
  callq .malloc_consolidate         #  64    0x84e50  5      OPC=callq_label       
  movq 0x33c01e(%rip), %rax         #  65    0x84e55  7      OPC=movq_r64_m64      
  movq 0x18(%rax), %r15             #  66    0x84e5c  4      OPC=movq_r64_m64      
  cmpq $0x3ff, %r15                 #  67    0x84e60  7      OPC=cmpq_r64_imm32    
  ja .L_84f45                       #  68    0x84e67  6      OPC=ja_label_1        
  movl %r15d, %eax                  #  69    0x84e6d  3      OPC=movl_r32_r32      
  shrl $0x4, %eax                   #  70    0x84e70  3      OPC=shrl_r32_imm8     
  movl %eax, 0x10(%rsp)             #  71    0x84e73  4      OPC=movl_m32_r32      
.L_84e75:                           #        0x84e77  0      OPC=<label>           
  leaq -0x1(%r15), %r12             #  72    0x84e77  4      OPC=leaq_r64_m16      
  movq 0x8(%rsp), %rax              #  73    0x84e7b  5      OPC=movq_r64_m64      
  xorl %ecx, %ecx                   #  74    0x84e80  2      OPC=xorl_r32_r32      
  movl $0x1, %ebp                   #  75    0x84e82  5      OPC=movl_r32_imm32    
  addq $0x2f, %r15                  #  76    0x84e87  4      OPC=addq_r64_imm8     
  movq %r12, %r13                   #  77    0x84e8b  3      OPC=movq_r64_r64      
  movq %r12, %rbx                   #  78    0x84e8e  3      OPC=movq_r64_r64      
  leaq 0x58(%rax), %r14             #  79    0x84e91  4      OPC=leaq_r64_m16      
  notq %r13                         #  80    0x84e95  3      OPC=notq_r64          
  jmpq .L_84eb4                     #  81    0x84e98  2      OPC=jmpq_label        
  nop                               #  82    0x84e9a  1      OPC=nop               
  nop                               #  83    0x84e9b  1      OPC=nop               
  nop                               #  84    0x84e9c  1      OPC=nop               
  nop                               #  85    0x84e9d  1      OPC=nop               
  nop                               #  86    0x84e9e  1      OPC=nop               
  nop                               #  87    0x84e9f  1      OPC=nop               
  nop                               #  88    0x84ea0  1      OPC=nop               
  nop                               #  89    0x84ea1  1      OPC=nop               
.L_84ea0:                           #        0x84ea2  0      OPC=<label>           
  cmpl $0x1, %ebp                   #  90    0x84ea2  3      OPC=cmpl_r32_imm8     
  je .L_84eba                       #  91    0x84ea5  2      OPC=je_label          
.L_84ea5:                           #        0x84ea7  0      OPC=<label>           
  addl $0x1, %ebp                   #  92    0x84ea7  3      OPC=addl_r32_imm8     
  addq $0x10, %r14                  #  93    0x84eaa  4      OPC=addq_r64_imm8     
  cmpl $0x80, %ebp                  #  94    0x84eae  6      OPC=cmpl_r32_imm32    
  je .L_84f27                       #  95    0x84eb4  2      OPC=je_label          
.L_84eb4:                           #        0x84eb6  0      OPC=<label>           
  cmpl 0x10(%rsp), %ebp             #  96    0x84eb6  4      OPC=cmpl_r32_m32      
  jl .L_84ea0                       #  97    0x84eba  2      OPC=jl_label          
.L_84eba:                           #        0x84ebc  0      OPC=<label>           
  movq 0x18(%r14), %r12             #  98    0x84ebc  4      OPC=movq_r64_m64      
  cmpq %r12, %r14                   #  99    0x84ec0  3      OPC=cmpq_r64_r64      
  jne .L_84ed2                      #  100   0x84ec3  2      OPC=jne_label         
  jmpq .L_84ea5                     #  101   0x84ec5  2      OPC=jmpq_label        
  nop                               #  102   0x84ec7  1      OPC=nop               
  nop                               #  103   0x84ec8  1      OPC=nop               
  nop                               #  104   0x84ec9  1      OPC=nop               
.L_84ec8:                           #        0x84eca  0      OPC=<label>           
  movq 0x18(%r12), %r12             #  105   0x84eca  5      OPC=movq_r64_m64      
  cmpq %r12, %r14                   #  106   0x84ecf  3      OPC=cmpq_r64_r64      
  je .L_84ea5                       #  107   0x84ed2  2      OPC=je_label          
.L_84ed2:                           #        0x84ed4  0      OPC=<label>           
  movq 0x8(%r12), %rax              #  108   0x84ed4  5      OPC=movq_r64_m64      
  andq $0xf8, %rax                  #  109   0x84ed9  4      OPC=andq_r64_imm8     
  cmpq %r15, %rax                   #  110   0x84edd  3      OPC=cmpq_r64_r64      
  jbe .L_84ec8                      #  111   0x84ee0  2      OPC=jbe_label         
  leaq (%r12,%r15,1), %rdi          #  112   0x84ee2  4      OPC=leaq_r64_m16      
  leaq 0x30(%r12), %rdx             #  113   0x84ee6  5      OPC=leaq_r64_m16      
  andq %r13, %rdi                   #  114   0x84eeb  3      OPC=andq_r64_r64      
  cmpq %rdx, %rdi                   #  115   0x84eee  3      OPC=cmpq_r64_r64      
  jb .L_84fb5                       #  116   0x84ef1  6      OPC=jb_label_1        
  leaq (%r12,%rax,1), %rdx          #  117   0x84ef7  4      OPC=leaq_r64_m16      
  cmpq %rdx, %rdi                   #  118   0x84efb  3      OPC=cmpq_r64_r64      
  jae .L_84f96                      #  119   0x84efe  6      OPC=jae_label_1       
  movq %r12, %rsi                   #  120   0x84f04  3      OPC=movq_r64_r64      
  subq %rdi, %rsi                   #  121   0x84f07  3      OPC=subq_r64_r64      
  addq %rsi, %rax                   #  122   0x84f0a  3      OPC=addq_r64_r64      
  cmpq %rax, %rbx                   #  123   0x84f0d  3      OPC=cmpq_r64_r64      
  jae .L_84ec8                      #  124   0x84f10  2      OPC=jae_label         
  andq %r13, %rax                   #  125   0x84f12  3      OPC=andq_r64_r64      
  movl $0x4, %edx                   #  126   0x84f15  5      OPC=movl_r32_imm32    
  movq %rax, %rsi                   #  127   0x84f1a  3      OPC=movq_r64_r64      
  callq .__madvise                  #  128   0x84f1d  5      OPC=callq_label       
  movl $0x1, %ecx                   #  129   0x84f22  5      OPC=movl_r32_imm32    
  jmpq .L_84ec8                     #  130   0x84f27  2      OPC=jmpq_label        
.L_84f27:                           #        0x84f29  0      OPC=<label>           
  xorl %eax, %eax                   #  131   0x84f29  2      OPC=xorl_r32_r32      
  leaq 0x33cd10(%rip), %rdx         #  132   0x84f2b  7      OPC=leaq_r64_m16      
  cmpq %rdx, 0x8(%rsp)              #  133   0x84f32  5      OPC=cmpq_m64_r64      
  je .L_8501a                       #  134   0x84f37  6      OPC=je_label_1        
.L_84f3b:                           #        0x84f3d  0      OPC=<label>           
  orl %ecx, %eax                    #  135   0x84f3d  2      OPC=orl_r32_r32       
  movl %eax, %r10d                  #  136   0x84f3f  3      OPC=movl_r32_r32      
  jmpq .L_84de6                     #  137   0x84f42  5      OPC=jmpq_label_1      
.L_84f45:                           #        0x84f47  0      OPC=<label>           
  movq %r15, %r12                   #  138   0x84f47  3      OPC=movq_r64_r64      
  shrq $0x6, %r12                   #  139   0x84f4a  4      OPC=shrq_r64_imm8     
  cmpq $0x30, %r12                  #  140   0x84f4e  4      OPC=cmpq_r64_imm8     
  ja .L_84f60                       #  141   0x84f52  2      OPC=ja_label          
  leal 0x30(%r12), %eax             #  142   0x84f54  5      OPC=leal_r32_m16      
  movl %eax, 0x10(%rsp)             #  143   0x84f59  4      OPC=movl_m32_r32      
  jmpq .L_84e75                     #  144   0x84f5d  5      OPC=jmpq_label_1      
.L_84f60:                           #        0x84f62  0      OPC=<label>           
  movq %r15, %r12                   #  145   0x84f62  3      OPC=movq_r64_r64      
  shrq $0x9, %r12                   #  146   0x84f65  4      OPC=shrq_r64_imm8     
  cmpq $0x14, %r12                  #  147   0x84f69  4      OPC=cmpq_r64_imm8     
  jbe .L_84f88                      #  148   0x84f6d  2      OPC=jbe_label         
  movq %r15, %r12                   #  149   0x84f6f  3      OPC=movq_r64_r64      
  shrq $0xc, %r12                   #  150   0x84f72  4      OPC=shrq_r64_imm8     
  cmpq $0xa, %r12                   #  151   0x84f76  4      OPC=cmpq_r64_imm8     
  ja .L_84fd4                       #  152   0x84f7a  2      OPC=ja_label          
  leal 0x6e(%r12), %eax             #  153   0x84f7c  5      OPC=leal_r32_m16      
  movl %eax, 0x10(%rsp)             #  154   0x84f81  4      OPC=movl_m32_r32      
  jmpq .L_84e75                     #  155   0x84f85  5      OPC=jmpq_label_1      
.L_84f88:                           #        0x84f8a  0      OPC=<label>           
  leal 0x5b(%r12), %eax             #  156   0x84f8a  5      OPC=leal_r32_m16      
  movl %eax, 0x10(%rsp)             #  157   0x84f8f  4      OPC=movl_m32_r32      
  jmpq .L_84e75                     #  158   0x84f93  5      OPC=jmpq_label_1      
.L_84f96:                           #        0x84f98  0      OPC=<label>           
  leaq 0x106971(%rip), %rcx         #  159   0x84f98  7      OPC=leaq_r64_m16      
  leaq 0x106665(%rip), %rsi         #  160   0x84f9f  7      OPC=leaq_r64_m16      
  leaq 0x10a2ed(%rip), %rdi         #  161   0x84fa6  7      OPC=leaq_r64_m16      
  movl $0x11ab, %edx                #  162   0x84fad  5      OPC=movl_r32_imm32    
  callq .__malloc_assert            #  163   0x84fb2  5      OPC=callq_label       
.L_84fb5:                           #        0x84fb7  0      OPC=<label>           
  leaq 0x106952(%rip), %rcx         #  164   0x84fb7  7      OPC=leaq_r64_m16      
  leaq 0x106646(%rip), %rsi         #  165   0x84fbe  7      OPC=leaq_r64_m16      
  leaq 0x10a296(%rip), %rdi         #  166   0x84fc5  7      OPC=leaq_r64_m16      
  movl $0x11aa, %edx                #  167   0x84fcc  5      OPC=movl_r32_imm32    
  callq .__malloc_assert            #  168   0x84fd1  5      OPC=callq_label       
.L_84fd4:                           #        0x84fd6  0      OPC=<label>           
  movq %r15, %r12                   #  169   0x84fd6  3      OPC=movq_r64_r64      
  shrq $0xf, %r12                   #  170   0x84fd9  4      OPC=shrq_r64_imm8     
  cmpq $0x4, %r12                   #  171   0x84fdd  4      OPC=cmpq_r64_imm8     
  ja .L_84ff9                       #  172   0x84fe1  2      OPC=ja_label          
  leal 0x77(%r12), %eax             #  173   0x84fe3  5      OPC=leal_r32_m16      
  movl %eax, 0x10(%rsp)             #  174   0x84fe8  4      OPC=movl_m32_r32      
  jmpq .L_84e75                     #  175   0x84fec  5      OPC=jmpq_label_1      
.L_84fef:                           #        0x84ff1  0      OPC=<label>           
  callq .ptmalloc_init_part_7       #  176   0x84ff1  5      OPC=callq_label       
  jmpq .L_84d91                     #  177   0x84ff6  5      OPC=jmpq_label_1      
.L_84ff9:                           #        0x84ffb  0      OPC=<label>           
  movq %r15, %rax                   #  178   0x84ffb  3      OPC=movq_r64_r64      
  shrq $0x12, %rax                  #  179   0x84ffe  4      OPC=shrq_r64_imm8     
  leal 0x7c(%rax), %r12d            #  180   0x85002  4      OPC=leal_r32_m16      
  cmpq $0x2, %rax                   #  181   0x85006  4      OPC=cmpq_r64_imm8     
  movl $0x7e, %eax                  #  182   0x8500a  5      OPC=movl_r32_imm32    
  cmovbel %r12d, %eax               #  183   0x8500f  4      OPC=cmovbel_r32_r32   
  movl %eax, 0x10(%rsp)             #  184   0x85013  4      OPC=movl_m32_r32      
  jmpq .L_84e75                     #  185   0x85017  5      OPC=jmpq_label_1      
.L_8501a:                           #        0x8501c  0      OPC=<label>           
  movq 0x18(%rsp), %rdi             #  186   0x8501c  5      OPC=movq_r64_m64      
  leaq 0x33d49a(%rip), %rdx         #  187   0x85021  7      OPC=leaq_r64_m16      
  leaq 0x33cc6b(%rip), %rsi         #  188   0x85028  7      OPC=leaq_r64_m16      
  movl %ecx, 0x10(%rsp)             #  189   0x8502f  4      OPC=movl_m32_r32      
  callq .systrim_isra_1             #  190   0x85033  5      OPC=callq_label       
  movl 0x10(%rsp), %ecx             #  191   0x85038  4      OPC=movl_r32_m32      
  jmpq .L_84f3b                     #  192   0x8503c  5      OPC=jmpq_label_1      
  nop                               #  193   0x85041  1      OPC=nop               
                                                                                   
.size malloc_trim, .-malloc_trim

