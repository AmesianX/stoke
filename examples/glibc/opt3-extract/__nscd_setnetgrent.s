  .text
  .globl __nscd_setnetgrent
  .type __nscd_setnetgrent, @function

#! file-offset 0x13cae0
#! rip-offset  0x13cae0
#! capacity    672 bytes

# Text                          #  Line  RIP       Bytes  Opcode                
.__nscd_setnetgrent:            #        0x13cae0  0      OPC=<label>           
  pushq %r15                    #  1     0x13cae0  2      OPC=pushq_r64_1       
  pushq %r14                    #  2     0x13cae2  2      OPC=pushq_r64_1       
  pushq %r13                    #  3     0x13cae4  2      OPC=pushq_r64_1       
  pushq %r12                    #  4     0x13cae6  2      OPC=pushq_r64_1       
  movq %rsi, %r13               #  5     0x13cae8  3      OPC=movq_r64_r64      
  pushq %rbp                    #  6     0x13caeb  1      OPC=pushq_r64_1       
  pushq %rbx                    #  7     0x13caec  1      OPC=pushq_r64_1       
  movq %rdi, %r12               #  8     0x13caed  3      OPC=movq_r64_r64      
  xorl %ebx, %ebx               #  9     0x13caf0  2      OPC=xorl_r32_r32      
  subq $0x48, %rsp              #  10    0x13caf2  4      OPC=subq_r64_imm8     
  callq .strlen                 #  11    0x13caf6  5      OPC=callq_label       
  leaq 0x2c(%rsp), %rcx         #  12    0x13cafb  5      OPC=leaq_r64_m16      
  leaq 0x289a59(%rip), %rdx     #  13    0x13cb00  7      OPC=leaq_r64_m16      
  leaq 0x50c5b(%rip), %rsi      #  14    0x13cb07  7      OPC=leaq_r64_m16      
  movl $0x15, %edi              #  15    0x13cb0e  5      OPC=movl_r32_imm32    
  leaq 0x1(%rax), %rbp          #  16    0x13cb13  4      OPC=leaq_r64_m16      
  callq .__nscd_get_map_ref     #  17    0x13cb17  5      OPC=callq_label       
  movq %rax, %r14               #  18    0x13cb1c  3      OPC=movq_r64_r64      
  leaq 0x30(%rsp), %rax         #  19    0x13cb1f  5      OPC=leaq_r64_m16      
  movq %rax, (%rsp)             #  20    0x13cb24  4      OPC=movq_m64_r64      
.L_13cb28:                      #        0x13cb28  0      OPC=<label>           
  cmpq $0xff, %r14              #  21    0x13cb28  4      OPC=cmpq_r64_imm8     
  je .L_13cc41                  #  22    0x13cb2c  6      OPC=je_label_1        
  movl $0x10, %r8d              #  23    0x13cb32  6      OPC=movl_r32_imm32    
  movq %r14, %rcx               #  24    0x13cb38  3      OPC=movq_r64_r64      
  movq %rbp, %rdx               #  25    0x13cb3b  3      OPC=movq_r64_r64      
  movq %r12, %rsi               #  26    0x13cb3e  3      OPC=movq_r64_r64      
  movl $0x13, %edi              #  27    0x13cb41  5      OPC=movl_r32_imm32    
  callq .__nscd_cache_search    #  28    0x13cb46  5      OPC=callq_label       
  testq %rax, %rax              #  29    0x13cb4b  3      OPC=testq_r64_r64     
  je .L_13cc41                  #  30    0x13cb4e  6      OPC=je_label_1        
  movq 0x18(%rax), %rsi         #  31    0x13cb54  4      OPC=movq_r64_m64      
  movq (%r14), %rcx             #  32    0x13cb58  3      OPC=movq_r64_m64      
  movl $0xfffffffe, %r15d       #  33    0x13cb5b  7      OPC=movl_r32_imm32_1  
  movl 0x2c(%rsp), %edx         #  34    0x13cb62  4      OPC=movl_r32_m32      
  movq 0x20(%rax), %rdi         #  35    0x13cb66  4      OPC=movq_r64_m64      
  movq %rsi, 0x30(%rsp)         #  36    0x13cb6a  5      OPC=movq_m64_r64      
  movl 0x8(%rcx), %esi          #  37    0x13cb6f  3      OPC=movl_r32_m32      
  movq %rdi, 0x38(%rsp)         #  38    0x13cb72  5      OPC=movq_m64_r64      
  cmpl %edx, %esi               #  39    0x13cb77  2      OPC=cmpl_r32_r32      
  je .L_13cba0                  #  40    0x13cb79  2      OPC=je_label          
  movl 0x8(%rcx), %eax          #  41    0x13cb7b  3      OPC=movl_r32_m32      
  cmpl %edx, %eax               #  42    0x13cb7e  2      OPC=cmpl_r32_r32      
  jne .L_13cbf4                 #  43    0x13cb80  2      OPC=jne_label         
.L_13cb81:                      #        0x13cb82  0      OPC=<label>           
  lock                          #  44    0x13cb82  1      OPC=lock              
  subl $0x1, 0x18(%r14)         #  45    0x13cb83  5      OPC=subl_m32_imm8     
  nop                           #  46    0x13cb88  1      OPC=nop               
  je .L_13ccf0                  #  47    0x13cb89  6      OPC=je_label_1        
.L_13cb8d:                      #        0x13cb8f  0      OPC=<label>           
  addq $0x48, %rsp              #  48    0x13cb8f  4      OPC=addq_r64_imm8     
  movl %r15d, %eax              #  49    0x13cb93  3      OPC=movl_r32_r32      
  popq %rbx                     #  50    0x13cb96  1      OPC=popq_r64_1        
  popq %rbp                     #  51    0x13cb97  1      OPC=popq_r64_1        
  popq %r12                     #  52    0x13cb98  2      OPC=popq_r64_1        
  popq %r13                     #  53    0x13cb9a  2      OPC=popq_r64_1        
  popq %r14                     #  54    0x13cb9c  2      OPC=popq_r64_1        
  popq %r15                     #  55    0x13cb9e  2      OPC=popq_r64_1        
  retq                          #  56    0x13cba0  1      OPC=retq              
  nop                           #  57    0x13cba1  1      OPC=nop               
.L_13cba0:                      #        0x13cba2  0      OPC=<label>           
  movl 0x34(%rsp), %r15d        #  58    0x13cba2  5      OPC=movl_r32_m32      
  movl $0xffffffff, %r8d        #  59    0x13cba7  7      OPC=movl_r32_imm32_1  
  cmpl $0x1, %r15d              #  60    0x13cbae  4      OPC=cmpl_r32_imm8     
  je .L_13cd00                  #  61    0x13cbb2  6      OPC=je_label_1        
.L_13cbb5:                      #        0x13cbb8  0      OPC=<label>           
  cmpl $0xffffffff, %r15d       #  62    0x13cbb8  7      OPC=cmpl_r32_imm32    
  nop                           #  63    0x13cbbf  1      OPC=nop               
  nop                           #  64    0x13cbc0  1      OPC=nop               
  nop                           #  65    0x13cbc1  1      OPC=nop               
  nop                           #  66    0x13cbc2  1      OPC=nop               
  je .L_13cd50                  #  67    0x13cbc3  6      OPC=je_label_1        
  movq 0x2842ba(%rip), %rax     #  68    0x13cbc9  7      OPC=movq_r64_m64      
  xorl %r15d, %r15d             #  69    0x13cbd0  3      OPC=xorl_r32_r32      
  movl $0x0, (%rax)             #  70    0x13cbd3  6      OPC=movl_m32_imm32    
  nop                           #  71    0x13cbd9  1      OPC=nop               
.L_13cbd0:                      #        0x13cbda  0      OPC=<label>           
  cmpl $0xffffffff, %r8d        #  72    0x13cbda  7      OPC=cmpl_r32_imm32    
  nop                           #  73    0x13cbe1  1      OPC=nop               
  nop                           #  74    0x13cbe2  1      OPC=nop               
  nop                           #  75    0x13cbe3  1      OPC=nop               
  nop                           #  76    0x13cbe4  1      OPC=nop               
  je .L_13cbe0                  #  77    0x13cbe5  2      OPC=je_label          
.L_13cbd6:                      #        0x13cbe7  0      OPC=<label>           
  movslq %r8d, %rdi             #  78    0x13cbe7  3      OPC=movslq_r64_r32    
  movl $0x3, %eax               #  79    0x13cbea  5      OPC=movl_r32_imm32    
  syscall                       #  80    0x13cbef  2      OPC=syscall           
.L_13cbe0:                      #        0x13cbf1  0      OPC=<label>           
  cmpq $0xff, %r14              #  81    0x13cbf1  4      OPC=cmpq_r64_imm8     
  je .L_13cb8d                  #  82    0x13cbf5  2      OPC=je_label          
  movq (%r14), %rcx             #  83    0x13cbf7  3      OPC=movq_r64_m64      
  movl 0x2c(%rsp), %edx         #  84    0x13cbfa  4      OPC=movl_r32_m32      
  movl 0x8(%rcx), %eax          #  85    0x13cbfe  3      OPC=movl_r32_m32      
  cmpl %edx, %eax               #  86    0x13cc01  2      OPC=cmpl_r32_r32      
  je .L_13cb81                  #  87    0x13cc03  2      OPC=je_label          
.L_13cbf4:                      #        0x13cc05  0      OPC=<label>           
  testb $0x1, %al               #  88    0x13cc05  2      OPC=testb_al_imm8     
  movl %eax, 0x2c(%rsp)         #  89    0x13cc07  4      OPC=movl_m32_r32      
  jne .L_13cc28                 #  90    0x13cc0b  2      OPC=jne_label         
  addl $0x1, %ebx               #  91    0x13cc0d  3      OPC=addl_r32_imm8     
  cmpl $0x5, %ebx               #  92    0x13cc10  3      OPC=cmpl_r32_imm8     
  je .L_13cc28                  #  93    0x13cc13  2      OPC=je_label          
  cmpl $0xffffffff, %r15d       #  94    0x13cc15  7      OPC=cmpl_r32_imm32    
  nop                           #  95    0x13cc1c  1      OPC=nop               
  nop                           #  96    0x13cc1d  1      OPC=nop               
  nop                           #  97    0x13cc1e  1      OPC=nop               
  nop                           #  98    0x13cc1f  1      OPC=nop               
  jne .L_13cb28                 #  99    0x13cc20  6      OPC=jne_label_1       
  lock                          #  100   0x13cc26  1      OPC=lock              
  subl $0x1, 0x18(%r14)         #  101   0x13cc27  5      OPC=subl_m32_imm8     
  nop                           #  102   0x13cc2c  1      OPC=nop               
  je .L_13cd40                  #  103   0x13cc2d  6      OPC=je_label_1        
.L_13cc1a:                      #        0x13cc33  0      OPC=<label>           
  movl $0xffffffff, %r15d       #  104   0x13cc33  7      OPC=movl_r32_imm32_1  
  jmpq .L_13cb8d                #  105   0x13cc3a  5      OPC=jmpq_label_1      
  nop                           #  106   0x13cc3f  1      OPC=nop               
  nop                           #  107   0x13cc40  1      OPC=nop               
  nop                           #  108   0x13cc41  1      OPC=nop               
.L_13cc28:                      #        0x13cc42  0      OPC=<label>           
  lock                          #  109   0x13cc42  1      OPC=lock              
  subl $0x1, 0x18(%r14)         #  110   0x13cc43  5      OPC=subl_m32_imm8     
  nop                           #  111   0x13cc48  1      OPC=nop               
  je .L_13cd40                  #  112   0x13cc49  6      OPC=je_label_1        
.L_13cc34:                      #        0x13cc4f  0      OPC=<label>           
  cmpl $0xffffffff, %r15d       #  113   0x13cc4f  7      OPC=cmpl_r32_imm32    
  nop                           #  114   0x13cc56  1      OPC=nop               
  nop                           #  115   0x13cc57  1      OPC=nop               
  nop                           #  116   0x13cc58  1      OPC=nop               
  nop                           #  117   0x13cc59  1      OPC=nop               
  je .L_13cc1a                  #  118   0x13cc5a  2      OPC=je_label          
  movq $0xffffffff, %r14        #  119   0x13cc5c  7      OPC=movq_r64_imm32    
.L_13cc41:                      #        0x13cc63  0      OPC=<label>           
  movq (%rsp), %rcx             #  120   0x13cc63  4      OPC=movq_r64_m64      
  movl $0x10, %r8d              #  121   0x13cc67  6      OPC=movl_r32_imm32    
  movl $0x13, %edx              #  122   0x13cc6d  5      OPC=movl_r32_imm32    
  movq %rbp, %rsi               #  123   0x13cc72  3      OPC=movq_r64_r64      
  movq %r12, %rdi               #  124   0x13cc75  3      OPC=movq_r64_r64      
  callq .__nscd_open_socket     #  125   0x13cc78  5      OPC=callq_label       
  cmpl $0xffffffff, %eax        #  126   0x13cc7d  6      OPC=cmpl_r32_imm32    
  nop                           #  127   0x13cc83  1      OPC=nop               
  nop                           #  128   0x13cc84  1      OPC=nop               
  nop                           #  129   0x13cc85  1      OPC=nop               
  movl %eax, %r8d               #  130   0x13cc86  3      OPC=movl_r32_r32      
  je .L_13cd60                  #  131   0x13cc89  6      OPC=je_label_1        
  movl 0x34(%rsp), %r15d        #  132   0x13cc8f  5      OPC=movl_r32_m32      
  cmpl $0x1, %r15d              #  133   0x13cc94  4      OPC=cmpl_r32_imm8     
  jne .L_13cbb5                 #  134   0x13cc98  6      OPC=jne_label_1       
  movslq 0x3c(%rsp), %r10       #  135   0x13cc9e  5      OPC=movslq_r64_m32    
  movl %r8d, 0x10(%rsp)         #  136   0x13cca3  5      OPC=movl_m32_r32      
  movq %r10, %rdi               #  137   0x13cca8  3      OPC=movq_r64_r64      
  movq %r10, 0x8(%rsp)          #  138   0x13ccab  5      OPC=movq_m64_r64      
  callq .memalign_plt           #  139   0x13ccb0  5      OPC=callq_label       
  testq %rax, %rax              #  140   0x13ccb5  3      OPC=testq_r64_r64     
  movq %rax, 0x18(%rsp)         #  141   0x13ccb8  5      OPC=movq_m64_r64      
  movq %rax, %r15               #  142   0x13ccbd  3      OPC=movq_r64_r64      
  movq 0x8(%rsp), %r10          #  143   0x13ccc0  5      OPC=movq_r64_m64      
  movl 0x10(%rsp), %r8d         #  144   0x13ccc5  5      OPC=movl_r32_m32      
  je .L_13cd72                  #  145   0x13ccca  6      OPC=je_label_1        
  movq %r10, %rdx               #  146   0x13ccd0  3      OPC=movq_r64_r64      
  movl %r8d, %edi               #  147   0x13ccd3  3      OPC=movl_r32_r32      
  movq %rax, %rsi               #  148   0x13ccd6  3      OPC=movq_r64_r64      
  movq %r10, 0x10(%rsp)         #  149   0x13ccd9  5      OPC=movq_m64_r64      
  movl %r8d, 0x8(%rsp)          #  150   0x13ccde  5      OPC=movl_m32_r32      
  callq .__readall              #  151   0x13cce3  5      OPC=callq_label       
  movq 0x10(%rsp), %r10         #  152   0x13cce8  5      OPC=movq_r64_m64      
  movl 0x8(%rsp), %r8d          #  153   0x13cced  5      OPC=movl_r32_m32      
  cmpq %r10, %rax               #  154   0x13ccf2  3      OPC=cmpq_r64_r64      
  je .L_13cd09                  #  155   0x13ccf5  2      OPC=je_label          
  movq 0x18(%rsp), %rdi         #  156   0x13ccf7  5      OPC=movq_r64_m64      
  movl $0xffffffff, %r15d       #  157   0x13ccfc  7      OPC=movl_r32_imm32_1  
  callq .L_1f8c0                #  158   0x13cd03  5      OPC=callq_label       
  movl 0x8(%rsp), %r8d          #  159   0x13cd08  5      OPC=movl_r32_m32      
  jmpq .L_13cbd6                #  160   0x13cd0d  5      OPC=jmpq_label_1      
  nop                           #  161   0x13cd12  1      OPC=nop               
  nop                           #  162   0x13cd13  1      OPC=nop               
  nop                           #  163   0x13cd14  1      OPC=nop               
  nop                           #  164   0x13cd15  1      OPC=nop               
  nop                           #  165   0x13cd16  1      OPC=nop               
  nop                           #  166   0x13cd17  1      OPC=nop               
  nop                           #  167   0x13cd18  1      OPC=nop               
.L_13ccf0:                      #        0x13cd19  0      OPC=<label>           
  movq %r14, %rdi               #  168   0x13cd19  3      OPC=movq_r64_r64      
  callq .__nscd_unmap           #  169   0x13cd1c  5      OPC=callq_label       
  jmpq .L_13cb8d                #  170   0x13cd21  5      OPC=jmpq_label_1      
  nop                           #  171   0x13cd26  1      OPC=nop               
  nop                           #  172   0x13cd27  1      OPC=nop               
  nop                           #  173   0x13cd28  1      OPC=nop               
.L_13cd00:                      #        0x13cd29  0      OPC=<label>           
  movslq 0x3c(%rsp), %r10       #  174   0x13cd29  5      OPC=movslq_r64_m32    
  leaq 0x28(%rax), %r15         #  175   0x13cd2e  4      OPC=leaq_r64_m16      
.L_13cd09:                      #        0x13cd32  0      OPC=<label>           
  movq %r15, 0x20(%r13)         #  176   0x13cd32  4      OPC=movq_m64_r64      
  movq %r15, 0x30(%r13)         #  177   0x13cd36  4      OPC=movq_m64_r64      
  movl $0x1, %r15d              #  178   0x13cd3a  6      OPC=movl_r32_imm32    
  movq %r10, 0x28(%r13)         #  179   0x13cd40  4      OPC=movq_m64_r64      
  movl $0x1, 0x38(%r13)         #  180   0x13cd44  8      OPC=movl_m32_imm32    
  movq $0xffffffff, 0x50(%r13)  #  181   0x13cd4c  8      OPC=movq_m64_imm32    
  movq $0x0, 0x40(%r13)         #  182   0x13cd54  8      OPC=movq_m64_imm32    
  movq $0x0, 0x48(%r13)         #  183   0x13cd5c  8      OPC=movq_m64_imm32    
  jmpq .L_13cbd0                #  184   0x13cd64  5      OPC=jmpq_label_1      
.L_13cd40:                      #        0x13cd69  0      OPC=<label>           
  movq %r14, %rdi               #  185   0x13cd69  3      OPC=movq_r64_r64      
  callq .__nscd_unmap           #  186   0x13cd6c  5      OPC=callq_label       
  jmpq .L_13cc34                #  187   0x13cd71  5      OPC=jmpq_label_1      
  nop                           #  188   0x13cd76  1      OPC=nop               
  nop                           #  189   0x13cd77  1      OPC=nop               
  nop                           #  190   0x13cd78  1      OPC=nop               
.L_13cd50:                      #        0x13cd79  0      OPC=<label>           
  movl $0x1, 0x28a11a(%rip)     #  191   0x13cd79  10     OPC=movl_m32_imm32    
  jmpq .L_13cbd0                #  192   0x13cd83  5      OPC=jmpq_label_1      
  nop                           #  193   0x13cd88  1      OPC=nop               
.L_13cd60:                      #        0x13cd89  0      OPC=<label>           
  movl $0x1, 0x28a10a(%rip)     #  194   0x13cd89  10     OPC=movl_m32_imm32    
  movl %r8d, %r15d              #  195   0x13cd93  3      OPC=movl_r32_r32      
  jmpq .L_13cbe0                #  196   0x13cd96  5      OPC=jmpq_label_1      
.L_13cd72:                      #        0x13cd9b  0      OPC=<label>           
  movl $0xffffffff, %r15d       #  197   0x13cd9b  7      OPC=movl_r32_imm32_1  
  jmpq .L_13cbd6                #  198   0x13cda2  5      OPC=jmpq_label_1      
  nop                           #  199   0x13cda7  1      OPC=nop               
  nop                           #  200   0x13cda8  1      OPC=nop               
  nop                           #  201   0x13cda9  1      OPC=nop               
                                                                                
.size __nscd_setnetgrent, .-__nscd_setnetgrent

