  .text
  .globl __gconv_compare_alias_cache
  .type __gconv_compare_alias_cache, @function

#! file-offset 0x2a170
#! rip-offset  0x2a170
#! capacity    432 bytes

# Text                         #  Line  RIP      Bytes  Opcode                
.__gconv_compare_alias_cache:  #        0x2a170  0      OPC=<label>           
  pushq %r15                   #  1     0x2a170  2      OPC=pushq_r64_1       
  pushq %r14                   #  2     0x2a172  2      OPC=pushq_r64_1       
  pushq %r13                   #  3     0x2a174  2      OPC=pushq_r64_1       
  pushq %r12                   #  4     0x2a176  2      OPC=pushq_r64_1       
  pushq %rbp                   #  5     0x2a178  1      OPC=pushq_r64_1       
  pushq %rbx                   #  6     0x2a179  1      OPC=pushq_r64_1       
  subq $0x38, %rsp             #  7     0x2a17a  4      OPC=subq_r64_imm8     
  movq 0x3988eb(%rip), %r14    #  8     0x2a17e  7      OPC=movq_r64_m64      
  testq %r14, %r14             #  9     0x2a185  3      OPC=testq_r64_r64     
  je .L_2a30f                  #  10    0x2a188  6      OPC=je_label_1        
  movzwl 0x4(%r14), %eax       #  11    0x2a18e  5      OPC=movzwl_r32_m16    
  movq %rdx, 0x20(%rsp)        #  12    0x2a193  5      OPC=movq_m64_r64      
  movq %rsi, 0x18(%rsp)        #  13    0x2a198  5      OPC=movq_m64_r64      
  movq %rdi, 0x8(%rsp)         #  14    0x2a19d  5      OPC=movq_m64_r64      
  movzwl 0x6(%r14), %r12d      #  15    0x2a1a2  5      OPC=movzwl_r32_m16    
  movq %rax, 0x10(%rsp)        #  16    0x2a1a7  5      OPC=movq_m64_r64      
  callq .__hash_string         #  17    0x2a1ac  5      OPC=callq_label       
  movzwl 0x8(%r14), %r13d      #  18    0x2a1b1  5      OPC=movzwl_r32_m16    
  xorl %edx, %edx              #  19    0x2a1b6  2      OPC=xorl_r32_r32      
  movl %eax, %ebp              #  20    0x2a1b8  2      OPC=movl_r32_r32      
  movl 0x3988a8(%rip), %edi    #  21    0x2a1ba  6      OPC=movl_r32_m32      
  divl %r13d                   #  22    0x2a1c0  3      OPC=divl_r32          
  leal -0x2(%r13), %esi        #  23    0x2a1c3  4      OPC=leal_r32_m16      
  movl %ebp, %eax              #  24    0x2a1c7  2      OPC=movl_r32_r32      
  movl %edx, %ebx              #  25    0x2a1c9  2      OPC=movl_r32_r32      
  xorl %edx, %edx              #  26    0x2a1cb  2      OPC=xorl_r32_r32      
  divl %esi                    #  27    0x2a1cd  2      OPC=divl_r32          
  movzwl 0x4(%r14), %eax       #  28    0x2a1cf  5      OPC=movzwl_r32_m16    
  subl %eax, %edi              #  29    0x2a1d4  2      OPC=subl_r32_r32      
  leal 0x1(%rdx), %ebp         #  30    0x2a1d6  3      OPC=leal_r32_m16      
  movl %edi, 0x28(%rsp)        #  31    0x2a1d9  4      OPC=movl_m32_r32      
  jmpq .L_2a20c                #  32    0x2a1dd  2      OPC=jmpq_label        
  nop                          #  33    0x2a1df  1      OPC=nop               
.L_2a1e0:                      #        0x2a1e0  0      OPC=<label>           
  movzwl %si, %eax             #  34    0x2a1e0  3      OPC=movzwl_r32_r16    
  cmpl %eax, 0x28(%rsp)        #  35    0x2a1e3  4      OPC=cmpl_m32_r32      
  jbe .L_2a1ff                 #  36    0x2a1e7  2      OPC=jbe_label         
  addq 0x10(%rsp), %rsi        #  37    0x2a1e9  5      OPC=addq_r64_m64      
  movq 0x8(%rsp), %rdi         #  38    0x2a1ee  5      OPC=movq_r64_m64      
  addq %r14, %rsi              #  39    0x2a1f3  3      OPC=addq_r64_r64      
  callq .__GI_strcmp           #  40    0x2a1f6  5      OPC=callq_label       
  testl %eax, %eax             #  41    0x2a1fb  2      OPC=testl_r32_r32     
  je .L_2a250                  #  42    0x2a1fd  2      OPC=je_label          
.L_2a1ff:                      #        0x2a1ff  0      OPC=<label>           
  addl %ebp, %ebx              #  43    0x2a1ff  2      OPC=addl_r32_r32      
  movl %ebx, %eax              #  44    0x2a201  2      OPC=movl_r32_r32      
  subl %r13d, %eax             #  45    0x2a203  3      OPC=subl_r32_r32      
  cmpl %ebx, %r13d             #  46    0x2a206  3      OPC=cmpl_r32_r32      
  cmovbel %eax, %ebx           #  47    0x2a209  3      OPC=cmovbel_r32_r32   
.L_2a20c:                      #        0x2a20c  0      OPC=<label>           
  movl %ebx, %eax              #  48    0x2a20c  2      OPC=movl_r32_r32      
  leaq (%r12,%rax,4), %rdx     #  49    0x2a20e  4      OPC=leaq_r64_m16      
  leaq (%r14,%rdx,1), %r15     #  50    0x2a212  4      OPC=leaq_r64_m16      
  movzwl (%r15), %esi          #  51    0x2a216  4      OPC=movzwl_r32_m16    
  testw %si, %si               #  52    0x2a21a  3      OPC=testw_r16_r16     
  jne .L_2a1e0                 #  53    0x2a21d  2      OPC=jne_label         
.L_2a21f:                      #        0x2a21f  0      OPC=<label>           
  movq 0x18(%rsp), %rsi        #  54    0x2a21f  5      OPC=movq_r64_m64      
  movq 0x8(%rsp), %rdi         #  55    0x2a224  5      OPC=movq_r64_m64      
  callq .__GI_strcmp           #  56    0x2a229  5      OPC=callq_label       
  movq 0x20(%rsp), %rcx        #  57    0x2a22e  5      OPC=movq_r64_m64      
  movl %eax, (%rcx)            #  58    0x2a233  2      OPC=movl_m32_r32      
  xorl %eax, %eax              #  59    0x2a235  2      OPC=xorl_r32_r32      
.L_2a237:                      #        0x2a237  0      OPC=<label>           
  addq $0x38, %rsp             #  60    0x2a237  4      OPC=addq_r64_imm8     
  popq %rbx                    #  61    0x2a23b  1      OPC=popq_r64_1        
  popq %rbp                    #  62    0x2a23c  1      OPC=popq_r64_1        
  popq %r12                    #  63    0x2a23d  2      OPC=popq_r64_1        
  popq %r13                    #  64    0x2a23f  2      OPC=popq_r64_1        
  popq %r14                    #  65    0x2a241  2      OPC=popq_r64_1        
  popq %r15                    #  66    0x2a243  2      OPC=popq_r64_1        
  retq                         #  67    0x2a245  1      OPC=retq              
  nop                          #  68    0x2a246  1      OPC=nop               
  nop                          #  69    0x2a247  1      OPC=nop               
  nop                          #  70    0x2a248  1      OPC=nop               
  nop                          #  71    0x2a249  1      OPC=nop               
  nop                          #  72    0x2a24a  1      OPC=nop               
  nop                          #  73    0x2a24b  1      OPC=nop               
  nop                          #  74    0x2a24c  1      OPC=nop               
  nop                          #  75    0x2a24d  1      OPC=nop               
  nop                          #  76    0x2a24e  1      OPC=nop               
  nop                          #  77    0x2a24f  1      OPC=nop               
.L_2a250:                      #        0x2a250  0      OPC=<label>           
  movzwl 0x2(%r15), %eax       #  78    0x2a250  5      OPC=movzwl_r32_m16    
  movq 0x18(%rsp), %rdi        #  79    0x2a255  5      OPC=movq_r64_m64      
  movq 0x39880f(%rip), %r15    #  80    0x2a25a  7      OPC=movq_r64_m64      
  movw %ax, 0x2e(%rsp)         #  81    0x2a261  5      OPC=movw_m16_r16      
  movzwl 0x4(%r15), %r13d      #  82    0x2a266  5      OPC=movzwl_r32_m16    
  movzwl 0x6(%r15), %r12d      #  83    0x2a26b  5      OPC=movzwl_r32_m16    
  callq .__hash_string         #  84    0x2a270  5      OPC=callq_label       
  movzwl 0x8(%r15), %ebp       #  85    0x2a275  5      OPC=movzwl_r32_m16    
  xorl %edx, %edx              #  86    0x2a27a  2      OPC=xorl_r32_r32      
  movl %eax, %esi              #  87    0x2a27c  2      OPC=movl_r32_r32      
  divl %ebp                    #  88    0x2a27e  2      OPC=divl_r32          
  leal -0x2(%rbp), %edi        #  89    0x2a280  3      OPC=leal_r32_m16      
  movl %esi, %eax              #  90    0x2a283  2      OPC=movl_r32_r32      
  movl %edx, %ebx              #  91    0x2a285  2      OPC=movl_r32_r32      
  xorl %edx, %edx              #  92    0x2a287  2      OPC=xorl_r32_r32      
  divl %edi                    #  93    0x2a289  2      OPC=divl_r32          
  movl 0x3987d7(%rip), %edi    #  94    0x2a28b  6      OPC=movl_r32_m32      
  leal 0x1(%rdx), %eax         #  95    0x2a291  3      OPC=leal_r32_m16      
  movl %eax, 0x10(%rsp)        #  96    0x2a294  4      OPC=movl_m32_r32      
  movzwl 0x4(%r15), %eax       #  97    0x2a298  5      OPC=movzwl_r32_m16    
  subl %eax, %edi              #  98    0x2a29d  2      OPC=subl_r32_r32      
  movl %edi, 0x28(%rsp)        #  99    0x2a29f  4      OPC=movl_m32_r32      
  jmpq .L_2a2d5                #  100   0x2a2a3  2      OPC=jmpq_label        
  nop                          #  101   0x2a2a5  1      OPC=nop               
  nop                          #  102   0x2a2a6  1      OPC=nop               
  nop                          #  103   0x2a2a7  1      OPC=nop               
.L_2a2a8:                      #        0x2a2a8  0      OPC=<label>           
  movzwl %ax, %esi             #  104   0x2a2a8  3      OPC=movzwl_r32_r16    
  cmpl %esi, 0x28(%rsp)        #  105   0x2a2ab  4      OPC=cmpl_m32_r32      
  jbe .L_2a2c8                 #  106   0x2a2af  2      OPC=jbe_label         
  movzwl %ax, %esi             #  107   0x2a2b1  3      OPC=movzwl_r32_r16    
  movq 0x18(%rsp), %rdi        #  108   0x2a2b4  5      OPC=movq_r64_m64      
  addq %r13, %rsi              #  109   0x2a2b9  3      OPC=addq_r64_r64      
  addq %r15, %rsi              #  110   0x2a2bc  3      OPC=addq_r64_r64      
  callq .__GI_strcmp           #  111   0x2a2bf  5      OPC=callq_label       
  testl %eax, %eax             #  112   0x2a2c4  2      OPC=testl_r32_r32     
  je .L_2a2ed                  #  113   0x2a2c6  2      OPC=je_label          
.L_2a2c8:                      #        0x2a2c8  0      OPC=<label>           
  addl 0x10(%rsp), %ebx        #  114   0x2a2c8  4      OPC=addl_r32_m32      
  movl %ebx, %eax              #  115   0x2a2cc  2      OPC=movl_r32_r32      
  subl %ebp, %eax              #  116   0x2a2ce  2      OPC=subl_r32_r32      
  cmpl %ebx, %ebp              #  117   0x2a2d0  2      OPC=cmpl_r32_r32      
  cmovbel %eax, %ebx           #  118   0x2a2d2  3      OPC=cmovbel_r32_r32   
.L_2a2d5:                      #        0x2a2d5  0      OPC=<label>           
  movl %ebx, %eax              #  119   0x2a2d5  2      OPC=movl_r32_r32      
  leaq (%r12,%rax,4), %rdx     #  120   0x2a2d7  4      OPC=leaq_r64_m16      
  leaq (%r15,%rdx,1), %r14     #  121   0x2a2db  4      OPC=leaq_r64_m16      
  movzwl (%r14), %eax          #  122   0x2a2df  4      OPC=movzwl_r32_m16    
  testw %ax, %ax               #  123   0x2a2e3  3      OPC=testw_r16_r16     
  jne .L_2a2a8                 #  124   0x2a2e6  2      OPC=jne_label         
  jmpq .L_2a21f                #  125   0x2a2e8  5      OPC=jmpq_label_1      
.L_2a2ed:                      #        0x2a2ed  0      OPC=<label>           
  movzwl 0x2(%r14), %edx       #  126   0x2a2ed  5      OPC=movzwl_r32_m16    
  movzwl 0x2e(%rsp), %ecx      #  127   0x2a2f2  5      OPC=movzwl_r32_m16    
  movq 0x20(%rsp), %rdi        #  128   0x2a2f7  5      OPC=movq_r64_m64      
  subl %edx, %ecx              #  129   0x2a2fc  2      OPC=subl_r32_r32      
  movl %ecx, (%rdi)            #  130   0x2a2fe  2      OPC=movl_m32_r32      
  addq $0x38, %rsp             #  131   0x2a300  4      OPC=addq_r64_imm8     
  popq %rbx                    #  132   0x2a304  1      OPC=popq_r64_1        
  popq %rbp                    #  133   0x2a305  1      OPC=popq_r64_1        
  popq %r12                    #  134   0x2a306  2      OPC=popq_r64_1        
  popq %r13                    #  135   0x2a308  2      OPC=popq_r64_1        
  popq %r14                    #  136   0x2a30a  2      OPC=popq_r64_1        
  popq %r15                    #  137   0x2a30c  2      OPC=popq_r64_1        
  retq                         #  138   0x2a30e  1      OPC=retq              
.L_2a30f:                      #        0x2a30f  0      OPC=<label>           
  movl $0xffffffff, %eax       #  139   0x2a30f  6      OPC=movl_r32_imm32_1  
  jmpq .L_2a237                #  140   0x2a315  5      OPC=jmpq_label_1      
  nop                          #  141   0x2a31a  1      OPC=nop               
  nop                          #  142   0x2a31b  1      OPC=nop               
  nop                          #  143   0x2a31c  1      OPC=nop               
  nop                          #  144   0x2a31d  1      OPC=nop               
  nop                          #  145   0x2a31e  1      OPC=nop               
  nop                          #  146   0x2a31f  1      OPC=nop               
  nop                          #  147   0x2a320  1      OPC=nop               
                                                                              
.size __gconv_compare_alias_cache, .-__gconv_compare_alias_cache

