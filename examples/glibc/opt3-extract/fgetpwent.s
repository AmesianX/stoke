  .text
  .globl fgetpwent
  .type fgetpwent, @function

#! file-offset 0xc79b0
#! rip-offset  0xc79b0
#! capacity    480 bytes

# Text                               #  Line  RIP      Bytes  Opcode                
.fgetpwent:                          #        0xc79b0  0      OPC=<label>           
  pushq %r15                         #  1     0xc79b0  2      OPC=pushq_r64_1       
  pushq %r14                         #  2     0xc79b2  2      OPC=pushq_r64_1       
  pushq %r13                         #  3     0xc79b4  2      OPC=pushq_r64_1       
  pushq %r12                         #  4     0xc79b6  2      OPC=pushq_r64_1       
  pushq %rbp                         #  5     0xc79b8  1      OPC=pushq_r64_1       
  pushq %rbx                         #  6     0xc79b9  1      OPC=pushq_r64_1       
  movq %rdi, %rbx                    #  7     0xc79ba  3      OPC=movq_r64_r64      
  subq $0x38, %rsp                   #  8     0xc79bd  4      OPC=subq_r64_imm8     
  leaq 0x20(%rsp), %rbp              #  9     0xc79c1  5      OPC=leaq_r64_m16      
  movq %rbp, %rsi                    #  10    0xc79c6  3      OPC=movq_r64_r64      
  callq ._IO_fgetpos64__GLIBC_2_2_5  #  11    0xc79c9  5      OPC=callq_label       
  testl %eax, %eax                   #  12    0xc79ce  2      OPC=testl_r32_r32     
  jne .L_c7b52                       #  13    0xc79d0  6      OPC=jne_label_1       
  movl $0x1, %esi                    #  14    0xc79d6  5      OPC=movl_r32_imm32    
  cmpl $0x0, 0x2ff21e(%rip)          #  15    0xc79db  7      OPC=cmpl_m32_imm8     
  je .L_c79f0                        #  16    0xc79e2  2      OPC=je_label          
  lock                               #  17    0xc79e4  1      OPC=lock              
  cmpxchgl %esi, 0x2fc64c(%rip)      #  18    0xc79e5  7      OPC=cmpxchgl_m32_r32  
  nop                                #  19    0xc79ec  1      OPC=nop               
  jne .L_c79f9                       #  20    0xc79ed  2      OPC=jne_label         
  jmpq .L_c7a13                      #  21    0xc79ef  2      OPC=jmpq_label        
.L_c79f0:                            #        0xc79f1  0      OPC=<label>           
  cmpxchgl %esi, 0x2fc641(%rip)      #  22    0xc79f1  7      OPC=cmpxchgl_m32_r32  
  je .L_c7a13                        #  23    0xc79f8  2      OPC=je_label          
.L_c79f9:                            #        0xc79fa  0      OPC=<label>           
  leaq 0x2fc638(%rip), %rdi          #  24    0xc79fa  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                   #  25    0xc7a01  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private     #  26    0xc7a08  5      OPC=callq_label       
  addq $0x80, %rsp                   #  27    0xc7a0d  7      OPC=addq_r64_imm32    
.L_c7a13:                            #        0xc7a14  0      OPC=<label>           
  movq 0x2faeb6(%rip), %rdx          #  28    0xc7a14  7      OPC=movq_r64_m64      
  testq %rdx, %rdx                   #  29    0xc7a1b  3      OPC=testq_r64_r64     
  je .L_c7b63                        #  30    0xc7a1e  6      OPC=je_label_1        
.L_c7a23:                            #        0xc7a24  0      OPC=<label>           
  movq 0x2f9456(%rip), %r13          #  31    0xc7a24  7      OPC=movq_r64_m64      
  leaq 0x18(%rsp), %r12              #  32    0xc7a2b  5      OPC=leaq_r64_m16      
  jmpq .L_c7a59                      #  33    0xc7a30  2      OPC=jmpq_label        
  nop                                #  34    0xc7a32  1      OPC=nop               
  nop                                #  35    0xc7a33  1      OPC=nop               
  nop                                #  36    0xc7a34  1      OPC=nop               
  nop                                #  37    0xc7a35  1      OPC=nop               
  nop                                #  38    0xc7a36  1      OPC=nop               
  nop                                #  39    0xc7a37  1      OPC=nop               
  nop                                #  40    0xc7a38  1      OPC=nop               
.L_c7a38:                            #        0xc7a39  0      OPC=<label>           
  movq %rbp, %rsi                    #  41    0xc7a39  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                    #  42    0xc7a3c  3      OPC=movq_r64_r64      
  movq %rax, 0x2fae8b(%rip)          #  43    0xc7a3f  7      OPC=movq_m64_r64      
  callq ._IO_fsetpos64__GLIBC_2_2_5  #  44    0xc7a46  5      OPC=callq_label       
  testl %eax, %eax                   #  45    0xc7a4b  2      OPC=testl_r32_r32     
  jne .L_c7b40                       #  46    0xc7a4d  6      OPC=jne_label_1       
  movq 0x2fae77(%rip), %rdx          #  47    0xc7a53  7      OPC=movq_r64_m64      
.L_c7a59:                            #        0xc7a5a  0      OPC=<label>           
  testq %rdx, %rdx                   #  48    0xc7a5a  3      OPC=testq_r64_r64     
  je .L_c7ae0                        #  49    0xc7a5d  6      OPC=je_label_1        
  movq 0x2fc5c7(%rip), %rcx          #  50    0xc7a63  7      OPC=movq_r64_m64      
  leaq 0x2fc590(%rip), %rsi          #  51    0xc7a6a  7      OPC=leaq_r64_m16      
  movq %r12, %r8                     #  52    0xc7a71  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                    #  53    0xc7a74  3      OPC=movq_r64_r64      
  callq .fgetpwent_r                 #  54    0xc7a77  5      OPC=callq_label       
  cmpl $0x22, %eax                   #  55    0xc7a7c  3      OPC=cmpl_r32_imm8     
  jne .L_c7ad0                       #  56    0xc7a7f  2      OPC=jne_label         
  movq 0x2fc5a9(%rip), %rax          #  57    0xc7a81  7      OPC=movq_r64_m64      
  movq 0x2fae42(%rip), %r14          #  58    0xc7a88  7      OPC=movq_r64_m64      
  leaq 0x400(%rax), %rsi             #  59    0xc7a8f  7      OPC=leaq_r64_m16      
  movq %r14, %rdi                    #  60    0xc7a96  3      OPC=movq_r64_r64      
  movq %rsi, 0x2fc591(%rip)          #  61    0xc7a99  7      OPC=movq_m64_r64      
  callq .__tls_get_addr_plt          #  62    0xc7aa0  5      OPC=callq_label       
  testq %rax, %rax                   #  63    0xc7aa5  3      OPC=testq_r64_r64     
  jne .L_c7a38                       #  64    0xc7aa8  2      OPC=jne_label         
  movl (%r13), %r15d                 #  65    0xc7aaa  4      OPC=movl_r32_m32      
  nop                                #  66    0xc7aae  1      OPC=nop               
  movq %r14, %rdi                    #  67    0xc7aaf  3      OPC=movq_r64_r64      
  movq %rax, 0x8(%rsp)               #  68    0xc7ab2  5      OPC=movq_m64_r64      
  callq .L_1f8c0                     #  69    0xc7ab7  5      OPC=callq_label       
  movq 0x8(%rsp), %rax               #  70    0xc7abc  5      OPC=movq_r64_m64      
  movl %r15d, (%r13)                 #  71    0xc7ac1  4      OPC=movl_m32_r32      
  nop                                #  72    0xc7ac5  1      OPC=nop               
  jmpq .L_c7a38                      #  73    0xc7ac6  5      OPC=jmpq_label_1      
  nop                                #  74    0xc7acb  1      OPC=nop               
  nop                                #  75    0xc7acc  1      OPC=nop               
  nop                                #  76    0xc7acd  1      OPC=nop               
  nop                                #  77    0xc7ace  1      OPC=nop               
  nop                                #  78    0xc7acf  1      OPC=nop               
  nop                                #  79    0xc7ad0  1      OPC=nop               
.L_c7ad0:                            #        0xc7ad1  0      OPC=<label>           
  cmpq $0x0, 0x2fadf8(%rip)          #  80    0xc7ad1  8      OPC=cmpq_m64_imm8     
  jne .L_c7ae9                       #  81    0xc7ad9  2      OPC=jne_label         
  nop                                #  82    0xc7adb  1      OPC=nop               
  nop                                #  83    0xc7adc  1      OPC=nop               
  nop                                #  84    0xc7add  1      OPC=nop               
  nop                                #  85    0xc7ade  1      OPC=nop               
  nop                                #  86    0xc7adf  1      OPC=nop               
  nop                                #  87    0xc7ae0  1      OPC=nop               
.L_c7ae0:                            #        0xc7ae1  0      OPC=<label>           
  movq $0x0, 0x18(%rsp)              #  88    0xc7ae1  9      OPC=movq_m64_imm32    
.L_c7ae9:                            #        0xc7aea  0      OPC=<label>           
  movl (%r13), %edx                  #  89    0xc7aea  4      OPC=movl_r32_m32      
  nop                                #  90    0xc7aee  1      OPC=nop               
  cmpl $0x0, 0x2ff10b(%rip)          #  91    0xc7aef  7      OPC=cmpl_m32_imm8     
  je .L_c7b02                        #  92    0xc7af6  2      OPC=je_label          
  lock                               #  93    0xc7af8  1      OPC=lock              
  decl 0x2fc53a(%rip)                #  94    0xc7af9  6      OPC=decl_m32          
  nop                                #  95    0xc7aff  1      OPC=nop               
  jne .L_c7b0a                       #  96    0xc7b00  2      OPC=jne_label         
  jmpq .L_c7b24                      #  97    0xc7b02  2      OPC=jmpq_label        
.L_c7b02:                            #        0xc7b04  0      OPC=<label>           
  decl 0x2fc530(%rip)                #  98    0xc7b04  6      OPC=decl_m32          
  je .L_c7b24                        #  99    0xc7b0a  2      OPC=je_label          
.L_c7b0a:                            #        0xc7b0c  0      OPC=<label>           
  leaq 0x2fc527(%rip), %rdi          #  100   0xc7b0c  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                   #  101   0xc7b13  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private   #  102   0xc7b1a  5      OPC=callq_label       
  addq $0x80, %rsp                   #  103   0xc7b1f  7      OPC=addq_r64_imm32    
.L_c7b24:                            #        0xc7b26  0      OPC=<label>           
  movl %edx, (%r13)                  #  104   0xc7b26  4      OPC=movl_m32_r32      
  nop                                #  105   0xc7b2a  1      OPC=nop               
  movq 0x18(%rsp), %rax              #  106   0xc7b2b  5      OPC=movq_r64_m64      
  addq $0x38, %rsp                   #  107   0xc7b30  4      OPC=addq_r64_imm8     
  popq %rbx                          #  108   0xc7b34  1      OPC=popq_r64_1        
  popq %rbp                          #  109   0xc7b35  1      OPC=popq_r64_1        
  popq %r12                          #  110   0xc7b36  2      OPC=popq_r64_1        
  popq %r13                          #  111   0xc7b38  2      OPC=popq_r64_1        
  popq %r14                          #  112   0xc7b3a  2      OPC=popq_r64_1        
  popq %r15                          #  113   0xc7b3c  2      OPC=popq_r64_1        
  retq                               #  114   0xc7b3e  1      OPC=retq              
  nop                                #  115   0xc7b3f  1      OPC=nop               
  nop                                #  116   0xc7b40  1      OPC=nop               
  nop                                #  117   0xc7b41  1      OPC=nop               
.L_c7b40:                            #        0xc7b42  0      OPC=<label>           
  movq $0x0, 0x2fad85(%rip)          #  118   0xc7b42  11     OPC=movq_m64_imm32    
  xorl %edx, %edx                    #  119   0xc7b4d  2      OPC=xorl_r32_r32      
  jmpq .L_c7a59                      #  120   0xc7b4f  5      OPC=jmpq_label_1      
.L_c7b52:                            #        0xc7b54  0      OPC=<label>           
  addq $0x38, %rsp                   #  121   0xc7b54  4      OPC=addq_r64_imm8     
  xorl %eax, %eax                    #  122   0xc7b58  2      OPC=xorl_r32_r32      
  popq %rbx                          #  123   0xc7b5a  1      OPC=popq_r64_1        
  popq %rbp                          #  124   0xc7b5b  1      OPC=popq_r64_1        
  popq %r12                          #  125   0xc7b5c  2      OPC=popq_r64_1        
  popq %r13                          #  126   0xc7b5e  2      OPC=popq_r64_1        
  popq %r14                          #  127   0xc7b60  2      OPC=popq_r64_1        
  popq %r15                          #  128   0xc7b62  2      OPC=popq_r64_1        
  retq                               #  129   0xc7b64  1      OPC=retq              
.L_c7b63:                            #        0xc7b65  0      OPC=<label>           
  movl $0x400, %edi                  #  130   0xc7b65  5      OPC=movl_r32_imm32    
  movq $0x400, 0x2fc4bd(%rip)        #  131   0xc7b6a  11     OPC=movq_m64_imm32    
  callq .memalign_plt                #  132   0xc7b75  5      OPC=callq_label       
  movq %rax, 0x2fad51(%rip)          #  133   0xc7b7a  7      OPC=movq_m64_r64      
  movq %rax, %rdx                    #  134   0xc7b81  3      OPC=movq_r64_r64      
  jmpq .L_c7a23                      #  135   0xc7b84  5      OPC=jmpq_label_1      
  nop                                #  136   0xc7b89  1      OPC=nop               
  nop                                #  137   0xc7b8a  1      OPC=nop               
  nop                                #  138   0xc7b8b  1      OPC=nop               
  nop                                #  139   0xc7b8c  1      OPC=nop               
  nop                                #  140   0xc7b8d  1      OPC=nop               
  nop                                #  141   0xc7b8e  1      OPC=nop               
  nop                                #  142   0xc7b8f  1      OPC=nop               
  nop                                #  143   0xc7b90  1      OPC=nop               
  nop                                #  144   0xc7b91  1      OPC=nop               
                                                                                    
.size fgetpwent, .-fgetpwent

