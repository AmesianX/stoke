  .text
  .globl duplicate_tree
  .type duplicate_tree, @function

#! file-offset 0xd6660
#! rip-offset  0xd6660
#! capacity    368 bytes

# Text                                 #  Line  RIP      Bytes  Opcode              
.duplicate_tree:                       #        0xd6660  0      OPC=<label>         
  pushq %r13                           #  1     0xd6660  2      OPC=pushq_r64_1     
  pushq %r12                           #  2     0xd6662  2      OPC=pushq_r64_1     
  movq %rsi, %r12                      #  3     0xd6664  3      OPC=movq_r64_r64    
  pushq %rbp                           #  4     0xd6667  1      OPC=pushq_r64_1     
  pushq %rbx                           #  5     0xd6668  1      OPC=pushq_r64_1     
  movq %rdi, %rbx                      #  6     0xd6669  3      OPC=movq_r64_r64    
  subq $0x18, %rsp                     #  7     0xd666c  4      OPC=subq_r64_imm8   
  movq (%rdi), %rbp                    #  8     0xd6670  3      OPC=movq_r64_m64    
  leaq 0x8(%rsp), %r13                 #  9     0xd6673  5      OPC=leaq_r64_m16    
  jmpq .L_d6687                        #  10    0xd6678  2      OPC=jmpq_label      
  nop                                  #  11    0xd667a  1      OPC=nop             
  nop                                  #  12    0xd667b  1      OPC=nop             
  nop                                  #  13    0xd667c  1      OPC=nop             
  nop                                  #  14    0xd667d  1      OPC=nop             
  nop                                  #  15    0xd667e  1      OPC=nop             
  nop                                  #  16    0xd667f  1      OPC=nop             
.L_d6680:                              #        0xd6680  0      OPC=<label>         
  leaq 0x8(%rbp), %r13                 #  17    0xd6680  4      OPC=leaq_r64_m16    
  movq %rax, %rbx                      #  18    0xd6684  3      OPC=movq_r64_r64    
.L_d6687:                              #        0xd6687  0      OPC=<label>         
  movslq 0x80(%r12), %rdx              #  19    0xd6687  8      OPC=movslq_r64_m32  
  cmpl $0xf, %edx                      #  20    0xd668f  3      OPC=cmpl_r32_imm8   
  je .L_d6770                          #  21    0xd6692  6      OPC=je_label_1      
.L_d6698:                              #        0xd6698  0      OPC=<label>         
  movq 0x70(%r12), %rax                #  22    0xd6698  5      OPC=movq_r64_m64    
  leal 0x1(%rdx), %ecx                 #  23    0xd669d  3      OPC=leal_r32_m16    
.L_d66a0:                              #        0xd66a0  0      OPC=<label>         
  shlq $0x6, %rdx                      #  24    0xd66a0  4      OPC=shlq_r64_imm8   
  movl %ecx, 0x80(%r12)                #  25    0xd66a4  8      OPC=movl_m32_r32    
  leaq (%rax,%rdx,1), %rdi             #  26    0xd66ac  4      OPC=leaq_r64_m16    
  leaq 0x10(%rax,%rdx,1), %r8          #  27    0xd66b0  5      OPC=leaq_r64_m16    
  leaq 0x20(%rax,%rdx,1), %rcx         #  28    0xd66b5  5      OPC=leaq_r64_m16    
  movq $0x0, 0x8(%rdi)                 #  29    0xd66ba  8      OPC=movq_m64_imm32  
  movq $0x0, 0x10(%rdi)                #  30    0xd66c2  8      OPC=movq_m64_imm32  
  leaq 0x8(%rdi), %rsi                 #  31    0xd66ca  4      OPC=leaq_r64_m16    
  movq $0x0, 0x8(%r8)                  #  32    0xd66ce  8      OPC=movq_m64_imm32  
  movq 0x30(%rbx), %r10                #  33    0xd66d6  4      OPC=movq_r64_m64    
  movq 0x28(%rbx), %r9                 #  34    0xd66da  4      OPC=movq_r64_m64    
  movq %r10, 0x18(%rcx)                #  35    0xd66de  4      OPC=movq_m64_r64    
  andb $0xf3, 0x1a(%rcx)               #  36    0xd66e2  4      OPC=andb_m8_imm8    
  testq %rsi, %rsi                     #  37    0xd66e6  3      OPC=testq_r64_r64   
  movq %r9, 0x10(%rcx)                 #  38    0xd66e9  4      OPC=movq_m64_r64    
  movq $0x0, 0x10(%r8)                 #  39    0xd66ed  8      OPC=movq_m64_imm32  
  movq $0x0, 0x8(%rcx)                 #  40    0xd66f5  8      OPC=movq_m64_imm32  
  movl $0xffffffff, 0x40(%rax,%rdx,1)  #  41    0xd66fd  8      OPC=movl_m32_imm32  
  movq %rsi, (%r13)                    #  42    0xd6705  4      OPC=movq_m64_r64    
  je .L_d67c0                          #  43    0xd6709  6      OPC=je_label_1      
  movq %rbp, 0x8(%rdi)                 #  44    0xd670f  4      OPC=movq_m64_r64    
  movq (%r13), %rax                    #  45    0xd6713  4      OPC=movq_r64_m64    
  orb $0x4, 0x32(%rax)                 #  46    0xd6717  4      OPC=orb_m8_imm8     
  movq 0x8(%rbx), %rax                 #  47    0xd671b  4      OPC=movq_r64_m64    
  movq (%r13), %rbp                    #  48    0xd671f  4      OPC=movq_r64_m64    
  testq %rax, %rax                     #  49    0xd6723  3      OPC=testq_r64_r64   
  jne .L_d6680                         #  50    0xd6726  6      OPC=jne_label_1     
  movq 0x10(%rbx), %rdx                #  51    0xd672c  4      OPC=movq_r64_m64    
  cmpq %rdx, %rax                      #  52    0xd6730  3      OPC=cmpq_r64_r64    
  jne .L_d6753                         #  53    0xd6733  2      OPC=jne_label       
  nop                                  #  54    0xd6735  1      OPC=nop             
  nop                                  #  55    0xd6736  1      OPC=nop             
  nop                                  #  56    0xd6737  1      OPC=nop             
.L_d6738:                              #        0xd6738  0      OPC=<label>         
  movq (%rbx), %rdx                    #  57    0xd6738  3      OPC=movq_r64_m64    
  movq (%rbp), %rbp                    #  58    0xd673b  4      OPC=movq_r64_m64    
  movq %rbx, %rax                      #  59    0xd673f  3      OPC=movq_r64_r64    
  testq %rdx, %rdx                     #  60    0xd6742  3      OPC=testq_r64_r64   
  je .L_d67a0                          #  61    0xd6745  2      OPC=je_label        
  movq %rdx, %rbx                      #  62    0xd6747  3      OPC=movq_r64_r64    
  movq 0x10(%rbx), %rdx                #  63    0xd674a  4      OPC=movq_r64_m64    
  cmpq %rdx, %rax                      #  64    0xd674e  3      OPC=cmpq_r64_r64    
  je .L_d6738                          #  65    0xd6751  2      OPC=je_label        
.L_d6753:                              #        0xd6753  0      OPC=<label>         
  testq %rdx, %rdx                     #  66    0xd6753  3      OPC=testq_r64_r64   
  je .L_d6738                          #  67    0xd6756  2      OPC=je_label        
  movq %rdx, %rbx                      #  68    0xd6758  3      OPC=movq_r64_r64    
  movslq 0x80(%r12), %rdx              #  69    0xd675b  8      OPC=movslq_r64_m32  
  leaq 0x10(%rbp), %r13                #  70    0xd6763  4      OPC=leaq_r64_m16    
  cmpl $0xf, %edx                      #  71    0xd6767  3      OPC=cmpl_r32_imm8   
  jne .L_d6698                         #  72    0xd676a  6      OPC=jne_label_1     
.L_d6770:                              #        0xd6770  0      OPC=<label>         
  movl $0x3c8, %edi                    #  73    0xd6770  5      OPC=movl_r32_imm32  
  callq .memalign_plt                  #  74    0xd6775  5      OPC=callq_label     
  testq %rax, %rax                     #  75    0xd677a  3      OPC=testq_r64_r64   
  je .L_d67b0                          #  76    0xd677d  2      OPC=je_label        
  movq 0x70(%r12), %rdx                #  77    0xd677f  5      OPC=movq_r64_m64    
  movl $0x1, %ecx                      #  78    0xd6784  5      OPC=movl_r32_imm32  
  movq %rax, 0x70(%r12)                #  79    0xd6789  5      OPC=movq_m64_r64    
  movq %rdx, (%rax)                    #  80    0xd678e  3      OPC=movq_m64_r64    
  xorl %edx, %edx                      #  81    0xd6791  2      OPC=xorl_r32_r32    
  jmpq .L_d66a0                        #  82    0xd6793  5      OPC=jmpq_label_1    
  nop                                  #  83    0xd6798  1      OPC=nop             
  nop                                  #  84    0xd6799  1      OPC=nop             
  nop                                  #  85    0xd679a  1      OPC=nop             
  nop                                  #  86    0xd679b  1      OPC=nop             
  nop                                  #  87    0xd679c  1      OPC=nop             
  nop                                  #  88    0xd679d  1      OPC=nop             
  nop                                  #  89    0xd679e  1      OPC=nop             
  nop                                  #  90    0xd679f  1      OPC=nop             
.L_d67a0:                              #        0xd67a0  0      OPC=<label>         
  movq 0x8(%rsp), %rax                 #  91    0xd67a0  5      OPC=movq_r64_m64    
  addq $0x18, %rsp                     #  92    0xd67a5  4      OPC=addq_r64_imm8   
  popq %rbx                            #  93    0xd67a9  1      OPC=popq_r64_1      
  popq %rbp                            #  94    0xd67aa  1      OPC=popq_r64_1      
  popq %r12                            #  95    0xd67ab  2      OPC=popq_r64_1      
  popq %r13                            #  96    0xd67ad  2      OPC=popq_r64_1      
  retq                                 #  97    0xd67af  1      OPC=retq            
.L_d67b0:                              #        0xd67b0  0      OPC=<label>         
  movq $0x0, (%r13)                    #  98    0xd67b0  8      OPC=movq_m64_imm32  
  nop                                  #  99    0xd67b8  1      OPC=nop             
  nop                                  #  100   0xd67b9  1      OPC=nop             
  nop                                  #  101   0xd67ba  1      OPC=nop             
  nop                                  #  102   0xd67bb  1      OPC=nop             
  nop                                  #  103   0xd67bc  1      OPC=nop             
  nop                                  #  104   0xd67bd  1      OPC=nop             
  nop                                  #  105   0xd67be  1      OPC=nop             
  nop                                  #  106   0xd67bf  1      OPC=nop             
.L_d67c0:                              #        0xd67c0  0      OPC=<label>         
  addq $0x18, %rsp                     #  107   0xd67c0  4      OPC=addq_r64_imm8   
  xorl %eax, %eax                      #  108   0xd67c4  2      OPC=xorl_r32_r32    
  popq %rbx                            #  109   0xd67c6  1      OPC=popq_r64_1      
  popq %rbp                            #  110   0xd67c7  1      OPC=popq_r64_1      
  popq %r12                            #  111   0xd67c8  2      OPC=popq_r64_1      
  popq %r13                            #  112   0xd67ca  2      OPC=popq_r64_1      
  retq                                 #  113   0xd67cc  1      OPC=retq            
  nop                                  #  114   0xd67cd  1      OPC=nop             
  nop                                  #  115   0xd67ce  1      OPC=nop             
  nop                                  #  116   0xd67cf  1      OPC=nop             
                                                                                    
.size duplicate_tree, .-duplicate_tree

