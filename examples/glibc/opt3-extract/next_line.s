  .text
  .globl next_line
  .type next_line, @function

#! file-offset 0x103aa0
#! rip-offset  0x103aa0
#! capacity    528 bytes

# Text                       #  Line  RIP       Bytes  Opcode               
.next_line:                  #        0x103aa0  0      OPC=<label>          
  pushq %r15                 #  1     0x103aa0  2      OPC=pushq_r64_1      
  pushq %r14                 #  2     0x103aa2  2      OPC=pushq_r64_1      
  movq %rdx, %r15            #  3     0x103aa4  3      OPC=movq_r64_r64     
  pushq %r13                 #  4     0x103aa7  2      OPC=pushq_r64_1      
  pushq %r12                 #  5     0x103aa9  2      OPC=pushq_r64_1      
  movq %r8, %r14             #  6     0x103aab  3      OPC=movq_r64_r64     
  pushq %rbp                 #  7     0x103aae  1      OPC=pushq_r64_1      
  pushq %rbx                 #  8     0x103aaf  1      OPC=pushq_r64_1      
  movq %rcx, %rbx            #  9     0x103ab0  3      OPC=movq_r64_r64     
  subq $0x18, %rsp           #  10    0x103ab3  4      OPC=subq_r64_imm8    
  movq (%rcx), %rbp          #  11    0x103ab7  3      OPC=movq_r64_m64     
  movq (%rdx), %r12          #  12    0x103aba  3      OPC=movq_r64_m64     
  movl %edi, 0x8(%rsp)       #  13    0x103abd  4      OPC=movl_m32_r32     
  movq %rsi, (%rsp)          #  14    0x103ac1  4      OPC=movq_m64_r64     
  movl $0xa, %esi            #  15    0x103ac5  5      OPC=movl_r32_imm32   
  movq %rbp, %r13            #  16    0x103aca  3      OPC=movq_r64_r64     
  movq %r12, %rdi            #  17    0x103acd  3      OPC=movq_r64_r64     
  subq %r12, %r13            #  18    0x103ad0  3      OPC=subq_r64_r64     
  movq %r13, %rdx            #  19    0x103ad3  3      OPC=movq_r64_r64     
  callq .memchr              #  20    0x103ad6  5      OPC=callq_label      
  testq %rax, %rax           #  21    0x103adb  3      OPC=testq_r64_r64    
  je .L_103b10               #  22    0x103ade  2      OPC=je_label         
.L_103ae0:                   #        0x103ae0  0      OPC=<label>          
  addq $0x1, %rax            #  23    0x103ae0  4      OPC=addq_r64_imm8    
  movq %rax, (%r15)          #  24    0x103ae4  3      OPC=movq_m64_r64     
  movq (%rbx), %rdx          #  25    0x103ae7  3      OPC=movq_r64_m64     
  cmpq %rdx, %rax            #  26    0x103aea  3      OPC=cmpq_r64_r64     
  ja .L_103c84               #  27    0x103aed  6      OPC=ja_label_1       
  cmpq %rdx, %r12            #  28    0x103af3  3      OPC=cmpq_r64_r64     
  movl $0x0, %eax            #  29    0x103af6  5      OPC=movl_r32_imm32   
  cmovneq %r12, %rax         #  30    0x103afb  4      OPC=cmovneq_r64_r64  
.L_103aff:                   #        0x103aff  0      OPC=<label>          
  addq $0x18, %rsp           #  31    0x103aff  4      OPC=addq_r64_imm8    
  popq %rbx                  #  32    0x103b03  1      OPC=popq_r64_1       
  popq %rbp                  #  33    0x103b04  1      OPC=popq_r64_1       
  popq %r12                  #  34    0x103b05  2      OPC=popq_r64_1       
  popq %r13                  #  35    0x103b07  2      OPC=popq_r64_1       
  popq %r14                  #  36    0x103b09  2      OPC=popq_r64_1       
  popq %r15                  #  37    0x103b0b  2      OPC=popq_r64_1       
  retq                       #  38    0x103b0d  1      OPC=retq             
  xchgw %ax, %ax             #  39    0x103b0e  2      OPC=xchgw_ax_r16     
.L_103b10:                   #        0x103b10  0      OPC=<label>          
  cmpq (%rsp), %r12          #  40    0x103b10  4      OPC=cmpq_r64_m64     
  je .L_103b1b               #  41    0x103b14  2      OPC=je_label         
  cmpq %r14, %rbp            #  42    0x103b16  3      OPC=cmpq_r64_r64     
  je .L_103b21               #  43    0x103b19  2      OPC=je_label         
.L_103b1b:                   #        0x103b1b  0      OPC=<label>          
  leaq -0x1(%rbp), %rax      #  44    0x103b1b  4      OPC=leaq_r64_m16     
  jmpq .L_103ae0             #  45    0x103b1f  2      OPC=jmpq_label       
.L_103b21:                   #        0x103b21  0      OPC=<label>          
  movq (%rsp), %r14          #  46    0x103b21  4      OPC=movq_r64_m64     
  movq %r13, %rdx            #  47    0x103b25  3      OPC=movq_r64_r64     
  movq %r12, %rsi            #  48    0x103b28  3      OPC=movq_r64_r64     
  xorl %r12d, %r12d          #  49    0x103b2b  3      OPC=xorl_r32_r32     
  movq %r14, %rdi            #  50    0x103b2e  3      OPC=movq_r64_r64     
  callq .__GI_memmove        #  51    0x103b31  5      OPC=callq_label      
  movq %r14, %rax            #  52    0x103b36  3      OPC=movq_r64_r64     
  addq (%rbx), %rax          #  53    0x103b39  3      OPC=addq_r64_m64     
  movq %rbp, %rdx            #  54    0x103b3c  3      OPC=movq_r64_r64     
  subq (%r15), %rax          #  55    0x103b3f  3      OPC=subq_r64_m64     
  movq %rax, (%rbx)          #  56    0x103b42  3      OPC=movq_m64_r64     
  movslq 0x8(%rsp), %rax     #  57    0x103b45  5      OPC=movslq_r64_m32   
  movq %r14, (%r15)          #  58    0x103b4a  3      OPC=movq_m64_r64     
  movq (%rbx), %rsi          #  59    0x103b4d  3      OPC=movq_r64_m64     
  movq %rax, 0x8(%rsp)       #  60    0x103b50  5      OPC=movq_m64_r64     
  movq %rax, %rdi            #  61    0x103b55  3      OPC=movq_r64_r64     
  subq %rsi, %rdx            #  62    0x103b58  3      OPC=subq_r64_r64     
  movl %r12d, %eax           #  63    0x103b5b  3      OPC=movl_r32_r32     
  syscall                    #  64    0x103b5e  2      OPC=syscall          
  cmpq $0xfffff000, %rax     #  65    0x103b60  6      OPC=cmpq_rax_imm32   
  jbe .L_103b78              #  66    0x103b66  2      OPC=jbe_label        
  movq 0x2bd311(%rip), %rdx  #  67    0x103b68  7      OPC=movq_r64_m64     
  negl %eax                  #  68    0x103b6f  2      OPC=negl_r32         
  movl %eax, (%rdx)          #  69    0x103b71  2      OPC=movl_m32_r32     
  nop                        #  70    0x103b73  1      OPC=nop              
  xorl %eax, %eax            #  71    0x103b74  2      OPC=xorl_r32_r32     
  jmpq .L_103aff             #  72    0x103b76  2      OPC=jmpq_label       
.L_103b78:                   #        0x103b78  0      OPC=<label>          
  testq %rax, %rax           #  73    0x103b78  3      OPC=testq_r64_r64    
  js .L_103c11               #  74    0x103b7b  6      OPC=js_label_1       
  addq (%rbx), %rax          #  75    0x103b81  3      OPC=addq_r64_m64     
  movl $0xa, %esi            #  76    0x103b84  5      OPC=movl_r32_imm32   
  movq %rax, (%rbx)          #  77    0x103b89  3      OPC=movq_m64_r64     
  movq (%r15), %r13          #  78    0x103b8c  3      OPC=movq_r64_m64     
  movq %rax, %rdx            #  79    0x103b8f  3      OPC=movq_r64_r64     
  movq %rax, %r14            #  80    0x103b92  3      OPC=movq_r64_r64     
  subq %r13, %rdx            #  81    0x103b95  3      OPC=subq_r64_r64     
  movq %r13, %rdi            #  82    0x103b98  3      OPC=movq_r64_r64     
  callq .memchr              #  83    0x103b9b  5      OPC=callq_label      
  testq %rax, %rax           #  84    0x103ba0  3      OPC=testq_r64_r64    
  jne .L_103c71              #  85    0x103ba3  6      OPC=jne_label_1      
  cmpq %r14, %rbp            #  86    0x103ba9  3      OPC=cmpq_r64_r64     
  jne .L_103ca3              #  87    0x103bac  6      OPC=jne_label_1      
  movq (%rsp), %rcx          #  88    0x103bb2  4      OPC=movq_r64_m64     
  movq %rbp, %rax            #  89    0x103bb6  3      OPC=movq_r64_r64     
  movq 0x8(%rsp), %rdi       #  90    0x103bb9  5      OPC=movq_r64_m64     
  subq %rcx, %rax            #  91    0x103bbe  3      OPC=subq_r64_r64     
  leaq (%rax,%rax,2), %r14   #  92    0x103bc1  4      OPC=leaq_r64_m16     
  leaq 0x3(%r14), %rax       #  93    0x103bc5  4      OPC=leaq_r64_m16     
  testq %r14, %r14           #  94    0x103bc9  3      OPC=testq_r64_r64    
  cmovsq %rax, %r14          #  95    0x103bcc  4      OPC=cmovsq_r64_r64   
  movq %rbp, %rax            #  96    0x103bd0  3      OPC=movq_r64_r64     
  sarq $0x2, %r14            #  97    0x103bd3  4      OPC=sarq_r64_imm8    
  addq %rcx, %r14            #  98    0x103bd7  3      OPC=addq_r64_r64     
  subq %r14, %rax            #  99    0x103bda  3      OPC=subq_r64_r64     
  movq %r14, (%rbx)          #  100   0x103bdd  3      OPC=movq_m64_r64     
  movq %r14, %rsi            #  101   0x103be0  3      OPC=movq_r64_r64     
  movq %rax, (%rsp)          #  102   0x103be3  4      OPC=movq_m64_r64     
  movq %rax, %rdx            #  103   0x103be7  3      OPC=movq_r64_r64     
  movl %r12d, %eax           #  104   0x103bea  3      OPC=movl_r32_r32     
  syscall                    #  105   0x103bed  2      OPC=syscall          
  cmpq $0xfffff000, %rax     #  106   0x103bef  6      OPC=cmpq_rax_imm32   
  movq %rax, %r12            #  107   0x103bf5  3      OPC=movq_r64_r64     
  jbe .L_103c43              #  108   0x103bf8  2      OPC=jbe_label        
  nop                        #  109   0x103bfa  1      OPC=nop              
  nop                        #  110   0x103bfb  1      OPC=nop              
  nop                        #  111   0x103bfc  1      OPC=nop              
  nop                        #  112   0x103bfd  1      OPC=nop              
  nop                        #  113   0x103bfe  1      OPC=nop              
  nop                        #  114   0x103bff  1      OPC=nop              
.L_103c00:                   #        0x103c00  0      OPC=<label>          
  movq 0x2bd279(%rip), %rax  #  115   0x103c00  7      OPC=movq_r64_m64     
  movl %r12d, %r13d          #  116   0x103c07  3      OPC=movl_r32_r32     
  negl %r13d                 #  117   0x103c0a  3      OPC=negl_r32         
  movl %r13d, (%rax)         #  118   0x103c0d  3      OPC=movl_m32_r32     
  nop                        #  119   0x103c10  1      OPC=nop              
.L_103c11:                   #        0x103c11  0      OPC=<label>          
  xorl %eax, %eax            #  120   0x103c11  2      OPC=xorl_r32_r32     
  jmpq .L_103aff             #  121   0x103c13  5      OPC=jmpq_label_1     
  nop                        #  122   0x103c18  1      OPC=nop              
  nop                        #  123   0x103c19  1      OPC=nop              
  nop                        #  124   0x103c1a  1      OPC=nop              
  nop                        #  125   0x103c1b  1      OPC=nop              
  nop                        #  126   0x103c1c  1      OPC=nop              
  nop                        #  127   0x103c1d  1      OPC=nop              
  nop                        #  128   0x103c1e  1      OPC=nop              
  nop                        #  129   0x103c1f  1      OPC=nop              
.L_103c20:                   #        0x103c20  0      OPC=<label>          
  cmpq %r8, %rbp             #  130   0x103c20  3      OPC=cmpq_r64_r64     
  jne .L_103c79              #  131   0x103c23  2      OPC=jne_label        
  movq %r14, (%rbx)          #  132   0x103c25  3      OPC=movq_m64_r64     
  movq (%rsp), %rdx          #  133   0x103c28  4      OPC=movq_r64_m64     
  movq %r14, %rsi            #  134   0x103c2c  3      OPC=movq_r64_r64     
  movq 0x8(%rsp), %rdi       #  135   0x103c2f  5      OPC=movq_r64_m64     
  xorl %eax, %eax            #  136   0x103c34  2      OPC=xorl_r32_r32     
  syscall                    #  137   0x103c36  2      OPC=syscall          
  cmpq $0xfffff000, %rax     #  138   0x103c38  6      OPC=cmpq_rax_imm32   
  movq %rax, %r12            #  139   0x103c3e  3      OPC=movq_r64_r64     
  ja .L_103c00               #  140   0x103c41  2      OPC=ja_label         
.L_103c43:                   #        0x103c43  0      OPC=<label>          
  testq %r12, %r12           #  141   0x103c43  3      OPC=testq_r64_r64    
  js .L_103c11               #  142   0x103c46  2      OPC=js_label         
  movq (%rbx), %r13          #  143   0x103c48  3      OPC=movq_r64_m64     
  movq %r12, %rdx            #  144   0x103c4b  3      OPC=movq_r64_r64     
  movl $0xa, %esi            #  145   0x103c4e  5      OPC=movl_r32_imm32   
  movq %r13, %rdi            #  146   0x103c53  3      OPC=movq_r64_r64     
  callq .memchr              #  147   0x103c56  5      OPC=callq_label      
  movb $0xa, (%r13)          #  148   0x103c5b  5      OPC=movb_m8_imm8     
  movq %r12, %r8             #  149   0x103c60  3      OPC=movq_r64_r64     
  addq (%rbx), %r8           #  150   0x103c63  3      OPC=addq_r64_m64     
  testq %rax, %rax           #  151   0x103c66  3      OPC=testq_r64_r64    
  movq %r8, (%rbx)           #  152   0x103c69  3      OPC=movq_m64_r64     
  je .L_103c20               #  153   0x103c6c  2      OPC=je_label         
  movq (%r15), %r13          #  154   0x103c6e  3      OPC=movq_r64_m64     
.L_103c71:                   #        0x103c71  0      OPC=<label>          
  movq %r13, %r12            #  155   0x103c71  3      OPC=movq_r64_r64     
  jmpq .L_103ae0             #  156   0x103c74  5      OPC=jmpq_label_1     
.L_103c79:                   #        0x103c79  0      OPC=<label>          
  movq %r8, %rbp             #  157   0x103c79  3      OPC=movq_r64_r64     
  movq (%r15), %r12          #  158   0x103c7c  3      OPC=movq_r64_m64     
  jmpq .L_103b1b             #  159   0x103c7f  5      OPC=jmpq_label_1     
.L_103c84:                   #        0x103c84  0      OPC=<label>          
  leaq 0x8895e(%rip), %rcx   #  160   0x103c84  7      OPC=leaq_r64_m16     
  leaq 0x8c48e(%rip), %rsi   #  161   0x103c8b  7      OPC=leaq_r64_m16     
  leaq 0x8890a(%rip), %rdi   #  162   0x103c92  7      OPC=leaq_r64_m16     
  movl $0x77, %edx           #  163   0x103c99  5      OPC=movl_r32_imm32   
  callq .__assert_fail       #  164   0x103c9e  5      OPC=callq_label      
.L_103ca3:                   #        0x103ca3  0      OPC=<label>          
  movq %r14, %rbp            #  165   0x103ca3  3      OPC=movq_r64_r64     
  movq %r13, %r12            #  166   0x103ca6  3      OPC=movq_r64_r64     
  jmpq .L_103b1b             #  167   0x103ca9  5      OPC=jmpq_label_1     
  xchgw %ax, %ax             #  168   0x103cae  2      OPC=xchgw_ax_r16     
                                                                            
.size next_line, .-next_line

