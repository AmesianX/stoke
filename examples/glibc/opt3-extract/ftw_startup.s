  .text
  .globl ftw_startup
  .type ftw_startup, @function

#! file-offset 0xf7da0
#! rip-offset  0xf7da0
#! capacity    1408 bytes

# Text                           #  Line  RIP      Bytes  Opcode                
.ftw_startup:                    #        0xf7da0  0      OPC=<label>           
  cmpb $0x0, (%rdi)              #  1     0xf7da0  3      OPC=cmpb_m8_imm8      
  je .L_f82a0                    #  2     0xf7da3  6      OPC=je_label_1        
  pushq %rbp                     #  3     0xf7da9  1      OPC=pushq_r64_1       
  movq %rsp, %rbp                #  4     0xf7daa  3      OPC=movq_r64_r64      
  pushq %r15                     #  5     0xf7dad  2      OPC=pushq_r64_1       
  pushq %r14                     #  6     0xf7daf  2      OPC=pushq_r64_1       
  pushq %r13                     #  7     0xf7db1  2      OPC=pushq_r64_1       
  pushq %r12                     #  8     0xf7db3  2      OPC=pushq_r64_1       
  movq %rdx, %r13                #  9     0xf7db5  3      OPC=movq_r64_r64      
  pushq %rbx                     #  10    0xf7db8  1      OPC=pushq_r64_1       
  movl $0x1, %edx                #  11    0xf7db9  5      OPC=movl_r32_imm32    
  movq %rdi, %r15                #  12    0xf7dbe  3      OPC=movq_r64_r64      
  movl %esi, %r12d               #  13    0xf7dc1  3      OPC=movl_r32_r32      
  movl %r8d, %ebx                #  14    0xf7dc4  3      OPC=movl_r32_r32      
  subq $0x108, %rsp              #  15    0xf7dc7  7      OPC=subq_r64_imm32    
  testl %ecx, %ecx               #  16    0xf7dce  2      OPC=testl_r32_r32     
  movq $0x0, -0x118(%rbp)        #  17    0xf7dd0  11     OPC=movq_m64_imm32    
  cmovgl %ecx, %edx              #  18    0xf7ddb  3      OPC=cmovgl_r32_r32    
  xorl %esi, %esi                #  19    0xf7dde  2      OPC=xorl_r32_r32      
  movslq %edx, %rdx              #  20    0xf7de0  3      OPC=movslq_r64_r32    
  movq %rdx, -0x110(%rbp)        #  21    0xf7de3  7      OPC=movq_m64_r64      
  shlq $0x3, %rdx                #  22    0xf7dea  4      OPC=shlq_r64_imm8     
  leaq 0x1e(%rdx), %rax          #  23    0xf7dee  4      OPC=leaq_r64_m16      
  andq $0xf0, %rax               #  24    0xf7df2  4      OPC=andq_r64_imm8     
  subq %rax, %rsp                #  25    0xf7df6  3      OPC=subq_r64_r64      
  leaq 0xf(%rsp), %rdi           #  26    0xf7df9  5      OPC=leaq_r64_m16      
  andq $0xf0, %rdi               #  27    0xf7dfe  4      OPC=andq_r64_imm8     
  movq %rdi, -0x120(%rbp)        #  28    0xf7e02  7      OPC=movq_m64_r64      
  callq .__GI_memset             #  29    0xf7e09  5      OPC=callq_label       
  movq %r15, %rdi                #  30    0xf7e0e  3      OPC=movq_r64_r64      
  callq .strlen                  #  31    0xf7e11  5      OPC=callq_label       
  leaq (%rax,%rax,1), %rdi       #  32    0xf7e16  4      OPC=leaq_r64_m16      
  movl $0x1000, %eax             #  33    0xf7e1a  5      OPC=movl_r32_imm32    
  cmpq $0x1000, %rdi             #  34    0xf7e1f  7      OPC=cmpq_r64_imm32    
  cmovbq %rax, %rdi              #  35    0xf7e26  4      OPC=cmovbq_r64_r64    
  movq %rdi, -0x100(%rbp)        #  36    0xf7e2a  7      OPC=movq_m64_r64      
  callq .memalign_plt            #  37    0xf7e31  5      OPC=callq_label       
  testq %rax, %rax               #  38    0xf7e36  3      OPC=testq_r64_r64     
  movq %rax, %r14                #  39    0xf7e39  3      OPC=movq_r64_r64      
  movq %rax, -0x108(%rbp)        #  40    0xf7e3c  7      OPC=movq_m64_r64      
  je .L_f82fc                    #  41    0xf7e43  6      OPC=je_label_1        
  movq %r15, %rsi                #  42    0xf7e49  3      OPC=movq_r64_r64      
  movq %rax, %rdi                #  43    0xf7e4c  3      OPC=movq_r64_r64      
  callq .__GI___stpcpy           #  44    0xf7e4f  5      OPC=callq_label       
  leaq 0x1(%r14), %rcx           #  45    0xf7e54  4      OPC=leaq_r64_m16      
  movq %rax, %rdx                #  46    0xf7e58  3      OPC=movq_r64_r64      
  cmpq %rcx, %rax                #  47    0xf7e5b  3      OPC=cmpq_r64_r64      
  jbe .L_f82b4                   #  48    0xf7e5e  6      OPC=jbe_label_1       
  cmpb $0x2f, -0x1(%rax)         #  49    0xf7e64  4      OPC=cmpb_m8_imm8      
  je .L_f7e7a                    #  50    0xf7e68  2      OPC=je_label          
  jmpq .L_f82b4                  #  51    0xf7e6a  5      OPC=jmpq_label_1      
  nop                            #  52    0xf7e6f  1      OPC=nop               
.L_f7e70:                        #        0xf7e70  0      OPC=<label>           
  cmpb $0x2f, -0x1(%rdx)         #  53    0xf7e70  4      OPC=cmpb_m8_imm8      
  jne .L_f7ff0                   #  54    0xf7e74  6      OPC=jne_label_1       
.L_f7e7a:                        #        0xf7e7a  0      OPC=<label>           
  subq $0x1, %rdx                #  55    0xf7e7a  4      OPC=subq_r64_imm8     
  cmpq %rcx, %rdx                #  56    0xf7e7e  3      OPC=cmpq_r64_r64      
  jne .L_f7e70                   #  57    0xf7e81  2      OPC=jne_label         
.L_f7e83:                        #        0xf7e83  0      OPC=<label>           
  cmpq %rcx, %r14                #  58    0xf7e83  3      OPC=cmpq_r64_r64      
  movb $0x0, (%rcx)              #  59    0xf7e86  3      OPC=movb_m8_imm8      
  movl $0x0, -0xf4(%rbp)         #  60    0xf7e89  10     OPC=movl_m32_imm32    
  jb .L_f7ea9                    #  61    0xf7e93  2      OPC=jb_label          
  jmpq .L_f7eaf                  #  62    0xf7e95  2      OPC=jmpq_label        
  nop                            #  63    0xf7e97  1      OPC=nop               
  nop                            #  64    0xf7e98  1      OPC=nop               
  nop                            #  65    0xf7e99  1      OPC=nop               
  nop                            #  66    0xf7e9a  1      OPC=nop               
  nop                            #  67    0xf7e9b  1      OPC=nop               
  nop                            #  68    0xf7e9c  1      OPC=nop               
  nop                            #  69    0xf7e9d  1      OPC=nop               
  nop                            #  70    0xf7e9e  1      OPC=nop               
  nop                            #  71    0xf7e9f  1      OPC=nop               
.L_f7ea0:                        #        0xf7ea0  0      OPC=<label>           
  subq $0x1, %rcx                #  72    0xf7ea0  4      OPC=subq_r64_imm8     
  cmpq %r14, %rcx                #  73    0xf7ea4  3      OPC=cmpq_r64_r64      
  je .L_f7eaf                    #  74    0xf7ea7  2      OPC=je_label          
.L_f7ea9:                        #        0xf7ea9  0      OPC=<label>           
  cmpb $0x2f, -0x1(%rcx)         #  75    0xf7ea9  4      OPC=cmpb_m8_imm8      
  jne .L_f7ea0                   #  76    0xf7ead  2      OPC=jne_label         
.L_f7eaf:                        #        0xf7eaf  0      OPC=<label>           
  leaq 0x9053a(%rip), %rdx       #  77    0xf7eaf  7      OPC=leaq_r64_m16      
  leaq 0x90553(%rip), %rax       #  78    0xf7eb6  7      OPC=leaq_r64_m16      
  subq %r14, %rcx                #  79    0xf7ebd  3      OPC=subq_r64_r64      
  testl %r12d, %r12d             #  80    0xf7ec0  3      OPC=testl_r32_r32     
  movl %ecx, -0xf8(%rbp)         #  81    0xf7ec3  6      OPC=movl_m32_r32      
  movl %ebx, -0xf0(%rbp)         #  82    0xf7ec9  6      OPC=movl_m32_r32      
  cmoveq %rdx, %rax              #  83    0xf7ecf  4      OPC=cmoveq_r64_r64    
  movq %r13, -0xe0(%rbp)         #  84    0xf7ed3  7      OPC=movq_m64_r64      
  movq $0x0, -0xd0(%rbp)         #  85    0xf7eda  11     OPC=movq_m64_imm32    
  movq %rax, -0xe8(%rbp)         #  86    0xf7ee5  7      OPC=movq_m64_r64      
  movl %ebx, %eax                #  87    0xf7eec  2      OPC=movl_r32_r32      
  andl $0x4, %eax                #  88    0xf7eee  3      OPC=andl_r32_imm8     
  jne .L_f8000                   #  89    0xf7ef1  6      OPC=jne_label_1       
  movq 0x2c8f82(%rip), %r13      #  90    0xf7ef7  7      OPC=movq_r64_m64      
  movq %r14, %r12                #  91    0xf7efe  3      OPC=movq_r64_r64      
  movq $0x0, -0x128(%rbp)        #  92    0xf7f01  11     OPC=movq_m64_imm32    
  movl $0xffffffff, %r14d        #  93    0xf7f0c  7      OPC=movl_r32_imm32_1  
.L_f7f12:                        #        0xf7f13  0      OPC=<label>           
  testl %eax, %eax               #  94    0xf7f13  2      OPC=testl_r32_r32     
  jne .L_f7fc8                   #  95    0xf7f15  6      OPC=jne_label_1       
.L_f7f1a:                        #        0xf7f1b  0      OPC=<label>           
  leaq -0xc0(%rbp), %r8          #  96    0xf7f1b  7      OPC=leaq_r64_m16      
  testb $0x1, %bl                #  97    0xf7f22  3      OPC=testb_r8_imm8     
  movq %r12, %rsi                #  98    0xf7f25  3      OPC=movq_r64_r64      
  movl $0x1, %edi                #  99    0xf7f28  5      OPC=movl_r32_imm32    
  movq %r8, %rdx                 #  100   0xf7f2d  3      OPC=movq_r64_r64      
  movq %r8, -0x130(%rbp)         #  101   0xf7f30  7      OPC=movq_m64_r64      
  je .L_f8100                    #  102   0xf7f37  6      OPC=je_label_1        
  callq .__lxstat                #  103   0xf7f3d  5      OPC=callq_label       
  testl %eax, %eax               #  104   0xf7f42  2      OPC=testl_r32_r32     
  movq -0x130(%rbp), %r8         #  105   0xf7f44  7      OPC=movq_r64_m64      
  js .L_f8178                    #  106   0xf7f4b  6      OPC=js_label_1        
  movl -0xa8(%rbp), %eax         #  107   0xf7f51  6      OPC=movl_r32_m32      
  andl $0xf000, %eax             #  108   0xf7f57  5      OPC=andl_eax_imm32    
  cmpl $0x4000, %eax             #  109   0xf7f5c  5      OPC=cmpl_eax_imm32    
  je .L_f8306                    #  110   0xf7f61  6      OPC=je_label_1        
.L_f7f66:                        #        0xf7f67  0      OPC=<label>           
  cmpl $0xa000, %eax             #  111   0xf7f67  5      OPC=cmpl_eax_imm32    
  movl $0x0, %edx                #  112   0xf7f6c  5      OPC=movl_r32_imm32    
  movl $0x10, %eax               #  113   0xf7f71  5      OPC=movl_r32_imm32    
  cmovneq %rdx, %rax             #  114   0xf7f76  4      OPC=cmovneq_r64_r64   
  movq -0xe8(%rbp), %rdx         #  115   0xf7f7a  7      OPC=movq_r64_m64      
  leaq -0xf8(%rbp), %rcx         #  116   0xf7f81  7      OPC=leaq_r64_m16      
  movq %r8, %rsi                 #  117   0xf7f88  3      OPC=movq_r64_r64      
  movq -0x108(%rbp), %rdi        #  118   0xf7f8b  7      OPC=movq_r64_m64      
  movl (%rdx,%rax,1), %edx       #  119   0xf7f92  3      OPC=movl_r32_m32      
  callq -0xe0(%rbp)              #  120   0xf7f95  6      OPC=callq_m64         
  movl %eax, %r12d               #  121   0xf7f9b  3      OPC=movl_r32_r32      
.L_f7f9d:                        #        0xf7f9e  0      OPC=<label>           
  andl $0x10, %ebx               #  122   0xf7f9e  3      OPC=andl_r32_imm8     
  je .L_f80a3                    #  123   0xf7fa1  6      OPC=je_label_1        
  leal -0x2(%r12), %eax          #  124   0xf7fa7  5      OPC=leal_r32_m16      
  movl (%r13), %r15d             #  125   0xf7fac  4      OPC=movl_r32_m32      
  nop                            #  126   0xf7fb0  1      OPC=nop               
  cmpl $0x1, %eax                #  127   0xf7fb1  3      OPC=cmpl_r32_imm8     
  ja .L_f80a8                    #  128   0xf7fb4  6      OPC=ja_label_1        
  xorl %r12d, %r12d              #  129   0xf7fba  3      OPC=xorl_r32_r32      
  jmpq .L_f80a8                  #  130   0xf7fbd  5      OPC=jmpq_label_1      
  nop                            #  131   0xf7fc2  1      OPC=nop               
  nop                            #  132   0xf7fc3  1      OPC=nop               
  nop                            #  133   0xf7fc4  1      OPC=nop               
  nop                            #  134   0xf7fc5  1      OPC=nop               
  nop                            #  135   0xf7fc6  1      OPC=nop               
  nop                            #  136   0xf7fc7  1      OPC=nop               
  nop                            #  137   0xf7fc8  1      OPC=nop               
.L_f7fc8:                        #        0xf7fc9  0      OPC=<label>           
  movslq -0xf8(%rbp), %rax       #  138   0xf7fc9  7      OPC=movslq_r64_m32    
  addq %rax, %r12                #  139   0xf7fd0  3      OPC=addq_r64_r64      
  leaq 0x943b2(%rip), %rax       #  140   0xf7fd3  7      OPC=leaq_r64_m16      
  cmpb $0x0, (%r12)              #  141   0xf7fda  5      OPC=cmpb_m8_imm8      
  cmoveq %rax, %r12              #  142   0xf7fdf  4      OPC=cmoveq_r64_r64    
  jmpq .L_f7f1a                  #  143   0xf7fe3  5      OPC=jmpq_label_1      
  nop                            #  144   0xf7fe8  1      OPC=nop               
  nop                            #  145   0xf7fe9  1      OPC=nop               
  nop                            #  146   0xf7fea  1      OPC=nop               
  nop                            #  147   0xf7feb  1      OPC=nop               
  nop                            #  148   0xf7fec  1      OPC=nop               
  nop                            #  149   0xf7fed  1      OPC=nop               
  nop                            #  150   0xf7fee  1      OPC=nop               
  nop                            #  151   0xf7fef  1      OPC=nop               
  nop                            #  152   0xf7ff0  1      OPC=nop               
.L_f7ff0:                        #        0xf7ff1  0      OPC=<label>           
  movq %rdx, %rcx                #  153   0xf7ff1  3      OPC=movq_r64_r64      
  jmpq .L_f7e83                  #  154   0xf7ff4  5      OPC=jmpq_label_1      
  nop                            #  155   0xf7ff9  1      OPC=nop               
  nop                            #  156   0xf7ffa  1      OPC=nop               
  nop                            #  157   0xf7ffb  1      OPC=nop               
  nop                            #  158   0xf7ffc  1      OPC=nop               
  nop                            #  159   0xf7ffd  1      OPC=nop               
  nop                            #  160   0xf7ffe  1      OPC=nop               
  nop                            #  161   0xf7fff  1      OPC=nop               
  nop                            #  162   0xf8000  1      OPC=nop               
.L_f8000:                        #        0xf8001  0      OPC=<label>           
  leaq 0x94384(%rip), %rdi       #  163   0xf8001  7      OPC=leaq_r64_m16      
  xorl %eax, %eax                #  164   0xf8008  2      OPC=xorl_r32_r32      
  movl $0x10000, %esi            #  165   0xf800a  5      OPC=movl_r32_imm32    
  callq .__open                  #  166   0xf800f  5      OPC=callq_label       
  cmpl $0xffffffff, %eax         #  167   0xf8014  6      OPC=cmpl_r32_imm32    
  nop                            #  168   0xf801a  1      OPC=nop               
  nop                            #  169   0xf801b  1      OPC=nop               
  nop                            #  170   0xf801c  1      OPC=nop               
  movl %eax, %r14d               #  171   0xf801d  3      OPC=movl_r32_r32      
  je .L_f825a                    #  172   0xf8020  6      OPC=je_label_1        
  movq -0x110(%rbp), %rax        #  173   0xf8026  7      OPC=movq_r64_m64      
  cmpq $0x1, %rax                #  174   0xf802d  4      OPC=cmpq_r64_imm8     
  jbe .L_f82d1                   #  175   0xf8031  6      OPC=jbe_label_1       
  movq 0x2c8e49(%rip), %r13      #  176   0xf8037  7      OPC=movq_r64_m64      
  subq $0x1, %rax                #  177   0xf803e  4      OPC=subq_r64_imm8     
  movq $0x0, -0x128(%rbp)        #  178   0xf8042  11     OPC=movq_m64_imm32    
  movq %rax, -0x110(%rbp)        #  179   0xf804d  7      OPC=movq_m64_r64      
.L_f804d:                        #        0xf8054  0      OPC=<label>           
  movslq -0xf8(%rbp), %rax       #  180   0xf8054  7      OPC=movslq_r64_m32    
  testl %eax, %eax               #  181   0xf805b  2      OPC=testl_r32_r32     
  jle .L_f82bc                   #  182   0xf805d  6      OPC=jle_label_1       
  cmpl $0x1, %eax                #  183   0xf8063  3      OPC=cmpl_r32_imm8     
  je .L_f82e8                    #  184   0xf8066  6      OPC=je_label_1        
  movq -0x108(%rbp), %rdx        #  185   0xf806c  7      OPC=movq_r64_m64      
  leaq -0x1(%rdx,%rax,1), %rax   #  186   0xf8073  5      OPC=leaq_r64_m16      
  movzbl (%rax), %r15d           #  187   0xf8078  4      OPC=movzbl_r32_m8     
  movb $0x0, (%rax)              #  188   0xf807c  3      OPC=movb_m8_imm8      
  movq -0x108(%rbp), %rdi        #  189   0xf807f  7      OPC=movq_r64_m64      
  callq .chdir                   #  190   0xf8086  5      OPC=callq_label       
  movl %eax, %r12d               #  191   0xf808b  3      OPC=movl_r32_r32      
  movslq -0xf8(%rbp), %rax       #  192   0xf808e  7      OPC=movslq_r64_m32    
  movq -0x108(%rbp), %rdx        #  193   0xf8095  7      OPC=movq_r64_m64      
  movb %r15b, -0x1(%rdx,%rax,1)  #  194   0xf809c  5      OPC=movb_m8_r8        
.L_f809a:                        #        0xf80a1  0      OPC=<label>           
  testl %r12d, %r12d             #  195   0xf80a1  3      OPC=testl_r32_r32     
  je .L_f82bc                    #  196   0xf80a4  6      OPC=je_label_1        
.L_f80a3:                        #        0xf80aa  0      OPC=<label>           
  movl (%r13), %r15d             #  197   0xf80aa  4      OPC=movl_r32_m32      
  nop                            #  198   0xf80ae  1      OPC=nop               
.L_f80a8:                        #        0xf80af  0      OPC=<label>           
  cmpl $0xffffffff, %r14d        #  199   0xf80af  7      OPC=cmpl_r32_imm32    
  nop                            #  200   0xf80b6  1      OPC=nop               
  nop                            #  201   0xf80b7  1      OPC=nop               
  nop                            #  202   0xf80b8  1      OPC=nop               
  nop                            #  203   0xf80b9  1      OPC=nop               
  je .L_f818d                    #  204   0xf80ba  6      OPC=je_label_1        
.L_f80b2:                        #        0xf80c0  0      OPC=<label>           
  movl %r14d, %edi               #  205   0xf80c0  3      OPC=movl_r32_r32      
  callq .fchdir                  #  206   0xf80c3  5      OPC=callq_label       
  movslq %r14d, %rdi             #  207   0xf80c8  3      OPC=movslq_r64_r32    
  movl $0x3, %eax                #  208   0xf80cb  5      OPC=movl_r32_imm32    
  syscall                        #  209   0xf80d0  2      OPC=syscall           
  movl %r15d, (%r13)             #  210   0xf80d2  4      OPC=movl_m32_r32      
  nop                            #  211   0xf80d6  1      OPC=nop               
.L_f80c9:                        #        0xf80d7  0      OPC=<label>           
  movq 0x2c8ed0(%rip), %rsi      #  212   0xf80d7  7      OPC=movq_r64_m64      
  movq -0xd0(%rbp), %rdi         #  213   0xf80de  7      OPC=movq_r64_m64      
  callq .tdestroy                #  214   0xf80e5  5      OPC=callq_label       
  movq -0x108(%rbp), %rdi        #  215   0xf80ea  7      OPC=movq_r64_m64      
  callq .L_1f8c0                 #  216   0xf80f1  5      OPC=callq_label       
  movl %r15d, (%r13)             #  217   0xf80f6  4      OPC=movl_m32_r32      
  nop                            #  218   0xf80fa  1      OPC=nop               
  movl %r12d, %eax               #  219   0xf80fb  3      OPC=movl_r32_r32      
.L_f80f0:                        #        0xf80fe  0      OPC=<label>           
  leaq -0x28(%rbp), %rsp         #  220   0xf80fe  4      OPC=leaq_r64_m16      
  popq %rbx                      #  221   0xf8102  1      OPC=popq_r64_1        
  popq %r12                      #  222   0xf8103  2      OPC=popq_r64_1        
  popq %r13                      #  223   0xf8105  2      OPC=popq_r64_1        
  popq %r14                      #  224   0xf8107  2      OPC=popq_r64_1        
  popq %r15                      #  225   0xf8109  2      OPC=popq_r64_1        
  popq %rbp                      #  226   0xf810b  1      OPC=popq_r64_1        
  retq                           #  227   0xf810c  1      OPC=retq              
  nop                            #  228   0xf810d  1      OPC=nop               
.L_f8100:                        #        0xf810e  0      OPC=<label>           
  callq .__xstat                 #  229   0xf810e  5      OPC=callq_label       
  testl %eax, %eax               #  230   0xf8113  2      OPC=testl_r32_r32     
  movq -0x130(%rbp), %r8         #  231   0xf8115  7      OPC=movq_r64_m64      
  jns .L_f81c0                   #  232   0xf811c  6      OPC=jns_label_1       
  movl (%r13), %r15d             #  233   0xf8122  4      OPC=movl_r32_m32      
  nop                            #  234   0xf8126  1      OPC=nop               
  cmpl $0x2, %r15d               #  235   0xf8127  4      OPC=cmpl_r32_imm8     
  jne .L_f817d                   #  236   0xf812b  2      OPC=jne_label         
  movq %r8, %rdx                 #  237   0xf812d  3      OPC=movq_r64_r64      
  movq %r12, %rsi                #  238   0xf8130  3      OPC=movq_r64_r64      
  movl $0x1, %edi                #  239   0xf8133  5      OPC=movl_r32_imm32    
  callq .__lxstat                #  240   0xf8138  5      OPC=callq_label       
  testl %eax, %eax               #  241   0xf813d  2      OPC=testl_r32_r32     
  movq -0x130(%rbp), %r8         #  242   0xf813f  7      OPC=movq_r64_m64      
  jne .L_f8178                   #  243   0xf8146  2      OPC=jne_label         
  movl -0xa8(%rbp), %eax         #  244   0xf8148  6      OPC=movl_r32_m32      
  andl $0xf000, %eax             #  245   0xf814e  5      OPC=andl_eax_imm32    
  cmpl $0xa000, %eax             #  246   0xf8153  5      OPC=cmpl_eax_imm32    
  jne .L_f8178                   #  247   0xf8158  2      OPC=jne_label         
  movq -0xe8(%rbp), %rax         #  248   0xf815a  7      OPC=movq_r64_m64      
  leaq -0xf8(%rbp), %rcx         #  249   0xf8161  7      OPC=leaq_r64_m16      
  movq %r8, %rsi                 #  250   0xf8168  3      OPC=movq_r64_r64      
  movq -0x108(%rbp), %rdi        #  251   0xf816b  7      OPC=movq_r64_m64      
  movl 0x18(%rax), %edx          #  252   0xf8172  3      OPC=movl_r32_m32      
  callq -0xe0(%rbp)              #  253   0xf8175  6      OPC=callq_m64         
  movl %eax, %r12d               #  254   0xf817b  3      OPC=movl_r32_r32      
  jmpq .L_f7f9d                  #  255   0xf817e  5      OPC=jmpq_label_1      
  nop                            #  256   0xf8183  1      OPC=nop               
  nop                            #  257   0xf8184  1      OPC=nop               
  nop                            #  258   0xf8185  1      OPC=nop               
.L_f8178:                        #        0xf8186  0      OPC=<label>           
  movl (%r13), %r15d             #  259   0xf8186  4      OPC=movl_r32_m32      
  nop                            #  260   0xf818a  1      OPC=nop               
.L_f817d:                        #        0xf818b  0      OPC=<label>           
  cmpl $0xffffffff, %r14d        #  261   0xf818b  7      OPC=cmpl_r32_imm32    
  nop                            #  262   0xf8192  1      OPC=nop               
  nop                            #  263   0xf8193  1      OPC=nop               
  nop                            #  264   0xf8194  1      OPC=nop               
  nop                            #  265   0xf8195  1      OPC=nop               
  movl $0xffffffff, %r12d        #  266   0xf8196  7      OPC=movl_r32_imm32_1  
  jne .L_f80b2                   #  267   0xf819d  6      OPC=jne_label_1       
.L_f818d:                        #        0xf81a3  0      OPC=<label>           
  movq -0x128(%rbp), %rbx        #  268   0xf81a3  7      OPC=movq_r64_m64      
  testq %rbx, %rbx               #  269   0xf81aa  3      OPC=testq_r64_r64     
  je .L_f80c9                    #  270   0xf81ad  6      OPC=je_label_1        
  movq %rbx, %rdi                #  271   0xf81b3  3      OPC=movq_r64_r64      
  callq .chdir                   #  272   0xf81b6  5      OPC=callq_label       
  movq %rbx, %rdi                #  273   0xf81bb  3      OPC=movq_r64_r64      
  callq .L_1f8c0                 #  274   0xf81be  5      OPC=callq_label       
  movl %r15d, (%r13)             #  275   0xf81c3  4      OPC=movl_m32_r32      
  nop                            #  276   0xf81c7  1      OPC=nop               
  jmpq .L_f80c9                  #  277   0xf81c8  5      OPC=jmpq_label_1      
  nop                            #  278   0xf81cd  1      OPC=nop               
  nop                            #  279   0xf81ce  1      OPC=nop               
  nop                            #  280   0xf81cf  1      OPC=nop               
  nop                            #  281   0xf81d0  1      OPC=nop               
  nop                            #  282   0xf81d1  1      OPC=nop               
  nop                            #  283   0xf81d2  1      OPC=nop               
  nop                            #  284   0xf81d3  1      OPC=nop               
  nop                            #  285   0xf81d4  1      OPC=nop               
  nop                            #  286   0xf81d5  1      OPC=nop               
.L_f81c0:                        #        0xf81d6  0      OPC=<label>           
  movl -0xa8(%rbp), %eax         #  287   0xf81d6  6      OPC=movl_r32_m32      
  andl $0xf000, %eax             #  288   0xf81dc  5      OPC=andl_eax_imm32    
  cmpl $0x4000, %eax             #  289   0xf81e1  5      OPC=cmpl_eax_imm32    
  jne .L_f7f66                   #  290   0xf81e6  6      OPC=jne_label_1       
  movq -0xc0(%rbp), %r12         #  291   0xf81ec  7      OPC=movq_r64_m64      
  movl $0x10, %edi               #  292   0xf81f3  5      OPC=movl_r32_imm32    
  movq %r8, -0x130(%rbp)         #  293   0xf81f8  7      OPC=movq_m64_r64      
  movq %r12, -0xd8(%rbp)         #  294   0xf81ff  7      OPC=movq_m64_r64      
  callq .memalign_plt            #  295   0xf8206  5      OPC=callq_label       
  testq %rax, %rax               #  296   0xf820b  3      OPC=testq_r64_r64     
  movq -0x130(%rbp), %r8         #  297   0xf820e  7      OPC=movq_r64_m64      
  je .L_f8178                    #  298   0xf8215  6      OPC=je_label_1        
  movq -0xb8(%rbp), %rdx         #  299   0xf821b  7      OPC=movq_r64_m64      
  movq %r12, (%rax)              #  300   0xf8222  3      OPC=movq_m64_r64      
  leaq -0x120(%rbp), %r12        #  301   0xf8225  7      OPC=leaq_r64_m16      
  movq %rax, %rdi                #  302   0xf822c  3      OPC=movq_r64_r64      
  movq %r8, -0x130(%rbp)         #  303   0xf822f  7      OPC=movq_m64_r64      
  leaq 0x50(%r12), %rsi          #  304   0xf8236  5      OPC=leaq_r64_m16      
  movq %rdx, 0x8(%rax)           #  305   0xf823b  4      OPC=movq_m64_r64      
  leaq -0xed0(%rip), %rdx        #  306   0xf823f  7      OPC=leaq_r64_m16      
  callq .__tsearch               #  307   0xf8246  5      OPC=callq_label       
  testq %rax, %rax               #  308   0xf824b  3      OPC=testq_r64_r64     
  movq -0x130(%rbp), %r8         #  309   0xf824e  7      OPC=movq_r64_m64      
  je .L_f8178                    #  310   0xf8255  6      OPC=je_label_1        
.L_f8245:                        #        0xf825b  0      OPC=<label>           
  movq %r12, %rdi                #  311   0xf825b  3      OPC=movq_r64_r64      
  xorl %edx, %edx                #  312   0xf825e  2      OPC=xorl_r32_r32      
  movq %r8, %rsi                 #  313   0xf8260  3      OPC=movq_r64_r64      
  callq .ftw_dir                 #  314   0xf8263  5      OPC=callq_label       
  movl %eax, %r12d               #  315   0xf8268  3      OPC=movl_r32_r32      
  jmpq .L_f7f9d                  #  316   0xf826b  5      OPC=jmpq_label_1      
.L_f825a:                        #        0xf8270  0      OPC=<label>           
  movq 0x2c8c1f(%rip), %r13      #  317   0xf8270  7      OPC=movq_r64_m64      
  xorl %r12d, %r12d              #  318   0xf8277  3      OPC=xorl_r32_r32      
  movl (%r13), %r15d             #  319   0xf827a  4      OPC=movl_r32_m32      
  nop                            #  320   0xf827e  1      OPC=nop               
  cmpl $0xd, %r15d               #  321   0xf827f  4      OPC=cmpl_r32_imm8     
  jne .L_f80c9                   #  322   0xf8283  6      OPC=jne_label_1       
  xorl %esi, %esi                #  323   0xf8289  2      OPC=xorl_r32_r32      
  xorl %edi, %edi                #  324   0xf828b  2      OPC=xorl_r32_r32      
  callq .getcwd                  #  325   0xf828d  5      OPC=callq_label       
  testq %rax, %rax               #  326   0xf8292  3      OPC=testq_r64_r64     
  movq %rax, -0x128(%rbp)        #  327   0xf8295  7      OPC=movq_m64_r64      
  jne .L_f804d                   #  328   0xf829c  6      OPC=jne_label_1       
  movl (%r13), %r15d             #  329   0xf82a2  4      OPC=movl_r32_m32      
  nop                            #  330   0xf82a6  1      OPC=nop               
  jmpq .L_f80c9                  #  331   0xf82a7  5      OPC=jmpq_label_1      
  nop                            #  332   0xf82ac  1      OPC=nop               
  nop                            #  333   0xf82ad  1      OPC=nop               
  nop                            #  334   0xf82ae  1      OPC=nop               
  nop                            #  335   0xf82af  1      OPC=nop               
  nop                            #  336   0xf82b0  1      OPC=nop               
  nop                            #  337   0xf82b1  1      OPC=nop               
  nop                            #  338   0xf82b2  1      OPC=nop               
  nop                            #  339   0xf82b3  1      OPC=nop               
  nop                            #  340   0xf82b4  1      OPC=nop               
  nop                            #  341   0xf82b5  1      OPC=nop               
.L_f82a0:                        #        0xf82b6  0      OPC=<label>           
  movq 0x2c8bd9(%rip), %rax      #  342   0xf82b6  7      OPC=movq_r64_m64      
  movl $0x2, (%rax)              #  343   0xf82bd  6      OPC=movl_m32_imm32    
  nop                            #  344   0xf82c3  1      OPC=nop               
  movl $0xffffffff, %eax         #  345   0xf82c4  6      OPC=movl_r32_imm32_1  
  retq                           #  346   0xf82ca  1      OPC=retq              
.L_f82b4:                        #        0xf82cb  0      OPC=<label>           
  movq %rax, %rcx                #  347   0xf82cb  3      OPC=movq_r64_r64      
  jmpq .L_f7e83                  #  348   0xf82ce  5      OPC=jmpq_label_1      
.L_f82bc:                        #        0xf82d3  0      OPC=<label>           
  movl -0xf0(%rbp), %eax         #  349   0xf82d3  6      OPC=movl_r32_m32      
  movq -0x108(%rbp), %r12        #  350   0xf82d9  7      OPC=movq_r64_m64      
  andl $0x4, %eax                #  351   0xf82e0  3      OPC=andl_r32_imm8     
  jmpq .L_f7f12                  #  352   0xf82e3  5      OPC=jmpq_label_1      
.L_f82d1:                        #        0xf82e8  0      OPC=<label>           
  movq $0x0, -0x128(%rbp)        #  353   0xf82e8  11     OPC=movq_m64_imm32    
  movq 0x2c8b9d(%rip), %r13      #  354   0xf82f3  7      OPC=movq_r64_m64      
  jmpq .L_f804d                  #  355   0xf82fa  5      OPC=jmpq_label_1      
.L_f82e8:                        #        0xf82ff  0      OPC=<label>           
  leaq 0x93a1b(%rip), %rdi       #  356   0xf82ff  7      OPC=leaq_r64_m16      
  callq .chdir                   #  357   0xf8306  5      OPC=callq_label       
  movl %eax, %r12d               #  358   0xf830b  3      OPC=movl_r32_r32      
  jmpq .L_f809a                  #  359   0xf830e  5      OPC=jmpq_label_1      
.L_f82fc:                        #        0xf8313  0      OPC=<label>           
  movl $0xffffffff, %eax         #  360   0xf8313  6      OPC=movl_r32_imm32_1  
  jmpq .L_f80f0                  #  361   0xf8319  5      OPC=jmpq_label_1      
.L_f8306:                        #        0xf831e  0      OPC=<label>           
  movq -0xc0(%rbp), %rax         #  362   0xf831e  7      OPC=movq_r64_m64      
  leaq -0x120(%rbp), %r12        #  363   0xf8325  7      OPC=leaq_r64_m16      
  movq %rax, -0xd8(%rbp)         #  364   0xf832c  7      OPC=movq_m64_r64      
  jmpq .L_f8245                  #  365   0xf8333  5      OPC=jmpq_label_1      
                                                                                
.size ftw_startup, .-ftw_startup

