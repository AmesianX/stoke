  .text
  .globl check_arrival_expand_ecl_sub
  .type check_arrival_expand_ecl_sub, @function

#! file-offset 0xd8b20
#! rip-offset  0xd8b20
#! capacity    640 bytes

# Text                                 #  Line  RIP      Bytes  Opcode              
.check_arrival_expand_ecl_sub:         #        0xd8b20  0      OPC=<label>         
  pushq %r15                           #  1     0xd8b20  2      OPC=pushq_r64_1     
  pushq %r14                           #  2     0xd8b22  2      OPC=pushq_r64_1     
  movq %rdi, %r14                      #  3     0xd8b24  3      OPC=movq_r64_r64    
  pushq %r13                           #  4     0xd8b27  2      OPC=pushq_r64_1     
  pushq %r12                           #  5     0xd8b29  2      OPC=pushq_r64_1     
  movq %rsi, %r13                      #  6     0xd8b2b  3      OPC=movq_r64_r64    
  pushq %rbp                           #  7     0xd8b2e  1      OPC=pushq_r64_1     
  pushq %rbx                           #  8     0xd8b2f  1      OPC=pushq_r64_1     
  movl %edx, %r12d                     #  9     0xd8b30  3      OPC=movl_r32_r32    
  movl %ecx, %ebp                      #  10    0xd8b33  2      OPC=movl_r32_r32    
  movl %r8d, %ebx                      #  11    0xd8b35  3      OPC=movl_r32_r32    
  subq $0x18, %rsp                     #  12    0xd8b38  4      OPC=subq_r64_imm8   
  nop                                  #  13    0xd8b3c  1      OPC=nop             
  nop                                  #  14    0xd8b3d  1      OPC=nop             
  nop                                  #  15    0xd8b3e  1      OPC=nop             
  nop                                  #  16    0xd8b3f  1      OPC=nop             
.L_d8b40:                              #        0xd8b40  0      OPC=<label>         
  movslq 0x4(%r13), %rcx               #  17    0xd8b40  4      OPC=movslq_r64_m32  
  testl %ecx, %ecx                     #  18    0xd8b44  2      OPC=testl_r32_r32   
  jle .L_d8b94                         #  19    0xd8b46  2      OPC=jle_label       
  leal -0x1(%rcx), %edx                #  20    0xd8b48  3      OPC=leal_r32_m16    
  movq 0x8(%r13), %rsi                 #  21    0xd8b4b  4      OPC=movq_r64_m64    
  xorl %r9d, %r9d                      #  22    0xd8b4f  3      OPC=xorl_r32_r32    
  jmpq .L_d8b5c                        #  23    0xd8b52  2      OPC=jmpq_label      
  nop                                  #  24    0xd8b54  1      OPC=nop             
  nop                                  #  25    0xd8b55  1      OPC=nop             
  nop                                  #  26    0xd8b56  1      OPC=nop             
  nop                                  #  27    0xd8b57  1      OPC=nop             
.L_d8b58:                              #        0xd8b58  0      OPC=<label>         
  leal 0x1(%rax), %r9d                 #  28    0xd8b58  4      OPC=leal_r32_m16    
.L_d8b5c:                              #        0xd8b5c  0      OPC=<label>         
  cmpl %r9d, %edx                      #  29    0xd8b5c  3      OPC=cmpl_r32_r32    
  jbe .L_d8b8a                         #  30    0xd8b5f  2      OPC=jbe_label       
  leal (%r9,%rdx,1), %eax              #  31    0xd8b61  4      OPC=leal_r32_m16    
  shrl $0x1, %eax                      #  32    0xd8b65  2      OPC=shrl_r32_one    
  movl %eax, %edi                      #  33    0xd8b67  2      OPC=movl_r32_r32    
  cmpl (%rsi,%rdi,4), %r12d            #  34    0xd8b69  4      OPC=cmpl_r32_m32    
  jg .L_d8b58                          #  35    0xd8b6d  2      OPC=jg_label        
  cmpl %eax, %r9d                      #  36    0xd8b6f  3      OPC=cmpl_r32_r32    
  movl %eax, %edx                      #  37    0xd8b72  2      OPC=movl_r32_r32    
  jae .L_d8b8a                         #  38    0xd8b74  2      OPC=jae_label       
.L_d8b76:                              #        0xd8b76  0      OPC=<label>         
  addl %r9d, %eax                      #  39    0xd8b76  3      OPC=addl_r32_r32    
  shrl $0x1, %eax                      #  40    0xd8b79  2      OPC=shrl_r32_one    
  movl %eax, %edi                      #  41    0xd8b7b  2      OPC=movl_r32_r32    
  cmpl (%rsi,%rdi,4), %r12d            #  42    0xd8b7d  4      OPC=cmpl_r32_m32    
  jg .L_d8b58                          #  43    0xd8b81  2      OPC=jg_label        
  cmpl %eax, %r9d                      #  44    0xd8b83  3      OPC=cmpl_r32_r32    
  movl %eax, %edx                      #  45    0xd8b86  2      OPC=movl_r32_r32    
  jb .L_d8b76                          #  46    0xd8b88  2      OPC=jb_label        
.L_d8b8a:                              #        0xd8b8a  0      OPC=<label>         
  cmpl (%rsi,%r9,4), %r12d             #  47    0xd8b8a  4      OPC=cmpl_r32_m32    
  je .L_d8c50                          #  48    0xd8b8e  6      OPC=je_label_1      
.L_d8b94:                              #        0xd8b94  0      OPC=<label>         
  movslq %r12d, %r15                   #  49    0xd8b94  3      OPC=movslq_r64_r32  
  shlq $0x4, %r15                      #  50    0xd8b97  4      OPC=shlq_r64_imm8   
  movq %r15, %rax                      #  51    0xd8b9b  3      OPC=movq_r64_r64    
  addq (%r14), %rax                    #  52    0xd8b9e  3      OPC=addq_r64_m64    
  movzbl 0x8(%rax), %edx               #  53    0xd8ba1  4      OPC=movzbl_r32_m8   
  cmpl %ebx, %edx                      #  54    0xd8ba5  2      OPC=cmpl_r32_r32    
  jne .L_d8bb1                         #  55    0xd8ba7  2      OPC=jne_label       
  cmpl %ebp, (%rax)                    #  56    0xd8ba9  2      OPC=cmpl_m32_r32    
  je .L_d8c41                          #  57    0xd8bab  6      OPC=je_label_1      
.L_d8bb1:                              #        0xd8bb1  0      OPC=<label>         
  movl (%r13), %eax                    #  58    0xd8bb1  4      OPC=movl_r32_m32    
  testl %eax, %eax                     #  59    0xd8bb5  2      OPC=testl_r32_r32   
  je .L_d8c68                          #  60    0xd8bb7  6      OPC=je_label_1      
  testl %ecx, %ecx                     #  61    0xd8bbd  2      OPC=testl_r32_r32   
  je .L_d8c98                          #  62    0xd8bbf  6      OPC=je_label_1      
  cmpl %eax, %ecx                      #  63    0xd8bc5  2      OPC=cmpl_r32_r32    
  je .L_d8d20                          #  64    0xd8bc7  6      OPC=je_label_1      
  movq 0x8(%r13), %r8                  #  65    0xd8bcd  4      OPC=movq_r64_m64    
.L_d8bd1:                              #        0xd8bd1  0      OPC=<label>         
  cmpl (%r8), %r12d                    #  66    0xd8bd1  3      OPC=cmpl_r32_m32    
  jge .L_d8cb0                         #  67    0xd8bd4  6      OPC=jge_label_1     
  testl %ecx, %ecx                     #  68    0xd8bda  2      OPC=testl_r32_r32   
  jle .L_d8d70                         #  69    0xd8bdc  6      OPC=jle_label_1     
  leal -0x1(%rcx), %eax                #  70    0xd8be2  3      OPC=leal_r32_m16    
  shlq $0x2, %rcx                      #  71    0xd8be5  4      OPC=shlq_r64_imm8   
  movq %r8, 0x8(%rsp)                  #  72    0xd8be9  5      OPC=movq_m64_r64    
  leaq 0x4(%rcx), %rdi                 #  73    0xd8bee  4      OPC=leaq_r64_m16    
  cltq                                 #  74    0xd8bf2  2      OPC=cltq            
  leaq 0x4(,%rax,4), %rdx              #  75    0xd8bf4  8      OPC=leaq_r64_m16    
  subq %rdx, %rcx                      #  76    0xd8bfc  3      OPC=subq_r64_r64    
  subq %rdx, %rdi                      #  77    0xd8bff  3      OPC=subq_r64_r64    
  leaq (%r8,%rcx,1), %rsi              #  78    0xd8c02  4      OPC=leaq_r64_m16    
  addq %r8, %rdi                       #  79    0xd8c06  3      OPC=addq_r64_r64    
  callq .__GI_memmove                  #  80    0xd8c09  5      OPC=callq_label     
  movq 0x8(%rsp), %r8                  #  81    0xd8c0e  5      OPC=movq_r64_m64    
  xorl %edx, %edx                      #  82    0xd8c13  2      OPC=xorl_r32_r32    
.L_d8c15:                              #        0xd8c15  0      OPC=<label>         
  movl %r12d, (%r8,%rdx,1)             #  83    0xd8c15  4      OPC=movl_m32_r32    
  addl $0x1, 0x4(%r13)                 #  84    0xd8c19  5      OPC=addl_m32_imm8   
.L_d8c1e:                              #        0xd8c1e  0      OPC=<label>         
  movq %r15, %rax                      #  85    0xd8c1e  3      OPC=movq_r64_r64    
  addq 0x28(%r14), %rax                #  86    0xd8c21  4      OPC=addq_r64_m64    
  movl 0x4(%rax), %edx                 #  87    0xd8c25  3      OPC=movl_r32_m32    
  testl %edx, %edx                     #  88    0xd8c28  2      OPC=testl_r32_r32   
  je .L_d8c50                          #  89    0xd8c2a  2      OPC=je_label        
  cmpl $0x2, %edx                      #  90    0xd8c2c  3      OPC=cmpl_r32_imm8   
  je .L_d8cf0                          #  91    0xd8c2f  6      OPC=je_label_1      
.L_d8c35:                              #        0xd8c35  0      OPC=<label>         
  movq 0x8(%rax), %rax                 #  92    0xd8c35  4      OPC=movq_r64_m64    
  movl (%rax), %r12d                   #  93    0xd8c39  3      OPC=movl_r32_m32    
  jmpq .L_d8b40                        #  94    0xd8c3c  5      OPC=jmpq_label_1    
.L_d8c41:                              #        0xd8c41  0      OPC=<label>         
  cmpl $0x9, %ebx                      #  95    0xd8c41  3      OPC=cmpl_r32_imm8   
  je .L_d8d7d                          #  96    0xd8c44  6      OPC=je_label_1      
  nop                                  #  97    0xd8c4a  1      OPC=nop             
  nop                                  #  98    0xd8c4b  1      OPC=nop             
  nop                                  #  99    0xd8c4c  1      OPC=nop             
  nop                                  #  100   0xd8c4d  1      OPC=nop             
  nop                                  #  101   0xd8c4e  1      OPC=nop             
  nop                                  #  102   0xd8c4f  1      OPC=nop             
.L_d8c50:                              #        0xd8c50  0      OPC=<label>         
  xorl %eax, %eax                      #  103   0xd8c50  2      OPC=xorl_r32_r32    
.L_d8c52:                              #        0xd8c52  0      OPC=<label>         
  addq $0x18, %rsp                     #  104   0xd8c52  4      OPC=addq_r64_imm8   
  popq %rbx                            #  105   0xd8c56  1      OPC=popq_r64_1      
  popq %rbp                            #  106   0xd8c57  1      OPC=popq_r64_1      
  popq %r12                            #  107   0xd8c58  2      OPC=popq_r64_1      
  popq %r13                            #  108   0xd8c5a  2      OPC=popq_r64_1      
  popq %r14                            #  109   0xd8c5c  2      OPC=popq_r64_1      
  popq %r15                            #  110   0xd8c5e  2      OPC=popq_r64_1      
  retq                                 #  111   0xd8c60  1      OPC=retq            
  nop                                  #  112   0xd8c61  1      OPC=nop             
  nop                                  #  113   0xd8c62  1      OPC=nop             
  nop                                  #  114   0xd8c63  1      OPC=nop             
  nop                                  #  115   0xd8c64  1      OPC=nop             
  nop                                  #  116   0xd8c65  1      OPC=nop             
  nop                                  #  117   0xd8c66  1      OPC=nop             
  nop                                  #  118   0xd8c67  1      OPC=nop             
.L_d8c68:                              #        0xd8c68  0      OPC=<label>         
  movl $0x1, (%r13)                    #  119   0xd8c68  8      OPC=movl_m32_imm32  
  movl $0x1, 0x4(%r13)                 #  120   0xd8c70  8      OPC=movl_m32_imm32  
  movl $0x4, %edi                      #  121   0xd8c78  5      OPC=movl_r32_imm32  
  callq .memalign_plt                  #  122   0xd8c7d  5      OPC=callq_label     
  testq %rax, %rax                     #  123   0xd8c82  3      OPC=testq_r64_r64   
  movq %rax, 0x8(%r13)                 #  124   0xd8c85  4      OPC=movq_m64_r64    
  je .L_d8d4f                          #  125   0xd8c89  6      OPC=je_label_1      
  movl %r12d, (%rax)                   #  126   0xd8c8f  3      OPC=movl_m32_r32    
  jmpq .L_d8c1e                        #  127   0xd8c92  2      OPC=jmpq_label      
  nop                                  #  128   0xd8c94  1      OPC=nop             
  nop                                  #  129   0xd8c95  1      OPC=nop             
  nop                                  #  130   0xd8c96  1      OPC=nop             
  nop                                  #  131   0xd8c97  1      OPC=nop             
.L_d8c98:                              #        0xd8c98  0      OPC=<label>         
  movq 0x8(%r13), %rax                 #  132   0xd8c98  4      OPC=movq_r64_m64    
  movl %r12d, (%rax)                   #  133   0xd8c9c  3      OPC=movl_m32_r32    
  addl $0x1, 0x4(%r13)                 #  134   0xd8c9f  5      OPC=addl_m32_imm8   
  jmpq .L_d8c1e                        #  135   0xd8ca4  5      OPC=jmpq_label_1    
  nop                                  #  136   0xd8ca9  1      OPC=nop             
  nop                                  #  137   0xd8caa  1      OPC=nop             
  nop                                  #  138   0xd8cab  1      OPC=nop             
  nop                                  #  139   0xd8cac  1      OPC=nop             
  nop                                  #  140   0xd8cad  1      OPC=nop             
  nop                                  #  141   0xd8cae  1      OPC=nop             
  nop                                  #  142   0xd8caf  1      OPC=nop             
.L_d8cb0:                              #        0xd8cb0  0      OPC=<label>         
  leaq (,%rcx,4), %rdx                 #  143   0xd8cb0  8      OPC=leaq_r64_m16    
  movl -0x4(%r8,%rdx,1), %eax          #  144   0xd8cb8  5      OPC=movl_r32_m32    
  cmpl %eax, %r12d                     #  145   0xd8cbd  3      OPC=cmpl_r32_r32    
  jge .L_d8c15                         #  146   0xd8cc0  6      OPC=jge_label_1     
  nop                                  #  147   0xd8cc6  1      OPC=nop             
  nop                                  #  148   0xd8cc7  1      OPC=nop             
  nop                                  #  149   0xd8cc8  1      OPC=nop             
  nop                                  #  150   0xd8cc9  1      OPC=nop             
  nop                                  #  151   0xd8cca  1      OPC=nop             
  nop                                  #  152   0xd8ccb  1      OPC=nop             
  nop                                  #  153   0xd8ccc  1      OPC=nop             
  nop                                  #  154   0xd8ccd  1      OPC=nop             
  nop                                  #  155   0xd8cce  1      OPC=nop             
  nop                                  #  156   0xd8ccf  1      OPC=nop             
.L_d8cd0:                              #        0xd8cd0  0      OPC=<label>         
  movl %eax, (%r8,%rdx,1)              #  157   0xd8cd0  4      OPC=movl_m32_r32    
  subq $0x4, %rdx                      #  158   0xd8cd4  4      OPC=subq_r64_imm8   
  movl -0x4(%r8,%rdx,1), %eax          #  159   0xd8cd8  5      OPC=movl_r32_m32    
  cmpl %eax, %r12d                     #  160   0xd8cdd  3      OPC=cmpl_r32_r32    
  jl .L_d8cd0                          #  161   0xd8ce0  2      OPC=jl_label        
  jmpq .L_d8c15                        #  162   0xd8ce2  5      OPC=jmpq_label_1    
  nop                                  #  163   0xd8ce7  1      OPC=nop             
  nop                                  #  164   0xd8ce8  1      OPC=nop             
  nop                                  #  165   0xd8ce9  1      OPC=nop             
  nop                                  #  166   0xd8cea  1      OPC=nop             
  nop                                  #  167   0xd8ceb  1      OPC=nop             
  nop                                  #  168   0xd8cec  1      OPC=nop             
  nop                                  #  169   0xd8ced  1      OPC=nop             
  nop                                  #  170   0xd8cee  1      OPC=nop             
  nop                                  #  171   0xd8cef  1      OPC=nop             
.L_d8cf0:                              #        0xd8cf0  0      OPC=<label>         
  movq 0x8(%rax), %rax                 #  172   0xd8cf0  4      OPC=movq_r64_m64    
  movl %ebx, %r8d                      #  173   0xd8cf4  3      OPC=movl_r32_r32    
  movl %ebp, %ecx                      #  174   0xd8cf7  2      OPC=movl_r32_r32    
  movq %r13, %rsi                      #  175   0xd8cf9  3      OPC=movq_r64_r64    
  movq %r14, %rdi                      #  176   0xd8cfc  3      OPC=movq_r64_r64    
  movl 0x4(%rax), %edx                 #  177   0xd8cff  3      OPC=movl_r32_m32    
  callq .check_arrival_expand_ecl_sub  #  178   0xd8d02  5      OPC=callq_label     
  testl %eax, %eax                     #  179   0xd8d07  2      OPC=testl_r32_r32   
  jne .L_d8c52                         #  180   0xd8d09  6      OPC=jne_label_1     
  movq %r15, %rax                      #  181   0xd8d0f  3      OPC=movq_r64_r64    
  addq 0x28(%r14), %rax                #  182   0xd8d12  4      OPC=addq_r64_m64    
  jmpq .L_d8c35                        #  183   0xd8d16  5      OPC=jmpq_label_1    
  nop                                  #  184   0xd8d1b  1      OPC=nop             
  nop                                  #  185   0xd8d1c  1      OPC=nop             
  nop                                  #  186   0xd8d1d  1      OPC=nop             
  nop                                  #  187   0xd8d1e  1      OPC=nop             
  nop                                  #  188   0xd8d1f  1      OPC=nop             
.L_d8d20:                              #        0xd8d20  0      OPC=<label>         
  addl %ecx, %ecx                      #  189   0xd8d20  2      OPC=addl_r32_r32    
  movq 0x8(%r13), %rdi                 #  190   0xd8d22  4      OPC=movq_r64_m64    
  movl %ecx, (%r13)                    #  191   0xd8d26  4      OPC=movl_m32_r32    
  movslq %ecx, %rcx                    #  192   0xd8d2a  3      OPC=movslq_r64_r32  
  leaq (,%rcx,4), %rsi                 #  193   0xd8d2d  8      OPC=leaq_r64_m16    
  callq .__tls_get_addr_plt            #  194   0xd8d35  5      OPC=callq_label     
  testq %rax, %rax                     #  195   0xd8d3a  3      OPC=testq_r64_r64   
  je .L_d8d95                          #  196   0xd8d3d  2      OPC=je_label        
  movq %rax, 0x8(%r13)                 #  197   0xd8d3f  4      OPC=movq_m64_r64    
  movslq 0x4(%r13), %rcx               #  198   0xd8d43  4      OPC=movslq_r64_m32  
  movq %rax, %r8                       #  199   0xd8d47  3      OPC=movq_r64_r64    
  jmpq .L_d8bd1                        #  200   0xd8d4a  5      OPC=jmpq_label_1    
.L_d8d4f:                              #        0xd8d4f  0      OPC=<label>         
  movl $0x0, 0x4(%r13)                 #  201   0xd8d4f  8      OPC=movl_m32_imm32  
  movl $0x0, (%r13)                    #  202   0xd8d57  8      OPC=movl_m32_imm32  
  addq $0x18, %rsp                     #  203   0xd8d5f  4      OPC=addq_r64_imm8   
  popq %rbx                            #  204   0xd8d63  1      OPC=popq_r64_1      
  movb $0xc, %al                       #  205   0xd8d64  2      OPC=movb_r8_imm8    
  popq %rbp                            #  206   0xd8d66  1      OPC=popq_r64_1      
  popq %r12                            #  207   0xd8d67  2      OPC=popq_r64_1      
  popq %r13                            #  208   0xd8d69  2      OPC=popq_r64_1      
  popq %r14                            #  209   0xd8d6b  2      OPC=popq_r64_1      
  popq %r15                            #  210   0xd8d6d  2      OPC=popq_r64_1      
  retq                                 #  211   0xd8d6f  1      OPC=retq            
.L_d8d70:                              #        0xd8d70  0      OPC=<label>         
  leaq (,%rcx,4), %rdx                 #  212   0xd8d70  8      OPC=leaq_r64_m16    
  jmpq .L_d8c15                        #  213   0xd8d78  5      OPC=jmpq_label_1    
.L_d8d7d:                              #        0xd8d7d  0      OPC=<label>         
  movl %r12d, %esi                     #  214   0xd8d7d  3      OPC=movl_r32_r32    
  movq %r13, %rdi                      #  215   0xd8d80  3      OPC=movq_r64_r64    
  callq .re_node_set_insert            #  216   0xd8d83  5      OPC=callq_label     
  movl %eax, %edx                      #  217   0xd8d88  2      OPC=movl_r32_r32    
  xorl %eax, %eax                      #  218   0xd8d8a  2      OPC=xorl_r32_r32    
  cmpl $0xffffffff, %edx               #  219   0xd8d8c  6      OPC=cmpl_r32_imm32  
  nop                                  #  220   0xd8d92  1      OPC=nop             
  nop                                  #  221   0xd8d93  1      OPC=nop             
  nop                                  #  222   0xd8d94  1      OPC=nop             
  jne .L_d8c52                         #  223   0xd8d95  6      OPC=jne_label_1     
.L_d8d95:                              #        0xd8d9b  0      OPC=<label>         
  movl $0xc, %eax                      #  224   0xd8d9b  5      OPC=movl_r32_imm32  
  jmpq .L_d8c52                        #  225   0xd8da0  5      OPC=jmpq_label_1    
  nop                                  #  226   0xd8da5  1      OPC=nop             
                                                                                    
.size check_arrival_expand_ecl_sub, .-check_arrival_expand_ecl_sub

