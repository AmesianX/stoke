  .text
  .globl vsyslog
  .type vsyslog, @function

#! file-offset 0xff370
#! rip-offset  0xff370
#! capacity    1392 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
.vsyslog:                           #        0xff370  0      OPC=<label>           
  pushq %r15                        #  1     0xff370  2      OPC=pushq_r64_1       
  pushq %r14                        #  2     0xff372  2      OPC=pushq_r64_1       
  movq %rdx, %r15                   #  3     0xff374  3      OPC=movq_r64_r64      
  pushq %r13                        #  4     0xff377  2      OPC=pushq_r64_1       
  pushq %r12                        #  5     0xff379  2      OPC=pushq_r64_1       
  movq %rsi, %r14                   #  6     0xff37b  3      OPC=movq_r64_r64      
  pushq %rbp                        #  7     0xff37e  1      OPC=pushq_r64_1       
  pushq %rbx                        #  8     0xff37f  1      OPC=pushq_r64_1       
  movl %edi, %ebp                   #  9     0xff380  2      OPC=movl_r32_r32      
  subq $0xa8, %rsp                  #  10    0xff382  7      OPC=subq_r64_imm32    
  movq 0x2c1af0(%rip), %r12         #  11    0xff389  7      OPC=movq_r64_m64      
  testl $0xfffffc00, %edi           #  12    0xff390  6      OPC=testl_r32_imm32   
  movq $0x0, 0x10(%rsp)             #  13    0xff396  9      OPC=movq_m64_imm32    
  movq $0x0, 0x18(%rsp)             #  14    0xff39f  9      OPC=movq_m64_imm32    
  movl (%r12), %r13d                #  15    0xff3a8  4      OPC=movl_r32_m32      
  nop                               #  16    0xff3ac  1      OPC=nop               
  jne .L_ff630                      #  17    0xff3ad  6      OPC=jne_label_1       
.L_ff3b3:                           #        0xff3b3  0      OPC=<label>           
  movl 0x2c1ef7(%rip), %edx         #  18    0xff3b3  6      OPC=movl_r32_m32      
  movl %ebp, %eax                   #  19    0xff3b9  2      OPC=movl_r32_r32      
  andl $0x7, %eax                   #  20    0xff3bb  3      OPC=andl_r32_imm8     
  btl %eax, %edx                    #  21    0xff3be  3      OPC=btl_r32_r32       
  jae .L_ff616                      #  22    0xff3c1  6      OPC=jae_label_1       
  movl 0x2c1ee7(%rip), %eax         #  23    0xff3c7  6      OPC=movl_r32_m32      
  leaq 0x18(%rsp), %rsi             #  24    0xff3cd  5      OPC=leaq_r64_m16      
  leaq 0x10(%rsp), %rdi             #  25    0xff3d2  5      OPC=leaq_r64_m16      
  orl %ebp, %eax                    #  26    0xff3d7  2      OPC=orl_r32_r32       
  testl $0x3f8, %ebp                #  27    0xff3d9  6      OPC=testl_r32_imm32   
  cmovel %eax, %ebp                 #  28    0xff3df  3      OPC=cmovel_r32_r32    
  callq .open_memstream             #  29    0xff3e2  5      OPC=callq_label       
  testq %rax, %rax                  #  30    0xff3e7  3      OPC=testq_r64_r64     
  movq %rax, %rbx                   #  31    0xff3ea  3      OPC=movq_r64_r64      
  je .L_ff650                       #  32    0xff3ed  6      OPC=je_label_1        
  orl $0x8000, (%rax)               #  33    0xff3f3  6      OPC=orl_m32_imm32     
  movl %ebp, %edx                   #  34    0xff3f9  2      OPC=movl_r32_r32      
  leaq 0x8d15d(%rip), %rsi          #  35    0xff3fb  7      OPC=leaq_r64_m16      
  leaq 0x8(%rsp), %rbp              #  36    0xff402  5      OPC=leaq_r64_m16      
  movq %rax, %rdi                   #  37    0xff407  3      OPC=movq_r64_r64      
  xorl %eax, %eax                   #  38    0xff40a  2      OPC=xorl_r32_r32      
  callq .fprintf                    #  39    0xff40c  5      OPC=callq_label       
  movq %rbp, %rdi                   #  40    0xff411  3      OPC=movq_r64_r64      
  callq .L_1f8d0                    #  41    0xff414  5      OPC=callq_label       
  leaq 0x60(%rsp), %rsi             #  42    0xff419  5      OPC=leaq_r64_m16      
  movq %rbp, %rdi                   #  43    0xff41e  3      OPC=movq_r64_r64      
  callq .localtime_r                #  44    0xff421  5      OPC=callq_label       
  movq 0x28(%rbx), %rdi             #  45    0xff426  4      OPC=movq_r64_m64      
  movq 0x30(%rbx), %rsi             #  46    0xff42a  4      OPC=movq_r64_m64      
  leaq 0x2c088b(%rip), %r8          #  47    0xff42e  7      OPC=leaq_r64_m16      
  leaq 0x8d128(%rip), %rdx          #  48    0xff435  7      OPC=leaq_r64_m16      
  movq %rax, %rcx                   #  49    0xff43c  3      OPC=movq_r64_r64      
  subq %rdi, %rsi                   #  50    0xff43f  3      OPC=subq_r64_r64      
  callq .__strftime_l               #  51    0xff442  5      OPC=callq_label       
  addq %rax, 0x28(%rbx)             #  52    0xff447  4      OPC=addq_m64_r64      
  movq %rbx, %rdi                   #  53    0xff44b  3      OPC=movq_r64_r64      
  callq ._IO_ftell                  #  54    0xff44e  5      OPC=callq_label       
  movq 0x2c509e(%rip), %rdi         #  55    0xff453  7      OPC=movq_r64_m64      
  movq %rax, %rbp                   #  56    0xff45a  3      OPC=movq_r64_r64      
  testq %rdi, %rdi                  #  57    0xff45d  3      OPC=testq_r64_r64     
  je .L_ff780                       #  58    0xff460  6      OPC=je_label_1        
.L_ff466:                           #        0xff466  0      OPC=<label>           
  movq %rbx, %rsi                   #  59    0xff466  3      OPC=movq_r64_r64      
  callq .fputs_unlocked             #  60    0xff469  5      OPC=callq_label       
  testb $0x1, 0x2c508b(%rip)        #  61    0xff46e  7      OPC=testb_m8_imm8     
  jne .L_ff7b0                      #  62    0xff475  6      OPC=jne_label_1       
.L_ff47b:                           #        0xff47b  0      OPC=<label>           
  cmpq $0x0, 0x2c5075(%rip)         #  63    0xff47b  8      OPC=cmpq_m64_imm8     
  je .L_ff4b7                       #  64    0xff483  2      OPC=je_label          
  movq 0x28(%rbx), %rax             #  65    0xff485  4      OPC=movq_r64_m64      
  cmpq 0x30(%rbx), %rax             #  66    0xff489  4      OPC=cmpq_r64_m64      
  jae .L_ff898                      #  67    0xff48d  6      OPC=jae_label_1       
  leaq 0x1(%rax), %rdx              #  68    0xff493  4      OPC=leaq_r64_m16      
  movq %rdx, 0x28(%rbx)             #  69    0xff497  4      OPC=movq_m64_r64      
  movb $0x3a, (%rax)                #  70    0xff49b  3      OPC=movb_m8_imm8      
.L_ff49e:                           #        0xff49e  0      OPC=<label>           
  movq 0x28(%rbx), %rax             #  71    0xff49e  4      OPC=movq_r64_m64      
  cmpq 0x30(%rbx), %rax             #  72    0xff4a2  4      OPC=cmpq_r64_m64      
  jae .L_ff880                      #  73    0xff4a6  6      OPC=jae_label_1       
  leaq 0x1(%rax), %rdx              #  74    0xff4ac  4      OPC=leaq_r64_m16      
  movq %rdx, 0x28(%rbx)             #  75    0xff4b0  4      OPC=movq_m64_r64      
  movb $0x20, (%rax)                #  76    0xff4b4  3      OPC=movb_m8_imm8      
.L_ff4b7:                           #        0xff4b7  0      OPC=<label>           
  movq %r15, %rdx                   #  77    0xff4b7  3      OPC=movq_r64_r64      
  movq %r14, %rsi                   #  78    0xff4ba  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                   #  79    0xff4bd  3      OPC=movq_r64_r64      
  movl %r13d, (%r12)                #  80    0xff4c0  4      OPC=movl_m32_r32      
  nop                               #  81    0xff4c4  1      OPC=nop               
  callq ._IO_vfprintf               #  82    0xff4c5  5      OPC=callq_label       
  movq %rbx, %rdi                   #  83    0xff4ca  3      OPC=movq_r64_r64      
  callq ._IO_fclose__GLIBC_2_2_5    #  84    0xff4cd  5      OPC=callq_label       
  movq 0x10(%rsp), %rax             #  85    0xff4d2  5      OPC=movq_r64_m64      
.L_ff4d7:                           #        0xff4d7  0      OPC=<label>           
  testb $0x20, 0x2c5022(%rip)       #  86    0xff4d7  7      OPC=testb_m8_imm8     
  je .L_ff541                       #  87    0xff4de  2      OPC=je_label          
  movq 0x18(%rsp), %rcx             #  88    0xff4e0  5      OPC=movq_r64_m64      
  leaq (%rax,%rbp,1), %rdx          #  89    0xff4e5  4      OPC=leaq_r64_m16      
  movq %rdx, 0x40(%rsp)             #  90    0xff4e9  5      OPC=movq_m64_r64      
  movq %rcx, %rdx                   #  91    0xff4ee  3      OPC=movq_r64_r64      
  subq %rbp, %rdx                   #  92    0xff4f1  3      OPC=subq_r64_r64      
  movq %rdx, 0x48(%rsp)             #  93    0xff4f4  5      OPC=movq_m64_r64      
  cmpb $0xa, -0x1(%rax,%rcx,1)      #  94    0xff4f9  5      OPC=cmpb_m8_imm8      
  movl $0x1, %edx                   #  95    0xff4fe  5      OPC=movl_r32_imm32    
  je .L_ff51c                       #  96    0xff503  2      OPC=je_label          
  leaq 0x8ab3d(%rip), %rbx          #  97    0xff505  7      OPC=leaq_r64_m16      
  movq $0x1, 0x58(%rsp)             #  98    0xff50c  9      OPC=movq_m64_imm32    
  movb $0x2, %dl                    #  99    0xff515  2      OPC=movb_r8_imm8      
  movq %rbx, 0x50(%rsp)             #  100   0xff517  5      OPC=movq_m64_r64      
.L_ff51c:                           #        0xff51c  0      OPC=<label>           
  leaq 0x20(%rsp), %rcx             #  101   0xff51c  5      OPC=leaq_r64_m16      
  leaq 0x40(%rsp), %rsi             #  102   0xff521  5      OPC=leaq_r64_m16      
  movl $0x0, %ebx                   #  103   0xff526  5      OPC=movl_r32_imm32    
  movl $0x2, %edi                   #  104   0xff52b  5      OPC=movl_r32_imm32    
  cmpq %rcx, %rax                   #  105   0xff530  3      OPC=cmpq_r64_r64      
  cmovneq %rax, %rbx                #  106   0xff533  4      OPC=cmovneq_r64_r64   
  callq .writev                     #  107   0xff537  5      OPC=callq_label       
  movq 0x10(%rsp), %rax             #  108   0xff53c  5      OPC=movq_r64_m64      
.L_ff541:                           #        0xff541  0      OPC=<label>           
  movq %rax, 0x40(%rsp)             #  109   0xff541  5      OPC=movq_m64_r64      
  movq $0x0, 0x48(%rsp)             #  110   0xff546  9      OPC=movq_m64_imm32    
  movl $0x1, %esi                   #  111   0xff54f  5      OPC=movl_r32_imm32    
  xorl %eax, %eax                   #  112   0xff554  2      OPC=xorl_r32_r32      
  cmpl $0x0, 0x2c76a3(%rip)         #  113   0xff556  7      OPC=cmpl_m32_imm8     
  je .L_ff56b                       #  114   0xff55d  2      OPC=je_label          
  lock                              #  115   0xff55f  1      OPC=lock              
  cmpxchgl %esi, 0x2c4f89(%rip)     #  116   0xff560  7      OPC=cmpxchgl_m32_r32  
  nop                               #  117   0xff567  1      OPC=nop               
  jne .L_ff574                      #  118   0xff568  2      OPC=jne_label         
  jmpq .L_ff58e                     #  119   0xff56a  2      OPC=jmpq_label        
.L_ff56b:                           #        0xff56c  0      OPC=<label>           
  cmpxchgl %esi, 0x2c4f7e(%rip)     #  120   0xff56c  7      OPC=cmpxchgl_m32_r32  
  je .L_ff58e                       #  121   0xff573  2      OPC=je_label          
.L_ff574:                           #        0xff575  0      OPC=<label>           
  leaq 0x2c4f75(%rip), %rdi         #  122   0xff575  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  123   0xff57c  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  124   0xff583  5      OPC=callq_label       
  addq $0x80, %rsp                  #  125   0xff588  7      OPC=addq_r64_imm32    
.L_ff58e:                           #        0xff58f  0      OPC=<label>           
  movl 0x2c4f70(%rip), %eax         #  126   0xff58f  6      OPC=movl_r32_m32      
  testl %eax, %eax                  #  127   0xff595  2      OPC=testl_r32_r32     
  je .L_ff6f0                       #  128   0xff597  6      OPC=je_label_1        
  cmpl $0x1, 0x2c1d19(%rip)         #  129   0xff59d  7      OPC=cmpl_m32_imm8     
  je .L_ff770                       #  130   0xff5a4  6      OPC=je_label_1        
.L_ff5a9:                           #        0xff5aa  0      OPC=<label>           
  movq 0x18(%rsp), %rdx             #  131   0xff5aa  5      OPC=movq_r64_m64      
  movq 0x10(%rsp), %rsi             #  132   0xff5af  5      OPC=movq_r64_m64      
  movl $0x4000, %ecx                #  133   0xff5b4  5      OPC=movl_r32_imm32    
  movl 0x2c1cfa(%rip), %edi         #  134   0xff5b9  6      OPC=movl_r32_m32      
  callq .__send                     #  135   0xff5bf  5      OPC=callq_label       
  testq %rax, %rax                  #  136   0xff5c4  3      OPC=testq_r64_r64     
  js .L_ff7d0                       #  137   0xff5c7  6      OPC=js_label_1        
.L_ff5cc:                           #        0xff5cd  0      OPC=<label>           
  cmpl $0x0, 0x2c762d(%rip)         #  138   0xff5cd  7      OPC=cmpl_m32_imm8     
  je .L_ff5e0                       #  139   0xff5d4  2      OPC=je_label          
  lock                              #  140   0xff5d6  1      OPC=lock              
  decl 0x2c4f14(%rip)               #  141   0xff5d7  6      OPC=decl_m32          
  nop                               #  142   0xff5dd  1      OPC=nop               
  jne .L_ff5e8                      #  143   0xff5de  2      OPC=jne_label         
  jmpq .L_ff602                     #  144   0xff5e0  2      OPC=jmpq_label        
.L_ff5e0:                           #        0xff5e2  0      OPC=<label>           
  decl 0x2c4f0a(%rip)               #  145   0xff5e2  6      OPC=decl_m32          
  je .L_ff602                       #  146   0xff5e8  2      OPC=je_label          
.L_ff5e8:                           #        0xff5ea  0      OPC=<label>           
  leaq 0x2c4f01(%rip), %rdi         #  147   0xff5ea  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  148   0xff5f1  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  149   0xff5f8  5      OPC=callq_label       
  addq $0x80, %rsp                  #  150   0xff5fd  7      OPC=addq_r64_imm32    
.L_ff602:                           #        0xff604  0      OPC=<label>           
  movq 0x10(%rsp), %rdi             #  151   0xff604  5      OPC=movq_r64_m64      
  leaq 0x20(%rsp), %rax             #  152   0xff609  5      OPC=leaq_r64_m16      
  cmpq %rax, %rdi                   #  153   0xff60e  3      OPC=cmpq_r64_r64      
  je .L_ff616                       #  154   0xff611  2      OPC=je_label          
  callq .L_1f8c0                    #  155   0xff613  5      OPC=callq_label       
.L_ff616:                           #        0xff618  0      OPC=<label>           
  addq $0xa8, %rsp                  #  156   0xff618  7      OPC=addq_r64_imm32    
  popq %rbx                         #  157   0xff61f  1      OPC=popq_r64_1        
  popq %rbp                         #  158   0xff620  1      OPC=popq_r64_1        
  popq %r12                         #  159   0xff621  2      OPC=popq_r64_1        
  popq %r13                         #  160   0xff623  2      OPC=popq_r64_1        
  popq %r14                         #  161   0xff625  2      OPC=popq_r64_1        
  popq %r15                         #  162   0xff627  2      OPC=popq_r64_1        
  retq                              #  163   0xff629  1      OPC=retq              
  nop                               #  164   0xff62a  1      OPC=nop               
  nop                               #  165   0xff62b  1      OPC=nop               
  nop                               #  166   0xff62c  1      OPC=nop               
  nop                               #  167   0xff62d  1      OPC=nop               
  nop                               #  168   0xff62e  1      OPC=nop               
  nop                               #  169   0xff62f  1      OPC=nop               
  nop                               #  170   0xff630  1      OPC=nop               
  nop                               #  171   0xff631  1      OPC=nop               
.L_ff630:                           #        0xff632  0      OPC=<label>           
  leaq 0x90ac1(%rip), %rsi          #  172   0xff632  7      OPC=leaq_r64_m16      
  movl %edi, %edx                   #  173   0xff639  2      OPC=movl_r32_r32      
  xorl %eax, %eax                   #  174   0xff63b  2      OPC=xorl_r32_r32      
  movl $0x23, %edi                  #  175   0xff63d  5      OPC=movl_r32_imm32    
  andl $0x3ff, %ebp                 #  176   0xff642  6      OPC=andl_r32_imm32    
  callq .syslog                     #  177   0xff648  5      OPC=callq_label       
  jmpq .L_ff3b3                     #  178   0xff64d  5      OPC=jmpq_label_1      
.L_ff650:                           #        0xff652  0      OPC=<label>           
  movq $0x6d20666f2074756f, %rax    #  179   0xff652  10     OPC=movq_r64_imm64    
  leaq 0x60(%rsp), %rbp             #  180   0xff65c  5      OPC=leaq_r64_m16      
  movq %rax, 0x20(%rsp)             #  181   0xff661  5      OPC=movq_m64_r64      
  movq $0x5b2079726f6d65, %rax      #  182   0xff666  10     OPC=movq_r64_imm64    
  movq %rax, 0x28(%rsp)             #  183   0xff670  5      OPC=movq_m64_r64      
  callq .__getpid                   #  184   0xff675  5      OPC=callq_label       
  leaq 0xc(%rbp), %rsi              #  185   0xff67a  4      OPC=leaq_r64_m16      
  movl %eax, %ecx                   #  186   0xff67e  2      OPC=movl_r32_r32      
  movl $0x66666667, %edi            #  187   0xff680  5      OPC=movl_r32_imm32    
  nop                               #  188   0xff685  1      OPC=nop               
  nop                               #  189   0xff686  1      OPC=nop               
  nop                               #  190   0xff687  1      OPC=nop               
  nop                               #  191   0xff688  1      OPC=nop               
  nop                               #  192   0xff689  1      OPC=nop               
.L_ff688:                           #        0xff68a  0      OPC=<label>           
  movl %ecx, %eax                   #  193   0xff68a  2      OPC=movl_r32_r32      
  subq $0x1, %rsi                   #  194   0xff68c  4      OPC=subq_r64_imm8     
  imull %edi                        #  195   0xff690  2      OPC=imull_r32         
  movl %ecx, %eax                   #  196   0xff692  2      OPC=movl_r32_r32      
  sarl $0x1f, %eax                  #  197   0xff694  3      OPC=sarl_r32_imm8     
  sarl $0x2, %edx                   #  198   0xff697  3      OPC=sarl_r32_imm8     
  subl %eax, %edx                   #  199   0xff69a  2      OPC=subl_r32_r32      
  leal (%rdx,%rdx,4), %eax          #  200   0xff69c  3      OPC=leal_r32_m16      
  addl %eax, %eax                   #  201   0xff69f  2      OPC=addl_r32_r32      
  subl %eax, %ecx                   #  202   0xff6a1  2      OPC=subl_r32_r32      
  addl $0x30, %ecx                  #  203   0xff6a3  3      OPC=addl_r32_imm8     
  testl %edx, %edx                  #  204   0xff6a6  2      OPC=testl_r32_r32     
  movb %cl, (%rsi)                  #  205   0xff6a8  2      OPC=movb_m8_r8        
  movl %edx, %ecx                   #  206   0xff6aa  2      OPC=movl_r32_r32      
  jne .L_ff688                      #  207   0xff6ac  2      OPC=jne_label         
  leaq 0xc(%rbp), %rax              #  208   0xff6ae  4      OPC=leaq_r64_m16      
  leaq 0x2f(%rsp), %rdi             #  209   0xff6b2  5      OPC=leaq_r64_m16      
  leaq 0x20(%rsp), %rbx             #  210   0xff6b7  5      OPC=leaq_r64_m16      
  subq %rsi, %rax                   #  211   0xff6bc  3      OPC=subq_r64_r64      
  movq %rax, %rbp                   #  212   0xff6bf  3      OPC=movq_r64_r64      
  movq %rax, %rdx                   #  213   0xff6c2  3      OPC=movq_r64_r64      
  callq .__GI_memcpy                #  214   0xff6c5  5      OPC=callq_label       
  addq %rbp, %rax                   #  215   0xff6ca  3      OPC=addq_r64_r64      
  movq %rbx, 0x10(%rsp)             #  216   0xff6cd  5      OPC=movq_m64_r64      
  xorl %ebp, %ebp                   #  217   0xff6d2  2      OPC=xorl_r32_r32      
  movb $0x5d, (%rax)                #  218   0xff6d4  3      OPC=movb_m8_imm8      
  movb $0x0, 0x1(%rax)              #  219   0xff6d7  4      OPC=movb_m8_imm8      
  addq $0x1, %rax                   #  220   0xff6db  4      OPC=addq_r64_imm8     
  subq %rbx, %rax                   #  221   0xff6df  3      OPC=subq_r64_r64      
  movq %rax, 0x18(%rsp)             #  222   0xff6e2  5      OPC=movq_m64_r64      
  movq %rbx, %rax                   #  223   0xff6e7  3      OPC=movq_r64_r64      
  jmpq .L_ff4d7                     #  224   0xff6ea  5      OPC=jmpq_label_1      
  nop                               #  225   0xff6ef  1      OPC=nop               
  nop                               #  226   0xff6f0  1      OPC=nop               
  nop                               #  227   0xff6f1  1      OPC=nop               
.L_ff6f0:                           #        0xff6f2  0      OPC=<label>           
  movl 0x2c4e0a(%rip), %esi         #  228   0xff6f2  6      OPC=movl_r32_m32      
  movq 0x2c4dfb(%rip), %rdi         #  229   0xff6f8  7      OPC=movq_r64_m64      
  xorl %edx, %edx                   #  230   0xff6ff  2      OPC=xorl_r32_r32      
  orl $0x8, %esi                    #  231   0xff701  3      OPC=orl_r32_imm8      
  callq .openlog_internal           #  232   0xff704  5      OPC=callq_label       
  cmpl $0x1, 0x2c1bae(%rip)         #  233   0xff709  7      OPC=cmpl_m32_imm8     
  movl 0x2c4df0(%rip), %eax         #  234   0xff710  6      OPC=movl_r32_m32      
  je .L_ff770                       #  235   0xff716  2      OPC=je_label          
.L_ff716:                           #        0xff718  0      OPC=<label>           
  testl %eax, %eax                  #  236   0xff718  2      OPC=testl_r32_r32     
  jne .L_ff5a9                      #  237   0xff71a  6      OPC=jne_label_1       
.L_ff71e:                           #        0xff720  0      OPC=<label>           
  testb $0x2, 0x2c4ddb(%rip)        #  238   0xff720  7      OPC=testb_m8_imm8     
  je .L_ff5cc                       #  239   0xff727  6      OPC=je_label_1        
  leaq 0x8ce41(%rip), %rdi          #  240   0xff72d  7      OPC=leaq_r64_m16      
  xorl %edx, %edx                   #  241   0xff734  2      OPC=xorl_r32_r32      
  movl $0x101, %esi                 #  242   0xff736  5      OPC=movl_r32_imm32    
  xorl %eax, %eax                   #  243   0xff73b  2      OPC=xorl_r32_r32      
  callq .__open                     #  244   0xff73d  5      OPC=callq_label       
  testl %eax, %eax                  #  245   0xff742  2      OPC=testl_r32_r32     
  movl %eax, %ebx                   #  246   0xff744  2      OPC=movl_r32_r32      
  js .L_ff5cc                       #  247   0xff746  6      OPC=js_label_1        
  movq %rbp, %rdx                   #  248   0xff74c  3      OPC=movq_r64_r64      
  addq 0x10(%rsp), %rdx             #  249   0xff74f  5      OPC=addq_r64_m64      
  leaq 0x8ce27(%rip), %rsi          #  250   0xff754  7      OPC=leaq_r64_m16      
  movl %eax, %edi                   #  251   0xff75b  2      OPC=movl_r32_r32      
  xorl %eax, %eax                   #  252   0xff75d  2      OPC=xorl_r32_r32      
  callq .dprintf                    #  253   0xff75f  5      OPC=callq_label       
  movl %ebx, %edi                   #  254   0xff764  2      OPC=movl_r32_r32      
  callq .__close                    #  255   0xff766  5      OPC=callq_label       
  jmpq .L_ff5cc                     #  256   0xff76b  5      OPC=jmpq_label_1      
  xchgw %ax, %ax                    #  257   0xff770  2      OPC=xchgw_ax_r16      
.L_ff770:                           #        0xff772  0      OPC=<label>           
  addq $0x1, 0x18(%rsp)             #  258   0xff772  6      OPC=addq_m64_imm8     
  jmpq .L_ff716                     #  259   0xff778  2      OPC=jmpq_label        
  nop                               #  260   0xff77a  1      OPC=nop               
  nop                               #  261   0xff77b  1      OPC=nop               
  nop                               #  262   0xff77c  1      OPC=nop               
  nop                               #  263   0xff77d  1      OPC=nop               
  nop                               #  264   0xff77e  1      OPC=nop               
  nop                               #  265   0xff77f  1      OPC=nop               
  nop                               #  266   0xff780  1      OPC=nop               
  nop                               #  267   0xff781  1      OPC=nop               
.L_ff780:                           #        0xff782  0      OPC=<label>           
  movq 0x2c1689(%rip), %rax         #  268   0xff782  7      OPC=movq_r64_m64      
  movq (%rax), %rdi                 #  269   0xff789  3      OPC=movq_r64_m64      
  testq %rdi, %rdi                  #  270   0xff78c  3      OPC=testq_r64_r64     
  movq %rdi, 0x2c4d64(%rip)         #  271   0xff78f  7      OPC=movq_m64_r64      
  jne .L_ff466                      #  272   0xff796  6      OPC=jne_label_1       
  testb $0x1, 0x2c4d5f(%rip)        #  273   0xff79c  7      OPC=testb_m8_imm8     
  je .L_ff4b7                       #  274   0xff7a3  6      OPC=je_label_1        
  nop                               #  275   0xff7a9  1      OPC=nop               
  nop                               #  276   0xff7aa  1      OPC=nop               
  nop                               #  277   0xff7ab  1      OPC=nop               
  nop                               #  278   0xff7ac  1      OPC=nop               
  nop                               #  279   0xff7ad  1      OPC=nop               
  nop                               #  280   0xff7ae  1      OPC=nop               
  nop                               #  281   0xff7af  1      OPC=nop               
  nop                               #  282   0xff7b0  1      OPC=nop               
  nop                               #  283   0xff7b1  1      OPC=nop               
.L_ff7b0:                           #        0xff7b2  0      OPC=<label>           
  callq .__getpid                   #  284   0xff7b2  5      OPC=callq_label       
  leaq 0x8cdb2(%rip), %rsi          #  285   0xff7b7  7      OPC=leaq_r64_m16      
  movl %eax, %edx                   #  286   0xff7be  2      OPC=movl_r32_r32      
  movq %rbx, %rdi                   #  287   0xff7c0  3      OPC=movq_r64_r64      
  xorl %eax, %eax                   #  288   0xff7c3  2      OPC=xorl_r32_r32      
  callq .fprintf                    #  289   0xff7c5  5      OPC=callq_label       
  jmpq .L_ff47b                     #  290   0xff7ca  5      OPC=jmpq_label_1      
  nop                               #  291   0xff7cf  1      OPC=nop               
  nop                               #  292   0xff7d0  1      OPC=nop               
  nop                               #  293   0xff7d1  1      OPC=nop               
.L_ff7d0:                           #        0xff7d2  0      OPC=<label>           
  movl 0x2c4d2e(%rip), %eax         #  294   0xff7d2  6      OPC=movl_r32_m32      
  testl %eax, %eax                  #  295   0xff7d8  2      OPC=testl_r32_r32     
  je .L_ff71e                       #  296   0xff7da  6      OPC=je_label_1        
  movl 0x2c1ad4(%rip), %edi         #  297   0xff7e0  6      OPC=movl_r32_m32      
  callq .__close                    #  298   0xff7e6  5      OPC=callq_label       
  movl 0x2c4d11(%rip), %esi         #  299   0xff7eb  6      OPC=movl_r32_m32      
  movq 0x2c4d02(%rip), %rdi         #  300   0xff7f1  7      OPC=movq_r64_m64      
  xorl %edx, %edx                   #  301   0xff7f8  2      OPC=xorl_r32_r32      
  movl $0xffffffff, 0x2c1ab6(%rip)  #  302   0xff7fa  10     OPC=movl_m32_imm32    
  movl $0x0, 0x2c4cf8(%rip)         #  303   0xff804  10     OPC=movl_m32_imm32    
  orl $0x8, %esi                    #  304   0xff80e  3      OPC=orl_r32_imm8      
  callq .openlog_internal           #  305   0xff811  5      OPC=callq_label       
  movl 0x2c4cea(%rip), %ecx         #  306   0xff816  6      OPC=movl_r32_m32      
  testl %ecx, %ecx                  #  307   0xff81c  2      OPC=testl_r32_r32     
  je .L_ff71e                       #  308   0xff81e  6      OPC=je_label_1        
  movq 0x18(%rsp), %rdx             #  309   0xff824  5      OPC=movq_r64_m64      
  movq 0x10(%rsp), %rsi             #  310   0xff829  5      OPC=movq_r64_m64      
  movl $0x4000, %ecx                #  311   0xff82e  5      OPC=movl_r32_imm32    
  movl 0x2c1a81(%rip), %edi         #  312   0xff833  6      OPC=movl_r32_m32      
  callq .__send                     #  313   0xff839  5      OPC=callq_label       
  testq %rax, %rax                  #  314   0xff83e  3      OPC=testq_r64_r64     
  jns .L_ff5cc                      #  315   0xff841  6      OPC=jns_label_1       
  movl 0x2c4cb9(%rip), %edx         #  316   0xff847  6      OPC=movl_r32_m32      
  testl %edx, %edx                  #  317   0xff84d  2      OPC=testl_r32_r32     
  je .L_ff71e                       #  318   0xff84f  6      OPC=je_label_1        
  movl 0x2c1a5f(%rip), %edi         #  319   0xff855  6      OPC=movl_r32_m32      
  callq .__close                    #  320   0xff85b  5      OPC=callq_label       
  movl $0xffffffff, 0x2c1a50(%rip)  #  321   0xff860  10     OPC=movl_m32_imm32    
  movl $0x0, 0x2c4c92(%rip)         #  322   0xff86a  10     OPC=movl_m32_imm32    
  jmpq .L_ff71e                     #  323   0xff874  5      OPC=jmpq_label_1      
  nop                               #  324   0xff879  1      OPC=nop               
  nop                               #  325   0xff87a  1      OPC=nop               
  nop                               #  326   0xff87b  1      OPC=nop               
  nop                               #  327   0xff87c  1      OPC=nop               
  nop                               #  328   0xff87d  1      OPC=nop               
  nop                               #  329   0xff87e  1      OPC=nop               
  nop                               #  330   0xff87f  1      OPC=nop               
  nop                               #  331   0xff880  1      OPC=nop               
  nop                               #  332   0xff881  1      OPC=nop               
.L_ff880:                           #        0xff882  0      OPC=<label>           
  movl $0x20, %esi                  #  333   0xff882  5      OPC=movl_r32_imm32    
  movq %rbx, %rdi                   #  334   0xff887  3      OPC=movq_r64_r64      
  callq .__overflow                 #  335   0xff88a  5      OPC=callq_label       
  jmpq .L_ff4b7                     #  336   0xff88f  5      OPC=jmpq_label_1      
  nop                               #  337   0xff894  1      OPC=nop               
  nop                               #  338   0xff895  1      OPC=nop               
  nop                               #  339   0xff896  1      OPC=nop               
  nop                               #  340   0xff897  1      OPC=nop               
  nop                               #  341   0xff898  1      OPC=nop               
  nop                               #  342   0xff899  1      OPC=nop               
.L_ff898:                           #        0xff89a  0      OPC=<label>           
  movl $0x3a, %esi                  #  343   0xff89a  5      OPC=movl_r32_imm32    
  movq %rbx, %rdi                   #  344   0xff89f  3      OPC=movq_r64_r64      
  callq .__overflow                 #  345   0xff8a2  5      OPC=callq_label       
  jmpq .L_ff49e                     #  346   0xff8a7  5      OPC=jmpq_label_1      
  leaq 0x40(%rsp), %rdi             #  347   0xff8ac  5      OPC=leaq_r64_m16      
  movq %rax, %rbx                   #  348   0xff8b1  3      OPC=movq_r64_r64      
  callq .cancel_handler             #  349   0xff8b4  5      OPC=callq_label       
  movq %rbx, %rdi                   #  350   0xff8b9  3      OPC=movq_r64_r64      
  callq ._Unwind_Resume             #  351   0xff8bc  5      OPC=callq_label       
  movq %rax, %rbp                   #  352   0xff8c1  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                   #  353   0xff8c4  3      OPC=movq_r64_r64      
  callq .L_1f8c0                    #  354   0xff8c7  5      OPC=callq_label       
  movq %rbp, %rdi                   #  355   0xff8cc  3      OPC=movq_r64_r64      
  callq ._Unwind_Resume             #  356   0xff8cf  5      OPC=callq_label       
  nop                               #  357   0xff8d4  1      OPC=nop               
  nop                               #  358   0xff8d5  1      OPC=nop               
  nop                               #  359   0xff8d6  1      OPC=nop               
  nop                               #  360   0xff8d7  1      OPC=nop               
  nop                               #  361   0xff8d8  1      OPC=nop               
  nop                               #  362   0xff8d9  1      OPC=nop               
  nop                               #  363   0xff8da  1      OPC=nop               
  nop                               #  364   0xff8db  1      OPC=nop               
  nop                               #  365   0xff8dc  1      OPC=nop               
  nop                               #  366   0xff8dd  1      OPC=nop               
  nop                               #  367   0xff8de  1      OPC=nop               
  nop                               #  368   0xff8df  1      OPC=nop               
  nop                               #  369   0xff8e0  1      OPC=nop               
  nop                               #  370   0xff8e1  1      OPC=nop               
                                                                                   
.size vsyslog, .-vsyslog

