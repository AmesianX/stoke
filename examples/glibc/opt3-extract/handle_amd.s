  .text
  .globl handle_amd
  .type handle_amd, @function

#! file-offset 0xa7a70
#! rip-offset  0xa7a70
#! capacity    416 bytes

# Text                        #  Line  RIP      Bytes  Opcode                
.handle_amd:                  #        0xa7a70  0      OPC=<label>           
  pushq %rbx                  #  1     0xa7a70  1      OPC=pushq_r64_1       
  movl $0x80000000, %eax      #  2     0xa7a71  6      OPC=movl_r32_imm32_1  
  cpuid                       #  3     0xa7a77  2      OPC=cpuid             
  cmpl $0xc4, %edi            #  4     0xa7a79  6      OPC=cmpl_r32_imm32    
  jg .L_a7ac0                 #  5     0xa7a7f  2      OPC=jg_label          
  xorl %edx, %edx             #  6     0xa7a81  2      OPC=xorl_r32_r32      
  cmpl $0xbe, %edi            #  7     0xa7a83  6      OPC=cmpl_r32_imm32    
  setg %dl                    #  8     0xa7a89  3      OPC=setg_r8           
  subl $0x7ffffffb, %edx      #  9     0xa7a8c  6      OPC=subl_r32_imm32    
  cmpl %eax, %edx             #  10    0xa7a92  2      OPC=cmpl_r32_r32      
  ja .L_a7ac0                 #  11    0xa7a94  2      OPC=ja_label          
  movl %edx, %eax             #  12    0xa7a96  2      OPC=movl_r32_r32      
  cpuid                       #  13    0xa7a98  2      OPC=cpuid             
  cmpl $0xbb, %edi            #  14    0xa7a9a  6      OPC=cmpl_r32_imm32    
  jle .L_a7ac8                #  15    0xa7aa0  2      OPC=jle_label         
.L_a7aa1:                     #        0xa7aa2  0      OPC=<label>           
  subl $0xbc, %edi            #  16    0xa7aa2  6      OPC=subl_r32_imm32    
  cmpl $0x8, %edi             #  17    0xa7aa8  3      OPC=cmpl_r32_imm8     
  ja .L_a7bf0                 #  18    0xa7aab  6      OPC=ja_label_1        
  leaq 0xde109(%rip), %rsi    #  19    0xa7ab1  7      OPC=leaq_r64_m16      
  movslq (%rsi,%rdi,4), %rax  #  20    0xa7ab8  4      OPC=movslq_r64_m32    
  addq %rax, %rsi             #  21    0xa7abc  3      OPC=addq_r64_r64      
  jmpq %rsi                   #  22    0xa7abf  2      OPC=jmpq_r64          
.L_a7ac0:                     #        0xa7ac1  0      OPC=<label>           
  xorl %eax, %eax             #  23    0xa7ac1  2      OPC=xorl_r32_r32      
.L_a7ac2:                     #        0xa7ac3  0      OPC=<label>           
  popq %rbx                   #  24    0xa7ac3  1      OPC=popq_r64_1        
  retq                        #  25    0xa7ac4  1      OPC=retq              
  nop                         #  26    0xa7ac5  1      OPC=nop               
  nop                         #  27    0xa7ac6  1      OPC=nop               
  nop                         #  28    0xa7ac7  1      OPC=nop               
  nop                         #  29    0xa7ac8  1      OPC=nop               
.L_a7ac8:                     #        0xa7ac9  0      OPC=<label>           
  addl $0x3, %edi             #  30    0xa7ac9  3      OPC=addl_r32_imm8     
  movl %edx, %ecx             #  31    0xa7acc  2      OPC=movl_r32_r32      
  jmpq .L_a7aa1               #  32    0xa7ace  2      OPC=jmpq_label        
  nop                         #  33    0xa7ad0  1      OPC=nop               
  xorl %eax, %eax             #  34    0xa7ad1  2      OPC=xorl_r32_r32      
  testb $0xf0, %ch            #  35    0xa7ad3  3      OPC=testb_rh_imm8     
  je .L_a7ac2                 #  36    0xa7ad6  2      OPC=je_label          
  movzbl %cl, %eax            #  37    0xa7ad8  3      OPC=movzbl_r32_r8     
  popq %rbx                   #  38    0xa7adb  1      OPC=popq_r64_1        
  retq                        #  39    0xa7adc  1      OPC=retq              
  nop                         #  40    0xa7add  1      OPC=nop               
  nop                         #  41    0xa7ade  1      OPC=nop               
  nop                         #  42    0xa7adf  1      OPC=nop               
  nop                         #  43    0xa7ae0  1      OPC=nop               
  xorl %eax, %eax             #  44    0xa7ae1  2      OPC=xorl_r32_r32      
  testb $0xf0, %ch            #  45    0xa7ae3  3      OPC=testb_rh_imm8     
  je .L_a7ac2                 #  46    0xa7ae6  2      OPC=je_label          
  movl %ecx, %eax             #  47    0xa7ae8  2      OPC=movl_r32_r32      
  shrl $0x6, %eax             #  48    0xa7aea  3      OPC=shrl_r32_imm8     
  andl $0x3fffc00, %eax       #  49    0xa7aed  5      OPC=andl_eax_imm32    
  popq %rbx                   #  50    0xa7af2  1      OPC=popq_r64_1        
  retq                        #  51    0xa7af3  1      OPC=retq              
  nop                         #  52    0xa7af4  1      OPC=nop               
  nop                         #  53    0xa7af5  1      OPC=nop               
  nop                         #  54    0xa7af6  1      OPC=nop               
  nop                         #  55    0xa7af7  1      OPC=nop               
  nop                         #  56    0xa7af8  1      OPC=nop               
  xorl %eax, %eax             #  57    0xa7af9  2      OPC=xorl_r32_r32      
  testb $0xf0, %dh            #  58    0xa7afb  3      OPC=testb_rh_imm8     
  je .L_a7ac2                 #  59    0xa7afe  2      OPC=je_label          
  movzbl %dl, %eax            #  60    0xa7b00  3      OPC=movzbl_r32_r8     
  popq %rbx                   #  61    0xa7b03  1      OPC=popq_r64_1        
  retq                        #  62    0xa7b04  1      OPC=retq              
  nop                         #  63    0xa7b05  1      OPC=nop               
  nop                         #  64    0xa7b06  1      OPC=nop               
  nop                         #  65    0xa7b07  1      OPC=nop               
  nop                         #  66    0xa7b08  1      OPC=nop               
  movl %ecx, %eax             #  67    0xa7b09  2      OPC=movl_r32_r32      
  shrl $0xe, %eax             #  68    0xa7b0b  3      OPC=shrl_r32_imm8     
  andl $0x3fc00, %eax         #  69    0xa7b0e  5      OPC=andl_eax_imm32    
  popq %rbx                   #  70    0xa7b13  1      OPC=popq_r64_1        
  retq                        #  71    0xa7b14  1      OPC=retq              
  nop                         #  72    0xa7b15  1      OPC=nop               
  nop                         #  73    0xa7b16  1      OPC=nop               
  nop                         #  74    0xa7b17  1      OPC=nop               
  nop                         #  75    0xa7b18  1      OPC=nop               
  shrl $0x10, %ecx            #  76    0xa7b19  3      OPC=shrl_r32_imm8     
  movzbl %cl, %eax            #  77    0xa7b1c  3      OPC=movzbl_r32_r8     
  cmpl $0xff, %eax            #  78    0xa7b1f  5      OPC=cmpl_eax_imm32    
  jne .L_a7ac2                #  79    0xa7b24  2      OPC=jne_label         
  leal (,%rcx,4), %eax        #  80    0xa7b26  7      OPC=leal_r32_m16      
  popq %rbx                   #  81    0xa7b2d  1      OPC=popq_r64_1        
  andl $0x3fc00, %eax         #  82    0xa7b2e  5      OPC=andl_eax_imm32    
  retq                        #  83    0xa7b33  1      OPC=retq              
  nop                         #  84    0xa7b34  1      OPC=nop               
  nop                         #  85    0xa7b35  1      OPC=nop               
  nop                         #  86    0xa7b36  1      OPC=nop               
  nop                         #  87    0xa7b37  1      OPC=nop               
  nop                         #  88    0xa7b38  1      OPC=nop               
  movl %ecx, %edx             #  89    0xa7b39  2      OPC=movl_r32_r32      
  leaq 0xde0a3(%rip), %rax    #  90    0xa7b3b  7      OPC=leaq_r64_m16      
  shrl $0xc, %edx             #  91    0xa7b42  3      OPC=shrl_r32_imm8     
  andl $0xf, %edx             #  92    0xa7b45  3      OPC=andl_r32_imm8     
  movslq (%rax,%rdx,4), %rsi  #  93    0xa7b48  4      OPC=movslq_r64_m32    
  addq %rsi, %rax             #  94    0xa7b4c  3      OPC=addq_r64_r64      
  jmpq %rax                   #  95    0xa7b4f  2      OPC=jmpq_r64          
  xorl %eax, %eax             #  96    0xa7b51  2      OPC=xorl_r32_r32      
  testb $0xf0, %dh            #  97    0xa7b53  3      OPC=testb_rh_imm8     
  je .L_a7ac2                 #  98    0xa7b56  6      OPC=je_label_1        
  leaq (%rdx,%rdx,1), %rax    #  99    0xa7b5c  4      OPC=leaq_r64_m16      
  popq %rbx                   #  100   0xa7b60  1      OPC=popq_r64_1        
  andl $0x7ff80000, %eax      #  101   0xa7b61  5      OPC=andl_eax_imm32    
  retq                        #  102   0xa7b66  1      OPC=retq              
  nop                         #  103   0xa7b67  1      OPC=nop               
  nop                         #  104   0xa7b68  1      OPC=nop               
  nop                         #  105   0xa7b69  1      OPC=nop               
  nop                         #  106   0xa7b6a  1      OPC=nop               
  nop                         #  107   0xa7b6b  1      OPC=nop               
  nop                         #  108   0xa7b6c  1      OPC=nop               
  nop                         #  109   0xa7b6d  1      OPC=nop               
  nop                         #  110   0xa7b6e  1      OPC=nop               
  nop                         #  111   0xa7b6f  1      OPC=nop               
  nop                         #  112   0xa7b70  1      OPC=nop               
  movl %edx, %eax             #  113   0xa7b71  2      OPC=movl_r32_r32      
  leaq 0xde0ab(%rip), %rcx    #  114   0xa7b73  7      OPC=leaq_r64_m16      
  shrl $0xc, %eax             #  115   0xa7b7a  3      OPC=shrl_r32_imm8     
  andl $0xf, %eax             #  116   0xa7b7d  3      OPC=andl_r32_imm8     
  movslq (%rcx,%rax,4), %rsi  #  117   0xa7b80  4      OPC=movslq_r64_m32    
  addq %rsi, %rcx             #  118   0xa7b84  3      OPC=addq_r64_r64      
  jmpq %rcx                   #  119   0xa7b87  2      OPC=jmpq_r64          
  movl $0x8, %eax             #  120   0xa7b89  5      OPC=movl_r32_imm32    
  popq %rbx                   #  121   0xa7b8e  1      OPC=popq_r64_1        
  retq                        #  122   0xa7b8f  1      OPC=retq              
  movl $0x80, %eax            #  123   0xa7b90  5      OPC=movl_r32_imm32    
  popq %rbx                   #  124   0xa7b95  1      OPC=popq_r64_1        
  retq                        #  125   0xa7b96  1      OPC=retq              
  movl $0x60, %eax            #  126   0xa7b97  5      OPC=movl_r32_imm32    
  popq %rbx                   #  127   0xa7b9c  1      OPC=popq_r64_1        
  retq                        #  128   0xa7b9d  1      OPC=retq              
  movl $0x40, %eax            #  129   0xa7b9e  5      OPC=movl_r32_imm32    
  popq %rbx                   #  130   0xa7ba3  1      OPC=popq_r64_1        
  retq                        #  131   0xa7ba4  1      OPC=retq              
  movl $0x30, %eax            #  132   0xa7ba5  5      OPC=movl_r32_imm32    
  popq %rbx                   #  133   0xa7baa  1      OPC=popq_r64_1        
  retq                        #  134   0xa7bab  1      OPC=retq              
  movl $0x20, %eax            #  135   0xa7bac  5      OPC=movl_r32_imm32    
  popq %rbx                   #  136   0xa7bb1  1      OPC=popq_r64_1        
  retq                        #  137   0xa7bb2  1      OPC=retq              
  movl $0x10, %eax            #  138   0xa7bb3  5      OPC=movl_r32_imm32    
  popq %rbx                   #  139   0xa7bb8  1      OPC=popq_r64_1        
  retq                        #  140   0xa7bb9  1      OPC=retq              
  movl %ecx, %edx             #  141   0xa7bba  2      OPC=movl_r32_r32      
  movzbl %cl, %ecx            #  142   0xa7bbc  3      OPC=movzbl_r32_r8     
  shrl $0x6, %edx             #  143   0xa7bbf  3      OPC=shrl_r32_imm8     
  movl %edx, %eax             #  144   0xa7bc2  2      OPC=movl_r32_r32      
  xorl %edx, %edx             #  145   0xa7bc4  2      OPC=xorl_r32_r32      
  andl $0x3fffc00, %eax       #  146   0xa7bc6  5      OPC=andl_eax_imm32    
  divl %ecx                   #  147   0xa7bcb  2      OPC=divl_r32          
  popq %rbx                   #  148   0xa7bcd  1      OPC=popq_r64_1        
  movl %eax, %eax             #  149   0xa7bce  2      OPC=movl_r32_r32      
  retq                        #  150   0xa7bd0  1      OPC=retq              
  movq %rdx, %rax             #  151   0xa7bd1  3      OPC=movq_r64_r64      
  popq %rbx                   #  152   0xa7bd4  1      OPC=popq_r64_1        
  retq                        #  153   0xa7bd5  1      OPC=retq              
  movl %edx, %ecx             #  154   0xa7bd6  2      OPC=movl_r32_r32      
  movzbl %dl, %esi            #  155   0xa7bd8  3      OPC=movzbl_r32_r8     
  xorl %edx, %edx             #  156   0xa7bdb  2      OPC=xorl_r32_r32      
  andl $0x3ffc0000, %ecx      #  157   0xa7bdd  6      OPC=andl_r32_imm32    
  leal (%rcx,%rcx,1), %eax    #  158   0xa7be3  3      OPC=leal_r32_m16      
  popq %rbx                   #  159   0xa7be6  1      OPC=popq_r64_1        
  divl %esi                   #  160   0xa7be7  2      OPC=divl_r32          
  movl %eax, %eax             #  161   0xa7be9  2      OPC=movl_r32_r32      
  retq                        #  162   0xa7beb  1      OPC=retq              
  nop                         #  163   0xa7bec  1      OPC=nop               
  nop                         #  164   0xa7bed  1      OPC=nop               
  nop                         #  165   0xa7bee  1      OPC=nop               
  nop                         #  166   0xa7bef  1      OPC=nop               
  nop                         #  167   0xa7bf0  1      OPC=nop               
.L_a7bf0:                     #        0xa7bf1  0      OPC=<label>           
  leaq 0xe3f01(%rip), %rcx    #  168   0xa7bf1  7      OPC=leaq_r64_m16      
  leaq 0xe3eb2(%rip), %rsi    #  169   0xa7bf8  7      OPC=leaq_r64_m16      
  leaq 0xe3ee1(%rip), %rdi    #  170   0xa7bff  7      OPC=leaq_r64_m16      
  movl $0x1aa, %edx           #  171   0xa7c06  5      OPC=movl_r32_imm32    
  callq .__assert_fail        #  172   0xa7c0b  5      OPC=callq_label       
  nop                         #  173   0xa7c10  1      OPC=nop               
                                                                             
.size handle_amd, .-handle_amd

