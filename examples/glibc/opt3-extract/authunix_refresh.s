  .text
  .globl authunix_refresh
  .type authunix_refresh, @function

#! file-offset 0x131a40
#! rip-offset  0x131a40
#! capacity    400 bytes

# Text                                   #  Line  RIP       Bytes  Opcode              
.authunix_refresh:                       #        0x131a40  0      OPC=<label>         
  pushq %r15                             #  1     0x131a40  2      OPC=pushq_r64_1     
  pushq %r14                             #  2     0x131a42  2      OPC=pushq_r64_1     
  pushq %r13                             #  3     0x131a44  2      OPC=pushq_r64_1     
  pushq %r12                             #  4     0x131a46  2      OPC=pushq_r64_1     
  pushq %rbp                             #  5     0x131a48  1      OPC=pushq_r64_1     
  pushq %rbx                             #  6     0x131a49  1      OPC=pushq_r64_1     
  xorl %ebx, %ebx                        #  7     0x131a4a  2      OPC=xorl_r32_r32    
  subq $0xa8, %rsp                       #  8     0x131a4c  7      OPC=subq_r64_imm32  
  movq 0x40(%rdi), %rbp                  #  9     0x131a53  4      OPC=movq_r64_m64    
  movq 0x8(%rbp), %rsi                   #  10    0x131a57  4      OPC=movq_r64_m64    
  cmpq %rsi, 0x8(%rdi)                   #  11    0x131a5b  4      OPC=cmpq_m64_r64    
  je .L_131acc                           #  12    0x131a5f  2      OPC=je_label        
  addq $0x1, 0x30(%rbp)                  #  13    0x131a61  5      OPC=addq_m64_imm8   
  movl 0x10(%rbp), %edx                  #  14    0x131a66  3      OPC=movl_r32_m32    
  leaq 0x40(%rsp), %r13                  #  15    0x131a69  5      OPC=leaq_r64_m16    
  leaq 0x10(%rsp), %r14                  #  16    0x131a6e  5      OPC=leaq_r64_m16    
  movl $0x1, %ecx                        #  17    0x131a73  5      OPC=movl_r32_imm32  
  movq %rdi, %r12                        #  18    0x131a78  3      OPC=movq_r64_r64    
  movq %r13, %rdi                        #  19    0x131a7b  3      OPC=movq_r64_r64    
  movq $0x0, 0x18(%rsp)                  #  20    0x131a7e  9      OPC=movq_m64_imm32  
  movq $0x0, 0x30(%rsp)                  #  21    0x131a87  9      OPC=movq_m64_imm32  
  callq .xdrmem_create_GLIBC_2_2_5       #  22    0x131a90  5      OPC=callq_label     
  movq %r14, %rsi                        #  23    0x131a95  3      OPC=movq_r64_r64    
  movq %r13, %rdi                        #  24    0x131a98  3      OPC=movq_r64_r64    
  callq .xdr_authunix_parms_GLIBC_2_2_5  #  25    0x131a9b  5      OPC=callq_label     
  testl %eax, %eax                       #  26    0x131aa0  2      OPC=testl_r32_r32   
  jne .L_131ae0                          #  27    0x131aa2  2      OPC=jne_label       
.L_131aa4:                               #        0x131aa4  0      OPC=<label>         
  xorl %ebx, %ebx                        #  28    0x131aa4  2      OPC=xorl_r32_r32    
.L_131aa6:                               #        0x131aa6  0      OPC=<label>         
  movq %r14, %rsi                        #  29    0x131aa6  3      OPC=movq_r64_r64    
  movq %r13, %rdi                        #  30    0x131aa9  3      OPC=movq_r64_r64    
  movl $0x2, 0x40(%rsp)                  #  31    0x131aac  8      OPC=movl_m32_imm32  
  callq .xdr_authunix_parms_GLIBC_2_2_5  #  32    0x131ab4  5      OPC=callq_label     
  movq 0x48(%rsp), %rax                  #  33    0x131ab9  5      OPC=movq_r64_m64    
  movq 0x38(%rax), %rax                  #  34    0x131abe  4      OPC=movq_r64_m64    
  testq %rax, %rax                       #  35    0x131ac2  3      OPC=testq_r64_r64   
  je .L_131acc                           #  36    0x131ac5  2      OPC=je_label        
  movq %r13, %rdi                        #  37    0x131ac7  3      OPC=movq_r64_r64    
  callq %rax                             #  38    0x131aca  2      OPC=callq_r64       
.L_131acc:                               #        0x131acc  0      OPC=<label>         
  addq $0xa8, %rsp                       #  39    0x131acc  7      OPC=addq_r64_imm32  
  movl %ebx, %eax                        #  40    0x131ad3  2      OPC=movl_r32_r32    
  popq %rbx                              #  41    0x131ad5  1      OPC=popq_r64_1      
  popq %rbp                              #  42    0x131ad6  1      OPC=popq_r64_1      
  popq %r12                              #  43    0x131ad7  2      OPC=popq_r64_1      
  popq %r13                              #  44    0x131ad9  2      OPC=popq_r64_1      
  popq %r14                              #  45    0x131adb  2      OPC=popq_r64_1      
  popq %r15                              #  46    0x131add  2      OPC=popq_r64_1      
  retq                                   #  47    0x131adf  1      OPC=retq            
.L_131ae0:                               #        0x131ae0  0      OPC=<label>         
  xorl %esi, %esi                        #  48    0x131ae0  2      OPC=xorl_r32_r32    
  movq %rsp, %rdi                        #  49    0x131ae2  3      OPC=movq_r64_r64    
  callq .malloc_plt                      #  50    0x131ae5  5      OPC=callq_label     
  movq (%rsp), %rax                      #  51    0x131aea  4      OPC=movq_r64_m64    
  xorl %esi, %esi                        #  52    0x131aee  2      OPC=xorl_r32_r32    
  movq %r13, %rdi                        #  53    0x131af0  3      OPC=movq_r64_r64    
  movl $0x0, 0x40(%rsp)                  #  54    0x131af3  8      OPC=movl_m32_imm32  
  movq %rax, 0x10(%rsp)                  #  55    0x131afb  5      OPC=movq_m64_r64    
  movq 0x48(%rsp), %rax                  #  56    0x131b00  5      OPC=movq_r64_m64    
  callq 0x28(%rax)                       #  57    0x131b05  3      OPC=callq_m64       
  movq %r14, %rsi                        #  58    0x131b08  3      OPC=movq_r64_r64    
  movq %r13, %rdi                        #  59    0x131b0b  3      OPC=movq_r64_r64    
  callq .xdr_authunix_parms_GLIBC_2_2_5  #  60    0x131b0e  5      OPC=callq_label     
  testl %eax, %eax                       #  61    0x131b13  2      OPC=testl_r32_r32   
  movl %eax, %ebx                        #  62    0x131b15  2      OPC=movl_r32_r32    
  je .L_131aa4                           #  63    0x131b17  2      OPC=je_label        
  movq (%rbp), %rax                      #  64    0x131b19  4      OPC=movq_r64_m64    
  movq 0x40(%r12), %r15                  #  65    0x131b1d  5      OPC=movq_r64_m64    
  xorl %ecx, %ecx                        #  66    0x131b22  2      OPC=xorl_r32_r32    
  movl $0x190, %edx                      #  67    0x131b24  5      OPC=movl_r32_imm32  
  movq %rax, (%r12)                      #  68    0x131b29  4      OPC=movq_m64_r64    
  movq 0x8(%rbp), %rax                   #  69    0x131b2d  4      OPC=movq_r64_m64    
  leaq 0x38(%r15), %rsi                  #  70    0x131b31  4      OPC=leaq_r64_m16    
  movq %rax, 0x8(%r12)                   #  71    0x131b35  5      OPC=movq_m64_r64    
  movq 0x10(%rbp), %rax                  #  72    0x131b3a  4      OPC=movq_r64_m64    
  leaq 0x70(%rsp), %rbp                  #  73    0x131b3e  5      OPC=leaq_r64_m16    
  movq %rbp, %rdi                        #  74    0x131b43  3      OPC=movq_r64_r64    
  movq %rax, 0x10(%r12)                  #  75    0x131b46  5      OPC=movq_m64_r64    
  callq .xdrmem_create_GLIBC_2_2_5       #  76    0x131b4b  5      OPC=callq_label     
  movq %r12, %rsi                        #  77    0x131b50  3      OPC=movq_r64_r64    
  movq %rbp, %rdi                        #  78    0x131b53  3      OPC=movq_r64_r64    
  callq .xdr_opaque_auth_GLIBC_2_2_5     #  79    0x131b56  5      OPC=callq_label     
  testl %eax, %eax                       #  80    0x131b5b  2      OPC=testl_r32_r32   
  jne .L_131ba0                          #  81    0x131b5d  2      OPC=jne_label       
.L_131b5f:                               #        0x131b5f  0      OPC=<label>         
  leaq 0x58a36(%rip), %rdi               #  82    0x131b5f  7      OPC=leaq_r64_m16    
  leaq 0x5ee13(%rip), %rsi               #  83    0x131b66  7      OPC=leaq_r64_m16    
  movl $0x5, %edx                        #  84    0x131b6d  5      OPC=movl_r32_imm32  
  callq .__dcgettext                     #  85    0x131b72  5      OPC=callq_label     
  movq %rax, %rdi                        #  86    0x131b77  3      OPC=movq_r64_r64    
  callq .perror                          #  87    0x131b7a  5      OPC=callq_label     
.L_131b7f:                               #        0x131b7f  0      OPC=<label>         
  movq 0x78(%rsp), %rax                  #  88    0x131b7f  5      OPC=movq_r64_m64    
  movq 0x38(%rax), %rax                  #  89    0x131b84  4      OPC=movq_r64_m64    
  testq %rax, %rax                       #  90    0x131b88  3      OPC=testq_r64_r64   
  je .L_131aa6                           #  91    0x131b8b  6      OPC=je_label_1      
  movq %rbp, %rdi                        #  92    0x131b91  3      OPC=movq_r64_r64    
  callq %rax                             #  93    0x131b94  2      OPC=callq_r64       
  jmpq .L_131aa6                         #  94    0x131b96  5      OPC=jmpq_label_1    
  nop                                    #  95    0x131b9b  1      OPC=nop             
  nop                                    #  96    0x131b9c  1      OPC=nop             
  nop                                    #  97    0x131b9d  1      OPC=nop             
  nop                                    #  98    0x131b9e  1      OPC=nop             
  nop                                    #  99    0x131b9f  1      OPC=nop             
.L_131ba0:                               #        0x131ba0  0      OPC=<label>         
  leaq 0x18(%r12), %rsi                  #  100   0x131ba0  5      OPC=leaq_r64_m16    
  movq %rbp, %rdi                        #  101   0x131ba5  3      OPC=movq_r64_r64    
  callq .xdr_opaque_auth_GLIBC_2_2_5     #  102   0x131ba8  5      OPC=callq_label     
  testl %eax, %eax                       #  103   0x131bad  2      OPC=testl_r32_r32   
  je .L_131b5f                           #  104   0x131baf  2      OPC=je_label        
  movq 0x78(%rsp), %rax                  #  105   0x131bb1  5      OPC=movq_r64_m64    
  movq %rbp, %rdi                        #  106   0x131bb6  3      OPC=movq_r64_r64    
  callq 0x20(%rax)                       #  107   0x131bb9  3      OPC=callq_m64       
  movl %eax, 0x1c8(%r15)                 #  108   0x131bbc  7      OPC=movl_m32_r32    
  jmpq .L_131b7f                         #  109   0x131bc3  2      OPC=jmpq_label      
  nop                                    #  110   0x131bc5  1      OPC=nop             
  nop                                    #  111   0x131bc6  1      OPC=nop             
  nop                                    #  112   0x131bc7  1      OPC=nop             
  nop                                    #  113   0x131bc8  1      OPC=nop             
  nop                                    #  114   0x131bc9  1      OPC=nop             
  nop                                    #  115   0x131bca  1      OPC=nop             
  nop                                    #  116   0x131bcb  1      OPC=nop             
  nop                                    #  117   0x131bcc  1      OPC=nop             
  nop                                    #  118   0x131bcd  1      OPC=nop             
  nop                                    #  119   0x131bce  1      OPC=nop             
  nop                                    #  120   0x131bcf  1      OPC=nop             
                                                                                       
.size authunix_refresh, .-authunix_refresh

