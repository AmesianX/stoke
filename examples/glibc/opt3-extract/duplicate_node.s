  .text
  .globl duplicate_node
  .type duplicate_node, @function

#! file-offset 0xd67d0
#! rip-offset  0xd67d0
#! capacity    640 bytes

# Text                             #  Line  RIP      Bytes  Opcode                
.duplicate_node:                   #        0xd67d0  0      OPC=<label>           
  pushq %r15                       #  1     0xd67d0  2      OPC=pushq_r64_1       
  pushq %r14                       #  2     0xd67d2  2      OPC=pushq_r64_1       
  pushq %r13                       #  3     0xd67d4  2      OPC=pushq_r64_1       
  pushq %r12                       #  4     0xd67d6  2      OPC=pushq_r64_1       
  movslq %esi, %r12                #  5     0xd67d8  3      OPC=movslq_r64_r32    
  pushq %rbp                       #  6     0xd67db  1      OPC=pushq_r64_1       
  pushq %rbx                       #  7     0xd67dc  1      OPC=pushq_r64_1       
  movq %rdi, %rbx                  #  8     0xd67dd  3      OPC=movq_r64_r64      
  movq %r12, %r15                  #  9     0xd67e0  3      OPC=movq_r64_r64      
  shlq $0x4, %r12                  #  10    0xd67e3  4      OPC=shlq_r64_imm8     
  subq $0x48, %rsp                 #  11    0xd67e7  4      OPC=subq_r64_imm8     
  movq (%rdi), %rdi                #  12    0xd67eb  3      OPC=movq_r64_m64      
  movq 0x8(%rbx), %r10             #  13    0xd67ee  4      OPC=movq_r64_m64      
  movl %edx, 0xc(%rsp)             #  14    0xd67f2  4      OPC=movl_m32_r32      
  leaq (%rdi,%r12,1), %rax         #  15    0xd67f6  4      OPC=leaq_r64_m16      
  movzbl 0x8(%rax), %r14d          #  16    0xd67fa  5      OPC=movzbl_r32_m8     
  movq (%rax), %r9                 #  17    0xd67ff  3      OPC=movq_r64_m64      
  movq 0x8(%rax), %rbp             #  18    0xd6802  4      OPC=movq_r64_m64      
  movq 0x10(%rbx), %rax            #  19    0xd6806  4      OPC=movq_r64_m64      
  cmpq %r10, %rax                  #  20    0xd680a  3      OPC=cmpq_r64_r64      
  movl %r14d, %r13d                #  21    0xd680d  3      OPC=movl_r32_r32      
  jb .L_d6911                      #  22    0xd6810  6      OPC=jb_label_1        
  leaq (%r10,%r10,1), %rax         #  23    0xd6816  4      OPC=leaq_r64_m16      
  movq %r9, 0x20(%rsp)             #  24    0xd681a  5      OPC=movq_m64_r64      
  movq %rax, %rsi                  #  25    0xd681f  3      OPC=movq_r64_r64      
  movq $0xfffffffffffffff, %rax    #  26    0xd6822  10     OPC=movq_r64_imm64    
  cmpq %rax, %rsi                  #  27    0xd682c  3      OPC=cmpq_r64_r64      
  movq %rsi, 0x18(%rsp)            #  28    0xd682f  5      OPC=movq_m64_r64      
  ja .L_d6a48                      #  29    0xd6834  6      OPC=ja_label_1        
  movq %r10, %rax                  #  30    0xd683a  3      OPC=movq_r64_r64      
  movq %r10, 0x28(%rsp)            #  31    0xd683d  5      OPC=movq_m64_r64      
  shlq $0x5, %rax                  #  32    0xd6842  4      OPC=shlq_r64_imm8     
  movq %rax, %rsi                  #  33    0xd6846  3      OPC=movq_r64_r64      
  movq %rax, 0x10(%rsp)            #  34    0xd6849  5      OPC=movq_m64_r64      
  callq .__tls_get_addr_plt        #  35    0xd684e  5      OPC=callq_label       
  testq %rax, %rax                 #  36    0xd6853  3      OPC=testq_r64_r64     
  je .L_d6a48                      #  37    0xd6856  6      OPC=je_label_1        
  movq 0x28(%rsp), %r10            #  38    0xd685c  5      OPC=movq_r64_m64      
  movq 0x18(%rbx), %rdi            #  39    0xd6861  4      OPC=movq_r64_m64      
  movq %rax, (%rbx)                #  40    0xd6865  3      OPC=movq_m64_r64      
  leaq (,%r10,8), %r11             #  41    0xd6868  8      OPC=leaq_r64_m16      
  movq %r11, %rsi                  #  42    0xd6870  3      OPC=movq_r64_r64      
  movq %r11, 0x30(%rsp)            #  43    0xd6873  5      OPC=movq_m64_r64      
  callq .__tls_get_addr_plt        #  44    0xd6878  5      OPC=callq_label       
  movq 0x30(%rsp), %r11            #  45    0xd687d  5      OPC=movq_r64_m64      
  movq 0x20(%rbx), %rdi            #  46    0xd6882  4      OPC=movq_r64_m64      
  movq %rax, 0x28(%rsp)            #  47    0xd6886  5      OPC=movq_m64_r64      
  movq %r11, %rsi                  #  48    0xd688b  3      OPC=movq_r64_r64      
  callq .__tls_get_addr_plt        #  49    0xd688e  5      OPC=callq_label       
  movq 0x28(%rbx), %rdi            #  50    0xd6893  4      OPC=movq_r64_m64      
  movq 0x10(%rsp), %rsi            #  51    0xd6897  5      OPC=movq_r64_m64      
  movq %rax, 0x30(%rsp)            #  52    0xd689c  5      OPC=movq_m64_r64      
  callq .__tls_get_addr_plt        #  53    0xd68a1  5      OPC=callq_label       
  movq 0x30(%rbx), %rdi            #  54    0xd68a6  4      OPC=movq_r64_m64      
  movq 0x10(%rsp), %rsi            #  55    0xd68aa  5      OPC=movq_r64_m64      
  movq %rax, 0x38(%rsp)            #  56    0xd68af  5      OPC=movq_m64_r64      
  callq .__tls_get_addr_plt        #  57    0xd68b4  5      OPC=callq_label       
  movq 0x28(%rsp), %r10            #  58    0xd68b9  5      OPC=movq_r64_m64      
  testq %r10, %r10                 #  59    0xd68be  3      OPC=testq_r64_r64     
  je .L_d6a48                      #  60    0xd68c1  6      OPC=je_label_1        
  movq 0x30(%rsp), %r11            #  61    0xd68c7  5      OPC=movq_r64_m64      
  testq %r11, %r11                 #  62    0xd68cc  3      OPC=testq_r64_r64     
  je .L_d6a48                      #  63    0xd68cf  6      OPC=je_label_1        
  movq 0x38(%rsp), %rdx            #  64    0xd68d5  5      OPC=movq_r64_m64      
  testq %rdx, %rdx                 #  65    0xd68da  3      OPC=testq_r64_r64     
  je .L_d6a48                      #  66    0xd68dd  6      OPC=je_label_1        
  testq %rax, %rax                 #  67    0xd68e3  3      OPC=testq_r64_r64     
  je .L_d6a48                      #  68    0xd68e6  6      OPC=je_label_1        
  movq 0x18(%rsp), %rsi            #  69    0xd68ec  5      OPC=movq_r64_m64      
  movq %rax, 0x30(%rbx)            #  70    0xd68f1  4      OPC=movq_m64_r64      
  movq (%rbx), %rdi                #  71    0xd68f5  3      OPC=movq_r64_m64      
  movq 0x10(%rbx), %rax            #  72    0xd68f8  4      OPC=movq_r64_m64      
  movq 0x20(%rsp), %r9             #  73    0xd68fc  5      OPC=movq_r64_m64      
  movq %r10, 0x18(%rbx)            #  74    0xd6901  4      OPC=movq_m64_r64      
  movq %r11, 0x20(%rbx)            #  75    0xd6905  4      OPC=movq_m64_r64      
  movq %rdx, 0x28(%rbx)            #  76    0xd6909  4      OPC=movq_m64_r64      
  movq %rsi, 0x8(%rbx)             #  77    0xd690d  4      OPC=movq_m64_r64      
.L_d6911:                          #        0xd6911  0      OPC=<label>           
  shlq $0x4, %rax                  #  78    0xd6911  4      OPC=shlq_r64_imm8     
  movb %r13b, %bpl                 #  79    0xd6915  3      OPC=movb_r8_r8        
  xorl %ecx, %ecx                  #  80    0xd6918  2      OPC=xorl_r32_r32      
  addq %rdi, %rax                  #  81    0xd691a  3      OPC=addq_r64_r64      
  movq %rbp, 0x8(%rax)             #  82    0xd691d  4      OPC=movq_m64_r64      
  movq %r9, (%rax)                 #  83    0xd6921  3      OPC=movq_m64_r64      
  movq 0x10(%rbx), %rax            #  84    0xd6924  4      OPC=movq_r64_m64      
  shlq $0x4, %rax                  #  85    0xd6928  4      OPC=shlq_r64_imm8     
  addq (%rbx), %rax                #  86    0xd692c  3      OPC=addq_r64_m64      
  andl $0xfffc00ff, 0x8(%rax)      #  87    0xd692f  7      OPC=andl_m32_imm32    
  movq 0x10(%rbx), %rax            #  88    0xd6936  4      OPC=movq_r64_m64      
  shlq $0x4, %rax                  #  89    0xd693a  4      OPC=shlq_r64_imm8     
  addq (%rbx), %rax                #  90    0xd693e  3      OPC=addq_r64_m64      
  cmpl $0x6, %r14d                 #  91    0xd6941  4      OPC=cmpl_r32_imm8     
  sete %cl                         #  92    0xd6945  3      OPC=sete_r8           
  cmpl $0x5, %r14d                 #  93    0xd6948  4      OPC=cmpl_r32_imm8     
  je .L_d6a30                      #  94    0xd694c  6      OPC=je_label_1        
.L_d6952:                          #        0xd6952  0      OPC=<label>           
  movzbl 0xa(%rax), %edx           #  95    0xd6952  4      OPC=movzbl_r32_m8     
  shll $0x4, %ecx                  #  96    0xd6956  3      OPC=shll_r32_imm8     
  andl $0xffffffef, %edx           #  97    0xd6959  6      OPC=andl_r32_imm32    
  nop                              #  98    0xd695f  1      OPC=nop               
  nop                              #  99    0xd6960  1      OPC=nop               
  nop                              #  100   0xd6961  1      OPC=nop               
  orl %edx, %ecx                   #  101   0xd6962  2      OPC=orl_r32_r32       
  movb %cl, 0xa(%rax)              #  102   0xd6964  3      OPC=movb_m8_r8        
  movq 0x10(%rbx), %rax            #  103   0xd6967  4      OPC=movq_r64_m64      
  movq 0x18(%rbx), %rdx            #  104   0xd696b  4      OPC=movq_r64_m64      
  movl $0xffffffff, (%rdx,%rax,4)  #  105   0xd696f  7      OPC=movl_m32_imm32    
  shlq $0x4, %rax                  #  106   0xd6976  4      OPC=shlq_r64_imm8     
  addq 0x28(%rbx), %rax            #  107   0xd697a  4      OPC=addq_r64_m64      
  movq $0x0, (%rax)                #  108   0xd697e  7      OPC=movq_m64_imm32    
  movq $0x0, 0x8(%rax)             #  109   0xd6985  8      OPC=movq_m64_imm32    
  movq 0x10(%rbx), %rax            #  110   0xd698d  4      OPC=movq_r64_m64      
  shlq $0x4, %rax                  #  111   0xd6991  4      OPC=shlq_r64_imm8     
  addq 0x30(%rbx), %rax            #  112   0xd6995  4      OPC=addq_r64_m64      
  movq $0x0, (%rax)                #  113   0xd6999  7      OPC=movq_m64_imm32    
  movq $0x0, 0x8(%rax)             #  114   0xd69a0  8      OPC=movq_m64_imm32    
  movq 0x10(%rbx), %rsi            #  115   0xd69a8  4      OPC=movq_r64_m64      
  leaq 0x1(%rsi), %rax             #  116   0xd69ac  4      OPC=leaq_r64_m16      
  cmpl $0xffffffff, %esi           #  117   0xd69b0  6      OPC=cmpl_r32_imm32    
  nop                              #  118   0xd69b6  1      OPC=nop               
  nop                              #  119   0xd69b7  1      OPC=nop               
  nop                              #  120   0xd69b8  1      OPC=nop               
  movq %rax, 0x10(%rbx)            #  121   0xd69b9  4      OPC=movq_m64_r64      
  movl %esi, %eax                  #  122   0xd69bd  2      OPC=movl_r32_r32      
  je .L_d6a21                      #  123   0xd69bf  2      OPC=je_label          
  movq (%rbx), %rcx                #  124   0xd69c1  3      OPC=movq_r64_m64      
  movslq %esi, %rsi                #  125   0xd69c4  3      OPC=movslq_r64_r32    
  movl 0xc(%rsp), %ebp             #  126   0xd69c7  4      OPC=movl_r32_m32      
  movq %rsi, %rdi                  #  127   0xd69cb  3      OPC=movq_r64_r64      
  shlq $0x4, %rdi                  #  128   0xd69ce  4      OPC=shlq_r64_imm8     
  movl 0x8(%rcx,%rdi,1), %edx      #  129   0xd69d2  4      OPC=movl_r32_m32      
  andl $0x3ff, %ebp                #  130   0xd69d6  6      OPC=andl_r32_imm32    
  shll $0x8, %ebp                  #  131   0xd69dc  3      OPC=shll_r32_imm8     
  andl $0xfffc00ff, %edx           #  132   0xd69df  6      OPC=andl_r32_imm32    
  orl %edx, %ebp                   #  133   0xd69e5  2      OPC=orl_r32_r32       
  movl %ebp, 0x8(%rcx,%rdi,1)      #  134   0xd69e7  4      OPC=movl_m32_r32      
  movq (%rbx), %rdx                #  135   0xd69eb  3      OPC=movq_r64_m64      
  leaq (%rdx,%rdi,1), %r9          #  136   0xd69ee  4      OPC=leaq_r64_m16      
  movl 0x8(%rdx,%r12,1), %ecx      #  137   0xd69f2  5      OPC=movl_r32_m32      
  movl 0x8(%r9), %edx              #  138   0xd69f7  4      OPC=movl_r32_m32      
  shrl $0x8, %ecx                  #  139   0xd69fb  3      OPC=shrl_r32_imm8     
  movl %edx, %r10d                 #  140   0xd69fe  3      OPC=movl_r32_r32      
  andl $0xfffc00ff, %edx           #  141   0xd6a01  6      OPC=andl_r32_imm32    
  shrl $0x8, %r10d                 #  142   0xd6a07  4      OPC=shrl_r32_imm8     
  orl %r10d, %ecx                  #  143   0xd6a0b  3      OPC=orl_r32_r32       
  andl $0x3ff, %ecx                #  144   0xd6a0e  6      OPC=andl_r32_imm32    
  shll $0x8, %ecx                  #  145   0xd6a14  3      OPC=shll_r32_imm8     
  orl %ecx, %edx                   #  146   0xd6a17  2      OPC=orl_r32_r32       
  movl %edx, 0x8(%r9)              #  147   0xd6a19  4      OPC=movl_m32_r32      
  movq (%rbx), %rdx                #  148   0xd6a1d  3      OPC=movq_r64_m64      
  orb $0x4, 0xa(%rdx,%rdi,1)       #  149   0xd6a20  5      OPC=orb_m8_imm8       
  movq 0x20(%rbx), %rdx            #  150   0xd6a25  4      OPC=movq_r64_m64      
  movl %r15d, (%rdx,%rsi,4)        #  151   0xd6a29  4      OPC=movl_m32_r32      
.L_d6a21:                          #        0xd6a2d  0      OPC=<label>           
  addq $0x48, %rsp                 #  152   0xd6a2d  4      OPC=addq_r64_imm8     
  popq %rbx                        #  153   0xd6a31  1      OPC=popq_r64_1        
  popq %rbp                        #  154   0xd6a32  1      OPC=popq_r64_1        
  popq %r12                        #  155   0xd6a33  2      OPC=popq_r64_1        
  popq %r13                        #  156   0xd6a35  2      OPC=popq_r64_1        
  popq %r14                        #  157   0xd6a37  2      OPC=popq_r64_1        
  popq %r15                        #  158   0xd6a39  2      OPC=popq_r64_1        
  retq                             #  159   0xd6a3b  1      OPC=retq              
.L_d6a30:                          #        0xd6a3c  0      OPC=<label>           
  xorl %ecx, %ecx                  #  160   0xd6a3c  2      OPC=xorl_r32_r32      
  cmpl $0x1, 0xa4(%rbx)            #  161   0xd6a3e  7      OPC=cmpl_m32_imm8     
  setg %cl                         #  162   0xd6a45  3      OPC=setg_r8           
  jmpq .L_d6952                    #  163   0xd6a48  5      OPC=jmpq_label_1      
  nop                              #  164   0xd6a4d  1      OPC=nop               
  nop                              #  165   0xd6a4e  1      OPC=nop               
  nop                              #  166   0xd6a4f  1      OPC=nop               
  nop                              #  167   0xd6a50  1      OPC=nop               
  nop                              #  168   0xd6a51  1      OPC=nop               
  nop                              #  169   0xd6a52  1      OPC=nop               
  nop                              #  170   0xd6a53  1      OPC=nop               
.L_d6a48:                          #        0xd6a54  0      OPC=<label>           
  movl $0xffffffff, %eax           #  171   0xd6a54  6      OPC=movl_r32_imm32_1  
  jmpq .L_d6a21                    #  172   0xd6a5a  2      OPC=jmpq_label        
  nop                              #  173   0xd6a5c  1      OPC=nop               
                                                                                  
.size duplicate_node, .-duplicate_node

