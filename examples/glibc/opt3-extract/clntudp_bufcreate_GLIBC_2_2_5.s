  .text
  .globl clntudp_bufcreate_GLIBC_2_2_5
  .type clntudp_bufcreate_GLIBC_2_2_5, @function

#! file-offset 0x133e90
#! rip-offset  0x133e90
#! capacity    688 bytes

# Text                                       #  Line  RIP       Bytes  Opcode              
.clntudp_bufcreate_GLIBC_2_2_5:              #        0x133e90  0      OPC=<label>         
  pushq %r15                                 #  1     0x133e90  2      OPC=pushq_r64_1     
  pushq %r14                                 #  2     0x133e92  2      OPC=pushq_r64_1     
  pushq %r13                                 #  3     0x133e94  2      OPC=pushq_r64_1     
  pushq %r12                                 #  4     0x133e96  2      OPC=pushq_r64_1     
  movq %rdi, %r13                            #  5     0x133e98  3      OPC=movq_r64_r64    
  pushq %rbp                                 #  6     0x133e9b  1      OPC=pushq_r64_1     
  pushq %rbx                                 #  7     0x133e9c  1      OPC=pushq_r64_1     
  movl $0x18, %edi                           #  8     0x133e9d  5      OPC=movl_r32_imm32  
  subq $0xa8, %rsp                           #  9     0x133ea2  7      OPC=subq_r64_imm32  
  movq %rsi, 0x8(%rsp)                       #  10    0x133ea9  5      OPC=movq_m64_r64    
  movq %rdx, 0x10(%rsp)                      #  11    0x133eae  5      OPC=movq_m64_r64    
  movq %rcx, 0x18(%rsp)                      #  12    0x133eb3  5      OPC=movq_m64_r64    
  movq %r8, 0x20(%rsp)                       #  13    0x133eb8  5      OPC=movq_m64_r64    
  movq %r9, 0x28(%rsp)                       #  14    0x133ebd  5      OPC=movq_m64_r64    
  callq .memalign_plt                        #  15    0x133ec2  5      OPC=callq_label     
  movq %rax, %r12                            #  16    0x133ec7  3      OPC=movq_r64_r64    
  movl 0xe0(%rsp), %eax                      #  17    0x133eca  7      OPC=movl_r32_m32    
  leal 0x3(%rax), %ebx                       #  18    0x133ed1  3      OPC=leal_r32_m16    
  movl 0xe8(%rsp), %eax                      #  19    0x133ed4  7      OPC=movl_r32_m32    
  andl $0xfffffffc, %ebx                     #  20    0x133edb  6      OPC=andl_r32_imm32  
  nop                                        #  21    0x133ee1  1      OPC=nop             
  nop                                        #  22    0x133ee2  1      OPC=nop             
  nop                                        #  23    0x133ee3  1      OPC=nop             
  leal 0x3(%rax), %ebp                       #  24    0x133ee4  3      OPC=leal_r32_m16    
  movl %ebx, %eax                            #  25    0x133ee7  2      OPC=movl_r32_r32    
  andl $0xfffffffc, %ebp                     #  26    0x133ee9  6      OPC=andl_r32_imm32  
  nop                                        #  27    0x133eef  1      OPC=nop             
  nop                                        #  28    0x133ef0  1      OPC=nop             
  nop                                        #  29    0x133ef1  1      OPC=nop             
  movl %ebp, %r14d                           #  30    0x133ef2  3      OPC=movl_r32_r32    
  leaq 0xa0(%r14,%rax,1), %rdi               #  31    0x133ef5  8      OPC=leaq_r64_m16    
  callq .memalign_plt                        #  32    0x133efd  5      OPC=callq_label     
  testq %rax, %rax                           #  33    0x133f02  3      OPC=testq_r64_r64   
  movq %rax, %r15                            #  34    0x133f05  3      OPC=movq_r64_r64    
  je .L_134068                               #  35    0x133f08  6      OPC=je_label_1      
  testq %r12, %r12                           #  36    0x133f0e  3      OPC=testq_r64_r64   
  je .L_134068                               #  37    0x133f11  6      OPC=je_label_1      
  cmpw $0x0, 0x2(%r13)                       #  38    0x133f17  6      OPC=cmpw_m16_imm8   
  leaq 0x9c(%rax,%r14,1), %rax               #  39    0x133f1d  8      OPC=leaq_r64_m16    
  movq %rax, 0x90(%r15)                      #  40    0x133f25  7      OPC=movq_m64_r64    
  jne .L_133f79                              #  41    0x133f2c  2      OPC=jne_label       
  movq 0x10(%rsp), %rdx                      #  42    0x133f2e  5      OPC=movq_r64_m64    
  movq 0x8(%rsp), %rsi                       #  43    0x133f33  5      OPC=movq_r64_m64    
  movl $0x11, %ecx                           #  44    0x133f38  5      OPC=movl_r32_imm32  
  movq %r13, %rdi                            #  45    0x133f3d  3      OPC=movq_r64_r64    
  callq .pmap_getport_GLIBC_2_2_5            #  46    0x133f40  5      OPC=callq_label     
  testw %ax, %ax                             #  47    0x133f45  3      OPC=testw_r16_r16   
  jne .L_133f70                              #  48    0x133f48  2      OPC=jne_label       
.L_133f3e:                                   #        0x133f4a  0      OPC=<label>         
  movq %r15, %rdi                            #  49    0x133f4a  3      OPC=movq_r64_r64    
  callq .L_1f8c0                             #  50    0x133f4d  5      OPC=callq_label     
.L_133f46:                                   #        0x133f52  0      OPC=<label>         
  xorl %ebx, %ebx                            #  51    0x133f52  2      OPC=xorl_r32_r32    
  testq %r12, %r12                           #  52    0x133f54  3      OPC=testq_r64_r64   
  je .L_133f55                               #  53    0x133f57  2      OPC=je_label        
  movq %r12, %rdi                            #  54    0x133f59  3      OPC=movq_r64_r64    
  callq .L_1f8c0                             #  55    0x133f5c  5      OPC=callq_label     
.L_133f55:                                   #        0x133f61  0      OPC=<label>         
  addq $0xa8, %rsp                           #  56    0x133f61  7      OPC=addq_r64_imm32  
  movq %rbx, %rax                            #  57    0x133f68  3      OPC=movq_r64_r64    
  popq %rbx                                  #  58    0x133f6b  1      OPC=popq_r64_1      
  popq %rbp                                  #  59    0x133f6c  1      OPC=popq_r64_1      
  popq %r12                                  #  60    0x133f6d  2      OPC=popq_r64_1      
  popq %r13                                  #  61    0x133f6f  2      OPC=popq_r64_1      
  popq %r14                                  #  62    0x133f71  2      OPC=popq_r64_1      
  popq %r15                                  #  63    0x133f73  2      OPC=popq_r64_1      
  retq                                       #  64    0x133f75  1      OPC=retq            
  nop                                        #  65    0x133f76  1      OPC=nop             
  nop                                        #  66    0x133f77  1      OPC=nop             
  nop                                        #  67    0x133f78  1      OPC=nop             
  nop                                        #  68    0x133f79  1      OPC=nop             
  nop                                        #  69    0x133f7a  1      OPC=nop             
  nop                                        #  70    0x133f7b  1      OPC=nop             
.L_133f70:                                   #        0x133f7c  0      OPC=<label>         
  rorw $0x8, %ax                             #  71    0x133f7c  4      OPC=rorw_r16_imm8   
  movw %ax, 0x2(%r13)                        #  72    0x133f80  5      OPC=movw_m16_r16    
.L_133f79:                                   #        0x133f85  0      OPC=<label>         
  leaq 0x28b8a0(%rip), %rax                  #  73    0x133f85  7      OPC=leaq_r64_m16    
  movq 0x8(%r13), %rdx                       #  74    0x133f8c  4      OPC=movq_r64_m64    
  movl %ebp, 0x98(%r15)                      #  75    0x133f90  7      OPC=movl_m32_r32    
  movq %r15, 0x10(%r12)                      #  76    0x133f97  5      OPC=movq_m64_r64    
  movl $0x10, 0x18(%r15)                     #  77    0x133f9c  8      OPC=movl_m32_imm32  
  leaq 0x58(%r15), %rbp                      #  78    0x133fa4  4      OPC=leaq_r64_m16    
  movq %rax, 0x8(%r12)                       #  79    0x133fa8  5      OPC=movq_m64_r64    
  movq (%r13), %rax                          #  80    0x133fad  4      OPC=movq_r64_m64    
  movq %rdx, 0x10(%r15)                      #  81    0x133fb1  4      OPC=movq_m64_r64    
  movq $0xffffffff, 0x30(%r15)               #  82    0x133fb5  8      OPC=movq_m64_imm32  
  movq $0xffffffff, 0x38(%r15)               #  83    0x133fbd  8      OPC=movq_m64_imm32  
  movl %ebx, 0x8c(%r15)                      #  84    0x133fc5  7      OPC=movl_m32_r32    
  movq %rax, 0x8(%r15)                       #  85    0x133fcc  4      OPC=movq_m64_r64    
  movq 0x18(%rsp), %rax                      #  86    0x133fd0  5      OPC=movq_r64_m64    
  movq %rax, 0x20(%r15)                      #  87    0x133fd5  4      OPC=movq_m64_r64    
  movq 0x20(%rsp), %rax                      #  88    0x133fd9  5      OPC=movq_r64_m64    
  movq %rax, 0x28(%r15)                      #  89    0x133fde  4      OPC=movq_m64_r64    
  callq ._create_xid                         #  90    0x133fe2  5      OPC=callq_label     
  movq %rax, 0x40(%rsp)                      #  91    0x133fe7  5      OPC=movq_m64_r64    
  movq 0x8(%rsp), %rax                       #  92    0x133fec  5      OPC=movq_r64_m64    
  xorl %ecx, %ecx                            #  93    0x133ff1  2      OPC=xorl_r32_r32    
  movq 0x90(%r15), %rsi                      #  94    0x133ff3  7      OPC=movq_r64_m64    
  movl %ebx, %edx                            #  95    0x133ffa  2      OPC=movl_r32_r32    
  movq %rbp, %rdi                            #  96    0x133ffc  3      OPC=movq_r64_r64    
  movl $0x0, 0x48(%rsp)                      #  97    0x133fff  8      OPC=movl_m32_imm32  
  movq $0x2, 0x50(%rsp)                      #  98    0x134007  9      OPC=movq_m64_imm32  
  movq %rax, 0x58(%rsp)                      #  99    0x134010  5      OPC=movq_m64_r64    
  movq 0x10(%rsp), %rax                      #  100   0x134015  5      OPC=movq_r64_m64    
  movq %rax, 0x60(%rsp)                      #  101   0x13401a  5      OPC=movq_m64_r64    
  callq .xdrmem_create_GLIBC_2_2_5           #  102   0x13401f  5      OPC=callq_label     
  leaq 0x40(%rsp), %rsi                      #  103   0x134024  5      OPC=leaq_r64_m16    
  movq %rbp, %rdi                            #  104   0x134029  3      OPC=movq_r64_r64    
  callq .xdr_callhdr_GLIBC_2_2_5             #  105   0x13402c  5      OPC=callq_label     
  testl %eax, %eax                           #  106   0x134031  2      OPC=testl_r32_r32   
  je .L_133f3e                               #  107   0x134033  6      OPC=je_label_1      
  movq 0x60(%r15), %rax                      #  108   0x134039  4      OPC=movq_r64_m64    
  movq %rbp, %rdi                            #  109   0x13403d  3      OPC=movq_r64_r64    
  callq 0x20(%rax)                           #  110   0x134040  3      OPC=callq_m64       
  movl %eax, 0x88(%r15)                      #  111   0x134043  7      OPC=movl_m32_r32    
  movq 0x28(%rsp), %rax                      #  112   0x13404a  5      OPC=movq_r64_m64    
  movl (%rax), %eax                          #  113   0x13404f  2      OPC=movl_r32_m32    
  testl %eax, %eax                           #  114   0x134051  2      OPC=testl_r32_r32   
  js .L_1340c0                               #  115   0x134053  2      OPC=js_label        
  movl $0x0, 0x4(%r15)                       #  116   0x134055  8      OPC=movl_m32_imm32  
.L_134051:                                   #        0x13405d  0      OPC=<label>         
  movl %eax, (%r15)                          #  117   0x13405d  3      OPC=movl_m32_r32    
  movq %r12, %rbx                            #  118   0x134060  3      OPC=movq_r64_r64    
  callq .authnone_create_GLIBC_2_2_5         #  119   0x134063  5      OPC=callq_label     
  movq %rax, (%r12)                          #  120   0x134068  4      OPC=movq_m64_r64    
  jmpq .L_133f55                             #  121   0x13406c  5      OPC=jmpq_label_1    
  nop                                        #  122   0x134071  1      OPC=nop             
  nop                                        #  123   0x134072  1      OPC=nop             
  nop                                        #  124   0x134073  1      OPC=nop             
.L_134068:                                   #        0x134074  0      OPC=<label>         
  callq .__rpc_thread_createerr_GLIBC_2_2_5  #  125   0x134074  5      OPC=callq_label     
  leaq 0x597ff(%rip), %rsi                   #  126   0x134079  7      OPC=leaq_r64_m16    
  leaq 0x56521(%rip), %rdi                   #  127   0x134080  7      OPC=leaq_r64_m16    
  movl $0x5, %edx                            #  128   0x134087  5      OPC=movl_r32_imm32  
  movq %rax, %rbx                            #  129   0x13408c  3      OPC=movq_r64_r64    
  callq .__dcgettext                         #  130   0x13408f  5      OPC=callq_label     
  leaq 0x598ff(%rip), %rdx                   #  131   0x134094  7      OPC=leaq_r64_m16    
  leaq 0x58ef7(%rip), %rsi                   #  132   0x13409b  7      OPC=leaq_r64_m16    
  movq %rax, %rcx                            #  133   0x1340a2  3      OPC=movq_r64_r64    
  xorl %edi, %edi                            #  134   0x1340a5  2      OPC=xorl_r32_r32    
  xorl %eax, %eax                            #  135   0x1340a7  2      OPC=xorl_r32_r32    
  callq .__fxprintf                          #  136   0x1340a9  5      OPC=callq_label     
  testq %r15, %r15                           #  137   0x1340ae  3      OPC=testq_r64_r64   
  movl $0xc, (%rbx)                          #  138   0x1340b1  6      OPC=movl_m32_imm32  
  movl $0xc, 0x10(%rbx)                      #  139   0x1340b7  7      OPC=movl_m32_imm32  
  je .L_133f46                               #  140   0x1340be  6      OPC=je_label_1      
  jmpq .L_133f3e                             #  141   0x1340c4  5      OPC=jmpq_label_1    
  nop                                        #  142   0x1340c9  1      OPC=nop             
  nop                                        #  143   0x1340ca  1      OPC=nop             
  nop                                        #  144   0x1340cb  1      OPC=nop             
.L_1340c0:                                   #        0x1340cc  0      OPC=<label>         
  movl $0x11, %edx                           #  145   0x1340cc  5      OPC=movl_r32_imm32  
  movl $0x802, %esi                          #  146   0x1340d1  5      OPC=movl_r32_imm32  
  movl $0x2, %edi                            #  147   0x1340d6  5      OPC=movl_r32_imm32  
  callq .__socket                            #  148   0x1340db  5      OPC=callq_label     
  movq 0x28(%rsp), %rcx                      #  149   0x1340e0  5      OPC=movq_r64_m64    
  testl %eax, %eax                           #  150   0x1340e5  2      OPC=testl_r32_r32   
  movl %eax, (%rcx)                          #  151   0x1340e7  2      OPC=movl_m32_r32    
  js .L_13411d                               #  152   0x1340e9  2      OPC=js_label        
  xorl %esi, %esi                            #  153   0x1340eb  2      OPC=xorl_r32_r32    
  movl %eax, %edi                            #  154   0x1340ed  2      OPC=movl_r32_r32    
  callq .bindresvport                        #  155   0x1340ef  5      OPC=callq_label     
  movq 0x28(%rsp), %rbx                      #  156   0x1340f4  5      OPC=movq_r64_m64    
  leaq 0x3c(%rsp), %rcx                      #  157   0x1340f9  5      OPC=leaq_r64_m16    
  movl $0x4, %r8d                            #  158   0x1340fe  6      OPC=movl_r32_imm32  
  movl $0xb, %edx                            #  159   0x134104  5      OPC=movl_r32_imm32  
  xorl %esi, %esi                            #  160   0x134109  2      OPC=xorl_r32_r32    
  movl $0x1, 0x3c(%rsp)                      #  161   0x13410b  8      OPC=movl_m32_imm32  
  movl (%rbx), %edi                          #  162   0x134113  2      OPC=movl_r32_m32    
  callq .setsockopt                          #  163   0x134115  5      OPC=callq_label     
  movl $0x1, 0x4(%r15)                       #  164   0x13411a  8      OPC=movl_m32_imm32  
  movl (%rbx), %eax                          #  165   0x134122  2      OPC=movl_r32_m32    
  jmpq .L_134051                             #  166   0x134124  5      OPC=jmpq_label_1    
.L_13411d:                                   #        0x134129  0      OPC=<label>         
  callq .__rpc_thread_createerr_GLIBC_2_2_5  #  167   0x134129  5      OPC=callq_label     
  movq 0x28cd57(%rip), %rdx                  #  168   0x13412e  7      OPC=movq_r64_m64    
  movl $0xc, (%rax)                          #  169   0x134135  6      OPC=movl_m32_imm32  
  movl (%rdx), %edx                          #  170   0x13413b  2      OPC=movl_r32_m32    
  nop                                        #  171   0x13413d  1      OPC=nop             
  movl %edx, 0x10(%rax)                      #  172   0x13413e  3      OPC=movl_m32_r32    
  jmpq .L_133f3e                             #  173   0x134141  5      OPC=jmpq_label_1    
  nop                                        #  174   0x134146  1      OPC=nop             
  nop                                        #  175   0x134147  1      OPC=nop             
  nop                                        #  176   0x134148  1      OPC=nop             
  nop                                        #  177   0x134149  1      OPC=nop             
  nop                                        #  178   0x13414a  1      OPC=nop             
  nop                                        #  179   0x13414b  1      OPC=nop             
                                                                                           
.size clntudp_bufcreate_GLIBC_2_2_5, .-clntudp_bufcreate_GLIBC_2_2_5

