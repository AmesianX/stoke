  .text
  .globl __libc_message
  .type __libc_message, @function

#! file-offset 0x76200
#! rip-offset  0x76200
#! capacity    768 bytes

# Text                          #  Line  RIP      Bytes  Opcode                
.__libc_message:                #        0x76200  0      OPC=<label>           
  pushq %rbp                    #  1     0x76200  1      OPC=pushq_r64_1       
  movq %rsp, %rbp               #  2     0x76201  3      OPC=movq_r64_r64      
  pushq %r15                    #  3     0x76204  2      OPC=pushq_r64_1       
  pushq %r14                    #  4     0x76206  2      OPC=pushq_r64_1       
  leaq 0x10(%rbp), %rax         #  5     0x76208  4      OPC=leaq_r64_m16      
  pushq %r13                    #  6     0x7620c  2      OPC=pushq_r64_1       
  pushq %r12                    #  7     0x7620e  2      OPC=pushq_r64_1       
  pushq %rbx                    #  8     0x76210  1      OPC=pushq_r64_1       
  movl %edi, %r15d              #  9     0x76211  3      OPC=movl_r32_r32      
  leaq 0x1153b5(%rip), %rdi     #  10    0x76214  7      OPC=leaq_r64_m16      
  movq %rsi, %rbx               #  11    0x7621b  3      OPC=movq_r64_r64      
  subq $0x78, %rsp              #  12    0x7621e  4      OPC=subq_r64_imm8     
  movq %rax, -0x70(%rbp)        #  13    0x76222  4      OPC=movq_m64_r64      
  leaq -0x60(%rbp), %rax        #  14    0x76226  4      OPC=leaq_r64_m16      
  movq %rdx, -0x50(%rbp)        #  15    0x7622a  4      OPC=movq_m64_r64      
  movq %rcx, -0x48(%rbp)        #  16    0x7622e  4      OPC=movq_m64_r64      
  movq %r8, -0x40(%rbp)         #  17    0x76232  4      OPC=movq_m64_r64      
  movq %r9, -0x38(%rbp)         #  18    0x76236  4      OPC=movq_m64_r64      
  movl $0x10, -0x78(%rbp)       #  19    0x7623a  7      OPC=movl_m32_imm32    
  movq %rax, -0x68(%rbp)        #  20    0x76241  4      OPC=movq_m64_r64      
  callq .__libc_secure_getenv   #  21    0x76245  5      OPC=callq_label       
  testq %rax, %rax              #  22    0x7624a  3      OPC=testq_r64_r64     
  je .L_76258                   #  23    0x7624d  2      OPC=je_label          
  cmpb $0x0, (%rax)             #  24    0x7624f  3      OPC=cmpb_m8_imm8      
  jne .L_763f7                  #  25    0x76252  6      OPC=jne_label_1       
.L_76258:                       #        0x76258  0      OPC=<label>           
  movl $0x902, %esi             #  26    0x76258  5      OPC=movl_r32_imm32    
  leaq 0x114553(%rip), %rdi     #  27    0x7625d  7      OPC=leaq_r64_m16      
  movl $0x2, %eax               #  28    0x76264  5      OPC=movl_r32_imm32    
  syscall                       #  29    0x76269  2      OPC=syscall           
  cmpq $0xfffff000, %rax        #  30    0x7626b  6      OPC=cmpq_rax_imm32    
  ja .L_763eb                   #  31    0x76271  6      OPC=ja_label_1        
  cmpl $0xffffffff, %eax        #  32    0x76277  6      OPC=cmpl_r32_imm32    
  nop                           #  33    0x7627d  1      OPC=nop               
  nop                           #  34    0x7627e  1      OPC=nop               
  nop                           #  35    0x7627f  1      OPC=nop               
  movl %eax, -0x84(%rbp)        #  36    0x76280  6      OPC=movl_m32_r32      
  je .L_763f7                   #  37    0x76286  6      OPC=je_label_1        
  movzbl (%rbx), %r12d          #  38    0x7628c  4      OPC=movzbl_r32_m8     
  xorl %r14d, %r14d             #  39    0x76290  3      OPC=xorl_r32_r32      
  xorl %r13d, %r13d             #  40    0x76293  3      OPC=xorl_r32_r32      
  testb %r12b, %r12b            #  41    0x76296  3      OPC=testb_r8_r8       
  je .L_76414                   #  42    0x76299  6      OPC=je_label_1        
  nop                           #  43    0x7629f  1      OPC=nop               
  nop                           #  44    0x762a0  1      OPC=nop               
  nop                           #  45    0x762a1  1      OPC=nop               
  nop                           #  46    0x762a2  1      OPC=nop               
  nop                           #  47    0x762a3  1      OPC=nop               
  nop                           #  48    0x762a4  1      OPC=nop               
  nop                           #  49    0x762a5  1      OPC=nop               
.L_762a0:                       #        0x762a6  0      OPC=<label>           
  movl %r12d, %edx              #  50    0x762a6  3      OPC=movl_r32_r32      
  movq %rbx, %rax               #  51    0x762a9  3      OPC=movq_r64_r64      
  jmpq .L_762c5                 #  52    0x762ac  2      OPC=jmpq_label        
  nop                           #  53    0x762ae  1      OPC=nop               
  nop                           #  54    0x762af  1      OPC=nop               
  nop                           #  55    0x762b0  1      OPC=nop               
  nop                           #  56    0x762b1  1      OPC=nop               
  nop                           #  57    0x762b2  1      OPC=nop               
  nop                           #  58    0x762b3  1      OPC=nop               
  nop                           #  59    0x762b4  1      OPC=nop               
  nop                           #  60    0x762b5  1      OPC=nop               
.L_762b0:                       #        0x762b6  0      OPC=<label>           
  leaq 0x1(%rax), %rdi          #  61    0x762b6  4      OPC=leaq_r64_m16      
  movl $0x25, %esi              #  62    0x762ba  5      OPC=movl_r32_imm32    
  callq .strchrnul              #  63    0x762bf  5      OPC=callq_label       
  movzbl (%rax), %edx           #  64    0x762c4  3      OPC=movzbl_r32_m8     
  testb %dl, %dl                #  65    0x762c7  2      OPC=testb_r8_r8       
  je .L_762d0                   #  66    0x762c9  2      OPC=je_label          
.L_762c5:                       #        0x762cb  0      OPC=<label>           
  cmpb $0x25, %dl               #  67    0x762cb  3      OPC=cmpb_r8_imm8      
  jne .L_762b0                  #  68    0x762ce  2      OPC=jne_label         
  cmpb $0x73, 0x1(%rax)         #  69    0x762d0  4      OPC=cmpb_m8_imm8      
  jne .L_762b0                  #  70    0x762d4  2      OPC=jne_label         
.L_762d0:                       #        0x762d6  0      OPC=<label>           
  cmpb $0x25, %r12b             #  71    0x762d6  4      OPC=cmpb_r8_imm8      
  je .L_76318                   #  72    0x762da  2      OPC=je_label          
.L_762d6:                       #        0x762dc  0      OPC=<label>           
  movq %rax, %rsi               #  73    0x762dc  3      OPC=movq_r64_r64      
  movq %rbx, %rcx               #  74    0x762df  3      OPC=movq_r64_r64      
  subq %rbx, %rsi               #  75    0x762e2  3      OPC=subq_r64_r64      
  movq %rax, %rbx               #  76    0x762e5  3      OPC=movq_r64_r64      
.L_762e2:                       #        0x762e8  0      OPC=<label>           
  subq $0x30, %rsp              #  77    0x762e8  4      OPC=subq_r64_imm8     
  movl $0x10, %edi              #  78    0x762ec  5      OPC=movl_r32_imm32    
  leal 0x1(%r14), %r10d         #  79    0x762f1  4      OPC=leal_r32_m16      
  leaq 0xf(%rsp), %rdx          #  80    0x762f5  5      OPC=leaq_r64_m16      
  andq $0xf0, %rdx              #  81    0x762fa  4      OPC=andq_r64_imm8     
  movq %rcx, (%rdx)             #  82    0x762fe  3      OPC=movq_m64_r64      
  movq %rsi, 0x8(%rdx)          #  83    0x76301  4      OPC=movq_m64_r64      
  movq %r13, 0x10(%rdx)         #  84    0x76305  4      OPC=movq_m64_r64      
  movzbl (%rbx), %r12d          #  85    0x76309  4      OPC=movzbl_r32_m8     
  testb %r12b, %r12b            #  86    0x7630d  3      OPC=testb_r8_r8       
  je .L_76358                   #  87    0x76310  2      OPC=je_label          
  movslq %r10d, %r14            #  88    0x76312  3      OPC=movslq_r64_r32    
  movq %rdx, %r13               #  89    0x76315  3      OPC=movq_r64_r64      
  jmpq .L_762a0                 #  90    0x76318  2      OPC=jmpq_label        
  nop                           #  91    0x7631a  1      OPC=nop               
  nop                           #  92    0x7631b  1      OPC=nop               
  nop                           #  93    0x7631c  1      OPC=nop               
  nop                           #  94    0x7631d  1      OPC=nop               
.L_76318:                       #        0x7631e  0      OPC=<label>           
  cmpb $0x73, 0x1(%rbx)         #  95    0x7631e  4      OPC=cmpb_m8_imm8      
  jne .L_762d6                  #  96    0x76322  2      OPC=jne_label         
  movl -0x78(%rbp), %eax        #  97    0x76324  3      OPC=movl_r32_m32      
  cmpl $0x30, %eax              #  98    0x76327  3      OPC=cmpl_r32_imm8     
  jae .L_76420                  #  99    0x7632a  6      OPC=jae_label_1       
  movl %eax, %edx               #  100   0x76330  2      OPC=movl_r32_r32      
  addq -0x68(%rbp), %rdx        #  101   0x76332  4      OPC=addq_r64_m64      
  addl $0x8, %eax               #  102   0x76336  3      OPC=addl_r32_imm8     
  movl %eax, -0x78(%rbp)        #  103   0x76339  3      OPC=movl_m32_r32      
.L_76336:                       #        0x7633c  0      OPC=<label>           
  movq (%rdx), %rcx             #  104   0x7633c  3      OPC=movq_r64_m64      
  addq $0x2, %rbx               #  105   0x7633f  4      OPC=addq_r64_imm8     
  movq %rcx, %rdi               #  106   0x76343  3      OPC=movq_r64_r64      
  movq %rcx, -0x90(%rbp)        #  107   0x76346  7      OPC=movq_m64_r64      
  callq .strlen                 #  108   0x7634d  5      OPC=callq_label       
  movq -0x90(%rbp), %rcx        #  109   0x76352  7      OPC=movq_r64_m64      
  movq %rax, %rsi               #  110   0x76359  3      OPC=movq_r64_r64      
  jmpq .L_762e2                 #  111   0x7635c  2      OPC=jmpq_label        
.L_76358:                       #        0x7635e  0      OPC=<label>           
  movslq %r10d, %r8             #  112   0x7635e  3      OPC=movslq_r64_r32    
  xorl %edx, %edx               #  113   0x76361  2      OPC=xorl_r32_r32      
  shlq $0x4, %r14               #  114   0x76363  4      OPC=shlq_r64_imm8     
  movq %r8, %rax                #  115   0x76367  3      OPC=movq_r64_r64      
  shlq $0x4, %rax               #  116   0x7636a  4      OPC=shlq_r64_imm8     
  addq $0x1e, %rax              #  117   0x7636e  4      OPC=addq_r64_imm8     
  divq %rdi                     #  118   0x76372  3      OPC=divq_r64          
  xorb %dil, %dil               #  119   0x76375  3      OPC=xorb_r8_r8        
  shlq $0x4, %rax               #  120   0x76378  4      OPC=shlq_r64_imm8     
  subq %rax, %rsp               #  121   0x7637c  3      OPC=subq_r64_r64      
  leaq 0xf(%rsp), %r12          #  122   0x7637f  5      OPC=leaq_r64_m16      
  andq $0xf0, %r12              #  123   0x76384  4      OPC=andq_r64_imm8     
  leaq 0x8(%r12,%r14,1), %rax   #  124   0x76388  5      OPC=leaq_r64_m16      
  leaq -0x8(%r12), %rdx         #  125   0x7638d  5      OPC=leaq_r64_m16      
  jmpq .L_7639c                 #  126   0x76392  2      OPC=jmpq_label        
  xchgw %ax, %ax                #  127   0x76394  2      OPC=xchgw_ax_r16      
.L_76390:                       #        0x76396  0      OPC=<label>           
  movq (%r13), %rcx             #  128   0x76396  4      OPC=movq_r64_m64      
  movq 0x8(%r13), %rsi          #  129   0x7639a  4      OPC=movq_r64_m64      
  movq 0x10(%r13), %r13         #  130   0x7639e  4      OPC=movq_r64_m64      
.L_7639c:                       #        0x763a2  0      OPC=<label>           
  movq %rcx, -0x8(%rax)         #  131   0x763a2  4      OPC=movq_m64_r64      
  movq %rsi, (%rax)             #  132   0x763a6  3      OPC=movq_m64_r64      
  leaq (%rsi,%rdi,1), %rbx      #  133   0x763a9  4      OPC=leaq_r64_m16      
  subq $0x10, %rax              #  134   0x763ad  4      OPC=subq_r64_imm8     
  cmpq %rdx, %rax               #  135   0x763b1  3      OPC=cmpq_r64_r64      
  movq %rbx, %rdi               #  136   0x763b4  3      OPC=movq_r64_r64      
  jne .L_76390                  #  137   0x763b7  2      OPC=jne_label         
  movslq -0x84(%rbp), %r14      #  138   0x763b9  7      OPC=movslq_r64_m32    
  movl $0x14, %r9d              #  139   0x763c0  6      OPC=movl_r32_imm32    
.L_763c0:                       #        0x763c6  0      OPC=<label>           
  movq %r8, %rdx                #  140   0x763c6  3      OPC=movq_r64_r64      
  movq %r12, %rsi               #  141   0x763c9  3      OPC=movq_r64_r64      
  movq %r14, %rdi               #  142   0x763cc  3      OPC=movq_r64_r64      
  movl %r9d, %eax               #  143   0x763cf  3      OPC=movl_r32_r32      
  syscall                       #  144   0x763d2  2      OPC=syscall           
  cmpq $0xfc, %rax              #  145   0x763d4  4      OPC=cmpq_r64_imm8     
  movq %rax, %r13               #  146   0x763d8  3      OPC=movq_r64_r64      
  je .L_763c0                   #  147   0x763db  2      OPC=je_label          
  testl %r15d, %r15d            #  148   0x763dd  3      OPC=testl_r32_r32     
  jne .L_76431                  #  149   0x763e0  2      OPC=jne_label         
.L_763dc:                       #        0x763e2  0      OPC=<label>           
  leaq -0x28(%rbp), %rsp        #  150   0x763e2  4      OPC=leaq_r64_m16      
  popq %rbx                     #  151   0x763e6  1      OPC=popq_r64_1        
  popq %r12                     #  152   0x763e7  2      OPC=popq_r64_1        
  popq %r13                     #  153   0x763e9  2      OPC=popq_r64_1        
  popq %r14                     #  154   0x763eb  2      OPC=popq_r64_1        
  popq %r15                     #  155   0x763ed  2      OPC=popq_r64_1        
  popq %rbp                     #  156   0x763ef  1      OPC=popq_r64_1        
  retq                          #  157   0x763f0  1      OPC=retq              
.L_763eb:                       #        0x763f1  0      OPC=<label>           
  movq 0x34aa8e(%rip), %rdx     #  158   0x763f1  7      OPC=movq_r64_m64      
  negl %eax                     #  159   0x763f8  2      OPC=negl_r32          
  movl %eax, (%rdx)             #  160   0x763fa  2      OPC=movl_m32_r32      
  nop                           #  161   0x763fc  1      OPC=nop               
.L_763f7:                       #        0x763fd  0      OPC=<label>           
  movzbl (%rbx), %r12d          #  162   0x763fd  4      OPC=movzbl_r32_m8     
  xorl %r14d, %r14d             #  163   0x76401  3      OPC=xorl_r32_r32      
  xorl %r13d, %r13d             #  164   0x76404  3      OPC=xorl_r32_r32      
  movl $0x2, -0x84(%rbp)        #  165   0x76407  10     OPC=movl_m32_imm32    
  testb %r12b, %r12b            #  166   0x76411  3      OPC=testb_r8_r8       
  jne .L_762a0                  #  167   0x76414  6      OPC=jne_label_1       
.L_76414:                       #        0x7641a  0      OPC=<label>           
  testl %r15d, %r15d            #  168   0x7641a  3      OPC=testl_r32_r32     
  je .L_763dc                   #  169   0x7641d  2      OPC=je_label          
  xorl %esi, %esi               #  170   0x7641f  2      OPC=xorl_r32_r32      
  jmpq .L_764e7                 #  171   0x76421  5      OPC=jmpq_label_1      
.L_76420:                       #        0x76426  0      OPC=<label>           
  movq -0x70(%rbp), %rdx        #  172   0x76426  4      OPC=movq_r64_m64      
  leaq 0x8(%rdx), %rax          #  173   0x7642a  4      OPC=leaq_r64_m16      
  movq %rax, -0x70(%rbp)        #  174   0x7642e  4      OPC=movq_m64_r64      
  jmpq .L_76336                 #  175   0x76432  5      OPC=jmpq_label_1      
.L_76431:                       #        0x76437  0      OPC=<label>           
  movq 0x34aa40(%rip), %rax     #  176   0x76437  7      OPC=movq_r64_m64      
  xorl %r9d, %r9d               #  177   0x7643e  3      OPC=xorl_r32_r32      
  xorl %edi, %edi               #  178   0x76441  2      OPC=xorl_r32_r32      
  movl $0xffffffff, %r8d        #  179   0x76443  7      OPC=movl_r32_imm32_1  
  movl $0x22, %ecx              #  180   0x7644a  5      OPC=movl_r32_imm32    
  movl $0x3, %edx               #  181   0x7644f  5      OPC=movl_r32_imm32    
  movl %r10d, -0x90(%rbp)       #  182   0x76454  7      OPC=movl_m32_r32      
  movq 0x18(%rax), %rax         #  183   0x7645b  4      OPC=movq_r64_m64      
  leaq (%rbx,%rax,1), %r11      #  184   0x7645f  4      OPC=leaq_r64_m16      
  negq %rax                     #  185   0x76463  3      OPC=negq_r64          
  andq %rax, %r11               #  186   0x76466  3      OPC=andq_r64_r64      
  movq %r11, %rsi               #  187   0x76469  3      OPC=movq_r64_r64      
  movq %r11, %r14               #  188   0x7646c  3      OPC=movq_r64_r64      
  callq .mmap                   #  189   0x7646f  5      OPC=callq_label       
  cmpq $0xff, %rax              #  190   0x76474  4      OPC=cmpq_r64_imm8     
  movq %rax, -0x98(%rbp)        #  191   0x76478  7      OPC=movq_m64_r64      
  je .L_764de                   #  192   0x7647f  2      OPC=je_label          
  movl -0x90(%rbp), %r10d       #  193   0x76481  7      OPC=movl_r32_m32      
  movl %r14d, (%rax)            #  194   0x76488  3      OPC=movl_m32_r32      
  leaq 0x4(%rax), %rdi          #  195   0x7648b  4      OPC=leaq_r64_m16      
  leaq 0x8(%r12), %r14          #  196   0x7648f  5      OPC=leaq_r64_m16      
  leal -0x1(%r10), %eax         #  197   0x76494  4      OPC=leal_r32_m16      
  shlq $0x4, %rax               #  198   0x76498  4      OPC=shlq_r64_imm8     
  leaq 0x18(%r12,%rax,1), %rax  #  199   0x7649c  5      OPC=leaq_r64_m16      
  movq %rax, -0x90(%rbp)        #  200   0x764a1  7      OPC=movq_m64_r64      
.L_764a1:                       #        0x764a8  0      OPC=<label>           
  movq (%r14), %r12             #  201   0x764a8  3      OPC=movq_r64_m64      
  movq -0x8(%r14), %rsi         #  202   0x764ab  4      OPC=movq_r64_m64      
  addq $0x10, %r14              #  203   0x764af  4      OPC=addq_r64_imm8     
  movq %r12, %rdx               #  204   0x764b3  3      OPC=movq_r64_r64      
  callq .__GI_memcpy            #  205   0x764b6  5      OPC=callq_label       
  cmpq -0x90(%rbp), %r14        #  206   0x764bb  7      OPC=cmpq_r64_m64      
  leaq (%rax,%r12,1), %rdi      #  207   0x764c2  4      OPC=leaq_r64_m16      
  jne .L_764a1                  #  208   0x764c6  2      OPC=jne_label         
  movb $0x0, (%rdi)             #  209   0x764c8  3      OPC=movb_m8_imm8      
  movq -0x98(%rbp), %rdi        #  210   0x764cb  7      OPC=movq_r64_m64      
  xchgq %rdi, 0x34c8ce(%rip)    #  211   0x764d2  7      OPC=xchgq_m64_r64     
  testq %rdi, %rdi              #  212   0x764d9  3      OPC=testq_r64_r64     
  je .L_764de                   #  213   0x764dc  2      OPC=je_label          
  movl (%rdi), %esi             #  214   0x764de  2      OPC=movl_r32_m32      
  callq .munmap                 #  215   0x764e0  5      OPC=callq_label       
.L_764de:                       #        0x764e5  0      OPC=<label>           
  xorl %esi, %esi               #  216   0x764e5  2      OPC=xorl_r32_r32      
  cmpq %rbx, %r13               #  217   0x764e7  3      OPC=cmpq_r64_r64      
  sete %sil                     #  218   0x764ea  4      OPC=sete_r8           
.L_764e7:                       #        0x764ee  0      OPC=<label>           
  movl -0x84(%rbp), %edx        #  219   0x764ee  6      OPC=movl_r32_m32      
  movl %r15d, %edi              #  220   0x764f4  3      OPC=movl_r32_r32      
  callq .backtrace_and_maps     #  221   0x764f7  5      OPC=callq_label       
  callq .abort                  #  222   0x764fc  5      OPC=callq_label       
  nop                           #  223   0x76501  1      OPC=nop               
  nop                           #  224   0x76502  1      OPC=nop               
  nop                           #  225   0x76503  1      OPC=nop               
  nop                           #  226   0x76504  1      OPC=nop               
  nop                           #  227   0x76505  1      OPC=nop               
  nop                           #  228   0x76506  1      OPC=nop               
                                                                               
.size __libc_message, .-__libc_message

