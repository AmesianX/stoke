  .text
  .globl register_state
  .type register_state, @function

#! file-offset 0xd39e0
#! rip-offset  0xd39e0
#! capacity    368 bytes

# Text                          #  Line  RIP      Bytes  Opcode              
.register_state:                #        0xd39e0  0      OPC=<label>         
  pushq %r15                    #  1     0xd39e0  2      OPC=pushq_r64_1     
  pushq %r14                    #  2     0xd39e2  2      OPC=pushq_r64_1     
  pushq %r13                    #  3     0xd39e4  2      OPC=pushq_r64_1     
  pushq %r12                    #  4     0xd39e6  2      OPC=pushq_r64_1     
  movl %edx, %r13d              #  5     0xd39e8  3      OPC=movl_r32_r32    
  pushq %rbp                    #  6     0xd39eb  1      OPC=pushq_r64_1     
  pushq %rbx                    #  7     0xd39ec  1      OPC=pushq_r64_1     
  movq %rsi, %rbx               #  8     0xd39ed  3      OPC=movq_r64_r64    
  subq $0x18, %rsp              #  9     0xd39f0  4      OPC=subq_r64_imm8   
  movl %edx, (%rbx)             #  10    0xd39f4  2      OPC=movl_m32_r32    
  movq %rdi, 0x8(%rsp)          #  11    0xd39f6  5      OPC=movq_m64_r64    
  movslq 0xc(%rsi), %rdi        #  12    0xd39fb  4      OPC=movslq_r64_m32  
  movl %edi, 0x18(%rbx)         #  13    0xd39ff  3      OPC=movl_m32_r32    
  movq %rdi, %r15               #  14    0xd3a02  3      OPC=movq_r64_r64    
  movl $0x0, 0x1c(%rsi)         #  15    0xd3a05  7      OPC=movl_m32_imm32  
  shlq $0x2, %rdi               #  16    0xd3a0c  4      OPC=shlq_r64_imm8   
  callq .memalign_plt           #  17    0xd3a10  5      OPC=callq_label     
  testq %rax, %rax              #  18    0xd3a15  3      OPC=testq_r64_r64   
  movq %rax, 0x20(%rbx)         #  19    0xd3a18  4      OPC=movq_m64_r64    
  movq 0x8(%rsp), %rcx          #  20    0xd3a1c  5      OPC=movq_r64_m64    
  je .L_d3b30                   #  21    0xd3a21  6      OPC=je_label_1      
  xorl %ebp, %ebp               #  22    0xd3a27  2      OPC=xorl_r32_r32    
  xorl %r12d, %r12d             #  23    0xd3a29  3      OPC=xorl_r32_r32    
  testl %r15d, %r15d            #  24    0xd3a2c  3      OPC=testl_r32_r32   
  jg .L_d3aa8                   #  25    0xd3a2f  2      OPC=jg_label        
  nop                           #  26    0xd3a31  1      OPC=nop             
  nop                           #  27    0xd3a32  1      OPC=nop             
  nop                           #  28    0xd3a33  1      OPC=nop             
  nop                           #  29    0xd3a34  1      OPC=nop             
  nop                           #  30    0xd3a35  1      OPC=nop             
  nop                           #  31    0xd3a36  1      OPC=nop             
  nop                           #  32    0xd3a37  1      OPC=nop             
.L_d3a38:                       #        0xd3a38  0      OPC=<label>         
  andl 0x84(%rcx), %r13d        #  33    0xd3a38  7      OPC=andl_r32_m32    
  shlq $0x4, %r13               #  34    0xd3a3f  4      OPC=shlq_r64_imm8   
  movq %r13, %rbp               #  35    0xd3a43  3      OPC=movq_r64_r64    
  addq 0x40(%rcx), %rbp         #  36    0xd3a46  4      OPC=addq_r64_m64    
  movslq (%rbp), %rdx           #  37    0xd3a4a  4      OPC=movslq_r64_m32  
  cmpl %edx, 0x4(%rbp)          #  38    0xd3a4e  3      OPC=cmpl_m32_r32    
  jle .L_d3b00                  #  39    0xd3a51  6      OPC=jle_label_1     
  movq 0x8(%rbp), %rax          #  40    0xd3a57  4      OPC=movq_r64_m64    
.L_d3a5b:                       #        0xd3a5b  0      OPC=<label>         
  leal 0x1(%rdx), %ecx          #  41    0xd3a5b  3      OPC=leal_r32_m16    
  movl %ecx, (%rbp)             #  42    0xd3a5e  3      OPC=movl_m32_r32    
  movq %rbx, (%rax,%rdx,8)      #  43    0xd3a61  4      OPC=movq_m64_r64    
  addq $0x18, %rsp              #  44    0xd3a65  4      OPC=addq_r64_imm8   
  popq %rbx                     #  45    0xd3a69  1      OPC=popq_r64_1      
  xorl %eax, %eax               #  46    0xd3a6a  2      OPC=xorl_r32_r32    
  popq %rbp                     #  47    0xd3a6c  1      OPC=popq_r64_1      
  popq %r12                     #  48    0xd3a6d  2      OPC=popq_r64_1      
  popq %r13                     #  49    0xd3a6f  2      OPC=popq_r64_1      
  popq %r14                     #  50    0xd3a71  2      OPC=popq_r64_1      
  popq %r15                     #  51    0xd3a73  2      OPC=popq_r64_1      
  retq                          #  52    0xd3a75  1      OPC=retq            
  nop                           #  53    0xd3a76  1      OPC=nop             
  nop                           #  54    0xd3a77  1      OPC=nop             
  nop                           #  55    0xd3a78  1      OPC=nop             
  nop                           #  56    0xd3a79  1      OPC=nop             
  nop                           #  57    0xd3a7a  1      OPC=nop             
  nop                           #  58    0xd3a7b  1      OPC=nop             
  nop                           #  59    0xd3a7c  1      OPC=nop             
  nop                           #  60    0xd3a7d  1      OPC=nop             
  nop                           #  61    0xd3a7e  1      OPC=nop             
  nop                           #  62    0xd3a7f  1      OPC=nop             
.L_d3a80:                       #        0xd3a80  0      OPC=<label>         
  movslq 0x1c(%rbx), %rdx       #  63    0xd3a80  4      OPC=movslq_r64_m32  
  cmpl %edx, 0x18(%rbx)         #  64    0xd3a84  3      OPC=cmpl_m32_r32    
  je .L_d3ac8                   #  65    0xd3a87  2      OPC=je_label        
  movq 0x20(%rbx), %rax         #  66    0xd3a89  4      OPC=movq_r64_m64    
.L_d3a8d:                       #        0xd3a8d  0      OPC=<label>         
  leal 0x1(%rdx), %esi          #  67    0xd3a8d  3      OPC=leal_r32_m16    
  movl %esi, 0x1c(%rbx)         #  68    0xd3a90  3      OPC=movl_m32_r32    
  movl %r14d, (%rax,%rdx,4)     #  69    0xd3a93  4      OPC=movl_m32_r32    
  movl 0xc(%rbx), %r15d         #  70    0xd3a97  4      OPC=movl_r32_m32    
.L_d3a9b:                       #        0xd3a9b  0      OPC=<label>         
  addl $0x1, %r12d              #  71    0xd3a9b  4      OPC=addl_r32_imm8   
  addq $0x4, %rbp               #  72    0xd3a9f  4      OPC=addq_r64_imm8   
  cmpl %r15d, %r12d             #  73    0xd3aa3  3      OPC=cmpl_r32_r32    
  jge .L_d3a38                  #  74    0xd3aa6  2      OPC=jge_label       
.L_d3aa8:                       #        0xd3aa8  0      OPC=<label>         
  movq 0x10(%rbx), %rax         #  75    0xd3aa8  4      OPC=movq_r64_m64    
  movslq (%rax,%rbp,1), %rax    #  76    0xd3aac  4      OPC=movslq_r64_m32  
  movq %rax, %r14               #  77    0xd3ab0  3      OPC=movq_r64_r64    
  shlq $0x4, %rax               #  78    0xd3ab3  4      OPC=shlq_r64_imm8   
  addq (%rcx), %rax             #  79    0xd3ab7  3      OPC=addq_r64_m64    
  testb $0x8, 0x8(%rax)         #  80    0xd3aba  4      OPC=testb_m8_imm8   
  jne .L_d3a9b                  #  81    0xd3abe  2      OPC=jne_label       
  jmpq .L_d3a80                 #  82    0xd3ac0  2      OPC=jmpq_label      
  nop                           #  83    0xd3ac2  1      OPC=nop             
  nop                           #  84    0xd3ac3  1      OPC=nop             
  nop                           #  85    0xd3ac4  1      OPC=nop             
  nop                           #  86    0xd3ac5  1      OPC=nop             
  nop                           #  87    0xd3ac6  1      OPC=nop             
  nop                           #  88    0xd3ac7  1      OPC=nop             
.L_d3ac8:                       #        0xd3ac8  0      OPC=<label>         
  leal 0x2(%rdx,%rdx,1), %eax   #  89    0xd3ac8  4      OPC=leal_r32_m16    
  movq 0x20(%rbx), %rdi         #  90    0xd3acc  4      OPC=movq_r64_m64    
  movq %rcx, 0x8(%rsp)          #  91    0xd3ad0  5      OPC=movq_m64_r64    
  movl %eax, 0x18(%rbx)         #  92    0xd3ad5  3      OPC=movl_m32_r32    
  cltq                          #  93    0xd3ad8  2      OPC=cltq            
  leaq (,%rax,4), %rsi          #  94    0xd3ada  8      OPC=leaq_r64_m16    
  callq .__tls_get_addr_plt     #  95    0xd3ae2  5      OPC=callq_label     
  testq %rax, %rax              #  96    0xd3ae7  3      OPC=testq_r64_r64   
  je .L_d3b30                   #  97    0xd3aea  2      OPC=je_label        
  movq %rax, 0x20(%rbx)         #  98    0xd3aec  4      OPC=movq_m64_r64    
  movslq 0x1c(%rbx), %rdx       #  99    0xd3af0  4      OPC=movslq_r64_m32  
  movq 0x8(%rsp), %rcx          #  100   0xd3af4  5      OPC=movq_r64_m64    
  jmpq .L_d3a8d                 #  101   0xd3af9  2      OPC=jmpq_label      
  nop                           #  102   0xd3afb  1      OPC=nop             
  nop                           #  103   0xd3afc  1      OPC=nop             
  nop                           #  104   0xd3afd  1      OPC=nop             
  nop                           #  105   0xd3afe  1      OPC=nop             
  nop                           #  106   0xd3aff  1      OPC=nop             
.L_d3b00:                       #        0xd3b00  0      OPC=<label>         
  leal 0x2(%rdx,%rdx,1), %r12d  #  107   0xd3b00  5      OPC=leal_r32_m16    
  movq 0x8(%rbp), %rdi          #  108   0xd3b05  4      OPC=movq_r64_m64    
  movslq %r12d, %rsi            #  109   0xd3b09  3      OPC=movslq_r64_r32  
  shlq $0x3, %rsi               #  110   0xd3b0c  4      OPC=shlq_r64_imm8   
  callq .__tls_get_addr_plt     #  111   0xd3b10  5      OPC=callq_label     
  testq %rax, %rax              #  112   0xd3b15  3      OPC=testq_r64_r64   
  je .L_d3b30                   #  113   0xd3b18  2      OPC=je_label        
  movq %rax, 0x8(%rbp)          #  114   0xd3b1a  4      OPC=movq_m64_r64    
  movl %r12d, 0x4(%rbp)         #  115   0xd3b1e  4      OPC=movl_m32_r32    
  movslq (%rbp), %rdx           #  116   0xd3b22  4      OPC=movslq_r64_m32  
  jmpq .L_d3a5b                 #  117   0xd3b26  5      OPC=jmpq_label_1    
  nop                           #  118   0xd3b2b  1      OPC=nop             
  nop                           #  119   0xd3b2c  1      OPC=nop             
  nop                           #  120   0xd3b2d  1      OPC=nop             
  nop                           #  121   0xd3b2e  1      OPC=nop             
  nop                           #  122   0xd3b2f  1      OPC=nop             
.L_d3b30:                       #        0xd3b30  0      OPC=<label>         
  addq $0x18, %rsp              #  123   0xd3b30  4      OPC=addq_r64_imm8   
  movl $0xc, %eax               #  124   0xd3b34  5      OPC=movl_r32_imm32  
  popq %rbx                     #  125   0xd3b39  1      OPC=popq_r64_1      
  popq %rbp                     #  126   0xd3b3a  1      OPC=popq_r64_1      
  popq %r12                     #  127   0xd3b3b  2      OPC=popq_r64_1      
  popq %r13                     #  128   0xd3b3d  2      OPC=popq_r64_1      
  popq %r14                     #  129   0xd3b3f  2      OPC=popq_r64_1      
  popq %r15                     #  130   0xd3b41  2      OPC=popq_r64_1      
  retq                          #  131   0xd3b43  1      OPC=retq            
  nop                           #  132   0xd3b44  1      OPC=nop             
  nop                           #  133   0xd3b45  1      OPC=nop             
  nop                           #  134   0xd3b46  1      OPC=nop             
  nop                           #  135   0xd3b47  1      OPC=nop             
  nop                           #  136   0xd3b48  1      OPC=nop             
  nop                           #  137   0xd3b49  1      OPC=nop             
  nop                           #  138   0xd3b4a  1      OPC=nop             
  nop                           #  139   0xd3b4b  1      OPC=nop             
  nop                           #  140   0xd3b4c  1      OPC=nop             
  nop                           #  141   0xd3b4d  1      OPC=nop             
  nop                           #  142   0xd3b4e  1      OPC=nop             
  nop                           #  143   0xd3b4f  1      OPC=nop             
                                                                             
.size register_state, .-register_state

