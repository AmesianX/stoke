  .text
  .globl clnt_sperror_GLIBC_2_2_5
  .type clnt_sperror_GLIBC_2_2_5, @function

#! file-offset 0x1323b0
#! rip-offset  0x1323b0
#! capacity    752 bytes

# Text                           #  Line  RIP       Bytes  Opcode              
.clnt_sperror_GLIBC_2_2_5:       #        0x1323b0  0      OPC=<label>         
  pushq %r13                     #  1     0x1323b0  2      OPC=pushq_r64_1     
  pushq %r12                     #  2     0x1323b2  2      OPC=pushq_r64_1     
  pushq %rbp                     #  3     0x1323b4  1      OPC=pushq_r64_1     
  pushq %rbx                     #  4     0x1323b5  1      OPC=pushq_r64_1     
  movq %rsi, %rbx                #  5     0x1323b6  3      OPC=movq_r64_r64    
  subq $0x438, %rsp              #  6     0x1323b9  7      OPC=subq_r64_imm32  
  movq 0x8(%rdi), %rax           #  7     0x1323c0  4      OPC=movq_r64_m64    
  leaq 0x10(%rsp), %rsi          #  8     0x1323c4  5      OPC=leaq_r64_m16    
  callq 0x10(%rax)               #  9     0x1323c9  3      OPC=callq_m64       
  movl 0x10(%rsp), %edi          #  10    0x1323cc  4      OPC=movl_r32_m32    
  leaq 0x578e9(%rip), %rcx       #  11    0x1323d0  7      OPC=leaq_r64_m16    
  xorl %eax, %eax                #  12    0x1323d7  2      OPC=xorl_r32_r32    
  nop                            #  13    0x1323d9  1      OPC=nop             
  nop                            #  14    0x1323da  1      OPC=nop             
  nop                            #  15    0x1323db  1      OPC=nop             
  nop                            #  16    0x1323dc  1      OPC=nop             
  nop                            #  17    0x1323dd  1      OPC=nop             
  nop                            #  18    0x1323de  1      OPC=nop             
  nop                            #  19    0x1323df  1      OPC=nop             
.L_1323e0:                       #        0x1323e0  0      OPC=<label>         
  cmpl (%rcx,%rax,8), %edi       #  20    0x1323e0  3      OPC=cmpl_r32_m32    
  je .L_1324a8                   #  21    0x1323e3  6      OPC=je_label_1      
  addq $0x1, %rax                #  22    0x1323e9  4      OPC=addq_r64_imm8   
  cmpq $0x12, %rax               #  23    0x1323ed  4      OPC=cmpq_r64_imm8   
  jne .L_1323e0                  #  24    0x1323f1  2      OPC=jne_label       
  leaq 0x5b51a(%rip), %rsi       #  25    0x1323f3  7      OPC=leaq_r64_m16    
  leaq 0x5819b(%rip), %rdi       #  26    0x1323fa  7      OPC=leaq_r64_m16    
  movl $0x5, %edx                #  27    0x132401  5      OPC=movl_r32_imm32  
  callq .__dcgettext             #  28    0x132406  5      OPC=callq_label     
  cmpl $0x11, 0x10(%rsp)         #  29    0x13240b  5      OPC=cmpl_m32_imm8   
  movq %rax, %rbp                #  30    0x132410  3      OPC=movq_r64_r64    
  ja .L_1324dc                   #  31    0x132413  6      OPC=ja_label_1      
.L_132419:                       #        0x132419  0      OPC=<label>         
  movl 0x10(%rsp), %eax          #  32    0x132419  4      OPC=movl_r32_m32    
  leaq 0x576dc(%rip), %rdi       #  33    0x13241d  7      OPC=leaq_r64_m16    
  movslq (%rdi,%rax,4), %rax     #  34    0x132424  4      OPC=movslq_r64_m32  
  addq %rax, %rdi                #  35    0x132428  3      OPC=addq_r64_r64    
  jmpq %rdi                      #  36    0x13242b  2      OPC=jmpq_r64        
  nop                            #  37    0x13242d  1      OPC=nop             
  nop                            #  38    0x13242e  1      OPC=nop             
  nop                            #  39    0x13242f  1      OPC=nop             
  movq 0x20(%rsp), %r13          #  40    0x132430  5      OPC=movq_r64_m64    
  movq 0x18(%rsp), %r12          #  41    0x132435  5      OPC=movq_r64_m64    
  leaq 0x5e567(%rip), %rsi       #  42    0x13243a  7      OPC=leaq_r64_m16    
  leaq 0x58154(%rip), %rdi       #  43    0x132441  7      OPC=leaq_r64_m16    
  movl $0x5, %edx                #  44    0x132448  5      OPC=movl_r32_imm32  
  callq .__dcgettext             #  45    0x13244d  5      OPC=callq_label     
  leaq 0x8(%rsp), %rdi           #  46    0x132452  5      OPC=leaq_r64_m16    
  movq %rax, %rsi                #  47    0x132457  3      OPC=movq_r64_r64    
  movq %r13, %r9                 #  48    0x13245a  3      OPC=movq_r64_r64    
  movq %r12, %r8                 #  49    0x13245d  3      OPC=movq_r64_r64    
  movq %rbp, %rcx                #  50    0x132460  3      OPC=movq_r64_r64    
  movq %rbx, %rdx                #  51    0x132463  3      OPC=movq_r64_r64    
  xorl %eax, %eax                #  52    0x132466  2      OPC=xorl_r32_r32    
  callq .__asprintf              #  53    0x132468  5      OPC=callq_label     
.L_13246d:                       #        0x13246d  0      OPC=<label>         
  testl %eax, %eax               #  54    0x13246d  2      OPC=testl_r32_r32   
  js .L_1325f4                   #  55    0x13246f  6      OPC=js_label_1      
  callq .__rpc_thread_variables  #  56    0x132475  5      OPC=callq_label     
  movq 0x8(%rsp), %rdx           #  57    0x13247a  5      OPC=movq_r64_m64    
  movq 0xb0(%rax), %rdi          #  58    0x13247f  7      OPC=movq_r64_m64    
  movq %rdx, 0xb0(%rax)          #  59    0x132486  7      OPC=movq_m64_r64    
  callq .L_1f8c0                 #  60    0x13248d  5      OPC=callq_label     
  movq 0x8(%rsp), %rax           #  61    0x132492  5      OPC=movq_r64_m64    
.L_132497:                       #        0x132497  0      OPC=<label>         
  addq $0x438, %rsp              #  62    0x132497  7      OPC=addq_r64_imm32  
  popq %rbx                      #  63    0x13249e  1      OPC=popq_r64_1      
  popq %rbp                      #  64    0x13249f  1      OPC=popq_r64_1      
  popq %r12                      #  65    0x1324a0  2      OPC=popq_r64_1      
  popq %r13                      #  66    0x1324a2  2      OPC=popq_r64_1      
  retq                           #  67    0x1324a4  1      OPC=retq            
  nop                            #  68    0x1324a5  1      OPC=nop             
  nop                            #  69    0x1324a6  1      OPC=nop             
  nop                            #  70    0x1324a7  1      OPC=nop             
.L_1324a8:                       #        0x1324a8  0      OPC=<label>         
  leaq 0x57811(%rip), %rdx       #  71    0x1324a8  7      OPC=leaq_r64_m16    
  leaq 0x580e6(%rip), %rdi       #  72    0x1324af  7      OPC=leaq_r64_m16    
  movl 0x4(%rdx,%rax,8), %esi    #  73    0x1324b6  4      OPC=movl_r32_m32    
  leaq 0x578bf(%rip), %rax       #  74    0x1324ba  7      OPC=leaq_r64_m16    
  movl $0x5, %edx                #  75    0x1324c1  5      OPC=movl_r32_imm32  
  addq %rax, %rsi                #  76    0x1324c6  3      OPC=addq_r64_r64    
  callq .__dcgettext             #  77    0x1324c9  5      OPC=callq_label     
  cmpl $0x11, 0x10(%rsp)         #  78    0x1324ce  5      OPC=cmpl_m32_imm8   
  movq %rax, %rbp                #  79    0x1324d3  3      OPC=movq_r64_r64    
  jbe .L_132419                  #  80    0x1324d6  6      OPC=jbe_label_1     
.L_1324dc:                       #        0x1324dc  0      OPC=<label>         
  movq 0x20(%rsp), %r9           #  81    0x1324dc  5      OPC=movq_r64_m64    
  movq 0x18(%rsp), %r8           #  82    0x1324e1  5      OPC=movq_r64_m64    
  leaq 0x8(%rsp), %rdi           #  83    0x1324e6  5      OPC=leaq_r64_m16    
  leaq 0x5b462(%rip), %rsi       #  84    0x1324eb  7      OPC=leaq_r64_m16    
  movq %rbp, %rcx                #  85    0x1324f2  3      OPC=movq_r64_r64    
  movq %rbx, %rdx                #  86    0x1324f5  3      OPC=movq_r64_r64    
  xorl %eax, %eax                #  87    0x1324f8  2      OPC=xorl_r32_r32    
  callq .__asprintf              #  88    0x1324fa  5      OPC=callq_label     
  jmpq .L_13246d                 #  89    0x1324ff  5      OPC=jmpq_label_1    
  nop                            #  90    0x132504  1      OPC=nop             
  nop                            #  91    0x132505  1      OPC=nop             
  nop                            #  92    0x132506  1      OPC=nop             
  nop                            #  93    0x132507  1      OPC=nop             
  movl 0x18(%rsp), %r12d         #  94    0x132508  5      OPC=movl_r32_m32    
  testl %r12d, %r12d             #  95    0x13250d  3      OPC=testl_r32_r32   
  je .L_132671                   #  96    0x132510  6      OPC=je_label_1      
  cmpl $0x1, %r12d               #  97    0x132516  4      OPC=cmpl_r32_imm8   
  je .L_13266a                   #  98    0x13251a  6      OPC=je_label_1      
  cmpl $0x2, %r12d               #  99    0x132520  4      OPC=cmpl_r32_imm8   
  je .L_132663                   #  100   0x132524  6      OPC=je_label_1      
  cmpl $0x3, %r12d               #  101   0x13252a  4      OPC=cmpl_r32_imm8   
  je .L_132686                   #  102   0x13252e  6      OPC=je_label_1      
  cmpl $0x4, %r12d               #  103   0x132534  4      OPC=cmpl_r32_imm8   
  je .L_13267c                   #  104   0x132538  6      OPC=je_label_1      
  cmpl $0x5, %r12d               #  105   0x13253e  4      OPC=cmpl_r32_imm8   
  je .L_132675                   #  106   0x132542  6      OPC=je_label_1      
  cmpl $0x6, %r12d               #  107   0x132548  4      OPC=cmpl_r32_imm8   
  je .L_1325fb                   #  108   0x13254c  6      OPC=je_label_1      
  cmpl $0x7, %r12d               #  109   0x132552  4      OPC=cmpl_r32_imm8   
  movl $0x7, %eax                #  110   0x132556  5      OPC=movl_r32_imm32  
  je .L_132600                   #  111   0x13255b  6      OPC=je_label_1      
.L_132561:                       #        0x132561  0      OPC=<label>         
  leaq 0x5e470(%rip), %rsi       #  112   0x132561  7      OPC=leaq_r64_m16    
  leaq 0x5802d(%rip), %rdi       #  113   0x132568  7      OPC=leaq_r64_m16    
  movl $0x5, %edx                #  114   0x13256f  5      OPC=movl_r32_imm32  
  callq .__dcgettext             #  115   0x132574  5      OPC=callq_label     
  leaq 0x8(%rsp), %rdi           #  116   0x132579  5      OPC=leaq_r64_m16    
  movq %rax, %rsi                #  117   0x13257e  3      OPC=movq_r64_r64    
  movl %r12d, %r8d               #  118   0x132581  3      OPC=movl_r32_r32    
  movq %rbp, %rcx                #  119   0x132584  3      OPC=movq_r64_r64    
  movq %rbx, %rdx                #  120   0x132587  3      OPC=movq_r64_r64    
  xorl %eax, %eax                #  121   0x13258a  2      OPC=xorl_r32_r32    
  callq .__asprintf              #  122   0x13258c  5      OPC=callq_label     
  jmpq .L_13246d                 #  123   0x132591  5      OPC=jmpq_label_1    
  nop                            #  124   0x132596  1      OPC=nop             
  nop                            #  125   0x132597  1      OPC=nop             
  nop                            #  126   0x132598  1      OPC=nop             
  nop                            #  127   0x132599  1      OPC=nop             
  nop                            #  128   0x13259a  1      OPC=nop             
  nop                            #  129   0x13259b  1      OPC=nop             
  nop                            #  130   0x13259c  1      OPC=nop             
  nop                            #  131   0x13259d  1      OPC=nop             
  nop                            #  132   0x13259e  1      OPC=nop             
  nop                            #  133   0x13259f  1      OPC=nop             
  leaq 0x8(%rsp), %rdi           #  134   0x1325a0  5      OPC=leaq_r64_m16    
  leaq 0x59d52(%rip), %rsi       #  135   0x1325a5  7      OPC=leaq_r64_m16    
  movq %rbp, %rcx                #  136   0x1325ac  3      OPC=movq_r64_r64    
  movq %rbx, %rdx                #  137   0x1325af  3      OPC=movq_r64_r64    
  xorl %eax, %eax                #  138   0x1325b2  2      OPC=xorl_r32_r32    
  callq .__asprintf              #  139   0x1325b4  5      OPC=callq_label     
  jmpq .L_13246d                 #  140   0x1325b9  5      OPC=jmpq_label_1    
  xchgw %ax, %ax                 #  141   0x1325be  2      OPC=xchgw_ax_r16    
  movl 0x18(%rsp), %edi          #  142   0x1325c0  4      OPC=movl_r32_m32    
  leaq 0x30(%rsp), %rsi          #  143   0x1325c4  5      OPC=leaq_r64_m16    
  movl $0x400, %edx              #  144   0x1325c9  5      OPC=movl_r32_imm32  
  callq .__strerror_r            #  145   0x1325ce  5      OPC=callq_label     
  leaq 0x8(%rsp), %rdi           #  146   0x1325d3  5      OPC=leaq_r64_m16    
  leaq 0x5b34f(%rip), %rsi       #  147   0x1325d8  7      OPC=leaq_r64_m16    
  movq %rax, %r8                 #  148   0x1325df  3      OPC=movq_r64_r64    
  movq %rbp, %rcx                #  149   0x1325e2  3      OPC=movq_r64_r64    
  movq %rbx, %rdx                #  150   0x1325e5  3      OPC=movq_r64_r64    
  xorl %eax, %eax                #  151   0x1325e8  2      OPC=xorl_r32_r32    
  callq .__asprintf              #  152   0x1325ea  5      OPC=callq_label     
  jmpq .L_13246d                 #  153   0x1325ef  5      OPC=jmpq_label_1    
.L_1325f4:                       #        0x1325f4  0      OPC=<label>         
  xorl %eax, %eax                #  154   0x1325f4  2      OPC=xorl_r32_r32    
  jmpq .L_132497                 #  155   0x1325f6  5      OPC=jmpq_label_1    
.L_1325fb:                       #        0x1325fb  0      OPC=<label>         
  movl $0x6, %eax                #  156   0x1325fb  5      OPC=movl_r32_imm32  
.L_132600:                       #        0x132600  0      OPC=<label>         
  leaq 0x57579(%rip), %rdx       #  157   0x132600  7      OPC=leaq_r64_m16    
  leaq 0x57f8e(%rip), %rdi       #  158   0x132607  7      OPC=leaq_r64_m16    
  movl 0x4(%rdx,%rax,8), %esi    #  159   0x13260e  4      OPC=movl_r32_m32    
  leaq 0x575a7(%rip), %rax       #  160   0x132612  7      OPC=leaq_r64_m16    
  movl $0x5, %edx                #  161   0x132619  5      OPC=movl_r32_imm32  
  addq %rax, %rsi                #  162   0x13261e  3      OPC=addq_r64_r64    
  callq .__dcgettext             #  163   0x132621  5      OPC=callq_label     
  testq %rax, %rax               #  164   0x132626  3      OPC=testq_r64_r64   
  movq %rax, %r12                #  165   0x132629  3      OPC=movq_r64_r64    
  je .L_132690                   #  166   0x13262c  2      OPC=je_label        
  leaq 0x5b30d(%rip), %rsi       #  167   0x13262e  7      OPC=leaq_r64_m16    
  leaq 0x57f60(%rip), %rdi       #  168   0x132635  7      OPC=leaq_r64_m16    
  movl $0x5, %edx                #  169   0x13263c  5      OPC=movl_r32_imm32  
  callq .__dcgettext             #  170   0x132641  5      OPC=callq_label     
  leaq 0x8(%rsp), %rdi           #  171   0x132646  5      OPC=leaq_r64_m16    
  movq %rax, %rsi                #  172   0x13264b  3      OPC=movq_r64_r64    
  movq %r12, %r8                 #  173   0x13264e  3      OPC=movq_r64_r64    
  movq %rbp, %rcx                #  174   0x132651  3      OPC=movq_r64_r64    
  movq %rbx, %rdx                #  175   0x132654  3      OPC=movq_r64_r64    
  xorl %eax, %eax                #  176   0x132657  2      OPC=xorl_r32_r32    
  callq .__asprintf              #  177   0x132659  5      OPC=callq_label     
  jmpq .L_13246d                 #  178   0x13265e  5      OPC=jmpq_label_1    
.L_132663:                       #        0x132663  0      OPC=<label>         
  movl $0x2, %eax                #  179   0x132663  5      OPC=movl_r32_imm32  
  jmpq .L_132600                 #  180   0x132668  2      OPC=jmpq_label      
.L_13266a:                       #        0x13266a  0      OPC=<label>         
  movl $0x1, %eax                #  181   0x13266a  5      OPC=movl_r32_imm32  
  jmpq .L_132600                 #  182   0x13266f  2      OPC=jmpq_label      
.L_132671:                       #        0x132671  0      OPC=<label>         
  xorl %eax, %eax                #  183   0x132671  2      OPC=xorl_r32_r32    
  jmpq .L_132600                 #  184   0x132673  2      OPC=jmpq_label      
.L_132675:                       #        0x132675  0      OPC=<label>         
  movl $0x5, %eax                #  185   0x132675  5      OPC=movl_r32_imm32  
  jmpq .L_132600                 #  186   0x13267a  2      OPC=jmpq_label      
.L_13267c:                       #        0x13267c  0      OPC=<label>         
  movl $0x4, %eax                #  187   0x13267c  5      OPC=movl_r32_imm32  
  jmpq .L_132600                 #  188   0x132681  5      OPC=jmpq_label_1    
.L_132686:                       #        0x132686  0      OPC=<label>         
  movl $0x3, %eax                #  189   0x132686  5      OPC=movl_r32_imm32  
  jmpq .L_132600                 #  190   0x13268b  5      OPC=jmpq_label_1    
.L_132690:                       #        0x132690  0      OPC=<label>         
  movl 0x18(%rsp), %r12d         #  191   0x132690  5      OPC=movl_r32_m32    
  jmpq .L_132561                 #  192   0x132695  5      OPC=jmpq_label_1    
  nop                            #  193   0x13269a  1      OPC=nop             
  nop                            #  194   0x13269b  1      OPC=nop             
  nop                            #  195   0x13269c  1      OPC=nop             
  nop                            #  196   0x13269d  1      OPC=nop             
  nop                            #  197   0x13269e  1      OPC=nop             
  nop                            #  198   0x13269f  1      OPC=nop             
                                                                               
.size clnt_sperror_GLIBC_2_2_5, .-clnt_sperror_GLIBC_2_2_5

