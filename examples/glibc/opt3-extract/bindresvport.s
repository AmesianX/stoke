  .text
  .globl bindresvport
  .type bindresvport, @function

#! file-offset 0x1295e0
#! rip-offset  0x1295e0
#! capacity    544 bytes

# Text                              #  Line  RIP       Bytes  Opcode                   
.bindresvport:                      #        0x1295e0  0      OPC=<label>              
  pushq %r14                        #  1     0x1295e0  2      OPC=pushq_r64_1          
  pushq %r13                        #  2     0x1295e2  2      OPC=pushq_r64_1          
  movl %edi, %r13d                  #  3     0x1295e4  3      OPC=movl_r32_r32         
  pushq %r12                        #  4     0x1295e7  2      OPC=pushq_r64_1          
  pushq %rbp                        #  5     0x1295e9  1      OPC=pushq_r64_1          
  pushq %rbx                        #  6     0x1295ea  1      OPC=pushq_r64_1          
  movq %rsi, %rbx                   #  7     0x1295eb  3      OPC=movq_r64_r64         
  subq $0x10, %rsp                  #  8     0x1295ee  4      OPC=subq_r64_imm8        
  testq %rsi, %rsi                  #  9     0x1295f2  3      OPC=testq_r64_r64        
  je .L_1297db                      #  10    0x1295f5  6      OPC=je_label_1           
  cmpw $0x2, (%rsi)                 #  11    0x1295fb  4      OPC=cmpw_m16_imm8        
  jne .L_1297bb                     #  12    0x1295ff  6      OPC=jne_label_1          
.L_129605:                          #        0x129605  0      OPC=<label>              
  cmpw $0x0, 0x29cc13(%rip)         #  13    0x129605  8      OPC=cmpw_m16_imm8        
  je .L_129789                      #  14    0x12960d  6      OPC=je_label_1           
.L_129613:                          #        0x129613  0      OPC=<label>              
  movswl 0x297db2(%rip), %eax       #  15    0x129613  7      OPC=movswl_r32_m16       
  movl $0x400, %ebp                 #  16    0x12961a  5      OPC=movl_r32_imm32       
  movl $0x1, %esi                   #  17    0x12961f  5      OPC=movl_r32_imm32       
  subl %eax, %ebp                   #  18    0x129624  2      OPC=subl_r32_r32         
  xorl %eax, %eax                   #  19    0x129626  2      OPC=xorl_r32_r32         
  cmpl $0x0, 0x29d5d1(%rip)         #  20    0x129628  7      OPC=cmpl_m32_imm8        
  je .L_12963d                      #  21    0x12962f  2      OPC=je_label             
  lock                              #  22    0x129631  1      OPC=lock                 
  cmpxchgl %esi, 0x29cbeb(%rip)     #  23    0x129632  7      OPC=cmpxchgl_m32_r32     
  nop                               #  24    0x129639  1      OPC=nop                  
  jne .L_129646                     #  25    0x12963a  2      OPC=jne_label            
  jmpq .L_129660                    #  26    0x12963c  2      OPC=jmpq_label           
.L_12963d:                          #        0x12963e  0      OPC=<label>              
  cmpxchgl %esi, 0x29cbe0(%rip)     #  27    0x12963e  7      OPC=cmpxchgl_m32_r32     
  je .L_129660                      #  28    0x129645  2      OPC=je_label             
.L_129646:                          #        0x129647  0      OPC=<label>              
  leaq 0x29cbd7(%rip), %rdi         #  29    0x129647  7      OPC=leaq_r64_m16         
  subq $0x80, %rsp                  #  30    0x12964e  7      OPC=subq_r64_imm32       
  callq .__lll_lock_wait_private    #  31    0x129655  5      OPC=callq_label          
  addq $0x80, %rsp                  #  32    0x12965a  7      OPC=addq_r64_imm32       
.L_129660:                          #        0x129661  0      OPC=<label>              
  testl %ebp, %ebp                  #  33    0x129661  2      OPC=testl_r32_r32        
  movl $0x3ff, %r12d                #  34    0x129663  6      OPC=movl_r32_imm32       
  movl $0xffffffff, %edx            #  35    0x129669  6      OPC=movl_r32_imm32_1     
  jle .L_129781                     #  36    0x12966f  6      OPC=jle_label_1          
  nop                               #  37    0x129675  1      OPC=nop                  
  nop                               #  38    0x129676  1      OPC=nop                  
  nop                               #  39    0x129677  1      OPC=nop                  
  nop                               #  40    0x129678  1      OPC=nop                  
  nop                               #  41    0x129679  1      OPC=nop                  
.L_129678:                          #        0x12967a  0      OPC=<label>              
  xorl %r14d, %r14d                 #  42    0x12967a  3      OPC=xorl_r32_r32         
  jmpq .L_129696                    #  43    0x12967d  2      OPC=jmpq_label           
  nop                               #  44    0x12967f  1      OPC=nop                  
  nop                               #  45    0x129680  1      OPC=nop                  
  nop                               #  46    0x129681  1      OPC=nop                  
.L_129680:                          #        0x129682  0      OPC=<label>              
  movq 0x2977f9(%rip), %rax         #  47    0x129682  7      OPC=movq_r64_m64         
  cmpl $0x62, (%rax)                #  48    0x129689  3      OPC=cmpl_m32_imm8        
  nop                               #  49    0x12968c  1      OPC=nop                  
  jne .L_1296db                     #  50    0x12968d  2      OPC=jne_label            
  addl $0x1, %r14d                  #  51    0x12968f  4      OPC=addl_r32_imm8        
  cmpl %ebp, %r14d                  #  52    0x129693  3      OPC=cmpl_r32_r32         
  je .L_1296e0                      #  53    0x129696  2      OPC=je_label             
.L_129696:                          #        0x129698  0      OPC=<label>              
  movzwl 0x29cb83(%rip), %eax       #  54    0x129698  7      OPC=movzwl_r32_m16       
  leal 0x1(%rax), %edx              #  55    0x12969f  3      OPC=leal_r32_m16         
  rorw $0x8, %ax                    #  56    0x1296a2  4      OPC=rorw_r16_imm8        
  movw %dx, 0x29cb75(%rip)          #  57    0x1296a6  7      OPC=movw_m16_r16         
  movswl %dx, %edx                  #  58    0x1296ad  3      OPC=movswl_r32_r16       
  movw %ax, 0x2(%rbx)               #  59    0x1296b0  4      OPC=movw_m16_r16         
  cmpl %edx, %r12d                  #  60    0x1296b4  3      OPC=cmpl_r32_r32         
  jge .L_1296c5                     #  61    0x1296b7  2      OPC=jge_label            
  movzwl 0x297d0e(%rip), %eax       #  62    0x1296b9  7      OPC=movzwl_r32_m16       
  movw %ax, 0x29cb5b(%rip)          #  63    0x1296c0  7      OPC=movw_m16_r16         
.L_1296c5:                          #        0x1296c7  0      OPC=<label>              
  movl $0x10, %edx                  #  64    0x1296c7  5      OPC=movl_r32_imm32       
  movq %rbx, %rsi                   #  65    0x1296cc  3      OPC=movq_r64_r64         
  movl %r13d, %edi                  #  66    0x1296cf  3      OPC=movl_r32_r32         
  callq .bind                       #  67    0x1296d2  5      OPC=callq_label          
  testl %eax, %eax                  #  68    0x1296d7  2      OPC=testl_r32_r32        
  movl %eax, %edx                   #  69    0x1296d9  2      OPC=movl_r32_r32         
  js .L_129680                      #  70    0x1296db  2      OPC=js_label             
.L_1296db:                          #        0x1296dd  0      OPC=<label>              
  cmpl %ebp, %r14d                  #  71    0x1296dd  3      OPC=cmpl_r32_r32         
  jne .L_12973c                     #  72    0x1296e0  2      OPC=jne_label            
.L_1296e0:                          #        0x1296e2  0      OPC=<label>              
  cmpw $0x200, 0x297ce3(%rip)       #  73    0x1296e2  9      OPC=cmpw_m16_imm16       
  je .L_12973c                      #  74    0x1296eb  2      OPC=je_label             
  movl $0x200, %eax                 #  75    0x1296ed  5      OPC=movl_r32_imm32       
  movl $0x58, %ebp                  #  76    0x1296f2  5      OPC=movl_r32_imm32       
  movl $0x257, %r12d                #  77    0x1296f7  6      OPC=movl_r32_imm32       
  movw %ax, 0x297cca(%rip)          #  78    0x1296fd  7      OPC=movw_m16_r16         
  movswl 0x29cb17(%rip), %eax       #  79    0x129704  7      OPC=movswl_r32_m16       
  movl %eax, %edx                   #  80    0x12970b  2      OPC=movl_r32_r32         
  imull $0xba3, %eax, %eax          #  81    0x12970d  6      OPC=imull_r32_r32_imm32  
  movl %edx, %ecx                   #  82    0x129713  2      OPC=movl_r32_r32         
  sarw $0xf, %cx                    #  83    0x129715  4      OPC=sarw_r16_imm8        
  shrl $0x10, %eax                  #  84    0x129719  3      OPC=shrl_r32_imm8        
  sarw $0x2, %ax                    #  85    0x12971c  4      OPC=sarw_r16_imm8        
  subl %ecx, %eax                   #  86    0x129720  2      OPC=subl_r32_r32         
  leal (%rax,%rax,4), %ecx          #  87    0x129722  3      OPC=leal_r32_m16         
  leal (%rax,%rcx,2), %eax          #  88    0x129725  3      OPC=leal_r32_m16         
  shll $0x3, %eax                   #  89    0x129728  3      OPC=shll_r32_imm8        
  subl %eax, %edx                   #  90    0x12972b  2      OPC=subl_r32_r32         
  addw $0x200, %dx                  #  91    0x12972d  5      OPC=addw_r16_imm16       
  movw %dx, 0x29cae9(%rip)          #  92    0x129732  7      OPC=movw_m16_r16         
  jmpq .L_129678                    #  93    0x129739  5      OPC=jmpq_label_1         
.L_12973c:                          #        0x12973e  0      OPC=<label>              
  cmpl $0x0, 0x29d4bd(%rip)         #  94    0x12973e  7      OPC=cmpl_m32_imm8        
  je .L_129750                      #  95    0x129745  2      OPC=je_label             
  lock                              #  96    0x129747  1      OPC=lock                 
  decl 0x29cad8(%rip)               #  97    0x129748  6      OPC=decl_m32             
  nop                               #  98    0x12974e  1      OPC=nop                  
  jne .L_129758                     #  99    0x12974f  2      OPC=jne_label            
  jmpq .L_129772                    #  100   0x129751  2      OPC=jmpq_label           
.L_129750:                          #        0x129753  0      OPC=<label>              
  decl 0x29cace(%rip)               #  101   0x129753  6      OPC=decl_m32             
  je .L_129772                      #  102   0x129759  2      OPC=je_label             
.L_129758:                          #        0x12975b  0      OPC=<label>              
  leaq 0x29cac5(%rip), %rdi         #  103   0x12975b  7      OPC=leaq_r64_m16         
  subq $0x80, %rsp                  #  104   0x129762  7      OPC=subq_r64_imm32       
  callq .__lll_unlock_wake_private  #  105   0x129769  5      OPC=callq_label          
  addq $0x80, %rsp                  #  106   0x12976e  7      OPC=addq_r64_imm32       
.L_129772:                          #        0x129775  0      OPC=<label>              
  addq $0x10, %rsp                  #  107   0x129775  4      OPC=addq_r64_imm8        
  movl %edx, %eax                   #  108   0x129779  2      OPC=movl_r32_r32         
  popq %rbx                         #  109   0x12977b  1      OPC=popq_r64_1           
  popq %rbp                         #  110   0x12977c  1      OPC=popq_r64_1           
  popq %r12                         #  111   0x12977d  2      OPC=popq_r64_1           
  popq %r13                         #  112   0x12977f  2      OPC=popq_r64_1           
  popq %r14                         #  113   0x129781  2      OPC=popq_r64_1           
  retq                              #  114   0x129783  1      OPC=retq                 
.L_129781:                          #        0x129784  0      OPC=<label>              
  xorl %r14d, %r14d                 #  115   0x129784  3      OPC=xorl_r32_r32         
  jmpq .L_1296db                    #  116   0x129787  5      OPC=jmpq_label_1         
.L_129789:                          #        0x12978c  0      OPC=<label>              
  callq .__getpid                   #  117   0x12978c  5      OPC=callq_label          
  movl $0x4d4873ed, %edx            #  118   0x129791  5      OPC=movl_r32_imm32       
  movl %eax, %ecx                   #  119   0x129796  2      OPC=movl_r32_r32         
  imull %edx                        #  120   0x129798  2      OPC=imull_r32            
  movl %ecx, %eax                   #  121   0x12979a  2      OPC=movl_r32_r32         
  sarl $0x1f, %eax                  #  122   0x12979c  3      OPC=sarl_r32_imm8        
  sarl $0x7, %edx                   #  123   0x12979f  3      OPC=sarl_r32_imm8        
  subl %eax, %edx                   #  124   0x1297a2  2      OPC=subl_r32_r32         
  imull $0x1a8, %edx, %edx          #  125   0x1297a4  6      OPC=imull_r32_r32_imm32  
  subl %edx, %ecx                   #  126   0x1297aa  2      OPC=subl_r32_r32         
  leal 0x258(%rcx), %eax            #  127   0x1297ac  6      OPC=leal_r32_m16         
  movw %ax, 0x29ca6a(%rip)          #  128   0x1297b2  7      OPC=movw_m16_r16         
  jmpq .L_129613                    #  129   0x1297b9  5      OPC=jmpq_label_1         
.L_1297bb:                          #        0x1297be  0      OPC=<label>              
  movq 0x2976be(%rip), %rax         #  130   0x1297be  7      OPC=movq_r64_m64         
  movl $0x61, (%rax)                #  131   0x1297c5  6      OPC=movl_m32_imm32       
  nop                               #  132   0x1297cb  1      OPC=nop                  
  addq $0x10, %rsp                  #  133   0x1297cc  4      OPC=addq_r64_imm8        
  movl $0xffffffff, %eax            #  134   0x1297d0  6      OPC=movl_r32_imm32_1     
  popq %rbx                         #  135   0x1297d6  1      OPC=popq_r64_1           
  popq %rbp                         #  136   0x1297d7  1      OPC=popq_r64_1           
  popq %r12                         #  137   0x1297d8  2      OPC=popq_r64_1           
  popq %r13                         #  138   0x1297da  2      OPC=popq_r64_1           
  popq %r14                         #  139   0x1297dc  2      OPC=popq_r64_1           
  retq                              #  140   0x1297de  1      OPC=retq                 
.L_1297db:                          #        0x1297df  0      OPC=<label>              
  movl $0x2, %edx                   #  141   0x1297df  5      OPC=movl_r32_imm32       
  movq $0x0, (%rsp)                 #  142   0x1297e4  8      OPC=movq_m64_imm32       
  movq $0x0, 0x8(%rsp)              #  143   0x1297ec  9      OPC=movq_m64_imm32       
  movw %dx, (%rsp)                  #  144   0x1297f5  4      OPC=movw_m16_r16         
  movq %rsp, %rbx                   #  145   0x1297f9  3      OPC=movq_r64_r64         
  jmpq .L_129605                    #  146   0x1297fc  5      OPC=jmpq_label_1         
  nop                               #  147   0x129801  1      OPC=nop                  
  nop                               #  148   0x129802  1      OPC=nop                  
  nop                               #  149   0x129803  1      OPC=nop                  
                                                                                       
.size bindresvport, .-bindresvport

