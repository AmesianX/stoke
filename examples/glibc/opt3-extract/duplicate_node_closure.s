  .text
  .globl duplicate_node_closure
  .type duplicate_node_closure, @function

#! file-offset 0xd6a50
#! rip-offset  0xd6a50
#! capacity    832 bytes

# Text                           #  Line  RIP      Bytes  Opcode              
.duplicate_node_closure:         #        0xd6a50  0      OPC=<label>         
  pushq %r15                     #  1     0xd6a50  2      OPC=pushq_r64_1     
  pushq %r14                     #  2     0xd6a52  2      OPC=pushq_r64_1     
  movslq %esi, %r9               #  3     0xd6a54  3      OPC=movslq_r64_r32  
  pushq %r13                     #  4     0xd6a57  2      OPC=pushq_r64_1     
  pushq %r12                     #  5     0xd6a59  2      OPC=pushq_r64_1     
  movq %rdi, %r14                #  6     0xd6a5b  3      OPC=movq_r64_r64    
  pushq %rbp                     #  7     0xd6a5e  1      OPC=pushq_r64_1     
  pushq %rbx                     #  8     0xd6a5f  1      OPC=pushq_r64_1     
  movq %r9, %r13                 #  9     0xd6a60  3      OPC=movq_r64_r64    
  movl %r8d, %ebx                #  10    0xd6a63  3      OPC=movl_r32_r32    
  movslq %edx, %r12              #  11    0xd6a66  3      OPC=movslq_r64_r32  
  subq $0x28, %rsp               #  12    0xd6a69  4      OPC=subq_r64_imm8   
  movl %ecx, 0x1c(%rsp)          #  13    0xd6a6d  4      OPC=movl_m32_r32    
  nop                            #  14    0xd6a71  1      OPC=nop             
  nop                            #  15    0xd6a72  1      OPC=nop             
  nop                            #  16    0xd6a73  1      OPC=nop             
  nop                            #  17    0xd6a74  1      OPC=nop             
  nop                            #  18    0xd6a75  1      OPC=nop             
  nop                            #  19    0xd6a76  1      OPC=nop             
  nop                            #  20    0xd6a77  1      OPC=nop             
.L_d6a78:                        #        0xd6a78  0      OPC=<label>         
  movq (%r14), %r8               #  21    0xd6a78  3      OPC=movq_r64_m64    
  movq %r9, %r15                 #  22    0xd6a7b  3      OPC=movq_r64_r64    
  shlq $0x4, %r15                #  23    0xd6a7e  4      OPC=shlq_r64_imm8   
  leaq (%r8,%r15,1), %r10        #  24    0xd6a82  4      OPC=leaq_r64_m16    
  cmpb $0x4, 0x8(%r10)           #  25    0xd6a86  5      OPC=cmpb_m8_imm8    
  je .L_d6ce8                    #  26    0xd6a8b  6      OPC=je_label_1      
  movq 0x28(%r14), %rdi          #  27    0xd6a91  4      OPC=movq_r64_m64    
  leaq (%rdi,%r15,1), %rax       #  28    0xd6a95  4      OPC=leaq_r64_m16    
  movl 0x4(%rax), %esi           #  29    0xd6a99  3      OPC=movl_r32_m32    
  testl %esi, %esi               #  30    0xd6a9c  2      OPC=testl_r32_r32   
  je .L_d6d5b                    #  31    0xd6a9e  6      OPC=je_label_1      
  cmpl $0x1, %esi                #  32    0xd6aa4  3      OPC=cmpl_r32_imm8   
  movq 0x8(%rax), %rax           #  33    0xd6aa7  4      OPC=movq_r64_m64    
  je .L_d6c70                    #  34    0xd6aab  6      OPC=je_label_1      
  movl (%rax), %r13d             #  35    0xd6ab1  3      OPC=movl_r32_m32    
  movl 0x10(%r14), %eax          #  36    0xd6ab4  4      OPC=movl_r32_m32    
  movq %r12, %rbp                #  37    0xd6ab8  3      OPC=movq_r64_r64    
  shlq $0x4, %rbp                #  38    0xd6abb  4      OPC=shlq_r64_imm8   
  addq %rbp, %rdi                #  39    0xd6abf  3      OPC=addq_r64_r64    
  leal -0x1(%rax), %r9d          #  40    0xd6ac2  4      OPC=leal_r32_m16    
  movl $0x0, 0x4(%rdi)           #  41    0xd6ac6  7      OPC=movl_m32_imm32  
  movslq %r9d, %rdx              #  42    0xd6acd  3      OPC=movslq_r64_r32  
  movq %rdx, %rsi                #  43    0xd6ad0  3      OPC=movq_r64_r64    
  shlq $0x4, %rsi                #  44    0xd6ad3  4      OPC=shlq_r64_imm8   
  testl %r9d, %r9d               #  45    0xd6ad7  3      OPC=testl_r32_r32   
  leaq (%r8,%rsi,1), %rax        #  46    0xd6ada  4      OPC=leaq_r64_m16    
  jle .L_d6c28                   #  47    0xd6ade  6      OPC=jle_label_1     
  testb $0x4, 0xa(%rax)          #  48    0xd6ae4  4      OPC=testb_m8_imm8   
  je .L_d6c28                    #  49    0xd6ae8  6      OPC=je_label_1      
  movq 0x20(%r14), %rcx          #  50    0xd6aee  4      OPC=movq_r64_m64    
  subq %rax, %rsi                #  51    0xd6af2  3      OPC=subq_r64_r64    
  subq $0x10, %rsi               #  52    0xd6af5  4      OPC=subq_r64_imm8   
  leaq (%rcx,%rdx,4), %rdx       #  53    0xd6af9  4      OPC=leaq_r64_m16    
  jmpq .L_d6b21                  #  54    0xd6afd  2      OPC=jmpq_label      
  nop                            #  55    0xd6aff  1      OPC=nop             
.L_d6b00:                        #        0xd6b00  0      OPC=<label>         
  addq %rsi, %rax                #  56    0xd6b00  3      OPC=addq_r64_r64    
  subl $0x1, %r9d                #  57    0xd6b03  4      OPC=subl_r32_imm8   
  subq $0x4, %rdx                #  58    0xd6b07  4      OPC=subq_r64_imm8   
  addq %r8, %rax                 #  59    0xd6b0b  3      OPC=addq_r64_r64    
  testl %r9d, %r9d               #  60    0xd6b0e  3      OPC=testl_r32_r32   
  jle .L_d6c28                   #  61    0xd6b11  6      OPC=jle_label_1     
  testb $0x4, 0xa(%rax)          #  62    0xd6b17  4      OPC=testb_m8_imm8   
  je .L_d6c28                    #  63    0xd6b1b  6      OPC=je_label_1      
.L_d6b21:                        #        0xd6b21  0      OPC=<label>         
  cmpl (%rdx), %r13d             #  64    0xd6b21  3      OPC=cmpl_r32_m32    
  jne .L_d6b00                   #  65    0xd6b24  2      OPC=jne_label       
  movl 0x8(%rax), %ecx           #  66    0xd6b26  3      OPC=movl_r32_m32    
  shrl $0x8, %ecx                #  67    0xd6b29  3      OPC=shrl_r32_imm8   
  andl $0x3ff, %ecx              #  68    0xd6b2c  6      OPC=andl_r32_imm32  
  cmpl %ecx, %ebx                #  69    0xd6b32  2      OPC=cmpl_r32_r32    
  jne .L_d6b00                   #  70    0xd6b34  2      OPC=jne_label       
  movl %r9d, %esi                #  71    0xd6b36  3      OPC=movl_r32_r32    
  callq .re_node_set_insert      #  72    0xd6b39  5      OPC=callq_label     
  testl %eax, %eax               #  73    0xd6b3e  2      OPC=testl_r32_r32   
  js .L_d6c10                    #  74    0xd6b40  6      OPC=js_label_1      
.L_d6b46:                        #        0xd6b46  0      OPC=<label>         
  movq 0x28(%r14), %rax          #  75    0xd6b46  4      OPC=movq_r64_m64    
  movq %r14, %rdi                #  76    0xd6b4a  3      OPC=movq_r64_r64    
  movq 0x8(%rax,%r15,1), %rax    #  77    0xd6b4d  5      OPC=movq_r64_m64    
  movslq 0x4(%rax), %r9          #  78    0xd6b52  4      OPC=movslq_r64_m32  
  movq (%r14), %rax              #  79    0xd6b56  3      OPC=movq_r64_m64    
  movq %r9, %r15                 #  80    0xd6b59  3      OPC=movq_r64_r64    
  movq %r9, %r13                 #  81    0xd6b5c  3      OPC=movq_r64_r64    
  movq %r9, 0x10(%rsp)           #  82    0xd6b5f  5      OPC=movq_m64_r64    
  shlq $0x4, %r15                #  83    0xd6b64  4      OPC=shlq_r64_imm8   
  movq 0x8(%rax,%r15,1), %rdx    #  84    0xd6b68  5      OPC=movq_r64_m64    
  movq (%rax,%r15,1), %rsi       #  85    0xd6b6d  4      OPC=movq_r64_m64    
  callq .re_dfa_add_node         #  86    0xd6b71  5      OPC=callq_label     
  cmpl $0xffffffff, %eax         #  87    0xd6b76  6      OPC=cmpl_r32_imm32  
  nop                            #  88    0xd6b7c  1      OPC=nop             
  nop                            #  89    0xd6b7d  1      OPC=nop             
  nop                            #  90    0xd6b7e  1      OPC=nop             
  movl %eax, %edx                #  91    0xd6b7f  2      OPC=movl_r32_r32    
  je .L_d6c10                    #  92    0xd6b81  6      OPC=je_label_1      
  movq (%r14), %r8               #  93    0xd6b87  3      OPC=movq_r64_m64    
  movslq %eax, %r12              #  94    0xd6b8a  3      OPC=movslq_r64_r32  
  movl %ebx, %eax                #  95    0xd6b8d  2      OPC=movl_r32_r32    
  movq %r12, %rdi                #  96    0xd6b8f  3      OPC=movq_r64_r64    
  andl $0x3ff, %eax              #  97    0xd6b92  5      OPC=andl_eax_imm32  
  shlq $0x4, %rdi                #  98    0xd6b97  4      OPC=shlq_r64_imm8   
  shll $0x8, %eax                #  99    0xd6b9b  3      OPC=shll_r32_imm8   
  movl 0x8(%r8,%rdi,1), %esi     #  100   0xd6b9e  5      OPC=movl_r32_m32    
  andl $0xfffc00ff, %esi         #  101   0xd6ba3  6      OPC=andl_r32_imm32  
  orl %esi, %eax                 #  102   0xd6ba9  2      OPC=orl_r32_r32     
  movl %eax, 0x8(%r8,%rdi,1)     #  103   0xd6bab  5      OPC=movl_m32_r32    
  movq (%r14), %rax              #  104   0xd6bb0  3      OPC=movq_r64_m64    
  leaq (%rax,%rdi,1), %r8        #  105   0xd6bb3  4      OPC=leaq_r64_m16    
  movl 0x8(%rax,%r15,1), %esi    #  106   0xd6bb7  5      OPC=movl_r32_m32    
  movl 0x8(%r8), %eax            #  107   0xd6bbc  4      OPC=movl_r32_m32    
  shrl $0x8, %esi                #  108   0xd6bc0  3      OPC=shrl_r32_imm8   
  movl %eax, %r10d               #  109   0xd6bc3  3      OPC=movl_r32_r32    
  andl $0xfffc00ff, %eax         #  110   0xd6bc6  6      OPC=andl_r32_imm32  
  shrl $0x8, %r10d               #  111   0xd6bcc  4      OPC=shrl_r32_imm8   
  orl %r10d, %esi                #  112   0xd6bd0  3      OPC=orl_r32_r32     
  andl $0x3ff, %esi              #  113   0xd6bd3  6      OPC=andl_r32_imm32  
  shll $0x8, %esi                #  114   0xd6bd9  3      OPC=shll_r32_imm8   
  orl %esi, %eax                 #  115   0xd6bdc  2      OPC=orl_r32_r32     
  movl %edx, %esi                #  116   0xd6bde  2      OPC=movl_r32_r32    
  movl %eax, 0x8(%r8)            #  117   0xd6be0  4      OPC=movl_m32_r32    
  movq (%r14), %rax              #  118   0xd6be4  3      OPC=movq_r64_m64    
  orb $0x4, 0xa(%rax,%rdi,1)     #  119   0xd6be7  5      OPC=orb_m8_imm8     
  movq %rbp, %rdi                #  120   0xd6bec  3      OPC=movq_r64_r64    
  movl %edx, 0x8(%rsp)           #  121   0xd6bef  4      OPC=movl_m32_r32    
  movq 0x20(%r14), %rax          #  122   0xd6bf3  4      OPC=movq_r64_m64    
  addq 0x28(%r14), %rdi          #  123   0xd6bf7  4      OPC=addq_r64_m64    
  movl %r13d, (%rax,%r12,4)      #  124   0xd6bfb  4      OPC=movl_m32_r32    
  callq .re_node_set_insert      #  125   0xd6bff  5      OPC=callq_label     
  testl %eax, %eax               #  126   0xd6c04  2      OPC=testl_r32_r32   
  movl 0x8(%rsp), %edx           #  127   0xd6c06  4      OPC=movl_r32_m32    
  movq 0x10(%rsp), %r9           #  128   0xd6c0a  5      OPC=movq_r64_m64    
  jns .L_d6a78                   #  129   0xd6c0f  6      OPC=jns_label_1     
  xchgw %ax, %ax                 #  130   0xd6c15  2      OPC=xchgw_ax_r16    
.L_d6c10:                        #        0xd6c17  0      OPC=<label>         
  movl $0xc, %eax                #  131   0xd6c17  5      OPC=movl_r32_imm32  
.L_d6c15:                        #        0xd6c1c  0      OPC=<label>         
  addq $0x28, %rsp               #  132   0xd6c1c  4      OPC=addq_r64_imm8   
  popq %rbx                      #  133   0xd6c20  1      OPC=popq_r64_1      
  popq %rbp                      #  134   0xd6c21  1      OPC=popq_r64_1      
  popq %r12                      #  135   0xd6c22  2      OPC=popq_r64_1      
  popq %r13                      #  136   0xd6c24  2      OPC=popq_r64_1      
  popq %r14                      #  137   0xd6c26  2      OPC=popq_r64_1      
  popq %r15                      #  138   0xd6c28  2      OPC=popq_r64_1      
  retq                           #  139   0xd6c2a  1      OPC=retq            
  nop                            #  140   0xd6c2b  1      OPC=nop             
  nop                            #  141   0xd6c2c  1      OPC=nop             
  nop                            #  142   0xd6c2d  1      OPC=nop             
  nop                            #  143   0xd6c2e  1      OPC=nop             
.L_d6c28:                        #        0xd6c2f  0      OPC=<label>         
  movl %ebx, %edx                #  144   0xd6c2f  2      OPC=movl_r32_r32    
  movl %r13d, %esi               #  145   0xd6c31  3      OPC=movl_r32_r32    
  movq %r14, %rdi                #  146   0xd6c34  3      OPC=movq_r64_r64    
  callq .duplicate_node          #  147   0xd6c37  5      OPC=callq_label     
  cmpl $0xffffffff, %eax         #  148   0xd6c3c  6      OPC=cmpl_r32_imm32  
  nop                            #  149   0xd6c42  1      OPC=nop             
  nop                            #  150   0xd6c43  1      OPC=nop             
  nop                            #  151   0xd6c44  1      OPC=nop             
  movl %eax, %r12d               #  152   0xd6c45  3      OPC=movl_r32_r32    
  je .L_d6c10                    #  153   0xd6c48  2      OPC=je_label        
  movq %rbp, %rdi                #  154   0xd6c4a  3      OPC=movq_r64_r64    
  addq 0x28(%r14), %rdi          #  155   0xd6c4d  4      OPC=addq_r64_m64    
  movl %r12d, %esi               #  156   0xd6c51  3      OPC=movl_r32_r32    
  callq .re_node_set_insert      #  157   0xd6c54  5      OPC=callq_label     
  testl %eax, %eax               #  158   0xd6c59  2      OPC=testl_r32_r32   
  js .L_d6c10                    #  159   0xd6c5b  2      OPC=js_label        
  movl 0x1c(%rsp), %ecx          #  160   0xd6c5d  4      OPC=movl_r32_m32    
  movl %ebx, %r8d                #  161   0xd6c61  3      OPC=movl_r32_r32    
  movl %r12d, %edx               #  162   0xd6c64  3      OPC=movl_r32_r32    
  movl %r13d, %esi               #  163   0xd6c67  3      OPC=movl_r32_r32    
  movq %r14, %rdi                #  164   0xd6c6a  3      OPC=movq_r64_r64    
  callq .duplicate_node_closure  #  165   0xd6c6d  5      OPC=callq_label     
  testl %eax, %eax               #  166   0xd6c72  2      OPC=testl_r32_r32   
  je .L_d6b46                    #  167   0xd6c74  6      OPC=je_label_1      
  jmpq .L_d6c15                  #  168   0xd6c7a  2      OPC=jmpq_label      
  nop                            #  169   0xd6c7c  1      OPC=nop             
.L_d6c70:                        #        0xd6c7d  0      OPC=<label>         
  movq %r12, %r15                #  170   0xd6c7d  3      OPC=movq_r64_r64    
  movl (%rax), %ebp              #  171   0xd6c80  2      OPC=movl_r32_m32    
  shlq $0x4, %r15                #  172   0xd6c82  4      OPC=shlq_r64_imm8   
  addq %r15, %rdi                #  173   0xd6c86  3      OPC=addq_r64_r64    
  cmpl %r13d, %edx               #  174   0xd6c89  3      OPC=cmpl_r32_r32    
  movl $0x0, 0x4(%rdi)           #  175   0xd6c8c  7      OPC=movl_m32_imm32  
  je .L_d6c93                    #  176   0xd6c93  2      OPC=je_label        
  cmpl 0x1c(%rsp), %r13d         #  177   0xd6c95  5      OPC=cmpl_r32_m32    
  je .L_d6d78                    #  178   0xd6c9a  6      OPC=je_label_1      
.L_d6c93:                        #        0xd6ca0  0      OPC=<label>         
  movl 0x8(%r10), %eax           #  179   0xd6ca0  4      OPC=movl_r32_m32    
  movl %ebp, %esi                #  180   0xd6ca4  2      OPC=movl_r32_r32    
  movq %r14, %rdi                #  181   0xd6ca6  3      OPC=movq_r64_r64    
  shrl $0x8, %eax                #  182   0xd6ca9  3      OPC=shrl_r32_imm8   
  andl $0x3ff, %eax              #  183   0xd6cac  5      OPC=andl_eax_imm32  
  orl %eax, %ebx                 #  184   0xd6cb1  2      OPC=orl_r32_r32     
  movl %ebx, %edx                #  185   0xd6cb3  2      OPC=movl_r32_r32    
  callq .duplicate_node          #  186   0xd6cb5  5      OPC=callq_label     
  cmpl $0xffffffff, %eax         #  187   0xd6cba  6      OPC=cmpl_r32_imm32  
  nop                            #  188   0xd6cc0  1      OPC=nop             
  nop                            #  189   0xd6cc1  1      OPC=nop             
  nop                            #  190   0xd6cc2  1      OPC=nop             
  je .L_d6c10                    #  191   0xd6cc3  6      OPC=je_label_1      
  movq %r15, %rdi                #  192   0xd6cc9  3      OPC=movq_r64_r64    
  addq 0x28(%r14), %rdi          #  193   0xd6ccc  4      OPC=addq_r64_m64    
  movl %eax, %esi                #  194   0xd6cd0  2      OPC=movl_r32_r32    
  movl %eax, 0x8(%rsp)           #  195   0xd6cd2  4      OPC=movl_m32_r32    
  callq .re_node_set_insert      #  196   0xd6cd6  5      OPC=callq_label     
  testl %eax, %eax               #  197   0xd6cdb  2      OPC=testl_r32_r32   
  js .L_d6c10                    #  198   0xd6cdd  6      OPC=js_label_1      
  movslq 0x8(%rsp), %r12         #  199   0xd6ce3  5      OPC=movslq_r64_m32  
  movslq %ebp, %r9               #  200   0xd6ce8  3      OPC=movslq_r64_r32  
  movq %r9, %r13                 #  201   0xd6ceb  3      OPC=movq_r64_r64    
  movq %r12, %rdx                #  202   0xd6cee  3      OPC=movq_r64_r64    
  jmpq .L_d6a78                  #  203   0xd6cf1  5      OPC=jmpq_label_1    
  nop                            #  204   0xd6cf6  1      OPC=nop             
  nop                            #  205   0xd6cf7  1      OPC=nop             
  nop                            #  206   0xd6cf8  1      OPC=nop             
  nop                            #  207   0xd6cf9  1      OPC=nop             
  nop                            #  208   0xd6cfa  1      OPC=nop             
.L_d6ce8:                        #        0xd6cfb  0      OPC=<label>         
  movq 0x18(%r14), %rax          #  209   0xd6cfb  4      OPC=movq_r64_m64    
  movq %r12, %rbp                #  210   0xd6cff  3      OPC=movq_r64_r64    
  movl %ebx, %edx                #  211   0xd6d02  2      OPC=movl_r32_r32    
  shlq $0x4, %rbp                #  212   0xd6d04  4      OPC=shlq_r64_imm8   
  movq %r14, %rdi                #  213   0xd6d08  3      OPC=movq_r64_r64    
  movq %r9, 0x8(%rsp)            #  214   0xd6d0b  5      OPC=movq_m64_r64    
  movl (%rax,%r9,4), %r13d       #  215   0xd6d10  4      OPC=movl_r32_m32    
  movq 0x28(%r14), %rax          #  216   0xd6d14  4      OPC=movq_r64_m64    
  movl %r13d, %esi               #  217   0xd6d18  3      OPC=movl_r32_r32    
  movl $0x0, 0x4(%rax,%rbp,1)    #  218   0xd6d1b  8      OPC=movl_m32_imm32  
  callq .duplicate_node          #  219   0xd6d23  5      OPC=callq_label     
  cmpl $0xffffffff, %eax         #  220   0xd6d28  6      OPC=cmpl_r32_imm32  
  nop                            #  221   0xd6d2e  1      OPC=nop             
  nop                            #  222   0xd6d2f  1      OPC=nop             
  nop                            #  223   0xd6d30  1      OPC=nop             
  movl %eax, %edx                #  224   0xd6d31  2      OPC=movl_r32_r32    
  movq 0x8(%rsp), %r9            #  225   0xd6d33  5      OPC=movq_r64_m64    
  je .L_d6c10                    #  226   0xd6d38  6      OPC=je_label_1      
  movq 0x18(%r14), %rax          #  227   0xd6d3e  4      OPC=movq_r64_m64    
  movq %rbp, %rdi                #  228   0xd6d42  3      OPC=movq_r64_r64    
  addq 0x28(%r14), %rdi          #  229   0xd6d45  4      OPC=addq_r64_m64    
  movl %edx, 0x8(%rsp)           #  230   0xd6d49  4      OPC=movl_m32_r32    
  movl (%rax,%r9,4), %esi        #  231   0xd6d4d  4      OPC=movl_r32_m32    
  movl %esi, (%rax,%r12,4)       #  232   0xd6d51  4      OPC=movl_m32_r32    
  movl %edx, %esi                #  233   0xd6d55  2      OPC=movl_r32_r32    
  callq .re_node_set_insert      #  234   0xd6d57  5      OPC=callq_label     
  testl %eax, %eax               #  235   0xd6d5c  2      OPC=testl_r32_r32   
  js .L_d6c10                    #  236   0xd6d5e  6      OPC=js_label_1      
  movslq 0x8(%rsp), %r12         #  237   0xd6d64  5      OPC=movslq_r64_m32  
  movslq %r13d, %r9              #  238   0xd6d69  3      OPC=movslq_r64_r32  
  movq %r12, %rdx                #  239   0xd6d6c  3      OPC=movq_r64_r64    
  jmpq .L_d6a78                  #  240   0xd6d6f  5      OPC=jmpq_label_1    
.L_d6d5b:                        #        0xd6d74  0      OPC=<label>         
  movq 0x18(%r14), %rax          #  241   0xd6d74  4      OPC=movq_r64_m64    
  movl (%rax,%r9,4), %edx        #  242   0xd6d78  4      OPC=movl_r32_m32    
  movl %edx, (%rax,%r12,4)       #  243   0xd6d7c  4      OPC=movl_m32_r32    
  addq $0x28, %rsp               #  244   0xd6d80  4      OPC=addq_r64_imm8   
  xorl %eax, %eax                #  245   0xd6d84  2      OPC=xorl_r32_r32    
  popq %rbx                      #  246   0xd6d86  1      OPC=popq_r64_1      
  popq %rbp                      #  247   0xd6d87  1      OPC=popq_r64_1      
  popq %r12                      #  248   0xd6d88  2      OPC=popq_r64_1      
  popq %r13                      #  249   0xd6d8a  2      OPC=popq_r64_1      
  popq %r14                      #  250   0xd6d8c  2      OPC=popq_r64_1      
  popq %r15                      #  251   0xd6d8e  2      OPC=popq_r64_1      
  retq                           #  252   0xd6d90  1      OPC=retq            
.L_d6d78:                        #        0xd6d91  0      OPC=<label>         
  movl %ebp, %esi                #  253   0xd6d91  2      OPC=movl_r32_r32    
  callq .re_node_set_insert      #  254   0xd6d93  5      OPC=callq_label     
  testl %eax, %eax               #  255   0xd6d98  2      OPC=testl_r32_r32   
  js .L_d6c10                    #  256   0xd6d9a  6      OPC=js_label_1      
  xorl %eax, %eax                #  257   0xd6da0  2      OPC=xorl_r32_r32    
  jmpq .L_d6c15                  #  258   0xd6da2  5      OPC=jmpq_label_1    
  xchgw %ax, %ax                 #  259   0xd6da7  2      OPC=xchgw_ax_r16    
                                                                              
.size duplicate_node_closure, .-duplicate_node_closure

