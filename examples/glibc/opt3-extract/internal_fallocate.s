  .text
  .globl internal_fallocate
  .type internal_fallocate, @function

#! file-offset 0xfa0d0
#! rip-offset  0xfa0d0
#! capacity    432 bytes

# Text                       #  Line  RIP      Bytes  Opcode               
.internal_fallocate:         #        0xfa0d0  0      OPC=<label>          
  pushq %r15                 #  1     0xfa0d0  2      OPC=pushq_r64_1      
  movq %rsi, %rax            #  2     0xfa0d2  3      OPC=movq_r64_r64     
  pushq %r14                 #  3     0xfa0d5  2      OPC=pushq_r64_1      
  pushq %r13                 #  4     0xfa0d7  2      OPC=pushq_r64_1      
  pushq %r12                 #  5     0xfa0d9  2      OPC=pushq_r64_1      
  shrq $0x3f, %rax           #  6     0xfa0db  4      OPC=shrq_r64_imm8    
  pushq %rbp                 #  7     0xfa0df  1      OPC=pushq_r64_1      
  pushq %rbx                 #  8     0xfa0e0  1      OPC=pushq_r64_1      
  subq $0x128, %rsp          #  9     0xfa0e1  7      OPC=subq_r64_imm32   
  testb %al, %al             #  10    0xfa0e8  2      OPC=testb_r8_r8      
  jne .L_fa0f7               #  11    0xfa0ea  2      OPC=jne_label        
  movq %rdx, %rax            #  12    0xfa0ec  3      OPC=movq_r64_r64     
  shrq $0x3f, %rax           #  13    0xfa0ef  4      OPC=shrq_r64_imm8    
  testb %al, %al             #  14    0xfa0f3  2      OPC=testb_r8_r8      
  je .L_fa110                #  15    0xfa0f5  2      OPC=je_label         
.L_fa0f7:                    #        0xfa0f7  0      OPC=<label>          
  movl $0x16, %ebp           #  16    0xfa0f7  5      OPC=movl_r32_imm32   
.L_fa0fc:                    #        0xfa0fc  0      OPC=<label>          
  addq $0x128, %rsp          #  17    0xfa0fc  7      OPC=addq_r64_imm32   
  movl %ebp, %eax            #  18    0xfa103  2      OPC=movl_r32_r32     
  popq %rbx                  #  19    0xfa105  1      OPC=popq_r64_1       
  popq %rbp                  #  20    0xfa106  1      OPC=popq_r64_1       
  popq %r12                  #  21    0xfa107  2      OPC=popq_r64_1       
  popq %r13                  #  22    0xfa109  2      OPC=popq_r64_1       
  popq %r14                  #  23    0xfa10b  2      OPC=popq_r64_1       
  popq %r15                  #  24    0xfa10d  2      OPC=popq_r64_1       
  retq                       #  25    0xfa10f  1      OPC=retq             
.L_fa110:                    #        0xfa110  0      OPC=<label>          
  movq %rsi, %rax            #  26    0xfa110  3      OPC=movq_r64_r64     
  movl $0x1b, %ebp           #  27    0xfa113  5      OPC=movl_r32_imm32   
  addq %rdx, %rax            #  28    0xfa118  3      OPC=addq_r64_r64     
  js .L_fa0fc                #  29    0xfa11b  2      OPC=js_label         
  xorl %eax, %eax            #  30    0xfa11d  2      OPC=xorl_r32_r32     
  movq %rdx, %r12            #  31    0xfa11f  3      OPC=movq_r64_r64     
  movq %rsi, %rbx            #  32    0xfa122  3      OPC=movq_r64_r64     
  xorl %edx, %edx            #  33    0xfa125  2      OPC=xorl_r32_r32     
  movl $0x3, %esi            #  34    0xfa127  5      OPC=movl_r32_imm32   
  movl %edi, %r13d           #  35    0xfa12c  3      OPC=movl_r32_r32     
  callq .__fcntl             #  36    0xfa12f  5      OPC=callq_label      
  testl %eax, %eax           #  37    0xfa134  2      OPC=testl_r32_r32    
  js .L_fa13d                #  38    0xfa136  2      OPC=js_label         
  testb $0x4, %ah            #  39    0xfa138  3      OPC=testb_rh_imm8    
  je .L_fa148                #  40    0xfa13b  2      OPC=je_label         
.L_fa13d:                    #        0xfa13d  0      OPC=<label>          
  movl $0x9, %ebp            #  41    0xfa13d  5      OPC=movl_r32_imm32   
  jmpq .L_fa0fc              #  42    0xfa142  2      OPC=jmpq_label       
  nop                        #  43    0xfa144  1      OPC=nop              
  nop                        #  44    0xfa145  1      OPC=nop              
  nop                        #  45    0xfa146  1      OPC=nop              
  nop                        #  46    0xfa147  1      OPC=nop              
.L_fa148:                    #        0xfa148  0      OPC=<label>          
  leaq 0x90(%rsp), %rdx      #  47    0xfa148  8      OPC=leaq_r64_m16     
  movl %r13d, %esi           #  48    0xfa150  3      OPC=movl_r32_r32     
  movl $0x1, %edi            #  49    0xfa153  5      OPC=movl_r32_imm32   
  callq .__fxstat            #  50    0xfa158  5      OPC=callq_label      
  testl %eax, %eax           #  51    0xfa15d  2      OPC=testl_r32_r32    
  movl %eax, %ebp            #  52    0xfa15f  2      OPC=movl_r32_r32     
  jne .L_fa13d               #  53    0xfa161  2      OPC=jne_label        
  movl 0xa8(%rsp), %eax      #  54    0xfa163  7      OPC=movl_r32_m32     
  andl $0xf000, %eax         #  55    0xfa16a  5      OPC=andl_eax_imm32   
  cmpl $0x1000, %eax         #  56    0xfa16f  5      OPC=cmpl_eax_imm32   
  je .L_fa187                #  57    0xfa174  2      OPC=je_label         
  cmpl $0x8000, %eax         #  58    0xfa176  5      OPC=cmpl_eax_imm32   
  je .L_fa191                #  59    0xfa17b  2      OPC=je_label         
  movl $0x13, %ebp           #  60    0xfa17d  5      OPC=movl_r32_imm32   
  jmpq .L_fa0fc              #  61    0xfa182  5      OPC=jmpq_label_1     
.L_fa187:                    #        0xfa187  0      OPC=<label>          
  movl $0x1d, %ebp           #  62    0xfa187  5      OPC=movl_r32_imm32   
  jmpq .L_fa0fc              #  63    0xfa18c  5      OPC=jmpq_label_1     
.L_fa191:                    #        0xfa191  0      OPC=<label>          
  testq %r12, %r12           #  64    0xfa191  3      OPC=testq_r64_r64    
  jne .L_fa1c6               #  65    0xfa194  2      OPC=jne_label        
  cmpq 0xc0(%rsp), %rbx      #  66    0xfa196  8      OPC=cmpq_r64_m64     
  jle .L_fa0fc               #  67    0xfa19e  6      OPC=jle_label_1      
  movq %rbx, %rsi            #  68    0xfa1a4  3      OPC=movq_r64_r64     
  movl %r13d, %edi           #  69    0xfa1a7  3      OPC=movl_r32_r32     
  callq .ftruncate           #  70    0xfa1aa  5      OPC=callq_label      
  testl %eax, %eax           #  71    0xfa1af  2      OPC=testl_r32_r32    
  je .L_fa0fc                #  72    0xfa1b1  6      OPC=je_label_1       
.L_fa1b7:                    #        0xfa1b7  0      OPC=<label>          
  movq 0x2c6cc2(%rip), %rax  #  73    0xfa1b7  7      OPC=movq_r64_m64     
  movl (%rax), %ebp          #  74    0xfa1be  2      OPC=movl_r32_m32     
  nop                        #  75    0xfa1c0  1      OPC=nop              
  jmpq .L_fa0fc              #  76    0xfa1c1  5      OPC=jmpq_label_1     
.L_fa1c6:                    #        0xfa1c6  0      OPC=<label>          
  leaq 0x10(%rsp), %r15      #  77    0xfa1c6  5      OPC=leaq_r64_m16     
  movl %r13d, %edi           #  78    0xfa1cb  3      OPC=movl_r32_r32     
  movq %r15, %rsi            #  79    0xfa1ce  3      OPC=movq_r64_r64     
  callq .fstatfs             #  80    0xfa1d1  5      OPC=callq_label      
  testl %eax, %eax           #  81    0xfa1d6  2      OPC=testl_r32_r32    
  jne .L_fa1b7               #  82    0xfa1d8  2      OPC=jne_label        
  movq 0x18(%rsp), %rax      #  83    0xfa1da  5      OPC=movq_r64_m64     
  movl $0x200, %r14d         #  84    0xfa1df  6      OPC=movl_r32_imm32   
  testq %rax, %rax           #  85    0xfa1e5  3      OPC=testq_r64_r64    
  je .L_fa1f9                #  86    0xfa1e8  2      OPC=je_label         
  cmpq $0xfff, %rax          #  87    0xfa1ea  6      OPC=cmpq_rax_imm32   
  movw $0x1000, %r14w        #  88    0xfa1f0  5      OPC=movw_r16_imm16   
  cmovlel %eax, %r14d        #  89    0xfa1f5  4      OPC=cmovlel_r32_r32  
.L_fa1f9:                    #        0xfa1f9  0      OPC=<label>          
  leaq -0x1(%r12), %rax      #  90    0xfa1f9  5      OPC=leaq_r64_m16     
  movl %r14d, %r14d          #  91    0xfa1fe  3      OPC=movl_r32_r32     
  subq %r14, %r12            #  92    0xfa201  3      OPC=subq_r64_r64     
  cqto                       #  93    0xfa204  2      OPC=cqto             
  idivq %r14                 #  94    0xfa206  3      OPC=idivq_r64        
  movq %r14, %rax            #  95    0xfa209  3      OPC=movq_r64_r64     
  negq %rax                  #  96    0xfa20c  3      OPC=negq_r64         
  movq %rax, 0x8(%rsp)       #  97    0xfa20f  5      OPC=movq_m64_r64     
  addq %rdx, %rbx            #  98    0xfa214  3      OPC=addq_r64_r64     
  jmpq .L_fa24b              #  99    0xfa217  2      OPC=jmpq_label       
.L_fa219:                    #        0xfa219  0      OPC=<label>          
  leaq 0x902e1(%rip), %rsi   #  100   0xfa219  7      OPC=leaq_r64_m16     
  movq %rbx, %rcx            #  101   0xfa220  3      OPC=movq_r64_r64     
  movl $0x1, %edx            #  102   0xfa223  5      OPC=movl_r32_imm32   
  movl %r13d, %edi           #  103   0xfa228  3      OPC=movl_r32_r32     
  callq .__libc_pwrite       #  104   0xfa22b  5      OPC=callq_label      
  subq $0x1, %rax            #  105   0xfa230  4      OPC=subq_r64_imm8    
  jne .L_fa1b7               #  106   0xfa234  2      OPC=jne_label        
.L_fa236:                    #        0xfa236  0      OPC=<label>          
  addq 0x8(%rsp), %r12       #  107   0xfa236  5      OPC=addq_r64_m64     
  addq %r14, %rbx            #  108   0xfa23b  3      OPC=addq_r64_r64     
  leaq (%r12,%r14,1), %rax   #  109   0xfa23e  4      OPC=leaq_r64_m16     
  testq %rax, %rax           #  110   0xfa242  3      OPC=testq_r64_r64    
  jle .L_fa0fc               #  111   0xfa245  6      OPC=jle_label_1      
.L_fa24b:                    #        0xfa24b  0      OPC=<label>          
  cmpq %rbx, 0xc0(%rsp)      #  112   0xfa24b  8      OPC=cmpq_m64_r64     
  jle .L_fa219               #  113   0xfa253  2      OPC=jle_label        
  movq %rbx, %rcx            #  114   0xfa255  3      OPC=movq_r64_r64     
  movl $0x1, %edx            #  115   0xfa258  5      OPC=movl_r32_imm32   
  movq %r15, %rsi            #  116   0xfa25d  3      OPC=movq_r64_r64     
  movl %r13d, %edi           #  117   0xfa260  3      OPC=movl_r32_r32     
  callq .__libc_pread        #  118   0xfa263  5      OPC=callq_label      
  testq %rax, %rax           #  119   0xfa268  3      OPC=testq_r64_r64    
  js .L_fa1b7                #  120   0xfa26b  6      OPC=js_label_1       
  subq $0x1, %rax            #  121   0xfa271  4      OPC=subq_r64_imm8    
  jne .L_fa219               #  122   0xfa275  2      OPC=jne_label        
  cmpb $0x0, 0x10(%rsp)      #  123   0xfa277  5      OPC=cmpb_m8_imm8     
  jne .L_fa236               #  124   0xfa27c  2      OPC=jne_label        
  jmpq .L_fa219              #  125   0xfa27e  2      OPC=jmpq_label       
                                                                           
.size internal_fallocate, .-internal_fallocate

