  .text
  .globl memalign_check
  .type memalign_check, @function

#! file-offset 0x80930
#! rip-offset  0x80930
#! capacity    512 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
.memalign_check:                    #        0x80930  0      OPC=<label>           
  pushq %rbp                        #  1     0x80930  1      OPC=pushq_r64_1       
  pushq %rbx                        #  2     0x80931  1      OPC=pushq_r64_1       
  movq %rdi, %rbp                   #  3     0x80932  3      OPC=movq_r64_r64      
  movq %rsi, %rbx                   #  4     0x80935  3      OPC=movq_r64_r64      
  subq $0x8, %rsp                   #  5     0x80938  4      OPC=subq_r64_imm8     
  cmpq $0x10, %rdi                  #  6     0x8093c  4      OPC=cmpq_r64_imm8     
  jbe .L_80ae0                      #  7     0x80940  6      OPC=jbe_label_1       
  cmpq $0x1f, %rdi                  #  8     0x80946  4      OPC=cmpq_r64_imm8     
  ja .L_80a90                       #  9     0x8094a  6      OPC=ja_label_1        
  cmpq $0xbf, %rsi                  #  10    0x80950  4      OPC=cmpq_r64_imm8     
  ja .L_80b08                       #  11    0x80954  6      OPC=ja_label_1        
  movl $0x20, %ebp                  #  12    0x8095a  5      OPC=movl_r32_imm32    
.L_8095f:                           #        0x8095f  0      OPC=<label>           
  movl $0x1, %esi                   #  13    0x8095f  5      OPC=movl_r32_imm32    
  xorl %eax, %eax                   #  14    0x80964  2      OPC=xorl_r32_r32      
  cmpl $0x0, 0x346293(%rip)         #  15    0x80966  7      OPC=cmpl_m32_imm8     
  je .L_8097b                       #  16    0x8096d  2      OPC=je_label          
  lock                              #  17    0x8096f  1      OPC=lock              
  cmpxchgl %esi, 0x3412c9(%rip)     #  18    0x80970  7      OPC=cmpxchgl_m32_r32  
  nop                               #  19    0x80977  1      OPC=nop               
  jne .L_80984                      #  20    0x80978  2      OPC=jne_label         
  jmpq .L_8099e                     #  21    0x8097a  2      OPC=jmpq_label        
.L_8097b:                           #        0x8097c  0      OPC=<label>           
  cmpxchgl %esi, 0x3412be(%rip)     #  22    0x8097c  7      OPC=cmpxchgl_m32_r32  
  je .L_8099e                       #  23    0x80983  2      OPC=je_label          
.L_80984:                           #        0x80985  0      OPC=<label>           
  leaq 0x3412b5(%rip), %rdi         #  24    0x80985  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  25    0x8098c  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  26    0x80993  5      OPC=callq_label       
  addq $0x80, %rsp                  #  27    0x80998  7      OPC=addq_r64_imm32    
.L_8099e:                           #        0x8099f  0      OPC=<label>           
  callq .top_check                  #  28    0x8099f  5      OPC=callq_label       
  xorl %r9d, %r9d                   #  29    0x809a4  3      OPC=xorl_r32_r32      
  testl %eax, %eax                  #  30    0x809a7  2      OPC=testl_r32_r32     
  js .L_809c0                       #  31    0x809a9  2      OPC=js_label          
  leaq 0x1(%rbx), %rdx              #  32    0x809ab  4      OPC=leaq_r64_m16      
  leaq 0x34128b(%rip), %rdi         #  33    0x809af  7      OPC=leaq_r64_m16      
  movq %rbp, %rsi                   #  34    0x809b6  3      OPC=movq_r64_r64      
  callq ._int_memalign              #  35    0x809b9  5      OPC=callq_label       
  movq %rax, %r9                    #  36    0x809be  3      OPC=movq_r64_r64      
.L_809c0:                           #        0x809c1  0      OPC=<label>           
  cmpl $0x0, 0x346239(%rip)         #  37    0x809c1  7      OPC=cmpl_m32_imm8     
  je .L_809d4                       #  38    0x809c8  2      OPC=je_label          
  lock                              #  39    0x809ca  1      OPC=lock              
  decl 0x341270(%rip)               #  40    0x809cb  6      OPC=decl_m32          
  nop                               #  41    0x809d1  1      OPC=nop               
  jne .L_809dc                      #  42    0x809d2  2      OPC=jne_label         
  jmpq .L_809f6                     #  43    0x809d4  2      OPC=jmpq_label        
.L_809d4:                           #        0x809d6  0      OPC=<label>           
  decl 0x341266(%rip)               #  44    0x809d6  6      OPC=decl_m32          
  je .L_809f6                       #  45    0x809dc  2      OPC=je_label          
.L_809dc:                           #        0x809de  0      OPC=<label>           
  leaq 0x34125d(%rip), %rdi         #  46    0x809de  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  47    0x809e5  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  48    0x809ec  5      OPC=callq_label       
  addq $0x80, %rsp                  #  49    0x809f1  7      OPC=addq_r64_imm32    
.L_809f6:                           #        0x809f8  0      OPC=<label>           
  testq %r9, %r9                    #  50    0x809f8  3      OPC=testq_r64_r64     
  je .L_80b20                       #  51    0x809fb  6      OPC=je_label_1        
  leaq -0x10(%r9), %rax             #  52    0x80a01  4      OPC=leaq_r64_m16      
  movq %rax, %rdi                   #  53    0x80a05  3      OPC=movq_r64_r64      
  shrq $0x3, %rax                   #  54    0x80a08  4      OPC=shrq_r64_imm8     
  shrq $0xb, %rdi                   #  55    0x80a0c  4      OPC=shrq_r64_imm8     
  xorl %eax, %edi                   #  56    0x80a10  2      OPC=xorl_r32_r32      
  movl $0x2, %eax                   #  57    0x80a12  5      OPC=movl_r32_imm32    
  cmpb $0x1, %dil                   #  58    0x80a17  4      OPC=cmpb_r8_imm8      
  cmovel %eax, %edi                 #  59    0x80a1b  3      OPC=cmovel_r32_r32    
  movq -0x8(%r9), %rax              #  60    0x80a1e  4      OPC=movq_r64_m64      
  movzbl %dil, %esi                 #  61    0x80a22  4      OPC=movzbl_r32_r8     
  movq %rax, %rdx                   #  62    0x80a26  3      OPC=movq_r64_r64      
  andq $0xf8, %rdx                  #  63    0x80a29  4      OPC=andq_r64_imm8     
  leaq -0x10(%rdx), %rcx            #  64    0x80a2d  4      OPC=leaq_r64_m16      
  subq $0x8, %rdx                   #  65    0x80a31  4      OPC=subq_r64_imm8     
  testb $0x2, %al                   #  66    0x80a35  2      OPC=testb_al_imm8     
  movl $0xff, %eax                  #  67    0x80a37  5      OPC=movl_r32_imm32    
  cmoveq %rdx, %rcx                 #  68    0x80a3c  4      OPC=cmoveq_r64_r64    
  subq $0x1, %rcx                   #  69    0x80a40  4      OPC=subq_r64_imm8     
  cmpq %rcx, %rbx                   #  70    0x80a44  3      OPC=cmpq_r64_r64      
  jae .L_80a78                      #  71    0x80a47  2      OPC=jae_label         
  nop                               #  72    0x80a49  1      OPC=nop               
  nop                               #  73    0x80a4a  1      OPC=nop               
  nop                               #  74    0x80a4b  1      OPC=nop               
  nop                               #  75    0x80a4c  1      OPC=nop               
  nop                               #  76    0x80a4d  1      OPC=nop               
  nop                               #  77    0x80a4e  1      OPC=nop               
  nop                               #  78    0x80a4f  1      OPC=nop               
  nop                               #  79    0x80a50  1      OPC=nop               
  nop                               #  80    0x80a51  1      OPC=nop               
.L_80a50:                           #        0x80a52  0      OPC=<label>           
  movq %rcx, %rdx                   #  81    0x80a52  3      OPC=movq_r64_r64      
  subq %rbx, %rdx                   #  82    0x80a55  3      OPC=subq_r64_r64      
  cmpq $0xff, %rdx                  #  83    0x80a58  7      OPC=cmpq_r64_imm32    
  cmovaq %rax, %rdx                 #  84    0x80a5f  4      OPC=cmovaq_r64_r64    
  leaq -0x1(%rdx), %r8              #  85    0x80a63  4      OPC=leaq_r64_m16      
  cmpq %rdx, %rsi                   #  86    0x80a67  3      OPC=cmpq_r64_r64      
  cmoveq %r8, %rdx                  #  87    0x80a6a  4      OPC=cmoveq_r64_r64    
  movb %dl, (%r9,%rcx,1)            #  88    0x80a6e  4      OPC=movb_m8_r8        
  subq %rdx, %rcx                   #  89    0x80a72  3      OPC=subq_r64_r64      
  cmpq %rcx, %rbx                   #  90    0x80a75  3      OPC=cmpq_r64_r64      
  jb .L_80a50                       #  91    0x80a78  2      OPC=jb_label          
.L_80a78:                           #        0x80a7a  0      OPC=<label>           
  movb %dil, (%r9,%rbx,1)           #  92    0x80a7a  4      OPC=movb_m8_r8        
  movq %r9, %rax                    #  93    0x80a7e  3      OPC=movq_r64_r64      
.L_80a7f:                           #        0x80a81  0      OPC=<label>           
  addq $0x8, %rsp                   #  94    0x80a81  4      OPC=addq_r64_imm8     
  popq %rbx                         #  95    0x80a85  1      OPC=popq_r64_1        
  popq %rbp                         #  96    0x80a86  1      OPC=popq_r64_1        
  retq                              #  97    0x80a87  1      OPC=retq              
  nop                               #  98    0x80a88  1      OPC=nop               
  nop                               #  99    0x80a89  1      OPC=nop               
  nop                               #  100   0x80a8a  1      OPC=nop               
  nop                               #  101   0x80a8b  1      OPC=nop               
  nop                               #  102   0x80a8c  1      OPC=nop               
  nop                               #  103   0x80a8d  1      OPC=nop               
  nop                               #  104   0x80a8e  1      OPC=nop               
  nop                               #  105   0x80a8f  1      OPC=nop               
  nop                               #  106   0x80a90  1      OPC=nop               
  nop                               #  107   0x80a91  1      OPC=nop               
.L_80a90:                           #        0x80a92  0      OPC=<label>           
  movq $0x8000000000000000, %rax    #  108   0x80a92  10     OPC=movq_r64_imm64    
  cmpq %rax, %rdi                   #  109   0x80a9c  3      OPC=cmpq_r64_r64      
  ja .L_80af0                       #  110   0x80a9f  2      OPC=ja_label          
  movq $0xffffffdf, %rax            #  111   0x80aa1  7      OPC=movq_r64_imm32    
  subq %rdi, %rax                   #  112   0x80aa8  3      OPC=subq_r64_r64      
  cmpq %rax, %rsi                   #  113   0x80aab  3      OPC=cmpq_r64_r64      
  ja .L_80b08                       #  114   0x80aae  2      OPC=ja_label          
  leaq -0x1(%rdi), %rax             #  115   0x80ab0  4      OPC=leaq_r64_m16      
  testq %rdi, %rax                  #  116   0x80ab4  3      OPC=testq_r64_r64     
  je .L_8095f                       #  117   0x80ab7  6      OPC=je_label_1        
  cmpq $0x20, %rdi                  #  118   0x80abd  4      OPC=cmpq_r64_imm8     
  movl $0x20, %eax                  #  119   0x80ac1  5      OPC=movl_r32_imm32    
  je .L_80ad8                       #  120   0x80ac6  2      OPC=je_label          
  nop                               #  121   0x80ac8  1      OPC=nop               
  nop                               #  122   0x80ac9  1      OPC=nop               
  nop                               #  123   0x80aca  1      OPC=nop               
  nop                               #  124   0x80acb  1      OPC=nop               
  nop                               #  125   0x80acc  1      OPC=nop               
  nop                               #  126   0x80acd  1      OPC=nop               
  nop                               #  127   0x80ace  1      OPC=nop               
  nop                               #  128   0x80acf  1      OPC=nop               
  nop                               #  129   0x80ad0  1      OPC=nop               
  nop                               #  130   0x80ad1  1      OPC=nop               
.L_80ad0:                           #        0x80ad2  0      OPC=<label>           
  addq %rax, %rax                   #  131   0x80ad2  3      OPC=addq_r64_r64      
  cmpq %rax, %rbp                   #  132   0x80ad5  3      OPC=cmpq_r64_r64      
  ja .L_80ad0                       #  133   0x80ad8  2      OPC=ja_label          
.L_80ad8:                           #        0x80ada  0      OPC=<label>           
  movq %rax, %rbp                   #  134   0x80ada  3      OPC=movq_r64_r64      
  jmpq .L_8095f                     #  135   0x80add  5      OPC=jmpq_label_1      
.L_80ae0:                           #        0x80ae2  0      OPC=<label>           
  addq $0x8, %rsp                   #  136   0x80ae2  4      OPC=addq_r64_imm8     
  movq %rbx, %rdi                   #  137   0x80ae6  3      OPC=movq_r64_r64      
  xorl %esi, %esi                   #  138   0x80ae9  2      OPC=xorl_r32_r32      
  popq %rbx                         #  139   0x80aeb  1      OPC=popq_r64_1        
  popq %rbp                         #  140   0x80aec  1      OPC=popq_r64_1        
  jmpq .malloc_check                #  141   0x80aed  5      OPC=jmpq_label_1      
.L_80af0:                           #        0x80af2  0      OPC=<label>           
  movq 0x340389(%rip), %rax         #  142   0x80af2  7      OPC=movq_r64_m64      
  movl $0x16, (%rax)                #  143   0x80af9  6      OPC=movl_m32_imm32    
  nop                               #  144   0x80aff  1      OPC=nop               
  xorl %eax, %eax                   #  145   0x80b00  2      OPC=xorl_r32_r32      
  jmpq .L_80a7f                     #  146   0x80b02  5      OPC=jmpq_label_1      
  nop                               #  147   0x80b07  1      OPC=nop               
  nop                               #  148   0x80b08  1      OPC=nop               
  nop                               #  149   0x80b09  1      OPC=nop               
.L_80b08:                           #        0x80b0a  0      OPC=<label>           
  movq 0x340371(%rip), %rax         #  150   0x80b0a  7      OPC=movq_r64_m64      
  movl $0xc, (%rax)                 #  151   0x80b11  6      OPC=movl_m32_imm32    
  nop                               #  152   0x80b17  1      OPC=nop               
  xorl %eax, %eax                   #  153   0x80b18  2      OPC=xorl_r32_r32      
  jmpq .L_80a7f                     #  154   0x80b1a  5      OPC=jmpq_label_1      
  nop                               #  155   0x80b1f  1      OPC=nop               
  nop                               #  156   0x80b20  1      OPC=nop               
  nop                               #  157   0x80b21  1      OPC=nop               
.L_80b20:                           #        0x80b22  0      OPC=<label>           
  xorl %eax, %eax                   #  158   0x80b22  2      OPC=xorl_r32_r32      
  jmpq .L_80a7f                     #  159   0x80b24  5      OPC=jmpq_label_1      
  nop                               #  160   0x80b29  1      OPC=nop               
  nop                               #  161   0x80b2a  1      OPC=nop               
  nop                               #  162   0x80b2b  1      OPC=nop               
  nop                               #  163   0x80b2c  1      OPC=nop               
  nop                               #  164   0x80b2d  1      OPC=nop               
  nop                               #  165   0x80b2e  1      OPC=nop               
  nop                               #  166   0x80b2f  1      OPC=nop               
  nop                               #  167   0x80b30  1      OPC=nop               
  nop                               #  168   0x80b31  1      OPC=nop               
                                                                                   
.size memalign_check, .-memalign_check

