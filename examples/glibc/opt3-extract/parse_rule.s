  .text
  .globl parse_rule
  .type parse_rule, @function

#! file-offset 0xb95b0
#! rip-offset  0xb95b0
#! capacity    800 bytes

# Text                                 #  Line  RIP      Bytes  Opcode                   
.parse_rule:                           #        0xb95b0  0      OPC=<label>              
  pushq %r15                           #  1     0xb95b0  2      OPC=pushq_r64_1          
  pushq %r14                           #  2     0xb95b2  2      OPC=pushq_r64_1          
  pushq %r13                           #  3     0xb95b4  2      OPC=pushq_r64_1          
  pushq %r12                           #  4     0xb95b6  2      OPC=pushq_r64_1          
  movq %rdi, %r13                      #  5     0xb95b8  3      OPC=movq_r64_r64         
  pushq %rbp                           #  6     0xb95bb  1      OPC=pushq_r64_1          
  pushq %rbx                           #  7     0xb95bc  1      OPC=pushq_r64_1          
  xorl %ebp, %ebp                      #  8     0xb95bd  2      OPC=xorl_r32_r32         
  subq $0x18, %rsp                     #  9     0xb95bf  4      OPC=subq_r64_imm8        
  movq (%rdi), %rax                    #  10    0xb95c3  3      OPC=movq_r64_m64         
  cmpb $0x2c, (%rax)                   #  11    0xb95c6  3      OPC=cmpb_m8_imm8         
  sete %bpl                            #  12    0xb95c9  4      OPC=sete_r8              
  addq %rax, %rbp                      #  13    0xb95cd  3      OPC=addq_r64_r64         
  movzbl (%rbp), %eax                  #  14    0xb95d0  4      OPC=movzbl_r32_m8        
  cmpb $0x4a, %al                      #  15    0xb95d4  2      OPC=cmpb_al_imm8         
  je .L_b9720                          #  16    0xb95d6  6      OPC=je_label_1           
  movsbl %al, %edx                     #  17    0xb95dc  3      OPC=movsbl_r32_r8        
  subl $0x30, %edx                     #  18    0xb95df  3      OPC=subl_r32_imm8        
  cmpl $0x9, %edx                      #  19    0xb95e2  3      OPC=cmpl_r32_imm8        
  ja .L_b9658                          #  20    0xb95e5  2      OPC=ja_label             
  movslq %esi, %rbx                    #  21    0xb95e7  3      OPC=movslq_r64_r32       
  leaq 0x30a78f(%rip), %r12            #  22    0xb95ea  7      OPC=leaq_r64_m16         
  leaq (%rbx,%rbx,2), %rax             #  23    0xb95f1  4      OPC=leaq_r64_m16         
  shlq $0x4, %rax                      #  24    0xb95f5  4      OPC=shlq_r64_imm8        
  movl $0x0, 0x8(%r12,%rax,1)          #  25    0xb95f9  9      OPC=movl_m32_imm32       
.L_b9602:                              #        0xb9602  0      OPC=<label>              
  leaq 0x8(%rsp), %rsi                 #  26    0xb9602  5      OPC=leaq_r64_m16         
  movl $0xa, %edx                      #  27    0xb9607  5      OPC=movl_r32_imm32       
  movq %rbp, %rdi                      #  28    0xb960c  3      OPC=movq_r64_r64         
  callq .strtoul                       #  29    0xb960f  5      OPC=callq_label          
  movq 0x8(%rsp), %rcx                 #  30    0xb9614  5      OPC=movq_r64_m64         
  cmpq %rcx, %rbp                      #  31    0xb9619  3      OPC=cmpq_r64_r64         
  je .L_b9640                          #  32    0xb961c  2      OPC=je_label             
  cmpq $0x16d, %rax                    #  33    0xb961e  6      OPC=cmpq_rax_imm32       
  ja .L_b9640                          #  34    0xb9624  2      OPC=ja_label             
  testq %rax, %rax                     #  35    0xb9626  3      OPC=testq_r64_r64        
  jne .L_b96b0                         #  36    0xb9629  6      OPC=jne_label_1          
  leaq (%rbx,%rbx,2), %rdx             #  37    0xb962f  4      OPC=leaq_r64_m16         
  shlq $0x4, %rdx                      #  38    0xb9633  4      OPC=shlq_r64_imm8        
  cmpl $0x1, 0x8(%r12,%rdx,1)          #  39    0xb9637  6      OPC=cmpl_m32_imm8        
  jne .L_b96b0                         #  40    0xb963d  2      OPC=jne_label            
  nop                                  #  41    0xb963f  1      OPC=nop                  
.L_b9640:                              #        0xb9640  0      OPC=<label>              
  xorl %eax, %eax                      #  42    0xb9640  2      OPC=xorl_r32_r32         
.L_b9642:                              #        0xb9642  0      OPC=<label>              
  addq $0x18, %rsp                     #  43    0xb9642  4      OPC=addq_r64_imm8        
  popq %rbx                            #  44    0xb9646  1      OPC=popq_r64_1           
  popq %rbp                            #  45    0xb9647  1      OPC=popq_r64_1           
  popq %r12                            #  46    0xb9648  2      OPC=popq_r64_1           
  popq %r13                            #  47    0xb964a  2      OPC=popq_r64_1           
  popq %r14                            #  48    0xb964c  2      OPC=popq_r64_1           
  popq %r15                            #  49    0xb964e  2      OPC=popq_r64_1           
  retq                                 #  50    0xb9650  1      OPC=retq                 
  nop                                  #  51    0xb9651  1      OPC=nop                  
  nop                                  #  52    0xb9652  1      OPC=nop                  
  nop                                  #  53    0xb9653  1      OPC=nop                  
  nop                                  #  54    0xb9654  1      OPC=nop                  
  nop                                  #  55    0xb9655  1      OPC=nop                  
  nop                                  #  56    0xb9656  1      OPC=nop                  
  nop                                  #  57    0xb9657  1      OPC=nop                  
.L_b9658:                              #        0xb9658  0      OPC=<label>              
  cmpb $0x4d, %al                      #  58    0xb9658  2      OPC=cmpb_al_imm8         
  je .L_b9808                          #  59    0xb965a  6      OPC=je_label_1           
  testb %al, %al                       #  60    0xb9660  2      OPC=testb_r8_r8          
  jne .L_b9640                         #  61    0xb9662  2      OPC=jne_label            
  movslq %esi, %rbx                    #  62    0xb9664  3      OPC=movslq_r64_r32       
  leaq 0x30a712(%rip), %r12            #  63    0xb9667  7      OPC=leaq_r64_m16         
  leaq (%rbx,%rbx,2), %rax             #  64    0xb966e  4      OPC=leaq_r64_m16         
  shlq $0x4, %rax                      #  65    0xb9672  4      OPC=shlq_r64_imm8        
  leaq (%r12,%rax,1), %rdx             #  66    0xb9676  4      OPC=leaq_r64_m16         
  cmpq %r12, %rdx                      #  67    0xb967a  3      OPC=cmpq_r64_r64         
  movl $0x2, 0x8(%rdx)                 #  68    0xb967d  7      OPC=movl_m32_imm32       
  je .L_b9898                          #  69    0xb9684  6      OPC=je_label_1           
  movl $0xb, %r8d                      #  70    0xb968a  6      OPC=movl_r32_imm32       
  movl $0x1, %r9d                      #  71    0xb9690  6      OPC=movl_r32_imm32       
  xorl %r10d, %r10d                    #  72    0xb9696  3      OPC=xorl_r32_r32         
  movw %r8w, 0xc(%rdx)                 #  73    0xb9699  5      OPC=movw_m16_r16         
  movw %r9w, 0xe(%rdx)                 #  74    0xb969e  5      OPC=movw_m16_r16         
  movq %rbp, %rcx                      #  75    0xb96a3  3      OPC=movq_r64_r64         
  movw %r10w, 0x10(%r12,%rax,1)        #  76    0xb96a6  6      OPC=movw_m16_r16         
  jmpq .L_b96be                        #  77    0xb96ac  2      OPC=jmpq_label           
  xchgw %ax, %ax                       #  78    0xb96ae  2      OPC=xchgw_ax_r16         
.L_b96b0:                              #        0xb96b0  0      OPC=<label>              
  leaq (%rbx,%rbx,2), %rdx             #  79    0xb96b0  4      OPC=leaq_r64_m16         
  shlq $0x4, %rdx                      #  80    0xb96b4  4      OPC=shlq_r64_imm8        
  movw %ax, 0x10(%r12,%rdx,1)          #  81    0xb96b8  6      OPC=movw_m16_r16         
.L_b96be:                              #        0xb96be  0      OPC=<label>              
  movzbl (%rcx), %esi                  #  82    0xb96be  3      OPC=movzbl_r32_m8        
  cmpb $0x2f, %sil                     #  83    0xb96c1  4      OPC=cmpb_r8_imm8         
  setne %dl                            #  84    0xb96c5  3      OPC=setne_r8             
  testb %sil, %sil                     #  85    0xb96c8  3      OPC=testb_r8_r8          
  setne %al                            #  86    0xb96cb  3      OPC=setne_r8             
  andl %edx, %eax                      #  87    0xb96ce  2      OPC=andl_r32_r32         
  cmpb $0x2c, %sil                     #  88    0xb96d0  4      OPC=cmpb_r8_imm8         
  setne %dl                            #  89    0xb96d4  3      OPC=setne_r8             
  andb %dl, %al                        #  90    0xb96d7  2      OPC=andb_r8_r8           
  jne .L_b9640                         #  91    0xb96d9  6      OPC=jne_label_1          
  cmpb $0x2f, %sil                     #  92    0xb96df  4      OPC=cmpb_r8_imm8         
  je .L_b9758                          #  93    0xb96e3  2      OPC=je_label             
  leaq (%rbx,%rbx,2), %rax             #  94    0xb96e5  4      OPC=leaq_r64_m16         
  shlq $0x4, %rax                      #  95    0xb96e9  4      OPC=shlq_r64_imm8        
  movl $0x1c20, 0x14(%r12,%rax,1)      #  96    0xb96ed  9      OPC=movl_m32_imm32       
.L_b96f6:                              #        0xb96f6  0      OPC=<label>              
  leaq (%rbx,%rbx,2), %rax             #  97    0xb96f6  4      OPC=leaq_r64_m16         
  shlq $0x4, %rax                      #  98    0xb96fa  4      OPC=shlq_r64_imm8        
  movl $0xffffffff, 0x28(%r12,%rax,1)  #  99    0xb96fe  9      OPC=movl_m32_imm32       
  movq %rcx, (%r13)                    #  100   0xb9707  4      OPC=movq_m64_r64         
  addq $0x18, %rsp                     #  101   0xb970b  4      OPC=addq_r64_imm8        
  popq %rbx                            #  102   0xb970f  1      OPC=popq_r64_1           
  movl $0x1, %eax                      #  103   0xb9710  5      OPC=movl_r32_imm32       
  popq %rbp                            #  104   0xb9715  1      OPC=popq_r64_1           
  popq %r12                            #  105   0xb9716  2      OPC=popq_r64_1           
  popq %r13                            #  106   0xb9718  2      OPC=popq_r64_1           
  popq %r14                            #  107   0xb971a  2      OPC=popq_r64_1           
  popq %r15                            #  108   0xb971c  2      OPC=popq_r64_1           
  retq                                 #  109   0xb971e  1      OPC=retq                 
  nop                                  #  110   0xb971f  1      OPC=nop                  
.L_b9720:                              #        0xb9720  0      OPC=<label>              
  movslq %esi, %rbx                    #  111   0xb9720  3      OPC=movslq_r64_r32       
  leaq 0x30a656(%rip), %r12            #  112   0xb9723  7      OPC=leaq_r64_m16         
  addq $0x1, %rbp                      #  113   0xb972a  4      OPC=addq_r64_imm8        
  leaq (%rbx,%rbx,2), %rax             #  114   0xb972e  4      OPC=leaq_r64_m16         
  shlq $0x4, %rax                      #  115   0xb9732  4      OPC=shlq_r64_imm8        
  movl $0x1, 0x8(%r12,%rax,1)          #  116   0xb9736  9      OPC=movl_m32_imm32       
  movsbl (%rbp), %eax                  #  117   0xb973f  4      OPC=movsbl_r32_m8        
  subl $0x30, %eax                     #  118   0xb9743  3      OPC=subl_r32_imm8        
  cmpl $0x9, %eax                      #  119   0xb9746  3      OPC=cmpl_r32_imm8        
  jbe .L_b9602                         #  120   0xb9749  6      OPC=jbe_label_1          
  jmpq .L_b9640                        #  121   0xb974f  5      OPC=jmpq_label_1         
  nop                                  #  122   0xb9754  1      OPC=nop                  
  nop                                  #  123   0xb9755  1      OPC=nop                  
  nop                                  #  124   0xb9756  1      OPC=nop                  
  nop                                  #  125   0xb9757  1      OPC=nop                  
.L_b9758:                              #        0xb9758  0      OPC=<label>              
  movzbl 0x1(%rcx), %edx               #  126   0xb9758  4      OPC=movzbl_r32_m8        
  testb %dl, %dl                       #  127   0xb975c  2      OPC=testb_r8_r8          
  je .L_b9642                          #  128   0xb975e  6      OPC=je_label_1           
  cmpb $0x2d, %dl                      #  129   0xb9764  3      OPC=cmpb_r8_imm8         
  movl $0x0, 0x8(%rsp)                 #  130   0xb9767  8      OPC=movl_m32_imm32       
  leaq 0xd2529(%rip), %rsi             #  131   0xb976f  7      OPC=leaq_r64_m16         
  sete %bpl                            #  132   0xb9776  4      OPC=sete_r8              
  xorl %edx, %edx                      #  133   0xb977a  2      OPC=xorl_r32_r32         
  movzbl %bpl, %eax                    #  134   0xb977c  4      OPC=movzbl_r32_r8        
  movw %dx, 0x4(%rsp)                  #  135   0xb9780  5      OPC=movw_m16_r16         
  leaq 0x2(%rsp), %rdx                 #  136   0xb9785  5      OPC=leaq_r64_m16         
  leaq 0x1(%rcx,%rax,1), %r14          #  137   0xb978a  5      OPC=leaq_r64_m16         
  xorl %ecx, %ecx                      #  138   0xb978f  2      OPC=xorl_r32_r32         
  movl $0x2, %eax                      #  139   0xb9791  5      OPC=movl_r32_imm32       
  movw %cx, 0x6(%rsp)                  #  140   0xb9796  5      OPC=movw_m16_r16         
  leaq 0x8(%rsp), %rcx                 #  141   0xb979b  5      OPC=leaq_r64_m16         
  movw %ax, 0x2(%rsp)                  #  142   0xb97a0  5      OPC=movw_m16_r16         
  movq %r14, %rdi                      #  143   0xb97a5  3      OPC=movq_r64_r64         
  pushq %rcx                           #  144   0xb97a8  1      OPC=pushq_r64_1          
  movq %rcx, %r9                       #  145   0xb97a9  3      OPC=movq_r64_r64         
  leaq 0xe(%rsp), %rax                 #  146   0xb97ac  5      OPC=leaq_r64_m16         
  pushq %rax                           #  147   0xb97b1  1      OPC=pushq_r64_1          
  xorl %eax, %eax                      #  148   0xb97b2  2      OPC=xorl_r32_r32         
  leaq 0x14(%rsp), %r8                 #  149   0xb97b4  5      OPC=leaq_r64_m16         
  callq ._IO_sscanf                    #  150   0xb97b9  5      OPC=callq_label          
  movslq 0x18(%rsp), %rcx              #  151   0xb97be  5      OPC=movslq_r64_m32       
  popq %rsi                            #  152   0xb97c3  1      OPC=popq_r64_1           
  popq %rdi                            #  153   0xb97c4  1      OPC=popq_r64_1           
  movzwl 0x2(%rsp), %eax               #  154   0xb97c5  5      OPC=movzwl_r32_m16       
  leaq (%rbx,%rbx,2), %rdi             #  155   0xb97ca  4      OPC=leaq_r64_m16         
  addq %r14, %rcx                      #  156   0xb97ce  3      OPC=addq_r64_r64         
  cmpb $0x1, %bpl                      #  157   0xb97d1  4      OPC=cmpb_r8_imm8         
  sbbl %esi, %esi                      #  158   0xb97d5  2      OPC=sbbl_r32_r32         
  shlq $0x4, %rdi                      #  159   0xb97d7  4      OPC=shlq_r64_imm8        
  andl $0x2, %esi                      #  160   0xb97db  3      OPC=andl_r32_imm8        
  imull $0xe10, %eax, %edx             #  161   0xb97de  6      OPC=imull_r32_r32_imm32  
  movzwl 0x4(%rsp), %eax               #  162   0xb97e4  5      OPC=movzwl_r32_m16       
  subl $0x1, %esi                      #  163   0xb97e9  3      OPC=subl_r32_imm8        
  imull $0x3c, %eax, %eax              #  164   0xb97ec  3      OPC=imull_r32_r32_imm8   
  addl %edx, %eax                      #  165   0xb97ef  2      OPC=addl_r32_r32         
  movzwl 0x6(%rsp), %edx               #  166   0xb97f1  5      OPC=movzwl_r32_m16       
  addl %edx, %eax                      #  167   0xb97f6  2      OPC=addl_r32_r32         
  imull %esi, %eax                     #  168   0xb97f8  3      OPC=imull_r32_r32        
  movl %eax, 0x14(%r12,%rdi,1)         #  169   0xb97fb  5      OPC=movl_m32_r32         
  jmpq .L_b96f6                        #  170   0xb9800  5      OPC=jmpq_label_1         
  nop                                  #  171   0xb9805  1      OPC=nop                  
  nop                                  #  172   0xb9806  1      OPC=nop                  
  nop                                  #  173   0xb9807  1      OPC=nop                  
.L_b9808:                              #        0xb9808  0      OPC=<label>              
  movslq %esi, %rbx                    #  174   0xb9808  3      OPC=movslq_r64_r32       
  leaq 0x30a56e(%rip), %r12            #  175   0xb980b  7      OPC=leaq_r64_m16         
  leaq 0x8(%rsp), %r9                  #  176   0xb9812  5      OPC=leaq_r64_m16         
  leaq (%rbx,%rbx,2), %rax             #  177   0xb9817  4      OPC=leaq_r64_m16         
  leaq 0xd246e(%rip), %rsi             #  178   0xb981b  7      OPC=leaq_r64_m16         
  movq %rbp, %rdi                      #  179   0xb9822  3      OPC=movq_r64_r64         
  shlq $0x4, %rax                      #  180   0xb9825  4      OPC=shlq_r64_imm8        
  leaq (%r12,%rax,1), %r14             #  181   0xb9829  4      OPC=leaq_r64_m16         
  leaq 0x10(%r12,%rax,1), %r15         #  182   0xb982d  5      OPC=leaq_r64_m16         
  xorl %eax, %eax                      #  183   0xb9832  2      OPC=xorl_r32_r32         
  leaq 0xe(%r14), %rcx                 #  184   0xb9834  4      OPC=leaq_r64_m16         
  leaq 0xc(%r14), %rdx                 #  185   0xb9838  4      OPC=leaq_r64_m16         
  movl $0x2, 0x8(%r14)                 #  186   0xb983c  8      OPC=movl_m32_imm32       
  movq %r15, %r8                       #  187   0xb9844  3      OPC=movq_r64_r64         
  callq ._IO_sscanf                    #  188   0xb9847  5      OPC=callq_label          
  cmpl $0x3, %eax                      #  189   0xb984c  3      OPC=cmpl_r32_imm8        
  jne .L_b9640                         #  190   0xb984f  6      OPC=jne_label_1          
  movzwl 0xc(%r14), %eax               #  191   0xb9855  5      OPC=movzwl_r32_m16       
  subl $0x1, %eax                      #  192   0xb985a  3      OPC=subl_r32_imm8        
  cmpw $0xb, %ax                       #  193   0xb985d  4      OPC=cmpw_ax_imm16        
  ja .L_b9640                          #  194   0xb9861  6      OPC=ja_label_1           
  movzwl 0xe(%r14), %eax               #  195   0xb9867  5      OPC=movzwl_r32_m16       
  subl $0x1, %eax                      #  196   0xb986c  3      OPC=subl_r32_imm8        
  cmpw $0x4, %ax                       #  197   0xb986f  4      OPC=cmpw_ax_imm16        
  ja .L_b9640                          #  198   0xb9873  6      OPC=ja_label_1           
  cmpw $0x6, (%r15)                    #  199   0xb9879  5      OPC=cmpw_m16_imm8        
  ja .L_b9640                          #  200   0xb987e  6      OPC=ja_label_1           
  movslq 0x8(%rsp), %rcx               #  201   0xb9884  5      OPC=movslq_r64_m32       
  addq %rbp, %rcx                      #  202   0xb9889  3      OPC=addq_r64_r64         
  jmpq .L_b96be                        #  203   0xb988c  5      OPC=jmpq_label_1         
  nop                                  #  204   0xb9891  1      OPC=nop                  
  nop                                  #  205   0xb9892  1      OPC=nop                  
  nop                                  #  206   0xb9893  1      OPC=nop                  
  nop                                  #  207   0xb9894  1      OPC=nop                  
  nop                                  #  208   0xb9895  1      OPC=nop                  
  nop                                  #  209   0xb9896  1      OPC=nop                  
  nop                                  #  210   0xb9897  1      OPC=nop                  
.L_b9898:                              #        0xb9898  0      OPC=<label>              
  movl $0x3, %r11d                     #  211   0xb9898  6      OPC=movl_r32_imm32       
  movl $0x2, %r14d                     #  212   0xb989e  6      OPC=movl_r32_imm32       
  xorl %r15d, %r15d                    #  213   0xb98a4  3      OPC=xorl_r32_r32         
  movw %r11w, 0xc(%r12)                #  214   0xb98a7  6      OPC=movw_m16_r16         
  movw %r14w, 0xe(%r12)                #  215   0xb98ad  6      OPC=movw_m16_r16         
  movq %rbp, %rcx                      #  216   0xb98b3  3      OPC=movq_r64_r64         
  movw %r15w, 0x10(%r12,%rax,1)        #  217   0xb98b6  6      OPC=movw_m16_r16         
  jmpq .L_b96be                        #  218   0xb98bc  5      OPC=jmpq_label_1         
  nop                                  #  219   0xb98c1  1      OPC=nop                  
  nop                                  #  220   0xb98c2  1      OPC=nop                  
  nop                                  #  221   0xb98c3  1      OPC=nop                  
  nop                                  #  222   0xb98c4  1      OPC=nop                  
  nop                                  #  223   0xb98c5  1      OPC=nop                  
  nop                                  #  224   0xb98c6  1      OPC=nop                  
  nop                                  #  225   0xb98c7  1      OPC=nop                  
  nop                                  #  226   0xb98c8  1      OPC=nop                  
  nop                                  #  227   0xb98c9  1      OPC=nop                  
  nop                                  #  228   0xb98ca  1      OPC=nop                  
  nop                                  #  229   0xb98cb  1      OPC=nop                  
  nop                                  #  230   0xb98cc  1      OPC=nop                  
  nop                                  #  231   0xb98cd  1      OPC=nop                  
  nop                                  #  232   0xb98ce  1      OPC=nop                  
  nop                                  #  233   0xb98cf  1      OPC=nop                  
                                                                                         
.size parse_rule, .-parse_rule

