  .text
  .globl __mktime_internal
  .type __mktime_internal, @function

#! file-offset 0xb8600
#! rip-offset  0xb8600
#! capacity    2688 bytes

# Text                            #  Line  RIP      Bytes  Opcode              
.__mktime_internal:               #        0xb8600  0      OPC=<label>         
  pushq %r15                      #  1     0xb8600  2      OPC=pushq_r64_1     
  pushq %r14                      #  2     0xb8602  2      OPC=pushq_r64_1     
  pushq %r13                      #  3     0xb8604  2      OPC=pushq_r64_1     
  pushq %r12                      #  4     0xb8606  2      OPC=pushq_r64_1     
  movq %rsi, %r12                 #  5     0xb8608  3      OPC=movq_r64_r64    
  pushq %rbp                      #  6     0xb860b  1      OPC=pushq_r64_1     
  pushq %rbx                      #  7     0xb860c  1      OPC=pushq_r64_1     
  movq %rdi, %rbx                 #  8     0xb860d  3      OPC=movq_r64_r64    
  subq $0x138, %rsp               #  9     0xb8610  7      OPC=subq_r64_imm32  
  movl 0x10(%rbx), %r8d           #  10    0xb8617  4      OPC=movl_r32_m32    
  movl 0x20(%rbx), %eax           #  11    0xb861b  3      OPC=movl_r32_m32    
  movq %rdx, 0x50(%rsp)           #  12    0xb861e  5      OPC=movq_m64_r64    
  movl $0x2aaaaaab, %edx          #  13    0xb8623  5      OPC=movl_r32_imm32  
  movl (%rdi), %esi               #  14    0xb8628  2      OPC=movl_r32_m32    
  movq %rdi, 0x78(%rsp)           #  15    0xb862a  5      OPC=movq_m64_r64    
  movslq 0xc(%rbx), %r9           #  16    0xb862f  4      OPC=movslq_r64_m32  
  movl %eax, 0x60(%rsp)           #  17    0xb8633  4      OPC=movl_m32_r32    
  movl %r8d, %eax                 #  18    0xb8637  3      OPC=movl_r32_r32    
  imull %edx                      #  19    0xb863a  2      OPC=imull_r32       
  movl %r8d, %eax                 #  20    0xb863c  3      OPC=movl_r32_r32    
  movl %esi, 0x44(%rsp)           #  21    0xb863f  4      OPC=movl_m32_r32    
  sarl $0x1f, %eax                #  22    0xb8643  3      OPC=sarl_r32_imm8   
  movl 0x4(%rdi), %esi            #  23    0xb8646  3      OPC=movl_r32_m32    
  movl 0x8(%rdi), %edi            #  24    0xb8649  3      OPC=movl_r32_m32    
  sarl $0x1, %edx                 #  25    0xb864c  2      OPC=sarl_r32_one    
  movl %edx, %ecx                 #  26    0xb864e  2      OPC=movl_r32_r32    
  subl %eax, %ecx                 #  27    0xb8650  2      OPC=subl_r32_r32    
  leal (%rcx,%rcx,2), %eax        #  28    0xb8652  3      OPC=leal_r32_m16    
  movl %ecx, %edx                 #  29    0xb8655  2      OPC=movl_r32_r32    
  movl %r8d, %ecx                 #  30    0xb8657  3      OPC=movl_r32_r32    
  shll $0x2, %eax                 #  31    0xb865a  3      OPC=shll_r32_imm8   
  subl %eax, %ecx                 #  32    0xb865d  2      OPC=subl_r32_r32    
  movslq 0x14(%rbx), %rax         #  33    0xb865f  4      OPC=movslq_r64_m32  
  movl %ecx, %r8d                 #  34    0xb8663  3      OPC=movl_r32_r32    
  shrl $0x1f, %r8d                #  35    0xb8666  4      OPC=shrl_r32_imm8   
  subl %r8d, %edx                 #  36    0xb866a  3      OPC=subl_r32_r32    
  movslq %edx, %rdx               #  37    0xb866d  3      OPC=movslq_r64_r32  
  addq %rdx, %rax                 #  38    0xb8670  3      OPC=addq_r64_r64    
  movq %rax, %r10                 #  39    0xb8673  3      OPC=movq_r64_r64    
  movq %rax, (%rsp)               #  40    0xb8676  4      OPC=movq_m64_r64    
  xorl %eax, %eax                 #  41    0xb867a  2      OPC=xorl_r32_r32    
  andl $0x3, %r10d                #  42    0xb867c  4      OPC=andl_r32_imm8   
  jne .L_b86c2                    #  43    0xb8680  2      OPC=jne_label       
  movq (%rsp), %rax               #  44    0xb8682  4      OPC=movq_r64_m64    
  movq $0xa3d70a3d70a3d70b, %rdx  #  45    0xb8686  10     OPC=movq_r64_imm64  
  movq (%rsp), %rbx               #  46    0xb8690  4      OPC=movq_r64_m64    
  imulq %rdx                      #  47    0xb8694  3      OPC=imulq_r64       
  movq %rbx, %rax                 #  48    0xb8697  3      OPC=movq_r64_r64    
  sarq $0x3f, %rax                #  49    0xb869a  4      OPC=sarq_r64_imm8   
  addq %rbx, %rdx                 #  50    0xb869e  3      OPC=addq_r64_r64    
  sarq $0x6, %rdx                 #  51    0xb86a1  4      OPC=sarq_r64_imm8   
  subq %rax, %rdx                 #  52    0xb86a5  3      OPC=subq_r64_r64    
  leaq (%rdx,%rdx,4), %rax        #  53    0xb86a8  4      OPC=leaq_r64_m16    
  leaq (%rax,%rax,4), %r11        #  54    0xb86ac  4      OPC=leaq_r64_m16    
  movl $0x1, %eax                 #  55    0xb86b0  5      OPC=movl_r32_imm32  
  shlq $0x2, %r11                 #  56    0xb86b5  4      OPC=shlq_r64_imm8   
  cmpq %r11, %rbx                 #  57    0xb86b9  3      OPC=cmpq_r64_r64    
  je .L_b8d10                     #  58    0xb86bc  6      OPC=je_label_1      
.L_b86c2:                         #        0xb86c2  0      OPC=<label>         
  leal (%r8,%r8,1), %edx          #  59    0xb86c2  4      OPC=leal_r32_m16    
  addl %edx, %r8d                 #  60    0xb86c6  3      OPC=addl_r32_r32    
  leaq (%rax,%rax,1), %rdx        #  61    0xb86c9  4      OPC=leaq_r64_m16    
  leal (%rcx,%r8,4), %ecx         #  62    0xb86cd  4      OPC=leal_r32_m16    
  addq %rax, %rdx                 #  63    0xb86d1  3      OPC=addq_r64_r64    
  leaq (%rax,%rdx,4), %rax        #  64    0xb86d4  4      OPC=leaq_r64_m16    
  movslq %ecx, %rcx               #  65    0xb86d8  3      OPC=movslq_r64_r32  
  leaq 0xcd89e(%rip), %rdx        #  66    0xb86db  7      OPC=leaq_r64_m16    
  addq %rcx, %rax                 #  67    0xb86e2  3      OPC=addq_r64_r64    
  movzwl (%rdx,%rax,2), %eax      #  68    0xb86e5  4      OPC=movzwl_r32_m16  
  subl $0x1, %eax                 #  69    0xb86e9  3      OPC=subl_r32_imm8   
  cltq                            #  70    0xb86ec  2      OPC=cltq            
  addq %r9, %rax                  #  71    0xb86ee  3      OPC=addq_r64_r64    
  movq %rax, 0x18(%rsp)           #  72    0xb86f1  5      OPC=movq_m64_r64    
  movq 0x50(%rsp), %rax           #  73    0xb86f6  5      OPC=movq_r64_m64    
  movq (%rax), %rax               #  74    0xb86fb  3      OPC=movq_r64_m64    
  movq %rax, 0x48(%rsp)           #  75    0xb86fe  5      OPC=movq_m64_r64    
  movl 0x44(%rsp), %eax           #  76    0xb8703  4      OPC=movl_r32_m32    
  testl %eax, %eax                #  77    0xb8707  2      OPC=testl_r32_r32   
  js .L_b8d40                     #  78    0xb8709  6      OPC=js_label_1      
  cmpl $0x3b, %eax                #  79    0xb870f  3      OPC=cmpl_r32_imm8   
  movq $0x3b, 0x8(%rsp)           #  80    0xb8712  9      OPC=movq_m64_imm32  
  movl $0x3b, 0x64(%rsp)          #  81    0xb871b  8      OPC=movl_m32_imm32  
  jle .L_b8d60                    #  82    0xb8723  6      OPC=jle_label_1     
.L_b8729:                         #        0xb8729  0      OPC=<label>         
  movq (%rsp), %r8                #  83    0xb8729  4      OPC=movq_r64_m64    
  xorl %eax, %eax                 #  84    0xb872d  2      OPC=xorl_r32_r32    
  movl $0x51eb851f, %edx          #  85    0xb872f  5      OPC=movl_r32_imm32  
  movl $0x6, 0x20(%rsp)           #  86    0xb8734  8      OPC=movl_m32_imm32  
  movl $0x0, 0x40(%rsp)           #  87    0xb873c  8      OPC=movl_m32_imm32  
  leaq 0xb0(%rsp), %r13           #  88    0xb8744  8      OPC=leaq_r64_m16    
  movq %r8, %rcx                  #  89    0xb874c  3      OPC=movq_r64_r64    
  sarq $0x2, %rcx                 #  90    0xb874f  4      OPC=sarq_r64_imm8   
  testq %r10, %r10                #  91    0xb8753  3      OPC=testq_r64_r64   
  sete %al                        #  92    0xb8756  3      OPC=sete_r8         
  subl %eax, %ecx                 #  93    0xb8759  2      OPC=subl_r32_r32    
  leal 0x1db(%rcx), %eax          #  94    0xb875b  6      OPC=leal_r32_m16    
  movl %eax, %ebx                 #  95    0xb8761  2      OPC=movl_r32_r32    
  movl %eax, 0x24(%rsp)           #  96    0xb8763  4      OPC=movl_m32_r32    
  imull %edx                      #  97    0xb8767  2      OPC=imull_r32       
  movl %ebx, %eax                 #  98    0xb8769  2      OPC=movl_r32_r32    
  sarl $0x1f, %eax                #  99    0xb876b  3      OPC=sarl_r32_imm8   
  sarl $0x3, %edx                 #  100   0xb876e  3      OPC=sarl_r32_imm8   
  subl %eax, %edx                 #  101   0xb8771  2      OPC=subl_r32_r32    
  leal (%rdx,%rdx,4), %eax        #  102   0xb8773  3      OPC=leal_r32_m16    
  leal (%rax,%rax,4), %eax        #  103   0xb8776  3      OPC=leal_r32_m16    
  subl %eax, %ebx                 #  104   0xb8779  2      OPC=subl_r32_r32    
  movl %ebx, %eax                 #  105   0xb877b  2      OPC=movl_r32_r32    
  shrl $0x1f, %eax                #  106   0xb877d  3      OPC=shrl_r32_imm8   
  subl %eax, %edx                 #  107   0xb8780  2      OPC=subl_r32_r32    
  movl %edx, %eax                 #  108   0xb8782  2      OPC=movl_r32_r32    
  movl %edx, %r9d                 #  109   0xb8784  3      OPC=movl_r32_r32    
  movl %edx, 0x28(%rsp)           #  110   0xb8787  4      OPC=movl_m32_r32    
  sarl $0x2, %eax                 #  111   0xb878b  3      OPC=sarl_r32_imm8   
  movl %eax, %ebx                 #  112   0xb878e  2      OPC=movl_r32_r32    
  movl %eax, 0x2c(%rsp)           #  113   0xb8790  4      OPC=movl_m32_r32    
  movslq %edi, %rax               #  114   0xb8794  3      OPC=movslq_r64_r32  
  movq %rax, %rdi                 #  115   0xb8797  3      OPC=movq_r64_r64    
  movq %rax, 0x30(%rsp)           #  116   0xb879a  5      OPC=movq_m64_r64    
  movslq %esi, %rax               #  117   0xb879f  3      OPC=movslq_r64_r32  
  movq %rax, %r15                 #  118   0xb87a2  3      OPC=movq_r64_r64    
  movq %rax, 0x38(%rsp)           #  119   0xb87a5  5      OPC=movq_m64_r64    
  movq %r8, %rax                  #  120   0xb87aa  3      OPC=movq_r64_r64    
  subq $0x46, %rax                #  121   0xb87ad  4      OPC=subq_r64_imm8   
  movq 0x18(%rsp), %rsi           #  122   0xb87b1  5      OPC=movq_r64_m64    
  leaq (%rax,%rax,8), %rdx        #  123   0xb87b6  4      OPC=leaq_r64_m16    
  leaq (%rax,%rdx,8), %rax        #  124   0xb87ba  4      OPC=leaq_r64_m16    
  leaq (%rax,%rax,4), %rax        #  125   0xb87be  4      OPC=leaq_r64_m16    
  leaq (%rsi,%rax,1), %rdx        #  126   0xb87c2  4      OPC=leaq_r64_m16    
  leal -0x2(%rcx,%rbx,1), %eax    #  127   0xb87c6  4      OPC=leal_r32_m16    
  subl %r9d, %eax                 #  128   0xb87ca  3      OPC=subl_r32_r32    
  cltq                            #  129   0xb87cd  2      OPC=cltq            
  addq %rdx, %rax                 #  130   0xb87cf  3      OPC=addq_r64_r64    
  leaq (%rax,%rax,2), %rax        #  131   0xb87d2  4      OPC=leaq_r64_m16    
  leaq (%rdi,%rax,8), %rax        #  132   0xb87d6  4      OPC=leaq_r64_m16    
  leaq (,%rax,4), %rdx            #  133   0xb87da  8      OPC=leaq_r64_m16    
  shlq $0x6, %rax                 #  134   0xb87e2  4      OPC=shlq_r64_imm8   
  subq %rdx, %rax                 #  135   0xb87e6  3      OPC=subq_r64_r64    
  addq %r15, %rax                 #  136   0xb87e9  3      OPC=addq_r64_r64    
  leaq (,%rax,4), %rdx            #  137   0xb87ec  8      OPC=leaq_r64_m16    
  shlq $0x6, %rax                 #  138   0xb87f4  4      OPC=shlq_r64_imm8   
  subq %rdx, %rax                 #  139   0xb87f8  3      OPC=subq_r64_r64    
  movl 0x48(%rsp), %edx           #  140   0xb87fb  4      OPC=movl_r32_m32    
  negl %edx                       #  141   0xb87ff  2      OPC=negl_r32        
  movslq %edx, %rdx               #  142   0xb8801  3      OPC=movslq_r64_r32  
  subq %rdx, %rax                 #  143   0xb8804  3      OPC=subq_r64_r64    
  addq 0x8(%rsp), %rax            #  144   0xb8807  5      OPC=addq_r64_m64    
  movq %rax, 0x70(%rsp)           #  145   0xb880c  5      OPC=movq_m64_r64    
  movq %rax, 0xa0(%rsp)           #  146   0xb8811  8      OPC=movq_m64_r64    
  movq %rax, %rbx                 #  147   0xb8819  3      OPC=movq_r64_r64    
  movq %rax, 0x98(%rsp)           #  148   0xb881c  8      OPC=movq_m64_r64    
  leaq 0x98(%rsp), %rax           #  149   0xb8824  8      OPC=leaq_r64_m16    
  movq %rax, 0x10(%rsp)           #  150   0xb882c  5      OPC=movq_m64_r64    
  movq %rax, %rdi                 #  151   0xb8831  3      OPC=movq_r64_r64    
  jmpq .L_b888c                   #  152   0xb8834  2      OPC=jmpq_label      
  nop                             #  153   0xb8836  1      OPC=nop             
  nop                             #  154   0xb8837  1      OPC=nop             
  nop                             #  155   0xb8838  1      OPC=nop             
  nop                             #  156   0xb8839  1      OPC=nop             
  nop                             #  157   0xb883a  1      OPC=nop             
  nop                             #  158   0xb883b  1      OPC=nop             
  nop                             #  159   0xb883c  1      OPC=nop             
  nop                             #  160   0xb883d  1      OPC=nop             
  nop                             #  161   0xb883e  1      OPC=nop             
  nop                             #  162   0xb883f  1      OPC=nop             
.L_b8840:                         #        0xb8840  0      OPC=<label>         
  cmpq %rdx, %rsi                 #  163   0xb8840  3      OPC=cmpq_r64_r64    
  je .L_b89c0                     #  164   0xb8843  6      OPC=je_label_1      
.L_b8849:                         #        0xb8849  0      OPC=<label>         
  cmpq %rsi, %rbx                 #  165   0xb8849  3      OPC=cmpq_r64_r64    
  je .L_b8ad0                     #  166   0xb884c  6      OPC=je_label_1      
.L_b8852:                         #        0xb8852  0      OPC=<label>         
  subl $0x1, 0x20(%rsp)           #  167   0xb8852  5      OPC=subl_m32_imm8   
  je .L_b8c80                     #  168   0xb8857  6      OPC=je_label_1      
  movq %rdx, 0x98(%rsp)           #  169   0xb885d  8      OPC=movq_m64_r64    
  movl 0xd0(%rsp), %edx           #  170   0xb8865  7      OPC=movl_r32_m32    
  xorl %eax, %eax                 #  171   0xb886c  2      OPC=xorl_r32_r32    
  movq 0x10(%rsp), %rdi           #  172   0xb886e  5      OPC=movq_r64_m64    
  movq 0xa0(%rsp), %rbx           #  173   0xb8873  8      OPC=movq_r64_m64    
  movq %rsi, 0xa0(%rsp)           #  174   0xb887b  8      OPC=movq_m64_r64    
  testl %edx, %edx                #  175   0xb8883  2      OPC=testl_r32_r32   
  setne %al                       #  176   0xb8885  3      OPC=setne_r8        
  movl %eax, 0x40(%rsp)           #  177   0xb8888  4      OPC=movl_m32_r32    
.L_b888c:                         #        0xb888c  0      OPC=<label>         
  movq %r13, %rsi                 #  178   0xb888c  3      OPC=movq_r64_r64    
  callq %r12                      #  179   0xb888f  3      OPC=callq_r64       
  testq %rax, %rax                #  180   0xb8892  3      OPC=testq_r64_r64   
  movq %rax, %rdi                 #  181   0xb8895  3      OPC=movq_r64_r64    
  movq 0x98(%rsp), %rsi           #  182   0xb8898  8      OPC=movq_r64_m64    
  je .L_b8c10                     #  183   0xb88a0  6      OPC=je_label_1      
.L_b88a6:                         #        0xb88a6  0      OPC=<label>         
  movslq 0x14(%rdi), %rcx         #  184   0xb88a6  4      OPC=movslq_r64_m32  
  xorl %eax, %eax                 #  185   0xb88aa  2      OPC=xorl_r32_r32    
  movl $0x51eb851f, %edx          #  186   0xb88ac  5      OPC=movl_r32_imm32  
  movq 0x30(%rsp), %r8            #  187   0xb88b1  5      OPC=movq_r64_m64    
  movl %ecx, %r11d                #  188   0xb88b6  3      OPC=movl_r32_r32    
  sarl $0x2, %r11d                #  189   0xb88b9  4      OPC=sarl_r32_imm8   
  addl $0x1db, %r11d              #  190   0xb88bd  7      OPC=addl_r32_imm32  
  testb $0x3, %cl                 #  191   0xb88c4  3      OPC=testb_r8_imm8   
  sete %al                        #  192   0xb88c7  3      OPC=sete_r8         
  subl %eax, %r11d                #  193   0xb88ca  3      OPC=subl_r32_r32    
  movl %r11d, %eax                #  194   0xb88cd  3      OPC=movl_r32_r32    
  imull %edx                      #  195   0xb88d0  2      OPC=imull_r32       
  movl %r11d, %eax                #  196   0xb88d2  3      OPC=movl_r32_r32    
  sarl $0x1f, %eax                #  197   0xb88d5  3      OPC=sarl_r32_imm8   
  sarl $0x3, %edx                 #  198   0xb88d8  3      OPC=sarl_r32_imm8   
  movl %edx, %r10d                #  199   0xb88db  3      OPC=movl_r32_r32    
  movl %r11d, %edx                #  200   0xb88de  3      OPC=movl_r32_r32    
  subl %eax, %r10d                #  201   0xb88e1  3      OPC=subl_r32_r32    
  leal (%r10,%r10,4), %eax        #  202   0xb88e4  4      OPC=leal_r32_m16    
  leal (%rax,%rax,4), %eax        #  203   0xb88e8  3      OPC=leal_r32_m16    
  subl %eax, %edx                 #  204   0xb88eb  2      OPC=subl_r32_r32    
  movl %edx, %eax                 #  205   0xb88ed  2      OPC=movl_r32_r32    
  movq 0x38(%rsp), %rdx           #  206   0xb88ef  5      OPC=movq_r64_m64    
  shrl $0x1f, %eax                #  207   0xb88f4  3      OPC=shrl_r32_imm8   
  subl %eax, %r10d                #  208   0xb88f7  3      OPC=subl_r32_r32    
  movslq 0x4(%rdi), %rax          #  209   0xb88fa  4      OPC=movslq_r64_m32  
  subq %rax, %rdx                 #  210   0xb88fe  3      OPC=subq_r64_r64    
  movslq 0x8(%rdi), %rax          #  211   0xb8901  4      OPC=movslq_r64_m32  
  subq %rax, %r8                  #  212   0xb8905  3      OPC=subq_r64_r64    
  movq (%rsp), %rax               #  213   0xb8908  4      OPC=movq_r64_m64    
  subq %rcx, %rax                 #  214   0xb890c  3      OPC=subq_r64_r64    
  leaq (%rax,%rax,8), %rcx        #  215   0xb890f  4      OPC=leaq_r64_m16    
  leaq (%rax,%rcx,8), %rax        #  216   0xb8913  4      OPC=leaq_r64_m16    
  leaq (%rax,%rax,4), %rcx        #  217   0xb8917  4      OPC=leaq_r64_m16    
  movslq 0x1c(%rdi), %rax         #  218   0xb891b  4      OPC=movslq_r64_m32  
  subq %rax, %rcx                 #  219   0xb891f  3      OPC=subq_r64_r64    
  movq 0x18(%rsp), %rax           #  220   0xb8922  5      OPC=movq_r64_m64    
  leaq (%rcx,%rax,1), %r9         #  221   0xb8927  4      OPC=leaq_r64_m16    
  movl %r10d, %ecx                #  222   0xb892b  3      OPC=movl_r32_r32    
  sarl $0x2, %r10d                #  223   0xb892e  4      OPC=sarl_r32_imm8   
  subl %r11d, %ecx                #  224   0xb8932  3      OPC=subl_r32_r32    
  addl 0x24(%rsp), %ecx           #  225   0xb8935  4      OPC=addl_r32_m32    
  subl %r10d, %ecx                #  226   0xb8939  3      OPC=subl_r32_r32    
  addl 0x2c(%rsp), %ecx           #  227   0xb893c  4      OPC=addl_r32_m32    
  subl 0x28(%rsp), %ecx           #  228   0xb8940  4      OPC=subl_r32_m32    
  movslq %ecx, %rcx               #  229   0xb8944  3      OPC=movslq_r64_r32  
  addq %r9, %rcx                  #  230   0xb8947  3      OPC=addq_r64_r64    
  leaq (%rcx,%rcx,2), %rax        #  231   0xb894a  4      OPC=leaq_r64_m16    
  leaq (%r8,%rax,8), %rcx         #  232   0xb894e  4      OPC=leaq_r64_m16    
  leaq (,%rcx,4), %rax            #  233   0xb8952  8      OPC=leaq_r64_m16    
  shlq $0x6, %rcx                 #  234   0xb895a  4      OPC=shlq_r64_imm8   
  subq %rax, %rcx                 #  235   0xb895e  3      OPC=subq_r64_r64    
  addq %rcx, %rdx                 #  236   0xb8961  3      OPC=addq_r64_r64    
  leaq (,%rdx,4), %rax            #  237   0xb8964  8      OPC=leaq_r64_m16    
  shlq $0x6, %rdx                 #  238   0xb896c  4      OPC=shlq_r64_imm8   
  subq %rax, %rdx                 #  239   0xb8970  3      OPC=subq_r64_r64    
  movslq (%rdi), %rax             #  240   0xb8973  3      OPC=movslq_r64_m32  
  subq %rax, %rdx                 #  241   0xb8976  3      OPC=subq_r64_r64    
  movq %rdx, %rax                 #  242   0xb8979  3      OPC=movq_r64_r64    
  addq 0x8(%rsp), %rax            #  243   0xb897c  5      OPC=addq_r64_m64    
  leaq (%rsi,%rax,1), %rdx        #  244   0xb8981  4      OPC=leaq_r64_m16    
  cmpq %rdx, %rsi                 #  245   0xb8985  3      OPC=cmpq_r64_r64    
  setle %cl                       #  246   0xb8988  3      OPC=setle_r8        
  shrq $0x3f, %rax                #  247   0xb898b  4      OPC=shrq_r64_imm8   
  cmpb %al, %cl                   #  248   0xb898f  2      OPC=cmpb_r8_r8      
  jne .L_b8840                    #  249   0xb8991  6      OPC=jne_label_1     
  testq %rsi, %rsi                #  250   0xb8997  3      OPC=testq_r64_r64   
  js .L_b8ce8                     #  251   0xb899a  6      OPC=js_label_1      
.L_b89a0:                         #        0xb89a0  0      OPC=<label>         
  movq $0x7ffffffffffffffd, %rax  #  252   0xb89a0  10     OPC=movq_r64_imm64  
  cmpq %rax, %rsi                 #  253   0xb89aa  3      OPC=cmpq_r64_r64    
  jle .L_b8c00                    #  254   0xb89ad  6      OPC=jle_label_1     
  leaq -0x1(%rsi), %rdx           #  255   0xb89b3  4      OPC=leaq_r64_m16    
  cmpq %rdx, %rsi                 #  256   0xb89b7  3      OPC=cmpq_r64_r64    
  jne .L_b8849                    #  257   0xb89ba  6      OPC=jne_label_1     
.L_b89c0:                         #        0xb89c0  0      OPC=<label>         
  movl 0x60(%rsp), %ebx           #  258   0xb89c0  4      OPC=movl_r32_m32    
  movl 0xd0(%rsp), %edx           #  259   0xb89c4  7      OPC=movl_r32_m32    
  movq %rsi, %rax                 #  260   0xb89cb  3      OPC=movq_r64_r64    
  testl %ebx, %ebx                #  261   0xb89ce  2      OPC=testl_r32_r32   
  sete 0x60(%rsp)                 #  262   0xb89d0  5      OPC=sete_m8         
  movzbl 0x60(%rsp), %edi         #  263   0xb89d5  5      OPC=movzbl_r32_m8   
  testl %edx, %edx                #  264   0xb89da  2      OPC=testl_r32_r32   
  sete %cl                        #  265   0xb89dc  3      OPC=sete_r8         
  cmpb %cl, %dil                  #  266   0xb89df  3      OPC=cmpb_r8_r8      
  je .L_b8b08                     #  267   0xb89e2  6      OPC=je_label_1      
  testl %edx, %edx                #  268   0xb89e8  2      OPC=testl_r32_r32   
  js .L_b8f7b                     #  269   0xb89ea  6      OPC=js_label_1      
  testl %ebx, %ebx                #  270   0xb89f0  2      OPC=testl_r32_r32   
  movl $0x92c70, %ebp             #  271   0xb89f2  5      OPC=movl_r32_imm32  
  js .L_b8f7b                     #  272   0xb89f7  6      OPC=js_label_1      
  leaq 0xf0(%rsp), %rdi           #  273   0xb89fd  8      OPC=leaq_r64_m16    
  movq %r13, 0x80(%rsp)           #  274   0xb8a05  8      OPC=movq_m64_r64    
  movq %rdi, 0x58(%rsp)           #  275   0xb8a0d  5      OPC=movq_m64_r64    
  leaq 0xa8(%rsp), %rdi           #  276   0xb8a12  8      OPC=leaq_r64_m16    
  movq %rdi, 0x68(%rsp)           #  277   0xb8a1a  5      OPC=movq_m64_r64    
  jmpq .L_b8a41                   #  278   0xb8a1f  2      OPC=jmpq_label      
  nop                             #  279   0xb8a21  1      OPC=nop             
  nop                             #  280   0xb8a22  1      OPC=nop             
  nop                             #  281   0xb8a23  1      OPC=nop             
  nop                             #  282   0xb8a24  1      OPC=nop             
  nop                             #  283   0xb8a25  1      OPC=nop             
  nop                             #  284   0xb8a26  1      OPC=nop             
  nop                             #  285   0xb8a27  1      OPC=nop             
.L_b8a28:                         #        0xb8a28  0      OPC=<label>         
  movl 0x40(%rsp), %ebp           #  286   0xb8a28  4      OPC=movl_r32_m32    
  movq %r15, %r12                 #  287   0xb8a2c  3      OPC=movq_r64_r64    
  addl $0x92c70, %ebp             #  288   0xb8a2f  6      OPC=addl_r32_imm32  
  cmpl $0x100dc400, %ebp          #  289   0xb8a35  6      OPC=cmpl_r32_imm32  
  je .L_b9021                     #  290   0xb8a3b  6      OPC=je_label_1      
.L_b8a41:                         #        0xb8a41  0      OPC=<label>         
  leal (%rbp,%rbp,1), %ebx        #  291   0xb8a41  4      OPC=leal_r32_m16    
  movl %ebp, %r14d                #  292   0xb8a45  3      OPC=movl_r32_r32    
  movl %ebp, 0x40(%rsp)           #  293   0xb8a48  4      OPC=movl_m32_r32    
  negl %r14d                      #  294   0xb8a4c  3      OPC=negl_r32        
  movq %r12, %r15                 #  295   0xb8a4f  3      OPC=movq_r64_r64    
  movl %ebx, 0x20(%rsp)           #  296   0xb8a52  4      OPC=movl_m32_r32    
  movl $0x2, %ebx                 #  297   0xb8a56  5      OPC=movl_r32_imm32  
.L_b8a5b:                         #        0xb8a5b  0      OPC=<label>         
  movslq %r14d, %rdx              #  298   0xb8a5b  3      OPC=movslq_r64_r32  
  movl %r14d, %esi                #  299   0xb8a5e  3      OPC=movl_r32_r32    
  addq %rax, %rdx                 #  300   0xb8a61  3      OPC=addq_r64_r64    
  cmpq %rax, %rdx                 #  301   0xb8a64  3      OPC=cmpq_r64_r64    
  setge %dil                      #  302   0xb8a67  4      OPC=setge_r8        
  shrl $0x1f, %esi                #  303   0xb8a6b  3      OPC=shrl_r32_imm8   
  cmpb %sil, %dil                 #  304   0xb8a6e  3      OPC=cmpb_r8_r8      
  je .L_b8ab7                     #  305   0xb8a71  2      OPC=je_label        
  movq %rdx, 0xa8(%rsp)           #  306   0xb8a73  8      OPC=movq_m64_r64    
  movq 0x58(%rsp), %rsi           #  307   0xb8a7b  5      OPC=movq_r64_m64    
  movq 0x68(%rsp), %rdi           #  308   0xb8a80  5      OPC=movq_r64_m64    
  callq %r15                      #  309   0xb8a85  3      OPC=callq_r64       
  testq %rax, %rax                #  310   0xb8a88  3      OPC=testq_r64_r64   
  je .L_b8eb8                     #  311   0xb8a8b  6      OPC=je_label_1      
.L_b8a91:                         #        0xb8a91  0      OPC=<label>         
  movl 0x110(%rsp), %eax          #  312   0xb8a91  7      OPC=movl_r32_m32    
  testl %eax, %eax                #  313   0xb8a98  2      OPC=testl_r32_r32   
  sete %dl                        #  314   0xb8a9a  3      OPC=sete_r8         
  cmpb %dl, 0x60(%rsp)            #  315   0xb8a9d  4      OPC=cmpb_m8_r8      
  je .L_b8d78                     #  316   0xb8aa1  6      OPC=je_label_1      
  testl %eax, %eax                #  317   0xb8aa7  2      OPC=testl_r32_r32   
  js .L_b8d78                     #  318   0xb8aa9  6      OPC=js_label_1      
  movq 0x98(%rsp), %rax           #  319   0xb8aaf  8      OPC=movq_r64_m64    
.L_b8ab7:                         #        0xb8ab7  0      OPC=<label>         
  addl 0x20(%rsp), %r14d          #  320   0xb8ab7  5      OPC=addl_r32_m32    
  cmpl $0x1, %ebx                 #  321   0xb8abc  3      OPC=cmpl_r32_imm8   
  je .L_b8a28                     #  322   0xb8abf  6      OPC=je_label_1      
  movl $0x1, %ebx                 #  323   0xb8ac5  5      OPC=movl_r32_imm32  
  jmpq .L_b8a5b                   #  324   0xb8aca  2      OPC=jmpq_label      
  nop                             #  325   0xb8acc  1      OPC=nop             
  nop                             #  326   0xb8acd  1      OPC=nop             
  nop                             #  327   0xb8ace  1      OPC=nop             
  nop                             #  328   0xb8acf  1      OPC=nop             
.L_b8ad0:                         #        0xb8ad0  0      OPC=<label>         
  cmpq 0xa0(%rsp), %rbx           #  329   0xb8ad0  8      OPC=cmpq_r64_m64    
  je .L_b8852                     #  330   0xb8ad8  6      OPC=je_label_1      
  movl 0xd0(%rsp), %eax           #  331   0xb8ade  7      OPC=movl_r32_m32    
  testl %eax, %eax                #  332   0xb8ae5  2      OPC=testl_r32_r32   
  js .L_b8b05                     #  333   0xb8ae7  2      OPC=js_label        
  movl 0x60(%rsp), %ecx           #  334   0xb8ae9  4      OPC=movl_r32_m32    
  testl %ecx, %ecx                #  335   0xb8aed  2      OPC=testl_r32_r32   
  js .L_b8d28                     #  336   0xb8aef  6      OPC=js_label_1      
  setne %cl                       #  337   0xb8af5  3      OPC=setne_r8        
  testl %eax, %eax                #  338   0xb8af8  2      OPC=testl_r32_r32   
  setne %al                       #  339   0xb8afa  3      OPC=setne_r8        
  cmpb %al, %cl                   #  340   0xb8afd  2      OPC=cmpb_r8_r8      
  je .L_b8852                     #  341   0xb8aff  6      OPC=je_label_1      
.L_b8b05:                         #        0xb8b05  0      OPC=<label>         
  movq %rbx, %rax                 #  342   0xb8b05  3      OPC=movq_r64_r64    
.L_b8b08:                         #        0xb8b08  0      OPC=<label>         
  movq 0x48(%rsp), %rdx           #  343   0xb8b08  5      OPC=movq_r64_m64    
  subq 0x70(%rsp), %rdx           #  344   0xb8b0d  5      OPC=subq_r64_m64    
  movq 0x50(%rsp), %rdi           #  345   0xb8b12  5      OPC=movq_r64_m64    
  movl 0xb0(%rsp), %ecx           #  346   0xb8b17  7      OPC=movl_r32_m32    
  addq %rax, %rdx                 #  347   0xb8b1e  3      OPC=addq_r64_r64    
  movq %rdx, (%rdi)               #  348   0xb8b21  3      OPC=movq_m64_r64    
  movl 0x44(%rsp), %edi           #  349   0xb8b24  4      OPC=movl_r32_m32    
  cmpl %ecx, %edi                 #  350   0xb8b28  2      OPC=cmpl_r32_r32    
  je .L_b8b9b                     #  351   0xb8b2a  2      OPC=je_label        
  movl 0x64(%rsp), %esi           #  352   0xb8b2c  4      OPC=movl_r32_m32    
  testl %esi, %esi                #  353   0xb8b30  2      OPC=testl_r32_r32   
  sete %dl                        #  354   0xb8b32  3      OPC=sete_r8         
  cmpl $0x3c, %ecx                #  355   0xb8b35  3      OPC=cmpl_r32_imm8   
  sete %cl                        #  356   0xb8b38  3      OPC=sete_r8         
  movzbl %cl, %ecx                #  357   0xb8b3b  3      OPC=movzbl_r32_r8   
  andl %ecx, %edx                 #  358   0xb8b3e  2      OPC=andl_r32_r32    
  movslq %edi, %rcx               #  359   0xb8b40  3      OPC=movslq_r64_r32  
  addq %rax, %rcx                 #  360   0xb8b43  3      OPC=addq_r64_r64    
  subl %esi, %edx                 #  361   0xb8b46  2      OPC=subl_r32_r32    
  cmpq %rax, %rcx                 #  362   0xb8b48  3      OPC=cmpq_r64_r64    
  movl %edi, %eax                 #  363   0xb8b4b  2      OPC=movl_r32_r32    
  setge %sil                      #  364   0xb8b4d  4      OPC=setge_r8        
  shrl $0x1f, %eax                #  365   0xb8b51  3      OPC=shrl_r32_imm8   
  cmpb %al, %sil                  #  366   0xb8b54  3      OPC=cmpb_r8_r8      
  je .L_b8c80                     #  367   0xb8b57  6      OPC=je_label_1      
  movslq %edx, %rax               #  368   0xb8b5d  3      OPC=movslq_r64_r32  
  addq %rcx, %rax                 #  369   0xb8b60  3      OPC=addq_r64_r64    
  cmpq %rax, %rcx                 #  370   0xb8b63  3      OPC=cmpq_r64_r64    
  setle %cl                       #  371   0xb8b66  3      OPC=setle_r8        
  shrl $0x1f, %edx                #  372   0xb8b69  3      OPC=shrl_r32_imm8   
  cmpb %dl, %cl                   #  373   0xb8b6c  2      OPC=cmpb_r8_r8      
  je .L_b8c80                     #  374   0xb8b6e  6      OPC=je_label_1      
  movq %rax, 0xa0(%rsp)           #  375   0xb8b74  8      OPC=movq_m64_r64    
  leaq 0xa0(%rsp), %rdi           #  376   0xb8b7c  8      OPC=leaq_r64_m16    
  movq %r13, %rsi                 #  377   0xb8b84  3      OPC=movq_r64_r64    
  callq %r12                      #  378   0xb8b87  3      OPC=callq_r64       
  testq %rax, %rax                #  379   0xb8b8a  3      OPC=testq_r64_r64   
  je .L_b8c80                     #  380   0xb8b8d  6      OPC=je_label_1      
  movq 0xa0(%rsp), %rax           #  381   0xb8b93  8      OPC=movq_r64_m64    
.L_b8b9b:                         #        0xb8b9b  0      OPC=<label>         
  movq 0x78(%rsp), %rsi           #  382   0xb8b9b  5      OPC=movq_r64_m64    
  movq 0xb0(%rsp), %rdx           #  383   0xb8ba0  8      OPC=movq_r64_m64    
  movq %rdx, (%rsi)               #  384   0xb8ba8  3      OPC=movq_m64_r64    
  movq 0xb8(%rsp), %rdx           #  385   0xb8bab  8      OPC=movq_r64_m64    
  movq %rdx, 0x8(%rsi)            #  386   0xb8bb3  4      OPC=movq_m64_r64    
  movq 0xc0(%rsp), %rdx           #  387   0xb8bb7  8      OPC=movq_r64_m64    
  movq %rdx, 0x10(%rsi)           #  388   0xb8bbf  4      OPC=movq_m64_r64    
  movq 0xc8(%rsp), %rdx           #  389   0xb8bc3  8      OPC=movq_r64_m64    
  movq %rdx, 0x18(%rsi)           #  390   0xb8bcb  4      OPC=movq_m64_r64    
  movq 0xd0(%rsp), %rdx           #  391   0xb8bcf  8      OPC=movq_r64_m64    
  movq %rdx, 0x20(%rsi)           #  392   0xb8bd7  4      OPC=movq_m64_r64    
  movq 0xd8(%rsp), %rdx           #  393   0xb8bdb  8      OPC=movq_r64_m64    
  movq %rdx, 0x28(%rsi)           #  394   0xb8be3  4      OPC=movq_m64_r64    
  movq 0xe0(%rsp), %rdx           #  395   0xb8be7  8      OPC=movq_r64_m64    
  movq %rdx, 0x30(%rsi)           #  396   0xb8bef  4      OPC=movq_m64_r64    
  jmpq .L_b8c87                   #  397   0xb8bf3  5      OPC=jmpq_label_1    
  nop                             #  398   0xb8bf8  1      OPC=nop             
  nop                             #  399   0xb8bf9  1      OPC=nop             
  nop                             #  400   0xb8bfa  1      OPC=nop             
  nop                             #  401   0xb8bfb  1      OPC=nop             
  nop                             #  402   0xb8bfc  1      OPC=nop             
  nop                             #  403   0xb8bfd  1      OPC=nop             
  nop                             #  404   0xb8bfe  1      OPC=nop             
  nop                             #  405   0xb8bff  1      OPC=nop             
.L_b8c00:                         #        0xb8c00  0      OPC=<label>         
  movq $0x7fffffffffffffff, %rdx  #  406   0xb8c00  10     OPC=movq_r64_imm64  
  jmpq .L_b8849                   #  407   0xb8c0a  5      OPC=jmpq_label_1    
  nop                             #  408   0xb8c0f  1      OPC=nop             
.L_b8c10:                         #        0xb8c10  0      OPC=<label>         
  testq %rsi, %rsi                #  409   0xb8c10  3      OPC=testq_r64_r64   
  je .L_b8c00                     #  410   0xb8c13  2      OPC=je_label        
  xorl %r15d, %r15d               #  411   0xb8c15  3      OPC=xorl_r32_r32    
  movq %rbx, 0x58(%rsp)           #  412   0xb8c18  5      OPC=movq_m64_r64    
  movq 0x10(%rsp), %rbp           #  413   0xb8c1d  5      OPC=movq_r64_m64    
  movq %r15, %rbx                 #  414   0xb8c22  3      OPC=movq_r64_r64    
  movq %rsi, %r15                 #  415   0xb8c25  3      OPC=movq_r64_r64    
  jmpq .L_b8c33                   #  416   0xb8c28  2      OPC=jmpq_label      
  nop                             #  417   0xb8c2a  1      OPC=nop             
  nop                             #  418   0xb8c2b  1      OPC=nop             
  nop                             #  419   0xb8c2c  1      OPC=nop             
  nop                             #  420   0xb8c2d  1      OPC=nop             
  nop                             #  421   0xb8c2e  1      OPC=nop             
  nop                             #  422   0xb8c2f  1      OPC=nop             
.L_b8c30:                         #        0xb8c30  0      OPC=<label>         
  movq %r14, %rbx                 #  423   0xb8c30  3      OPC=movq_r64_r64    
.L_b8c33:                         #        0xb8c33  0      OPC=<label>         
  movq %r15, %rdx                 #  424   0xb8c33  3      OPC=movq_r64_r64    
  sarq $0x3f, %rdx                #  425   0xb8c36  4      OPC=sarq_r64_imm8   
  orq $0x1, %rdx                  #  426   0xb8c3a  4      OPC=orq_r64_imm8    
  addq %rbx, %rdx                 #  427   0xb8c3e  3      OPC=addq_r64_r64    
  cmpq %rdx, %r15                 #  428   0xb8c41  3      OPC=cmpq_r64_r64    
  je .L_b8ca0                     #  429   0xb8c44  2      OPC=je_label        
  movq %r15, %r14                 #  430   0xb8c46  3      OPC=movq_r64_r64    
  movq %rbx, %rax                 #  431   0xb8c49  3      OPC=movq_r64_r64    
  movq %r13, %rsi                 #  432   0xb8c4c  3      OPC=movq_r64_r64    
  sarq $0x1, %r14                 #  433   0xb8c4f  3      OPC=sarq_r64_one    
  sarq $0x1, %rax                 #  434   0xb8c52  3      OPC=sarq_r64_one    
  movq %rbp, %rdi                 #  435   0xb8c55  3      OPC=movq_r64_r64    
  addq %r14, %rax                 #  436   0xb8c58  3      OPC=addq_r64_r64    
  movq %rbx, %r14                 #  437   0xb8c5b  3      OPC=movq_r64_r64    
  andq %r15, %r14                 #  438   0xb8c5e  3      OPC=andq_r64_r64    
  andl $0x1, %r14d                #  439   0xb8c61  4      OPC=andl_r32_imm8   
  addq %rax, %r14                 #  440   0xb8c65  3      OPC=addq_r64_r64    
  movq %r14, 0x98(%rsp)           #  441   0xb8c68  8      OPC=movq_m64_r64    
  callq %r12                      #  442   0xb8c70  3      OPC=callq_r64       
  testq %rax, %rax                #  443   0xb8c73  3      OPC=testq_r64_r64   
  jne .L_b8c30                    #  444   0xb8c76  2      OPC=jne_label       
  movq %r14, %r15                 #  445   0xb8c78  3      OPC=movq_r64_r64    
  movq %rbx, %r14                 #  446   0xb8c7b  3      OPC=movq_r64_r64    
  jmpq .L_b8c30                   #  447   0xb8c7e  2      OPC=jmpq_label      
.L_b8c80:                         #        0xb8c80  0      OPC=<label>         
  movq $0xffffffff, %rax          #  448   0xb8c80  7      OPC=movq_r64_imm32  
.L_b8c87:                         #        0xb8c87  0      OPC=<label>         
  addq $0x138, %rsp               #  449   0xb8c87  7      OPC=addq_r64_imm32  
  popq %rbx                       #  450   0xb8c8e  1      OPC=popq_r64_1      
  popq %rbp                       #  451   0xb8c8f  1      OPC=popq_r64_1      
  popq %r12                       #  452   0xb8c90  2      OPC=popq_r64_1      
  popq %r13                       #  453   0xb8c92  2      OPC=popq_r64_1      
  popq %r14                       #  454   0xb8c94  2      OPC=popq_r64_1      
  popq %r15                       #  455   0xb8c96  2      OPC=popq_r64_1      
  retq                            #  456   0xb8c98  1      OPC=retq            
  nop                             #  457   0xb8c99  1      OPC=nop             
  nop                             #  458   0xb8c9a  1      OPC=nop             
  nop                             #  459   0xb8c9b  1      OPC=nop             
  nop                             #  460   0xb8c9c  1      OPC=nop             
  nop                             #  461   0xb8c9d  1      OPC=nop             
  nop                             #  462   0xb8c9e  1      OPC=nop             
  nop                             #  463   0xb8c9f  1      OPC=nop             
.L_b8ca0:                         #        0xb8ca0  0      OPC=<label>         
  movq %rbx, %r15                 #  464   0xb8ca0  3      OPC=movq_r64_r64    
  movq %rax, %rdi                 #  465   0xb8ca3  3      OPC=movq_r64_r64    
  movq 0x58(%rsp), %rbx           #  466   0xb8ca6  5      OPC=movq_r64_m64    
  testq %r15, %r15                #  467   0xb8cab  3      OPC=testq_r64_r64   
  je .L_b8ccb                     #  468   0xb8cae  2      OPC=je_label        
  testq %rax, %rax                #  469   0xb8cb0  3      OPC=testq_r64_r64   
  jne .L_b8ccb                    #  470   0xb8cb3  2      OPC=jne_label       
  movq 0x10(%rsp), %rdi           #  471   0xb8cb5  5      OPC=movq_r64_m64    
  movq %r15, 0x98(%rsp)           #  472   0xb8cba  8      OPC=movq_m64_r64    
  movq %r13, %rsi                 #  473   0xb8cc2  3      OPC=movq_r64_r64    
  callq %r12                      #  474   0xb8cc5  3      OPC=callq_r64       
  movq %rax, %rdi                 #  475   0xb8cc8  3      OPC=movq_r64_r64    
.L_b8ccb:                         #        0xb8ccb  0      OPC=<label>         
  testq %rdi, %rdi                #  476   0xb8ccb  3      OPC=testq_r64_r64   
  movq 0x98(%rsp), %rsi           #  477   0xb8cce  8      OPC=movq_r64_m64    
  jne .L_b88a6                    #  478   0xb8cd6  6      OPC=jne_label_1     
  testq %rsi, %rsi                #  479   0xb8cdc  3      OPC=testq_r64_r64   
  jns .L_b89a0                    #  480   0xb8cdf  6      OPC=jns_label_1     
  nop                             #  481   0xb8ce5  1      OPC=nop             
  nop                             #  482   0xb8ce6  1      OPC=nop             
  nop                             #  483   0xb8ce7  1      OPC=nop             
.L_b8ce8:                         #        0xb8ce8  0      OPC=<label>         
  movq $0x8000000000000002, %rax  #  484   0xb8ce8  10     OPC=movq_r64_imm64  
  leaq 0x1(%rsi), %rdx            #  485   0xb8cf2  4      OPC=leaq_r64_m16    
  cmpq %rax, %rsi                 #  486   0xb8cf6  3      OPC=cmpq_r64_r64    
  jl .L_b8840                     #  487   0xb8cf9  6      OPC=jl_label_1      
  movq $0x8000000000000000, %rdx  #  488   0xb8cff  10     OPC=movq_r64_imm64  
  jmpq .L_b8849                   #  489   0xb8d09  5      OPC=jmpq_label_1    
  xchgw %ax, %ax                  #  490   0xb8d0e  2      OPC=xchgw_ax_r16    
.L_b8d10:                         #        0xb8d10  0      OPC=<label>         
  andl $0x3, %edx                 #  491   0xb8d10  3      OPC=andl_r32_imm8   
  xorl %eax, %eax                 #  492   0xb8d13  2      OPC=xorl_r32_r32    
  cmpq $0x1, %rdx                 #  493   0xb8d15  4      OPC=cmpq_r64_imm8   
  sete %al                        #  494   0xb8d19  3      OPC=sete_r8         
  jmpq .L_b86c2                   #  495   0xb8d1c  5      OPC=jmpq_label_1    
  nop                             #  496   0xb8d21  1      OPC=nop             
  nop                             #  497   0xb8d22  1      OPC=nop             
  nop                             #  498   0xb8d23  1      OPC=nop             
  nop                             #  499   0xb8d24  1      OPC=nop             
  nop                             #  500   0xb8d25  1      OPC=nop             
  nop                             #  501   0xb8d26  1      OPC=nop             
  nop                             #  502   0xb8d27  1      OPC=nop             
.L_b8d28:                         #        0xb8d28  0      OPC=<label>         
  testl %eax, %eax                #  503   0xb8d28  2      OPC=testl_r32_r32   
  setne %al                       #  504   0xb8d2a  3      OPC=setne_r8        
  movzbl %al, %eax                #  505   0xb8d2d  3      OPC=movzbl_r32_r8   
  cmpl %eax, 0x40(%rsp)           #  506   0xb8d30  4      OPC=cmpl_m32_r32    
  jg .L_b8852                     #  507   0xb8d34  6      OPC=jg_label_1      
  jmpq .L_b8b05                   #  508   0xb8d3a  5      OPC=jmpq_label_1    
  nop                             #  509   0xb8d3f  1      OPC=nop             
.L_b8d40:                         #        0xb8d40  0      OPC=<label>         
  movq $0x0, 0x8(%rsp)            #  510   0xb8d40  9      OPC=movq_m64_imm32  
  movl $0x0, 0x64(%rsp)           #  511   0xb8d49  8      OPC=movl_m32_imm32  
  jmpq .L_b8729                   #  512   0xb8d51  5      OPC=jmpq_label_1    
  nop                             #  513   0xb8d56  1      OPC=nop             
  nop                             #  514   0xb8d57  1      OPC=nop             
  nop                             #  515   0xb8d58  1      OPC=nop             
  nop                             #  516   0xb8d59  1      OPC=nop             
  nop                             #  517   0xb8d5a  1      OPC=nop             
  nop                             #  518   0xb8d5b  1      OPC=nop             
  nop                             #  519   0xb8d5c  1      OPC=nop             
  nop                             #  520   0xb8d5d  1      OPC=nop             
  nop                             #  521   0xb8d5e  1      OPC=nop             
  nop                             #  522   0xb8d5f  1      OPC=nop             
.L_b8d60:                         #        0xb8d60  0      OPC=<label>         
  movslq %eax, %rbx               #  523   0xb8d60  3      OPC=movslq_r64_r32  
  movl %eax, 0x64(%rsp)           #  524   0xb8d63  4      OPC=movl_m32_r32    
  movq %rbx, 0x8(%rsp)            #  525   0xb8d67  5      OPC=movq_m64_r64    
  jmpq .L_b8729                   #  526   0xb8d6c  5      OPC=jmpq_label_1    
  nop                             #  527   0xb8d71  1      OPC=nop             
  nop                             #  528   0xb8d72  1      OPC=nop             
  nop                             #  529   0xb8d73  1      OPC=nop             
  nop                             #  530   0xb8d74  1      OPC=nop             
  nop                             #  531   0xb8d75  1      OPC=nop             
  nop                             #  532   0xb8d76  1      OPC=nop             
  nop                             #  533   0xb8d77  1      OPC=nop             
.L_b8d78:                         #        0xb8d78  0      OPC=<label>         
  movslq 0x104(%rsp), %rcx        #  534   0xb8d78  8      OPC=movslq_r64_m32  
  xorl %eax, %eax                 #  535   0xb8d80  2      OPC=xorl_r32_r32    
  movl $0x51eb851f, %edx          #  536   0xb8d82  5      OPC=movl_r32_imm32  
  movq 0x38(%rsp), %rdi           #  537   0xb8d87  5      OPC=movq_r64_m64    
  movq 0x30(%rsp), %r8            #  538   0xb8d8c  5      OPC=movq_r64_m64    
  movq %r15, %r12                 #  539   0xb8d91  3      OPC=movq_r64_r64    
  movq 0xa8(%rsp), %rsi           #  540   0xb8d94  8      OPC=movq_r64_m64    
  movq 0x80(%rsp), %r13           #  541   0xb8d9c  8      OPC=movq_r64_m64    
  movl %ecx, %r9d                 #  542   0xb8da4  3      OPC=movl_r32_r32    
  sarl $0x2, %r9d                 #  543   0xb8da7  4      OPC=sarl_r32_imm8   
  addl $0x1db, %r9d               #  544   0xb8dab  7      OPC=addl_r32_imm32  
  testb $0x3, %cl                 #  545   0xb8db2  3      OPC=testb_r8_imm8   
  sete %al                        #  546   0xb8db5  3      OPC=sete_r8         
  subl %eax, %r9d                 #  547   0xb8db8  3      OPC=subl_r32_r32    
  movl %r9d, %eax                 #  548   0xb8dbb  3      OPC=movl_r32_r32    
  movl %r9d, %ebx                 #  549   0xb8dbe  3      OPC=movl_r32_r32    
  imull %edx                      #  550   0xb8dc1  2      OPC=imull_r32       
  movl %r9d, %eax                 #  551   0xb8dc3  3      OPC=movl_r32_r32    
  sarl $0x1f, %eax                #  552   0xb8dc6  3      OPC=sarl_r32_imm8   
  sarl $0x3, %edx                 #  553   0xb8dc9  3      OPC=sarl_r32_imm8   
  subl %eax, %edx                 #  554   0xb8dcc  2      OPC=subl_r32_r32    
  leal (%rdx,%rdx,4), %eax        #  555   0xb8dce  3      OPC=leal_r32_m16    
  leal (%rax,%rax,4), %eax        #  556   0xb8dd1  3      OPC=leal_r32_m16    
  subl %eax, %ebx                 #  557   0xb8dd4  2      OPC=subl_r32_r32    
  movl %ebx, %eax                 #  558   0xb8dd6  2      OPC=movl_r32_r32    
  shrl $0x1f, %eax                #  559   0xb8dd8  3      OPC=shrl_r32_imm8   
  subl %eax, %edx                 #  560   0xb8ddb  2      OPC=subl_r32_r32    
  movslq 0xf4(%rsp), %rax         #  561   0xb8ddd  8      OPC=movslq_r64_m32  
  subq %rax, %rdi                 #  562   0xb8de5  3      OPC=subq_r64_r64    
  movslq 0xf8(%rsp), %rax         #  563   0xb8de8  8      OPC=movslq_r64_m32  
  subq %rax, %r8                  #  564   0xb8df0  3      OPC=subq_r64_r64    
  movq (%rsp), %rax               #  565   0xb8df3  4      OPC=movq_r64_m64    
  subq %rcx, %rax                 #  566   0xb8df7  3      OPC=subq_r64_r64    
  movq %rax, %rcx                 #  567   0xb8dfa  3      OPC=movq_r64_r64    
  leaq (%rax,%rax,8), %rax        #  568   0xb8dfd  4      OPC=leaq_r64_m16    
  leaq (%rcx,%rax,8), %rax        #  569   0xb8e01  4      OPC=leaq_r64_m16    
  movslq 0x10c(%rsp), %rcx        #  570   0xb8e05  8      OPC=movslq_r64_m32  
  leaq (%rax,%rax,4), %rax        #  571   0xb8e0d  4      OPC=leaq_r64_m16    
  subq %rcx, %rax                 #  572   0xb8e11  3      OPC=subq_r64_r64    
  movq 0x18(%rsp), %rcx           #  573   0xb8e14  5      OPC=movq_r64_m64    
  addq %rax, %rcx                 #  574   0xb8e19  3      OPC=addq_r64_r64    
  movl %edx, %eax                 #  575   0xb8e1c  2      OPC=movl_r32_r32    
  sarl $0x2, %edx                 #  576   0xb8e1e  3      OPC=sarl_r32_imm8   
  subl %r9d, %eax                 #  577   0xb8e21  3      OPC=subl_r32_r32    
  addl 0x24(%rsp), %eax           #  578   0xb8e24  4      OPC=addl_r32_m32    
  subl %edx, %eax                 #  579   0xb8e28  2      OPC=subl_r32_r32    
  addl 0x2c(%rsp), %eax           #  580   0xb8e2a  4      OPC=addl_r32_m32    
  subl 0x28(%rsp), %eax           #  581   0xb8e2e  4      OPC=subl_r32_m32    
  cltq                            #  582   0xb8e32  2      OPC=cltq            
  addq %rcx, %rax                 #  583   0xb8e34  3      OPC=addq_r64_r64    
  leaq (%rax,%rax,2), %rax        #  584   0xb8e37  4      OPC=leaq_r64_m16    
  leaq (%r8,%rax,8), %rax         #  585   0xb8e3b  4      OPC=leaq_r64_m16    
  leaq (,%rax,4), %rdx            #  586   0xb8e3f  8      OPC=leaq_r64_m16    
  shlq $0x6, %rax                 #  587   0xb8e47  4      OPC=shlq_r64_imm8   
  subq %rdx, %rax                 #  588   0xb8e4b  3      OPC=subq_r64_r64    
  addq %rax, %rdi                 #  589   0xb8e4e  3      OPC=addq_r64_r64    
  leaq (,%rdi,4), %rax            #  590   0xb8e51  8      OPC=leaq_r64_m16    
  shlq $0x6, %rdi                 #  591   0xb8e59  4      OPC=shlq_r64_imm8   
  subq %rax, %rdi                 #  592   0xb8e5d  3      OPC=subq_r64_r64    
  movslq 0xf0(%rsp), %rax         #  593   0xb8e60  8      OPC=movslq_r64_m32  
  subq %rax, %rdi                 #  594   0xb8e68  3      OPC=subq_r64_r64    
  movq 0x8(%rsp), %rax            #  595   0xb8e6b  5      OPC=movq_r64_m64    
  addq %rdi, %rax                 #  596   0xb8e70  3      OPC=addq_r64_r64    
  leaq (%rax,%rsi,1), %rdx        #  597   0xb8e73  4      OPC=leaq_r64_m16    
  cmpq %rdx, %rsi                 #  598   0xb8e77  3      OPC=cmpq_r64_r64    
  setle %cl                       #  599   0xb8e7a  3      OPC=setle_r8        
  shrq $0x3f, %rax                #  600   0xb8e7d  4      OPC=shrq_r64_imm8   
  cmpb %al, %cl                   #  601   0xb8e81  2      OPC=cmpb_r8_r8      
  je .L_b9000                     #  602   0xb8e83  6      OPC=je_label_1      
.L_b8e89:                         #        0xb8e89  0      OPC=<label>         
  movq %rdx, 0x98(%rsp)           #  603   0xb8e89  8      OPC=movq_m64_r64    
  movq %r13, %rsi                 #  604   0xb8e91  3      OPC=movq_r64_r64    
  movq 0x10(%rsp), %rdi           #  605   0xb8e94  5      OPC=movq_r64_m64    
  callq %r12                      #  606   0xb8e99  3      OPC=callq_r64       
  testq %rax, %rax                #  607   0xb8e9c  3      OPC=testq_r64_r64   
  movq %rax, %rcx                 #  608   0xb8e9f  3      OPC=movq_r64_r64    
  je .L_b8f83                     #  609   0xb8ea2  6      OPC=je_label_1      
.L_b8ea8:                         #        0xb8ea8  0      OPC=<label>         
  movq 0x98(%rsp), %rax           #  610   0xb8ea8  8      OPC=movq_r64_m64    
  jmpq .L_b8b08                   #  611   0xb8eb0  5      OPC=jmpq_label_1    
  nop                             #  612   0xb8eb5  1      OPC=nop             
  nop                             #  613   0xb8eb6  1      OPC=nop             
  nop                             #  614   0xb8eb7  1      OPC=nop             
.L_b8eb8:                         #        0xb8eb8  0      OPC=<label>         
  movq 0xa8(%rsp), %r12           #  615   0xb8eb8  8      OPC=movq_r64_m64    
  testq %r12, %r12                #  616   0xb8ec0  3      OPC=testq_r64_r64   
  je .L_b8a91                     #  617   0xb8ec3  6      OPC=je_label_1      
  movl %ebx, 0x88(%rsp)           #  618   0xb8ec9  7      OPC=movl_m32_r32    
  movl %r14d, 0x8c(%rsp)          #  619   0xb8ed0  8      OPC=movl_m32_r32    
  xorl %ebp, %ebp                 #  620   0xb8ed8  2      OPC=xorl_r32_r32    
  movq %r12, %r14                 #  621   0xb8eda  3      OPC=movq_r64_r64    
  movq 0x68(%rsp), %rbx           #  622   0xb8edd  5      OPC=movq_r64_m64    
  movq 0x58(%rsp), %r12           #  623   0xb8ee2  5      OPC=movq_r64_m64    
  jmpq .L_b8ef3                   #  624   0xb8ee7  2      OPC=jmpq_label      
  nop                             #  625   0xb8ee9  1      OPC=nop             
  nop                             #  626   0xb8eea  1      OPC=nop             
  nop                             #  627   0xb8eeb  1      OPC=nop             
  nop                             #  628   0xb8eec  1      OPC=nop             
  nop                             #  629   0xb8eed  1      OPC=nop             
  nop                             #  630   0xb8eee  1      OPC=nop             
  nop                             #  631   0xb8eef  1      OPC=nop             
.L_b8ef0:                         #        0xb8ef0  0      OPC=<label>         
  movq %r13, %rbp                 #  632   0xb8ef0  3      OPC=movq_r64_r64    
.L_b8ef3:                         #        0xb8ef3  0      OPC=<label>         
  movq %r14, %rdx                 #  633   0xb8ef3  3      OPC=movq_r64_r64    
  sarq $0x3f, %rdx                #  634   0xb8ef6  4      OPC=sarq_r64_imm8   
  orq $0x1, %rdx                  #  635   0xb8efa  4      OPC=orq_r64_imm8    
  addq %rbp, %rdx                 #  636   0xb8efe  3      OPC=addq_r64_r64    
  cmpq %rdx, %r14                 #  637   0xb8f01  3      OPC=cmpq_r64_r64    
  je .L_b8f40                     #  638   0xb8f04  2      OPC=je_label        
  movq %r14, %r13                 #  639   0xb8f06  3      OPC=movq_r64_r64    
  movq %rbp, %rax                 #  640   0xb8f09  3      OPC=movq_r64_r64    
  movq %r12, %rsi                 #  641   0xb8f0c  3      OPC=movq_r64_r64    
  sarq $0x1, %r13                 #  642   0xb8f0f  3      OPC=sarq_r64_one    
  sarq $0x1, %rax                 #  643   0xb8f12  3      OPC=sarq_r64_one    
  movq %rbx, %rdi                 #  644   0xb8f15  3      OPC=movq_r64_r64    
  addq %r13, %rax                 #  645   0xb8f18  3      OPC=addq_r64_r64    
  movq %rbp, %r13                 #  646   0xb8f1b  3      OPC=movq_r64_r64    
  andq %r14, %r13                 #  647   0xb8f1e  3      OPC=andq_r64_r64    
  andl $0x1, %r13d                #  648   0xb8f21  4      OPC=andl_r32_imm8   
  addq %rax, %r13                 #  649   0xb8f25  3      OPC=addq_r64_r64    
  movq %r13, 0xa8(%rsp)           #  650   0xb8f28  8      OPC=movq_m64_r64    
  callq %r15                      #  651   0xb8f30  3      OPC=callq_r64       
  testq %rax, %rax                #  652   0xb8f33  3      OPC=testq_r64_r64   
  jne .L_b8ef0                    #  653   0xb8f36  2      OPC=jne_label       
  movq %r13, %r14                 #  654   0xb8f38  3      OPC=movq_r64_r64    
  movq %rbp, %r13                 #  655   0xb8f3b  3      OPC=movq_r64_r64    
  jmpq .L_b8ef0                   #  656   0xb8f3e  2      OPC=jmpq_label      
.L_b8f40:                         #        0xb8f40  0      OPC=<label>         
  testq %rbp, %rbp                #  657   0xb8f40  3      OPC=testq_r64_r64   
  movl 0x88(%rsp), %ebx           #  658   0xb8f43  7      OPC=movl_r32_m32    
  movl 0x8c(%rsp), %r14d          #  659   0xb8f4a  8      OPC=movl_r32_m32    
  je .L_b8a91                     #  660   0xb8f52  6      OPC=je_label_1      
  testq %rax, %rax                #  661   0xb8f58  3      OPC=testq_r64_r64   
  jne .L_b8a91                    #  662   0xb8f5b  6      OPC=jne_label_1     
  movq %rbp, 0xa8(%rsp)           #  663   0xb8f61  8      OPC=movq_m64_r64    
  movq 0x58(%rsp), %rsi           #  664   0xb8f69  5      OPC=movq_r64_m64    
  movq 0x68(%rsp), %rdi           #  665   0xb8f6e  5      OPC=movq_r64_m64    
  callq %r15                      #  666   0xb8f73  3      OPC=callq_r64       
  jmpq .L_b8a91                   #  667   0xb8f76  5      OPC=jmpq_label_1    
.L_b8f7b:                         #        0xb8f7b  0      OPC=<label>         
  movq %rsi, %rax                 #  668   0xb8f7b  3      OPC=movq_r64_r64    
  jmpq .L_b8b08                   #  669   0xb8f7e  5      OPC=jmpq_label_1    
.L_b8f83:                         #        0xb8f83  0      OPC=<label>         
  movq 0x98(%rsp), %rbp           #  670   0xb8f83  8      OPC=movq_r64_m64    
  xorl %eax, %eax                 #  671   0xb8f8b  2      OPC=xorl_r32_r32    
  testq %rbp, %rbp                #  672   0xb8f8d  3      OPC=testq_r64_r64   
  je .L_b8b08                     #  673   0xb8f90  6      OPC=je_label_1      
  xorl %r14d, %r14d               #  674   0xb8f96  3      OPC=xorl_r32_r32    
  movq %rcx, %rax                 #  675   0xb8f99  3      OPC=movq_r64_r64    
  movq 0x10(%rsp), %r15           #  676   0xb8f9c  5      OPC=movq_r64_m64    
  jmpq .L_b8fab                   #  677   0xb8fa1  2      OPC=jmpq_label      
  nop                             #  678   0xb8fa3  1      OPC=nop             
  nop                             #  679   0xb8fa4  1      OPC=nop             
  nop                             #  680   0xb8fa5  1      OPC=nop             
  nop                             #  681   0xb8fa6  1      OPC=nop             
  nop                             #  682   0xb8fa7  1      OPC=nop             
.L_b8fa8:                         #        0xb8fa8  0      OPC=<label>         
  movq %rbx, %r14                 #  683   0xb8fa8  3      OPC=movq_r64_r64    
.L_b8fab:                         #        0xb8fab  0      OPC=<label>         
  movq %rbp, %rdx                 #  684   0xb8fab  3      OPC=movq_r64_r64    
  sarq $0x3f, %rdx                #  685   0xb8fae  4      OPC=sarq_r64_imm8   
  orq $0x1, %rdx                  #  686   0xb8fb2  4      OPC=orq_r64_imm8    
  addq %r14, %rdx                 #  687   0xb8fb6  3      OPC=addq_r64_r64    
  cmpq %rdx, %rbp                 #  688   0xb8fb9  3      OPC=cmpq_r64_r64    
  je .L_b902e                     #  689   0xb8fbc  2      OPC=je_label        
  movq %rbp, %rdx                 #  690   0xb8fbe  3      OPC=movq_r64_r64    
  movq %r14, %rax                 #  691   0xb8fc1  3      OPC=movq_r64_r64    
  movq %r14, %rbx                 #  692   0xb8fc4  3      OPC=movq_r64_r64    
  sarq $0x1, %rax                 #  693   0xb8fc7  3      OPC=sarq_r64_one    
  andq %rbp, %rbx                 #  694   0xb8fca  3      OPC=andq_r64_r64    
  sarq $0x1, %rdx                 #  695   0xb8fcd  3      OPC=sarq_r64_one    
  addq %rax, %rdx                 #  696   0xb8fd0  3      OPC=addq_r64_r64    
  movq %rbx, %rax                 #  697   0xb8fd3  3      OPC=movq_r64_r64    
  movq %r13, %rsi                 #  698   0xb8fd6  3      OPC=movq_r64_r64    
  andl $0x1, %eax                 #  699   0xb8fd9  3      OPC=andl_r32_imm8   
  movq %r15, %rdi                 #  700   0xb8fdc  3      OPC=movq_r64_r64    
  leaq (%rdx,%rax,1), %rbx        #  701   0xb8fdf  4      OPC=leaq_r64_m16    
  movq %rbx, 0x98(%rsp)           #  702   0xb8fe3  8      OPC=movq_m64_r64    
  callq %r12                      #  703   0xb8feb  3      OPC=callq_r64       
  testq %rax, %rax                #  704   0xb8fee  3      OPC=testq_r64_r64   
  jne .L_b8fa8                    #  705   0xb8ff1  2      OPC=jne_label       
  movq %rbx, %rbp                 #  706   0xb8ff3  3      OPC=movq_r64_r64    
  movq %r14, %rbx                 #  707   0xb8ff6  3      OPC=movq_r64_r64    
  jmpq .L_b8fa8                   #  708   0xb8ff9  2      OPC=jmpq_label      
  nop                             #  709   0xb8ffb  1      OPC=nop             
  nop                             #  710   0xb8ffc  1      OPC=nop             
  nop                             #  711   0xb8ffd  1      OPC=nop             
  nop                             #  712   0xb8ffe  1      OPC=nop             
  nop                             #  713   0xb8fff  1      OPC=nop             
.L_b9000:                         #        0xb9000  0      OPC=<label>         
  testq %rsi, %rsi                #  714   0xb9000  3      OPC=testq_r64_r64   
  js .L_b9058                     #  715   0xb9003  2      OPC=js_label        
  movq $0x7ffffffffffffffd, %rdx  #  716   0xb9005  10     OPC=movq_r64_imm64  
  leaq -0x1(%rsi), %rax           #  717   0xb900f  4      OPC=leaq_r64_m16    
  cmpq %rdx, %rsi                 #  718   0xb9013  3      OPC=cmpq_r64_r64    
  movb $0xff, %dl                 #  719   0xb9016  3      OPC=movb_r8_imm8_1  
  cmovgq %rax, %rdx               #  720   0xb9019  4      OPC=cmovgq_r64_r64  
  jmpq .L_b8e89                   #  721   0xb901d  5      OPC=jmpq_label_1    
.L_b9021:                         #        0xb9022  0      OPC=<label>         
  movq 0x80(%rsp), %r13           #  722   0xb9022  8      OPC=movq_r64_m64    
  jmpq .L_b8b08                   #  723   0xb902a  5      OPC=jmpq_label_1    
.L_b902e:                         #        0xb902f  0      OPC=<label>         
  testq %r14, %r14                #  724   0xb902f  3      OPC=testq_r64_r64   
  je .L_b8ea8                     #  725   0xb9032  6      OPC=je_label_1      
  testq %rax, %rax                #  726   0xb9038  3      OPC=testq_r64_r64   
  jne .L_b8ea8                    #  727   0xb903b  6      OPC=jne_label_1     
  movq %r14, 0x98(%rsp)           #  728   0xb9041  8      OPC=movq_m64_r64    
  movq %r13, %rsi                 #  729   0xb9049  3      OPC=movq_r64_r64    
  movq 0x10(%rsp), %rdi           #  730   0xb904c  5      OPC=movq_r64_m64    
  callq %r12                      #  731   0xb9051  3      OPC=callq_r64       
  jmpq .L_b8ea8                   #  732   0xb9054  5      OPC=jmpq_label_1    
.L_b9058:                         #        0xb9059  0      OPC=<label>         
  movq $0x8000000000000002, %rdx  #  733   0xb9059  10     OPC=movq_r64_imm64  
  leaq 0x1(%rsi), %rax            #  734   0xb9063  4      OPC=leaq_r64_m16    
  cmpq %rdx, %rsi                 #  735   0xb9067  3      OPC=cmpq_r64_r64    
  movb $0x0, %dl                  #  736   0xb906a  2      OPC=movb_r8_imm8    
  cmovlq %rax, %rdx               #  737   0xb906c  4      OPC=cmovlq_r64_r64  
  jmpq .L_b8e89                   #  738   0xb9070  5      OPC=jmpq_label_1    
  nop                             #  739   0xb9075  1      OPC=nop             
  nop                             #  740   0xb9076  1      OPC=nop             
  nop                             #  741   0xb9077  1      OPC=nop             
  nop                             #  742   0xb9078  1      OPC=nop             
  nop                             #  743   0xb9079  1      OPC=nop             
  nop                             #  744   0xb907a  1      OPC=nop             
  nop                             #  745   0xb907b  1      OPC=nop             
  nop                             #  746   0xb907c  1      OPC=nop             
  nop                             #  747   0xb907d  1      OPC=nop             
  nop                             #  748   0xb907e  1      OPC=nop             
  nop                             #  749   0xb907f  1      OPC=nop             
  nop                             #  750   0xb9080  1      OPC=nop             
                                                                               
.size __mktime_internal, .-__mktime_internal

