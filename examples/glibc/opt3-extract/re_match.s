  .text
  .globl re_match
  .type re_match, @function

#! file-offset 0xe5a30
#! rip-offset  0xe5a30
#! capacity    1360 bytes

# Text                              #  Line  RIP      Bytes  Opcode                   
.re_match:                          #        0xe5a30  0      OPC=<label>              
  pushq %r15                        #  1     0xe5a30  2      OPC=pushq_r64_1          
  pushq %r14                        #  2     0xe5a32  2      OPC=pushq_r64_1          
  movl %ecx, %r14d                  #  3     0xe5a34  3      OPC=movl_r32_r32         
  pushq %r13                        #  4     0xe5a37  2      OPC=pushq_r64_1          
  pushq %r12                        #  5     0xe5a39  2      OPC=pushq_r64_1          
  movq %rdi, %r13                   #  6     0xe5a3b  3      OPC=movq_r64_r64         
  pushq %rbp                        #  7     0xe5a3e  1      OPC=pushq_r64_1          
  pushq %rbx                        #  8     0xe5a3f  1      OPC=pushq_r64_1          
  subq $0x28, %rsp                  #  9     0xe5a40  4      OPC=subq_r64_imm8        
  cmpl %ecx, %edx                   #  10    0xe5a44  2      OPC=cmpl_r32_r32         
  movq (%rdi), %rbp                 #  11    0xe5a46  3      OPC=movq_r64_m64         
  movq %rsi, (%rsp)                 #  12    0xe5a49  4      OPC=movq_m64_r64         
  jl .L_e5ea8                       #  13    0xe5a4d  6      OPC=jl_label_1           
  movl %ecx, %eax                   #  14    0xe5a53  2      OPC=movl_r32_r32         
  shrl $0x1f, %eax                  #  15    0xe5a55  3      OPC=shrl_r32_imm8        
  testb %al, %al                    #  16    0xe5a58  2      OPC=testb_r8_r8          
  jne .L_e5ea8                      #  17    0xe5a5a  6      OPC=jne_label_1          
  movq %r8, %r12                    #  18    0xe5a60  3      OPC=movq_r64_r64         
  movl $0x1, %esi                   #  19    0xe5a63  5      OPC=movl_r32_imm32       
  xorl %eax, %eax                   #  20    0xe5a68  2      OPC=xorl_r32_r32         
  cmpl $0x0, 0x2e118f(%rip)         #  21    0xe5a6a  7      OPC=cmpl_m32_imm8        
  je .L_e5a7f                       #  22    0xe5a71  2      OPC=je_label             
  lock                              #  23    0xe5a73  1      OPC=lock                 
  cmpxchgl %esi, 0xd8(%rbp)         #  24    0xe5a74  7      OPC=cmpxchgl_m32_r32     
  nop                               #  25    0xe5a7b  1      OPC=nop                  
  jne .L_e5a88                      #  26    0xe5a7c  2      OPC=jne_label            
  jmpq .L_e5aa2                     #  27    0xe5a7e  2      OPC=jmpq_label           
.L_e5a7f:                           #        0xe5a80  0      OPC=<label>              
  cmpxchgl %esi, 0xd8(%rbp)         #  28    0xe5a80  7      OPC=cmpxchgl_m32_r32     
  je .L_e5aa2                       #  29    0xe5a87  2      OPC=je_label             
.L_e5a88:                           #        0xe5a89  0      OPC=<label>              
  leaq 0xd8(%rbp), %rdi             #  30    0xe5a89  7      OPC=leaq_r64_m16         
  subq $0x80, %rsp                  #  31    0xe5a90  7      OPC=subq_r64_imm32       
  callq .__lll_lock_wait_private    #  32    0xe5a97  5      OPC=callq_label          
  addq $0x80, %rsp                  #  33    0xe5a9c  7      OPC=addq_r64_imm32       
.L_e5aa2:                           #        0xe5aa3  0      OPC=<label>              
  movzbl 0x38(%r13), %r15d          #  34    0xe5aa3  5      OPC=movzbl_r32_m8        
  movl %r15d, %r8d                  #  35    0xe5aa8  3      OPC=movl_r32_r32         
  shrl $0x5, %r8d                   #  36    0xe5aab  4      OPC=shrl_r32_imm8        
  andl $0x2, %r8d                   #  37    0xe5aaf  4      OPC=andl_r32_imm8        
  testq %r12, %r12                  #  38    0xe5ab3  3      OPC=testq_r64_r64        
  je .L_e5d80                       #  39    0xe5ab6  6      OPC=je_label_1           
  testb $0x10, %r15b                #  40    0xe5abc  4      OPC=testb_r8_imm8        
  jne .L_e5d80                      #  41    0xe5ac0  6      OPC=jne_label_1          
  movl %r15d, %eax                  #  42    0xe5ac6  3      OPC=movl_r32_r32         
  andl $0x6, %eax                   #  43    0xe5ac9  3      OPC=andl_r32_imm8        
  cmpb $0x4, %al                    #  44    0xe5acc  2      OPC=cmpb_al_imm8         
  je .L_e5d60                       #  45    0xe5ace  6      OPC=je_label_1           
  movq 0x30(%r13), %rax             #  46    0xe5ad4  4      OPC=movq_r64_m64         
.L_e5ad7:                           #        0xe5ad8  0      OPC=<label>              
  leal 0x1(%rax), %ebx              #  47    0xe5ad8  3      OPC=leal_r32_m16         
.L_e5ada:                           #        0xe5adb  0      OPC=<label>              
  movslq %ebx, %rsi                 #  48    0xe5adb  3      OPC=movslq_r64_r32       
  leaq (,%rsi,8), %rdi              #  49    0xe5ade  8      OPC=leaq_r64_m16         
.L_e5ae5:                           #        0xe5ae6  0      OPC=<label>              
  movl %edx, 0x1c(%rsp)             #  50    0xe5ae6  4      OPC=movl_m32_r32         
  movq %rsi, 0x10(%rsp)             #  51    0xe5aea  5      OPC=movq_m64_r64         
  movl %r8d, 0x8(%rsp)              #  52    0xe5aef  5      OPC=movl_m32_r32         
  callq .memalign_plt               #  53    0xe5af4  5      OPC=callq_label          
  testq %rax, %rax                  #  54    0xe5af9  3      OPC=testq_r64_r64        
  je .L_e5d50                       #  55    0xe5afc  6      OPC=je_label_1           
  subq $0x8, %rsp                   #  56    0xe5b02  4      OPC=subq_r64_imm8        
  movl %r15d, %ecx                  #  57    0xe5b06  3      OPC=movl_r32_r32         
  movq %r13, %rdi                   #  58    0xe5b09  3      OPC=movq_r64_r64         
  movl 0x10(%rsp), %r8d             #  59    0xe5b0c  5      OPC=movl_r32_m32         
  shrb $0x5, %cl                    #  60    0xe5b11  3      OPC=shrb_r8_imm8         
  andl $0x1, %ecx                   #  61    0xe5b14  3      OPC=andl_r32_imm8        
  orl %r8d, %ecx                    #  62    0xe5b17  3      OPC=orl_r32_r32          
  xorl %r8d, %r8d                   #  63    0xe5b1a  3      OPC=xorl_r32_r32         
  pushq %rcx                        #  64    0xe5b1d  1      OPC=pushq_r64_1          
  pushq %rax                        #  65    0xe5b1e  1      OPC=pushq_r64_1          
  movl %r14d, %ecx                  #  66    0xe5b1f  3      OPC=movl_r32_r32         
  movq 0x28(%rsp), %rsi             #  67    0xe5b22  5      OPC=movq_r64_m64         
  movq %rax, 0x20(%rsp)             #  68    0xe5b27  5      OPC=movq_m64_r64         
  pushq %rsi                        #  69    0xe5b2c  1      OPC=pushq_r64_1          
  movl 0x3c(%rsp), %edx             #  70    0xe5b2d  4      OPC=movl_r32_m32         
  movq 0x20(%rsp), %rsi             #  71    0xe5b31  5      OPC=movq_r64_m64         
  movl %edx, %r9d                   #  72    0xe5b36  3      OPC=movl_r32_r32         
  callq .re_search_internal         #  73    0xe5b39  5      OPC=callq_label          
  addq $0x20, %rsp                  #  74    0xe5b3e  4      OPC=addq_r64_imm8        
  testl %eax, %eax                  #  75    0xe5b42  2      OPC=testl_r32_r32        
  movq 0x8(%rsp), %r10              #  76    0xe5b44  5      OPC=movq_r64_m64         
  je .L_e5ba0                       #  77    0xe5b49  2      OPC=je_label             
  movl $0xffffffff, %ebx            #  78    0xe5b4b  6      OPC=movl_r32_imm32_1     
.L_e5b4f:                           #        0xe5b51  0      OPC=<label>              
  movq %r10, %rdi                   #  79    0xe5b51  3      OPC=movq_r64_r64         
  callq .L_1f8c0                    #  80    0xe5b54  5      OPC=callq_label          
.L_e5b57:                           #        0xe5b59  0      OPC=<label>              
  cmpl $0x0, 0x2e10a2(%rip)         #  81    0xe5b59  7      OPC=cmpl_m32_imm8        
  je .L_e5b6b                       #  82    0xe5b60  2      OPC=je_label             
  lock                              #  83    0xe5b62  1      OPC=lock                 
  decl 0xd8(%rbp)                   #  84    0xe5b63  6      OPC=decl_m32             
  nop                               #  85    0xe5b69  1      OPC=nop                  
  jne .L_e5b73                      #  86    0xe5b6a  2      OPC=jne_label            
  jmpq .L_e5b8d                     #  87    0xe5b6c  2      OPC=jmpq_label           
.L_e5b6b:                           #        0xe5b6e  0      OPC=<label>              
  decl 0xd8(%rbp)                   #  88    0xe5b6e  6      OPC=decl_m32             
  je .L_e5b8d                       #  89    0xe5b74  2      OPC=je_label             
.L_e5b73:                           #        0xe5b76  0      OPC=<label>              
  leaq 0xd8(%rbp), %rdi             #  90    0xe5b76  7      OPC=leaq_r64_m16         
  subq $0x80, %rsp                  #  91    0xe5b7d  7      OPC=subq_r64_imm32       
  callq .__lll_unlock_wake_private  #  92    0xe5b84  5      OPC=callq_label          
  addq $0x80, %rsp                  #  93    0xe5b89  7      OPC=addq_r64_imm32       
.L_e5b8d:                           #        0xe5b90  0      OPC=<label>              
  movl %ebx, %eax                   #  94    0xe5b90  2      OPC=movl_r32_r32         
.L_e5b8f:                           #        0xe5b92  0      OPC=<label>              
  addq $0x28, %rsp                  #  95    0xe5b92  4      OPC=addq_r64_imm8        
  popq %rbx                         #  96    0xe5b96  1      OPC=popq_r64_1           
  popq %rbp                         #  97    0xe5b97  1      OPC=popq_r64_1           
  popq %r12                         #  98    0xe5b98  2      OPC=popq_r64_1           
  popq %r13                         #  99    0xe5b9a  2      OPC=popq_r64_1           
  popq %r14                         #  100   0xe5b9c  2      OPC=popq_r64_1           
  popq %r15                         #  101   0xe5b9e  2      OPC=popq_r64_1           
  retq                              #  102   0xe5ba0  1      OPC=retq                 
  xchgw %ax, %ax                    #  103   0xe5ba1  2      OPC=xchgw_ax_r16         
.L_e5ba0:                           #        0xe5ba3  0      OPC=<label>              
  testq %r12, %r12                  #  104   0xe5ba3  3      OPC=testq_r64_r64        
  je .L_e5da0                       #  105   0xe5ba6  6      OPC=je_label_1           
  movzbl 0x38(%r13), %eax           #  106   0xe5bac  5      OPC=movzbl_r32_m8        
  leal 0x1(%rbx), %edx              #  107   0xe5bb1  3      OPC=leal_r32_m16         
  shrb $0x1, %al                    #  108   0xe5bb4  2      OPC=shrb_r8_one          
  andl $0x3, %eax                   #  109   0xe5bb6  3      OPC=andl_r32_imm8        
  je .L_e5db8                       #  110   0xe5bb9  6      OPC=je_label_1           
  cmpl $0x1, %eax                   #  111   0xe5bbf  3      OPC=cmpl_r32_imm8        
  je .L_e5e28                       #  112   0xe5bc2  6      OPC=je_label_1           
  cmpl $0x2, %eax                   #  113   0xe5bc8  3      OPC=cmpl_r32_imm8        
  jne .L_e5f57                      #  114   0xe5bcb  6      OPC=jne_label_1          
  movl (%r12), %eax                 #  115   0xe5bd1  4      OPC=movl_r32_m32         
  cmpl %ebx, %eax                   #  116   0xe5bd5  2      OPC=cmpl_r32_r32         
  jb .L_e5f38                       #  117   0xe5bd7  6      OPC=jb_label_1           
  movl $0x2, %r15d                  #  118   0xe5bdd  6      OPC=movl_r32_imm32       
.L_e5be0:                           #        0xe5be3  0      OPC=<label>              
  testl %ebx, %ebx                  #  119   0xe5be3  2      OPC=testl_r32_r32        
  jle .L_e5edc                      #  120   0xe5be5  6      OPC=jle_label_1          
  movq 0x10(%r12), %rcx             #  121   0xe5beb  5      OPC=movq_r64_m64         
  movq 0x8(%r12), %rdx              #  122   0xe5bf0  5      OPC=movq_r64_m64         
  movslq %ebx, %rax                 #  123   0xe5bf5  3      OPC=movslq_r64_r32       
  leaq (,%rax,4), %rdi              #  124   0xe5bf8  8      OPC=leaq_r64_m16         
  leaq (%r10,%rax,8), %r8           #  125   0xe5c00  4      OPC=leaq_r64_m16         
  cmpl $0xa, %ebx                   #  126   0xe5c04  3      OPC=cmpl_r32_imm8        
  seta %r9b                         #  127   0xe5c07  4      OPC=seta_r8              
  leaq 0x10(%rcx), %rax             #  128   0xe5c0b  4      OPC=leaq_r64_m16         
  leaq 0x10(%rdx), %rsi             #  129   0xe5c0f  4      OPC=leaq_r64_m16         
  cmpq %rax, %rdx                   #  130   0xe5c13  3      OPC=cmpq_r64_r64         
  setae %al                         #  131   0xe5c16  3      OPC=setae_r8             
  cmpq %rsi, %rcx                   #  132   0xe5c19  3      OPC=cmpq_r64_r64         
  setae %sil                        #  133   0xe5c1c  4      OPC=setae_r8             
  orl %eax, %esi                    #  134   0xe5c20  2      OPC=orl_r32_r32          
  movl %r9d, %eax                   #  135   0xe5c22  3      OPC=movl_r32_r32         
  andl %esi, %eax                   #  136   0xe5c25  2      OPC=andl_r32_r32         
  leaq (%rdx,%rdi,1), %rsi          #  137   0xe5c27  4      OPC=leaq_r64_m16         
  cmpq %r8, %rdx                    #  138   0xe5c2b  3      OPC=cmpq_r64_r64         
  setae %r9b                        #  139   0xe5c2e  4      OPC=setae_r8             
  cmpq %rsi, %r10                   #  140   0xe5c32  3      OPC=cmpq_r64_r64         
  setae %sil                        #  141   0xe5c35  4      OPC=setae_r8             
  orl %r9d, %esi                    #  142   0xe5c39  3      OPC=orl_r32_r32          
  testb %sil, %al                   #  143   0xe5c3c  3      OPC=testb_r8_r8          
  je .L_e5eb8                       #  144   0xe5c3f  6      OPC=je_label_1           
  leaq (%rcx,%rdi,1), %rax          #  145   0xe5c45  4      OPC=leaq_r64_m16         
  cmpq %rcx, %r8                    #  146   0xe5c49  3      OPC=cmpq_r64_r64         
  setbe %sil                        #  147   0xe5c4c  4      OPC=setbe_r8             
  cmpq %rax, %r10                   #  148   0xe5c50  3      OPC=cmpq_r64_r64         
  setae %al                         #  149   0xe5c53  3      OPC=setae_r8             
  orb %al, %sil                     #  150   0xe5c56  3      OPC=orb_r8_r8            
  je .L_e5eb8                       #  151   0xe5c59  6      OPC=je_label_1           
  leal -0x4(%rbx), %edi             #  152   0xe5c5f  3      OPC=leal_r32_m16         
  xorl %esi, %esi                   #  153   0xe5c62  2      OPC=xorl_r32_r32         
  xorl %r8d, %r8d                   #  154   0xe5c64  3      OPC=xorl_r32_r32         
  shrl $0x2, %edi                   #  155   0xe5c67  3      OPC=shrl_r32_imm8        
  addl $0x1, %edi                   #  156   0xe5c6a  3      OPC=addl_r32_imm8        
  leal (,%rdi,4), %eax              #  157   0xe5c6d  7      OPC=leal_r32_m16         
.L_e5c71:                           #        0xe5c74  0      OPC=<label>              
  movdqu (%r10,%rsi,2), %xmm0       #  158   0xe5c74  6      OPC=movdqu_xmm_m128      
  addl $0x1, %r8d                   #  159   0xe5c7a  4      OPC=addl_r32_imm8        
  movdqu 0x10(%r10,%rsi,2), %xmm1   #  160   0xe5c7e  7      OPC=movdqu_xmm_m128      
  movdqa %xmm0, %xmm2               #  161   0xe5c85  4      OPC=movdqa_xmm_xmm       
  shufps $0xdd, %xmm1, %xmm0        #  162   0xe5c89  4      OPC=shufps_xmm_xmm_imm8  
  shufps $0x88, %xmm1, %xmm2        #  163   0xe5c8d  4      OPC=shufps_xmm_xmm_imm8  
  movups %xmm2, (%rdx,%rsi,1)       #  164   0xe5c91  4      OPC=movups_m128_xmm      
  movups %xmm0, (%rcx,%rsi,1)       #  165   0xe5c95  4      OPC=movups_m128_xmm      
  addq $0x10, %rsi                  #  166   0xe5c99  4      OPC=addq_r64_imm8        
  cmpl %edi, %r8d                   #  167   0xe5c9d  3      OPC=cmpl_r32_r32         
  jb .L_e5c71                       #  168   0xe5ca0  2      OPC=jb_label             
  cmpl %eax, %ebx                   #  169   0xe5ca2  2      OPC=cmpl_r32_r32         
  je .L_e5cea                       #  170   0xe5ca4  2      OPC=je_label             
  movslq %eax, %rsi                 #  171   0xe5ca6  3      OPC=movslq_r64_r32       
  leaq (%r10,%rsi,8), %rdi          #  172   0xe5ca9  4      OPC=leaq_r64_m16         
  movl (%rdi), %r8d                 #  173   0xe5cad  3      OPC=movl_r32_m32         
  movl %r8d, (%rdx,%rsi,4)          #  174   0xe5cb0  4      OPC=movl_m32_r32         
  movl 0x4(%rdi), %edi              #  175   0xe5cb4  3      OPC=movl_r32_m32         
  movl %edi, (%rcx,%rsi,4)          #  176   0xe5cb7  3      OPC=movl_m32_r32         
  leal 0x1(%rax), %esi              #  177   0xe5cba  3      OPC=leal_r32_m16         
  cmpl %esi, %ebx                   #  178   0xe5cbd  2      OPC=cmpl_r32_r32         
  jle .L_e5cea                      #  179   0xe5cbf  2      OPC=jle_label            
  movslq %esi, %rsi                 #  180   0xe5cc1  3      OPC=movslq_r64_r32       
  addl $0x2, %eax                   #  181   0xe5cc4  3      OPC=addl_r32_imm8        
  leaq (%r10,%rsi,8), %rdi          #  182   0xe5cc7  4      OPC=leaq_r64_m16         
  cmpl %eax, %ebx                   #  183   0xe5ccb  2      OPC=cmpl_r32_r32         
  movl (%rdi), %r8d                 #  184   0xe5ccd  3      OPC=movl_r32_m32         
  movl %r8d, (%rdx,%rsi,4)          #  185   0xe5cd0  4      OPC=movl_m32_r32         
  movl 0x4(%rdi), %edi              #  186   0xe5cd4  3      OPC=movl_r32_m32         
  movl %edi, (%rcx,%rsi,4)          #  187   0xe5cd7  3      OPC=movl_m32_r32         
  jle .L_e5cea                      #  188   0xe5cda  2      OPC=jle_label            
  cltq                              #  189   0xe5cdc  2      OPC=cltq                 
  leaq (%r10,%rax,8), %rsi          #  190   0xe5cde  4      OPC=leaq_r64_m16         
  movl (%rsi), %edi                 #  191   0xe5ce2  2      OPC=movl_r32_m32         
  movl %edi, (%rdx,%rax,4)          #  192   0xe5ce4  3      OPC=movl_m32_r32         
  movl 0x4(%rsi), %edx              #  193   0xe5ce7  3      OPC=movl_r32_m32         
  movl %edx, (%rcx,%rax,4)          #  194   0xe5cea  3      OPC=movl_m32_r32         
.L_e5cea:                           #        0xe5ced  0      OPC=<label>              
  movl (%r12), %eax                 #  195   0xe5ced  4      OPC=movl_r32_m32         
  movl %ebx, %edx                   #  196   0xe5cf1  2      OPC=movl_r32_r32         
.L_e5cf0:                           #        0xe5cf3  0      OPC=<label>              
  cmpl %eax, %edx                   #  197   0xe5cf3  2      OPC=cmpl_r32_r32         
  jae .L_e5d2b                      #  198   0xe5cf5  2      OPC=jae_label            
  movslq %ebx, %rax                 #  199   0xe5cf7  3      OPC=movslq_r64_r32       
  xorl %edx, %edx                   #  200   0xe5cfa  2      OPC=xorl_r32_r32         
  shlq $0x2, %rax                   #  201   0xe5cfc  4      OPC=shlq_r64_imm8        
  movq %rax, %rcx                   #  202   0xe5d00  3      OPC=movq_r64_r64         
  addq 0x8(%r12), %rax              #  203   0xe5d03  5      OPC=addq_r64_m64         
  addq 0x10(%r12), %rcx             #  204   0xe5d08  5      OPC=addq_r64_m64         
  nop                               #  205   0xe5d0d  1      OPC=nop                  
  nop                               #  206   0xe5d0e  1      OPC=nop                  
  nop                               #  207   0xe5d0f  1      OPC=nop                  
  nop                               #  208   0xe5d10  1      OPC=nop                  
  nop                               #  209   0xe5d11  1      OPC=nop                  
  nop                               #  210   0xe5d12  1      OPC=nop                  
.L_e5d10:                           #        0xe5d13  0      OPC=<label>              
  movl $0xffffffff, (%rcx,%rdx,1)   #  211   0xe5d13  7      OPC=movl_m32_imm32       
  addl $0x1, %ebx                   #  212   0xe5d1a  3      OPC=addl_r32_imm8        
  movl $0xffffffff, (%rax,%rdx,1)   #  213   0xe5d1d  7      OPC=movl_m32_imm32       
  addq $0x4, %rdx                   #  214   0xe5d24  4      OPC=addq_r64_imm8        
  cmpl (%r12), %ebx                 #  215   0xe5d28  4      OPC=cmpl_r32_m32         
  jb .L_e5d10                       #  216   0xe5d2c  2      OPC=jb_label             
.L_e5d2b:                           #        0xe5d2e  0      OPC=<label>              
  movzbl 0x38(%r13), %eax           #  217   0xe5d2e  5      OPC=movzbl_r32_m8        
  addl %r15d, %r15d                 #  218   0xe5d33  3      OPC=addl_r32_r32         
  andl $0xfffffff9, %eax            #  219   0xe5d36  6      OPC=andl_r32_imm32       
  nop                               #  220   0xe5d3c  1      OPC=nop                  
  nop                               #  221   0xe5d3d  1      OPC=nop                  
  nop                               #  222   0xe5d3e  1      OPC=nop                  
  orl %eax, %r15d                   #  223   0xe5d3f  3      OPC=orl_r32_r32          
  movb %r15b, 0x38(%r13)            #  224   0xe5d42  4      OPC=movb_m8_r8           
  andl $0x6, %r15d                  #  225   0xe5d46  4      OPC=andl_r32_imm8        
  jne .L_e5da0                      #  226   0xe5d4a  2      OPC=jne_label            
  movl $0xfffffffe, %ebx            #  227   0xe5d4c  6      OPC=movl_r32_imm32_1     
  jmpq .L_e5b4f                     #  228   0xe5d52  5      OPC=jmpq_label_1         
  nop                               #  229   0xe5d57  1      OPC=nop                  
  nop                               #  230   0xe5d58  1      OPC=nop                  
  nop                               #  231   0xe5d59  1      OPC=nop                  
.L_e5d50:                           #        0xe5d5a  0      OPC=<label>              
  movl $0xfffffffe, %ebx            #  232   0xe5d5a  6      OPC=movl_r32_imm32_1     
  jmpq .L_e5b57                     #  233   0xe5d60  5      OPC=jmpq_label_1         
  nop                               #  234   0xe5d65  1      OPC=nop                  
  nop                               #  235   0xe5d66  1      OPC=nop                  
  nop                               #  236   0xe5d67  1      OPC=nop                  
  nop                               #  237   0xe5d68  1      OPC=nop                  
  nop                               #  238   0xe5d69  1      OPC=nop                  
  nop                               #  239   0xe5d6a  1      OPC=nop                  
.L_e5d60:                           #        0xe5d6b  0      OPC=<label>              
  movq 0x30(%r13), %rax             #  240   0xe5d6b  4      OPC=movq_r64_m64         
  movl (%r12), %edi                 #  241   0xe5d6f  4      OPC=movl_r32_m32         
  leaq 0x1(%rax), %rsi              #  242   0xe5d73  4      OPC=leaq_r64_m16         
  movq %rdi, %rbx                   #  243   0xe5d77  3      OPC=movq_r64_r64         
  cmpq %rsi, %rdi                   #  244   0xe5d7a  3      OPC=cmpq_r64_r64         
  jae .L_e5ad7                      #  245   0xe5d7d  6      OPC=jae_label_1          
  testl %edi, %edi                  #  246   0xe5d83  2      OPC=testl_r32_r32        
  jg .L_e5ada                       #  247   0xe5d85  6      OPC=jg_label_1           
.L_e5d80:                           #        0xe5d8b  0      OPC=<label>              
  movl $0x8, %edi                   #  248   0xe5d8b  5      OPC=movl_r32_imm32       
  movl $0x1, %esi                   #  249   0xe5d90  5      OPC=movl_r32_imm32       
  movl $0x1, %ebx                   #  250   0xe5d95  5      OPC=movl_r32_imm32       
  xorl %r12d, %r12d                 #  251   0xe5d9a  3      OPC=xorl_r32_r32         
  jmpq .L_e5ae5                     #  252   0xe5d9d  5      OPC=jmpq_label_1         
  nop                               #  253   0xe5da2  1      OPC=nop                  
  nop                               #  254   0xe5da3  1      OPC=nop                  
  nop                               #  255   0xe5da4  1      OPC=nop                  
  nop                               #  256   0xe5da5  1      OPC=nop                  
  nop                               #  257   0xe5da6  1      OPC=nop                  
  nop                               #  258   0xe5da7  1      OPC=nop                  
  nop                               #  259   0xe5da8  1      OPC=nop                  
  nop                               #  260   0xe5da9  1      OPC=nop                  
  nop                               #  261   0xe5daa  1      OPC=nop                  
.L_e5da0:                           #        0xe5dab  0      OPC=<label>              
  cmpl (%r10), %r14d                #  262   0xe5dab  3      OPC=cmpl_r32_m32         
  jne .L_e5f19                      #  263   0xe5dae  6      OPC=jne_label_1          
  movl 0x4(%r10), %ebx              #  264   0xe5db4  4      OPC=movl_r32_m32         
  subl %r14d, %ebx                  #  265   0xe5db8  3      OPC=subl_r32_r32         
  jmpq .L_e5b4f                     #  266   0xe5dbb  5      OPC=jmpq_label_1         
  nop                               #  267   0xe5dc0  1      OPC=nop                  
  nop                               #  268   0xe5dc1  1      OPC=nop                  
  nop                               #  269   0xe5dc2  1      OPC=nop                  
.L_e5db8:                           #        0xe5dc3  0      OPC=<label>              
  movslq %edx, %r15                 #  270   0xe5dc3  3      OPC=movslq_r64_r32       
  movl %edx, (%rsp)                 #  271   0xe5dc6  3      OPC=movl_m32_r32         
  shlq $0x2, %r15                   #  272   0xe5dc9  4      OPC=shlq_r64_imm8        
  movq %r15, %rdi                   #  273   0xe5dcd  3      OPC=movq_r64_r64         
  callq .memalign_plt               #  274   0xe5dd0  5      OPC=callq_label          
  testq %rax, %rax                  #  275   0xe5dd5  3      OPC=testq_r64_r64        
  movq %rax, 0x8(%r12)              #  276   0xe5dd8  5      OPC=movq_m64_r64         
  movl (%rsp), %edx                 #  277   0xe5ddd  3      OPC=movl_r32_m32         
  movq 0x8(%rsp), %r10              #  278   0xe5de0  5      OPC=movq_r64_m64         
  je .L_e5ee5                       #  279   0xe5de5  6      OPC=je_label_1           
  movq %r15, %rdi                   #  280   0xe5deb  3      OPC=movq_r64_r64         
  movq %r10, 0x8(%rsp)              #  281   0xe5dee  5      OPC=movq_m64_r64         
  movl %edx, (%rsp)                 #  282   0xe5df3  3      OPC=movl_m32_r32         
  movq %rax, 0x10(%rsp)             #  283   0xe5df6  5      OPC=movq_m64_r64         
  callq .memalign_plt               #  284   0xe5dfb  5      OPC=callq_label          
  testq %rax, %rax                  #  285   0xe5e00  3      OPC=testq_r64_r64        
  movq %rax, 0x10(%r12)             #  286   0xe5e03  5      OPC=movq_m64_r64         
  movl (%rsp), %edx                 #  287   0xe5e08  3      OPC=movl_r32_m32         
  movq 0x8(%rsp), %r10              #  288   0xe5e0b  5      OPC=movq_r64_m64         
  movq 0x10(%rsp), %rcx             #  289   0xe5e10  5      OPC=movq_r64_m64         
  je .L_e5eed                       #  290   0xe5e15  6      OPC=je_label_1           
  movl %edx, %eax                   #  291   0xe5e1b  2      OPC=movl_r32_r32         
  movl %edx, (%r12)                 #  292   0xe5e1d  4      OPC=movl_m32_r32         
  movl $0x1, %r15d                  #  293   0xe5e21  6      OPC=movl_r32_imm32       
  jmpq .L_e5be0                     #  294   0xe5e27  5      OPC=jmpq_label_1         
  nop                               #  295   0xe5e2c  1      OPC=nop                  
  nop                               #  296   0xe5e2d  1      OPC=nop                  
  nop                               #  297   0xe5e2e  1      OPC=nop                  
  nop                               #  298   0xe5e2f  1      OPC=nop                  
  nop                               #  299   0xe5e30  1      OPC=nop                  
  nop                               #  300   0xe5e31  1      OPC=nop                  
  nop                               #  301   0xe5e32  1      OPC=nop                  
.L_e5e28:                           #        0xe5e33  0      OPC=<label>              
  movl (%r12), %eax                 #  302   0xe5e33  4      OPC=movl_r32_m32         
  movl $0x1, %r15d                  #  303   0xe5e37  6      OPC=movl_r32_imm32       
  cmpl %eax, %edx                   #  304   0xe5e3d  2      OPC=cmpl_r32_r32         
  jbe .L_e5be0                      #  305   0xe5e3f  6      OPC=jbe_label_1          
  movslq %edx, %rcx                 #  306   0xe5e45  3      OPC=movslq_r64_r32       
  movq 0x8(%r12), %rdi              #  307   0xe5e48  5      OPC=movq_r64_m64         
  movq %r10, (%rsp)                 #  308   0xe5e4d  4      OPC=movq_m64_r64         
  shlq $0x2, %rcx                   #  309   0xe5e51  4      OPC=shlq_r64_imm8        
  movl %edx, 0x1c(%rsp)             #  310   0xe5e55  4      OPC=movl_m32_r32         
  movq %rcx, %rsi                   #  311   0xe5e59  3      OPC=movq_r64_r64         
  movq %rcx, 0x10(%rsp)             #  312   0xe5e5c  5      OPC=movq_m64_r64         
  callq .__tls_get_addr_plt         #  313   0xe5e61  5      OPC=callq_label          
  testq %rax, %rax                  #  314   0xe5e66  3      OPC=testq_r64_r64        
  movq %rax, 0x8(%rsp)              #  315   0xe5e69  5      OPC=movq_m64_r64         
  movq (%rsp), %r10                 #  316   0xe5e6e  4      OPC=movq_r64_m64         
  je .L_e5ee5                       #  317   0xe5e72  2      OPC=je_label             
  movq 0x10(%rsp), %rcx             #  318   0xe5e74  5      OPC=movq_r64_m64         
  movq 0x10(%r12), %rdi             #  319   0xe5e79  5      OPC=movq_r64_m64         
  movq %rcx, %rsi                   #  320   0xe5e7e  3      OPC=movq_r64_r64         
  callq .__tls_get_addr_plt         #  321   0xe5e81  5      OPC=callq_label          
  testq %rax, %rax                  #  322   0xe5e86  3      OPC=testq_r64_r64        
  movq (%rsp), %r10                 #  323   0xe5e89  4      OPC=movq_r64_m64         
  movq 0x8(%rsp), %r8               #  324   0xe5e8d  5      OPC=movq_r64_m64         
  movl 0x1c(%rsp), %edx             #  325   0xe5e92  4      OPC=movl_r32_m32         
  je .L_e5f05                       #  326   0xe5e96  2      OPC=je_label             
  movq %rax, 0x10(%r12)             #  327   0xe5e98  5      OPC=movq_m64_r64         
  movq %r8, 0x8(%r12)               #  328   0xe5e9d  5      OPC=movq_m64_r64         
  movl %edx, %eax                   #  329   0xe5ea2  2      OPC=movl_r32_r32         
  movl %edx, (%r12)                 #  330   0xe5ea4  4      OPC=movl_m32_r32         
  jmpq .L_e5be0                     #  331   0xe5ea8  5      OPC=jmpq_label_1         
  nop                               #  332   0xe5ead  1      OPC=nop                  
  nop                               #  333   0xe5eae  1      OPC=nop                  
  nop                               #  334   0xe5eaf  1      OPC=nop                  
  nop                               #  335   0xe5eb0  1      OPC=nop                  
  nop                               #  336   0xe5eb1  1      OPC=nop                  
  nop                               #  337   0xe5eb2  1      OPC=nop                  
.L_e5ea8:                           #        0xe5eb3  0      OPC=<label>              
  movl $0xffffffff, %eax            #  338   0xe5eb3  6      OPC=movl_r32_imm32_1     
  jmpq .L_e5b8f                     #  339   0xe5eb9  5      OPC=jmpq_label_1         
  nop                               #  340   0xe5ebe  1      OPC=nop                  
  nop                               #  341   0xe5ebf  1      OPC=nop                  
  nop                               #  342   0xe5ec0  1      OPC=nop                  
  nop                               #  343   0xe5ec1  1      OPC=nop                  
  nop                               #  344   0xe5ec2  1      OPC=nop                  
  nop                               #  345   0xe5ec3  1      OPC=nop                  
.L_e5eb8:                           #        0xe5ec4  0      OPC=<label>              
  xorl %eax, %eax                   #  346   0xe5ec4  2      OPC=xorl_r32_r32         
  nop                               #  347   0xe5ec6  1      OPC=nop                  
  nop                               #  348   0xe5ec7  1      OPC=nop                  
  nop                               #  349   0xe5ec8  1      OPC=nop                  
  nop                               #  350   0xe5ec9  1      OPC=nop                  
  nop                               #  351   0xe5eca  1      OPC=nop                  
  nop                               #  352   0xe5ecb  1      OPC=nop                  
.L_e5ec0:                           #        0xe5ecc  0      OPC=<label>              
  movl (%r10,%rax,8), %esi          #  353   0xe5ecc  4      OPC=movl_r32_m32         
  movl %esi, (%rdx,%rax,4)          #  354   0xe5ed0  3      OPC=movl_m32_r32         
  movl 0x4(%r10,%rax,8), %esi       #  355   0xe5ed3  5      OPC=movl_r32_m32         
  movl %esi, (%rcx,%rax,4)          #  356   0xe5ed8  3      OPC=movl_m32_r32         
  addq $0x1, %rax                   #  357   0xe5edb  4      OPC=addq_r64_imm8        
  cmpl %eax, %ebx                   #  358   0xe5edf  2      OPC=cmpl_r32_r32         
  jg .L_e5ec0                       #  359   0xe5ee1  2      OPC=jg_label             
  jmpq .L_e5cea                     #  360   0xe5ee3  5      OPC=jmpq_label_1         
.L_e5edc:                           #        0xe5ee8  0      OPC=<label>              
  xorl %edx, %edx                   #  361   0xe5ee8  2      OPC=xorl_r32_r32         
  xorl %ebx, %ebx                   #  362   0xe5eea  2      OPC=xorl_r32_r32         
  jmpq .L_e5cf0                     #  363   0xe5eec  5      OPC=jmpq_label_1         
.L_e5ee5:                           #        0xe5ef1  0      OPC=<label>              
  xorl %r15d, %r15d                 #  364   0xe5ef1  3      OPC=xorl_r32_r32         
  jmpq .L_e5d2b                     #  365   0xe5ef4  5      OPC=jmpq_label_1         
.L_e5eed:                           #        0xe5ef9  0      OPC=<label>              
  movq %rcx, %rdi                   #  366   0xe5ef9  3      OPC=movq_r64_r64         
  movq %r10, (%rsp)                 #  367   0xe5efc  4      OPC=movq_m64_r64         
  xorl %r15d, %r15d                 #  368   0xe5f00  3      OPC=xorl_r32_r32         
  callq .L_1f8c0                    #  369   0xe5f03  5      OPC=callq_label          
  movq (%rsp), %r10                 #  370   0xe5f08  4      OPC=movq_r64_m64         
  jmpq .L_e5d2b                     #  371   0xe5f0c  5      OPC=jmpq_label_1         
.L_e5f05:                           #        0xe5f11  0      OPC=<label>              
  movq %r8, %rdi                    #  372   0xe5f11  3      OPC=movq_r64_r64         
  xorl %r15d, %r15d                 #  373   0xe5f14  3      OPC=xorl_r32_r32         
  callq .L_1f8c0                    #  374   0xe5f17  5      OPC=callq_label          
  movq (%rsp), %r10                 #  375   0xe5f1c  4      OPC=movq_r64_m64         
  jmpq .L_e5d2b                     #  376   0xe5f20  5      OPC=jmpq_label_1         
.L_e5f19:                           #        0xe5f25  0      OPC=<label>              
  leaq 0xa61f9(%rip), %rcx          #  377   0xe5f25  7      OPC=leaq_r64_m16         
  leaq 0xa60fd(%rip), %rsi          #  378   0xe5f2c  7      OPC=leaq_r64_m16         
  leaq 0xa61c5(%rip), %rdi          #  379   0xe5f33  7      OPC=leaq_r64_m16         
  movl $0x1d5, %edx                 #  380   0xe5f3a  5      OPC=movl_r32_imm32       
  callq .__assert_fail              #  381   0xe5f3f  5      OPC=callq_label          
.L_e5f38:                           #        0xe5f44  0      OPC=<label>              
  leaq 0xa61cd(%rip), %rcx          #  382   0xe5f44  7      OPC=leaq_r64_m16         
  leaq 0xa60de(%rip), %rsi          #  383   0xe5f4b  7      OPC=leaq_r64_m16         
  leaq 0xa618e(%rip), %rdi          #  384   0xe5f52  7      OPC=leaq_r64_m16         
  movl $0x213, %edx                 #  385   0xe5f59  5      OPC=movl_r32_imm32       
  callq .__assert_fail              #  386   0xe5f5e  5      OPC=callq_label          
.L_e5f57:                           #        0xe5f63  0      OPC=<label>              
  leaq 0xa61ae(%rip), %rcx          #  387   0xe5f63  7      OPC=leaq_r64_m16         
  leaq 0xa60bf(%rip), %rsi          #  388   0xe5f6a  7      OPC=leaq_r64_m16         
  leaq 0xa6152(%rip), %rdi          #  389   0xe5f71  7      OPC=leaq_r64_m16         
  movl $0x211, %edx                 #  390   0xe5f78  5      OPC=movl_r32_imm32       
  callq .__assert_fail              #  391   0xe5f7d  5      OPC=callq_label          
  nop                               #  392   0xe5f82  1      OPC=nop                  
  nop                               #  393   0xe5f83  1      OPC=nop                  
  nop                               #  394   0xe5f84  1      OPC=nop                  
  nop                               #  395   0xe5f85  1      OPC=nop                  
  nop                               #  396   0xe5f86  1      OPC=nop                  
  nop                               #  397   0xe5f87  1      OPC=nop                  
  nop                               #  398   0xe5f88  1      OPC=nop                  
  nop                               #  399   0xe5f89  1      OPC=nop                  
  nop                               #  400   0xe5f8a  1      OPC=nop                  
  nop                               #  401   0xe5f8b  1      OPC=nop                  
                                                                                      
.size re_match, .-re_match

