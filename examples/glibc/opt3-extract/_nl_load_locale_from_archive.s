  .text
  .globl _nl_load_locale_from_archive
  .type _nl_load_locale_from_archive, @function

#! file-offset 0x2c690
#! rip-offset  0x2c690
#! capacity    1328 bytes

# Text                           #  Line  RIP      Bytes  Opcode                
._nl_load_locale_from_archive:   #        0x2c690  0      OPC=<label>           
  pushq %rbp                     #  1     0x2c690  1      OPC=pushq_r64_1       
  movq %rsp, %rbp                #  2     0x2c691  3      OPC=movq_r64_r64      
  pushq %r15                     #  3     0x2c694  2      OPC=pushq_r64_1       
  pushq %r14                     #  4     0x2c696  2      OPC=pushq_r64_1       
  pushq %r13                     #  5     0x2c698  2      OPC=pushq_r64_1       
  pushq %r12                     #  6     0x2c69a  2      OPC=pushq_r64_1       
  movq %rsi, %r13                #  7     0x2c69c  3      OPC=movq_r64_r64      
  pushq %rbx                     #  8     0x2c69f  1      OPC=pushq_r64_1       
  subq $0x108, %rsp              #  9     0x2c6a0  7      OPC=subq_r64_imm32    
  movl %edi, -0x124(%rbp)        #  10    0x2c6a7  6      OPC=movl_m32_r32      
  movl $0x1e, %edi               #  11    0x2c6ad  5      OPC=movl_r32_imm32    
  movq (%rsi), %rbx              #  12    0x2c6b2  3      OPC=movq_r64_m64      
  callq .__sysconf               #  13    0x2c6b5  5      OPC=callq_label       
  movq 0x39643f(%rip), %r14      #  14    0x2c6ba  7      OPC=movq_r64_m64      
  testq %r14, %r14               #  15    0x2c6c1  3      OPC=testq_r64_r64     
  jne .L_2c6e7                   #  16    0x2c6c4  2      OPC=jne_label         
  jmpq .L_2c718                  #  17    0x2c6c6  2      OPC=jmpq_label        
  nop                            #  18    0x2c6c8  1      OPC=nop               
  nop                            #  19    0x2c6c9  1      OPC=nop               
  nop                            #  20    0x2c6ca  1      OPC=nop               
  nop                            #  21    0x2c6cb  1      OPC=nop               
  nop                            #  22    0x2c6cc  1      OPC=nop               
  nop                            #  23    0x2c6cd  1      OPC=nop               
  nop                            #  24    0x2c6ce  1      OPC=nop               
  nop                            #  25    0x2c6cf  1      OPC=nop               
.L_2c6d0:                        #        0x2c6d0  0      OPC=<label>           
  movq %r15, %rsi                #  26    0x2c6d0  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                #  27    0x2c6d3  3      OPC=movq_r64_r64      
  callq .__GI_strcmp             #  28    0x2c6d6  5      OPC=callq_label       
  testl %eax, %eax               #  29    0x2c6db  2      OPC=testl_r32_r32     
  je .L_2c6f0                    #  30    0x2c6dd  2      OPC=je_label          
  movq (%r14), %r14              #  31    0x2c6df  3      OPC=movq_r64_m64      
  testq %r14, %r14               #  32    0x2c6e2  3      OPC=testq_r64_r64     
  je .L_2c718                    #  33    0x2c6e5  2      OPC=je_label          
.L_2c6e7:                        #        0x2c6e7  0      OPC=<label>           
  movq 0x8(%r14), %r15           #  34    0x2c6e7  4      OPC=movq_r64_m64      
  cmpq %rbx, %r15                #  35    0x2c6eb  3      OPC=cmpq_r64_r64      
  jne .L_2c6d0                   #  36    0x2c6ee  2      OPC=jne_label         
.L_2c6f0:                        #        0x2c6f0  0      OPC=<label>           
  movslq -0x124(%rbp), %r12      #  37    0x2c6f0  7      OPC=movslq_r64_m32    
  movq %r15, (%r13)              #  38    0x2c6f7  4      OPC=movq_m64_r64      
  addq $0x2, %r12                #  39    0x2c6fb  4      OPC=addq_r64_imm8     
  movq (%r14,%r12,8), %rax       #  40    0x2c6ff  4      OPC=movq_r64_m64      
.L_2c703:                        #        0x2c703  0      OPC=<label>           
  leaq -0x28(%rbp), %rsp         #  41    0x2c703  4      OPC=leaq_r64_m16      
  popq %rbx                      #  42    0x2c707  1      OPC=popq_r64_1        
  popq %r12                      #  43    0x2c708  2      OPC=popq_r64_1        
  popq %r13                      #  44    0x2c70a  2      OPC=popq_r64_1        
  popq %r14                      #  45    0x2c70c  2      OPC=popq_r64_1        
  popq %r15                      #  46    0x2c70e  2      OPC=popq_r64_1        
  popq %rbp                      #  47    0x2c710  1      OPC=popq_r64_1        
  retq                           #  48    0x2c711  1      OPC=retq              
  nop                            #  49    0x2c712  1      OPC=nop               
  nop                            #  50    0x2c713  1      OPC=nop               
  nop                            #  51    0x2c714  1      OPC=nop               
  nop                            #  52    0x2c715  1      OPC=nop               
  nop                            #  53    0x2c716  1      OPC=nop               
  nop                            #  54    0x2c717  1      OPC=nop               
.L_2c718:                        #        0x2c718  0      OPC=<label>           
  movl $0x2e, %esi               #  55    0x2c718  5      OPC=movl_r32_imm32    
  movq %rbx, %rdi                #  56    0x2c71d  3      OPC=movq_r64_r64      
  callq .__GI_strchr             #  57    0x2c720  5      OPC=callq_label       
  testq %rax, %rax               #  58    0x2c725  3      OPC=testq_r64_r64     
  je .L_2c734                    #  59    0x2c728  2      OPC=je_label          
  testb $0xbf, 0x1(%rax)         #  60    0x2c72a  4      OPC=testb_m8_imm8     
  jne .L_2c99b                   #  61    0x2c72e  6      OPC=jne_label_1       
.L_2c734:                        #        0x2c734  0      OPC=<label>           
  cmpq $0x0, 0x3964ac(%rip)      #  62    0x2c734  8      OPC=cmpq_m64_imm8     
  je .L_2ca7c                    #  63    0x2c73c  6      OPC=je_label_1        
  movq 0x396487(%rip), %r14      #  64    0x2c742  7      OPC=movq_r64_m64      
  testq %r14, %r14               #  65    0x2c749  3      OPC=testq_r64_r64     
  je .L_2c978                    #  66    0x2c74c  6      OPC=je_label_1        
.L_2c752:                        #        0x2c752  0      OPC=<label>           
  movq %rbx, %rdi                #  67    0x2c752  3      OPC=movq_r64_r64      
  callq .strlen                  #  68    0x2c755  5      OPC=callq_label       
  testq %rax, %rax               #  69    0x2c75a  3      OPC=testq_r64_r64     
  movl %eax, %edx                #  70    0x2c75d  2      OPC=movl_r32_r32      
  je .L_2c781                    #  71    0x2c75f  2      OPC=je_label          
  movq %rbx, %rcx                #  72    0x2c761  3      OPC=movq_r64_r64      
  addq %rbx, %rax                #  73    0x2c764  3      OPC=addq_r64_r64      
  nop                            #  74    0x2c767  1      OPC=nop               
  nop                            #  75    0x2c768  1      OPC=nop               
  nop                            #  76    0x2c769  1      OPC=nop               
  nop                            #  77    0x2c76a  1      OPC=nop               
  nop                            #  78    0x2c76b  1      OPC=nop               
  nop                            #  79    0x2c76c  1      OPC=nop               
  nop                            #  80    0x2c76d  1      OPC=nop               
  nop                            #  81    0x2c76e  1      OPC=nop               
  nop                            #  82    0x2c76f  1      OPC=nop               
.L_2c770:                        #        0x2c770  0      OPC=<label>           
  movzbl (%rcx), %esi            #  83    0x2c770  3      OPC=movzbl_r32_m8     
  roll $0x9, %edx                #  84    0x2c773  3      OPC=roll_r32_imm8     
  addq $0x1, %rcx                #  85    0x2c776  4      OPC=addq_r64_imm8     
  addl %esi, %edx                #  86    0x2c77a  2      OPC=addl_r32_r32      
  cmpq %rax, %rcx                #  87    0x2c77c  3      OPC=cmpq_r64_r64      
  jne .L_2c770                   #  88    0x2c77f  2      OPC=jne_label         
.L_2c781:                        #        0x2c781  0      OPC=<label>           
  movl 0x10(%r14), %ecx          #  89    0x2c781  4      OPC=movl_r32_m32      
  testl %edx, %edx               #  90    0x2c785  2      OPC=testl_r32_r32     
  movl %edx, %r8d                #  91    0x2c787  3      OPC=movl_r32_r32      
  movl $0xffffffff, %eax         #  92    0x2c78a  6      OPC=movl_r32_imm32_1  
  movl 0x8(%r14), %r15d          #  93    0x2c790  4      OPC=movl_r32_m32      
  cmoveq %rax, %r8               #  94    0x2c794  4      OPC=cmoveq_r64_r64    
  testl %ecx, %ecx               #  95    0x2c798  2      OPC=testl_r32_r32     
  je .L_2c978                    #  96    0x2c79a  6      OPC=je_label_1        
  movl %ecx, %r10d               #  97    0x2c7a0  3      OPC=movl_r32_r32      
  movq %r8, %rax                 #  98    0x2c7a3  3      OPC=movq_r64_r64      
  xorl %edx, %edx                #  99    0x2c7a6  2      OPC=xorl_r32_r32      
  divq %r10                      #  100   0x2c7a8  3      OPC=divq_r64          
  subl $0x2, %ecx                #  101   0x2c7ab  3      OPC=subl_r32_imm8     
  movq %r8, %rax                 #  102   0x2c7ae  3      OPC=movq_r64_r64      
  movq %rdx, %rsi                #  103   0x2c7b1  3      OPC=movq_r64_r64      
  xorl %edx, %edx                #  104   0x2c7b4  2      OPC=xorl_r32_r32      
  divq %rcx                      #  105   0x2c7b6  3      OPC=divq_r64          
  movl %r15d, %eax               #  106   0x2c7b9  3      OPC=movl_r32_r32      
  movq %rax, -0x130(%rbp)        #  107   0x2c7bc  7      OPC=movq_m64_r64      
  movq %rax, %rcx                #  108   0x2c7c3  3      OPC=movq_r64_r64      
  leaq 0x1(%rdx), %r9            #  109   0x2c7c6  4      OPC=leaq_r64_m16      
  leaq (%r9,%r9,2), %r11         #  110   0x2c7ca  4      OPC=leaq_r64_m16      
  leaq (,%r11,4), %r12           #  111   0x2c7ce  8      OPC=leaq_r64_m16      
.L_2c7d5:                        #        0x2c7d6  0      OPC=<label>           
  leaq (%rsi,%rsi,2), %rax       #  112   0x2c7d6  4      OPC=leaq_r64_m16      
  leaq (%rsi,%r9,1), %rdx        #  113   0x2c7da  4      OPC=leaq_r64_m16      
  leaq (%rcx,%rax,4), %rcx       #  114   0x2c7de  4      OPC=leaq_r64_m16      
  leaq (%r14,%rcx,1), %r15       #  115   0x2c7e2  4      OPC=leaq_r64_m16      
  jmpq .L_2c803                  #  116   0x2c7e6  2      OPC=jmpq_label        
  nop                            #  117   0x2c7e8  1      OPC=nop               
  nop                            #  118   0x2c7e9  1      OPC=nop               
  nop                            #  119   0x2c7ea  1      OPC=nop               
  nop                            #  120   0x2c7eb  1      OPC=nop               
  nop                            #  121   0x2c7ec  1      OPC=nop               
  nop                            #  122   0x2c7ed  1      OPC=nop               
  nop                            #  123   0x2c7ee  1      OPC=nop               
  nop                            #  124   0x2c7ef  1      OPC=nop               
  nop                            #  125   0x2c7f0  1      OPC=nop               
.L_2c7f0:                        #        0x2c7f1  0      OPC=<label>           
  addq %r12, %r15                #  126   0x2c7f1  3      OPC=addq_r64_r64      
  cmpq %rdx, %r10                #  127   0x2c7f4  3      OPC=cmpq_r64_r64      
  leaq (%rdx,%r9,1), %rax        #  128   0x2c7f7  4      OPC=leaq_r64_m16      
  jbe .L_2c989                   #  129   0x2c7fb  6      OPC=jbe_label_1       
  movq %rax, %rdx                #  130   0x2c801  3      OPC=movq_r64_r64      
.L_2c803:                        #        0x2c804  0      OPC=<label>           
  movl 0x4(%r15), %esi           #  131   0x2c804  4      OPC=movl_r32_m32      
  testl %esi, %esi               #  132   0x2c808  2      OPC=testl_r32_r32     
  je .L_2c978                    #  133   0x2c80a  6      OPC=je_label_1        
  movl (%r15), %eax              #  134   0x2c810  3      OPC=movl_r32_m32      
  cmpq %r8, %rax                 #  135   0x2c813  3      OPC=cmpq_r64_r64      
  jne .L_2c7f0                   #  136   0x2c816  2      OPC=jne_label         
  addq %r14, %rsi                #  137   0x2c818  3      OPC=addq_r64_r64      
  movq %rbx, %rdi                #  138   0x2c81b  3      OPC=movq_r64_r64      
  movq %r8, -0x120(%rbp)         #  139   0x2c81e  7      OPC=movq_m64_r64      
  movq %rdx, -0x118(%rbp)        #  140   0x2c825  7      OPC=movq_m64_r64      
  movq %r9, -0x110(%rbp)         #  141   0x2c82c  7      OPC=movq_m64_r64      
  movq %r10, -0x108(%rbp)        #  142   0x2c833  7      OPC=movq_m64_r64      
  callq .__GI_strcmp             #  143   0x2c83a  5      OPC=callq_label       
  testl %eax, %eax               #  144   0x2c83f  2      OPC=testl_r32_r32     
  movq -0x108(%rbp), %r10        #  145   0x2c841  7      OPC=movq_r64_m64      
  movq -0x110(%rbp), %r9         #  146   0x2c848  7      OPC=movq_r64_m64      
  movq -0x118(%rbp), %rdx        #  147   0x2c84f  7      OPC=movq_r64_m64      
  movq -0x120(%rbp), %r8         #  148   0x2c856  7      OPC=movq_r64_m64      
  jne .L_2c7f0                   #  149   0x2c85d  2      OPC=jne_label         
  movl 0x8(%r15), %eax           #  150   0x2c85f  4      OPC=movl_r32_m32      
  testl %eax, %eax               #  151   0x2c863  2      OPC=testl_r32_r32     
  je .L_2c978                    #  152   0x2c865  6      OPC=je_label_1        
  movl 0x39636c(%rip), %edx      #  153   0x2c86b  6      OPC=movl_r32_m32      
  cmpq 0x3962f9(%rip), %rdx      #  154   0x2c871  7      OPC=cmpq_r64_m64      
  movq %rdx, %r9                 #  155   0x2c878  3      OPC=movq_r64_r64      
  jne .L_2cb97                   #  156   0x2c87b  6      OPC=jne_label_1       
  leaq -0x100(%rbp), %r15        #  157   0x2c881  7      OPC=leaq_r64_m16      
  leaq 0x4(%r14,%rax,1), %rsi    #  158   0x2c888  5      OPC=leaq_r64_m16      
  movl $0x1, %edx                #  159   0x2c88d  5      OPC=movl_r32_imm32    
  movq %r15, %rcx                #  160   0x2c892  3      OPC=movq_r64_r64      
  jmpq .L_2c8a1                  #  161   0x2c895  2      OPC=jmpq_label        
.L_2c896:                        #        0x2c897  0      OPC=<label>           
  addl $0x1, %edx                #  162   0x2c897  3      OPC=addl_r32_imm8     
  addq $0x10, %rcx               #  163   0x2c89a  4      OPC=addq_r64_imm8     
  addq $0x8, %rsi                #  164   0x2c89e  4      OPC=addq_r64_imm8     
.L_2c8a1:                        #        0x2c8a2  0      OPC=<label>           
  cmpl $0x7, %edx                #  165   0x2c8a2  3      OPC=cmpl_r32_imm8     
  je .L_2c896                    #  166   0x2c8a5  2      OPC=je_label          
  movl (%rsi), %eax              #  167   0x2c8a7  2      OPC=movl_r32_m32      
  movl 0x4(%rsi), %edi           #  168   0x2c8a9  3      OPC=movl_r32_m32      
  leal (%rdi,%rax,1), %r8d       #  169   0x2c8ac  4      OPC=leal_r32_m16      
  cmpl %r8d, %r9d                #  170   0x2c8b0  3      OPC=cmpl_r32_r32      
  jb .L_2c978                    #  171   0x2c8b3  6      OPC=jb_label_1        
  addq %r14, %rax                #  172   0x2c8b9  3      OPC=addq_r64_r64      
  cmpl $0xd, %edx                #  173   0x2c8bc  3      OPC=cmpl_r32_imm8     
  movq %rax, (%rcx)              #  174   0x2c8bf  3      OPC=movq_m64_r64      
  movl %edi, %eax                #  175   0x2c8c2  2      OPC=movl_r32_r32      
  movq %rax, 0x8(%rcx)           #  176   0x2c8c4  4      OPC=movq_m64_r64      
  jne .L_2c896                   #  177   0x2c8c8  2      OPC=jne_label         
  movl $0x78, %edi               #  178   0x2c8ca  5      OPC=movl_r32_imm32    
  callq .memalign_plt            #  179   0x2c8cf  5      OPC=callq_label       
  testq %rax, %rax               #  180   0x2c8d4  3      OPC=testq_r64_r64     
  movq %rax, %r14                #  181   0x2c8d7  3      OPC=movq_r64_r64      
  je .L_2c978                    #  182   0x2c8da  6      OPC=je_label_1        
  movq (%r13), %rdi              #  183   0x2c8e0  4      OPC=movq_r64_m64      
  callq .__strdup                #  184   0x2c8e4  5      OPC=callq_label       
  testq %rax, %rax               #  185   0x2c8e9  3      OPC=testq_r64_r64     
  movq %rax, 0x8(%r14)           #  186   0x2c8ec  4      OPC=movq_m64_r64      
  je .L_2cb88                    #  187   0x2c8f0  6      OPC=je_label_1        
  movq 0x396204(%rip), %rax      #  188   0x2c8f6  7      OPC=movq_r64_m64      
  movl $0x1, %r12d               #  189   0x2c8fd  6      OPC=movl_r32_imm32    
  movq %r14, 0x3961f7(%rip)      #  190   0x2c903  7      OPC=movq_m64_r64      
  xorl %ebx, %ebx                #  191   0x2c90a  2      OPC=xorl_r32_r32      
  movq %rax, (%r14)              #  192   0x2c90c  3      OPC=movq_m64_r64      
  jmpq .L_2c91c                  #  193   0x2c90f  2      OPC=jmpq_label        
.L_2c910:                        #        0x2c911  0      OPC=<label>           
  addq $0x1, %rbx                #  194   0x2c911  4      OPC=addq_r64_imm8     
  addl $0x1, %r12d               #  195   0x2c915  4      OPC=addl_r32_imm8     
  addq $0x10, %r15               #  196   0x2c919  4      OPC=addq_r64_imm8     
.L_2c91c:                        #        0x2c91d  0      OPC=<label>           
  cmpq $0x6, %rbx                #  197   0x2c91d  4      OPC=cmpq_r64_imm8     
  je .L_2c910                    #  198   0x2c921  2      OPC=je_label          
  movq 0x8(%r15), %rdx           #  199   0x2c923  4      OPC=movq_r64_m64      
  movq (%r15), %rsi              #  200   0x2c927  3      OPC=movq_r64_m64      
  movl %ebx, %edi                #  201   0x2c92a  2      OPC=movl_r32_r32      
  callq ._nl_intern_locale_data  #  202   0x2c92c  5      OPC=callq_label       
  testq %rax, %rax               #  203   0x2c931  3      OPC=testq_r64_r64     
  movq %rax, 0x10(%r14,%rbx,8)   #  204   0x2c934  5      OPC=movq_m64_r64      
  je .L_2c94f                    #  205   0x2c939  2      OPC=je_label          
  movq 0x8(%r14), %rdx           #  206   0x2c93b  4      OPC=movq_r64_m64      
  movl $0x2, 0x18(%rax)          #  207   0x2c93f  7      OPC=movl_m32_imm32    
  movl $0xffffffff, 0x30(%rax)   #  208   0x2c946  7      OPC=movl_m32_imm32    
  movq %rdx, (%rax)              #  209   0x2c94d  3      OPC=movq_m64_r64      
.L_2c94f:                        #        0x2c950  0      OPC=<label>           
  cmpl $0xd, %r12d               #  210   0x2c950  4      OPC=cmpl_r32_imm8     
  jne .L_2c910                   #  211   0x2c954  2      OPC=jne_label         
  movslq -0x124(%rbp), %rdx      #  212   0x2c956  7      OPC=movslq_r64_m32    
  movq 0x8(%r14), %rax           #  213   0x2c95d  4      OPC=movq_r64_m64      
  movq %rax, (%r13)              #  214   0x2c961  4      OPC=movq_m64_r64      
  addq $0x2, %rdx                #  215   0x2c965  4      OPC=addq_r64_imm8     
  movq (%r14,%rdx,8), %rax       #  216   0x2c969  4      OPC=movq_r64_m64      
  jmpq .L_2c703                  #  217   0x2c96d  5      OPC=jmpq_label_1      
  nop                            #  218   0x2c972  1      OPC=nop               
  nop                            #  219   0x2c973  1      OPC=nop               
  nop                            #  220   0x2c974  1      OPC=nop               
  nop                            #  221   0x2c975  1      OPC=nop               
  nop                            #  222   0x2c976  1      OPC=nop               
  nop                            #  223   0x2c977  1      OPC=nop               
  nop                            #  224   0x2c978  1      OPC=nop               
.L_2c978:                        #        0x2c979  0      OPC=<label>           
  leaq -0x28(%rbp), %rsp         #  225   0x2c979  4      OPC=leaq_r64_m16      
  xorl %eax, %eax                #  226   0x2c97d  2      OPC=xorl_r32_r32      
  popq %rbx                      #  227   0x2c97f  1      OPC=popq_r64_1        
  popq %r12                      #  228   0x2c980  2      OPC=popq_r64_1        
  popq %r13                      #  229   0x2c982  2      OPC=popq_r64_1        
  popq %r14                      #  230   0x2c984  2      OPC=popq_r64_1        
  popq %r15                      #  231   0x2c986  2      OPC=popq_r64_1        
  popq %rbp                      #  232   0x2c988  1      OPC=popq_r64_1        
  retq                           #  233   0x2c989  1      OPC=retq              
.L_2c989:                        #        0x2c98a  0      OPC=<label>           
  subq %r10, %rdx                #  234   0x2c98a  3      OPC=subq_r64_r64      
  movq -0x130(%rbp), %rcx        #  235   0x2c98d  7      OPC=movq_r64_m64      
  movq %rdx, %rsi                #  236   0x2c994  3      OPC=movq_r64_r64      
  jmpq .L_2c7d5                  #  237   0x2c997  5      OPC=jmpq_label_1      
.L_2c99b:                        #        0x2c99c  0      OPC=<label>           
  leaq 0x1(%rax), %r14           #  238   0x2c99c  4      OPC=leaq_r64_m16      
  movl $0x40, %esi               #  239   0x2c9a0  5      OPC=movl_r32_imm32    
  movq %r14, %rdi                #  240   0x2c9a5  3      OPC=movq_r64_r64      
  callq .strchrnul               #  241   0x2c9a8  5      OPC=callq_label       
  movq %rax, %r15                #  242   0x2c9ad  3      OPC=movq_r64_r64      
  movq %r14, %rdi                #  243   0x2c9b0  3      OPC=movq_r64_r64      
  movq %rax, -0x108(%rbp)        #  244   0x2c9b3  7      OPC=movq_m64_r64      
  subq %r14, %r15                #  245   0x2c9ba  3      OPC=subq_r64_r64      
  movq %r15, %rsi                #  246   0x2c9bd  3      OPC=movq_r64_r64      
  callq ._nl_normalize_codeset   #  247   0x2c9c0  5      OPC=callq_label       
  testq %rax, %rax               #  248   0x2c9c5  3      OPC=testq_r64_r64     
  movq %rax, %r12                #  249   0x2c9c8  3      OPC=movq_r64_r64      
  je .L_2c978                    #  250   0x2c9cb  2      OPC=je_label          
  movq %r15, %rdx                #  251   0x2c9cd  3      OPC=movq_r64_r64      
  movq %r14, %rsi                #  252   0x2c9d0  3      OPC=movq_r64_r64      
  movq %rax, %rdi                #  253   0x2c9d3  3      OPC=movq_r64_r64      
  callq .__GI_strncmp            #  254   0x2c9d6  5      OPC=callq_label       
  testl %eax, %eax               #  255   0x2c9db  2      OPC=testl_r32_r32     
  jne .L_2c9e9                   #  256   0x2c9dd  2      OPC=jne_label         
  cmpb $0x0, (%r12,%r15,1)       #  257   0x2c9df  5      OPC=cmpb_m8_imm8      
  je .L_2ca6f                    #  258   0x2c9e4  6      OPC=je_label_1        
.L_2c9e9:                        #        0x2c9ea  0      OPC=<label>           
  movq %r12, %rdi                #  259   0x2c9ea  3      OPC=movq_r64_r64      
  subq %rbx, %r14                #  260   0x2c9ed  3      OPC=subq_r64_r64      
  callq .strlen                  #  261   0x2c9f0  5      OPC=callq_label       
  movq -0x108(%rbp), %rdi        #  262   0x2c9f5  7      OPC=movq_r64_m64      
  movq %rax, %r15                #  263   0x2c9fc  3      OPC=movq_r64_r64      
  callq .strlen                  #  264   0x2c9ff  5      OPC=callq_label       
  leaq 0x1(%rax), %r9            #  265   0x2ca04  4      OPC=leaq_r64_m16      
  leaq (%r15,%r14,1), %rax       #  266   0x2ca08  4      OPC=leaq_r64_m16      
  movq %rbx, %rsi                #  267   0x2ca0c  3      OPC=movq_r64_r64      
  movq %r14, %rdx                #  268   0x2ca0f  3      OPC=movq_r64_r64      
  leaq 0x1e(%r9,%rax,1), %rax    #  269   0x2ca12  5      OPC=leaq_r64_m16      
  movq %r9, -0x118(%rbp)         #  270   0x2ca17  7      OPC=movq_m64_r64      
  andq $0xf0, %rax               #  271   0x2ca1e  4      OPC=andq_r64_imm8     
  subq %rax, %rsp                #  272   0x2ca22  3      OPC=subq_r64_r64      
  leaq 0xf(%rsp), %r8            #  273   0x2ca25  5      OPC=leaq_r64_m16      
  andq $0xf0, %r8                #  274   0x2ca2a  4      OPC=andq_r64_imm8     
  movq %r8, %rdi                 #  275   0x2ca2e  3      OPC=movq_r64_r64      
  movq %r8, -0x110(%rbp)         #  276   0x2ca31  7      OPC=movq_m64_r64      
  callq .__GI_memcpy             #  277   0x2ca38  5      OPC=callq_label       
  leaq (%rax,%r14,1), %rdi       #  278   0x2ca3d  4      OPC=leaq_r64_m16      
  movq %r15, %rdx                #  279   0x2ca41  3      OPC=movq_r64_r64      
  movq %r12, %rsi                #  280   0x2ca44  3      OPC=movq_r64_r64      
  callq .__GI_memcpy             #  281   0x2ca47  5      OPC=callq_label       
  movq -0x118(%rbp), %r9         #  282   0x2ca4c  7      OPC=movq_r64_m64      
  movq -0x108(%rbp), %rsi        #  283   0x2ca53  7      OPC=movq_r64_m64      
  leaq (%rax,%r15,1), %rdi       #  284   0x2ca5a  4      OPC=leaq_r64_m16      
  movq %r9, %rdx                 #  285   0x2ca5e  3      OPC=movq_r64_r64      
  callq .__GI_memcpy             #  286   0x2ca61  5      OPC=callq_label       
  movq -0x110(%rbp), %r8         #  287   0x2ca66  7      OPC=movq_r64_m64      
  movq %r8, %rbx                 #  288   0x2ca6d  3      OPC=movq_r64_r64      
.L_2ca6f:                        #        0x2ca70  0      OPC=<label>           
  movq %r12, %rdi                #  289   0x2ca70  3      OPC=movq_r64_r64      
  callq .L_1f8c0                 #  290   0x2ca73  5      OPC=callq_label       
  jmpq .L_2c734                  #  291   0x2ca78  5      OPC=jmpq_label_1      
.L_2ca7c:                        #        0x2ca7d  0      OPC=<label>           
  leaq 0x39614d(%rip), %rax      #  292   0x2ca7d  7      OPC=leaq_r64_m16      
  movl $0x2, %ecx                #  293   0x2ca84  5      OPC=movl_r32_imm32    
  movl $0x80000, %esi            #  294   0x2ca89  5      OPC=movl_r32_imm32    
  leaq 0x164ecc(%rip), %rdi      #  295   0x2ca8e  7      OPC=leaq_r64_m16      
  movq %rax, 0x39614d(%rip)      #  296   0x2ca95  7      OPC=movq_m64_r64      
  movl %ecx, %eax                #  297   0x2ca9c  2      OPC=movl_r32_r32      
  syscall                        #  298   0x2ca9e  2      OPC=syscall           
  cmpq $0xfffff000, %rax         #  299   0x2caa0  6      OPC=cmpq_rax_imm32    
  movq %rax, %r15                #  300   0x2caa6  3      OPC=movq_r64_r64      
  ja .L_2cb57                    #  301   0x2caa9  6      OPC=ja_label_1        
  testl %eax, %eax               #  302   0x2caaf  2      OPC=testl_r32_r32     
  js .L_2c978                    #  303   0x2cab1  6      OPC=js_label_1        
  leaq 0x396083(%rip), %rdx      #  304   0x2cab7  7      OPC=leaq_r64_m16      
  movl %eax, %esi                #  305   0x2cabe  2      OPC=movl_r32_r32      
  movl $0x1, %edi                #  306   0x2cac0  5      OPC=movl_r32_imm32    
  callq .__fxstat                #  307   0x2cac5  5      OPC=callq_label       
  cmpl $0xffffffff, %eax         #  308   0x2caca  6      OPC=cmpl_r32_imm32    
  nop                            #  309   0x2cad0  1      OPC=nop               
  nop                            #  310   0x2cad1  1      OPC=nop               
  nop                            #  311   0x2cad2  1      OPC=nop               
  je .L_2cb77                    #  312   0x2cad3  6      OPC=je_label_1        
  movq 0x396097(%rip), %r12      #  313   0x2cad9  7      OPC=movq_r64_m64      
  xorl %r9d, %r9d                #  314   0x2cae0  3      OPC=xorl_r32_r32      
  xorl %edi, %edi                #  315   0x2cae3  2      OPC=xorl_r32_r32      
  movl %r15d, %r8d               #  316   0x2cae5  3      OPC=movl_r32_r32      
  movl $0x2, %ecx                #  317   0x2cae8  5      OPC=movl_r32_imm32    
  movl $0x1, %edx                #  318   0x2caed  5      OPC=movl_r32_imm32    
  movq %r12, %rsi                #  319   0x2caf2  3      OPC=movq_r64_r64      
  callq .mmap                    #  320   0x2caf5  5      OPC=callq_label       
  cmpq $0xff, %rax               #  321   0x2cafa  4      OPC=cmpq_r64_imm8     
  movq %rax, %r14                #  322   0x2cafe  3      OPC=movq_r64_r64      
  je .L_2cb77                    #  323   0x2cb01  2      OPC=je_label          
  movl 0x10(%rax), %eax          #  324   0x2cb03  3      OPC=movl_r32_m32      
  leaq (%rax,%rax,2), %rdx       #  325   0x2cb06  4      OPC=leaq_r64_m16      
  movl 0x8(%r14), %eax           #  326   0x2cb0a  4      OPC=movl_r32_m32      
  leaq (%rax,%rdx,4), %rax       #  327   0x2cb0e  4      OPC=leaq_r64_m16      
  movl 0x24(%r14), %edx          #  328   0x2cb12  4      OPC=movl_r32_m32      
  leaq (%rdx,%rdx,2), %rdx       #  329   0x2cb16  4      OPC=leaq_r64_m16      
  leaq (%rdx,%rdx,8), %rcx       #  330   0x2cb1a  4      OPC=leaq_r64_m16      
  movl 0x20(%r14), %edx          #  331   0x2cb1e  4      OPC=movl_r32_m32      
  leaq (%rdx,%rcx,4), %rdx       #  332   0x2cb22  4      OPC=leaq_r64_m16      
  cmpq %rdx, %rax                #  333   0x2cb26  3      OPC=cmpq_r64_r64      
  cmovlq %rdx, %rax              #  334   0x2cb29  4      OPC=cmovlq_r64_r64    
  movl 0x14(%r14), %edx          #  335   0x2cb2d  4      OPC=movl_r32_m32      
  addl 0x18(%r14), %edx          #  336   0x2cb31  4      OPC=addl_r32_m32      
  cmpq %rdx, %rax                #  337   0x2cb35  3      OPC=cmpq_r64_r64      
  cmovlq %rdx, %rax              #  338   0x2cb38  4      OPC=cmovlq_r64_r64    
  cmpq %rax, %r12                #  339   0x2cb3c  3      OPC=cmpq_r64_r64      
  jb .L_2cb6c                    #  340   0x2cb3f  2      OPC=jb_label          
  movslq %r15d, %rdi             #  341   0x2cb41  3      OPC=movslq_r64_r32    
  movl $0x3, %eax                #  342   0x2cb44  5      OPC=movl_r32_imm32    
  syscall                        #  343   0x2cb49  2      OPC=syscall           
  movq %r14, 0x396085(%rip)      #  344   0x2cb4b  7      OPC=movq_m64_r64      
  movl %r12d, 0x39608a(%rip)     #  345   0x2cb52  7      OPC=movl_m32_r32      
  jmpq .L_2c752                  #  346   0x2cb59  5      OPC=jmpq_label_1      
.L_2cb57:                        #        0x2cb5e  0      OPC=<label>           
  movq 0x394322(%rip), %rdx      #  347   0x2cb5e  7      OPC=movq_r64_m64      
  negl %r15d                     #  348   0x2cb65  3      OPC=negl_r32          
  xorl %eax, %eax                #  349   0x2cb68  2      OPC=xorl_r32_r32      
  movl %r15d, (%rdx)             #  350   0x2cb6a  3      OPC=movl_m32_r32      
  nop                            #  351   0x2cb6d  1      OPC=nop               
  jmpq .L_2c703                  #  352   0x2cb6e  5      OPC=jmpq_label_1      
.L_2cb6c:                        #        0x2cb73  0      OPC=<label>           
  movq %r12, %rsi                #  353   0x2cb73  3      OPC=movq_r64_r64      
  movq %r14, %rdi                #  354   0x2cb76  3      OPC=movq_r64_r64      
  callq .munmap                  #  355   0x2cb79  5      OPC=callq_label       
.L_2cb77:                        #        0x2cb7e  0      OPC=<label>           
  movslq %r15d, %rdi             #  356   0x2cb7e  3      OPC=movslq_r64_r32    
  movl $0x3, %eax                #  357   0x2cb81  5      OPC=movl_r32_imm32    
  syscall                        #  358   0x2cb86  2      OPC=syscall           
  xorl %eax, %eax                #  359   0x2cb88  2      OPC=xorl_r32_r32      
  jmpq .L_2c703                  #  360   0x2cb8a  5      OPC=jmpq_label_1      
.L_2cb88:                        #        0x2cb8f  0      OPC=<label>           
  movq %r14, %rdi                #  361   0x2cb8f  3      OPC=movq_r64_r64      
  callq .L_1f8c0                 #  362   0x2cb92  5      OPC=callq_label       
  xorl %eax, %eax                #  363   0x2cb97  2      OPC=xorl_r32_r32      
  jmpq .L_2c703                  #  364   0x2cb99  5      OPC=jmpq_label_1      
.L_2cb97:                        #        0x2cb9e  0      OPC=<label>           
  leaq 0x164282(%rip), %rcx      #  365   0x2cb9e  7      OPC=leaq_r64_m16      
  leaq 0x15d80e(%rip), %rsi      #  366   0x2cba5  7      OPC=leaq_r64_m16      
  leaq 0x1612a4(%rip), %rdi      #  367   0x2cbac  7      OPC=leaq_r64_m16      
  movl $0x137, %edx              #  368   0x2cbb3  5      OPC=movl_r32_imm32    
  callq .__assert_fail           #  369   0x2cbb8  5      OPC=callq_label       
  nop                            #  370   0x2cbbd  1      OPC=nop               
  nop                            #  371   0x2cbbe  1      OPC=nop               
  nop                            #  372   0x2cbbf  1      OPC=nop               
  nop                            #  373   0x2cbc0  1      OPC=nop               
  nop                            #  374   0x2cbc1  1      OPC=nop               
  nop                            #  375   0x2cbc2  1      OPC=nop               
  nop                            #  376   0x2cbc3  1      OPC=nop               
  nop                            #  377   0x2cbc4  1      OPC=nop               
  nop                            #  378   0x2cbc5  1      OPC=nop               
  nop                            #  379   0x2cbc6  1      OPC=nop               
                                                                                
.size _nl_load_locale_from_archive, .-_nl_load_locale_from_archive

