  .text
  .globl glob_in_dir
  .type glob_in_dir, @function

#! file-offset 0xcba40
#! rip-offset  0xcba40
#! capacity    2416 bytes

# Text                            #  Line  RIP      Bytes  Opcode               
.glob_in_dir:                     #        0xcba40  0      OPC=<label>          
  pushq %rbp                      #  1     0xcba40  1      OPC=pushq_r64_1      
  movq %rsp, %rbp                 #  2     0xcba41  3      OPC=movq_r64_r64     
  pushq %r15                      #  3     0xcba44  2      OPC=pushq_r64_1      
  pushq %r14                      #  4     0xcba46  2      OPC=pushq_r64_1      
  pushq %r13                      #  5     0xcba48  2      OPC=pushq_r64_1      
  pushq %r12                      #  6     0xcba4a  2      OPC=pushq_r64_1      
  movq %rdi, %r13                 #  7     0xcba4c  3      OPC=movq_r64_r64     
  pushq %rbx                      #  8     0xcba4f  1      OPC=pushq_r64_1      
  movq %rcx, %r14                 #  9     0xcba50  3      OPC=movq_r64_r64     
  movl %edx, %ebx                 #  10    0xcba53  2      OPC=movl_r32_r32     
  movq %r9, %r12                  #  11    0xcba55  3      OPC=movq_r64_r64     
  movl %ebx, %r15d                #  12    0xcba58  3      OPC=movl_r32_r32     
  subq $0x448, %rsp               #  13    0xcba5b  7      OPC=subq_r64_imm32   
  movq %rdi, -0x400(%rbp)         #  14    0xcba62  7      OPC=movq_m64_r64     
  movq %rsi, %rdi                 #  15    0xcba69  3      OPC=movq_r64_r64     
  movq %rsi, -0x430(%rbp)         #  16    0xcba6c  7      OPC=movq_m64_r64     
  movq %r8, -0x418(%rbp)          #  17    0xcba73  7      OPC=movq_m64_r64     
  andl $0x40, %r15d               #  18    0xcba7a  4      OPC=andl_r32_imm8    
  callq .strlen                   #  19    0xcba7e  5      OPC=callq_label      
  movq %rax, -0x438(%rbp)         #  20    0xcba83  7      OPC=movq_m64_r64     
  movzbl (%r13), %eax             #  21    0xcba8a  5      OPC=movzbl_r32_m8    
  movq $0x0, -0x240(%rbp)         #  22    0xcba8f  11     OPC=movq_m64_imm32   
  movq $0x40, -0x238(%rbp)        #  23    0xcba9a  11     OPC=movq_m64_imm32   
  testb %al, %al                  #  24    0xcbaa5  2      OPC=testb_r8_r8      
  je .L_cbaea                     #  25    0xcbaa7  2      OPC=je_label         
  testl %r15d, %r15d              #  26    0xcbaa9  3      OPC=testl_r32_r32    
  je .L_cc144                     #  27    0xcbaac  6      OPC=je_label_1       
  movq %r13, %rdx                 #  28    0xcbab2  3      OPC=movq_r64_r64     
  xorl %ecx, %ecx                 #  29    0xcbab5  2      OPC=xorl_r32_r32     
.L_cbab7:                         #        0xcbab7  0      OPC=<label>          
  cmpb $0x5b, %al                 #  30    0xcbab7  2      OPC=cmpb_al_imm8     
  je .L_cc193                     #  31    0xcbab9  6      OPC=je_label_1       
  jle .L_cbc2d                    #  32    0xcbabf  6      OPC=jle_label_1      
  cmpb $0x5c, %al                 #  33    0xcbac5  2      OPC=cmpb_al_imm8     
  je .L_cbad6                     #  34    0xcbac7  2      OPC=je_label         
  cmpb $0x5d, %al                 #  35    0xcbac9  2      OPC=cmpb_al_imm8     
  jne .L_cbad6                    #  36    0xcbacb  2      OPC=jne_label        
  testb $0x4, %cl                 #  37    0xcbacd  3      OPC=testb_r8_imm8    
  jne .L_cbc39                    #  38    0xcbad0  6      OPC=jne_label_1      
.L_cbad6:                         #        0xcbad6  0      OPC=<label>          
  movzbl 0x1(%rdx), %eax          #  39    0xcbad6  4      OPC=movzbl_r32_m8    
.L_cbada:                         #        0xcbada  0      OPC=<label>          
  addq $0x1, %rdx                 #  40    0xcbada  4      OPC=addq_r64_imm8    
  testb %al, %al                  #  41    0xcbade  2      OPC=testb_r8_r8      
  jne .L_cbab7                    #  42    0xcbae0  2      OPC=jne_label        
.L_cbae2:                         #        0xcbae2  0      OPC=<label>          
  testl %ecx, %ecx                #  43    0xcbae2  2      OPC=testl_r32_r32    
  jne .L_cbc39                    #  44    0xcbae4  6      OPC=jne_label_1      
.L_cbaea:                         #        0xcbaea  0      OPC=<label>          
  testl $0x810, %ebx              #  45    0xcbaea  6      OPC=testl_r32_imm32  
  jne .L_cbe99                    #  46    0xcbaf0  6      OPC=jne_label_1      
  movq -0x400(%rbp), %rdi         #  47    0xcbaf6  7      OPC=movq_r64_m64     
  callq .strlen                   #  48    0xcbafd  5      OPC=callq_label      
  movq %rax, %r13                 #  49    0xcbb02  3      OPC=movq_r64_r64     
  movq -0x438(%rbp), %rax         #  50    0xcbb05  7      OPC=movq_r64_m64     
  leaq 0x212(%r12,%rax,1), %rdi   #  51    0xcbb0c  8      OPC=leaq_r64_m16     
  addq %r13, %rdi                 #  52    0xcbb14  3      OPC=addq_r64_r64     
  cmpq $0x1000, %rdi              #  53    0xcbb17  7      OPC=cmpq_r64_imm32   
  ja .L_cc24e                     #  54    0xcbb1e  6      OPC=ja_label_1       
.L_cbb24:                         #        0xcbb24  0      OPC=<label>          
  movq %rsp, %rax                 #  55    0xcbb24  3      OPC=movq_r64_r64     
  movq -0x438(%rbp), %rsi         #  56    0xcbb27  7      OPC=movq_r64_m64     
  leaq 0x20(%rsi,%r13,1), %rdx    #  57    0xcbb2e  5      OPC=leaq_r64_m16     
  andq $0xf0, %rdx                #  58    0xcbb33  4      OPC=andq_r64_imm8    
  subq %rdx, %rsp                 #  59    0xcbb37  3      OPC=subq_r64_r64     
  leaq 0xf(%rsp), %r12            #  60    0xcbb3a  5      OPC=leaq_r64_m16     
  andq $0xf0, %r12                #  61    0xcbb3f  4      OPC=andq_r64_imm8    
  subq %rsp, %rax                 #  62    0xcbb43  3      OPC=subq_r64_r64     
  movl $0x1, %r14d                #  63    0xcbb46  6      OPC=movl_r32_imm32   
.L_cbb4c:                         #        0xcbb4c  0      OPC=<label>          
  movq -0x438(%rbp), %r15         #  64    0xcbb4c  7      OPC=movq_r64_m64     
  movq -0x430(%rbp), %rsi         #  65    0xcbb53  7      OPC=movq_r64_m64     
  movq %r12, %rdi                 #  66    0xcbb5a  3      OPC=movq_r64_r64     
  movq %r15, %rdx                 #  67    0xcbb5d  3      OPC=movq_r64_r64     
  callq .__GI_memcpy              #  68    0xcbb60  5      OPC=callq_label      
  movq -0x400(%rbp), %rsi         #  69    0xcbb65  7      OPC=movq_r64_m64     
  addq %r15, %rax                 #  70    0xcbb6c  3      OPC=addq_r64_r64     
  leaq 0x1(%r13), %rdx            #  71    0xcbb6f  4      OPC=leaq_r64_m16     
  leaq 0x1(%rax), %rdi            #  72    0xcbb73  4      OPC=leaq_r64_m16     
  movb $0x2f, (%rax)              #  73    0xcbb77  3      OPC=movb_m8_imm8     
  callq .__GI_memcpy              #  74    0xcbb7a  5      OPC=callq_label      
  testb $0x2, %bh                 #  75    0xcbb7f  3      OPC=testb_rh_imm8    
  jne .L_cc2d1                    #  76    0xcbb82  6      OPC=jne_label_1      
  leaq -0x360(%rbp), %rdx         #  77    0xcbb88  7      OPC=leaq_r64_m16     
  movq %r12, %rsi                 #  78    0xcbb8f  3      OPC=movq_r64_r64     
  movl $0x1, %edi                 #  79    0xcbb92  5      OPC=movl_r32_imm32   
  callq .__xstat                  #  80    0xcbb97  5      OPC=callq_label      
  testl %eax, %eax                #  81    0xcbb9c  2      OPC=testl_r32_r32    
  sete %al                        #  82    0xcbb9e  3      OPC=sete_r8          
.L_cbba1:                         #        0xcbba1  0      OPC=<label>          
  movl %ebx, %edx                 #  83    0xcbba1  2      OPC=movl_r32_r32     
  orl $0x10, %edx                 #  84    0xcbba3  3      OPC=orl_r32_imm8     
  testb %al, %al                  #  85    0xcbba6  2      OPC=testb_r8_r8      
  cmovnel %edx, %ebx              #  86    0xcbba8  3      OPC=cmovnel_r32_r32  
  testl %r14d, %r14d              #  87    0xcbbab  3      OPC=testl_r32_r32    
  je .L_cc2c4                     #  88    0xcbbae  6      OPC=je_label_1       
.L_cbbb4:                         #        0xcbbb4  0      OPC=<label>          
  movl %ebx, -0x41c(%rbp)         #  89    0xcbbb4  6      OPC=movl_m32_r32     
.L_cbbba:                         #        0xcbbba  0      OPC=<label>          
  leaq -0x240(%rbp), %rax         #  90    0xcbbba  7      OPC=leaq_r64_m16     
  xorl %r12d, %r12d               #  91    0xcbbc1  3      OPC=xorl_r32_r32     
  xorl %r13d, %r13d               #  92    0xcbbc4  3      OPC=xorl_r32_r32     
  movq %rax, -0x440(%rbp)         #  93    0xcbbc7  7      OPC=movq_m64_r64     
  movq %rax, -0x408(%rbp)         #  94    0xcbbce  7      OPC=movq_m64_r64     
  movq %rax, %rbx                 #  95    0xcbbd5  3      OPC=movq_r64_r64     
.L_cbbd8:                         #        0xcbbd8  0      OPC=<label>          
  testb $0x10, -0x41c(%rbp)       #  96    0xcbbd8  7      OPC=testb_m8_imm8    
  movl $0x3, %r14d                #  97    0xcbbdf  6      OPC=movl_r32_imm32   
  jne .L_cc1b4                    #  98    0xcbbe5  6      OPC=jne_label_1      
.L_cbbeb:                         #        0xcbbeb  0      OPC=<label>          
  testq %r13, %r13                #  99    0xcbbeb  3      OPC=testq_r64_r64    
  je .L_cc132                     #  100   0xcbbee  6      OPC=je_label_1       
.L_cbbf4:                         #        0xcbbf4  0      OPC=<label>          
  testl $0x200, -0x41c(%rbp)      #  101   0xcbbf4  10     OPC=testl_m32_imm32  
  movq 0x2f527b(%rip), %rbx       #  102   0xcbbfe  7      OPC=movq_r64_m64     
  movq %r13, %rdi                 #  103   0xcbc05  3      OPC=movq_r64_r64     
  movl (%rbx), %r12d              #  104   0xcbc08  3      OPC=movl_r32_m32     
  nop                             #  105   0xcbc0b  1      OPC=nop              
  jne .L_cc228                    #  106   0xcbc0c  6      OPC=jne_label_1      
  callq .closedir                 #  107   0xcbc12  5      OPC=callq_label      
.L_cbc17:                         #        0xcbc17  0      OPC=<label>          
  movl %r12d, (%rbx)              #  108   0xcbc17  3      OPC=movl_m32_r32     
  nop                             #  109   0xcbc1a  1      OPC=nop              
  movl %r14d, %eax                #  110   0xcbc1b  3      OPC=movl_r32_r32     
.L_cbc1e:                         #        0xcbc1e  0      OPC=<label>          
  leaq -0x28(%rbp), %rsp          #  111   0xcbc1e  4      OPC=leaq_r64_m16     
  popq %rbx                       #  112   0xcbc22  1      OPC=popq_r64_1       
  popq %r12                       #  113   0xcbc23  2      OPC=popq_r64_1       
  popq %r13                       #  114   0xcbc25  2      OPC=popq_r64_1       
  popq %r14                       #  115   0xcbc27  2      OPC=popq_r64_1       
  popq %r15                       #  116   0xcbc29  2      OPC=popq_r64_1       
  popq %rbp                       #  117   0xcbc2b  1      OPC=popq_r64_1       
  retq                            #  118   0xcbc2c  1      OPC=retq             
.L_cbc2d:                         #        0xcbc2d  0      OPC=<label>          
  cmpb $0x2a, %al                 #  119   0xcbc2d  2      OPC=cmpb_al_imm8     
  je .L_cbc39                     #  120   0xcbc2f  2      OPC=je_label         
  cmpb $0x3f, %al                 #  121   0xcbc31  2      OPC=cmpb_al_imm8     
  jne .L_cbad6                    #  122   0xcbc33  6      OPC=jne_label_1      
.L_cbc39:                         #        0xcbc39  0      OPC=<label>          
  movl %ebx, %eax                 #  123   0xcbc39  2      OPC=movl_r32_r32     
  movq -0x430(%rbp), %rdi         #  124   0xcbc3b  7      OPC=movq_r64_m64     
  andl $0x200, %eax               #  125   0xcbc42  5      OPC=andl_eax_imm32   
  movl %eax, -0x3f8(%rbp)         #  126   0xcbc47  6      OPC=movl_m32_r32     
  jne .L_cc308                    #  127   0xcbc4d  6      OPC=jne_label_1      
  callq .opendir                  #  128   0xcbc53  5      OPC=callq_label      
  testq %rax, %rax                #  129   0xcbc58  3      OPC=testq_r64_r64    
  movq %rax, %r13                 #  130   0xcbc5b  3      OPC=movq_r64_r64     
  je .L_cc328                     #  131   0xcbc5e  6      OPC=je_label_1       
  movl (%rax), %eax               #  132   0xcbc64  2      OPC=movl_r32_m32     
  movl %eax, -0x420(%rbp)         #  133   0xcbc66  6      OPC=movl_m32_r32     
.L_cbc6c:                         #        0xcbc6c  0      OPC=<label>          
  movl %ebx, %eax                 #  134   0xcbc6c  2      OPC=movl_r32_r32     
  movq $0x0, -0x428(%rbp)         #  135   0xcbc6e  11     OPC=movq_m64_imm32   
  andl $0x80, %eax                #  136   0xcbc79  5      OPC=andl_eax_imm32   
  cmpl $0x1, %eax                 #  137   0xcbc7e  3      OPC=cmpl_r32_imm8    
  sbbl %ecx, %ecx                 #  138   0xcbc81  2      OPC=sbbl_r32_r32     
  andl $0x4, %ecx                 #  139   0xcbc83  3      OPC=andl_r32_imm8    
  addl $0x2, %ecx                 #  140   0xcbc86  3      OPC=addl_r32_imm8    
  cmpl $0x1, %eax                 #  141   0xcbc89  3      OPC=cmpl_r32_imm8    
  sbbl %eax, %eax                 #  142   0xcbc8c  2      OPC=sbbl_r32_r32     
  andl $0x4, %eax                 #  143   0xcbc8e  3      OPC=andl_r32_imm8    
  testl %r15d, %r15d              #  144   0xcbc91  3      OPC=testl_r32_r32    
  cmovnel %ecx, %eax              #  145   0xcbc94  3      OPC=cmovnel_r32_r32  
  movl %eax, -0x410(%rbp)         #  146   0xcbc97  6      OPC=movl_m32_r32     
  leaq 0x210(%r12), %rax          #  147   0xcbc9d  8      OPC=leaq_r64_m16     
  xorl %r12d, %r12d               #  148   0xcbca5  3      OPC=xorl_r32_r32     
  movq %rax, -0x448(%rbp)         #  149   0xcbca8  7      OPC=movq_m64_r64     
  movl %ebx, %eax                 #  150   0xcbcaf  2      OPC=movl_r32_r32     
  andl $0x2000, %ebx              #  151   0xcbcb1  6      OPC=andl_r32_imm32   
  orb $0x1, %ah                   #  152   0xcbcb7  3      OPC=orb_rh_imm8      
  movl %ebx, -0x40c(%rbp)         #  153   0xcbcba  6      OPC=movl_m32_r32     
  movl %eax, -0x41c(%rbp)         #  154   0xcbcc0  6      OPC=movl_m32_r32     
  leaq -0x240(%rbp), %rax         #  155   0xcbcc6  7      OPC=leaq_r64_m16     
  movq %rax, -0x440(%rbp)         #  156   0xcbccd  7      OPC=movq_m64_r64     
  movq %rax, -0x408(%rbp)         #  157   0xcbcd4  7      OPC=movq_m64_r64     
  movq %rax, %rbx                 #  158   0xcbcdb  3      OPC=movq_r64_r64     
  leaq -0x360(%rbp), %rax         #  159   0xcbcde  7      OPC=leaq_r64_m16     
  movq %rax, -0x450(%rbp)         #  160   0xcbce5  7      OPC=movq_m64_r64     
  addq $0x13, %rax                #  161   0xcbcec  4      OPC=addq_r64_imm8    
  movq %rax, -0x458(%rbp)         #  162   0xcbcf0  7      OPC=movq_m64_r64     
  leaq -0x3f0(%rbp), %rax         #  163   0xcbcf7  7      OPC=leaq_r64_m16     
  movq %rax, -0x460(%rbp)         #  164   0xcbcfe  7      OPC=movq_m64_r64     
  movq -0x418(%rbp), %rax         #  165   0xcbd05  7      OPC=movq_r64_m64     
  addq $0x40, %rax                #  166   0xcbd0c  4      OPC=addq_r64_imm8    
  movq %rax, -0x468(%rbp)         #  167   0xcbd10  7      OPC=movq_m64_r64     
  nop                             #  168   0xcbd17  1      OPC=nop              
  nop                             #  169   0xcbd18  1      OPC=nop              
  nop                             #  170   0xcbd19  1      OPC=nop              
  nop                             #  171   0xcbd1a  1      OPC=nop              
  nop                             #  172   0xcbd1b  1      OPC=nop              
  nop                             #  173   0xcbd1c  1      OPC=nop              
  nop                             #  174   0xcbd1d  1      OPC=nop              
  nop                             #  175   0xcbd1e  1      OPC=nop              
  nop                             #  176   0xcbd1f  1      OPC=nop              
.L_cbd20:                         #        0xcbd20  0      OPC=<label>          
  movl -0x3f8(%rbp), %ecx         #  177   0xcbd20  6      OPC=movl_r32_m32     
  testl %ecx, %ecx                #  178   0xcbd26  2      OPC=testl_r32_r32    
  jne .L_cbe40                    #  179   0xcbd28  6      OPC=jne_label_1      
.L_cbd2e:                         #        0xcbd2e  0      OPC=<label>          
  movq %r13, %rdi                 #  180   0xcbd2e  3      OPC=movq_r64_r64     
  callq .readdir                  #  181   0xcbd31  5      OPC=callq_label      
  testq %rax, %rax                #  182   0xcbd36  3      OPC=testq_r64_r64    
  movq %rax, %r15                 #  183   0xcbd39  3      OPC=movq_r64_r64     
  je .L_cbeee                     #  184   0xcbd3c  6      OPC=je_label_1       
.L_cbd42:                         #        0xcbd42  0      OPC=<label>          
  movq (%rax), %rdx               #  185   0xcbd42  3      OPC=movq_r64_m64     
.L_cbd45:                         #        0xcbd45  0      OPC=<label>          
  testq %rdx, %rdx                #  186   0xcbd45  3      OPC=testq_r64_r64    
  je .L_cbd20                     #  187   0xcbd48  2      OPC=je_label         
  movl -0x40c(%rbp), %edx         #  188   0xcbd4a  6      OPC=movl_r32_m32     
  testl %edx, %edx                #  189   0xcbd50  2      OPC=testl_r32_r32    
  je .L_cbd61                     #  190   0xcbd52  2      OPC=je_label         
  movzbl 0x12(%r15), %eax         #  191   0xcbd54  5      OPC=movzbl_r32_m8    
  testb $0xfb, %al                #  192   0xcbd59  3      OPC=testb_r8_imm8    
  je .L_cbd61                     #  193   0xcbd5c  2      OPC=je_label         
  cmpb $0xa, %al                  #  194   0xcbd5e  2      OPC=cmpb_al_imm8     
  jne .L_cbd20                    #  195   0xcbd60  2      OPC=jne_label        
.L_cbd61:                         #        0xcbd62  0      OPC=<label>          
  leaq 0x13(%r15), %r14           #  196   0xcbd62  4      OPC=leaq_r64_m16     
  movl -0x410(%rbp), %edx         #  197   0xcbd66  6      OPC=movl_r32_m32     
  movq -0x400(%rbp), %rdi         #  198   0xcbd6c  7      OPC=movq_r64_m64     
  movq %r14, %rsi                 #  199   0xcbd73  3      OPC=movq_r64_r64     
  callq .fnmatch__GLIBC_2_2_5     #  200   0xcbd76  5      OPC=callq_label      
  testl %eax, %eax                #  201   0xcbd7b  2      OPC=testl_r32_r32    
  jne .L_cbd20                    #  202   0xcbd7d  2      OPC=jne_label        
  movzbl 0x12(%r15), %eax         #  203   0xcbd7f  5      OPC=movzbl_r32_m8    
  cmpb $0xa, %al                  #  204   0xcbd84  2      OPC=cmpb_al_imm8     
  je .L_cbea7                     #  205   0xcbd86  6      OPC=je_label_1       
  testb %al, %al                  #  206   0xcbd8c  2      OPC=testb_r8_r8      
  je .L_cbea7                     #  207   0xcbd8e  6      OPC=je_label_1       
.L_cbd93:                         #        0xcbd94  0      OPC=<label>          
  cmpq %r12, 0x8(%rbx)            #  208   0xcbd94  4      OPC=cmpq_m64_r64     
  jne .L_cbdf1                    #  209   0xcbd98  2      OPC=jne_label        
  leaq (%r12,%r12,1), %r15        #  210   0xcbd9a  4      OPC=leaq_r64_m16     
  movq -0x448(%rbp), %rax         #  211   0xcbd9e  7      OPC=movq_r64_m64     
  leaq 0x10(,%r15,8), %rdx        #  212   0xcbda5  8      OPC=leaq_r64_m16     
  leaq (%rax,%rdx,1), %rdi        #  213   0xcbdad  4      OPC=leaq_r64_m16     
  cmpq $0x1000, %rdi              #  214   0xcbdb1  7      OPC=cmpq_r64_imm32   
  ja .L_cc09d                     #  215   0xcbdb8  6      OPC=ja_label_1       
.L_cbdbd:                         #        0xcbdbe  0      OPC=<label>          
  movq %rsp, %rax                 #  216   0xcbdbe  3      OPC=movq_r64_r64     
  addq $0x10, %rdx                #  217   0xcbdc1  4      OPC=addq_r64_imm8    
  subq %rdx, %rsp                 #  218   0xcbdc5  3      OPC=subq_r64_r64     
  leaq 0xf(%rsp), %rdx            #  219   0xcbdc8  5      OPC=leaq_r64_m16     
  andq $0xf0, %rdx                #  220   0xcbdcd  4      OPC=andq_r64_imm8    
  movq %rdx, -0x408(%rbp)         #  221   0xcbdd1  7      OPC=movq_m64_r64     
  subq %rsp, %rax                 #  222   0xcbdd8  3      OPC=subq_r64_r64     
  addq %rax, -0x448(%rbp)         #  223   0xcbddb  7      OPC=addq_m64_r64     
  movq %rdx, %rax                 #  224   0xcbde2  3      OPC=movq_r64_r64     
.L_cbde4:                         #        0xcbde5  0      OPC=<label>          
  movq %rbx, (%rax)               #  225   0xcbde5  3      OPC=movq_m64_r64     
  movq %r15, 0x8(%rax)            #  226   0xcbde8  4      OPC=movq_m64_r64     
  movq %rax, %rbx                 #  227   0xcbdec  3      OPC=movq_r64_r64     
  xorl %r12d, %r12d               #  228   0xcbdef  3      OPC=xorl_r32_r32     
.L_cbdf1:                         #        0xcbdf2  0      OPC=<label>          
  movq %r14, %rdi                 #  229   0xcbdf2  3      OPC=movq_r64_r64     
  callq .strlen                   #  230   0xcbdf5  5      OPC=callq_label      
  leaq 0x1(%rax), %rdi            #  231   0xcbdfa  4      OPC=leaq_r64_m16     
  movq %rax, %r15                 #  232   0xcbdfe  3      OPC=movq_r64_r64     
  callq .memalign_plt             #  233   0xcbe01  5      OPC=callq_label      
  testq %rax, %rax                #  234   0xcbe06  3      OPC=testq_r64_r64    
  movq %rax, 0x10(%rbx,%r12,8)    #  235   0xcbe09  5      OPC=movq_m64_r64     
  je .L_cc0c9                     #  236   0xcbe0e  6      OPC=je_label_1       
  movq %r15, %rdx                 #  237   0xcbe14  3      OPC=movq_r64_r64     
  movq %r14, %rsi                 #  238   0xcbe17  3      OPC=movq_r64_r64     
  movq %rax, %rdi                 #  239   0xcbe1a  3      OPC=movq_r64_r64     
  callq .__GI_memcpy              #  240   0xcbe1d  5      OPC=callq_label      
  movl -0x3f8(%rbp), %ecx         #  241   0xcbe22  6      OPC=movl_r32_m32     
  addq $0x1, %r12                 #  242   0xcbe28  4      OPC=addq_r64_imm8    
  addq $0x1, -0x428(%rbp)         #  243   0xcbe2c  8      OPC=addq_m64_imm8    
  movb $0x0, (%rax,%r15,1)        #  244   0xcbe34  5      OPC=movb_m8_imm8     
  testl %ecx, %ecx                #  245   0xcbe39  2      OPC=testl_r32_r32    
  je .L_cbd2e                     #  246   0xcbe3b  6      OPC=je_label_1       
.L_cbe40:                         #        0xcbe41  0      OPC=<label>          
  movq -0x418(%rbp), %rax         #  247   0xcbe41  7      OPC=movq_r64_m64     
  movq %r13, %rdi                 #  248   0xcbe48  3      OPC=movq_r64_r64     
  callq 0x28(%rax)                #  249   0xcbe4b  3      OPC=callq_m64        
  testq %rax, %rax                #  250   0xcbe4e  3      OPC=testq_r64_r64    
  movq %rax, %r14                 #  251   0xcbe51  3      OPC=movq_r64_r64     
  je .L_cbeee                     #  252   0xcbe54  6      OPC=je_label_1       
  leaq 0x13(%rax), %r15           #  253   0xcbe5a  4      OPC=leaq_r64_m16     
  movq %r15, %rdi                 #  254   0xcbe5e  3      OPC=movq_r64_r64     
  callq .strlen                   #  255   0xcbe61  5      OPC=callq_label      
  movq -0x458(%rbp), %rdi         #  256   0xcbe66  7      OPC=movq_r64_m64     
  leaq 0x1(%rax), %rdx            #  257   0xcbe6d  4      OPC=leaq_r64_m16     
  movq %r15, %rsi                 #  258   0xcbe71  3      OPC=movq_r64_r64     
  callq .__GI_memcpy              #  259   0xcbe74  5      OPC=callq_label      
  movq (%r14), %rdx               #  260   0xcbe79  3      OPC=movq_r64_m64     
  movq -0x450(%rbp), %r15         #  261   0xcbe7c  7      OPC=movq_r64_m64     
  movq %rdx, -0x360(%rbp)         #  262   0xcbe83  7      OPC=movq_m64_r64     
  movzbl 0x12(%r14), %eax         #  263   0xcbe8a  5      OPC=movzbl_r32_m8    
  movb %al, -0x34e(%rbp)          #  264   0xcbe8f  6      OPC=movb_m8_r8       
  jmpq .L_cbd45                   #  265   0xcbe95  5      OPC=jmpq_label_1     
.L_cbe99:                         #        0xcbe9a  0      OPC=<label>          
  orl $0x10, %ebx                 #  266   0xcbe9a  3      OPC=orl_r32_imm8     
  movl %ebx, -0x41c(%rbp)         #  267   0xcbe9d  6      OPC=movl_m32_r32     
  jmpq .L_cbbba                   #  268   0xcbea3  5      OPC=jmpq_label_1     
.L_cbea7:                         #        0xcbea8  0      OPC=<label>          
  movl -0x3f8(%rbp), %eax         #  269   0xcbea8  6      OPC=movl_r32_m32     
  testl %eax, %eax                #  270   0xcbeae  2      OPC=testl_r32_r32    
  jne .L_cc1fe                    #  271   0xcbeb0  6      OPC=jne_label_1      
  movq -0x460(%rbp), %rcx         #  272   0xcbeb6  7      OPC=movq_r64_m64     
  movl -0x420(%rbp), %esi         #  273   0xcbebd  6      OPC=movl_r32_m32     
  xorl %r8d, %r8d                 #  274   0xcbec3  3      OPC=xorl_r32_r32     
  movq %r14, %rdx                 #  275   0xcbec6  3      OPC=movq_r64_r64     
  movl $0x1, %edi                 #  276   0xcbec9  5      OPC=movl_r32_imm32   
  callq .__fxstatat               #  277   0xcbece  5      OPC=callq_label      
  testl %eax, %eax                #  278   0xcbed3  2      OPC=testl_r32_r32    
  je .L_cbd93                     #  279   0xcbed5  6      OPC=je_label_1       
  movq %r13, %rdi                 #  280   0xcbedb  3      OPC=movq_r64_r64     
  callq .readdir                  #  281   0xcbede  5      OPC=callq_label      
  testq %rax, %rax                #  282   0xcbee3  3      OPC=testq_r64_r64    
  movq %rax, %r15                 #  283   0xcbee6  3      OPC=movq_r64_r64     
  jne .L_cbd42                    #  284   0xcbee9  6      OPC=jne_label_1      
.L_cbeee:                         #        0xcbeef  0      OPC=<label>          
  cmpq $0x0, -0x428(%rbp)         #  285   0xcbeef  8      OPC=cmpq_m64_imm8    
  movq -0x428(%rbp), %rdx         #  286   0xcbef7  7      OPC=movq_r64_m64     
  je .L_cbbd8                     #  287   0xcbefe  6      OPC=je_label_1       
.L_cbf03:                         #        0xcbf04  0      OPC=<label>          
  movq -0x418(%rbp), %rsi         #  288   0xcbf04  7      OPC=movq_r64_m64     
  movq 0x10(%rsi), %rcx           #  289   0xcbf0b  4      OPC=movq_r64_m64     
  movq (%rsi), %rax               #  290   0xcbf0f  3      OPC=movq_r64_m64     
  movq %rcx, %rsi                 #  291   0xcbf12  3      OPC=movq_r64_r64     
  notq %rsi                       #  292   0xcbf15  3      OPC=notq_r64         
  cmpq %rsi, %rax                 #  293   0xcbf18  3      OPC=cmpq_r64_r64     
  ja .L_cc0c9                     #  294   0xcbf1b  6      OPC=ja_label_1       
  addq %rcx, %rax                 #  295   0xcbf21  3      OPC=addq_r64_r64     
  movq %rdx, %rcx                 #  296   0xcbf24  3      OPC=movq_r64_r64     
  notq %rcx                       #  297   0xcbf27  3      OPC=notq_r64         
  cmpq %rcx, %rax                 #  298   0xcbf2a  3      OPC=cmpq_r64_r64     
  ja .L_cc0c9                     #  299   0xcbf2d  6      OPC=ja_label_1       
  addq %rdx, %rax                 #  300   0xcbf33  3      OPC=addq_r64_r64     
  cmpq $0xff, %rax                #  301   0xcbf36  4      OPC=cmpq_r64_imm8    
  je .L_cc0c9                     #  302   0xcbf3a  6      OPC=je_label_1       
  addq $0x1, %rax                 #  303   0xcbf40  4      OPC=addq_r64_imm8    
  movq $0x1fffffffffffffff, %rdx  #  304   0xcbf44  10     OPC=movq_r64_imm64   
  cmpq %rdx, %rax                 #  305   0xcbf4e  3      OPC=cmpq_r64_r64     
  ja .L_cc0c9                     #  306   0xcbf51  6      OPC=ja_label_1       
  leaq (,%rax,8), %rsi            #  307   0xcbf57  8      OPC=leaq_r64_m16     
  movq -0x418(%rbp), %rax         #  308   0xcbf5f  7      OPC=movq_r64_m64     
  movq 0x8(%rax), %rdi            #  309   0xcbf66  4      OPC=movq_r64_m64     
  callq .__tls_get_addr_plt       #  310   0xcbf6a  5      OPC=callq_label      
  testq %rax, %rax                #  311   0xcbf6f  3      OPC=testq_r64_r64    
  movq %rax, %r15                 #  312   0xcbf72  3      OPC=movq_r64_r64     
  je .L_cc0c9                     #  313   0xcbf75  6      OPC=je_label_1       
  movq %r13, -0x3f8(%rbp)         #  314   0xcbf7b  7      OPC=movq_m64_r64     
.L_cbf81:                         #        0xcbf82  0      OPC=<label>          
  testq %r12, %r12                #  315   0xcbf82  3      OPC=testq_r64_r64    
  je .L_cc070                     #  316   0xcbf85  6      OPC=je_label_1       
  movq -0x418(%rbp), %rax         #  317   0xcbf8b  7      OPC=movq_r64_m64     
  leaq 0x20(%rbx), %rdi           #  318   0xcbf92  4      OPC=leaq_r64_m16     
  movq 0x10(%rax), %r10           #  319   0xcbf96  4      OPC=movq_r64_m64     
  movq (%rax), %r8                #  320   0xcbf9a  3      OPC=movq_r64_m64     
  leaq 0x10(%rbx), %rax           #  321   0xcbf9d  4      OPC=leaq_r64_m16     
  leaq (%r10,%r8,1), %rsi         #  322   0xcbfa1  4      OPC=leaq_r64_m16     
  leaq (,%rsi,8), %rdx            #  323   0xcbfa5  8      OPC=leaq_r64_m16     
  leaq 0x10(,%rsi,8), %rsi        #  324   0xcbfad  8      OPC=leaq_r64_m16     
  leaq (%r15,%rdx,1), %rcx        #  325   0xcbfb5  4      OPC=leaq_r64_m16     
  cmpq %rdi, %rcx                 #  326   0xcbfb9  3      OPC=cmpq_r64_r64     
  setae %dil                      #  327   0xcbfbc  4      OPC=setae_r8         
  addq %r15, %rsi                 #  328   0xcbfc0  3      OPC=addq_r64_r64     
  cmpq %rsi, %rax                 #  329   0xcbfc3  3      OPC=cmpq_r64_r64     
  setae %sil                      #  330   0xcbfc6  4      OPC=setae_r8         
  orb %sil, %dil                  #  331   0xcbfca  3      OPC=orb_r8_r8        
  je .L_cc2ef                     #  332   0xcbfcd  6      OPC=je_label_1       
  cmpq $0x18, %r12                #  333   0xcbfd3  4      OPC=cmpq_r64_imm8    
  jbe .L_cc2ef                    #  334   0xcbfd7  6      OPC=jbe_label_1      
  shlq $0x3c, %rax                #  335   0xcbfdd  4      OPC=shlq_r64_imm8    
  shrq $0x3f, %rax                #  336   0xcbfe1  4      OPC=shrq_r64_imm8    
  cmpq %r12, %rax                 #  337   0xcbfe5  3      OPC=cmpq_r64_r64     
  cmovaq %r12, %rax               #  338   0xcbfe8  4      OPC=cmovaq_r64_r64   
  testq %rax, %rax                #  339   0xcbfec  3      OPC=testq_r64_r64    
  je .L_cc237                     #  340   0xcbfef  6      OPC=je_label_1       
  movq 0x10(%rbx), %rsi           #  341   0xcbff5  4      OPC=movq_r64_m64     
  leaq 0x1(%r8), %r11             #  342   0xcbff9  4      OPC=leaq_r64_m16     
  movl $0x1, %r9d                 #  343   0xcbffd  6      OPC=movl_r32_imm32   
  movq %rsi, (%rcx)               #  344   0xcc003  3      OPC=movq_m64_r64     
.L_cc005:                         #        0xcc006  0      OPC=<label>          
  movq %r12, %r13                 #  345   0xcc006  3      OPC=movq_r64_r64     
  subq %rax, %r13                 #  346   0xcc009  3      OPC=subq_r64_r64     
  leaq 0x10(,%rax,8), %rax        #  347   0xcc00c  8      OPC=leaq_r64_m16     
  leaq -0x2(%r13), %rcx           #  348   0xcc014  4      OPC=leaq_r64_m16     
  leaq -0x10(%rdx,%rax,1), %rsi   #  349   0xcc018  5      OPC=leaq_r64_m16     
  leaq (%rbx,%rax,1), %rdi        #  350   0xcc01d  4      OPC=leaq_r64_m16     
  xorl %edx, %edx                 #  351   0xcc021  2      OPC=xorl_r32_r32     
  shrq $0x1, %rcx                 #  352   0xcc023  3      OPC=shrq_r64_one     
  xorl %eax, %eax                 #  353   0xcc026  2      OPC=xorl_r32_r32     
  addq $0x1, %rcx                 #  354   0xcc028  4      OPC=addq_r64_imm8    
  addq %r15, %rsi                 #  355   0xcc02c  3      OPC=addq_r64_r64     
  leaq (%rcx,%rcx,1), %r14        #  356   0xcc02f  4      OPC=leaq_r64_m16     
.L_cc032:                         #        0xcc033  0      OPC=<label>          
  movdqa (%rdi,%rax,1), %xmm0     #  357   0xcc033  5      OPC=movdqa_xmm_m128  
  addq $0x1, %rdx                 #  358   0xcc038  4      OPC=addq_r64_imm8    
  movups %xmm0, (%rsi,%rax,1)     #  359   0xcc03c  4      OPC=movups_m128_xmm  
  addq $0x10, %rax                #  360   0xcc040  4      OPC=addq_r64_imm8    
  cmpq %rcx, %rdx                 #  361   0xcc044  3      OPC=cmpq_r64_r64     
  jb .L_cc032                     #  362   0xcc047  2      OPC=jb_label         
  addq %r14, %r11                 #  363   0xcc049  3      OPC=addq_r64_r64     
  cmpq %r14, %r13                 #  364   0xcc04c  3      OPC=cmpq_r64_r64     
  leaq (%r9,%r14,1), %rax         #  365   0xcc04f  4      OPC=leaq_r64_m16     
  je .L_cc063                     #  366   0xcc053  2      OPC=je_label         
  addq $0x2, %rax                 #  367   0xcc055  4      OPC=addq_r64_imm8    
  addq %r11, %r10                 #  368   0xcc059  3      OPC=addq_r64_r64     
  movq (%rbx,%rax,8), %rax        #  369   0xcc05c  4      OPC=movq_r64_m64     
  movq %rax, (%r15,%r10,8)        #  370   0xcc060  4      OPC=movq_m64_r64     
.L_cc063:                         #        0xcc064  0      OPC=<label>          
  movq -0x418(%rbp), %rax         #  371   0xcc064  7      OPC=movq_r64_m64     
  addq %r12, %r8                  #  372   0xcc06b  3      OPC=addq_r64_r64     
  movq %r8, (%rax)                #  373   0xcc06e  3      OPC=movq_m64_r64     
.L_cc070:                         #        0xcc071  0      OPC=<label>          
  movq (%rbx), %r14               #  374   0xcc071  3      OPC=movq_r64_m64     
  testq %r14, %r14                #  375   0xcc074  3      OPC=testq_r64_r64    
  je .L_cc285                     #  376   0xcc077  6      OPC=je_label_1       
  cmpq -0x408(%rbp), %rbx         #  377   0xcc07d  7      OPC=cmpq_r64_m64     
  movq 0x8(%r14), %r12            #  378   0xcc084  4      OPC=movq_r64_m64     
  je .L_cc242                     #  379   0xcc088  6      OPC=je_label_1       
  movq %rbx, %rdi                 #  380   0xcc08e  3      OPC=movq_r64_r64     
  callq .L_1f8c0                  #  381   0xcc091  5      OPC=callq_label      
.L_cc095:                         #        0xcc096  0      OPC=<label>          
  movq %r14, %rbx                 #  382   0xcc096  3      OPC=movq_r64_r64     
  jmpq .L_cbf81                   #  383   0xcc099  5      OPC=jmpq_label_1     
.L_cc09d:                         #        0xcc09e  0      OPC=<label>          
  movq %rdx, -0x470(%rbp)         #  384   0xcc09e  7      OPC=movq_m64_r64     
  callq .__libc_alloca_cutoff     #  385   0xcc0a5  5      OPC=callq_label      
  testl %eax, %eax                #  386   0xcc0aa  2      OPC=testl_r32_r32    
  movq -0x470(%rbp), %rdx         #  387   0xcc0ac  7      OPC=movq_r64_m64     
  jne .L_cbdbd                    #  388   0xcc0b3  6      OPC=jne_label_1      
  movq %rdx, %rdi                 #  389   0xcc0b9  3      OPC=movq_r64_r64     
  callq .memalign_plt             #  390   0xcc0bc  5      OPC=callq_label      
  testq %rax, %rax                #  391   0xcc0c1  3      OPC=testq_r64_r64    
  jne .L_cbde4                    #  392   0xcc0c4  6      OPC=jne_label_1      
.L_cc0c9:                         #        0xcc0ca  0      OPC=<label>          
  movq -0x408(%rbp), %r15         #  393   0xcc0ca  7      OPC=movq_r64_m64     
.L_cc0d0:                         #        0xcc0d1  0      OPC=<label>          
  testq %r12, %r12                #  394   0xcc0d1  3      OPC=testq_r64_r64    
  je .L_cc0f3                     #  395   0xcc0d4  2      OPC=je_label         
  xorl %r14d, %r14d               #  396   0xcc0d6  3      OPC=xorl_r32_r32     
  nop                             #  397   0xcc0d9  1      OPC=nop              
  nop                             #  398   0xcc0da  1      OPC=nop              
  nop                             #  399   0xcc0db  1      OPC=nop              
  nop                             #  400   0xcc0dc  1      OPC=nop              
  nop                             #  401   0xcc0dd  1      OPC=nop              
  nop                             #  402   0xcc0de  1      OPC=nop              
  nop                             #  403   0xcc0df  1      OPC=nop              
  nop                             #  404   0xcc0e0  1      OPC=nop              
.L_cc0e0:                         #        0xcc0e1  0      OPC=<label>          
  movq 0x10(%rbx,%r14,8), %rdi    #  405   0xcc0e1  5      OPC=movq_r64_m64     
  addq $0x1, %r14                 #  406   0xcc0e6  4      OPC=addq_r64_imm8    
  callq .L_1f8c0                  #  407   0xcc0ea  5      OPC=callq_label      
  cmpq %r12, %r14                 #  408   0xcc0ef  3      OPC=cmpq_r64_r64     
  jne .L_cc0e0                    #  409   0xcc0f2  2      OPC=jne_label        
.L_cc0f3:                         #        0xcc0f4  0      OPC=<label>          
  movq (%rbx), %r14               #  410   0xcc0f4  3      OPC=movq_r64_m64     
  testq %r14, %r14                #  411   0xcc0f7  3      OPC=testq_r64_r64    
  je .L_cc116                     #  412   0xcc0fa  2      OPC=je_label         
  cmpq %r15, %rbx                 #  413   0xcc0fc  3      OPC=cmpq_r64_r64     
  movq 0x8(%r14), %r12            #  414   0xcc0ff  4      OPC=movq_r64_m64     
  je .L_cc111                     #  415   0xcc103  2      OPC=je_label         
  movq %rbx, %rdi                 #  416   0xcc105  3      OPC=movq_r64_r64     
  callq .L_1f8c0                  #  417   0xcc108  5      OPC=callq_label      
.L_cc10c:                         #        0xcc10d  0      OPC=<label>          
  movq %r14, %rbx                 #  418   0xcc10d  3      OPC=movq_r64_r64     
  jmpq .L_cc0d0                   #  419   0xcc110  2      OPC=jmpq_label       
.L_cc111:                         #        0xcc112  0      OPC=<label>          
  movq %r14, %r15                 #  420   0xcc112  3      OPC=movq_r64_r64     
  jmpq .L_cc10c                   #  421   0xcc115  2      OPC=jmpq_label       
.L_cc116:                         #        0xcc117  0      OPC=<label>          
  cmpq -0x440(%rbp), %rbx         #  422   0xcc117  7      OPC=cmpq_r64_m64     
  jne .L_cc362                    #  423   0xcc11e  6      OPC=jne_label_1      
  testq %r13, %r13                #  424   0xcc124  3      OPC=testq_r64_r64    
  movl $0x1, %r14d                #  425   0xcc127  6      OPC=movl_r32_imm32   
  jne .L_cbbf4                    #  426   0xcc12d  6      OPC=jne_label_1      
.L_cc132:                         #        0xcc133  0      OPC=<label>          
  leaq -0x28(%rbp), %rsp          #  427   0xcc133  4      OPC=leaq_r64_m16     
  movl %r14d, %eax                #  428   0xcc137  3      OPC=movl_r32_r32     
  popq %rbx                       #  429   0xcc13a  1      OPC=popq_r64_1       
  popq %r12                       #  430   0xcc13b  2      OPC=popq_r64_1       
  popq %r13                       #  431   0xcc13d  2      OPC=popq_r64_1       
  popq %r14                       #  432   0xcc13f  2      OPC=popq_r64_1       
  popq %r15                       #  433   0xcc141  2      OPC=popq_r64_1       
  popq %rbp                       #  434   0xcc143  1      OPC=popq_r64_1       
  retq                            #  435   0xcc144  1      OPC=retq             
.L_cc144:                         #        0xcc145  0      OPC=<label>          
  xorl %ecx, %ecx                 #  436   0xcc145  2      OPC=xorl_r32_r32     
  cmpb $0x5b, %al                 #  437   0xcc147  2      OPC=cmpb_al_imm8     
  movq -0x400(%rbp), %rdx         #  438   0xcc149  7      OPC=movq_r64_m64     
  je .L_cc178                     #  439   0xcc150  2      OPC=je_label         
.L_cc151:                         #        0xcc152  0      OPC=<label>          
  jle .L_cc181                    #  440   0xcc152  2      OPC=jle_label        
  cmpb $0x5c, %al                 #  441   0xcc154  2      OPC=cmpb_al_imm8     
  je .L_cc19f                     #  442   0xcc156  2      OPC=je_label         
  cmpb $0x5d, %al                 #  443   0xcc158  2      OPC=cmpb_al_imm8     
  jne .L_cc164                    #  444   0xcc15a  2      OPC=jne_label        
  testb $0x4, %cl                 #  445   0xcc15c  3      OPC=testb_r8_imm8    
  jne .L_cbc39                    #  446   0xcc15f  6      OPC=jne_label_1      
.L_cc164:                         #        0xcc165  0      OPC=<label>          
  movzbl 0x1(%rdx), %eax          #  447   0xcc165  4      OPC=movzbl_r32_m8    
.L_cc168:                         #        0xcc169  0      OPC=<label>          
  addq $0x1, %rdx                 #  448   0xcc169  4      OPC=addq_r64_imm8    
  testb %al, %al                  #  449   0xcc16d  2      OPC=testb_r8_r8      
  je .L_cbae2                     #  450   0xcc16f  6      OPC=je_label_1       
  cmpb $0x5b, %al                 #  451   0xcc175  2      OPC=cmpb_al_imm8     
  jne .L_cc151                    #  452   0xcc177  2      OPC=jne_label        
.L_cc178:                         #        0xcc179  0      OPC=<label>          
  orl $0x4, %ecx                  #  453   0xcc179  3      OPC=orl_r32_imm8     
  movzbl 0x1(%rdx), %eax          #  454   0xcc17c  4      OPC=movzbl_r32_m8    
  jmpq .L_cc168                   #  455   0xcc180  2      OPC=jmpq_label       
.L_cc181:                         #        0xcc182  0      OPC=<label>          
  cmpb $0x2a, %al                 #  456   0xcc182  2      OPC=cmpb_al_imm8     
  je .L_cbc39                     #  457   0xcc184  6      OPC=je_label_1       
  cmpb $0x3f, %al                 #  458   0xcc18a  2      OPC=cmpb_al_imm8     
  je .L_cbc39                     #  459   0xcc18c  6      OPC=je_label_1       
  jmpq .L_cc164                   #  460   0xcc192  2      OPC=jmpq_label       
.L_cc193:                         #        0xcc194  0      OPC=<label>          
  orl $0x4, %ecx                  #  461   0xcc194  3      OPC=orl_r32_imm8     
  movzbl 0x1(%rdx), %eax          #  462   0xcc197  4      OPC=movzbl_r32_m8    
  jmpq .L_cbada                   #  463   0xcc19b  5      OPC=jmpq_label_1     
.L_cc19f:                         #        0xcc1a0  0      OPC=<label>          
  xorl %eax, %eax                 #  464   0xcc1a0  2      OPC=xorl_r32_r32     
  cmpb $0x0, 0x1(%rdx)            #  465   0xcc1a2  4      OPC=cmpb_m8_imm8     
  je .L_cc1af                     #  466   0xcc1a6  2      OPC=je_label         
  movzbl 0x2(%rdx), %eax          #  467   0xcc1a8  4      OPC=movzbl_r32_m8    
  addq $0x1, %rdx                 #  468   0xcc1ac  4      OPC=addq_r64_imm8    
.L_cc1af:                         #        0xcc1b0  0      OPC=<label>          
  orl $0x2, %ecx                  #  469   0xcc1b0  3      OPC=orl_r32_imm8     
  jmpq .L_cc168                   #  470   0xcc1b3  2      OPC=jmpq_label       
.L_cc1b4:                         #        0xcc1b5  0      OPC=<label>          
  movq -0x400(%rbp), %r15         #  471   0xcc1b5  7      OPC=movq_r64_m64     
  movq %r15, %rdi                 #  472   0xcc1bc  3      OPC=movq_r64_r64     
  callq .strlen                   #  473   0xcc1bf  5      OPC=callq_label      
  leaq 0x1(%rax), %rdi            #  474   0xcc1c4  4      OPC=leaq_r64_m16     
  movq %rax, %r14                 #  475   0xcc1c8  3      OPC=movq_r64_r64     
  callq .memalign_plt             #  476   0xcc1cb  5      OPC=callq_label      
  testq %rax, %rax                #  477   0xcc1d0  3      OPC=testq_r64_r64    
  movq %rax, 0x10(%rbx,%r12,8)    #  478   0xcc1d3  5      OPC=movq_m64_r64     
  je .L_cc0c9                     #  479   0xcc1d8  6      OPC=je_label_1       
  movq %r14, %rdx                 #  480   0xcc1de  3      OPC=movq_r64_r64     
  movq %r15, %rsi                 #  481   0xcc1e1  3      OPC=movq_r64_r64     
  movq %rax, %rdi                 #  482   0xcc1e4  3      OPC=movq_r64_r64     
  callq .__GI_memcpy              #  483   0xcc1e7  5      OPC=callq_label      
  addq $0x1, %r12                 #  484   0xcc1ec  4      OPC=addq_r64_imm8    
  movb $0x0, (%rax,%r14,1)        #  485   0xcc1f0  5      OPC=movb_m8_imm8     
  movl $0x1, %edx                 #  486   0xcc1f5  5      OPC=movl_r32_imm32   
  jmpq .L_cbf03                   #  487   0xcc1fa  5      OPC=jmpq_label_1     
.L_cc1fe:                         #        0xcc1ff  0      OPC=<label>          
  movq -0x468(%rbp), %rcx         #  488   0xcc1ff  7      OPC=movq_r64_m64     
  movq -0x438(%rbp), %rsi         #  489   0xcc206  7      OPC=movq_r64_m64     
  movq %r14, %rdx                 #  490   0xcc20d  3      OPC=movq_r64_r64     
  movq -0x430(%rbp), %rdi         #  491   0xcc210  7      OPC=movq_r64_m64     
  callq .link_exists2_p_isra_0    #  492   0xcc217  5      OPC=callq_label      
  testl %eax, %eax                #  493   0xcc21c  2      OPC=testl_r32_r32    
  jne .L_cbd93                    #  494   0xcc21e  6      OPC=jne_label_1      
  jmpq .L_cbd20                   #  495   0xcc224  5      OPC=jmpq_label_1     
.L_cc228:                         #        0xcc229  0      OPC=<label>          
  movq -0x418(%rbp), %rax         #  496   0xcc229  7      OPC=movq_r64_m64     
  callq 0x20(%rax)                #  497   0xcc230  3      OPC=callq_m64        
  jmpq .L_cbc17                   #  498   0xcc233  5      OPC=jmpq_label_1     
.L_cc237:                         #        0xcc238  0      OPC=<label>          
  movq %r8, %r11                  #  499   0xcc238  3      OPC=movq_r64_r64     
  xorl %r9d, %r9d                 #  500   0xcc23b  3      OPC=xorl_r32_r32     
  jmpq .L_cc005                   #  501   0xcc23e  5      OPC=jmpq_label_1     
.L_cc242:                         #        0xcc243  0      OPC=<label>          
  movq %r14, -0x408(%rbp)         #  502   0xcc243  7      OPC=movq_m64_r64     
  jmpq .L_cc095                   #  503   0xcc24a  5      OPC=jmpq_label_1     
.L_cc24e:                         #        0xcc24f  0      OPC=<label>          
  callq .__libc_alloca_cutoff     #  504   0xcc24f  5      OPC=callq_label      
  testl %eax, %eax                #  505   0xcc254  2      OPC=testl_r32_r32    
  movl %eax, %r14d                #  506   0xcc256  3      OPC=movl_r32_r32     
  jne .L_cbb24                    #  507   0xcc259  6      OPC=jne_label_1      
  movq -0x438(%rbp), %rax         #  508   0xcc25f  7      OPC=movq_r64_m64     
  leaq 0x2(%rax,%r13,1), %rdi     #  509   0xcc266  5      OPC=leaq_r64_m16     
  callq .memalign_plt             #  510   0xcc26b  5      OPC=callq_label      
  testq %rax, %rax                #  511   0xcc270  3      OPC=testq_r64_r64    
  movq %rax, %r12                 #  512   0xcc273  3      OPC=movq_r64_r64     
  jne .L_cbb4c                    #  513   0xcc276  6      OPC=jne_label_1      
  movl $0x1, %eax                 #  514   0xcc27c  5      OPC=movl_r32_imm32   
  jmpq .L_cbc1e                   #  515   0xcc281  5      OPC=jmpq_label_1     
.L_cc285:                         #        0xcc286  0      OPC=<label>          
  cmpq -0x440(%rbp), %rbx         #  516   0xcc286  7      OPC=cmpq_r64_m64     
  movq -0x3f8(%rbp), %r13         #  517   0xcc28d  7      OPC=movq_r64_m64     
  jne .L_cc38b                    #  518   0xcc294  6      OPC=jne_label_1      
  movq -0x418(%rbp), %rcx         #  519   0xcc29a  7      OPC=movq_r64_m64     
  movl -0x41c(%rbp), %esi         #  520   0xcc2a1  6      OPC=movl_r32_m32     
  xorl %r14d, %r14d               #  521   0xcc2a7  3      OPC=xorl_r32_r32     
  movq 0x10(%rcx), %rax           #  522   0xcc2aa  4      OPC=movq_r64_m64     
  addq (%rcx), %rax               #  523   0xcc2ae  3      OPC=addq_r64_m64     
  movq %r15, 0x8(%rcx)            #  524   0xcc2b1  4      OPC=movq_m64_r64     
  movq $0x0, (%r15,%rax,8)        #  525   0xcc2b5  8      OPC=movq_m64_imm32   
  movl %esi, 0x18(%rcx)           #  526   0xcc2bd  3      OPC=movl_m32_r32     
  jmpq .L_cbbeb                   #  527   0xcc2c0  5      OPC=jmpq_label_1     
.L_cc2c4:                         #        0xcc2c5  0      OPC=<label>          
  movq %r12, %rdi                 #  528   0xcc2c5  3      OPC=movq_r64_r64     
  callq .L_1f8c0                  #  529   0xcc2c8  5      OPC=callq_label      
  jmpq .L_cbbb4                   #  530   0xcc2cd  5      OPC=jmpq_label_1     
.L_cc2d1:                         #        0xcc2d2  0      OPC=<label>          
  movq -0x418(%rbp), %rax         #  531   0xcc2d2  7      OPC=movq_r64_m64     
  leaq -0x360(%rbp), %rsi         #  532   0xcc2d9  7      OPC=leaq_r64_m16     
  movq %r12, %rdi                 #  533   0xcc2e0  3      OPC=movq_r64_r64     
  callq 0x40(%rax)                #  534   0xcc2e3  3      OPC=callq_m64        
  testl %eax, %eax                #  535   0xcc2e6  2      OPC=testl_r32_r32    
  sete %al                        #  536   0xcc2e8  3      OPC=sete_r8          
  jmpq .L_cbba1                   #  537   0xcc2eb  5      OPC=jmpq_label_1     
.L_cc2ef:                         #        0xcc2f0  0      OPC=<label>          
  xorl %eax, %eax                 #  538   0xcc2f0  2      OPC=xorl_r32_r32     
.L_cc2f1:                         #        0xcc2f2  0      OPC=<label>          
  movq 0x10(%rbx,%rax,8), %rdx    #  539   0xcc2f2  5      OPC=movq_r64_m64     
  movq %rdx, (%rcx,%rax,8)        #  540   0xcc2f7  4      OPC=movq_m64_r64     
  addq $0x1, %rax                 #  541   0xcc2fb  4      OPC=addq_r64_imm8    
  cmpq %r12, %rax                 #  542   0xcc2ff  3      OPC=cmpq_r64_r64     
  jne .L_cc2f1                    #  543   0xcc302  2      OPC=jne_label        
  jmpq .L_cc063                   #  544   0xcc304  5      OPC=jmpq_label_1     
.L_cc308:                         #        0xcc309  0      OPC=<label>          
  movq -0x418(%rbp), %rax         #  545   0xcc309  7      OPC=movq_r64_m64     
  callq 0x30(%rax)                #  546   0xcc310  3      OPC=callq_m64        
  testq %rax, %rax                #  547   0xcc313  3      OPC=testq_r64_r64    
  movq %rax, %r13                 #  548   0xcc316  3      OPC=movq_r64_r64     
  movl $0xffffffff, -0x420(%rbp)  #  549   0xcc319  10     OPC=movl_m32_imm32   
  jne .L_cbc6c                    #  550   0xcc323  6      OPC=jne_label_1      
.L_cc328:                         #        0xcc329  0      OPC=<label>          
  movq 0x2f4b51(%rip), %rax       #  551   0xcc329  7      OPC=movq_r64_m64     
  movl (%rax), %esi               #  552   0xcc330  2      OPC=movl_r32_m32     
  nop                             #  553   0xcc332  1      OPC=nop              
  cmpl $0x14, %esi                #  554   0xcc333  3      OPC=cmpl_r32_imm8    
  je .L_cbbb4                     #  555   0xcc336  6      OPC=je_label_1       
  testq %r14, %r14                #  556   0xcc33c  3      OPC=testq_r64_r64    
  je .L_cc381                     #  557   0xcc33f  2      OPC=je_label         
  movq -0x430(%rbp), %rdi         #  558   0xcc341  7      OPC=movq_r64_m64     
  callq %r14                      #  559   0xcc348  3      OPC=callq_r64        
  testl %eax, %eax                #  560   0xcc34b  2      OPC=testl_r32_r32    
  je .L_cc381                     #  561   0xcc34d  2      OPC=je_label         
.L_cc34e:                         #        0xcc34f  0      OPC=<label>          
  leaq -0x28(%rbp), %rsp          #  562   0xcc34f  4      OPC=leaq_r64_m16     
  movl $0x2, %eax                 #  563   0xcc353  5      OPC=movl_r32_imm32   
  popq %rbx                       #  564   0xcc358  1      OPC=popq_r64_1       
  popq %r12                       #  565   0xcc359  2      OPC=popq_r64_1       
  popq %r13                       #  566   0xcc35b  2      OPC=popq_r64_1       
  popq %r14                       #  567   0xcc35d  2      OPC=popq_r64_1       
  popq %r15                       #  568   0xcc35f  2      OPC=popq_r64_1       
  popq %rbp                       #  569   0xcc361  1      OPC=popq_r64_1       
  retq                            #  570   0xcc362  1      OPC=retq             
.L_cc362:                         #        0xcc363  0      OPC=<label>          
  leaq 0xbfc2b(%rip), %rcx        #  571   0xcc363  7      OPC=leaq_r64_m16     
  leaq 0xbfbed(%rip), %rsi        #  572   0xcc36a  7      OPC=leaq_r64_m16     
  leaq 0xbfbf6(%rip), %rdi        #  573   0xcc371  7      OPC=leaq_r64_m16     
  movl $0x690, %edx               #  574   0xcc378  5      OPC=movl_r32_imm32   
  callq .__assert_fail            #  575   0xcc37d  5      OPC=callq_label      
.L_cc381:                         #        0xcc382  0      OPC=<label>          
  testb $0x1, %bl                 #  576   0xcc382  3      OPC=testb_r8_imm8    
  jne .L_cc34e                    #  577   0xcc385  2      OPC=jne_label        
  jmpq .L_cbbb4                   #  578   0xcc387  5      OPC=jmpq_label_1     
.L_cc38b:                         #        0xcc38c  0      OPC=<label>          
  leaq 0xbfc02(%rip), %rcx        #  579   0xcc38c  7      OPC=leaq_r64_m16     
  leaq 0xbfbc4(%rip), %rsi        #  580   0xcc393  7      OPC=leaq_r64_m16     
  leaq 0xbfbcd(%rip), %rdi        #  581   0xcc39a  7      OPC=leaq_r64_m16     
  movl $0x6aa, %edx               #  582   0xcc3a1  5      OPC=movl_r32_imm32   
  callq .__assert_fail            #  583   0xcc3a6  5      OPC=callq_label      
  nop                             #  584   0xcc3ab  1      OPC=nop              
  nop                             #  585   0xcc3ac  1      OPC=nop              
  nop                             #  586   0xcc3ad  1      OPC=nop              
  nop                             #  587   0xcc3ae  1      OPC=nop              
  nop                             #  588   0xcc3af  1      OPC=nop              
  nop                             #  589   0xcc3b0  1      OPC=nop              
                                                                                
.size glob_in_dir, .-glob_in_dir

