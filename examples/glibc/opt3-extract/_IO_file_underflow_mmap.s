  .text
  .globl _IO_file_underflow_mmap
  .type _IO_file_underflow_mmap, @function

#! file-offset 0x782b0
#! rip-offset  0x782b0
#! capacity    512 bytes

# Text                          #  Line  RIP      Bytes  Opcode                
._IO_file_underflow_mmap:       #        0x782b0  0      OPC=<label>           
  movq 0x8(%rdi), %rax          #  1     0x782b0  4      OPC=movq_r64_m64      
  cmpq 0x10(%rdi), %rax         #  2     0x782b4  4      OPC=cmpq_r64_m64      
  jae .L_782c0                  #  3     0x782b8  2      OPC=jae_label         
  movzbl (%rax), %eax           #  4     0x782ba  3      OPC=movzbl_r32_m8     
  retq                          #  5     0x782bd  1      OPC=retq              
  xchgw %ax, %ax                #  6     0x782be  2      OPC=xchgw_ax_r16      
.L_782c0:                       #        0x782c0  0      OPC=<label>           
  pushq %rbp                    #  7     0x782c0  1      OPC=pushq_r64_1       
  pushq %rbx                    #  8     0x782c1  1      OPC=pushq_r64_1       
  movq %rdi, %rbx               #  9     0x782c2  3      OPC=movq_r64_r64      
  subq $0x98, %rsp              #  10    0x782c5  7      OPC=subq_r64_imm32    
  movq 0xd8(%rdi), %rax         #  11    0x782cc  7      OPC=movq_r64_m64      
  movq %rsp, %rsi               #  12    0x782d3  3      OPC=movq_r64_r64      
  callq 0x90(%rax)              #  13    0x782d6  6      OPC=callq_m64         
  testl %eax, %eax              #  14    0x782dc  2      OPC=testl_r32_r32     
  jne .L_782f4                  #  15    0x782de  2      OPC=jne_label         
  movl 0x18(%rsp), %eax         #  16    0x782e0  4      OPC=movl_r32_m32      
  andl $0xf000, %eax            #  17    0x782e4  5      OPC=andl_eax_imm32    
  cmpl $0x8000, %eax            #  18    0x782e9  5      OPC=cmpl_eax_imm32    
  je .L_78378                   #  19    0x782ee  6      OPC=je_label_1        
.L_782f4:                       #        0x782f4  0      OPC=<label>           
  movq 0x38(%rbx), %rdi         #  20    0x782f4  4      OPC=movq_r64_m64      
  movq 0x40(%rbx), %rsi         #  21    0x782f8  4      OPC=movq_r64_m64      
  subq %rdi, %rsi               #  22    0x782fc  3      OPC=subq_r64_r64      
  callq .munmap                 #  23    0x782ff  5      OPC=callq_label       
  movl 0xc0(%rbx), %eax         #  24    0x78304  6      OPC=movl_r32_m32      
  leaq 0x3480af(%rip), %rdx     #  25    0x7830a  7      OPC=leaq_r64_m16      
  movq $0x0, 0x40(%rbx)         #  26    0x78311  8      OPC=movq_m64_imm32    
  movq $0x0, 0x38(%rbx)         #  27    0x78319  8      OPC=movq_m64_imm32    
  movq $0x0, 0x18(%rbx)         #  28    0x78321  8      OPC=movq_m64_imm32    
  movq %rbx, %rdi               #  29    0x78329  3      OPC=movq_r64_r64      
  movq $0x0, 0x8(%rbx)          #  30    0x7832c  8      OPC=movq_m64_imm32    
  movq $0x0, 0x10(%rbx)         #  31    0x78334  8      OPC=movq_m64_imm32    
  testl %eax, %eax              #  32    0x7833c  2      OPC=testl_r32_r32     
  leaq 0x3484fb(%rip), %rax     #  33    0x7833e  7      OPC=leaq_r64_m16      
  cmovgq %rdx, %rax             #  34    0x78345  4      OPC=cmovgq_r64_r64    
  movq %rax, 0xd8(%rbx)         #  35    0x78349  7      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rax         #  36    0x78350  7      OPC=movq_r64_m64      
  movq %rdx, 0x130(%rax)        #  37    0x78357  7      OPC=movq_m64_r64      
  movq 0xd8(%rbx), %rax         #  38    0x7835e  7      OPC=movq_r64_m64      
  callq 0x20(%rax)              #  39    0x78365  3      OPC=callq_m64         
.L_78368:                       #        0x78368  0      OPC=<label>           
  addq $0x98, %rsp              #  40    0x78368  7      OPC=addq_r64_imm32    
  popq %rbx                     #  41    0x7836f  1      OPC=popq_r64_1        
  popq %rbp                     #  42    0x78370  1      OPC=popq_r64_1        
  retq                          #  43    0x78371  1      OPC=retq              
  nop                           #  44    0x78372  1      OPC=nop               
  nop                           #  45    0x78373  1      OPC=nop               
  nop                           #  46    0x78374  1      OPC=nop               
  nop                           #  47    0x78375  1      OPC=nop               
  nop                           #  48    0x78376  1      OPC=nop               
  nop                           #  49    0x78377  1      OPC=nop               
.L_78378:                       #        0x78378  0      OPC=<label>           
  movq 0x30(%rsp), %rbp         #  50    0x78378  5      OPC=movq_r64_m64      
  testq %rbp, %rbp              #  51    0x7837d  3      OPC=testq_r64_r64     
  je .L_782f4                   #  52    0x78380  6      OPC=je_label_1        
  callq .__getpagesize          #  53    0x78386  5      OPC=callq_label       
  movq 0x38(%rbx), %rdi         #  54    0x7838b  4      OPC=movq_r64_m64      
  cltq                          #  55    0x7838f  2      OPC=cltq              
  movq %rax, %rcx               #  56    0x78391  3      OPC=movq_r64_r64      
  leaq -0x1(%rbp,%rax,1), %rdx  #  57    0x78394  5      OPC=leaq_r64_m16      
  negq %rcx                     #  58    0x78399  3      OPC=negq_r64          
  movq %rdi, %rsi               #  59    0x7839c  3      OPC=movq_r64_r64      
  andq %rcx, %rdx               #  60    0x7839f  3      OPC=andq_r64_r64      
  movq %rdi, %r8                #  61    0x783a2  3      OPC=movq_r64_r64      
  notq %rsi                     #  62    0x783a5  3      OPC=notq_r64          
  addq 0x40(%rbx), %rsi         #  63    0x783a8  4      OPC=addq_r64_m64      
  addq %rsi, %rax               #  64    0x783ac  3      OPC=addq_r64_r64      
  andq %rcx, %rax               #  65    0x783af  3      OPC=andq_r64_r64      
  cmpq %rax, %rdx               #  66    0x783b2  3      OPC=cmpq_r64_r64      
  movq %rax, %rsi               #  67    0x783b5  3      OPC=movq_r64_r64      
  jb .L_78448                   #  68    0x783b8  6      OPC=jb_label_1        
  ja .L_7846b                   #  69    0x783be  6      OPC=ja_label_1        
  addq %rdi, %rbp               #  70    0x783c4  3      OPC=addq_r64_r64      
  movq %rbp, 0x40(%rbx)         #  71    0x783c7  4      OPC=movq_m64_r64      
.L_783cb:                       #        0x783cb  0      OPC=<label>           
  movq 0x8(%rbx), %rdx          #  72    0x783cb  4      OPC=movq_r64_m64      
  subq 0x10(%rbx), %rdx         #  73    0x783cf  4      OPC=subq_r64_m64      
  movq %rbp, %rsi               #  74    0x783d3  3      OPC=movq_r64_r64      
  addq 0x90(%rbx), %rdx         #  75    0x783d6  7      OPC=addq_r64_m64      
  subq %r8, %rsi                #  76    0x783dd  3      OPC=subq_r64_r64      
  movq %rdi, 0x18(%rbx)         #  77    0x783e0  4      OPC=movq_m64_r64      
  cmpq %rsi, %rdx               #  78    0x783e4  3      OPC=cmpq_r64_r64      
  movq %rdx, 0x90(%rbx)         #  79    0x783e7  7      OPC=movq_m64_r64      
  jge .L_78430                  #  80    0x783ee  2      OPC=jge_label         
  addq %rdi, %rdx               #  81    0x783f0  3      OPC=addq_r64_r64      
  movl 0x70(%rbx), %edi         #  82    0x783f3  3      OPC=movl_r32_m32      
  movq %rbp, 0x10(%rbx)         #  83    0x783f6  4      OPC=movq_m64_r64      
  movq %rdx, 0x8(%rbx)          #  84    0x783fa  4      OPC=movq_m64_r64      
  xorl %edx, %edx               #  85    0x783fe  2      OPC=xorl_r32_r32      
  callq .__lseek                #  86    0x78400  5      OPC=callq_label       
  movq 0x40(%rbx), %rdx         #  87    0x78405  4      OPC=movq_r64_m64      
  subq 0x38(%rbx), %rdx         #  88    0x78409  4      OPC=subq_r64_m64      
  cmpq %rdx, %rax               #  89    0x7840d  3      OPC=cmpq_r64_r64      
  je .L_7849c                   #  90    0x78410  6      OPC=je_label_1        
  orl $0x20, (%rbx)             #  91    0x78416  3      OPC=orl_m32_imm8      
.L_78419:                       #        0x78419  0      OPC=<label>           
  movq 0x8(%rbx), %rax          #  92    0x78419  4      OPC=movq_r64_m64      
  cmpq 0x10(%rbx), %rax         #  93    0x7841d  4      OPC=cmpq_r64_m64      
  jae .L_78438                  #  94    0x78421  2      OPC=jae_label         
  movzbl (%rax), %eax           #  95    0x78423  3      OPC=movzbl_r32_m8     
  addq $0x98, %rsp              #  96    0x78426  7      OPC=addq_r64_imm32    
  popq %rbx                     #  97    0x7842d  1      OPC=popq_r64_1        
  popq %rbp                     #  98    0x7842e  1      OPC=popq_r64_1        
  retq                          #  99    0x7842f  1      OPC=retq              
.L_78430:                       #        0x78430  0      OPC=<label>           
  movq %rbp, 0x8(%rbx)          #  100   0x78430  4      OPC=movq_m64_r64      
  movq %rbp, 0x10(%rbx)         #  101   0x78434  4      OPC=movq_m64_r64      
.L_78438:                       #        0x78438  0      OPC=<label>           
  orl $0x10, (%rbx)             #  102   0x78438  3      OPC=orl_m32_imm8      
  movl $0xffffffff, %eax        #  103   0x7843b  6      OPC=movl_r32_imm32_1  
  jmpq .L_78368                 #  104   0x78441  5      OPC=jmpq_label_1      
  nop                           #  105   0x78446  1      OPC=nop               
  nop                           #  106   0x78447  1      OPC=nop               
  nop                           #  107   0x78448  1      OPC=nop               
.L_78448:                       #        0x78449  0      OPC=<label>           
  addq %rdx, %rdi               #  108   0x78449  3      OPC=addq_r64_r64      
  subq %rdx, %rsi               #  109   0x7844c  3      OPC=subq_r64_r64      
  callq .munmap                 #  110   0x7844f  5      OPC=callq_label       
  movq 0x38(%rbx), %rdi         #  111   0x78454  4      OPC=movq_r64_m64      
  movq %rdi, %rbp               #  112   0x78458  3      OPC=movq_r64_r64      
  addq 0x30(%rsp), %rbp         #  113   0x7845b  5      OPC=addq_r64_m64      
  movq %rdi, %r8                #  114   0x78460  3      OPC=movq_r64_r64      
  movq %rbp, 0x40(%rbx)         #  115   0x78463  4      OPC=movq_m64_r64      
  jmpq .L_783cb                 #  116   0x78467  5      OPC=jmpq_label_1      
.L_7846b:                       #        0x7846c  0      OPC=<label>           
  xorl %eax, %eax               #  117   0x7846c  2      OPC=xorl_r32_r32      
  movl $0x1, %ecx               #  118   0x7846e  5      OPC=movl_r32_imm32    
  callq .mremap                 #  119   0x78473  5      OPC=callq_label       
  cmpq $0xff, %rax              #  120   0x78478  4      OPC=cmpq_r64_imm8     
  je .L_782f4                   #  121   0x7847c  6      OPC=je_label_1        
  movq %rax, %rbp               #  122   0x78482  3      OPC=movq_r64_r64      
  addq 0x30(%rsp), %rbp         #  123   0x78485  5      OPC=addq_r64_m64      
  movq %rax, 0x38(%rbx)         #  124   0x7848a  4      OPC=movq_m64_r64      
  movq %rax, %r8                #  125   0x7848e  3      OPC=movq_r64_r64      
  movq %rax, %rdi               #  126   0x78491  3      OPC=movq_r64_r64      
  movq %rbp, 0x40(%rbx)         #  127   0x78494  4      OPC=movq_m64_r64      
  jmpq .L_783cb                 #  128   0x78498  5      OPC=jmpq_label_1      
.L_7849c:                       #        0x7849d  0      OPC=<label>           
  movq %rax, 0x90(%rbx)         #  129   0x7849d  7      OPC=movq_m64_r64      
  jmpq .L_78419                 #  130   0x784a4  5      OPC=jmpq_label_1      
  nop                           #  131   0x784a9  1      OPC=nop               
  nop                           #  132   0x784aa  1      OPC=nop               
  nop                           #  133   0x784ab  1      OPC=nop               
  nop                           #  134   0x784ac  1      OPC=nop               
  nop                           #  135   0x784ad  1      OPC=nop               
  nop                           #  136   0x784ae  1      OPC=nop               
  nop                           #  137   0x784af  1      OPC=nop               
  nop                           #  138   0x784b0  1      OPC=nop               
                                                                               
.size _IO_file_underflow_mmap, .-_IO_file_underflow_mmap

