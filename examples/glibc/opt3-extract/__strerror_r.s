  .text
  .globl __strerror_r
  .type __strerror_r, @function

#! file-offset 0x89770
#! rip-offset  0x89770
#! capacity    432 bytes

# Text                          #  Line  RIP      Bytes  Opcode               
.__strerror_r:                  #        0x89770  0      OPC=<label>          
  pushq %r15                    #  1     0x89770  2      OPC=pushq_r64_1      
  pushq %r14                    #  2     0x89772  2      OPC=pushq_r64_1      
  pushq %r13                    #  3     0x89774  2      OPC=pushq_r64_1      
  pushq %r12                    #  4     0x89776  2      OPC=pushq_r64_1      
  movq %rdx, %r12               #  5     0x89778  3      OPC=movq_r64_r64     
  pushq %rbp                    #  6     0x8977b  1      OPC=pushq_r64_1      
  pushq %rbx                    #  7     0x8977c  1      OPC=pushq_r64_1      
  movq %rsi, %rbp               #  8     0x8977d  3      OPC=movq_r64_r64     
  movl %edi, %ebx               #  9     0x89780  2      OPC=movl_r32_r32     
  subq $0x38, %rsp              #  10    0x89782  4      OPC=subq_r64_imm8    
  testl %edi, %edi              #  11    0x89786  2      OPC=testl_r32_r32    
  js .L_897d0                   #  12    0x89788  2      OPC=js_label         
  cmpl 0x1089c4(%rip), %edi     #  13    0x8978a  6      OPC=cmpl_r32_m32     
  jge .L_89880                  #  14    0x89790  6      OPC=jge_label_1      
  leaq 0x334f63(%rip), %rcx     #  15    0x89796  7      OPC=leaq_r64_m16     
  movslq %edi, %r8              #  16    0x8979d  3      OPC=movslq_r64_r32   
  movq (%rcx,%r8,8), %rsi       #  17    0x897a0  4      OPC=movq_r64_m64     
  testq %rsi, %rsi              #  18    0x897a4  3      OPC=testq_r64_r64    
  je .L_89880                   #  19    0x897a7  6      OPC=je_label_1       
  leaq 0x100de8(%rip), %rdi     #  20    0x897ad  7      OPC=leaq_r64_m16     
  movl $0x5, %edx               #  21    0x897b4  5      OPC=movl_r32_imm32   
  callq .__dcgettext            #  22    0x897b9  5      OPC=callq_label      
  addq $0x38, %rsp              #  23    0x897be  4      OPC=addq_r64_imm8    
  popq %rbx                     #  24    0x897c2  1      OPC=popq_r64_1       
  popq %rbp                     #  25    0x897c3  1      OPC=popq_r64_1       
  popq %r12                     #  26    0x897c4  2      OPC=popq_r64_1       
  popq %r13                     #  27    0x897c6  2      OPC=popq_r64_1       
  popq %r14                     #  28    0x897c8  2      OPC=popq_r64_1       
  popq %r15                     #  29    0x897ca  2      OPC=popq_r64_1       
  retq                          #  30    0x897cc  1      OPC=retq             
  nop                           #  31    0x897cd  1      OPC=nop              
  nop                           #  32    0x897ce  1      OPC=nop              
  nop                           #  33    0x897cf  1      OPC=nop              
.L_897d0:                       #        0x897d0  0      OPC=<label>          
  leaq 0x102278(%rip), %rsi     #  34    0x897d0  7      OPC=leaq_r64_m16     
  leaq 0x100dbe(%rip), %rdi     #  35    0x897d7  7      OPC=leaq_r64_m16     
  movl $0x5, %edx               #  36    0x897de  5      OPC=movl_r32_imm32   
  leaq 0x10(%rsp), %r14         #  37    0x897e3  5      OPC=leaq_r64_m16     
  callq .__dcgettext            #  38    0x897e8  5      OPC=callq_label      
  movq %rax, %rdi               #  39    0x897ed  3      OPC=movq_r64_r64     
  movq %rax, %r15               #  40    0x897f0  3      OPC=movq_r64_r64     
  callq .strlen                 #  41    0x897f3  5      OPC=callq_label      
  movq %rax, %r13               #  42    0x897f8  3      OPC=movq_r64_r64     
  movl %ebx, %eax               #  43    0x897fb  2      OPC=movl_r32_r32     
  leaq 0x24(%rsp), %rsi         #  44    0x897fd  5      OPC=leaq_r64_m16     
  sarl $0x1f, %eax              #  45    0x89802  3      OPC=sarl_r32_imm8    
  xorl %ecx, %ecx               #  46    0x89805  2      OPC=xorl_r32_r32     
  movl $0xa, %edx               #  47    0x89807  5      OPC=movl_r32_imm32   
  xorl %eax, %ebx               #  48    0x8980c  2      OPC=xorl_r32_r32     
  movb $0x0, 0x24(%rsp)         #  49    0x8980e  5      OPC=movb_m8_imm8     
  subl %eax, %ebx               #  50    0x89813  2      OPC=subl_r32_r32     
  movslq %ebx, %rdi             #  51    0x89815  3      OPC=movslq_r64_r32   
  callq ._itoa_word             #  52    0x89818  5      OPC=callq_label      
  cmpq %r12, %r13               #  53    0x8981d  3      OPC=cmpq_r64_r64     
  movq %r12, %rcx               #  54    0x89820  3      OPC=movq_r64_r64     
  movq %r15, %rsi               #  55    0x89823  3      OPC=movq_r64_r64     
  cmovbeq %r13, %rcx            #  56    0x89826  4      OPC=cmovbeq_r64_r64  
  movq %rbp, %rdi               #  57    0x8982a  3      OPC=movq_r64_r64     
  movq %rax, %rbx               #  58    0x8982d  3      OPC=movq_r64_r64     
  movq %rcx, %rdx               #  59    0x89830  3      OPC=movq_r64_r64     
  movq %rcx, 0x8(%rsp)          #  60    0x89833  5      OPC=movq_m64_r64     
  callq .__GI_memcpy            #  61    0x89838  5      OPC=callq_label      
  movq 0x8(%rsp), %rcx          #  62    0x8983d  5      OPC=movq_r64_m64     
  addq %rbp, %rcx               #  63    0x89842  3      OPC=addq_r64_r64     
  cmpq %r12, %r13               #  64    0x89845  3      OPC=cmpq_r64_r64     
  jae .L_8985e                  #  65    0x89848  2      OPC=jae_label        
  addq $0x1, %r13               #  66    0x8984a  4      OPC=addq_r64_imm8    
  leaq 0x1(%rcx), %rdi          #  67    0x8984e  4      OPC=leaq_r64_m16     
  movb $0x2d, (%rcx)            #  68    0x89852  3      OPC=movb_m8_imm8     
  cmpq %r12, %r13               #  69    0x89855  3      OPC=cmpq_r64_r64     
  jb .L_898ff                   #  70    0x89858  6      OPC=jb_label_1       
.L_8985e:                       #        0x8985e  0      OPC=<label>          
  testq %r12, %r12              #  71    0x8985e  3      OPC=testq_r64_r64    
  je .L_89869                   #  72    0x89861  2      OPC=je_label         
  movb $0x0, -0x1(%rbp,%r12,1)  #  73    0x89863  6      OPC=movb_m8_imm8     
.L_89869:                       #        0x89869  0      OPC=<label>          
  addq $0x38, %rsp              #  74    0x89869  4      OPC=addq_r64_imm8    
  movq %rbp, %rax               #  75    0x8986d  3      OPC=movq_r64_r64     
  popq %rbx                     #  76    0x89870  1      OPC=popq_r64_1       
  popq %rbp                     #  77    0x89871  1      OPC=popq_r64_1       
  popq %r12                     #  78    0x89872  2      OPC=popq_r64_1       
  popq %r13                     #  79    0x89874  2      OPC=popq_r64_1       
  popq %r14                     #  80    0x89876  2      OPC=popq_r64_1       
  popq %r15                     #  81    0x89878  2      OPC=popq_r64_1       
  retq                          #  82    0x8987a  1      OPC=retq             
  nop                           #  83    0x8987b  1      OPC=nop              
  nop                           #  84    0x8987c  1      OPC=nop              
  nop                           #  85    0x8987d  1      OPC=nop              
  nop                           #  86    0x8987e  1      OPC=nop              
  nop                           #  87    0x8987f  1      OPC=nop              
.L_89880:                       #        0x89880  0      OPC=<label>          
  leaq 0x1021c8(%rip), %rsi     #  88    0x89880  7      OPC=leaq_r64_m16     
  leaq 0x100d0e(%rip), %rdi     #  89    0x89887  7      OPC=leaq_r64_m16     
  movl $0x5, %edx               #  90    0x8988e  5      OPC=movl_r32_imm32   
  leaq 0x10(%rsp), %r14         #  91    0x89893  5      OPC=leaq_r64_m16     
  callq .__dcgettext            #  92    0x89898  5      OPC=callq_label      
  movq %rax, %rdi               #  93    0x8989d  3      OPC=movq_r64_r64     
  movq %rax, %r15               #  94    0x898a0  3      OPC=movq_r64_r64     
  callq .strlen                 #  95    0x898a3  5      OPC=callq_label      
  movq %rax, %r13               #  96    0x898a8  3      OPC=movq_r64_r64     
  movl %ebx, %eax               #  97    0x898ab  2      OPC=movl_r32_r32     
  leaq 0x14(%r14), %rsi         #  98    0x898ad  4      OPC=leaq_r64_m16     
  sarl $0x1f, %eax              #  99    0x898b1  3      OPC=sarl_r32_imm8    
  xorl %ecx, %ecx               #  100   0x898b4  2      OPC=xorl_r32_r32     
  movl $0xa, %edx               #  101   0x898b6  5      OPC=movl_r32_imm32   
  xorl %eax, %ebx               #  102   0x898bb  2      OPC=xorl_r32_r32     
  movb $0x0, 0x24(%rsp)         #  103   0x898bd  5      OPC=movb_m8_imm8     
  subl %eax, %ebx               #  104   0x898c2  2      OPC=subl_r32_r32     
  movslq %ebx, %rdi             #  105   0x898c4  3      OPC=movslq_r64_r32   
  callq ._itoa_word             #  106   0x898c7  5      OPC=callq_label      
  cmpq %r12, %r13               #  107   0x898cc  3      OPC=cmpq_r64_r64     
  movq %r12, %rcx               #  108   0x898cf  3      OPC=movq_r64_r64     
  movq %rbp, %rdi               #  109   0x898d2  3      OPC=movq_r64_r64     
  cmovbeq %r13, %rcx            #  110   0x898d5  4      OPC=cmovbeq_r64_r64  
  movq %r15, %rsi               #  111   0x898d9  3      OPC=movq_r64_r64     
  movq %rax, %rbx               #  112   0x898dc  3      OPC=movq_r64_r64     
  movq %rcx, %rdx               #  113   0x898df  3      OPC=movq_r64_r64     
  movq %rcx, 0x8(%rsp)          #  114   0x898e2  5      OPC=movq_m64_r64     
  callq .__GI_memcpy            #  115   0x898e7  5      OPC=callq_label      
  movq 0x8(%rsp), %rcx          #  116   0x898ec  5      OPC=movq_r64_m64     
  cmpq %r12, %r13               #  117   0x898f1  3      OPC=cmpq_r64_r64     
  leaq (%rbp,%rcx,1), %rdi      #  118   0x898f4  5      OPC=leaq_r64_m16     
  jae .L_8985e                  #  119   0x898f9  6      OPC=jae_label_1      
.L_898ff:                       #        0x898ff  0      OPC=<label>          
  addq $0x15, %r14              #  120   0x898ff  4      OPC=addq_r64_imm8    
  movq %r12, %rdx               #  121   0x89903  3      OPC=movq_r64_r64     
  movq %rbx, %rsi               #  122   0x89906  3      OPC=movq_r64_r64     
  subq %rbx, %r14               #  123   0x89909  3      OPC=subq_r64_r64     
  subq %r13, %rdx               #  124   0x8990c  3      OPC=subq_r64_r64     
  cmpq %rdx, %r14               #  125   0x8990f  3      OPC=cmpq_r64_r64     
  cmovbeq %r14, %rdx            #  126   0x89912  4      OPC=cmovbeq_r64_r64  
  callq .__GI_memcpy            #  127   0x89916  5      OPC=callq_label      
  jmpq .L_8985e                 #  128   0x8991b  5      OPC=jmpq_label_1     
                                                                              
.size __strerror_r, .-__strerror_r

