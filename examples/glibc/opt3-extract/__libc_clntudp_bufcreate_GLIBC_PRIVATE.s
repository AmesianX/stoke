  .text
  .globl __libc_clntudp_bufcreate_GLIBC_PRIVATE
  .type __libc_clntudp_bufcreate_GLIBC_PRIVATE, @function

#! file-offset 0x133bd0
#! rip-offset  0x133bd0
#! capacity    704 bytes

# Text                                       #  Line  RIP       Bytes  Opcode              
.__libc_clntudp_bufcreate_GLIBC_PRIVATE:     #        0x133bd0  0      OPC=<label>         
  pushq %r15                                 #  1     0x133bd0  2      OPC=pushq_r64_1     
  pushq %r14                                 #  2     0x133bd2  2      OPC=pushq_r64_1     
  pushq %r13                                 #  3     0x133bd4  2      OPC=pushq_r64_1     
  pushq %r12                                 #  4     0x133bd6  2      OPC=pushq_r64_1     
  movq %rdi, %r13                            #  5     0x133bd8  3      OPC=movq_r64_r64    
  pushq %rbp                                 #  6     0x133bdb  1      OPC=pushq_r64_1     
  pushq %rbx                                 #  7     0x133bdc  1      OPC=pushq_r64_1     
  movl $0x18, %edi                           #  8     0x133bdd  5      OPC=movl_r32_imm32  
  subq $0xa8, %rsp                           #  9     0x133be2  7      OPC=subq_r64_imm32  
  movq %rsi, 0x8(%rsp)                       #  10    0x133be9  5      OPC=movq_m64_r64    
  movq %rdx, 0x10(%rsp)                      #  11    0x133bee  5      OPC=movq_m64_r64    
  movq %rcx, 0x18(%rsp)                      #  12    0x133bf3  5      OPC=movq_m64_r64    
  movq %r8, 0x20(%rsp)                       #  13    0x133bf8  5      OPC=movq_m64_r64    
  movq %r9, 0x28(%rsp)                       #  14    0x133bfd  5      OPC=movq_m64_r64    
  callq .memalign_plt                        #  15    0x133c02  5      OPC=callq_label     
  movq %rax, %r12                            #  16    0x133c07  3      OPC=movq_r64_r64    
  movl 0xe0(%rsp), %eax                      #  17    0x133c0a  7      OPC=movl_r32_m32    
  leal 0x3(%rax), %ebx                       #  18    0x133c11  3      OPC=leal_r32_m16    
  movl 0xe8(%rsp), %eax                      #  19    0x133c14  7      OPC=movl_r32_m32    
  andl $0xfffffffc, %ebx                     #  20    0x133c1b  6      OPC=andl_r32_imm32  
  nop                                        #  21    0x133c21  1      OPC=nop             
  nop                                        #  22    0x133c22  1      OPC=nop             
  nop                                        #  23    0x133c23  1      OPC=nop             
  leal 0x3(%rax), %ebp                       #  24    0x133c24  3      OPC=leal_r32_m16    
  movl %ebx, %eax                            #  25    0x133c27  2      OPC=movl_r32_r32    
  andl $0xfffffffc, %ebp                     #  26    0x133c29  6      OPC=andl_r32_imm32  
  nop                                        #  27    0x133c2f  1      OPC=nop             
  nop                                        #  28    0x133c30  1      OPC=nop             
  nop                                        #  29    0x133c31  1      OPC=nop             
  movl %ebp, %r14d                           #  30    0x133c32  3      OPC=movl_r32_r32    
  leaq 0xa0(%r14,%rax,1), %rdi               #  31    0x133c35  8      OPC=leaq_r64_m16    
  callq .memalign_plt                        #  32    0x133c3d  5      OPC=callq_label     
  testq %rax, %rax                           #  33    0x133c42  3      OPC=testq_r64_r64   
  movq %rax, %r15                            #  34    0x133c45  3      OPC=movq_r64_r64    
  je .L_133da8                               #  35    0x133c48  6      OPC=je_label_1      
  testq %r12, %r12                           #  36    0x133c4e  3      OPC=testq_r64_r64   
  je .L_133da8                               #  37    0x133c51  6      OPC=je_label_1      
  cmpw $0x0, 0x2(%r13)                       #  38    0x133c57  6      OPC=cmpw_m16_imm8   
  leaq 0x9c(%rax,%r14,1), %rax               #  39    0x133c5d  8      OPC=leaq_r64_m16    
  movq %rax, 0x90(%r15)                      #  40    0x133c65  7      OPC=movq_m64_r64    
  jne .L_133cb9                              #  41    0x133c6c  2      OPC=jne_label       
  movq 0x10(%rsp), %rdx                      #  42    0x133c6e  5      OPC=movq_r64_m64    
  movq 0x8(%rsp), %rsi                       #  43    0x133c73  5      OPC=movq_r64_m64    
  movl $0x11, %ecx                           #  44    0x133c78  5      OPC=movl_r32_imm32  
  movq %r13, %rdi                            #  45    0x133c7d  3      OPC=movq_r64_r64    
  callq .pmap_getport_GLIBC_2_2_5            #  46    0x133c80  5      OPC=callq_label     
  testw %ax, %ax                             #  47    0x133c85  3      OPC=testw_r16_r16   
  jne .L_133cb0                              #  48    0x133c88  2      OPC=jne_label       
.L_133c7e:                                   #        0x133c8a  0      OPC=<label>         
  movq %r15, %rdi                            #  49    0x133c8a  3      OPC=movq_r64_r64    
  callq .L_1f8c0                             #  50    0x133c8d  5      OPC=callq_label     
.L_133c86:                                   #        0x133c92  0      OPC=<label>         
  xorl %ebx, %ebx                            #  51    0x133c92  2      OPC=xorl_r32_r32    
  testq %r12, %r12                           #  52    0x133c94  3      OPC=testq_r64_r64   
  je .L_133c95                               #  53    0x133c97  2      OPC=je_label        
  movq %r12, %rdi                            #  54    0x133c99  3      OPC=movq_r64_r64    
  callq .L_1f8c0                             #  55    0x133c9c  5      OPC=callq_label     
.L_133c95:                                   #        0x133ca1  0      OPC=<label>         
  addq $0xa8, %rsp                           #  56    0x133ca1  7      OPC=addq_r64_imm32  
  movq %rbx, %rax                            #  57    0x133ca8  3      OPC=movq_r64_r64    
  popq %rbx                                  #  58    0x133cab  1      OPC=popq_r64_1      
  popq %rbp                                  #  59    0x133cac  1      OPC=popq_r64_1      
  popq %r12                                  #  60    0x133cad  2      OPC=popq_r64_1      
  popq %r13                                  #  61    0x133caf  2      OPC=popq_r64_1      
  popq %r14                                  #  62    0x133cb1  2      OPC=popq_r64_1      
  popq %r15                                  #  63    0x133cb3  2      OPC=popq_r64_1      
  retq                                       #  64    0x133cb5  1      OPC=retq            
  nop                                        #  65    0x133cb6  1      OPC=nop             
  nop                                        #  66    0x133cb7  1      OPC=nop             
  nop                                        #  67    0x133cb8  1      OPC=nop             
  nop                                        #  68    0x133cb9  1      OPC=nop             
  nop                                        #  69    0x133cba  1      OPC=nop             
  nop                                        #  70    0x133cbb  1      OPC=nop             
.L_133cb0:                                   #        0x133cbc  0      OPC=<label>         
  rorw $0x8, %ax                             #  71    0x133cbc  4      OPC=rorw_r16_imm8   
  movw %ax, 0x2(%r13)                        #  72    0x133cc0  5      OPC=movw_m16_r16    
.L_133cb9:                                   #        0x133cc5  0      OPC=<label>         
  leaq 0x28bb60(%rip), %rax                  #  73    0x133cc5  7      OPC=leaq_r64_m16    
  movq 0x8(%r13), %rdx                       #  74    0x133ccc  4      OPC=movq_r64_m64    
  movl %ebp, 0x98(%r15)                      #  75    0x133cd0  7      OPC=movl_m32_r32    
  movq %r15, 0x10(%r12)                      #  76    0x133cd7  5      OPC=movq_m64_r64    
  movl $0x10, 0x18(%r15)                     #  77    0x133cdc  8      OPC=movl_m32_imm32  
  leaq 0x58(%r15), %rbp                      #  78    0x133ce4  4      OPC=leaq_r64_m16    
  movq %rax, 0x8(%r12)                       #  79    0x133ce8  5      OPC=movq_m64_r64    
  movq (%r13), %rax                          #  80    0x133ced  4      OPC=movq_r64_m64    
  movq %rdx, 0x10(%r15)                      #  81    0x133cf1  4      OPC=movq_m64_r64    
  movq $0xffffffff, 0x30(%r15)               #  82    0x133cf5  8      OPC=movq_m64_imm32  
  movq $0xffffffff, 0x38(%r15)               #  83    0x133cfd  8      OPC=movq_m64_imm32  
  movl %ebx, 0x8c(%r15)                      #  84    0x133d05  7      OPC=movl_m32_r32    
  movq %rax, 0x8(%r15)                       #  85    0x133d0c  4      OPC=movq_m64_r64    
  movq 0x18(%rsp), %rax                      #  86    0x133d10  5      OPC=movq_r64_m64    
  movq %rax, 0x20(%r15)                      #  87    0x133d15  4      OPC=movq_m64_r64    
  movq 0x20(%rsp), %rax                      #  88    0x133d19  5      OPC=movq_r64_m64    
  movq %rax, 0x28(%r15)                      #  89    0x133d1e  4      OPC=movq_m64_r64    
  callq ._create_xid                         #  90    0x133d22  5      OPC=callq_label     
  movq %rax, 0x40(%rsp)                      #  91    0x133d27  5      OPC=movq_m64_r64    
  movq 0x8(%rsp), %rax                       #  92    0x133d2c  5      OPC=movq_r64_m64    
  xorl %ecx, %ecx                            #  93    0x133d31  2      OPC=xorl_r32_r32    
  movq 0x90(%r15), %rsi                      #  94    0x133d33  7      OPC=movq_r64_m64    
  movl %ebx, %edx                            #  95    0x133d3a  2      OPC=movl_r32_r32    
  movq %rbp, %rdi                            #  96    0x133d3c  3      OPC=movq_r64_r64    
  movl $0x0, 0x48(%rsp)                      #  97    0x133d3f  8      OPC=movl_m32_imm32  
  movq $0x2, 0x50(%rsp)                      #  98    0x133d47  9      OPC=movq_m64_imm32  
  movq %rax, 0x58(%rsp)                      #  99    0x133d50  5      OPC=movq_m64_r64    
  movq 0x10(%rsp), %rax                      #  100   0x133d55  5      OPC=movq_r64_m64    
  movq %rax, 0x60(%rsp)                      #  101   0x133d5a  5      OPC=movq_m64_r64    
  callq .xdrmem_create_GLIBC_2_2_5           #  102   0x133d5f  5      OPC=callq_label     
  leaq 0x40(%rsp), %rsi                      #  103   0x133d64  5      OPC=leaq_r64_m16    
  movq %rbp, %rdi                            #  104   0x133d69  3      OPC=movq_r64_r64    
  callq .xdr_callhdr_GLIBC_2_2_5             #  105   0x133d6c  5      OPC=callq_label     
  testl %eax, %eax                           #  106   0x133d71  2      OPC=testl_r32_r32   
  je .L_133c7e                               #  107   0x133d73  6      OPC=je_label_1      
  movq 0x60(%r15), %rax                      #  108   0x133d79  4      OPC=movq_r64_m64    
  movq %rbp, %rdi                            #  109   0x133d7d  3      OPC=movq_r64_r64    
  callq 0x20(%rax)                           #  110   0x133d80  3      OPC=callq_m64       
  movl %eax, 0x88(%r15)                      #  111   0x133d83  7      OPC=movl_m32_r32    
  movq 0x28(%rsp), %rax                      #  112   0x133d8a  5      OPC=movq_r64_m64    
  movl (%rax), %eax                          #  113   0x133d8f  2      OPC=movl_r32_m32    
  testl %eax, %eax                           #  114   0x133d91  2      OPC=testl_r32_r32   
  js .L_133e00                               #  115   0x133d93  2      OPC=js_label        
  movl $0x0, 0x4(%r15)                       #  116   0x133d95  8      OPC=movl_m32_imm32  
.L_133d91:                                   #        0x133d9d  0      OPC=<label>         
  movl %eax, (%r15)                          #  117   0x133d9d  3      OPC=movl_m32_r32    
  movq %r12, %rbx                            #  118   0x133da0  3      OPC=movq_r64_r64    
  callq .authnone_create_GLIBC_2_2_5         #  119   0x133da3  5      OPC=callq_label     
  movq %rax, (%r12)                          #  120   0x133da8  4      OPC=movq_m64_r64    
  jmpq .L_133c95                             #  121   0x133dac  5      OPC=jmpq_label_1    
  nop                                        #  122   0x133db1  1      OPC=nop             
  nop                                        #  123   0x133db2  1      OPC=nop             
  nop                                        #  124   0x133db3  1      OPC=nop             
.L_133da8:                                   #        0x133db4  0      OPC=<label>         
  callq .__rpc_thread_createerr_GLIBC_2_2_5  #  125   0x133db4  5      OPC=callq_label     
  leaq 0x59abf(%rip), %rsi                   #  126   0x133db9  7      OPC=leaq_r64_m16    
  leaq 0x567e1(%rip), %rdi                   #  127   0x133dc0  7      OPC=leaq_r64_m16    
  movl $0x5, %edx                            #  128   0x133dc7  5      OPC=movl_r32_imm32  
  movq %rax, %rbx                            #  129   0x133dcc  3      OPC=movq_r64_r64    
  callq .__dcgettext                         #  130   0x133dcf  5      OPC=callq_label     
  leaq 0x59bbf(%rip), %rdx                   #  131   0x133dd4  7      OPC=leaq_r64_m16    
  leaq 0x591b7(%rip), %rsi                   #  132   0x133ddb  7      OPC=leaq_r64_m16    
  movq %rax, %rcx                            #  133   0x133de2  3      OPC=movq_r64_r64    
  xorl %edi, %edi                            #  134   0x133de5  2      OPC=xorl_r32_r32    
  xorl %eax, %eax                            #  135   0x133de7  2      OPC=xorl_r32_r32    
  callq .__fxprintf                          #  136   0x133de9  5      OPC=callq_label     
  testq %r15, %r15                           #  137   0x133dee  3      OPC=testq_r64_r64   
  movl $0xc, (%rbx)                          #  138   0x133df1  6      OPC=movl_m32_imm32  
  movl $0xc, 0x10(%rbx)                      #  139   0x133df7  7      OPC=movl_m32_imm32  
  je .L_133c86                               #  140   0x133dfe  6      OPC=je_label_1      
  jmpq .L_133c7e                             #  141   0x133e04  5      OPC=jmpq_label_1    
  nop                                        #  142   0x133e09  1      OPC=nop             
  nop                                        #  143   0x133e0a  1      OPC=nop             
  nop                                        #  144   0x133e0b  1      OPC=nop             
.L_133e00:                                   #        0x133e0c  0      OPC=<label>         
  movl 0xf0(%rsp), %esi                      #  145   0x133e0c  7      OPC=movl_r32_m32    
  movl $0x11, %edx                           #  146   0x133e13  5      OPC=movl_r32_imm32  
  movl $0x2, %edi                            #  147   0x133e18  5      OPC=movl_r32_imm32  
  orl $0x802, %esi                           #  148   0x133e1d  6      OPC=orl_r32_imm32   
  callq .__socket                            #  149   0x133e23  5      OPC=callq_label     
  movq 0x28(%rsp), %rcx                      #  150   0x133e28  5      OPC=movq_r64_m64    
  testl %eax, %eax                           #  151   0x133e2d  2      OPC=testl_r32_r32   
  movl %eax, (%rcx)                          #  152   0x133e2f  2      OPC=movl_m32_r32    
  js .L_133e65                               #  153   0x133e31  2      OPC=js_label        
  xorl %esi, %esi                            #  154   0x133e33  2      OPC=xorl_r32_r32    
  movl %eax, %edi                            #  155   0x133e35  2      OPC=movl_r32_r32    
  callq .bindresvport                        #  156   0x133e37  5      OPC=callq_label     
  movq 0x28(%rsp), %rbx                      #  157   0x133e3c  5      OPC=movq_r64_m64    
  leaq 0x3c(%rsp), %rcx                      #  158   0x133e41  5      OPC=leaq_r64_m16    
  movl $0x4, %r8d                            #  159   0x133e46  6      OPC=movl_r32_imm32  
  movl $0xb, %edx                            #  160   0x133e4c  5      OPC=movl_r32_imm32  
  xorl %esi, %esi                            #  161   0x133e51  2      OPC=xorl_r32_r32    
  movl $0x1, 0x3c(%rsp)                      #  162   0x133e53  8      OPC=movl_m32_imm32  
  movl (%rbx), %edi                          #  163   0x133e5b  2      OPC=movl_r32_m32    
  callq .setsockopt                          #  164   0x133e5d  5      OPC=callq_label     
  movl $0x1, 0x4(%r15)                       #  165   0x133e62  8      OPC=movl_m32_imm32  
  movl (%rbx), %eax                          #  166   0x133e6a  2      OPC=movl_r32_m32    
  jmpq .L_133d91                             #  167   0x133e6c  5      OPC=jmpq_label_1    
.L_133e65:                                   #        0x133e71  0      OPC=<label>         
  callq .__rpc_thread_createerr_GLIBC_2_2_5  #  168   0x133e71  5      OPC=callq_label     
  movq 0x28d00f(%rip), %rdx                  #  169   0x133e76  7      OPC=movq_r64_m64    
  movl $0xc, (%rax)                          #  170   0x133e7d  6      OPC=movl_m32_imm32  
  movl (%rdx), %edx                          #  171   0x133e83  2      OPC=movl_r32_m32    
  nop                                        #  172   0x133e85  1      OPC=nop             
  movl %edx, 0x10(%rax)                      #  173   0x133e86  3      OPC=movl_m32_r32    
  jmpq .L_133c7e                             #  174   0x133e89  5      OPC=jmpq_label_1    
  nop                                        #  175   0x133e8e  1      OPC=nop             
  nop                                        #  176   0x133e8f  1      OPC=nop             
  nop                                        #  177   0x133e90  1      OPC=nop             
  nop                                        #  178   0x133e91  1      OPC=nop             
  nop                                        #  179   0x133e92  1      OPC=nop             
  nop                                        #  180   0x133e93  1      OPC=nop             
  nop                                        #  181   0x133e94  1      OPC=nop             
  nop                                        #  182   0x133e95  1      OPC=nop             
  nop                                        #  183   0x133e96  1      OPC=nop             
  nop                                        #  184   0x133e97  1      OPC=nop             
  nop                                        #  185   0x133e98  1      OPC=nop             
  nop                                        #  186   0x133e99  1      OPC=nop             
  nop                                        #  187   0x133e9a  1      OPC=nop             
  nop                                        #  188   0x133e9b  1      OPC=nop             
                                                                                           
.size __libc_clntudp_bufcreate_GLIBC_PRIVATE, .-__libc_clntudp_bufcreate_GLIBC_PRIVATE

