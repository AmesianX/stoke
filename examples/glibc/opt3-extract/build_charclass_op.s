  .text
  .globl build_charclass_op
  .type build_charclass_op, @function

#! file-offset 0xdd020
#! rip-offset  0xdd020
#! capacity    1120 bytes

# Text                                 #  Line  RIP      Bytes  Opcode              
.build_charclass_op:                   #        0xdd020  0      OPC=<label>         
  pushq %r15                           #  1     0xdd020  2      OPC=pushq_r64_1     
  pushq %r14                           #  2     0xdd022  2      OPC=pushq_r64_1     
  movq %rsi, %r15                      #  3     0xdd024  3      OPC=movq_r64_r64    
  pushq %r13                           #  4     0xdd027  2      OPC=pushq_r64_1     
  pushq %r12                           #  5     0xdd029  2      OPC=pushq_r64_1     
  movl $0x1, %esi                      #  6     0xdd02b  5      OPC=movl_r32_imm32  
  pushq %rbp                           #  7     0xdd030  1      OPC=pushq_r64_1     
  pushq %rbx                           #  8     0xdd031  1      OPC=pushq_r64_1     
  movq %rdi, %r12                      #  9     0xdd032  3      OPC=movq_r64_r64    
  movl $0x20, %edi                     #  10    0xdd035  5      OPC=movl_r32_imm32  
  movq %rcx, %rbp                      #  11    0xdd03a  3      OPC=movq_r64_r64    
  movl %r8d, %r13d                     #  12    0xdd03d  3      OPC=movl_r32_r32    
  subq $0x28, %rsp                     #  13    0xdd040  4      OPC=subq_r64_imm8   
  movq %rdx, (%rsp)                    #  14    0xdd044  4      OPC=movq_m64_r64    
  movq %r9, 0x8(%rsp)                  #  15    0xdd048  5      OPC=movq_m64_r64    
  movl $0x0, 0x1c(%rsp)                #  16    0xdd04d  8      OPC=movl_m32_imm32  
  callq .L_1f8b0                       #  17    0xdd055  5      OPC=callq_label     
  movl $0x1, %esi                      #  18    0xdd05a  5      OPC=movl_r32_imm32  
  movl $0x48, %edi                     #  19    0xdd05f  5      OPC=movl_r32_imm32  
  movq %rax, %rbx                      #  20    0xdd064  3      OPC=movq_r64_r64    
  callq .L_1f8b0                       #  21    0xdd067  5      OPC=callq_label     
  testq %rax, %rax                     #  22    0xdd06c  3      OPC=testq_r64_r64   
  movq %rax, %r14                      #  23    0xdd06f  3      OPC=movq_r64_r64    
  je .L_dd374                          #  24    0xdd072  6      OPC=je_label_1      
  testq %rbx, %rbx                     #  25    0xdd078  3      OPC=testq_r64_r64   
  je .L_dd374                          #  26    0xdd07b  6      OPC=je_label_1      
  testl %r13d, %r13d                   #  27    0xdd081  3      OPC=testl_r32_r32   
  jne .L_dd2b8                         #  28    0xdd084  6      OPC=jne_label_1     
.L_dd08a:                              #        0xdd08a  0      OPC=<label>         
  subq $0x8, %rsp                      #  29    0xdd08a  4      OPC=subq_r64_imm8   
  leaq 0x44(%r14), %rcx                #  30    0xdd08e  4      OPC=leaq_r64_m16    
  leaq 0x28(%r14), %rdx                #  31    0xdd092  4      OPC=leaq_r64_m16    
  pushq $0x0                           #  32    0xdd096  2      OPC=pushq_imm8      
  movq 0x10(%rsp), %r9                 #  33    0xdd098  5      OPC=movq_r64_m64    
  movq %rbx, %rsi                      #  34    0xdd09d  3      OPC=movq_r64_r64    
  movq %r15, %rdi                      #  35    0xdd0a0  3      OPC=movq_r64_r64    
  leaq 0x2c(%rsp), %r8                 #  36    0xdd0a3  5      OPC=leaq_r64_m16    
  callq .build_charclass_isra_26       #  37    0xdd0a8  5      OPC=callq_label     
  testl %eax, %eax                     #  38    0xdd0ad  2      OPC=testl_r32_r32   
  popq %rdx                            #  39    0xdd0af  1      OPC=popq_r64_1      
  popq %rcx                            #  40    0xdd0b0  1      OPC=popq_r64_1      
  jne .L_dd427                         #  41    0xdd0b1  6      OPC=jne_label_1     
  movzbl (%rbp), %edx                  #  42    0xdd0b7  4      OPC=movzbl_r32_m8   
  movl $0x1, %esi                      #  43    0xdd0bb  5      OPC=movl_r32_imm32  
  testb %dl, %dl                       #  44    0xdd0c0  2      OPC=testb_r8_r8     
  je .L_dd0eb                          #  45    0xdd0c2  2      OPC=je_label        
  nop                                  #  46    0xdd0c4  1      OPC=nop             
  nop                                  #  47    0xdd0c5  1      OPC=nop             
  nop                                  #  48    0xdd0c6  1      OPC=nop             
  nop                                  #  49    0xdd0c7  1      OPC=nop             
.L_dd0c8:                              #        0xdd0c8  0      OPC=<label>         
  movl %edx, %eax                      #  50    0xdd0c8  2      OPC=movl_r32_r32    
  movl %edx, %ecx                      #  51    0xdd0ca  2      OPC=movl_r32_r32    
  addq $0x1, %rbp                      #  52    0xdd0cc  4      OPC=addq_r64_imm8   
  shrb $0x6, %al                       #  53    0xdd0d0  3      OPC=shrb_r8_imm8    
  andl $0x3f, %ecx                     #  54    0xdd0d3  3      OPC=andl_r32_imm8   
  movq %rsi, %rdx                      #  55    0xdd0d6  3      OPC=movq_r64_r64    
  movzbl %al, %eax                     #  56    0xdd0d9  3      OPC=movzbl_r32_r8   
  shlq %cl, %rdx                       #  57    0xdd0dc  3      OPC=shlq_r64_cl     
  orq %rdx, (%rbx,%rax,8)              #  58    0xdd0df  4      OPC=orq_m64_r64     
  movzbl (%rbp), %edx                  #  59    0xdd0e3  4      OPC=movzbl_r32_m8   
  testb %dl, %dl                       #  60    0xdd0e7  2      OPC=testb_r8_r8     
  jne .L_dd0c8                         #  61    0xdd0e9  2      OPC=jne_label       
.L_dd0eb:                              #        0xdd0eb  0      OPC=<label>         
  testl %r13d, %r13d                   #  62    0xdd0eb  3      OPC=testl_r32_r32   
  jne .L_dd2c8                         #  63    0xdd0ee  6      OPC=jne_label_1     
.L_dd0f4:                              #        0xdd0f4  0      OPC=<label>         
  cmpl $0x1, 0xa4(%r12)                #  64    0xdd0f4  9      OPC=cmpl_m32_imm8   
  jle .L_dd122                         #  65    0xdd0fd  2      OPC=jle_label       
  movq 0x78(%r12), %rax                #  66    0xdd0ff  5      OPC=movq_r64_m64    
  movq (%rax), %rdx                    #  67    0xdd104  3      OPC=movq_r64_m64    
  andq %rdx, (%rbx)                    #  68    0xdd107  3      OPC=andq_m64_r64    
  movq 0x8(%rax), %rdx                 #  69    0xdd10a  4      OPC=movq_r64_m64    
  andq %rdx, 0x8(%rbx)                 #  70    0xdd10e  4      OPC=andq_m64_r64    
  movq 0x10(%rax), %rdx                #  71    0xdd112  4      OPC=movq_r64_m64    
  andq %rdx, 0x10(%rbx)                #  72    0xdd116  4      OPC=andq_m64_r64    
  movq 0x18(%rax), %rax                #  73    0xdd11a  4      OPC=movq_r64_m64    
  andq %rax, 0x18(%rbx)                #  74    0xdd11e  4      OPC=andq_m64_r64    
.L_dd122:                              #        0xdd122  0      OPC=<label>         
  movslq 0x80(%r12), %rdx              #  75    0xdd122  8      OPC=movslq_r64_m32  
  cmpl $0xf, %edx                      #  76    0xdd12a  3      OPC=cmpl_r32_imm8   
  je .L_dd390                          #  77    0xdd12d  6      OPC=je_label_1      
  movq 0x70(%r12), %rax                #  78    0xdd133  5      OPC=movq_r64_m64    
  leal 0x1(%rdx), %ecx                 #  79    0xdd138  3      OPC=leal_r32_m16    
.L_dd13b:                              #        0xdd13b  0      OPC=<label>         
  shlq $0x6, %rdx                      #  80    0xdd13b  4      OPC=shlq_r64_imm8   
  movl %ecx, 0x80(%r12)                #  81    0xdd13f  8      OPC=movl_m32_r32    
  leaq (%rax,%rdx,1), %rbp             #  82    0xdd147  4      OPC=leaq_r64_m16    
  leaq 0x20(%rax,%rdx,1), %rcx         #  83    0xdd14b  5      OPC=leaq_r64_m16    
  leaq 0x10(%rax,%rdx,1), %rsi         #  84    0xdd150  5      OPC=leaq_r64_m16    
  movq %rbp, %r13                      #  85    0xdd155  3      OPC=movq_r64_r64    
  movq $0x0, 0x8(%rbp)                 #  86    0xdd158  8      OPC=movq_m64_imm32  
  movq $0x0, 0x10(%rbp)                #  87    0xdd160  8      OPC=movq_m64_imm32  
  movq $0x0, 0x8(%rsi)                 #  88    0xdd168  8      OPC=movq_m64_imm32  
  andb $0xf3, 0x1a(%rcx)               #  89    0xdd170  4      OPC=andb_m8_imm8    
  addq $0x8, %r13                      #  90    0xdd174  4      OPC=addq_r64_imm8   
  movq %rbx, 0x10(%rcx)                #  91    0xdd178  4      OPC=movq_m64_r64    
  movb $0x3, 0x18(%rcx)                #  92    0xdd17c  4      OPC=movb_m8_imm8    
  movq $0x0, 0x10(%rsi)                #  93    0xdd180  8      OPC=movq_m64_imm32  
  movq $0x0, 0x8(%rcx)                 #  94    0xdd188  8      OPC=movq_m64_imm32  
  movl $0xffffffff, 0x40(%rax,%rdx,1)  #  95    0xdd190  8      OPC=movl_m32_imm32  
  je .L_dd32f                          #  96    0xdd198  6      OPC=je_label_1      
  cmpl $0x1, 0xa4(%r12)                #  97    0xdd19e  9      OPC=cmpl_m32_imm8   
  jle .L_dd2e0                         #  98    0xdd1a7  6      OPC=jle_label_1     
  movslq 0x80(%r12), %rdx              #  99    0xdd1ad  8      OPC=movslq_r64_m32  
  orb $0x2, 0xa0(%r12)                 #  100   0xdd1b5  9      OPC=orb_m8_imm8     
  cmpl $0xf, %edx                      #  101   0xdd1be  3      OPC=cmpl_r32_imm8   
  je .L_dd3c0                          #  102   0xdd1c1  6      OPC=je_label_1      
  movq 0x70(%r12), %rax                #  103   0xdd1c7  5      OPC=movq_r64_m64    
  leal 0x1(%rdx), %ecx                 #  104   0xdd1cc  3      OPC=leal_r32_m16    
.L_dd1cf:                              #        0xdd1cf  0      OPC=<label>         
  shlq $0x6, %rdx                      #  105   0xdd1cf  4      OPC=shlq_r64_imm8   
  movl %ecx, 0x80(%r12)                #  106   0xdd1d3  8      OPC=movl_m32_r32    
  leaq (%rax,%rdx,1), %r15             #  107   0xdd1db  4      OPC=leaq_r64_m16    
  leaq 0x20(%rax,%rdx,1), %rcx         #  108   0xdd1df  5      OPC=leaq_r64_m16    
  leaq 0x10(%rax,%rdx,1), %rsi         #  109   0xdd1e4  5      OPC=leaq_r64_m16    
  movq $0x0, 0x8(%r15)                 #  110   0xdd1e9  8      OPC=movq_m64_imm32  
  movq $0x0, 0x10(%r15)                #  111   0xdd1f1  8      OPC=movq_m64_imm32  
  movq $0x0, 0x8(%rsi)                 #  112   0xdd1f9  8      OPC=movq_m64_imm32  
  movq %r14, 0x10(%rcx)                #  113   0xdd201  4      OPC=movq_m64_r64    
  andb $0xf3, 0x1a(%rcx)               #  114   0xdd205  4      OPC=andb_m8_imm8    
  movb $0x6, 0x18(%rcx)                #  115   0xdd209  4      OPC=movb_m8_imm8    
  movq $0x0, 0x10(%rsi)                #  116   0xdd20d  8      OPC=movq_m64_imm32  
  movq $0x0, 0x8(%rcx)                 #  117   0xdd215  8      OPC=movq_m64_imm32  
  movq %r15, %rcx                      #  118   0xdd21d  3      OPC=movq_r64_r64    
  addq $0x8, %rcx                      #  119   0xdd220  4      OPC=addq_r64_imm8   
  movl $0xffffffff, 0x40(%rax,%rdx,1)  #  120   0xdd224  8      OPC=movl_m32_imm32  
  je .L_dd32f                          #  121   0xdd22c  6      OPC=je_label_1      
  movslq 0x80(%r12), %rdx              #  122   0xdd232  8      OPC=movslq_r64_m32  
  cmpl $0xf, %edx                      #  123   0xdd23a  3      OPC=cmpl_r32_imm8   
  je .L_dd3f0                          #  124   0xdd23d  6      OPC=je_label_1      
  movq 0x70(%r12), %rsi                #  125   0xdd243  5      OPC=movq_r64_m64    
  leal 0x1(%rdx), %eax                 #  126   0xdd248  3      OPC=leal_r32_m16    
.L_dd24b:                              #        0xdd24b  0      OPC=<label>         
  shlq $0x6, %rdx                      #  127   0xdd24b  4      OPC=shlq_r64_imm8   
  movl %eax, 0x80(%r12)                #  128   0xdd24f  8      OPC=movl_m32_r32    
  leaq (%rsi,%rdx,1), %rdi             #  129   0xdd257  4      OPC=leaq_r64_m16    
  movq $0x0, 0x8(%rdi)                 #  130   0xdd25b  8      OPC=movq_m64_imm32  
  movq %r13, 0x10(%rdi)                #  131   0xdd263  4      OPC=movq_m64_r64    
  leaq 0x8(%rdi), %rax                 #  132   0xdd267  4      OPC=leaq_r64_m16    
  leaq 0x10(%rsi,%rdx,1), %rdi         #  133   0xdd26b  5      OPC=leaq_r64_m16    
  movq %rcx, 0x8(%rdi)                 #  134   0xdd270  4      OPC=movq_m64_r64    
  leaq 0x20(%rdx), %rcx                #  135   0xdd274  4      OPC=leaq_r64_m16    
  movb $0xa, 0x38(%rsi,%rdx,1)         #  136   0xdd278  5      OPC=movb_m8_imm8    
  addq %rsi, %rcx                      #  137   0xdd27d  3      OPC=addq_r64_r64    
  andb $0xf3, 0x1a(%rcx)               #  138   0xdd280  4      OPC=andb_m8_imm8    
  movq $0x0, 0x10(%rdi)                #  139   0xdd284  8      OPC=movq_m64_imm32  
  movq $0x0, 0x8(%rcx)                 #  140   0xdd28c  8      OPC=movq_m64_imm32  
  movl $0xffffffff, 0x40(%rsi,%rdx,1)  #  141   0xdd294  8      OPC=movl_m32_imm32  
  movq %rax, 0x8(%rbp)                 #  142   0xdd29c  4      OPC=movq_m64_r64    
  movq %rax, 0x8(%r15)                 #  143   0xdd2a0  4      OPC=movq_m64_r64    
.L_dd2a4:                              #        0xdd2a4  0      OPC=<label>         
  addq $0x28, %rsp                     #  144   0xdd2a4  4      OPC=addq_r64_imm8   
  popq %rbx                            #  145   0xdd2a8  1      OPC=popq_r64_1      
  popq %rbp                            #  146   0xdd2a9  1      OPC=popq_r64_1      
  popq %r12                            #  147   0xdd2aa  2      OPC=popq_r64_1      
  popq %r13                            #  148   0xdd2ac  2      OPC=popq_r64_1      
  popq %r14                            #  149   0xdd2ae  2      OPC=popq_r64_1      
  popq %r15                            #  150   0xdd2b0  2      OPC=popq_r64_1      
  retq                                 #  151   0xdd2b2  1      OPC=retq            
  nop                                  #  152   0xdd2b3  1      OPC=nop             
  nop                                  #  153   0xdd2b4  1      OPC=nop             
  nop                                  #  154   0xdd2b5  1      OPC=nop             
  nop                                  #  155   0xdd2b6  1      OPC=nop             
  nop                                  #  156   0xdd2b7  1      OPC=nop             
.L_dd2b8:                              #        0xdd2b8  0      OPC=<label>         
  orb $0x1, 0x30(%rax)                 #  157   0xdd2b8  4      OPC=orb_m8_imm8     
  jmpq .L_dd08a                        #  158   0xdd2bc  5      OPC=jmpq_label_1    
  nop                                  #  159   0xdd2c1  1      OPC=nop             
  nop                                  #  160   0xdd2c2  1      OPC=nop             
  nop                                  #  161   0xdd2c3  1      OPC=nop             
  nop                                  #  162   0xdd2c4  1      OPC=nop             
  nop                                  #  163   0xdd2c5  1      OPC=nop             
  nop                                  #  164   0xdd2c6  1      OPC=nop             
  nop                                  #  165   0xdd2c7  1      OPC=nop             
.L_dd2c8:                              #        0xdd2c8  0      OPC=<label>         
  notq (%rbx)                          #  166   0xdd2c8  3      OPC=notq_m64        
  notq 0x8(%rbx)                       #  167   0xdd2cb  4      OPC=notq_m64        
  notq 0x10(%rbx)                      #  168   0xdd2cf  4      OPC=notq_m64        
  notq 0x18(%rbx)                      #  169   0xdd2d3  4      OPC=notq_m64        
  jmpq .L_dd0f4                        #  170   0xdd2d7  5      OPC=jmpq_label_1    
  nop                                  #  171   0xdd2dc  1      OPC=nop             
  nop                                  #  172   0xdd2dd  1      OPC=nop             
  nop                                  #  173   0xdd2de  1      OPC=nop             
  nop                                  #  174   0xdd2df  1      OPC=nop             
.L_dd2e0:                              #        0xdd2e0  0      OPC=<label>         
  movq (%r14), %rdi                    #  175   0xdd2e0  3      OPC=movq_r64_m64    
  callq .L_1f8c0                       #  176   0xdd2e3  5      OPC=callq_label     
  movq 0x8(%r14), %rdi                 #  177   0xdd2e8  4      OPC=movq_r64_m64    
  callq .L_1f8c0                       #  178   0xdd2ec  5      OPC=callq_label     
  movq 0x10(%r14), %rdi                #  179   0xdd2f1  4      OPC=movq_r64_m64    
  callq .L_1f8c0                       #  180   0xdd2f5  5      OPC=callq_label     
  movq 0x18(%r14), %rdi                #  181   0xdd2fa  4      OPC=movq_r64_m64    
  callq .L_1f8c0                       #  182   0xdd2fe  5      OPC=callq_label     
  movq 0x20(%r14), %rdi                #  183   0xdd303  4      OPC=movq_r64_m64    
  callq .L_1f8c0                       #  184   0xdd307  5      OPC=callq_label     
  movq 0x28(%r14), %rdi                #  185   0xdd30c  4      OPC=movq_r64_m64    
  callq .L_1f8c0                       #  186   0xdd310  5      OPC=callq_label     
  movq %r14, %rdi                      #  187   0xdd315  3      OPC=movq_r64_r64    
  callq .L_1f8c0                       #  188   0xdd318  5      OPC=callq_label     
  addq $0x28, %rsp                     #  189   0xdd31d  4      OPC=addq_r64_imm8   
  movq %r13, %rax                      #  190   0xdd321  3      OPC=movq_r64_r64    
  popq %rbx                            #  191   0xdd324  1      OPC=popq_r64_1      
  popq %rbp                            #  192   0xdd325  1      OPC=popq_r64_1      
  popq %r12                            #  193   0xdd326  2      OPC=popq_r64_1      
  popq %r13                            #  194   0xdd328  2      OPC=popq_r64_1      
  popq %r14                            #  195   0xdd32a  2      OPC=popq_r64_1      
  popq %r15                            #  196   0xdd32c  2      OPC=popq_r64_1      
  retq                                 #  197   0xdd32e  1      OPC=retq            
.L_dd32f:                              #        0xdd32f  0      OPC=<label>         
  movq %rbx, %rdi                      #  198   0xdd32f  3      OPC=movq_r64_r64    
  callq .L_1f8c0                       #  199   0xdd332  5      OPC=callq_label     
  movq (%r14), %rdi                    #  200   0xdd337  3      OPC=movq_r64_m64    
  callq .L_1f8c0                       #  201   0xdd33a  5      OPC=callq_label     
  movq 0x8(%r14), %rdi                 #  202   0xdd33f  4      OPC=movq_r64_m64    
  callq .L_1f8c0                       #  203   0xdd343  5      OPC=callq_label     
  movq 0x10(%r14), %rdi                #  204   0xdd348  4      OPC=movq_r64_m64    
  callq .L_1f8c0                       #  205   0xdd34c  5      OPC=callq_label     
  movq 0x18(%r14), %rdi                #  206   0xdd351  4      OPC=movq_r64_m64    
  callq .L_1f8c0                       #  207   0xdd355  5      OPC=callq_label     
  movq 0x20(%r14), %rdi                #  208   0xdd35a  4      OPC=movq_r64_m64    
  callq .L_1f8c0                       #  209   0xdd35e  5      OPC=callq_label     
  movq 0x28(%r14), %rdi                #  210   0xdd363  4      OPC=movq_r64_m64    
  callq .L_1f8c0                       #  211   0xdd367  5      OPC=callq_label     
  movq %r14, %rdi                      #  212   0xdd36c  3      OPC=movq_r64_r64    
  callq .L_1f8c0                       #  213   0xdd36f  5      OPC=callq_label     
.L_dd374:                              #        0xdd374  0      OPC=<label>         
  movq 0x8(%rsp), %rax                 #  214   0xdd374  5      OPC=movq_r64_m64    
  movl $0xc, (%rax)                    #  215   0xdd379  6      OPC=movl_m32_imm32  
.L_dd37f:                              #        0xdd37f  0      OPC=<label>         
  addq $0x28, %rsp                     #  216   0xdd37f  4      OPC=addq_r64_imm8   
  xorl %eax, %eax                      #  217   0xdd383  2      OPC=xorl_r32_r32    
  popq %rbx                            #  218   0xdd385  1      OPC=popq_r64_1      
  popq %rbp                            #  219   0xdd386  1      OPC=popq_r64_1      
  popq %r12                            #  220   0xdd387  2      OPC=popq_r64_1      
  popq %r13                            #  221   0xdd389  2      OPC=popq_r64_1      
  popq %r14                            #  222   0xdd38b  2      OPC=popq_r64_1      
  popq %r15                            #  223   0xdd38d  2      OPC=popq_r64_1      
  retq                                 #  224   0xdd38f  1      OPC=retq            
.L_dd390:                              #        0xdd390  0      OPC=<label>         
  movl $0x3c8, %edi                    #  225   0xdd390  5      OPC=movl_r32_imm32  
  callq .memalign_plt                  #  226   0xdd395  5      OPC=callq_label     
  testq %rax, %rax                     #  227   0xdd39a  3      OPC=testq_r64_r64   
  je .L_dd32f                          #  228   0xdd39d  2      OPC=je_label        
  movq 0x70(%r12), %rdx                #  229   0xdd39f  5      OPC=movq_r64_m64    
  movl $0x1, %ecx                      #  230   0xdd3a4  5      OPC=movl_r32_imm32  
  movq %rax, 0x70(%r12)                #  231   0xdd3a9  5      OPC=movq_m64_r64    
  movq %rdx, (%rax)                    #  232   0xdd3ae  3      OPC=movq_m64_r64    
  xorl %edx, %edx                      #  233   0xdd3b1  2      OPC=xorl_r32_r32    
  jmpq .L_dd13b                        #  234   0xdd3b3  5      OPC=jmpq_label_1    
  nop                                  #  235   0xdd3b8  1      OPC=nop             
  nop                                  #  236   0xdd3b9  1      OPC=nop             
  nop                                  #  237   0xdd3ba  1      OPC=nop             
  nop                                  #  238   0xdd3bb  1      OPC=nop             
  nop                                  #  239   0xdd3bc  1      OPC=nop             
  nop                                  #  240   0xdd3bd  1      OPC=nop             
  nop                                  #  241   0xdd3be  1      OPC=nop             
  nop                                  #  242   0xdd3bf  1      OPC=nop             
.L_dd3c0:                              #        0xdd3c0  0      OPC=<label>         
  movl $0x3c8, %edi                    #  243   0xdd3c0  5      OPC=movl_r32_imm32  
  callq .memalign_plt                  #  244   0xdd3c5  5      OPC=callq_label     
  testq %rax, %rax                     #  245   0xdd3ca  3      OPC=testq_r64_r64   
  je .L_dd32f                          #  246   0xdd3cd  6      OPC=je_label_1      
  movq 0x70(%r12), %rdx                #  247   0xdd3d3  5      OPC=movq_r64_m64    
  movl $0x1, %ecx                      #  248   0xdd3d8  5      OPC=movl_r32_imm32  
  movq %rax, 0x70(%r12)                #  249   0xdd3dd  5      OPC=movq_m64_r64    
  movq %rdx, (%rax)                    #  250   0xdd3e2  3      OPC=movq_m64_r64    
  xorl %edx, %edx                      #  251   0xdd3e5  2      OPC=xorl_r32_r32    
  jmpq .L_dd1cf                        #  252   0xdd3e7  5      OPC=jmpq_label_1    
  nop                                  #  253   0xdd3ec  1      OPC=nop             
  nop                                  #  254   0xdd3ed  1      OPC=nop             
  nop                                  #  255   0xdd3ee  1      OPC=nop             
  nop                                  #  256   0xdd3ef  1      OPC=nop             
.L_dd3f0:                              #        0xdd3f0  0      OPC=<label>         
  movl $0x3c8, %edi                    #  257   0xdd3f0  5      OPC=movl_r32_imm32  
  movq %rcx, (%rsp)                    #  258   0xdd3f5  4      OPC=movq_m64_r64    
  callq .memalign_plt                  #  259   0xdd3f9  5      OPC=callq_label     
  testq %rax, %rax                     #  260   0xdd3fe  3      OPC=testq_r64_r64   
  je .L_dd37f                          #  261   0xdd401  6      OPC=je_label_1      
  movq 0x70(%r12), %rdx                #  262   0xdd407  5      OPC=movq_r64_m64    
  movq %rax, %rsi                      #  263   0xdd40c  3      OPC=movq_r64_r64    
  movq %rax, 0x70(%r12)                #  264   0xdd40f  5      OPC=movq_m64_r64    
  movq (%rsp), %rcx                    #  265   0xdd414  4      OPC=movq_r64_m64    
  movq %rdx, (%rax)                    #  266   0xdd418  3      OPC=movq_m64_r64    
  movl $0x1, %eax                      #  267   0xdd41b  5      OPC=movl_r32_imm32  
  xorl %edx, %edx                      #  268   0xdd420  2      OPC=xorl_r32_r32    
  jmpq .L_dd24b                        #  269   0xdd422  5      OPC=jmpq_label_1    
.L_dd427:                              #        0xdd427  0      OPC=<label>         
  movq %rbx, %rdi                      #  270   0xdd427  3      OPC=movq_r64_r64    
  movl %eax, (%rsp)                    #  271   0xdd42a  3      OPC=movl_m32_r32    
  callq .L_1f8c0                       #  272   0xdd42d  5      OPC=callq_label     
  movq (%r14), %rdi                    #  273   0xdd432  3      OPC=movq_r64_m64    
  callq .L_1f8c0                       #  274   0xdd435  5      OPC=callq_label     
  movq 0x8(%r14), %rdi                 #  275   0xdd43a  4      OPC=movq_r64_m64    
  callq .L_1f8c0                       #  276   0xdd43e  5      OPC=callq_label     
  movq 0x10(%r14), %rdi                #  277   0xdd443  4      OPC=movq_r64_m64    
  callq .L_1f8c0                       #  278   0xdd447  5      OPC=callq_label     
  movq 0x18(%r14), %rdi                #  279   0xdd44c  4      OPC=movq_r64_m64    
  callq .L_1f8c0                       #  280   0xdd450  5      OPC=callq_label     
  movq 0x20(%r14), %rdi                #  281   0xdd455  4      OPC=movq_r64_m64    
  callq .L_1f8c0                       #  282   0xdd459  5      OPC=callq_label     
  movq 0x28(%r14), %rdi                #  283   0xdd45e  4      OPC=movq_r64_m64    
  callq .L_1f8c0                       #  284   0xdd462  5      OPC=callq_label     
  movq %r14, %rdi                      #  285   0xdd467  3      OPC=movq_r64_r64    
  callq .L_1f8c0                       #  286   0xdd46a  5      OPC=callq_label     
  movl (%rsp), %eax                    #  287   0xdd46f  3      OPC=movl_r32_m32    
  movq 0x8(%rsp), %rdi                 #  288   0xdd472  5      OPC=movq_r64_m64    
  movl %eax, (%rdi)                    #  289   0xdd477  2      OPC=movl_m32_r32    
  xorl %eax, %eax                      #  290   0xdd479  2      OPC=xorl_r32_r32    
  jmpq .L_dd2a4                        #  291   0xdd47b  5      OPC=jmpq_label_1    
                                                                                    
.size build_charclass_op, .-build_charclass_op

