  .text
  .globl re_dfa_add_node
  .type re_dfa_add_node, @function

#! file-offset 0xd2a60
#! rip-offset  0xd2a60
#! capacity    448 bytes

# Text                             #  Line  RIP      Bytes  Opcode                
.re_dfa_add_node:                  #        0xd2a60  0      OPC=<label>           
  pushq %r15                       #  1     0xd2a60  2      OPC=pushq_r64_1       
  pushq %r14                       #  2     0xd2a62  2      OPC=pushq_r64_1       
  movq %rdx, %r15                  #  3     0xd2a64  3      OPC=movq_r64_r64      
  pushq %r13                       #  4     0xd2a67  2      OPC=pushq_r64_1       
  pushq %r12                       #  5     0xd2a69  2      OPC=pushq_r64_1       
  movq %rsi, %r14                  #  6     0xd2a6b  3      OPC=movq_r64_r64      
  pushq %rbp                       #  7     0xd2a6e  1      OPC=pushq_r64_1       
  pushq %rbx                       #  8     0xd2a6f  1      OPC=pushq_r64_1       
  movzbl %dl, %r12d                #  9     0xd2a70  4      OPC=movzbl_r32_r8     
  movq %rdi, %rbx                  #  10    0xd2a74  3      OPC=movq_r64_r64      
  subq $0x28, %rsp                 #  11    0xd2a77  4      OPC=subq_r64_imm8     
  movq 0x10(%rdi), %rax            #  12    0xd2a7b  4      OPC=movq_r64_m64      
  movq 0x8(%rdi), %rbp             #  13    0xd2a7f  4      OPC=movq_r64_m64      
  cmpq %rbp, %rax                  #  14    0xd2a83  3      OPC=cmpq_r64_r64      
  jb .L_d2b56                      #  15    0xd2a86  6      OPC=jb_label_1        
  leaq (%rbp,%rbp,1), %rax         #  16    0xd2a8c  5      OPC=leaq_r64_m16      
  movq %rax, %rsi                  #  17    0xd2a91  3      OPC=movq_r64_r64      
  movq %rax, 0x8(%rsp)             #  18    0xd2a94  5      OPC=movq_m64_r64      
  movq $0xfffffffffffffff, %rax    #  19    0xd2a99  10     OPC=movq_r64_imm64    
  cmpq %rax, %rsi                  #  20    0xd2aa3  3      OPC=cmpq_r64_r64      
  ja .L_d2c10                      #  21    0xd2aa6  6      OPC=ja_label_1        
  movq %rbp, %r13                  #  22    0xd2aac  3      OPC=movq_r64_r64      
  movq (%rdi), %rdi                #  23    0xd2aaf  3      OPC=movq_r64_m64      
  shlq $0x5, %r13                  #  24    0xd2ab2  4      OPC=shlq_r64_imm8     
  movq %r13, %rsi                  #  25    0xd2ab6  3      OPC=movq_r64_r64      
  callq .__tls_get_addr_plt        #  26    0xd2ab9  5      OPC=callq_label       
  testq %rax, %rax                 #  27    0xd2abe  3      OPC=testq_r64_r64     
  je .L_d2c10                      #  28    0xd2ac1  6      OPC=je_label_1        
  movq 0x18(%rbx), %rdi            #  29    0xd2ac7  4      OPC=movq_r64_m64      
  shlq $0x3, %rbp                  #  30    0xd2acb  4      OPC=shlq_r64_imm8     
  movq %rax, (%rbx)                #  31    0xd2acf  3      OPC=movq_m64_r64      
  movq %rbp, %rsi                  #  32    0xd2ad2  3      OPC=movq_r64_r64      
  callq .__tls_get_addr_plt        #  33    0xd2ad5  5      OPC=callq_label       
  movq 0x20(%rbx), %rdi            #  34    0xd2ada  4      OPC=movq_r64_m64      
  movq %rbp, %rsi                  #  35    0xd2ade  3      OPC=movq_r64_r64      
  movq %rax, 0x10(%rsp)            #  36    0xd2ae1  5      OPC=movq_m64_r64      
  callq .__tls_get_addr_plt        #  37    0xd2ae6  5      OPC=callq_label       
  movq 0x28(%rbx), %rdi            #  38    0xd2aeb  4      OPC=movq_r64_m64      
  movq %r13, %rsi                  #  39    0xd2aef  3      OPC=movq_r64_r64      
  movq %rax, %rbp                  #  40    0xd2af2  3      OPC=movq_r64_r64      
  callq .__tls_get_addr_plt        #  41    0xd2af5  5      OPC=callq_label       
  movq 0x30(%rbx), %rdi            #  42    0xd2afa  4      OPC=movq_r64_m64      
  movq %r13, %rsi                  #  43    0xd2afe  3      OPC=movq_r64_r64      
  movq %rax, 0x18(%rsp)            #  44    0xd2b01  5      OPC=movq_m64_r64      
  callq .__tls_get_addr_plt        #  45    0xd2b06  5      OPC=callq_label       
  movq 0x10(%rsp), %rdx            #  46    0xd2b0b  5      OPC=movq_r64_m64      
  testq %rdx, %rdx                 #  47    0xd2b10  3      OPC=testq_r64_r64     
  je .L_d2c10                      #  48    0xd2b13  6      OPC=je_label_1        
  testq %rbp, %rbp                 #  49    0xd2b19  3      OPC=testq_r64_r64     
  je .L_d2c10                      #  50    0xd2b1c  6      OPC=je_label_1        
  movq 0x18(%rsp), %r8             #  51    0xd2b22  5      OPC=movq_r64_m64      
  testq %r8, %r8                   #  52    0xd2b27  3      OPC=testq_r64_r64     
  je .L_d2c10                      #  53    0xd2b2a  6      OPC=je_label_1        
  testq %rax, %rax                 #  54    0xd2b30  3      OPC=testq_r64_r64     
  je .L_d2c10                      #  55    0xd2b33  6      OPC=je_label_1        
  movq %rax, 0x30(%rbx)            #  56    0xd2b39  4      OPC=movq_m64_r64      
  movq 0x8(%rsp), %rax             #  57    0xd2b3d  5      OPC=movq_r64_m64      
  movq %rdx, 0x18(%rbx)            #  58    0xd2b42  4      OPC=movq_m64_r64      
  movq %rbp, 0x20(%rbx)            #  59    0xd2b46  4      OPC=movq_m64_r64      
  movq %r8, 0x28(%rbx)             #  60    0xd2b4a  4      OPC=movq_m64_r64      
  movq %rax, 0x8(%rbx)             #  61    0xd2b4e  4      OPC=movq_m64_r64      
  movq 0x10(%rbx), %rax            #  62    0xd2b52  4      OPC=movq_r64_m64      
.L_d2b56:                          #        0xd2b56  0      OPC=<label>           
  shlq $0x4, %rax                  #  63    0xd2b56  4      OPC=shlq_r64_imm8     
  addq (%rbx), %rax                #  64    0xd2b5a  3      OPC=addq_r64_m64      
  xorl %edx, %edx                  #  65    0xd2b5d  2      OPC=xorl_r32_r32      
  movq %r15, 0x8(%rax)             #  66    0xd2b5f  4      OPC=movq_m64_r64      
  movq %r14, (%rax)                #  67    0xd2b63  3      OPC=movq_m64_r64      
  movq 0x10(%rbx), %rax            #  68    0xd2b66  4      OPC=movq_r64_m64      
  shlq $0x4, %rax                  #  69    0xd2b6a  4      OPC=shlq_r64_imm8     
  addq (%rbx), %rax                #  70    0xd2b6e  3      OPC=addq_r64_m64      
  andl $0xfffc00ff, 0x8(%rax)      #  71    0xd2b71  7      OPC=andl_m32_imm32    
  movq 0x10(%rbx), %rax            #  72    0xd2b78  4      OPC=movq_r64_m64      
  shlq $0x4, %rax                  #  73    0xd2b7c  4      OPC=shlq_r64_imm8     
  addq (%rbx), %rax                #  74    0xd2b80  3      OPC=addq_r64_m64      
  cmpl $0x6, %r12d                 #  75    0xd2b83  4      OPC=cmpl_r32_imm8     
  sete %dl                         #  76    0xd2b87  3      OPC=sete_r8           
  cmpl $0x5, %r12d                 #  77    0xd2b8a  4      OPC=cmpl_r32_imm8     
  je .L_d2c00                      #  78    0xd2b8e  2      OPC=je_label          
.L_d2b90:                          #        0xd2b90  0      OPC=<label>           
  movzbl 0xa(%rax), %ecx           #  79    0xd2b90  4      OPC=movzbl_r32_m8     
  shll $0x4, %edx                  #  80    0xd2b94  3      OPC=shll_r32_imm8     
  andl $0xffffffef, %ecx           #  81    0xd2b97  6      OPC=andl_r32_imm32    
  nop                              #  82    0xd2b9d  1      OPC=nop               
  nop                              #  83    0xd2b9e  1      OPC=nop               
  nop                              #  84    0xd2b9f  1      OPC=nop               
  orl %ecx, %edx                   #  85    0xd2ba0  2      OPC=orl_r32_r32       
  movb %dl, 0xa(%rax)              #  86    0xd2ba2  3      OPC=movb_m8_r8        
  movq 0x10(%rbx), %rax            #  87    0xd2ba5  4      OPC=movq_r64_m64      
  movq 0x18(%rbx), %rdx            #  88    0xd2ba9  4      OPC=movq_r64_m64      
  movl $0xffffffff, (%rdx,%rax,4)  #  89    0xd2bad  7      OPC=movl_m32_imm32    
  shlq $0x4, %rax                  #  90    0xd2bb4  4      OPC=shlq_r64_imm8     
  addq 0x28(%rbx), %rax            #  91    0xd2bb8  4      OPC=addq_r64_m64      
  movq $0x0, (%rax)                #  92    0xd2bbc  7      OPC=movq_m64_imm32    
  movq $0x0, 0x8(%rax)             #  93    0xd2bc3  8      OPC=movq_m64_imm32    
  movq 0x10(%rbx), %rax            #  94    0xd2bcb  4      OPC=movq_r64_m64      
  shlq $0x4, %rax                  #  95    0xd2bcf  4      OPC=shlq_r64_imm8     
  addq 0x30(%rbx), %rax            #  96    0xd2bd3  4      OPC=addq_r64_m64      
  movq $0x0, (%rax)                #  97    0xd2bd7  7      OPC=movq_m64_imm32    
  movq $0x0, 0x8(%rax)             #  98    0xd2bde  8      OPC=movq_m64_imm32    
  movq 0x10(%rbx), %rax            #  99    0xd2be6  4      OPC=movq_r64_m64      
  leaq 0x1(%rax), %rdx             #  100   0xd2bea  4      OPC=leaq_r64_m16      
  movq %rdx, 0x10(%rbx)            #  101   0xd2bee  4      OPC=movq_m64_r64      
.L_d2bec:                          #        0xd2bf2  0      OPC=<label>           
  addq $0x28, %rsp                 #  102   0xd2bf2  4      OPC=addq_r64_imm8     
  popq %rbx                        #  103   0xd2bf6  1      OPC=popq_r64_1        
  popq %rbp                        #  104   0xd2bf7  1      OPC=popq_r64_1        
  popq %r12                        #  105   0xd2bf8  2      OPC=popq_r64_1        
  popq %r13                        #  106   0xd2bfa  2      OPC=popq_r64_1        
  popq %r14                        #  107   0xd2bfc  2      OPC=popq_r64_1        
  popq %r15                        #  108   0xd2bfe  2      OPC=popq_r64_1        
  retq                             #  109   0xd2c00  1      OPC=retq              
  nop                              #  110   0xd2c01  1      OPC=nop               
  nop                              #  111   0xd2c02  1      OPC=nop               
  nop                              #  112   0xd2c03  1      OPC=nop               
  nop                              #  113   0xd2c04  1      OPC=nop               
  nop                              #  114   0xd2c05  1      OPC=nop               
.L_d2c00:                          #        0xd2c06  0      OPC=<label>           
  xorl %edx, %edx                  #  115   0xd2c06  2      OPC=xorl_r32_r32      
  cmpl $0x1, 0xa4(%rbx)            #  116   0xd2c08  7      OPC=cmpl_m32_imm8     
  setg %dl                         #  117   0xd2c0f  3      OPC=setg_r8           
  jmpq .L_d2b90                    #  118   0xd2c12  2      OPC=jmpq_label        
  xchgw %ax, %ax                   #  119   0xd2c14  2      OPC=xchgw_ax_r16      
.L_d2c10:                          #        0xd2c16  0      OPC=<label>           
  movl $0xffffffff, %eax           #  120   0xd2c16  6      OPC=movl_r32_imm32_1  
  jmpq .L_d2bec                    #  121   0xd2c1c  2      OPC=jmpq_label        
  nop                              #  122   0xd2c1e  1      OPC=nop               
  nop                              #  123   0xd2c1f  1      OPC=nop               
  nop                              #  124   0xd2c20  1      OPC=nop               
  nop                              #  125   0xd2c21  1      OPC=nop               
  nop                              #  126   0xd2c22  1      OPC=nop               
  nop                              #  127   0xd2c23  1      OPC=nop               
  nop                              #  128   0xd2c24  1      OPC=nop               
  nop                              #  129   0xd2c25  1      OPC=nop               
  nop                              #  130   0xd2c26  1      OPC=nop               
                                                                                  
.size re_dfa_add_node, .-re_dfa_add_node

