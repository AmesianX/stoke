  .text
  .globl clnt_broadcast_GLIBC_2_2_5
  .type clnt_broadcast_GLIBC_2_2_5, @function

#! file-offset 0x12a8d0
#! rip-offset  0x12a8d0
#! capacity    1728 bytes

# Text                                        #  Line  RIP       Bytes  Opcode              
.clnt_broadcast_GLIBC_2_2_5:                  #        0x12a8d0  0      OPC=<label>         
  pushq %r15                                  #  1     0x12a8d0  2      OPC=pushq_r64_1     
  pushq %r14                                  #  2     0x12a8d2  2      OPC=pushq_r64_1     
  movq %rsi, %r14                             #  3     0x12a8d4  3      OPC=movq_r64_r64    
  pushq %r13                                  #  4     0x12a8d7  2      OPC=pushq_r64_1     
  pushq %r12                                  #  5     0x12a8d9  2      OPC=pushq_r64_1     
  movq %rdx, %r13                             #  6     0x12a8db  3      OPC=movq_r64_r64    
  pushq %rbp                                  #  7     0x12a8de  1      OPC=pushq_r64_1     
  pushq %rbx                                  #  8     0x12a8df  1      OPC=pushq_r64_1     
  movq %rcx, %r12                             #  9     0x12a8e0  3      OPC=movq_r64_r64    
  movq %r8, %rbp                              #  10    0x12a8e3  3      OPC=movq_r64_r64    
  subq $0x29c8, %rsp                          #  11    0x12a8e6  7      OPC=subq_r64_imm32  
  movq %rdi, 0x10(%rsp)                       #  12    0x12a8ed  5      OPC=movq_m64_r64    
  movq %r9, 0x8(%rsp)                         #  13    0x12a8f2  5      OPC=movq_m64_r64    
  callq .authunix_create_default_GLIBC_2_2_5  #  14    0x12a8f7  5      OPC=callq_label     
  movl $0x11, %edx                            #  15    0x12a8fc  5      OPC=movl_r32_imm32  
  movl $0x2, %esi                             #  16    0x12a901  5      OPC=movl_r32_imm32  
  movl $0x2, %edi                             #  17    0x12a906  5      OPC=movl_r32_imm32  
  movq %rax, %rbx                             #  18    0x12a90b  3      OPC=movq_r64_r64    
  movl $0x1, 0x7c(%rsp)                       #  19    0x12a90e  8      OPC=movl_m32_imm32  
  callq .__socket                             #  20    0x12a916  5      OPC=callq_label     
  testl %eax, %eax                            #  21    0x12a91b  2      OPC=testl_r32_r32   
  movl %eax, %r15d                            #  22    0x12a91d  3      OPC=movl_r32_r32    
  movl $0x5, %edx                             #  23    0x12a920  5      OPC=movl_r32_imm32  
  leaq 0x65f0c(%rip), %rsi                    #  24    0x12a925  7      OPC=leaq_r64_m16    
  js .L_12ab6c                                #  25    0x12a92c  6      OPC=js_label_1      
  leaq 0x7c(%rsp), %rcx                       #  26    0x12a932  5      OPC=leaq_r64_m16    
  movl $0x4, %r8d                             #  27    0x12a937  6      OPC=movl_r32_imm32  
  movl $0x6, %edx                             #  28    0x12a93d  5      OPC=movl_r32_imm32  
  movl $0x1, %esi                             #  29    0x12a942  5      OPC=movl_r32_imm32  
  movl %eax, %edi                             #  30    0x12a947  2      OPC=movl_r32_r32    
  callq .setsockopt                           #  31    0x12a949  5      OPC=callq_label     
  testl %eax, %eax                            #  32    0x12a94e  2      OPC=testl_r32_r32   
  js .L_12ab60                                #  33    0x12a950  6      OPC=js_label_1      
  leaq 0x760(%rsp), %rax                      #  34    0x12a956  8      OPC=leaq_r64_m16    
  movl $0x1, %esi                             #  35    0x12a95e  5      OPC=movl_r32_imm32  
  movl %r15d, 0x80(%rsp)                      #  36    0x12a963  8      OPC=movl_m32_r32    
  movw %si, 0x84(%rsp)                        #  37    0x12a96b  8      OPC=movw_m16_r16    
  movq %rax, %rdi                             #  38    0x12a973  3      OPC=movq_r64_r64    
  movq %rax, 0x20(%rsp)                       #  39    0x12a976  5      OPC=movq_m64_r64    
  callq .getifaddrs                           #  40    0x12a97b  5      OPC=callq_label     
  testl %eax, %eax                            #  41    0x12a980  2      OPC=testl_r32_r32   
  jne .L_12acc0                               #  42    0x12a982  6      OPC=jne_label_1     
  movq 0x760(%rsp), %rdi                      #  43    0x12a988  8      OPC=movq_r64_m64    
  testq %rdi, %rdi                            #  44    0x12a990  3      OPC=testq_r64_r64   
  je .L_12ad83                                #  45    0x12a993  6      OPC=je_label_1      
  movq %rdi, %rax                             #  46    0x12a999  3      OPC=movq_r64_r64    
  xorl %ecx, %ecx                             #  47    0x12a99c  2      OPC=xorl_r32_r32    
  jmpq .L_12a9ad                              #  48    0x12a99e  2      OPC=jmpq_label      
.L_12a9a0:                                    #        0x12a9a0  0      OPC=<label>         
  cmpl $0x13, %ecx                            #  49    0x12a9a0  3      OPC=cmpl_r32_imm8   
  movq (%rax), %rax                           #  50    0x12a9a3  3      OPC=movq_r64_m64    
  jg .L_12a9e8                                #  51    0x12a9a6  2      OPC=jg_label        
.L_12a9a8:                                    #        0x12a9a8  0      OPC=<label>         
  testq %rax, %rax                            #  52    0x12a9a8  3      OPC=testq_r64_r64   
  je .L_12a9e8                                #  53    0x12a9ab  2      OPC=je_label        
.L_12a9ad:                                    #        0x12a9ad  0      OPC=<label>         
  movl 0x10(%rax), %edx                       #  54    0x12a9ad  3      OPC=movl_r32_m32    
  andl $0x3, %edx                             #  55    0x12a9b0  3      OPC=andl_r32_imm8   
  cmpl $0x3, %edx                             #  56    0x12a9b3  3      OPC=cmpl_r32_imm8   
  jne .L_12a9a0                               #  57    0x12a9b6  2      OPC=jne_label       
  movq 0x18(%rax), %rdx                       #  58    0x12a9b8  4      OPC=movq_r64_m64    
  testq %rdx, %rdx                            #  59    0x12a9bc  3      OPC=testq_r64_r64   
  je .L_12a9a0                                #  60    0x12a9bf  2      OPC=je_label        
  cmpw $0x2, (%rdx)                           #  61    0x12a9c1  4      OPC=cmpw_m16_imm8   
  jne .L_12a9a0                               #  62    0x12a9c5  2      OPC=jne_label       
  movq 0x28(%rax), %rsi                       #  63    0x12a9c7  4      OPC=movq_r64_m64    
  movslq %ecx, %rdx                           #  64    0x12a9cb  3      OPC=movslq_r64_r32  
  addl $0x1, %ecx                             #  65    0x12a9ce  3      OPC=addl_r32_imm8   
  cmpl $0x13, %ecx                            #  66    0x12a9d1  3      OPC=cmpl_r32_imm8   
  movq (%rax), %rax                           #  67    0x12a9d4  3      OPC=movq_r64_m64    
  movl 0x4(%rsi), %esi                        #  68    0x12a9d7  3      OPC=movl_r32_m32    
  movl %esi, 0x130(%rsp,%rdx,4)               #  69    0x12a9da  7      OPC=movl_m32_r32    
  jle .L_12a9a8                               #  70    0x12a9e1  2      OPC=jle_label       
  nop                                         #  71    0x12a9e3  1      OPC=nop             
  nop                                         #  72    0x12a9e4  1      OPC=nop             
  nop                                         #  73    0x12a9e5  1      OPC=nop             
  nop                                         #  74    0x12a9e6  1      OPC=nop             
  nop                                         #  75    0x12a9e7  1      OPC=nop             
.L_12a9e8:                                    #        0x12a9e8  0      OPC=<label>         
  movl %ecx, 0x1c(%rsp)                       #  76    0x12a9e8  4      OPC=movl_m32_r32    
  callq .freeifaddrs                          #  77    0x12a9ec  5      OPC=callq_label     
.L_12a9f1:                                    #        0x12a9f1  0      OPC=<label>         
  movl $0x2, %edx                             #  78    0x12a9f1  5      OPC=movl_r32_imm32  
  movl $0x6f00, %ecx                          #  79    0x12a9f6  5      OPC=movl_r32_imm32  
  movq $0x0, 0x90(%rsp)                       #  80    0x12a9fb  12     OPC=movq_m64_imm32  
  movq $0x0, 0x98(%rsp)                       #  81    0x12aa07  12     OPC=movq_m64_imm32  
  movw %dx, 0x90(%rsp)                        #  82    0x12aa13  8      OPC=movw_m16_r16    
  movw %cx, 0x92(%rsp)                        #  83    0x12aa1b  8      OPC=movw_m16_r16    
  callq ._create_xid                          #  84    0x12aa23  5      OPC=callq_label     
  movq $0x5, 0x1a8(%rsp)                      #  85    0x12aa28  12     OPC=movq_m64_imm32  
  movq $0x2, 0x1a0(%rsp)                      #  86    0x12aa34  12     OPC=movq_m64_imm32  
  xorl %ecx, %ecx                             #  87    0x12aa40  2      OPC=xorl_r32_r32    
  movq $0x186a0, 0x198(%rsp)                  #  88    0x12aa42  12     OPC=movq_m64_imm32  
  movq $0x2, 0x190(%rsp)                      #  89    0x12aa4e  12     OPC=movq_m64_imm32  
  movl $0x578, %edx                           #  90    0x12aa5a  5      OPC=movl_r32_imm32  
  movq %rax, 0x28(%rsp)                       #  91    0x12aa5f  5      OPC=movq_m64_r64    
  movq %rax, 0x180(%rsp)                      #  92    0x12aa64  8      OPC=movq_m64_r64    
  movq (%rbx), %rax                           #  93    0x12aa6c  3      OPC=movq_r64_m64    
  movl $0x0, 0x188(%rsp)                      #  94    0x12aa6f  11     OPC=movl_m32_imm32  
  movq %rax, 0x1b0(%rsp)                      #  95    0x12aa7a  8      OPC=movq_m64_r64    
  movq 0x8(%rbx), %rax                        #  96    0x12aa82  4      OPC=movq_r64_m64    
  movq %r14, 0x108(%rsp)                      #  97    0x12aa86  8      OPC=movq_m64_r64    
  leaq 0xd0(%rsp), %r14                       #  98    0x12aa8e  8      OPC=leaq_r64_m16    
  movq %rax, 0x1b8(%rsp)                      #  99    0x12aa96  8      OPC=movq_m64_r64    
  movq 0x10(%rbx), %rax                       #  100   0x12aa9e  4      OPC=movq_r64_m64    
  movq %r14, %rdi                             #  101   0x12aaa2  3      OPC=movq_r64_r64    
  movq %r13, 0x110(%rsp)                      #  102   0x12aaa5  8      OPC=movq_m64_r64    
  movq %rax, 0x1c0(%rsp)                      #  103   0x12aaad  8      OPC=movq_m64_r64    
  movq 0x18(%rbx), %rax                       #  104   0x12aab5  4      OPC=movq_r64_m64    
  movq %rax, 0x1c8(%rsp)                      #  105   0x12aab9  8      OPC=movq_m64_r64    
  movq 0x20(%rbx), %rax                       #  106   0x12aac1  4      OPC=movq_r64_m64    
  movq %rbp, 0x120(%rsp)                      #  107   0x12aac5  8      OPC=movq_m64_r64    
  leaq 0x1e0(%rsp), %rbp                      #  108   0x12aacd  8      OPC=leaq_r64_m16    
  movq %rax, 0x1d0(%rsp)                      #  109   0x12aad5  8      OPC=movq_m64_r64    
  movq 0x28(%rbx), %rax                       #  110   0x12aadd  4      OPC=movq_r64_m64    
  movq %rbp, %rsi                             #  111   0x12aae1  3      OPC=movq_r64_r64    
  movq %r12, 0x128(%rsp)                      #  112   0x12aae4  8      OPC=movq_m64_r64    
  movq %rax, 0x1d8(%rsp)                      #  113   0x12aaec  8      OPC=movq_m64_r64    
  movq 0x10(%rsp), %rax                       #  114   0x12aaf4  5      OPC=movq_r64_m64    
  movq %rax, 0x100(%rsp)                      #  115   0x12aaf9  8      OPC=movq_m64_r64    
  leaq 0x88(%rsp), %rax                       #  116   0x12ab01  8      OPC=leaq_r64_m16    
  movq %rax, 0xb0(%rsp)                       #  117   0x12ab09  8      OPC=movq_m64_r64    
  movq 0x8(%rsp), %rax                        #  118   0x12ab11  5      OPC=movq_r64_m64    
  movq %rax, 0xc8(%rsp)                       #  119   0x12ab16  8      OPC=movq_m64_r64    
  movq 0x2a00(%rsp), %rax                     #  120   0x12ab1e  8      OPC=movq_r64_m64    
  movq %rax, 0xc0(%rsp)                       #  121   0x12ab26  8      OPC=movq_m64_r64    
  callq .xdrmem_create_GLIBC_2_2_5            #  122   0x12ab2e  5      OPC=callq_label     
  leaq 0x180(%rsp), %rax                      #  123   0x12ab33  8      OPC=leaq_r64_m16    
  movq %r14, %rdi                             #  124   0x12ab3b  3      OPC=movq_r64_r64    
  movq %rax, %rsi                             #  125   0x12ab3e  3      OPC=movq_r64_r64    
  movq %rax, 0x10(%rsp)                       #  126   0x12ab41  5      OPC=movq_m64_r64    
  callq .xdr_callmsg_GLIBC_2_2_5              #  127   0x12ab46  5      OPC=callq_label     
  testl %eax, %eax                            #  128   0x12ab4b  2      OPC=testl_r32_r32   
  jne .L_12abb0                               #  129   0x12ab4d  2      OPC=jne_label       
.L_12ab4f:                                    #        0x12ab4f  0      OPC=<label>         
  movl $0x1, %ebp                             #  130   0x12ab4f  5      OPC=movl_r32_imm32  
  jmpq .L_12ab85                              #  131   0x12ab54  2      OPC=jmpq_label      
  nop                                         #  132   0x12ab56  1      OPC=nop             
  nop                                         #  133   0x12ab57  1      OPC=nop             
  nop                                         #  134   0x12ab58  1      OPC=nop             
  nop                                         #  135   0x12ab59  1      OPC=nop             
  nop                                         #  136   0x12ab5a  1      OPC=nop             
  nop                                         #  137   0x12ab5b  1      OPC=nop             
  nop                                         #  138   0x12ab5c  1      OPC=nop             
  nop                                         #  139   0x12ab5d  1      OPC=nop             
  nop                                         #  140   0x12ab5e  1      OPC=nop             
  nop                                         #  141   0x12ab5f  1      OPC=nop             
.L_12ab60:                                    #        0x12ab60  0      OPC=<label>         
  leaq 0x65cf9(%rip), %rsi                    #  142   0x12ab60  7      OPC=leaq_r64_m16    
  movl $0x5, %edx                             #  143   0x12ab67  5      OPC=movl_r32_imm32  
.L_12ab6c:                                    #        0x12ab6c  0      OPC=<label>         
  leaq 0x5fa29(%rip), %rdi                    #  144   0x12ab6c  7      OPC=leaq_r64_m16    
  movl $0x3, %ebp                             #  145   0x12ab73  5      OPC=movl_r32_imm32  
  callq .__dcgettext                          #  146   0x12ab78  5      OPC=callq_label     
  movq %rax, %rdi                             #  147   0x12ab7d  3      OPC=movq_r64_r64    
  callq .perror                               #  148   0x12ab80  5      OPC=callq_label     
.L_12ab85:                                    #        0x12ab85  0      OPC=<label>         
  movl %r15d, %edi                            #  149   0x12ab85  3      OPC=movl_r32_r32    
  callq .__close                              #  150   0x12ab88  5      OPC=callq_label     
  movq 0x38(%rbx), %rdx                       #  151   0x12ab8d  4      OPC=movq_r64_m64    
  movq %rbx, %rdi                             #  152   0x12ab91  3      OPC=movq_r64_r64    
  callq 0x20(%rdx)                            #  153   0x12ab94  3      OPC=callq_m64       
  addq $0x29c8, %rsp                          #  154   0x12ab97  7      OPC=addq_r64_imm32  
  movl %ebp, %eax                             #  155   0x12ab9e  2      OPC=movl_r32_r32    
  popq %rbx                                   #  156   0x12aba0  1      OPC=popq_r64_1      
  popq %rbp                                   #  157   0x12aba1  1      OPC=popq_r64_1      
  popq %r12                                   #  158   0x12aba2  2      OPC=popq_r64_1      
  popq %r13                                   #  159   0x12aba4  2      OPC=popq_r64_1      
  popq %r14                                   #  160   0x12aba6  2      OPC=popq_r64_1      
  popq %r15                                   #  161   0x12aba8  2      OPC=popq_r64_1      
  retq                                        #  162   0x12abaa  1      OPC=retq            
  nop                                         #  163   0x12abab  1      OPC=nop             
  nop                                         #  164   0x12abac  1      OPC=nop             
  nop                                         #  165   0x12abad  1      OPC=nop             
  nop                                         #  166   0x12abae  1      OPC=nop             
  nop                                         #  167   0x12abaf  1      OPC=nop             
.L_12abb0:                                    #        0x12abb0  0      OPC=<label>         
  leaq 0x100(%rsp), %rsi                      #  168   0x12abb0  8      OPC=leaq_r64_m16    
  movq %r14, %rdi                             #  169   0x12abb8  3      OPC=movq_r64_r64    
  callq .xdr_rmtcall_args_GLIBC_2_2_5         #  170   0x12abbb  5      OPC=callq_label     
  testl %eax, %eax                            #  171   0x12abc0  2      OPC=testl_r32_r32   
  je .L_12ab4f                                #  172   0x12abc2  2      OPC=je_label        
  movq 0xd8(%rsp), %rax                       #  173   0x12abc4  8      OPC=movq_r64_m64    
  movq %r14, %rdi                             #  174   0x12abcc  3      OPC=movq_r64_r64    
  callq 0x20(%rax)                            #  175   0x12abcf  3      OPC=callq_m64       
  movl %eax, 0x44(%rsp)                       #  176   0x12abd2  4      OPC=movl_m32_r32    
  movq 0xd8(%rsp), %rax                       #  177   0x12abd6  8      OPC=movq_r64_m64    
  movq 0x38(%rax), %rax                       #  178   0x12abde  4      OPC=movq_r64_m64    
  testq %rax, %rax                            #  179   0x12abe2  3      OPC=testq_r64_r64   
  je .L_12abec                                #  180   0x12abe5  2      OPC=je_label        
  movq %r14, %rdi                             #  181   0x12abe7  3      OPC=movq_r64_r64    
  callq %rax                                  #  182   0x12abea  2      OPC=callq_r64       
.L_12abec:                                    #        0x12abec  0      OPC=<label>         
  leaq 0x130(%rsp), %rsi                      #  183   0x12abec  8      OPC=leaq_r64_m16    
  movl 0x1c(%rsp), %eax                       #  184   0x12abf4  4      OPC=movl_r32_m32    
  movl $0xfa0, 0x40(%rsp)                     #  185   0x12abf8  8      OPC=movl_m32_imm32  
  movq %rbx, 0x58(%rsp)                       #  186   0x12ac00  5      OPC=movq_m64_r64    
  movq %r14, 0x68(%rsp)                       #  187   0x12ac05  5      OPC=movq_m64_r64    
  movq %rsi, 0x48(%rsp)                       #  188   0x12ac0a  5      OPC=movq_m64_r64    
  leaq 0x90(%rsp), %rsi                       #  189   0x12ac0f  8      OPC=leaq_r64_m16    
  subl $0x1, %eax                             #  190   0x12ac17  3      OPC=subl_r32_imm8   
  movq %rsi, 0x50(%rsp)                       #  191   0x12ac1a  5      OPC=movq_m64_r64    
  leaq 0xb0(%rsp), %rsi                       #  192   0x12ac1f  8      OPC=leaq_r64_m16    
  leaq 0x134(%rsp,%rax,4), %rax               #  193   0x12ac27  8      OPC=leaq_r64_m16    
  movq %rsi, 0x30(%rsp)                       #  194   0x12ac2f  5      OPC=movq_m64_r64    
  leaq 0x80(%rsp), %rsi                       #  195   0x12ac34  8      OPC=leaq_r64_m16    
  movq %rax, %r12                             #  196   0x12ac3c  3      OPC=movq_r64_r64    
  movq %rsi, 0x38(%rsp)                       #  197   0x12ac3f  5      OPC=movq_m64_r64    
  leaq 0xa0(%rsp), %rsi                       #  198   0x12ac44  8      OPC=leaq_r64_m16    
  movq %rsi, 0x60(%rsp)                       #  199   0x12ac4c  5      OPC=movq_m64_r64    
.L_12ac51:                                    #        0x12ac51  0      OPC=<label>         
  movl 0x1c(%rsp), %eax                       #  200   0x12ac51  4      OPC=movl_r32_m32    
  testl %eax, %eax                            #  201   0x12ac55  2      OPC=testl_r32_r32   
  je .L_12ace0                                #  202   0x12ac57  6      OPC=je_label_1      
  movslq 0x44(%rsp), %r13                     #  203   0x12ac5d  5      OPC=movslq_r64_m32  
  movq 0x48(%rsp), %r14                       #  204   0x12ac62  5      OPC=movq_r64_m64    
  movq 0x50(%rsp), %rbx                       #  205   0x12ac67  5      OPC=movq_r64_m64    
  jmpq .L_12ac79                              #  206   0x12ac6c  2      OPC=jmpq_label      
  xchgw %ax, %ax                              #  207   0x12ac6e  2      OPC=xchgw_ax_r16    
.L_12ac70:                                    #        0x12ac70  0      OPC=<label>         
  addq $0x4, %r14                             #  208   0x12ac70  4      OPC=addq_r64_imm8   
  cmpq %r12, %r14                             #  209   0x12ac74  3      OPC=cmpq_r64_r64    
  je .L_12ace0                                #  210   0x12ac77  2      OPC=je_label        
.L_12ac79:                                    #        0x12ac79  0      OPC=<label>         
  movl (%r14), %eax                           #  211   0x12ac79  3      OPC=movl_r32_m32    
  xorl %ecx, %ecx                             #  212   0x12ac7c  2      OPC=xorl_r32_r32    
  movl $0x10, %r9d                            #  213   0x12ac7e  6      OPC=movl_r32_imm32  
  movq %rbx, %r8                              #  214   0x12ac84  3      OPC=movq_r64_r64    
  movq %r13, %rdx                             #  215   0x12ac87  3      OPC=movq_r64_r64    
  movq %rbp, %rsi                             #  216   0x12ac8a  3      OPC=movq_r64_r64    
  movl %r15d, %edi                            #  217   0x12ac8d  3      OPC=movl_r32_r32    
  movl %eax, 0x94(%rsp)                       #  218   0x12ac90  7      OPC=movl_m32_r32    
  callq .sendto                               #  219   0x12ac97  5      OPC=callq_label     
  cmpq %rax, %r13                             #  220   0x12ac9c  3      OPC=cmpq_r64_r64    
  je .L_12ac70                                #  221   0x12ac9f  2      OPC=je_label        
  movq 0x58(%rsp), %rbx                       #  222   0x12aca1  5      OPC=movq_r64_m64    
  movl $0x5, %edx                             #  223   0x12aca6  5      OPC=movl_r32_imm32  
  leaq 0x62b44(%rip), %rsi                    #  224   0x12acab  7      OPC=leaq_r64_m16    
  jmpq .L_12ab6c                              #  225   0x12acb2  5      OPC=jmpq_label_1    
  nop                                         #  226   0x12acb7  1      OPC=nop             
  nop                                         #  227   0x12acb8  1      OPC=nop             
  nop                                         #  228   0x12acb9  1      OPC=nop             
  nop                                         #  229   0x12acba  1      OPC=nop             
  nop                                         #  230   0x12acbb  1      OPC=nop             
  nop                                         #  231   0x12acbc  1      OPC=nop             
  nop                                         #  232   0x12acbd  1      OPC=nop             
  nop                                         #  233   0x12acbe  1      OPC=nop             
  nop                                         #  234   0x12acbf  1      OPC=nop             
.L_12acc0:                                    #        0x12acc0  0      OPC=<label>         
  leaq 0x62b19(%rip), %rdi                    #  235   0x12acc0  7      OPC=leaq_r64_m16    
  callq .perror                               #  236   0x12acc7  5      OPC=callq_label     
  movl $0x0, 0x1c(%rsp)                       #  237   0x12accc  8      OPC=movl_m32_imm32  
  jmpq .L_12a9f1                              #  238   0x12acd4  5      OPC=jmpq_label_1    
  nop                                         #  239   0x12acd9  1      OPC=nop             
  nop                                         #  240   0x12acda  1      OPC=nop             
  nop                                         #  241   0x12acdb  1      OPC=nop             
  nop                                         #  242   0x12acdc  1      OPC=nop             
  nop                                         #  243   0x12acdd  1      OPC=nop             
  nop                                         #  244   0x12acde  1      OPC=nop             
  nop                                         #  245   0x12acdf  1      OPC=nop             
.L_12ace0:                                    #        0x12ace0  0      OPC=<label>         
  cmpq $0x0, 0x2a08(%rsp)                     #  246   0x12ace0  9      OPC=cmpq_m64_imm8   
  je .L_12ae81                                #  247   0x12ace9  6      OPC=je_label_1      
  leaq 0x78(%rsp), %r13                       #  248   0x12acef  5      OPC=leaq_r64_m16    
.L_12acf4:                                    #        0x12acf4  0      OPC=<label>         
  movq 0x29b535(%rip), %rax                   #  249   0x12acf4  7      OPC=movq_r64_m64    
  movl 0x40(%rsp), %edx                       #  250   0x12acfb  4      OPC=movl_r32_m32    
  movl $0x1, %esi                             #  251   0x12acff  5      OPC=movl_r32_imm32  
  movq 0x38(%rsp), %rdi                       #  252   0x12ad04  5      OPC=movq_r64_m64    
  movq %rax, 0x198(%rsp)                      #  253   0x12ad09  8      OPC=movq_m64_r64    
  movq 0x29b520(%rip), %rax                   #  254   0x12ad11  7      OPC=movq_r64_m64    
  movq %rax, 0x1a0(%rsp)                      #  255   0x12ad18  8      OPC=movq_m64_r64    
  movq 0x29b519(%rip), %rax                   #  256   0x12ad20  7      OPC=movq_r64_m64    
  movq %rax, 0x1a8(%rsp)                      #  257   0x12ad27  8      OPC=movq_m64_r64    
  movq 0x30(%rsp), %rax                       #  258   0x12ad2f  5      OPC=movq_r64_m64    
  movq %rax, 0x1b8(%rsp)                      #  259   0x12ad34  8      OPC=movq_m64_r64    
  leaq -0x6e3(%rip), %rax                     #  260   0x12ad3c  7      OPC=leaq_r64_m16    
  movq %rax, 0x1c0(%rsp)                      #  261   0x12ad43  8      OPC=movq_m64_r64    
  callq .__poll                               #  262   0x12ad4b  5      OPC=callq_label     
  cmpl $0xffffffff, %eax                      #  263   0x12ad50  6      OPC=cmpl_r32_imm32  
  nop                                         #  264   0x12ad56  1      OPC=nop             
  nop                                         #  265   0x12ad57  1      OPC=nop             
  nop                                         #  266   0x12ad58  1      OPC=nop             
  je .L_12ae90                                #  267   0x12ad59  6      OPC=je_label_1      
  testl %eax, %eax                            #  268   0x12ad5f  2      OPC=testl_r32_r32   
  jne .L_12ad8a                               #  269   0x12ad61  2      OPC=jne_label       
  addl $0x7d0, 0x40(%rsp)                     #  270   0x12ad63  8      OPC=addl_m32_imm32  
  movl 0x40(%rsp), %eax                       #  271   0x12ad6b  4      OPC=movl_r32_m32    
  cmpl $0x3e80, %eax                          #  272   0x12ad6f  5      OPC=cmpl_eax_imm32  
  jne .L_12ac51                               #  273   0x12ad74  6      OPC=jne_label_1     
  movq 0x58(%rsp), %rbx                       #  274   0x12ad7a  5      OPC=movq_r64_m64    
  movl $0x5, %ebp                             #  275   0x12ad7f  5      OPC=movl_r32_imm32  
  jmpq .L_12ab85                              #  276   0x12ad84  5      OPC=jmpq_label_1    
.L_12ad83:                                    #        0x12ad89  0      OPC=<label>         
  xorl %ecx, %ecx                             #  277   0x12ad89  2      OPC=xorl_r32_r32    
  jmpq .L_12a9e8                              #  278   0x12ad8b  5      OPC=jmpq_label_1    
.L_12ad8a:                                    #        0x12ad90  0      OPC=<label>         
  movq 0x20(%rsp), %rbx                       #  279   0x12ad90  5      OPC=movq_r64_m64    
  movq 0x60(%rsp), %r14                       #  280   0x12ad95  5      OPC=movq_r64_m64    
  jmpq .L_12adb1                              #  281   0x12ad9a  2      OPC=jmpq_label      
  nop                                         #  282   0x12ad9c  1      OPC=nop             
  nop                                         #  283   0x12ad9d  1      OPC=nop             
  nop                                         #  284   0x12ad9e  1      OPC=nop             
  nop                                         #  285   0x12ad9f  1      OPC=nop             
  nop                                         #  286   0x12ada0  1      OPC=nop             
  nop                                         #  287   0x12ada1  1      OPC=nop             
  nop                                         #  288   0x12ada2  1      OPC=nop             
  nop                                         #  289   0x12ada3  1      OPC=nop             
  nop                                         #  290   0x12ada4  1      OPC=nop             
  nop                                         #  291   0x12ada5  1      OPC=nop             
.L_12ada0:                                    #        0x12ada6  0      OPC=<label>         
  movq 0x2960d9(%rip), %rax                   #  292   0x12ada6  7      OPC=movq_r64_m64    
  cmpl $0x4, (%rax)                           #  293   0x12adad  3      OPC=cmpl_m32_imm8   
  nop                                         #  294   0x12adb0  1      OPC=nop             
  jne .L_12aed0                               #  295   0x12adb1  6      OPC=jne_label_1     
.L_12adb1:                                    #        0x12adb7  0      OPC=<label>         
  xorl %ecx, %ecx                             #  296   0x12adb7  2      OPC=xorl_r32_r32    
  movq %r13, %r9                              #  297   0x12adb9  3      OPC=movq_r64_r64    
  movq %r14, %r8                              #  298   0x12adbc  3      OPC=movq_r64_r64    
  movl $0x2260, %edx                          #  299   0x12adbf  5      OPC=movl_r32_imm32  
  movq %rbx, %rsi                             #  300   0x12adc4  3      OPC=movq_r64_r64    
  movl %r15d, %edi                            #  301   0x12adc7  3      OPC=movl_r32_r32    
  movl $0x10, 0x78(%rsp)                      #  302   0x12adca  8      OPC=movl_m32_imm32  
  callq .recvfrom                             #  303   0x12add2  5      OPC=callq_label     
  testl %eax, %eax                            #  304   0x12add7  2      OPC=testl_r32_r32   
  js .L_12ada0                                #  305   0x12add9  2      OPC=js_label        
  cmpl $0x7, %eax                             #  306   0x12addb  3      OPC=cmpl_r32_imm8   
  jbe .L_12acf4                               #  307   0x12adde  6      OPC=jbe_label_1     
  movq 0x68(%rsp), %rbx                       #  308   0x12ade4  5      OPC=movq_r64_m64    
  movq 0x20(%rsp), %rsi                       #  309   0x12ade9  5      OPC=movq_r64_m64    
  movl $0x1, %ecx                             #  310   0x12adee  5      OPC=movl_r32_imm32  
  movl %eax, %edx                             #  311   0x12adf3  2      OPC=movl_r32_r32    
  movq %rbx, %rdi                             #  312   0x12adf5  3      OPC=movq_r64_r64    
  callq .xdrmem_create_GLIBC_2_2_5            #  313   0x12adf8  5      OPC=callq_label     
  movq 0x10(%rsp), %rsi                       #  314   0x12adfd  5      OPC=movq_r64_m64    
  movq %rbx, %rdi                             #  315   0x12ae02  3      OPC=movq_r64_r64    
  callq .xdr_replymsg_GLIBC_2_2_5             #  316   0x12ae05  5      OPC=callq_label     
  testl %eax, %eax                            #  317   0x12ae0a  2      OPC=testl_r32_r32   
  je .L_12ae19                                #  318   0x12ae0c  2      OPC=je_label        
  movl 0x28(%rsp), %eax                       #  319   0x12ae0e  4      OPC=movl_r32_m32    
  cmpl %eax, 0x180(%rsp)                      #  320   0x12ae12  7      OPC=cmpl_m32_r32    
  je .L_12aee3                                #  321   0x12ae19  6      OPC=je_label_1      
.L_12ae19:                                    #        0x12ae1f  0      OPC=<label>         
  movq 0x68(%rsp), %rbx                       #  322   0x12ae1f  5      OPC=movq_r64_m64    
  movq 0x10(%rsp), %rsi                       #  323   0x12ae24  5      OPC=movq_r64_m64    
  leaq 0xd576(%rip), %rax                     #  324   0x12ae29  7      OPC=leaq_r64_m16    
  movl $0x2, 0xd0(%rsp)                       #  325   0x12ae30  11     OPC=movl_m32_imm32  
  xorl %r14d, %r14d                           #  326   0x12ae3b  3      OPC=xorl_r32_r32    
  movq %rax, 0x1c0(%rsp)                      #  327   0x12ae3e  8      OPC=movq_m64_r64    
  movq %rbx, %rdi                             #  328   0x12ae46  3      OPC=movq_r64_r64    
  callq .xdr_replymsg_GLIBC_2_2_5             #  329   0x12ae49  5      OPC=callq_label     
  movq %rbx, %rdi                             #  330   0x12ae4e  3      OPC=movq_r64_r64    
  xorl %eax, %eax                             #  331   0x12ae51  2      OPC=xorl_r32_r32    
  movq 0x2a00(%rsp), %rsi                     #  332   0x12ae53  8      OPC=movq_r64_m64    
  movq 0x8(%rsp), %rbx                        #  333   0x12ae5b  5      OPC=movq_r64_m64    
  callq %rbx                                  #  334   0x12ae60  2      OPC=callq_r64       
  movq 0xd8(%rsp), %rax                       #  335   0x12ae62  8      OPC=movq_r64_m64    
  movq 0x38(%rax), %rax                       #  336   0x12ae6a  4      OPC=movq_r64_m64    
  testq %rax, %rax                            #  337   0x12ae6e  3      OPC=testq_r64_r64   
  je .L_12acf4                                #  338   0x12ae71  6      OPC=je_label_1      
.L_12ae71:                                    #        0x12ae77  0      OPC=<label>         
  movq 0x68(%rsp), %rdi                       #  339   0x12ae77  5      OPC=movq_r64_m64    
  callq %rax                                  #  340   0x12ae7c  2      OPC=callq_r64       
.L_12ae78:                                    #        0x12ae7e  0      OPC=<label>         
  testl %r14d, %r14d                          #  341   0x12ae7e  3      OPC=testl_r32_r32   
  je .L_12acf4                                #  342   0x12ae81  6      OPC=je_label_1      
.L_12ae81:                                    #        0x12ae87  0      OPC=<label>         
  movq 0x58(%rsp), %rbx                       #  343   0x12ae87  5      OPC=movq_r64_m64    
  xorl %ebp, %ebp                             #  344   0x12ae8c  2      OPC=xorl_r32_r32    
  jmpq .L_12ab85                              #  345   0x12ae8e  5      OPC=jmpq_label_1    
  nop                                         #  346   0x12ae93  1      OPC=nop             
  nop                                         #  347   0x12ae94  1      OPC=nop             
  nop                                         #  348   0x12ae95  1      OPC=nop             
.L_12ae90:                                    #        0x12ae96  0      OPC=<label>         
  movq 0x295fe9(%rip), %rax                   #  349   0x12ae96  7      OPC=movq_r64_m64    
  cmpl $0x4, (%rax)                           #  350   0x12ae9d  3      OPC=cmpl_m32_imm8   
  nop                                         #  351   0x12aea0  1      OPC=nop             
  je .L_12acf4                                #  352   0x12aea1  6      OPC=je_label_1      
  movq 0x58(%rsp), %rbx                       #  353   0x12aea7  5      OPC=movq_r64_m64    
  leaq 0x62966(%rip), %rsi                    #  354   0x12aeac  7      OPC=leaq_r64_m16    
  movl $0x5, %edx                             #  355   0x12aeb3  5      OPC=movl_r32_imm32  
.L_12aeb2:                                    #        0x12aeb8  0      OPC=<label>         
  leaq 0x5f6e3(%rip), %rdi                    #  356   0x12aeb8  7      OPC=leaq_r64_m16    
  movl $0x4, %ebp                             #  357   0x12aebf  5      OPC=movl_r32_imm32  
  callq .__dcgettext                          #  358   0x12aec4  5      OPC=callq_label     
  movq %rax, %rdi                             #  359   0x12aec9  3      OPC=movq_r64_r64    
  callq .perror                               #  360   0x12aecc  5      OPC=callq_label     
  jmpq .L_12ab85                              #  361   0x12aed1  5      OPC=jmpq_label_1    
.L_12aed0:                                    #        0x12aed6  0      OPC=<label>         
  movq 0x58(%rsp), %rbx                       #  362   0x12aed6  5      OPC=movq_r64_m64    
  movl $0x5, %edx                             #  363   0x12aedb  5      OPC=movl_r32_imm32  
  leaq 0x659a7(%rip), %rsi                    #  364   0x12aee0  7      OPC=leaq_r64_m16    
  jmpq .L_12aeb2                              #  365   0x12aee7  2      OPC=jmpq_label      
.L_12aee3:                                    #        0x12aee9  0      OPC=<label>         
  cmpl $0x0, 0x190(%rsp)                      #  366   0x12aee9  8      OPC=cmpl_m32_imm8   
  jne .L_12ae19                               #  367   0x12aef1  6      OPC=jne_label_1     
  cmpl $0x0, 0x1b0(%rsp)                      #  368   0x12aef7  8      OPC=cmpl_m32_imm8   
  jne .L_12ae19                               #  369   0x12aeff  6      OPC=jne_label_1     
  movzwl 0x88(%rsp), %eax                     #  370   0x12af05  8      OPC=movzwl_r32_m16  
  movq 0x60(%rsp), %rsi                       #  371   0x12af0d  5      OPC=movq_r64_m64    
  rorw $0x8, %ax                              #  372   0x12af12  4      OPC=rorw_r16_imm8   
  movq 0x2a00(%rsp), %rdi                     #  373   0x12af16  8      OPC=movq_r64_m64    
  movw %ax, 0xa2(%rsp)                        #  374   0x12af1e  8      OPC=movw_m16_r16    
  callq 0x2a08(%rsp)                          #  375   0x12af26  7      OPC=callq_m64       
  movq 0x68(%rsp), %rbx                       #  376   0x12af2d  5      OPC=movq_r64_m64    
  movq 0x10(%rsp), %rsi                       #  377   0x12af32  5      OPC=movq_r64_m64    
  movl %eax, %r14d                            #  378   0x12af37  3      OPC=movl_r32_r32    
  leaq 0xd465(%rip), %rax                     #  379   0x12af3a  7      OPC=leaq_r64_m16    
  movl $0x2, 0xd0(%rsp)                       #  380   0x12af41  11     OPC=movl_m32_imm32  
  movq %rbx, %rdi                             #  381   0x12af4c  3      OPC=movq_r64_r64    
  movq %rax, 0x1c0(%rsp)                      #  382   0x12af4f  8      OPC=movq_m64_r64    
  callq .xdr_replymsg_GLIBC_2_2_5             #  383   0x12af57  5      OPC=callq_label     
  movq %rbx, %rdi                             #  384   0x12af5c  3      OPC=movq_r64_r64    
  xorl %eax, %eax                             #  385   0x12af5f  2      OPC=xorl_r32_r32    
  movq 0x2a00(%rsp), %rsi                     #  386   0x12af61  8      OPC=movq_r64_m64    
  movq 0x8(%rsp), %rbx                        #  387   0x12af69  5      OPC=movq_r64_m64    
  callq %rbx                                  #  388   0x12af6e  2      OPC=callq_r64       
  movq 0xd8(%rsp), %rax                       #  389   0x12af70  8      OPC=movq_r64_m64    
  movq 0x38(%rax), %rax                       #  390   0x12af78  4      OPC=movq_r64_m64    
  testq %rax, %rax                            #  391   0x12af7c  3      OPC=testq_r64_r64   
  jne .L_12ae71                               #  392   0x12af7f  6      OPC=jne_label_1     
  jmpq .L_12ae78                              #  393   0x12af85  5      OPC=jmpq_label_1    
  nop                                         #  394   0x12af8a  1      OPC=nop             
  nop                                         #  395   0x12af8b  1      OPC=nop             
  nop                                         #  396   0x12af8c  1      OPC=nop             
  nop                                         #  397   0x12af8d  1      OPC=nop             
  nop                                         #  398   0x12af8e  1      OPC=nop             
  nop                                         #  399   0x12af8f  1      OPC=nop             
  nop                                         #  400   0x12af90  1      OPC=nop             
  nop                                         #  401   0x12af91  1      OPC=nop             
  nop                                         #  402   0x12af92  1      OPC=nop             
  nop                                         #  403   0x12af93  1      OPC=nop             
  xchgw %ax, %ax                              #  404   0x12af94  2      OPC=xchgw_ax_r16    
                                                                                            
.size clnt_broadcast_GLIBC_2_2_5, .-clnt_broadcast_GLIBC_2_2_5

