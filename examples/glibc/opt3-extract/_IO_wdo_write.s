  .text
  .globl _IO_wdo_write
  .type _IO_wdo_write, @function

#! file-offset 0x73390
#! rip-offset  0x73390
#! capacity    464 bytes

# Text                              #  Line  RIP      Bytes  Opcode               
._IO_wdo_write:                     #        0x73390  0      OPC=<label>          
  pushq %r15                        #  1     0x73390  2      OPC=pushq_r64_1      
  pushq %r14                        #  2     0x73392  2      OPC=pushq_r64_1      
  pushq %r13                        #  3     0x73394  2      OPC=pushq_r64_1      
  pushq %r12                        #  4     0x73396  2      OPC=pushq_r64_1      
  movq %rdx, %r12                   #  5     0x73398  3      OPC=movq_r64_r64     
  pushq %rbp                        #  6     0x7339b  1      OPC=pushq_r64_1      
  pushq %rbx                        #  7     0x7339c  1      OPC=pushq_r64_1      
  movq %rdi, %rbx                   #  8     0x7339d  3      OPC=movq_r64_r64     
  subq $0x48, %rsp                  #  9     0x733a0  4      OPC=subq_r64_imm8    
  movq 0x98(%rdi), %rax             #  10    0x733a4  7      OPC=movq_r64_m64     
  testq %rdx, %rdx                  #  11    0x733ab  3      OPC=testq_r64_r64    
  movq %rax, (%rsp)                 #  12    0x733ae  4      OPC=movq_m64_r64     
  je .L_734b8                       #  13    0x733b2  6      OPC=je_label_1       
  movq 0x28(%rdi), %r9              #  14    0x733b8  4      OPC=movq_r64_m64     
  cmpq %r9, 0x30(%rdi)              #  15    0x733bc  4      OPC=cmpq_m64_r64     
  movq %rsi, %r15                   #  16    0x733c0  3      OPC=movq_r64_r64     
  movq 0x20(%rdi), %rsi             #  17    0x733c3  4      OPC=movq_r64_m64     
  je .L_734f6                       #  18    0x733c7  6      OPC=je_label_1       
.L_733cd:                           #        0x733cd  0      OPC=<label>          
  leaq 0x20(%rsp), %rax             #  19    0x733cd  5      OPC=leaq_r64_m16     
  movq %rsi, %rbp                   #  20    0x733d2  3      OPC=movq_r64_r64     
  movq %rax, 0x10(%rsp)             #  21    0x733d5  5      OPC=movq_m64_r64     
  leaq 0x28(%rsp), %rax             #  22    0x733da  5      OPC=leaq_r64_m16     
  movq %rax, 0x8(%rsp)              #  23    0x733df  5      OPC=movq_m64_r64     
  leaq 0x30(%rsp), %rax             #  24    0x733e4  5      OPC=leaq_r64_m16     
  movq %rax, 0x18(%rsp)             #  25    0x733e9  5      OPC=movq_m64_r64     
  jmpq .L_73497                     #  26    0x733ee  5      OPC=jmpq_label_1     
  nop                               #  27    0x733f3  1      OPC=nop              
  nop                               #  28    0x733f4  1      OPC=nop              
  nop                               #  29    0x733f5  1      OPC=nop              
  nop                               #  30    0x733f6  1      OPC=nop              
  nop                               #  31    0x733f7  1      OPC=nop              
.L_733f8:                           #        0x733f8  0      OPC=<label>          
  movq 0x18(%rsp), %rbp             #  32    0x733f8  5      OPC=movq_r64_m64     
  leaq 0x40(%rsp), %rax             #  33    0x733fd  5      OPC=leaq_r64_m16     
  movq %rbp, %r13                   #  34    0x73402  3      OPC=movq_r64_r64     
  movq %rbp, %r9                    #  35    0x73405  3      OPC=movq_r64_r64     
.L_73408:                           #        0x73408  0      OPC=<label>          
  movq %r9, 0x28(%rsp)              #  36    0x73408  5      OPC=movq_m64_r64     
  movq 0xa0(%rbx), %rdi             #  37    0x7340d  7      OPC=movq_r64_m64     
  leaq (%r15,%r12,4), %rcx          #  38    0x73414  4      OPC=leaq_r64_m16     
  pushq 0x8(%rsp)                   #  39    0x73418  4      OPC=pushq_m64        
  pushq %rax                        #  40    0x7341c  1      OPC=pushq_r64_1      
  movq %r15, %rdx                   #  41    0x7341d  3      OPC=movq_r64_r64     
  movq 0x10(%rsp), %rax             #  42    0x73420  5      OPC=movq_r64_m64     
  movq 0x20(%rsp), %r8              #  43    0x73425  5      OPC=movq_r64_m64     
  leaq 0x58(%rdi), %rsi             #  44    0x7342a  4      OPC=leaq_r64_m16     
  movq %rax, %rdi                   #  45    0x7342e  3      OPC=movq_r64_r64     
  callq 0x8(%rax)                   #  46    0x73431  3      OPC=callq_m64        
  movl %eax, %r14d                  #  47    0x73434  3      OPC=movl_r32_r32     
  movq %rbp, %rsi                   #  48    0x73437  3      OPC=movq_r64_r64     
  movq %rbx, %rdi                   #  49    0x7343a  3      OPC=movq_r64_r64     
  popq %rax                         #  50    0x7343d  1      OPC=popq_r64_1       
  popq %rdx                         #  51    0x7343e  1      OPC=popq_r64_1       
  movq 0x28(%rsp), %rdx             #  52    0x7343f  5      OPC=movq_r64_m64     
  subq %r13, %rdx                   #  53    0x73444  3      OPC=subq_r64_r64     
  callq ._IO_do_write__GLIBC_2_2_5  #  54    0x73447  5      OPC=callq_label      
  cmpl $0xffffffff, %eax            #  55    0x7344c  6      OPC=cmpl_r32_imm32   
  nop                               #  56    0x73452  1      OPC=nop              
  nop                               #  57    0x73453  1      OPC=nop              
  nop                               #  58    0x73454  1      OPC=nop              
  je .L_734e7                       #  59    0x73455  6      OPC=je_label_1       
  movq 0x20(%rsp), %rax             #  60    0x7345b  5      OPC=movq_r64_m64     
  movq %rax, %rdx                   #  61    0x73460  3      OPC=movq_r64_r64     
  subq %r15, %rdx                   #  62    0x73463  3      OPC=subq_r64_r64     
  movq %rdx, %rsi                   #  63    0x73466  3      OPC=movq_r64_r64     
  sarq $0x2, %rsi                   #  64    0x73469  4      OPC=sarq_r64_imm8    
  subq %rsi, %r12                   #  65    0x7346d  3      OPC=subq_r64_r64     
  testl %r14d, %r14d                #  66    0x73470  3      OPC=testl_r32_r32    
  je .L_73487                       #  67    0x73473  2      OPC=je_label         
  cmpl $0x1, %r14d                  #  68    0x73475  4      OPC=cmpl_r32_imm8    
  jne .L_73520                      #  69    0x73479  6      OPC=jne_label_1      
  addq $0x3, %rdx                   #  70    0x7347f  4      OPC=addq_r64_imm8    
  cmpq $0x6, %rdx                   #  71    0x73483  4      OPC=cmpq_r64_imm8    
  jbe .L_73520                      #  72    0x73487  6      OPC=jbe_label_1      
.L_73487:                           #        0x7348d  0      OPC=<label>          
  testq %r12, %r12                  #  73    0x7348d  3      OPC=testq_r64_r64    
  je .L_734b8                       #  74    0x73490  2      OPC=je_label         
  movq 0x28(%rbx), %r9              #  75    0x73492  4      OPC=movq_r64_m64     
  movq 0x20(%rbx), %rbp             #  76    0x73496  4      OPC=movq_r64_m64     
  movq %rax, %r15                   #  77    0x7349a  3      OPC=movq_r64_r64     
.L_73497:                           #        0x7349d  0      OPC=<label>          
  movq %r9, %rax                    #  78    0x7349d  3      OPC=movq_r64_r64     
  movq %rbp, %r13                   #  79    0x734a0  3      OPC=movq_r64_r64     
  subq %rbp, %rax                   #  80    0x734a3  3      OPC=subq_r64_r64     
  cmpq $0xf, %rax                   #  81    0x734a6  4      OPC=cmpq_r64_imm8    
  jbe .L_733f8                      #  82    0x734aa  6      OPC=jbe_label_1      
  movq 0x40(%rbx), %rax             #  83    0x734b0  4      OPC=movq_r64_m64     
  jmpq .L_73408                     #  84    0x734b4  5      OPC=jmpq_label_1     
  nop                               #  85    0x734b9  1      OPC=nop              
  nop                               #  86    0x734ba  1      OPC=nop              
  nop                               #  87    0x734bb  1      OPC=nop              
  nop                               #  88    0x734bc  1      OPC=nop              
  nop                               #  89    0x734bd  1      OPC=nop              
.L_734b8:                           #        0x734be  0      OPC=<label>          
  movq 0xa0(%rbx), %rdx             #  90    0x734be  7      OPC=movq_r64_m64     
  movl (%rbx), %eax                 #  91    0x734c5  2      OPC=movl_r32_m32     
  movq 0x30(%rdx), %rcx             #  92    0x734c7  4      OPC=movq_r64_m64     
  andl $0x202, %eax                 #  93    0x734cb  5      OPC=andl_eax_imm32   
  movq %rcx, 0x10(%rdx)             #  94    0x734d0  4      OPC=movq_m64_r64     
  movq %rcx, (%rdx)                 #  95    0x734d4  3      OPC=movq_m64_r64     
  movq %rcx, 0x8(%rdx)              #  96    0x734d7  4      OPC=movq_m64_r64     
  movq %rcx, 0x20(%rdx)             #  97    0x734db  4      OPC=movq_m64_r64     
  movq %rcx, 0x18(%rdx)             #  98    0x734df  4      OPC=movq_m64_r64     
  jne .L_73552                      #  99    0x734e3  2      OPC=jne_label        
.L_734df:                           #        0x734e5  0      OPC=<label>          
  movq 0x38(%rdx), %rcx             #  100   0x734e5  4      OPC=movq_r64_m64     
.L_734e3:                           #        0x734e9  0      OPC=<label>          
  movq %rcx, 0x28(%rdx)             #  101   0x734e9  4      OPC=movq_m64_r64     
.L_734e7:                           #        0x734ed  0      OPC=<label>          
  addq $0x48, %rsp                  #  102   0x734ed  4      OPC=addq_r64_imm8    
  popq %rbx                         #  103   0x734f1  1      OPC=popq_r64_1       
  popq %rbp                         #  104   0x734f2  1      OPC=popq_r64_1       
  popq %r12                         #  105   0x734f3  2      OPC=popq_r64_1       
  popq %r13                         #  106   0x734f5  2      OPC=popq_r64_1       
  popq %r14                         #  107   0x734f7  2      OPC=popq_r64_1       
  popq %r15                         #  108   0x734f9  2      OPC=popq_r64_1       
  retq                              #  109   0x734fb  1      OPC=retq             
.L_734f6:                           #        0x734fc  0      OPC=<label>          
  cmpq %rsi, %r9                    #  110   0x734fc  3      OPC=cmpq_r64_r64     
  je .L_733cd                       #  111   0x734ff  6      OPC=je_label_1       
  movq %r9, %rdx                    #  112   0x73505  3      OPC=movq_r64_r64     
  subq %rsi, %rdx                   #  113   0x73508  3      OPC=subq_r64_r64     
  callq ._IO_do_write__GLIBC_2_2_5  #  114   0x7350b  5      OPC=callq_label      
  cmpl $0xffffffff, %eax            #  115   0x73510  6      OPC=cmpl_r32_imm32   
  nop                               #  116   0x73516  1      OPC=nop              
  nop                               #  117   0x73517  1      OPC=nop              
  nop                               #  118   0x73518  1      OPC=nop              
  je .L_734e7                       #  119   0x73519  2      OPC=je_label         
  movq 0x28(%rbx), %r9              #  120   0x7351b  4      OPC=movq_r64_m64     
  movq 0x20(%rbx), %rsi             #  121   0x7351f  4      OPC=movq_r64_m64     
  jmpq .L_733cd                     #  122   0x73523  5      OPC=jmpq_label_1     
  nop                               #  123   0x73528  1      OPC=nop              
  nop                               #  124   0x73529  1      OPC=nop              
  nop                               #  125   0x7352a  1      OPC=nop              
  nop                               #  126   0x7352b  1      OPC=nop              
.L_73520:                           #        0x7352c  0      OPC=<label>          
  movq 0xa0(%rbx), %rdx             #  127   0x7352c  7      OPC=movq_r64_m64     
  xorl %eax, %eax                   #  128   0x73533  2      OPC=xorl_r32_r32     
  testq %r12, %r12                  #  129   0x73535  3      OPC=testq_r64_r64    
  setne %al                         #  130   0x73538  3      OPC=setne_r8         
  negl %eax                         #  131   0x7353b  2      OPC=negl_r32         
  testl $0x202, (%rbx)              #  132   0x7353d  6      OPC=testl_m32_imm32  
  movq 0x30(%rdx), %rcx             #  133   0x73543  4      OPC=movq_r64_m64     
  movq %rcx, 0x10(%rdx)             #  134   0x73547  4      OPC=movq_m64_r64     
  movq %rcx, (%rdx)                 #  135   0x7354b  3      OPC=movq_m64_r64     
  movq %rcx, 0x8(%rdx)              #  136   0x7354e  4      OPC=movq_m64_r64     
  movq %rcx, 0x20(%rdx)             #  137   0x73552  4      OPC=movq_m64_r64     
  movq %rcx, 0x18(%rdx)             #  138   0x73556  4      OPC=movq_m64_r64     
  jne .L_734e3                      #  139   0x7355a  2      OPC=jne_label        
  jmpq .L_734df                     #  140   0x7355c  2      OPC=jmpq_label       
.L_73552:                           #        0x7355e  0      OPC=<label>          
  movq %rcx, 0x28(%rdx)             #  141   0x7355e  4      OPC=movq_m64_r64     
  xorl %eax, %eax                   #  142   0x73562  2      OPC=xorl_r32_r32     
  jmpq .L_734e7                     #  143   0x73564  2      OPC=jmpq_label       
  nop                               #  144   0x73566  1      OPC=nop              
  nop                               #  145   0x73567  1      OPC=nop              
  nop                               #  146   0x73568  1      OPC=nop              
  nop                               #  147   0x73569  1      OPC=nop              
  nop                               #  148   0x7356a  1      OPC=nop              
  nop                               #  149   0x7356b  1      OPC=nop              
                                                                                  
.size _IO_wdo_write, .-_IO_wdo_write

