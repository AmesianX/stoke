  .text
  .globl register_printf_modifier
  .type register_printf_modifier, @function

#! file-offset 0x53350
#! rip-offset  0x53350
#! capacity    432 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
.register_printf_modifier:          #        0x53350  0      OPC=<label>           
  pushq %r13                        #  1     0x53350  2      OPC=pushq_r64_1       
  pushq %r12                        #  2     0x53352  2      OPC=pushq_r64_1       
  pushq %rbp                        #  3     0x53354  1      OPC=pushq_r64_1       
  pushq %rbx                        #  4     0x53355  1      OPC=pushq_r64_1       
  movq %rdi, %rbx                   #  5     0x53356  3      OPC=movq_r64_r64      
  subq $0x8, %rsp                   #  6     0x53359  4      OPC=subq_r64_imm8     
  movl (%rdi), %eax                 #  7     0x5335d  2      OPC=movl_r32_m32      
  subl $0x1, %eax                   #  8     0x5335f  3      OPC=subl_r32_imm8     
  cmpl $0xfe, %eax                  #  9     0x53362  5      OPC=cmpl_eax_imm32    
  jbe .L_5337b                      #  10    0x53367  2      OPC=jbe_label         
  jmpq .L_53498                     #  11    0x53369  5      OPC=jmpq_label_1      
  xchgw %ax, %ax                    #  12    0x5336e  2      OPC=xchgw_ax_r16      
.L_53370:                           #        0x53370  0      OPC=<label>           
  cmpl $0xff, %eax                  #  13    0x53370  5      OPC=cmpl_eax_imm32    
  ja .L_53498                       #  14    0x53375  6      OPC=ja_label_1        
.L_5337b:                           #        0x5337b  0      OPC=<label>           
  addq $0x4, %rbx                   #  15    0x5337b  4      OPC=addq_r64_imm8     
  movl (%rbx), %eax                 #  16    0x5337f  2      OPC=movl_r32_m32      
  testl %eax, %eax                  #  17    0x53381  2      OPC=testl_r32_r32     
  jne .L_53370                      #  18    0x53383  2      OPC=jne_label         
  movl 0x370599(%rip), %ecx         #  19    0x53385  6      OPC=movl_r32_m32      
  leal -0x10(%rcx), %edx            #  20    0x5338b  3      OPC=leal_r32_m16      
  cmpl $0x7, %edx                   #  21    0x5338e  3      OPC=cmpl_r32_imm8     
  jbe .L_534ea                      #  22    0x53391  6      OPC=jbe_label_1       
  movq %rdi, %rbp                   #  23    0x53397  3      OPC=movq_r64_r64      
  movl $0x1, %esi                   #  24    0x5339a  5      OPC=movl_r32_imm32    
  cmpl $0x0, 0x37385a(%rip)         #  25    0x5339f  7      OPC=cmpl_m32_imm8     
  je .L_533b4                       #  26    0x533a6  2      OPC=je_label          
  lock                              #  27    0x533a8  1      OPC=lock              
  cmpxchgl %esi, 0x370578(%rip)     #  28    0x533a9  7      OPC=cmpxchgl_m32_r32  
  nop                               #  29    0x533b0  1      OPC=nop               
  jne .L_533bd                      #  30    0x533b1  2      OPC=jne_label         
  jmpq .L_533d7                     #  31    0x533b3  2      OPC=jmpq_label        
.L_533b4:                           #        0x533b5  0      OPC=<label>           
  cmpxchgl %esi, 0x37056d(%rip)     #  32    0x533b5  7      OPC=cmpxchgl_m32_r32  
  je .L_533d7                       #  33    0x533bc  2      OPC=je_label          
.L_533bd:                           #        0x533be  0      OPC=<label>           
  leaq 0x370564(%rip), %rdi         #  34    0x533be  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  35    0x533c5  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  36    0x533cc  5      OPC=callq_label       
  addq $0x80, %rsp                  #  37    0x533d1  7      OPC=addq_r64_imm32    
.L_533d7:                           #        0x533d8  0      OPC=<label>           
  movq 0x373552(%rip), %r13         #  38    0x533d8  7      OPC=movq_r64_m64      
  testq %r13, %r13                  #  39    0x533df  3      OPC=testq_r64_r64     
  je .L_534b6                       #  40    0x533e2  6      OPC=je_label_1        
.L_533e7:                           #        0x533e8  0      OPC=<label>           
  subq %rbp, %rbx                   #  41    0x533e8  3      OPC=subq_r64_r64      
  leaq 0x10(%rbx), %rdi             #  42    0x533eb  4      OPC=leaq_r64_m16      
  callq .memalign_plt               #  43    0x533ef  5      OPC=callq_label       
  testq %rax, %rax                  #  44    0x533f4  3      OPC=testq_r64_r64     
  movq %rax, %r12                   #  45    0x533f7  3      OPC=movq_r64_r64      
  je .L_534e0                       #  46    0x533fa  6      OPC=je_label_1        
  movzbl (%rbp), %eax               #  47    0x53400  4      OPC=movzbl_r32_m8     
  movl 0x37051b(%rip), %ecx         #  48    0x53404  6      OPC=movl_r32_m32      
  movq %rbx, %rdx                   #  49    0x5340a  3      OPC=movq_r64_r64      
  leaq 0x4(%rbp), %rsi              #  50    0x5340d  4      OPC=leaq_r64_m16      
  leaq 0xc(%r12), %rdi              #  51    0x53411  5      OPC=leaq_r64_m16      
  sarq $0x2, %rdx                   #  52    0x53416  4      OPC=sarq_r64_imm8     
  movq (%r13,%rax,8), %rax          #  53    0x5341a  5      OPC=movq_r64_m64      
  movq %rax, (%r12)                 #  54    0x5341f  4      OPC=movq_m64_r64      
  leal 0x1(%rcx), %eax              #  55    0x53423  3      OPC=leal_r32_m16      
  movl %eax, 0x3704f9(%rip)         #  56    0x53426  6      OPC=movl_m32_r32      
  movl $0x1, %eax                   #  57    0x5342c  5      OPC=movl_r32_imm32    
  shll %cl, %eax                    #  58    0x53431  2      OPC=shll_r32_cl       
  movl %eax, 0x8(%r12)              #  59    0x53433  5      OPC=movl_m32_r32      
  callq .wmemcpy                    #  60    0x53438  5      OPC=callq_label       
  movzbl (%rbp), %edx               #  61    0x5343d  4      OPC=movzbl_r32_m8     
  movq 0x3734e9(%rip), %rax         #  62    0x53441  7      OPC=movq_r64_m64      
  movq %r12, (%rax,%rdx,8)          #  63    0x53448  4      OPC=movq_m64_r64      
  movl 0x8(%r12), %edx              #  64    0x5344c  5      OPC=movl_r32_m32      
.L_53450:                           #        0x53451  0      OPC=<label>           
  cmpl $0x0, 0x3737a9(%rip)         #  65    0x53451  7      OPC=cmpl_m32_imm8     
  je .L_53464                       #  66    0x53458  2      OPC=je_label          
  lock                              #  67    0x5345a  1      OPC=lock              
  decl 0x3704c8(%rip)               #  68    0x5345b  6      OPC=decl_m32          
  nop                               #  69    0x53461  1      OPC=nop               
  jne .L_5346c                      #  70    0x53462  2      OPC=jne_label         
  jmpq .L_53486                     #  71    0x53464  2      OPC=jmpq_label        
.L_53464:                           #        0x53466  0      OPC=<label>           
  decl 0x3704be(%rip)               #  72    0x53466  6      OPC=decl_m32          
  je .L_53486                       #  73    0x5346c  2      OPC=je_label          
.L_5346c:                           #        0x5346e  0      OPC=<label>           
  leaq 0x3704b5(%rip), %rdi         #  74    0x5346e  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  75    0x53475  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  76    0x5347c  5      OPC=callq_label       
  addq $0x80, %rsp                  #  77    0x53481  7      OPC=addq_r64_imm32    
.L_53486:                           #        0x53488  0      OPC=<label>           
  addq $0x8, %rsp                   #  78    0x53488  4      OPC=addq_r64_imm8     
  movl %edx, %eax                   #  79    0x5348c  2      OPC=movl_r32_r32      
  popq %rbx                         #  80    0x5348e  1      OPC=popq_r64_1        
  popq %rbp                         #  81    0x5348f  1      OPC=popq_r64_1        
  popq %r12                         #  82    0x53490  2      OPC=popq_r64_1        
  popq %r13                         #  83    0x53492  2      OPC=popq_r64_1        
  retq                              #  84    0x53494  1      OPC=retq              
  nop                               #  85    0x53495  1      OPC=nop               
  nop                               #  86    0x53496  1      OPC=nop               
  nop                               #  87    0x53497  1      OPC=nop               
  nop                               #  88    0x53498  1      OPC=nop               
  nop                               #  89    0x53499  1      OPC=nop               
.L_53498:                           #        0x5349a  0      OPC=<label>           
  movq 0x36d9e1(%rip), %rax         #  90    0x5349a  7      OPC=movq_r64_m64      
  movl $0x16, (%rax)                #  91    0x534a1  6      OPC=movl_m32_imm32    
  nop                               #  92    0x534a7  1      OPC=nop               
  movl $0xffffffff, %eax            #  93    0x534a8  6      OPC=movl_r32_imm32_1  
.L_534ab:                           #        0x534ae  0      OPC=<label>           
  addq $0x8, %rsp                   #  94    0x534ae  4      OPC=addq_r64_imm8     
  popq %rbx                         #  95    0x534b2  1      OPC=popq_r64_1        
  popq %rbp                         #  96    0x534b3  1      OPC=popq_r64_1        
  popq %r12                         #  97    0x534b4  2      OPC=popq_r64_1        
  popq %r13                         #  98    0x534b6  2      OPC=popq_r64_1        
  retq                              #  99    0x534b8  1      OPC=retq              
.L_534b6:                           #        0x534b9  0      OPC=<label>           
  movl $0x8, %esi                   #  100   0x534b9  5      OPC=movl_r32_imm32    
  movl $0xff, %edi                  #  101   0x534be  5      OPC=movl_r32_imm32    
  callq .L_1f8b0                    #  102   0x534c3  5      OPC=callq_label       
  testq %rax, %rax                  #  103   0x534c8  3      OPC=testq_r64_r64     
  movq %rax, 0x373461(%rip)         #  104   0x534cb  7      OPC=movq_m64_r64      
  movq %rax, %r13                   #  105   0x534d2  3      OPC=movq_r64_r64      
  jne .L_533e7                      #  106   0x534d5  6      OPC=jne_label_1       
  nop                               #  107   0x534db  1      OPC=nop               
  nop                               #  108   0x534dc  1      OPC=nop               
  nop                               #  109   0x534dd  1      OPC=nop               
  nop                               #  110   0x534de  1      OPC=nop               
  nop                               #  111   0x534df  1      OPC=nop               
  nop                               #  112   0x534e0  1      OPC=nop               
  nop                               #  113   0x534e1  1      OPC=nop               
  nop                               #  114   0x534e2  1      OPC=nop               
.L_534e0:                           #        0x534e3  0      OPC=<label>           
  movl $0xffffffff, %edx            #  115   0x534e3  6      OPC=movl_r32_imm32_1  
  jmpq .L_53450                     #  116   0x534e9  5      OPC=jmpq_label_1      
.L_534ea:                           #        0x534ee  0      OPC=<label>           
  movq 0x36d98f(%rip), %rax         #  117   0x534ee  7      OPC=movq_r64_m64      
  movl $0x1c, (%rax)                #  118   0x534f5  6      OPC=movl_m32_imm32    
  nop                               #  119   0x534fb  1      OPC=nop               
  movl $0xffffffff, %eax            #  120   0x534fc  6      OPC=movl_r32_imm32_1  
  jmpq .L_534ab                     #  121   0x53502  2      OPC=jmpq_label        
  nop                               #  122   0x53504  1      OPC=nop               
                                                                                   
.size register_printf_modifier, .-register_printf_modifier

