  .text
  .globl enlarge_userbuf
  .type enlarge_userbuf, @function

#! file-offset 0x7b7b0
#! rip-offset  0x7b7b0
#! capacity    384 bytes

# Text                       #  Line  RIP      Bytes  Opcode              
.enlarge_userbuf:            #        0x7b7b0  0      OPC=<label>         
  pushq %r15                 #  1     0x7b7b0  2      OPC=pushq_r64_1     
  pushq %r14                 #  2     0x7b7b2  2      OPC=pushq_r64_1     
  pushq %r13                 #  3     0x7b7b4  2      OPC=pushq_r64_1     
  pushq %r12                 #  4     0x7b7b6  2      OPC=pushq_r64_1     
  pushq %rbp                 #  5     0x7b7b8  1      OPC=pushq_r64_1     
  pushq %rbx                 #  6     0x7b7b9  1      OPC=pushq_r64_1     
  subq $0x28, %rsp           #  7     0x7b7ba  4      OPC=subq_r64_imm8   
  movq 0x38(%rdi), %r14      #  8     0x7b7be  4      OPC=movq_r64_m64    
  movq 0x40(%rdi), %rax      #  9     0x7b7c2  4      OPC=movq_r64_m64    
  subq %r14, %rax            #  10    0x7b7c6  3      OPC=subq_r64_r64    
  cmpq %rsi, %rax            #  11    0x7b7c9  3      OPC=cmpq_r64_r64    
  jge .L_7b8c8               #  12    0x7b7cc  6      OPC=jge_label_1     
  movl (%rdi), %r13d         #  13    0x7b7d2  3      OPC=movl_r32_m32    
  movq 0x20(%rdi), %rax      #  14    0x7b7d5  4      OPC=movq_r64_m64    
  movq 0x30(%rdi), %r12      #  15    0x7b7d9  4      OPC=movq_r64_m64    
  andl $0x1, %r13d           #  16    0x7b7dd  4      OPC=andl_r32_imm8   
  movq %rax, 0x8(%rsp)       #  17    0x7b7e1  5      OPC=movq_m64_r64    
  je .L_7b800                #  18    0x7b7e6  2      OPC=je_label        
.L_7b7e8:                    #        0x7b7e8  0      OPC=<label>         
  movl $0x1, %r13d           #  19    0x7b7e8  6      OPC=movl_r32_imm32  
.L_7b7ee:                    #        0x7b7ee  0      OPC=<label>         
  addq $0x28, %rsp           #  20    0x7b7ee  4      OPC=addq_r64_imm8   
  movl %r13d, %eax           #  21    0x7b7f2  3      OPC=movl_r32_r32    
  popq %rbx                  #  22    0x7b7f5  1      OPC=popq_r64_1      
  popq %rbp                  #  23    0x7b7f6  1      OPC=popq_r64_1      
  popq %r12                  #  24    0x7b7f7  2      OPC=popq_r64_1      
  popq %r13                  #  25    0x7b7f9  2      OPC=popq_r64_1      
  popq %r14                  #  26    0x7b7fb  2      OPC=popq_r64_1      
  popq %r15                  #  27    0x7b7fd  2      OPC=popq_r64_1      
  retq                       #  28    0x7b7ff  1      OPC=retq            
.L_7b800:                    #        0x7b800  0      OPC=<label>         
  leaq 0x64(%rsi), %rax      #  29    0x7b800  4      OPC=leaq_r64_m16    
  movq %rdi, %rbx            #  30    0x7b804  3      OPC=movq_r64_r64    
  movl %edx, 0x1c(%rsp)      #  31    0x7b807  4      OPC=movl_m32_r32    
  movq %rsi, %rbp            #  32    0x7b80b  3      OPC=movq_r64_r64    
  movq %rax, 0x10(%rsp)      #  33    0x7b80e  5      OPC=movq_m64_r64    
  movq %rax, %rdi            #  34    0x7b813  3      OPC=movq_r64_r64    
  callq 0xe0(%rbx)           #  35    0x7b816  6      OPC=callq_m64       
  testq %rax, %rax           #  36    0x7b81c  3      OPC=testq_r64_r64   
  movq %rax, %r15            #  37    0x7b81f  3      OPC=movq_r64_r64    
  je .L_7b7e8                #  38    0x7b822  2      OPC=je_label        
  testq %r14, %r14           #  39    0x7b824  3      OPC=testq_r64_r64   
  je .L_7b84d                #  40    0x7b827  2      OPC=je_label        
  movq 0x40(%rbx), %rdx      #  41    0x7b829  4      OPC=movq_r64_m64    
  subq 0x38(%rbx), %rdx      #  42    0x7b82d  4      OPC=subq_r64_m64    
  movq %r14, %rsi            #  43    0x7b831  3      OPC=movq_r64_r64    
  movq %rax, %rdi            #  44    0x7b834  3      OPC=movq_r64_r64    
  callq .__GI_memcpy         #  45    0x7b837  5      OPC=callq_label     
  movq %r14, %rdi            #  46    0x7b83c  3      OPC=movq_r64_r64    
  callq 0xe8(%rbx)           #  47    0x7b83f  6      OPC=callq_m64       
  movq $0x0, 0x38(%rbx)      #  48    0x7b845  8      OPC=movq_m64_imm32  
.L_7b84d:                    #        0x7b84d  0      OPC=<label>         
  movq 0x10(%rsp), %rdx      #  49    0x7b84d  5      OPC=movq_r64_m64    
  movl $0x1, %ecx            #  50    0x7b852  5      OPC=movl_r32_imm32  
  movq %r15, %rsi            #  51    0x7b857  3      OPC=movq_r64_r64    
  movq %rbx, %rdi            #  52    0x7b85a  3      OPC=movq_r64_r64    
  subq 0x8(%rsp), %r12       #  53    0x7b85d  5      OPC=subq_r64_m64    
  addq %r15, %rdx            #  54    0x7b862  3      OPC=addq_r64_r64    
  callq ._IO_setb            #  55    0x7b865  5      OPC=callq_label     
  movl 0x1c(%rsp), %edx      #  56    0x7b86a  4      OPC=movl_r32_m32    
  movq %r15, %rax            #  57    0x7b86e  3      OPC=movq_r64_r64    
  subq %r14, %rax            #  58    0x7b871  3      OPC=subq_r64_r64    
  testl %edx, %edx           #  59    0x7b874  2      OPC=testl_r32_r32   
  jne .L_7b8d0               #  60    0x7b876  2      OPC=jne_label       
  addq %rax, 0x18(%rbx)      #  61    0x7b878  4      OPC=addq_m64_r64    
  movq %r15, %rax            #  62    0x7b87c  3      OPC=movq_r64_r64    
  movq %r15, 0x20(%rbx)      #  63    0x7b87f  4      OPC=movq_m64_r64    
  subq %r14, %rax            #  64    0x7b883  3      OPC=subq_r64_r64    
  addq %rax, 0x8(%rbx)       #  65    0x7b886  4      OPC=addq_m64_r64    
  movq %r15, %rax            #  66    0x7b88a  3      OPC=movq_r64_r64    
  subq %r14, %rax            #  67    0x7b88d  3      OPC=subq_r64_r64    
  addq %rax, 0x10(%rbx)      #  68    0x7b890  4      OPC=addq_m64_r64    
  movq %r15, %rax            #  69    0x7b894  3      OPC=movq_r64_r64    
  subq %r14, %rax            #  70    0x7b897  3      OPC=subq_r64_r64    
  addq %rax, 0x28(%rbx)      #  71    0x7b89a  4      OPC=addq_m64_r64    
  cmpq %r12, %rbp            #  72    0x7b89e  3      OPC=cmpq_r64_r64    
  movq 0x40(%rbx), %rax      #  73    0x7b8a1  4      OPC=movq_r64_m64    
  movq %rax, 0x30(%rbx)      #  74    0x7b8a5  4      OPC=movq_m64_r64    
  jl .L_7b903                #  75    0x7b8a9  2      OPC=jl_label        
.L_7b8ab:                    #        0x7b8ab  0      OPC=<label>         
  movq %rbp, %rdx            #  76    0x7b8ab  3      OPC=movq_r64_r64    
  leaq (%r15,%r12,1), %rdi   #  77    0x7b8ae  4      OPC=leaq_r64_m16    
  xorl %esi, %esi            #  78    0x7b8b2  2      OPC=xorl_r32_r32    
  subq %r12, %rdx            #  79    0x7b8b4  3      OPC=subq_r64_r64    
  callq .__GI_memset         #  80    0x7b8b7  5      OPC=callq_label     
  jmpq .L_7b7ee              #  81    0x7b8bc  5      OPC=jmpq_label_1    
  nop                        #  82    0x7b8c1  1      OPC=nop             
  nop                        #  83    0x7b8c2  1      OPC=nop             
  nop                        #  84    0x7b8c3  1      OPC=nop             
  nop                        #  85    0x7b8c4  1      OPC=nop             
  nop                        #  86    0x7b8c5  1      OPC=nop             
  nop                        #  87    0x7b8c6  1      OPC=nop             
  nop                        #  88    0x7b8c7  1      OPC=nop             
.L_7b8c8:                    #        0x7b8c8  0      OPC=<label>         
  xorl %r13d, %r13d          #  89    0x7b8c8  3      OPC=xorl_r32_r32    
  jmpq .L_7b7ee              #  90    0x7b8cb  5      OPC=jmpq_label_1    
.L_7b8d0:                    #        0x7b8d0  0      OPC=<label>         
  addq %rax, 0x20(%rbx)      #  91    0x7b8d0  4      OPC=addq_m64_r64    
  movq %r15, %rax            #  92    0x7b8d4  3      OPC=movq_r64_r64    
  movq %r15, 0x18(%rbx)      #  93    0x7b8d7  4      OPC=movq_m64_r64    
  subq %r14, %rax            #  94    0x7b8db  3      OPC=subq_r64_r64    
  addq %rax, 0x28(%rbx)      #  95    0x7b8de  4      OPC=addq_m64_r64    
  movq %r15, %rax            #  96    0x7b8e2  3      OPC=movq_r64_r64    
  subq %r14, %rax            #  97    0x7b8e5  3      OPC=subq_r64_r64    
  addq %rax, 0x30(%rbx)      #  98    0x7b8e8  4      OPC=addq_m64_r64    
  movq %r15, %rax            #  99    0x7b8ec  3      OPC=movq_r64_r64    
  subq %r14, %rax            #  100   0x7b8ef  3      OPC=subq_r64_r64    
  addq %rax, 0x8(%rbx)       #  101   0x7b8f2  4      OPC=addq_m64_r64    
  cmpq %r12, %rbp            #  102   0x7b8f6  3      OPC=cmpq_r64_r64    
  movq 0x40(%rbx), %rax      #  103   0x7b8f9  4      OPC=movq_r64_m64    
  movq %rax, 0x10(%rbx)      #  104   0x7b8fd  4      OPC=movq_m64_r64    
  jge .L_7b8ab               #  105   0x7b901  2      OPC=jge_label       
.L_7b903:                    #        0x7b903  0      OPC=<label>         
  leaq 0x115636(%rip), %rcx  #  106   0x7b903  7      OPC=leaq_r64_m16    
  leaq 0x10fbd4(%rip), %rsi  #  107   0x7b90a  7      OPC=leaq_r64_m16    
  leaq 0x10fbd6(%rip), %rdi  #  108   0x7b911  7      OPC=leaq_r64_m16    
  movl $0xe0, %edx           #  109   0x7b918  5      OPC=movl_r32_imm32  
  callq .__assert_fail       #  110   0x7b91d  5      OPC=callq_label     
  nop                        #  111   0x7b922  1      OPC=nop             
  nop                        #  112   0x7b923  1      OPC=nop             
  nop                        #  113   0x7b924  1      OPC=nop             
  nop                        #  114   0x7b925  1      OPC=nop             
  nop                        #  115   0x7b926  1      OPC=nop             
  nop                        #  116   0x7b927  1      OPC=nop             
  nop                        #  117   0x7b928  1      OPC=nop             
  nop                        #  118   0x7b929  1      OPC=nop             
  nop                        #  119   0x7b92a  1      OPC=nop             
  nop                        #  120   0x7b92b  1      OPC=nop             
  nop                        #  121   0x7b92c  1      OPC=nop             
  nop                        #  122   0x7b92d  1      OPC=nop             
  nop                        #  123   0x7b92e  1      OPC=nop             
  nop                        #  124   0x7b92f  1      OPC=nop             
                                                                          
.size enlarge_userbuf, .-enlarge_userbuf

