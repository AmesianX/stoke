  .text
  .globl parse_backtick_constprop_5
  .type parse_backtick_constprop_5, @function

#! file-offset 0xef0b0
#! rip-offset  0xef0b0
#! capacity    768 bytes

# Text                           #  Line  RIP      Bytes  Opcode              
.parse_backtick_constprop_5:     #        0xef0b0  0      OPC=<label>         
  pushq %r15                     #  1     0xef0b0  2      OPC=pushq_r64_1     
  pushq %r14                     #  2     0xef0b2  2      OPC=pushq_r64_1     
  movq %r8, %r14                 #  3     0xef0b4  3      OPC=movq_r64_r64    
  pushq %r13                     #  4     0xef0b7  2      OPC=pushq_r64_1     
  pushq %r12                     #  5     0xef0b9  2      OPC=pushq_r64_1     
  movq %rdx, %r12                #  6     0xef0bb  3      OPC=movq_r64_r64    
  pushq %rbp                     #  7     0xef0be  1      OPC=pushq_r64_1     
  pushq %rbx                     #  8     0xef0bf  1      OPC=pushq_r64_1     
  movq %rcx, %r13                #  9     0xef0c0  3      OPC=movq_r64_r64    
  subq $0x58, %rsp               #  10    0xef0c3  4      OPC=subq_r64_imm8   
  movq (%r8), %rax               #  11    0xef0c7  3      OPC=movq_r64_m64    
  movq $0x0, 0x40(%rsp)          #  12    0xef0ca  9      OPC=movq_m64_imm32  
  movq $0x0, 0x38(%rsp)          #  13    0xef0d3  9      OPC=movq_m64_imm32  
  movq $0x0, 0x48(%rsp)          #  14    0xef0dc  9      OPC=movq_m64_imm32  
  movzbl (%rcx,%rax,1), %edx     #  15    0xef0e5  4      OPC=movzbl_r32_m8   
  testb %dl, %dl                 #  16    0xef0e9  2      OPC=testb_r8_r8     
  je .L_ef36c                    #  17    0xef0eb  6      OPC=je_label_1      
  movq %rdi, %rbx                #  18    0xef0f1  3      OPC=movq_r64_r64    
  leaq 0x38(%rsp), %rdi          #  19    0xef0f4  5      OPC=leaq_r64_m16    
  leaq 0x40(%rsp), %r15          #  20    0xef0f9  5      OPC=leaq_r64_m16    
  movq %rsi, %rbp                #  21    0xef0fe  3      OPC=movq_r64_r64    
  xorl %r8d, %r8d                #  22    0xef101  3      OPC=xorl_r32_r32    
  movq %rdi, 0x8(%rsp)           #  23    0xef104  5      OPC=movq_m64_r64    
  leaq 0x48(%rsp), %rdi          #  24    0xef109  5      OPC=leaq_r64_m16    
  movq %rdi, 0x10(%rsp)          #  25    0xef10e  5      OPC=movq_m64_r64    
.L_ef113:                        #        0xef113  0      OPC=<label>         
  cmpb $0x5c, %dl                #  26    0xef113  3      OPC=cmpb_r8_imm8    
  je .L_ef1c8                    #  27    0xef116  6      OPC=je_label_1      
  cmpb $0x60, %dl                #  28    0xef11c  3      OPC=cmpb_r8_imm8    
  je .L_ef190                    #  29    0xef11f  2      OPC=je_label        
  cmpb $0x27, %dl                #  30    0xef121  3      OPC=cmpb_r8_imm8    
  jne .L_ef131                   #  31    0xef124  2      OPC=jne_label       
  movl $0x1, %eax                #  32    0xef126  5      OPC=movl_r32_imm32  
  subl %r8d, %eax                #  33    0xef12b  3      OPC=subl_r32_r32    
  movl %eax, %r8d                #  34    0xef12e  3      OPC=movl_r32_r32    
.L_ef131:                        #        0xef131  0      OPC=<label>         
  movq 0x38(%rsp), %rsi          #  35    0xef131  5      OPC=movq_r64_m64    
  cmpq 0x40(%rsp), %rsi          #  36    0xef136  5      OPC=cmpq_r64_m64    
  movq 0x48(%rsp), %rcx          #  37    0xef13b  5      OPC=movq_r64_m64    
  je .L_ef270                    #  38    0xef140  6      OPC=je_label_1      
  testq %rcx, %rcx               #  39    0xef146  3      OPC=testq_r64_r64   
  je .L_ef2d8                    #  40    0xef149  6      OPC=je_label_1      
.L_ef14f:                        #        0xef14f  0      OPC=<label>         
  movb %dl, (%rcx,%rsi,1)        #  41    0xef14f  3      OPC=movb_m8_r8      
  movq 0x38(%rsp), %rax          #  42    0xef152  5      OPC=movq_r64_m64    
  leaq 0x1(%rax), %rdx           #  43    0xef157  4      OPC=leaq_r64_m16    
  movq %rdx, 0x38(%rsp)          #  44    0xef15b  5      OPC=movq_m64_r64    
  movb $0x0, 0x1(%rcx,%rax,1)    #  45    0xef160  5      OPC=movb_m8_imm8    
  movq (%r14), %rdx              #  46    0xef165  3      OPC=movq_r64_m64    
  movq %rcx, 0x48(%rsp)          #  47    0xef168  5      OPC=movq_m64_r64    
.L_ef16d:                        #        0xef16d  0      OPC=<label>         
  leaq 0x1(%rdx), %rax           #  48    0xef16d  4      OPC=leaq_r64_m16    
  movq %rax, (%r14)              #  49    0xef171  3      OPC=movq_m64_r64    
  movzbl 0x1(%r13,%rdx,1), %edx  #  50    0xef174  6      OPC=movzbl_r32_m8   
  testb %dl, %dl                 #  51    0xef17a  2      OPC=testb_r8_r8     
  jne .L_ef113                   #  52    0xef17c  2      OPC=jne_label       
  movq 0x48(%rsp), %rdi          #  53    0xef17e  5      OPC=movq_r64_m64    
.L_ef183:                        #        0xef183  0      OPC=<label>         
  callq .L_1f8c0                 #  54    0xef183  5      OPC=callq_label     
  movl $0x5, %eax                #  55    0xef188  5      OPC=movl_r32_imm32  
  jmpq .L_ef1b4                  #  56    0xef18d  2      OPC=jmpq_label      
  nop                            #  57    0xef18f  1      OPC=nop             
.L_ef190:                        #        0xef190  0      OPC=<label>         
  movq 0x48(%rsp), %rdi          #  58    0xef190  5      OPC=movq_r64_m64    
  movq %rbx, %rsi                #  59    0xef195  3      OPC=movq_r64_r64    
  movl %r9d, %r8d                #  60    0xef198  3      OPC=movl_r32_r32    
  movq %r12, %rcx                #  61    0xef19b  3      OPC=movq_r64_r64    
  movq %rbp, %rdx                #  62    0xef19e  3      OPC=movq_r64_r64    
  callq .exec_comm_constprop_6   #  63    0xef1a1  5      OPC=callq_label     
  movq 0x48(%rsp), %rdi          #  64    0xef1a6  5      OPC=movq_r64_m64    
  movl %eax, %ebx                #  65    0xef1ab  2      OPC=movl_r32_r32    
  callq .L_1f8c0                 #  66    0xef1ad  5      OPC=callq_label     
  movl %ebx, %eax                #  67    0xef1b2  2      OPC=movl_r32_r32    
.L_ef1b4:                        #        0xef1b4  0      OPC=<label>         
  addq $0x58, %rsp               #  68    0xef1b4  4      OPC=addq_r64_imm8   
  popq %rbx                      #  69    0xef1b8  1      OPC=popq_r64_1      
  popq %rbp                      #  70    0xef1b9  1      OPC=popq_r64_1      
  popq %r12                      #  71    0xef1ba  2      OPC=popq_r64_1      
  popq %r13                      #  72    0xef1bc  2      OPC=popq_r64_1      
  popq %r14                      #  73    0xef1be  2      OPC=popq_r64_1      
  popq %r15                      #  74    0xef1c0  2      OPC=popq_r64_1      
  retq                           #  75    0xef1c2  1      OPC=retq            
  nop                            #  76    0xef1c3  1      OPC=nop             
  nop                            #  77    0xef1c4  1      OPC=nop             
  nop                            #  78    0xef1c5  1      OPC=nop             
  nop                            #  79    0xef1c6  1      OPC=nop             
  nop                            #  80    0xef1c7  1      OPC=nop             
.L_ef1c8:                        #        0xef1c8  0      OPC=<label>         
  testl %r8d, %r8d               #  81    0xef1c8  3      OPC=testl_r32_r32   
  je .L_ef208                    #  82    0xef1cb  2      OPC=je_label        
  movq 0x8(%rsp), %rsi           #  83    0xef1cd  5      OPC=movq_r64_m64    
  movq 0x10(%rsp), %rdi          #  84    0xef1d2  5      OPC=movq_r64_m64    
  movq %r14, %r8                 #  85    0xef1d7  3      OPC=movq_r64_r64    
  movq %r13, %rcx                #  86    0xef1da  3      OPC=movq_r64_r64    
  movq %r15, %rdx                #  87    0xef1dd  3      OPC=movq_r64_r64    
  movl %r9d, 0x18(%rsp)          #  88    0xef1e0  5      OPC=movl_m32_r32    
  callq .parse_qtd_backslash     #  89    0xef1e5  5      OPC=callq_label     
  testl %eax, %eax               #  90    0xef1ea  2      OPC=testl_r32_r32   
  jne .L_ef387                   #  91    0xef1ec  6      OPC=jne_label_1     
  movq (%r14), %rdx              #  92    0xef1f2  3      OPC=movq_r64_m64    
  movl $0x1, %r8d                #  93    0xef1f5  6      OPC=movl_r32_imm32  
  movl 0x18(%rsp), %r9d          #  94    0xef1fb  5      OPC=movl_r32_m32    
  jmpq .L_ef16d                  #  95    0xef200  5      OPC=jmpq_label_1    
  nop                            #  96    0xef205  1      OPC=nop             
  nop                            #  97    0xef206  1      OPC=nop             
  nop                            #  98    0xef207  1      OPC=nop             
.L_ef208:                        #        0xef208  0      OPC=<label>         
  movzbl 0x1(%r13,%rax,1), %ecx  #  99    0xef208  6      OPC=movzbl_r32_m8   
  leaq 0x1(%rax), %rdx           #  100   0xef20e  4      OPC=leaq_r64_m16    
  testb %cl, %cl                 #  101   0xef212  2      OPC=testb_r8_r8     
  je .L_ef2f0                    #  102   0xef214  6      OPC=je_label_1      
  cmpb $0xa, %cl                 #  103   0xef21a  3      OPC=cmpb_r8_imm8    
  je .L_ef16d                    #  104   0xef21d  6      OPC=je_label_1      
  movq 0x38(%rsp), %rsi          #  105   0xef223  5      OPC=movq_r64_m64    
  cmpq 0x40(%rsp), %rsi          #  106   0xef228  5      OPC=cmpq_r64_m64    
  movq 0x48(%rsp), %rdx          #  107   0xef22d  5      OPC=movq_r64_m64    
  je .L_ef310                    #  108   0xef232  6      OPC=je_label_1      
  testq %rdx, %rdx               #  109   0xef238  3      OPC=testq_r64_r64   
  je .L_ef37b                    #  110   0xef23b  6      OPC=je_label_1      
.L_ef241:                        #        0xef241  0      OPC=<label>         
  movb %cl, (%rdx,%rsi,1)        #  111   0xef241  3      OPC=movb_m8_r8      
  movq 0x38(%rsp), %rax          #  112   0xef244  5      OPC=movq_r64_m64    
  leaq 0x1(%rax), %rcx           #  113   0xef249  4      OPC=leaq_r64_m16    
  movq %rcx, 0x38(%rsp)          #  114   0xef24d  5      OPC=movq_m64_r64    
  movb $0x0, 0x1(%rdx,%rax,1)    #  115   0xef252  5      OPC=movb_m8_imm8    
  movq (%r14), %rax              #  116   0xef257  3      OPC=movq_r64_m64    
  movq %rdx, 0x48(%rsp)          #  117   0xef25a  5      OPC=movq_m64_r64    
  leaq 0x1(%rax), %rdx           #  118   0xef25f  4      OPC=leaq_r64_m16    
  jmpq .L_ef16d                  #  119   0xef263  5      OPC=jmpq_label_1    
  nop                            #  120   0xef268  1      OPC=nop             
  nop                            #  121   0xef269  1      OPC=nop             
  nop                            #  122   0xef26a  1      OPC=nop             
  nop                            #  123   0xef26b  1      OPC=nop             
  nop                            #  124   0xef26c  1      OPC=nop             
  nop                            #  125   0xef26d  1      OPC=nop             
  nop                            #  126   0xef26e  1      OPC=nop             
  nop                            #  127   0xef26f  1      OPC=nop             
.L_ef270:                        #        0xef270  0      OPC=<label>         
  testq %rcx, %rcx               #  128   0xef270  3      OPC=testq_r64_r64   
  je .L_ef27e                    #  129   0xef273  2      OPC=je_label        
  testq %rsi, %rsi               #  130   0xef275  3      OPC=testq_r64_r64   
  je .L_ef39e                    #  131   0xef278  6      OPC=je_label_1      
.L_ef27e:                        #        0xef27e  0      OPC=<label>         
  leaq 0x64(%rsi), %rax          #  132   0xef27e  4      OPC=leaq_r64_m16    
  movq %rcx, %rdi                #  133   0xef282  3      OPC=movq_r64_r64    
  addq $0x65, %rsi               #  134   0xef285  4      OPC=addq_r64_imm8   
  movq %rcx, 0x18(%rsp)          #  135   0xef289  5      OPC=movq_m64_r64    
  movl %r9d, 0x2c(%rsp)          #  136   0xef28e  5      OPC=movl_m32_r32    
  movb %dl, 0x2b(%rsp)           #  137   0xef293  4      OPC=movb_m8_r8      
  movl %r8d, 0x24(%rsp)          #  138   0xef297  5      OPC=movl_m32_r32    
  movq %rax, 0x40(%rsp)          #  139   0xef29c  5      OPC=movq_m64_r64    
  callq .__tls_get_addr_plt      #  140   0xef2a1  5      OPC=callq_label     
  testq %rax, %rax               #  141   0xef2a6  3      OPC=testq_r64_r64   
  movq 0x18(%rsp), %rcx          #  142   0xef2a9  5      OPC=movq_r64_m64    
  je .L_ef2cc                    #  143   0xef2ae  2      OPC=je_label        
  movq 0x38(%rsp), %rsi          #  144   0xef2b0  5      OPC=movq_r64_m64    
  movq %rax, %rcx                #  145   0xef2b5  3      OPC=movq_r64_r64    
  movl 0x24(%rsp), %r8d          #  146   0xef2b8  5      OPC=movl_r32_m32    
  movzbl 0x2b(%rsp), %edx        #  147   0xef2bd  5      OPC=movzbl_r32_m8   
  movl 0x2c(%rsp), %r9d          #  148   0xef2c2  5      OPC=movl_r32_m32    
  jmpq .L_ef14f                  #  149   0xef2c7  5      OPC=jmpq_label_1    
.L_ef2cc:                        #        0xef2cc  0      OPC=<label>         
  movq %rcx, %rdi                #  150   0xef2cc  3      OPC=movq_r64_r64    
  callq .L_1f8c0                 #  151   0xef2cf  5      OPC=callq_label     
  nop                            #  152   0xef2d4  1      OPC=nop             
  nop                            #  153   0xef2d5  1      OPC=nop             
  nop                            #  154   0xef2d6  1      OPC=nop             
  nop                            #  155   0xef2d7  1      OPC=nop             
.L_ef2d8:                        #        0xef2d8  0      OPC=<label>         
  addq $0x58, %rsp               #  156   0xef2d8  4      OPC=addq_r64_imm8   
  movl $0x1, %eax                #  157   0xef2dc  5      OPC=movl_r32_imm32  
  popq %rbx                      #  158   0xef2e1  1      OPC=popq_r64_1      
  popq %rbp                      #  159   0xef2e2  1      OPC=popq_r64_1      
  popq %r12                      #  160   0xef2e3  2      OPC=popq_r64_1      
  popq %r13                      #  161   0xef2e5  2      OPC=popq_r64_1      
  popq %r14                      #  162   0xef2e7  2      OPC=popq_r64_1      
  popq %r15                      #  163   0xef2e9  2      OPC=popq_r64_1      
  retq                           #  164   0xef2eb  1      OPC=retq            
  nop                            #  165   0xef2ec  1      OPC=nop             
  nop                            #  166   0xef2ed  1      OPC=nop             
  nop                            #  167   0xef2ee  1      OPC=nop             
  nop                            #  168   0xef2ef  1      OPC=nop             
.L_ef2f0:                        #        0xef2f0  0      OPC=<label>         
  movq 0x48(%rsp), %rdi          #  169   0xef2f0  5      OPC=movq_r64_m64    
  movl $0x5, %ebx                #  170   0xef2f5  5      OPC=movl_r32_imm32  
.L_ef2fa:                        #        0xef2fa  0      OPC=<label>         
  callq .L_1f8c0                 #  171   0xef2fa  5      OPC=callq_label     
  movl %ebx, %eax                #  172   0xef2ff  2      OPC=movl_r32_r32    
  jmpq .L_ef1b4                  #  173   0xef301  5      OPC=jmpq_label_1    
  nop                            #  174   0xef306  1      OPC=nop             
  nop                            #  175   0xef307  1      OPC=nop             
  nop                            #  176   0xef308  1      OPC=nop             
  nop                            #  177   0xef309  1      OPC=nop             
  nop                            #  178   0xef30a  1      OPC=nop             
  nop                            #  179   0xef30b  1      OPC=nop             
  nop                            #  180   0xef30c  1      OPC=nop             
  nop                            #  181   0xef30d  1      OPC=nop             
  nop                            #  182   0xef30e  1      OPC=nop             
  nop                            #  183   0xef30f  1      OPC=nop             
.L_ef310:                        #        0xef310  0      OPC=<label>         
  testq %rdx, %rdx               #  184   0xef310  3      OPC=testq_r64_r64   
  je .L_ef31e                    #  185   0xef313  2      OPC=je_label        
  testq %rsi, %rsi               #  186   0xef315  3      OPC=testq_r64_r64   
  je .L_ef39e                    #  187   0xef318  6      OPC=je_label_1      
.L_ef31e:                        #        0xef31e  0      OPC=<label>         
  leaq 0x64(%rsi), %rax          #  188   0xef31e  4      OPC=leaq_r64_m16    
  movq %rdx, %rdi                #  189   0xef322  3      OPC=movq_r64_r64    
  addq $0x65, %rsi               #  190   0xef325  4      OPC=addq_r64_imm8   
  movq %rdx, 0x18(%rsp)          #  191   0xef329  5      OPC=movq_m64_r64    
  movl %r9d, 0x2c(%rsp)          #  192   0xef32e  5      OPC=movl_m32_r32    
  movb %cl, 0x2b(%rsp)           #  193   0xef333  4      OPC=movb_m8_r8      
  movl %r8d, 0x24(%rsp)          #  194   0xef337  5      OPC=movl_m32_r32    
  movq %rax, 0x40(%rsp)          #  195   0xef33c  5      OPC=movq_m64_r64    
  callq .__tls_get_addr_plt      #  196   0xef341  5      OPC=callq_label     
  testq %rax, %rax               #  197   0xef346  3      OPC=testq_r64_r64   
  movq 0x18(%rsp), %rdx          #  198   0xef349  5      OPC=movq_r64_m64    
  je .L_ef373                    #  199   0xef34e  2      OPC=je_label        
  movq 0x38(%rsp), %rsi          #  200   0xef350  5      OPC=movq_r64_m64    
  movq %rax, %rdx                #  201   0xef355  3      OPC=movq_r64_r64    
  movl 0x24(%rsp), %r8d          #  202   0xef358  5      OPC=movl_r32_m32    
  movzbl 0x2b(%rsp), %ecx        #  203   0xef35d  5      OPC=movzbl_r32_m8   
  movl 0x2c(%rsp), %r9d          #  204   0xef362  5      OPC=movl_r32_m32    
  jmpq .L_ef241                  #  205   0xef367  5      OPC=jmpq_label_1    
.L_ef36c:                        #        0xef36c  0      OPC=<label>         
  xorl %edi, %edi                #  206   0xef36c  2      OPC=xorl_r32_r32    
  jmpq .L_ef183                  #  207   0xef36e  5      OPC=jmpq_label_1    
.L_ef373:                        #        0xef373  0      OPC=<label>         
  movq %rdx, %rdi                #  208   0xef373  3      OPC=movq_r64_r64    
  callq .L_1f8c0                 #  209   0xef376  5      OPC=callq_label     
.L_ef37b:                        #        0xef37b  0      OPC=<label>         
  xorl %edi, %edi                #  210   0xef37b  2      OPC=xorl_r32_r32    
  movl $0x1, %ebx                #  211   0xef37d  5      OPC=movl_r32_imm32  
  jmpq .L_ef2fa                  #  212   0xef382  5      OPC=jmpq_label_1    
.L_ef387:                        #        0xef387  0      OPC=<label>         
  movq 0x48(%rsp), %rdi          #  213   0xef387  5      OPC=movq_r64_m64    
  movl %eax, 0x8(%rsp)           #  214   0xef38c  4      OPC=movl_m32_r32    
  callq .L_1f8c0                 #  215   0xef390  5      OPC=callq_label     
  movl 0x8(%rsp), %eax           #  216   0xef395  4      OPC=movl_r32_m32    
  jmpq .L_ef1b4                  #  217   0xef399  5      OPC=jmpq_label_1    
.L_ef39e:                        #        0xef39e  0      OPC=<label>         
  callq .w_addchar_part_1        #  218   0xef39e  5      OPC=callq_label     
  nop                            #  219   0xef3a3  1      OPC=nop             
  nop                            #  220   0xef3a4  1      OPC=nop             
  nop                            #  221   0xef3a5  1      OPC=nop             
  nop                            #  222   0xef3a6  1      OPC=nop             
  nop                            #  223   0xef3a7  1      OPC=nop             
  nop                            #  224   0xef3a8  1      OPC=nop             
  nop                            #  225   0xef3a9  1      OPC=nop             
  nop                            #  226   0xef3aa  1      OPC=nop             
  nop                            #  227   0xef3ab  1      OPC=nop             
  nop                            #  228   0xef3ac  1      OPC=nop             
  nop                            #  229   0xef3ad  1      OPC=nop             
  nop                            #  230   0xef3ae  1      OPC=nop             
  nop                            #  231   0xef3af  1      OPC=nop             
                                                                              
.size parse_backtick_constprop_5, .-parse_backtick_constprop_5

