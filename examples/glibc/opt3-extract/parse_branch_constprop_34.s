  .text
  .globl parse_branch_constprop_34
  .type parse_branch_constprop_34, @function

#! file-offset 0xe08b0
#! rip-offset  0xe08b0
#! capacity    432 bytes

# Text                                 #  Line  RIP      Bytes  Opcode              
.parse_branch_constprop_34:            #        0xe08b0  0      OPC=<label>         
  pushq %r15                           #  1     0xe08b0  2      OPC=pushq_r64_1     
  pushq %r14                           #  2     0xe08b2  2      OPC=pushq_r64_1     
  movq %r8, %r9                        #  3     0xe08b4  3      OPC=movq_r64_r64    
  pushq %r13                           #  4     0xe08b7  2      OPC=pushq_r64_1     
  pushq %r12                           #  5     0xe08b9  2      OPC=pushq_r64_1     
  movq %rdx, %r14                      #  6     0xe08bb  3      OPC=movq_r64_r64    
  pushq %rbp                           #  7     0xe08be  1      OPC=pushq_r64_1     
  pushq %rbx                           #  8     0xe08bf  1      OPC=pushq_r64_1     
  movq %r8, %rbp                       #  9     0xe08c0  3      OPC=movq_r64_r64    
  xorl %r8d, %r8d                      #  10    0xe08c3  3      OPC=xorl_r32_r32    
  movq %rsi, %r12                      #  11    0xe08c6  3      OPC=movq_r64_r64    
  subq $0x18, %rsp                     #  12    0xe08c9  4      OPC=subq_r64_imm8   
  movq (%rsi), %r15                    #  13    0xe08cd  3      OPC=movq_r64_m64    
  movq %rdi, (%rsp)                    #  14    0xe08d0  4      OPC=movq_m64_r64    
  movq %rcx, 0x8(%rsp)                 #  15    0xe08d4  5      OPC=movq_m64_r64    
  callq .parse_expression              #  16    0xe08d9  5      OPC=callq_label     
  testq %rax, %rax                     #  17    0xe08de  3      OPC=testq_r64_r64   
  movq %rax, %r13                      #  18    0xe08e1  3      OPC=movq_r64_r64    
  jne .L_e08f8                         #  19    0xe08e4  2      OPC=jne_label       
  movl (%rbp), %edx                    #  20    0xe08e6  3      OPC=movl_r32_m32    
  testl %edx, %edx                     #  21    0xe08e9  2      OPC=testl_r32_r32   
  jne .L_e0a1d                         #  22    0xe08eb  6      OPC=jne_label_1     
  nop                                  #  23    0xe08f1  1      OPC=nop             
  nop                                  #  24    0xe08f2  1      OPC=nop             
  nop                                  #  25    0xe08f3  1      OPC=nop             
  nop                                  #  26    0xe08f4  1      OPC=nop             
  nop                                  #  27    0xe08f5  1      OPC=nop             
  nop                                  #  28    0xe08f6  1      OPC=nop             
  nop                                  #  29    0xe08f7  1      OPC=nop             
.L_e08f8:                              #        0xe08f8  0      OPC=<label>         
  movzbl 0x8(%r14), %eax               #  30    0xe08f8  5      OPC=movzbl_r32_m8   
  andl $0xfffffff7, %eax               #  31    0xe08fd  6      OPC=andl_r32_imm32  
  nop                                  #  32    0xe0903  1      OPC=nop             
  nop                                  #  33    0xe0904  1      OPC=nop             
  nop                                  #  34    0xe0905  1      OPC=nop             
  cmpb $0x2, %al                       #  35    0xe0906  2      OPC=cmpb_al_imm8    
  je .L_e094e                          #  36    0xe0908  2      OPC=je_label        
.L_e0904:                              #        0xe090a  0      OPC=<label>         
  movq 0x8(%rsp), %rcx                 #  37    0xe090a  5      OPC=movq_r64_m64    
  movq (%rsp), %rdi                    #  38    0xe090f  4      OPC=movq_r64_m64    
  xorl %r8d, %r8d                      #  39    0xe0913  3      OPC=xorl_r32_r32    
  movq %rbp, %r9                       #  40    0xe0916  3      OPC=movq_r64_r64    
  movq %r14, %rdx                      #  41    0xe0919  3      OPC=movq_r64_r64    
  movq %r12, %rsi                      #  42    0xe091c  3      OPC=movq_r64_r64    
  callq .parse_expression              #  43    0xe091f  5      OPC=callq_label     
  testq %rax, %rax                     #  44    0xe0924  3      OPC=testq_r64_r64   
  movq %rax, %rbx                      #  45    0xe0927  3      OPC=movq_r64_r64    
  jne .L_e0931                         #  46    0xe092a  2      OPC=jne_label       
  movl (%rbp), %eax                    #  47    0xe092c  3      OPC=movl_r32_m32    
  testl %eax, %eax                     #  48    0xe092f  2      OPC=testl_r32_r32   
  jne .L_e0a10                         #  49    0xe0931  6      OPC=jne_label_1     
.L_e0931:                              #        0xe0937  0      OPC=<label>         
  testq %rbx, %rbx                     #  50    0xe0937  3      OPC=testq_r64_r64   
  je .L_e093b                          #  51    0xe093a  2      OPC=je_label        
  testq %r13, %r13                     #  52    0xe093c  3      OPC=testq_r64_r64   
  jne .L_e0960                         #  53    0xe093f  2      OPC=jne_label       
.L_e093b:                              #        0xe0941  0      OPC=<label>         
  movzbl 0x8(%r14), %eax               #  54    0xe0941  5      OPC=movzbl_r32_m8   
  testq %r13, %r13                     #  55    0xe0946  3      OPC=testq_r64_r64   
  cmoveq %rbx, %r13                    #  56    0xe0949  4      OPC=cmoveq_r64_r64  
  andl $0xfffffff7, %eax               #  57    0xe094d  6      OPC=andl_r32_imm32  
  nop                                  #  58    0xe0953  1      OPC=nop             
  nop                                  #  59    0xe0954  1      OPC=nop             
  nop                                  #  60    0xe0955  1      OPC=nop             
  cmpb $0x2, %al                       #  61    0xe0956  2      OPC=cmpb_al_imm8    
  jne .L_e0904                         #  62    0xe0958  2      OPC=jne_label       
.L_e094e:                              #        0xe095a  0      OPC=<label>         
  addq $0x18, %rsp                     #  63    0xe095a  4      OPC=addq_r64_imm8   
  movq %r13, %rax                      #  64    0xe095e  3      OPC=movq_r64_r64    
  popq %rbx                            #  65    0xe0961  1      OPC=popq_r64_1      
  popq %rbp                            #  66    0xe0962  1      OPC=popq_r64_1      
  popq %r12                            #  67    0xe0963  2      OPC=popq_r64_1      
  popq %r13                            #  68    0xe0965  2      OPC=popq_r64_1      
  popq %r14                            #  69    0xe0967  2      OPC=popq_r64_1      
  popq %r15                            #  70    0xe0969  2      OPC=popq_r64_1      
  retq                                 #  71    0xe096b  1      OPC=retq            
.L_e0960:                              #        0xe096c  0      OPC=<label>         
  movslq 0x80(%r15), %rdx              #  72    0xe096c  7      OPC=movslq_r64_m32  
  cmpl $0xf, %edx                      #  73    0xe0973  3      OPC=cmpl_r32_imm8   
  je .L_e09e0                          #  74    0xe0976  2      OPC=je_label        
  movq 0x70(%r15), %rax                #  75    0xe0978  4      OPC=movq_r64_m64    
  leal 0x1(%rdx), %ecx                 #  76    0xe097c  3      OPC=leal_r32_m16    
.L_e0973:                              #        0xe097f  0      OPC=<label>         
  shlq $0x6, %rdx                      #  77    0xe097f  4      OPC=shlq_r64_imm8   
  movl %ecx, 0x80(%r15)                #  78    0xe0983  7      OPC=movl_m32_r32    
  leaq (%rax,%rdx,1), %rcx             #  79    0xe098a  4      OPC=leaq_r64_m16    
  leaq 0x10(%rax,%rdx,1), %rdi         #  80    0xe098e  5      OPC=leaq_r64_m16    
  movq $0x0, 0x8(%rcx)                 #  81    0xe0993  8      OPC=movq_m64_imm32  
  movq %r13, 0x10(%rcx)                #  82    0xe099b  4      OPC=movq_m64_r64    
  leaq 0x8(%rcx), %rsi                 #  83    0xe099f  4      OPC=leaq_r64_m16    
  leaq 0x20(%rdx), %rcx                #  84    0xe09a3  4      OPC=leaq_r64_m16    
  movq %rbx, 0x8(%rdi)                 #  85    0xe09a7  4      OPC=movq_m64_r64    
  movb $0x10, 0x38(%rax,%rdx,1)        #  86    0xe09ab  5      OPC=movb_m8_imm8    
  addq %rax, %rcx                      #  87    0xe09b0  3      OPC=addq_r64_r64    
  andb $0xf3, 0x1a(%rcx)               #  88    0xe09b3  4      OPC=andb_m8_imm8    
  testq %rsi, %rsi                     #  89    0xe09b7  3      OPC=testq_r64_r64   
  movq $0x0, 0x10(%rdi)                #  90    0xe09ba  8      OPC=movq_m64_imm32  
  movq $0x0, 0x8(%rcx)                 #  91    0xe09c2  8      OPC=movq_m64_imm32  
  movl $0xffffffff, 0x40(%rax,%rdx,1)  #  92    0xe09ca  8      OPC=movl_m32_imm32  
  movq %rsi, (%r13)                    #  93    0xe09d2  4      OPC=movq_m64_r64    
  movq %rsi, (%rbx)                    #  94    0xe09d6  3      OPC=movq_m64_r64    
  je .L_e0a2e                          #  95    0xe09d9  2      OPC=je_label        
  movq %rsi, %r13                      #  96    0xe09db  3      OPC=movq_r64_r64    
  jmpq .L_e08f8                        #  97    0xe09de  5      OPC=jmpq_label_1    
  nop                                  #  98    0xe09e3  1      OPC=nop             
  nop                                  #  99    0xe09e4  1      OPC=nop             
  nop                                  #  100   0xe09e5  1      OPC=nop             
  nop                                  #  101   0xe09e6  1      OPC=nop             
  nop                                  #  102   0xe09e7  1      OPC=nop             
  nop                                  #  103   0xe09e8  1      OPC=nop             
  nop                                  #  104   0xe09e9  1      OPC=nop             
  nop                                  #  105   0xe09ea  1      OPC=nop             
  nop                                  #  106   0xe09eb  1      OPC=nop             
.L_e09e0:                              #        0xe09ec  0      OPC=<label>         
  movl $0x3c8, %edi                    #  107   0xe09ec  5      OPC=movl_r32_imm32  
  callq .memalign_plt                  #  108   0xe09f1  5      OPC=callq_label     
  testq %rax, %rax                     #  109   0xe09f6  3      OPC=testq_r64_r64   
  je .L_e0a2e                          #  110   0xe09f9  2      OPC=je_label        
  movq 0x70(%r15), %rdx                #  111   0xe09fb  4      OPC=movq_r64_m64    
  movl $0x1, %ecx                      #  112   0xe09ff  5      OPC=movl_r32_imm32  
  movq %rdx, (%rax)                    #  113   0xe0a04  3      OPC=movq_m64_r64    
  movq %rax, 0x70(%r15)                #  114   0xe0a07  4      OPC=movq_m64_r64    
  xorl %edx, %edx                      #  115   0xe0a0b  2      OPC=xorl_r32_r32    
  jmpq .L_e0973                        #  116   0xe0a0d  5      OPC=jmpq_label_1    
  nop                                  #  117   0xe0a12  1      OPC=nop             
  nop                                  #  118   0xe0a13  1      OPC=nop             
  nop                                  #  119   0xe0a14  1      OPC=nop             
  nop                                  #  120   0xe0a15  1      OPC=nop             
  nop                                  #  121   0xe0a16  1      OPC=nop             
  nop                                  #  122   0xe0a17  1      OPC=nop             
  nop                                  #  123   0xe0a18  1      OPC=nop             
  nop                                  #  124   0xe0a19  1      OPC=nop             
  nop                                  #  125   0xe0a1a  1      OPC=nop             
  nop                                  #  126   0xe0a1b  1      OPC=nop             
.L_e0a10:                              #        0xe0a1c  0      OPC=<label>         
  testq %r13, %r13                     #  127   0xe0a1c  3      OPC=testq_r64_r64   
  je .L_e0a1d                          #  128   0xe0a1f  2      OPC=je_label        
  movq %r13, %rdi                      #  129   0xe0a21  3      OPC=movq_r64_r64    
  callq .postorder_constprop_36        #  130   0xe0a24  5      OPC=callq_label     
.L_e0a1d:                              #        0xe0a29  0      OPC=<label>         
  addq $0x18, %rsp                     #  131   0xe0a29  4      OPC=addq_r64_imm8   
  xorl %eax, %eax                      #  132   0xe0a2d  2      OPC=xorl_r32_r32    
  popq %rbx                            #  133   0xe0a2f  1      OPC=popq_r64_1      
  popq %rbp                            #  134   0xe0a30  1      OPC=popq_r64_1      
  popq %r12                            #  135   0xe0a31  2      OPC=popq_r64_1      
  popq %r13                            #  136   0xe0a33  2      OPC=popq_r64_1      
  popq %r14                            #  137   0xe0a35  2      OPC=popq_r64_1      
  popq %r15                            #  138   0xe0a37  2      OPC=popq_r64_1      
  retq                                 #  139   0xe0a39  1      OPC=retq            
.L_e0a2e:                              #        0xe0a3a  0      OPC=<label>         
  movq %rbx, %rdi                      #  140   0xe0a3a  3      OPC=movq_r64_r64    
  callq .postorder_constprop_36        #  141   0xe0a3d  5      OPC=callq_label     
  movq %r13, %rdi                      #  142   0xe0a42  3      OPC=movq_r64_r64    
  callq .postorder_constprop_36        #  143   0xe0a45  5      OPC=callq_label     
  movl $0xc, (%rbp)                    #  144   0xe0a4a  7      OPC=movl_m32_imm32  
  addq $0x18, %rsp                     #  145   0xe0a51  4      OPC=addq_r64_imm8   
  xorl %eax, %eax                      #  146   0xe0a55  2      OPC=xorl_r32_r32    
  popq %rbx                            #  147   0xe0a57  1      OPC=popq_r64_1      
  popq %rbp                            #  148   0xe0a58  1      OPC=popq_r64_1      
  popq %r12                            #  149   0xe0a59  2      OPC=popq_r64_1      
  popq %r13                            #  150   0xe0a5b  2      OPC=popq_r64_1      
  popq %r14                            #  151   0xe0a5d  2      OPC=popq_r64_1      
  popq %r15                            #  152   0xe0a5f  2      OPC=popq_r64_1      
  retq                                 #  153   0xe0a61  1      OPC=retq            
  nop                                  #  154   0xe0a62  1      OPC=nop             
  nop                                  #  155   0xe0a63  1      OPC=nop             
  nop                                  #  156   0xe0a64  1      OPC=nop             
  nop                                  #  157   0xe0a65  1      OPC=nop             
  nop                                  #  158   0xe0a66  1      OPC=nop             
  nop                                  #  159   0xe0a67  1      OPC=nop             
  nop                                  #  160   0xe0a68  1      OPC=nop             
  nop                                  #  161   0xe0a69  1      OPC=nop             
  nop                                  #  162   0xe0a6a  1      OPC=nop             
  nop                                  #  163   0xe0a6b  1      OPC=nop             
                                                                                    
.size parse_branch_constprop_34, .-parse_branch_constprop_34

