  .text
  .globl ruserok2_sa
  .type ruserok2_sa, @function

#! file-offset 0x11bd00
#! rip-offset  0x11bd00
#! capacity    480 bytes

# Text                            #  Line  RIP       Bytes  Opcode                
.ruserok2_sa:                     #        0x11bd00  0      OPC=<label>           
  pushq %rbp                      #  1     0x11bd00  1      OPC=pushq_r64_1       
  movq %rsp, %rbp                 #  2     0x11bd01  3      OPC=movq_r64_r64      
  pushq %r15                      #  3     0x11bd04  2      OPC=pushq_r64_1       
  pushq %r14                      #  4     0x11bd06  2      OPC=pushq_r64_1       
  pushq %r13                      #  5     0x11bd08  2      OPC=pushq_r64_1       
  pushq %r12                      #  6     0x11bd0a  2      OPC=pushq_r64_1       
  movl %edx, %r13d                #  7     0x11bd0c  3      OPC=movl_r32_r32      
  pushq %rbx                      #  8     0x11bd0f  1      OPC=pushq_r64_1       
  movq %rcx, %r14                 #  9     0x11bd10  3      OPC=movq_r64_r64      
  movq %r8, %rbx                  #  10    0x11bd13  3      OPC=movq_r64_r64      
  movq %r9, %r15                  #  11    0x11bd16  3      OPC=movq_r64_r64      
  subq $0x68, %rsp                #  12    0x11bd19  4      OPC=subq_r64_imm8     
  testl %edx, %edx                #  13    0x11bd1d  2      OPC=testl_r32_r32     
  movq %rdi, -0x78(%rbp)          #  14    0x11bd1f  4      OPC=movq_m64_r64      
  movq %rsi, -0x80(%rbp)          #  15    0x11bd23  4      OPC=movq_m64_r64      
  je .L_11be88                    #  16    0x11bd27  6      OPC=je_label_1        
.L_11bd2d:                        #        0x11bd2d  0      OPC=<label>           
  movl $0xffffffff, %r12d         #  17    0x11bd2d  7      OPC=movl_r32_imm32_1  
.L_11bd33:                        #        0x11bd34  0      OPC=<label>           
  movq 0x2a5286(%rip), %rax       #  18    0x11bd34  7      OPC=movq_r64_m64      
  movl $0xffffffff, %r9d          #  19    0x11bd3b  7      OPC=movl_r32_imm32_1  
  orl (%rax), %r13d               #  20    0x11bd42  3      OPC=orl_r32_m32       
  je .L_11be72                    #  21    0x11bd45  6      OPC=je_label_1        
  movl $0x46, %edi                #  22    0x11bd4b  5      OPC=movl_r32_imm32    
  movl %r9d, -0x88(%rbp)          #  23    0x11bd50  7      OPC=movl_m32_r32      
  callq .__sysconf                #  24    0x11bd57  5      OPC=callq_label       
  leaq 0x1e(%rax), %rdx           #  25    0x11bd5c  4      OPC=leaq_r64_m16      
  leaq -0x60(%rbp), %rsi          #  26    0x11bd60  4      OPC=leaq_r64_m16      
  leaq -0x68(%rbp), %r8           #  27    0x11bd64  4      OPC=leaq_r64_m16      
  movq %rax, %rcx                 #  28    0x11bd68  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                 #  29    0x11bd6b  3      OPC=movq_r64_r64      
  andq $0xf0, %rdx                #  30    0x11bd6e  4      OPC=andq_r64_imm8     
  subq %rdx, %rsp                 #  31    0x11bd72  3      OPC=subq_r64_r64      
  leaq 0xf(%rsp), %rdx            #  32    0x11bd75  5      OPC=leaq_r64_m16      
  andq $0xf0, %rdx                #  33    0x11bd7a  4      OPC=andq_r64_imm8     
  callq .getpwnam_r__GLIBC_2_2_5  #  34    0x11bd7e  5      OPC=callq_label       
  testl %eax, %eax                #  35    0x11bd83  2      OPC=testl_r32_r32     
  movl -0x88(%rbp), %r9d          #  36    0x11bd85  7      OPC=movl_r32_m32      
  jne .L_11be72                   #  37    0x11bd8c  6      OPC=jne_label_1       
  movq -0x68(%rbp), %rax          #  38    0x11bd92  4      OPC=movq_r64_m64      
  testq %rax, %rax                #  39    0x11bd96  3      OPC=testq_r64_r64     
  je .L_11be72                    #  40    0x11bd99  6      OPC=je_label_1        
  movq 0x20(%rax), %rsi           #  41    0x11bd9f  4      OPC=movq_r64_m64      
  movq %rsi, %rdi                 #  42    0x11bda3  3      OPC=movq_r64_r64      
  movq %rsi, -0x88(%rbp)          #  43    0x11bda6  7      OPC=movq_m64_r64      
  callq .strlen                   #  44    0x11bdad  5      OPC=callq_label       
  movq %rax, %rcx                 #  45    0x11bdb2  3      OPC=movq_r64_r64      
  leaq 0x27(%rax), %rax           #  46    0x11bdb5  4      OPC=leaq_r64_m16      
  movl $0x10, %edi                #  47    0x11bdb9  5      OPC=movl_r32_imm32    
  xorl %edx, %edx                 #  48    0x11bdbe  2      OPC=xorl_r32_r32      
  movq -0x88(%rbp), %rsi          #  49    0x11bdc0  7      OPC=movq_r64_m64      
  movq %rcx, -0x90(%rbp)          #  50    0x11bdc7  7      OPC=movq_m64_r64      
  divq %rdi                       #  51    0x11bdce  3      OPC=divq_r64          
  movq %rcx, %rdx                 #  52    0x11bdd1  3      OPC=movq_r64_r64      
  shlq $0x4, %rax                 #  53    0x11bdd4  4      OPC=shlq_r64_imm8     
  subq %rax, %rsp                 #  54    0x11bdd8  3      OPC=subq_r64_r64      
  leaq 0xf(%rsp), %r8             #  55    0x11bddb  5      OPC=leaq_r64_m16      
  andq $0xf0, %r8                 #  56    0x11bde0  4      OPC=andq_r64_imm8     
  movq %r8, %rdi                  #  57    0x11bde4  3      OPC=movq_r64_r64      
  movq %r8, -0x88(%rbp)           #  58    0x11bde7  7      OPC=movq_m64_r64      
  callq .__GI_memcpy              #  59    0x11bdee  5      OPC=callq_label       
  movq -0x90(%rbp), %rcx          #  60    0x11bdf3  7      OPC=movq_r64_m64      
  addq %rax, %rcx                 #  61    0x11bdfa  3      OPC=addq_r64_r64      
  movq $0x7374736f68722e2f, %rax  #  62    0x11bdfd  10     OPC=movq_r64_imm64    
  movq %rax, (%rcx)               #  63    0x11be07  3      OPC=movq_m64_r64      
  movb $0x0, 0x8(%rcx)            #  64    0x11be0a  4      OPC=movb_m8_imm8      
  callq .geteuid                  #  65    0x11be0e  5      OPC=callq_label       
  movl %eax, %r13d                #  66    0x11be13  3      OPC=movl_r32_r32      
  movq -0x68(%rbp), %rax          #  67    0x11be16  4      OPC=movq_r64_m64      
  movl 0x10(%rax), %edi           #  68    0x11be1a  3      OPC=movl_r32_m32      
  callq .seteuid                  #  69    0x11be1d  5      OPC=callq_label       
  movq -0x68(%rbp), %rax          #  70    0x11be22  4      OPC=movq_r64_m64      
  movq -0x88(%rbp), %r8           #  71    0x11be26  7      OPC=movq_r64_m64      
  movl 0x10(%rax), %esi           #  72    0x11be2d  3      OPC=movl_r32_m32      
  movq %r8, %rdi                  #  73    0x11be30  3      OPC=movq_r64_r64      
  callq .iruserfopen              #  74    0x11be33  5      OPC=callq_label       
  testq %rax, %rax                #  75    0x11be38  3      OPC=testq_r64_r64     
  je .L_11be67                    #  76    0x11be3b  2      OPC=je_label          
  movq -0x78(%rbp), %rsi          #  77    0x11be3d  4      OPC=movq_r64_m64      
  movq -0x80(%rbp), %rdx          #  78    0x11be41  4      OPC=movq_r64_m64      
  movq %rax, %rdi                 #  79    0x11be45  3      OPC=movq_r64_r64      
  movq %r15, %r9                  #  80    0x11be48  3      OPC=movq_r64_r64      
  movq %r14, %r8                  #  81    0x11be4b  3      OPC=movq_r64_r64      
  movq %rbx, %rcx                 #  82    0x11be4e  3      OPC=movq_r64_r64      
  movq %rax, -0x78(%rbp)          #  83    0x11be51  4      OPC=movq_m64_r64      
  callq .__validuser2_sa          #  84    0x11be55  5      OPC=callq_label       
  movq -0x78(%rbp), %r10          #  85    0x11be5a  4      OPC=movq_r64_m64      
  movl %eax, %r12d                #  86    0x11be5e  3      OPC=movl_r32_r32      
  movq %r10, %rdi                 #  87    0x11be61  3      OPC=movq_r64_r64      
  callq ._IO_fclose__GLIBC_2_2_5  #  88    0x11be64  5      OPC=callq_label       
.L_11be67:                        #        0x11be69  0      OPC=<label>           
  movl %r13d, %edi                #  89    0x11be69  3      OPC=movl_r32_r32      
  callq .seteuid                  #  90    0x11be6c  5      OPC=callq_label       
  movl %r12d, %r9d                #  91    0x11be71  3      OPC=movl_r32_r32      
.L_11be72:                        #        0x11be74  0      OPC=<label>           
  leaq -0x28(%rbp), %rsp          #  92    0x11be74  4      OPC=leaq_r64_m16      
  movl %r9d, %eax                 #  93    0x11be78  3      OPC=movl_r32_r32      
  popq %rbx                       #  94    0x11be7b  1      OPC=popq_r64_1        
  popq %r12                       #  95    0x11be7c  2      OPC=popq_r64_1        
  popq %r13                       #  96    0x11be7e  2      OPC=popq_r64_1        
  popq %r14                       #  97    0x11be80  2      OPC=popq_r64_1        
  popq %r15                       #  98    0x11be82  2      OPC=popq_r64_1        
  popq %rbp                       #  99    0x11be84  1      OPC=popq_r64_1        
  retq                            #  100   0x11be85  1      OPC=retq              
  nop                             #  101   0x11be86  1      OPC=nop               
  nop                             #  102   0x11be87  1      OPC=nop               
  nop                             #  103   0x11be88  1      OPC=nop               
  nop                             #  104   0x11be89  1      OPC=nop               
.L_11be88:                        #        0x11be8a  0      OPC=<label>           
  leaq 0x7148a(%rip), %rdi        #  105   0x11be8a  7      OPC=leaq_r64_m16      
  xorl %esi, %esi                 #  106   0x11be91  2      OPC=xorl_r32_r32      
  callq .iruserfopen              #  107   0x11be93  5      OPC=callq_label       
  testq %rax, %rax                #  108   0x11be98  3      OPC=testq_r64_r64     
  je .L_11bd2d                    #  109   0x11be9b  6      OPC=je_label_1        
  movq -0x80(%rbp), %rdx          #  110   0x11bea1  4      OPC=movq_r64_m64      
  movq -0x78(%rbp), %rsi          #  111   0x11bea5  4      OPC=movq_r64_m64      
  movq %r15, %r9                  #  112   0x11bea9  3      OPC=movq_r64_r64      
  movq %r14, %r8                  #  113   0x11beac  3      OPC=movq_r64_r64      
  movq %rbx, %rcx                 #  114   0x11beaf  3      OPC=movq_r64_r64      
  movq %rax, %rdi                 #  115   0x11beb2  3      OPC=movq_r64_r64      
  movq %rax, -0x88(%rbp)          #  116   0x11beb5  7      OPC=movq_m64_r64      
  callq .__validuser2_sa          #  117   0x11bebc  5      OPC=callq_label       
  movq -0x88(%rbp), %r11          #  118   0x11bec1  7      OPC=movq_r64_m64      
  movl %eax, %r12d                #  119   0x11bec8  3      OPC=movl_r32_r32      
  movq %r11, %rdi                 #  120   0x11becb  3      OPC=movq_r64_r64      
  callq ._IO_fclose__GLIBC_2_2_5  #  121   0x11bece  5      OPC=callq_label       
  xorl %r9d, %r9d                 #  122   0x11bed3  3      OPC=xorl_r32_r32      
  testl %r12d, %r12d              #  123   0x11bed6  3      OPC=testl_r32_r32     
  jne .L_11bd33                   #  124   0x11bed9  6      OPC=jne_label_1       
  jmpq .L_11be72                  #  125   0x11bedf  2      OPC=jmpq_label        
  nop                             #  126   0x11bee1  1      OPC=nop               
                                                                                  
.size ruserok2_sa, .-ruserok2_sa

