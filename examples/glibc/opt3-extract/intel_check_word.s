  .text
  .globl intel_check_word
  .type intel_check_word, @function

#! file-offset 0xa7670
#! rip-offset  0xa7670
#! capacity    736 bytes

# Text                       #  Line  RIP      Bytes  Opcode              
.intel_check_word:           #        0xa7670  0      OPC=<label>         
  testl %esi, %esi           #  1     0xa7670  2      OPC=testl_r32_r32   
  js .L_a78aa                #  2     0xa7672  6      OPC=js_label_1      
  leal -0xb9(%rdi), %r8d     #  3     0xa7678  7      OPC=leal_r32_m16    
  pushq %r13                 #  4     0xa767f  2      OPC=pushq_r64_1     
  pushq %r12                 #  5     0xa7681  2      OPC=pushq_r64_1     
  pushq %rbp                 #  6     0xa7683  1      OPC=pushq_r64_1     
  pushq %rbx                 #  7     0xa7684  1      OPC=pushq_r64_1     
  movq %rdx, %rbx            #  8     0xa7685  3      OPC=movq_r64_r64    
  movl %r8d, %eax            #  9     0xa7688  3      OPC=movl_r32_r32    
  movl $0x55555556, %edx     #  10    0xa768b  5      OPC=movl_r32_imm32  
  sarl $0x1f, %r8d           #  11    0xa7690  4      OPC=sarl_r32_imm8   
  imull %edx                 #  12    0xa7694  2      OPC=imull_r32       
  subq $0x8, %rsp            #  13    0xa7696  4      OPC=subq_r64_imm8   
  subl %r8d, %edx            #  14    0xa769a  3      OPC=subl_r32_r32    
  testl %esi, %esi           #  15    0xa769d  2      OPC=testl_r32_r32   
  leal (%rdx,%rdx,2), %ebp   #  16    0xa769f  3      OPC=leal_r32_m16    
  je .L_a7753                #  17    0xa76a2  6      OPC=je_label_1      
  leaq 0xde5d1(%rip), %r11   #  18    0xa76a8  7      OPC=leaq_r64_m16    
  nop                        #  19    0xa76af  1      OPC=nop             
.L_a76b0:                    #        0xa76b0  0      OPC=<label>         
  movzbl %sil, %r10d         #  20    0xa76b0  4      OPC=movzbl_r32_r8   
  cmpl $0x40, %r10d          #  21    0xa76b4  4      OPC=cmpl_r32_imm8   
  je .L_a7770                #  22    0xa76b8  6      OPC=je_label_1      
  cmpl $0xff, %r10d          #  23    0xa76be  7      OPC=cmpl_r32_imm32  
  je .L_a77bc                #  24    0xa76c5  6      OPC=je_label_1      
  cmpl $0x49, %r10d          #  25    0xa76cb  4      OPC=cmpl_r32_imm8   
  jne .L_a76fd               #  26    0xa76cf  2      OPC=jne_label       
  cmpl $0x9, %ebp            #  27    0xa76d1  3      OPC=cmpl_r32_imm8   
  jne .L_a76fd               #  28    0xa76d4  2      OPC=jne_label       
  movq 0x31979b(%rip), %rax  #  29    0xa76d6  7      OPC=movq_r64_m64    
  cmpl $0x6, 0xac(%rax)      #  30    0xa76dd  7      OPC=cmpl_m32_imm8   
  jne .L_a7780               #  31    0xa76e4  6      OPC=jne_label_1     
  cmpl $0xf, 0xa8(%rax)      #  32    0xa76ea  7      OPC=cmpl_m32_imm8   
  jne .L_a7780               #  33    0xa76f1  6      OPC=jne_label_1     
  subl $0x3, %edi            #  34    0xa76f7  3      OPC=subl_r32_imm8   
  movb $0x6, %bpl            #  35    0xa76fa  3      OPC=movb_r8_imm8    
.L_a76fd:                    #        0xa76fd  0      OPC=<label>         
  xorl %r8d, %r8d            #  36    0xa76fd  3      OPC=xorl_r32_r32    
  movl $0x44, %edx           #  37    0xa7700  5      OPC=movl_r32_imm32  
  nop                        #  38    0xa7705  1      OPC=nop             
  nop                        #  39    0xa7706  1      OPC=nop             
  nop                        #  40    0xa7707  1      OPC=nop             
.L_a7708:                    #        0xa7708  0      OPC=<label>         
  leaq (%r8,%rdx,1), %rax    #  41    0xa7708  4      OPC=leaq_r64_m16    
  shrq $0x1, %rax            #  42    0xa770c  3      OPC=shrq_r64_one    
  leaq (%r11,%rax,8), %r9    #  43    0xa770f  4      OPC=leaq_r64_m16    
  cmpb (%r9), %r10b          #  44    0xa7713  3      OPC=cmpb_r8_m8      
  je .L_a7739                #  45    0xa7716  2      OPC=je_label        
  nop                        #  46    0xa7718  1      OPC=nop             
  nop                        #  47    0xa7719  1      OPC=nop             
  nop                        #  48    0xa771a  1      OPC=nop             
  nop                        #  49    0xa771b  1      OPC=nop             
  nop                        #  50    0xa771c  1      OPC=nop             
  nop                        #  51    0xa771d  1      OPC=nop             
  nop                        #  52    0xa771e  1      OPC=nop             
  nop                        #  53    0xa771f  1      OPC=nop             
.L_a7720:                    #        0xa7720  0      OPC=<label>         
  jae .L_a7760               #  54    0xa7720  2      OPC=jae_label       
  cmpq %r8, %rax             #  55    0xa7722  3      OPC=cmpq_r64_r64    
  movq %rax, %rdx            #  56    0xa7725  3      OPC=movq_r64_r64    
  jbe .L_a7748               #  57    0xa7728  2      OPC=jbe_label       
  addq %r8, %rax             #  58    0xa772a  3      OPC=addq_r64_r64    
  shrq $0x1, %rax            #  59    0xa772d  3      OPC=shrq_r64_one    
  leaq (%r11,%rax,8), %r9    #  60    0xa7730  4      OPC=leaq_r64_m16    
  cmpb (%r9), %r10b          #  61    0xa7734  3      OPC=cmpb_r8_m8      
  jne .L_a7720               #  62    0xa7737  2      OPC=jne_label       
.L_a7739:                    #        0xa7739  0      OPC=<label>         
  movzbl 0x3(%r9), %edx      #  63    0xa7739  5      OPC=movzbl_r32_m8   
  cmpl %ebp, %edx            #  64    0xa773e  2      OPC=cmpl_r32_r32    
  movl %edx, %eax            #  65    0xa7740  2      OPC=movl_r32_r32    
  je .L_a7795                #  66    0xa7742  2      OPC=je_label        
  cmpb $0x6, %al             #  67    0xa7744  2      OPC=cmpb_al_imm8    
  je .L_a7790                #  68    0xa7746  2      OPC=je_label        
.L_a7748:                    #        0xa7748  0      OPC=<label>         
  shrl $0x8, %esi            #  69    0xa7748  3      OPC=shrl_r32_imm8   
  testl %esi, %esi           #  70    0xa774b  2      OPC=testl_r32_r32   
  jne .L_a76b0               #  71    0xa774d  6      OPC=jne_label_1     
.L_a7753:                    #        0xa7753  0      OPC=<label>         
  xorl %eax, %eax            #  72    0xa7753  2      OPC=xorl_r32_r32    
.L_a7755:                    #        0xa7755  0      OPC=<label>         
  addq $0x8, %rsp            #  73    0xa7755  4      OPC=addq_r64_imm8   
  popq %rbx                  #  74    0xa7759  1      OPC=popq_r64_1      
  popq %rbp                  #  75    0xa775a  1      OPC=popq_r64_1      
  popq %r12                  #  76    0xa775b  2      OPC=popq_r64_1      
  popq %r13                  #  77    0xa775d  2      OPC=popq_r64_1      
  retq                       #  78    0xa775f  1      OPC=retq            
.L_a7760:                    #        0xa7760  0      OPC=<label>         
  leaq 0x1(%rax), %r8        #  79    0xa7760  4      OPC=leaq_r64_m16    
  cmpq %rdx, %r8             #  80    0xa7764  3      OPC=cmpq_r64_r64    
  jb .L_a7708                #  81    0xa7767  2      OPC=jb_label        
  jmpq .L_a7748              #  82    0xa7769  2      OPC=jmpq_label      
  nop                        #  83    0xa776b  1      OPC=nop             
  nop                        #  84    0xa776c  1      OPC=nop             
  nop                        #  85    0xa776d  1      OPC=nop             
  nop                        #  86    0xa776e  1      OPC=nop             
  nop                        #  87    0xa776f  1      OPC=nop             
.L_a7770:                    #        0xa7770  0      OPC=<label>         
  cmpl $0x9, %ebp            #  88    0xa7770  3      OPC=cmpl_r32_imm8   
  movb $0x1, (%rcx)          #  89    0xa7773  3      OPC=movb_m8_imm8    
  jne .L_a7748               #  90    0xa7776  2      OPC=jne_label       
  jmpq .L_a7753              #  91    0xa7778  2      OPC=jmpq_label      
  nop                        #  92    0xa777a  1      OPC=nop             
  nop                        #  93    0xa777b  1      OPC=nop             
  nop                        #  94    0xa777c  1      OPC=nop             
  nop                        #  95    0xa777d  1      OPC=nop             
  nop                        #  96    0xa777e  1      OPC=nop             
  nop                        #  97    0xa777f  1      OPC=nop             
.L_a7780:                    #        0xa7780  0      OPC=<label>         
  movl $0x9, %ebp            #  98    0xa7780  5      OPC=movl_r32_imm32  
  jmpq .L_a76fd              #  99    0xa7785  5      OPC=jmpq_label_1    
  nop                        #  100   0xa778a  1      OPC=nop             
  nop                        #  101   0xa778b  1      OPC=nop             
  nop                        #  102   0xa778c  1      OPC=nop             
  nop                        #  103   0xa778d  1      OPC=nop             
  nop                        #  104   0xa778e  1      OPC=nop             
  nop                        #  105   0xa778f  1      OPC=nop             
.L_a7790:                    #        0xa7790  0      OPC=<label>         
  movb $0x1, (%rbx)          #  106   0xa7790  3      OPC=movb_m8_imm8    
  jmpq .L_a7748              #  107   0xa7793  2      OPC=jmpq_label      
.L_a7795:                    #        0xa7795  0      OPC=<label>         
  subl $0xb9, %edi           #  108   0xa7795  6      OPC=subl_r32_imm32  
  subl %ebp, %edi            #  109   0xa779b  2      OPC=subl_r32_r32    
  je .L_a78ad                #  110   0xa779d  6      OPC=je_label_1      
  cmpl $0x1, %edi            #  111   0xa77a3  3      OPC=cmpl_r32_imm8   
  je .L_a78ed                #  112   0xa77a6  6      OPC=je_label_1      
  cmpl $0x2, %edi            #  113   0xa77ac  3      OPC=cmpl_r32_imm8   
  jne .L_a7923               #  114   0xa77af  6      OPC=jne_label_1     
  movzbl 0x2(%r9), %eax      #  115   0xa77b5  5      OPC=movzbl_r32_m8   
  jmpq .L_a7755              #  116   0xa77ba  2      OPC=jmpq_label      
.L_a77bc:                    #        0xa77bc  0      OPC=<label>         
  xorl %ecx, %ecx            #  117   0xa77bc  2      OPC=xorl_r32_r32    
  movl $0x4, %eax            #  118   0xa77be  5      OPC=movl_r32_imm32  
  cpuid                      #  119   0xa77c3  2      OPC=cpuid           
  movl %eax, %esi            #  120   0xa77c5  2      OPC=movl_r32_r32    
  andl $0x1f, %esi           #  121   0xa77c7  3      OPC=andl_r32_imm8   
  je .L_a7753                #  122   0xa77ca  2      OPC=je_label        
  shrl $0x5, %eax            #  123   0xa77cc  3      OPC=shrl_r32_imm8   
  andl $0x7, %eax            #  124   0xa77cf  3      OPC=andl_r32_imm8   
  cmpl $0x1, %eax            #  125   0xa77d2  3      OPC=cmpl_r32_imm8   
  sete %dl                   #  126   0xa77d5  3      OPC=sete_r8         
  cmpl $0x3, %ebp            #  127   0xa77d8  3      OPC=cmpl_r32_imm8   
  sete %r10b                 #  128   0xa77db  4      OPC=sete_r8         
  cmpl $0x1, %esi            #  129   0xa77df  3      OPC=cmpl_r32_imm8   
  sete %r8b                  #  130   0xa77e2  4      OPC=sete_r8         
  testb %r10b, %r8b          #  131   0xa77e6  3      OPC=testb_r8_r8     
  je .L_a77f3                #  132   0xa77e9  2      OPC=je_label        
  testb %dl, %dl             #  133   0xa77eb  2      OPC=testb_r8_r8     
  jne .L_a7881               #  134   0xa77ed  6      OPC=jne_label_1     
.L_a77f3:                    #        0xa77f3  0      OPC=<label>         
  testl %ebp, %ebp           #  135   0xa77f3  2      OPC=testl_r32_r32   
  sete %r9b                  #  136   0xa77f5  4      OPC=sete_r8         
  cmpl $0x2, %esi            #  137   0xa77f9  3      OPC=cmpl_r32_imm8   
  sete %sil                  #  138   0xa77fc  4      OPC=sete_r8         
  testb %r9b, %sil           #  139   0xa7800  3      OPC=testb_r8_r8     
  je .L_a7809                #  140   0xa7803  2      OPC=je_label        
  testb %dl, %dl             #  141   0xa7805  2      OPC=testb_r8_r8     
  jne .L_a7881               #  142   0xa7807  2      OPC=jne_label       
.L_a7809:                    #        0xa7809  0      OPC=<label>         
  cmpl $0x6, %ebp            #  143   0xa7809  3      OPC=cmpl_r32_imm8   
  movl $0x4, %r8d            #  144   0xa780c  6      OPC=movl_r32_imm32  
  sete %r11b                 #  145   0xa7812  4      OPC=sete_r8         
  xorl %esi, %esi            #  146   0xa7816  2      OPC=xorl_r32_r32    
  nop                        #  147   0xa7818  1      OPC=nop             
  nop                        #  148   0xa7819  1      OPC=nop             
  nop                        #  149   0xa781a  1      OPC=nop             
  nop                        #  150   0xa781b  1      OPC=nop             
  nop                        #  151   0xa781c  1      OPC=nop             
  nop                        #  152   0xa781d  1      OPC=nop             
  nop                        #  153   0xa781e  1      OPC=nop             
  nop                        #  154   0xa781f  1      OPC=nop             
.L_a7820:                    #        0xa7820  0      OPC=<label>         
  cmpl $0x2, %eax            #  155   0xa7820  3      OPC=cmpl_r32_imm8   
  jne .L_a782a               #  156   0xa7823  2      OPC=jne_label       
  testb %r11b, %r11b         #  157   0xa7825  3      OPC=testb_r8_r8     
  jne .L_a7881               #  158   0xa7828  2      OPC=jne_label       
.L_a782a:                    #        0xa782a  0      OPC=<label>         
  cmpl $0x3, %eax            #  159   0xa782a  3      OPC=cmpl_r32_imm8   
  jne .L_a7834               #  160   0xa782d  2      OPC=jne_label       
  cmpl $0x9, %ebp            #  161   0xa782f  3      OPC=cmpl_r32_imm8   
  je .L_a7881                #  162   0xa7832  2      OPC=je_label        
.L_a7834:                    #        0xa7834  0      OPC=<label>         
  cmpl $0x4, %eax            #  163   0xa7834  3      OPC=cmpl_r32_imm8   
  jne .L_a783e               #  164   0xa7837  2      OPC=jne_label       
  cmpl $0xc, %ebp            #  165   0xa7839  3      OPC=cmpl_r32_imm8   
  je .L_a7881                #  166   0xa783c  2      OPC=je_label        
.L_a783e:                    #        0xa783e  0      OPC=<label>         
  addl $0x1, %esi            #  167   0xa783e  3      OPC=addl_r32_imm8   
  movl %r8d, %eax            #  168   0xa7841  3      OPC=movl_r32_r32    
  movl %esi, %ecx            #  169   0xa7844  2      OPC=movl_r32_r32    
  cpuid                      #  170   0xa7846  2      OPC=cpuid           
  movl %eax, %edx            #  171   0xa7848  2      OPC=movl_r32_r32    
  andl $0x1f, %edx           #  172   0xa784a  3      OPC=andl_r32_imm8   
  je .L_a7753                #  173   0xa784d  6      OPC=je_label_1      
  shrl $0x5, %eax            #  174   0xa7853  3      OPC=shrl_r32_imm8   
  andl $0x7, %eax            #  175   0xa7856  3      OPC=andl_r32_imm8   
  cmpl $0x1, %eax            #  176   0xa7859  3      OPC=cmpl_r32_imm8   
  sete %r12b                 #  177   0xa785c  4      OPC=sete_r8         
  cmpl $0x1, %edx            #  178   0xa7860  3      OPC=cmpl_r32_imm8   
  sete %r13b                 #  179   0xa7863  4      OPC=sete_r8         
  testb %r10b, %r13b         #  180   0xa7867  3      OPC=testb_r8_r8     
  je .L_a7871                #  181   0xa786a  2      OPC=je_label        
  testb %r12b, %r12b         #  182   0xa786c  3      OPC=testb_r8_r8     
  jne .L_a7881               #  183   0xa786f  2      OPC=jne_label       
.L_a7871:                    #        0xa7871  0      OPC=<label>         
  cmpl $0x2, %edx            #  184   0xa7871  3      OPC=cmpl_r32_imm8   
  sete %dl                   #  185   0xa7874  3      OPC=sete_r8         
  testb %r9b, %dl            #  186   0xa7877  3      OPC=testb_r8_r8     
  je .L_a7820                #  187   0xa787a  2      OPC=je_label        
  testb %r12b, %r12b         #  188   0xa787c  3      OPC=testb_r8_r8     
  je .L_a7820                #  189   0xa787f  2      OPC=je_label        
.L_a7881:                    #        0xa7881  0      OPC=<label>         
  leal -0xb9(%rdi), %eax     #  190   0xa7881  6      OPC=leal_r32_m16    
  subl %ebp, %eax            #  191   0xa7887  2      OPC=subl_r32_r32    
  je .L_a78bc                #  192   0xa7889  2      OPC=je_label        
  cmpl $0x1, %eax            #  193   0xa788b  3      OPC=cmpl_r32_imm8   
  je .L_a78f7                #  194   0xa788e  2      OPC=je_label        
  cmpl $0x2, %eax            #  195   0xa7890  3      OPC=cmpl_r32_imm8   
  jne .L_a7904               #  196   0xa7893  2      OPC=jne_label       
  addq $0x8, %rsp            #  197   0xa7895  4      OPC=addq_r64_imm8   
  andl $0xfff, %ebx          #  198   0xa7899  6      OPC=andl_r32_imm32  
  leaq 0x1(%rbx), %rax       #  199   0xa789f  4      OPC=leaq_r64_m16    
  popq %rbx                  #  200   0xa78a3  1      OPC=popq_r64_1      
  popq %rbp                  #  201   0xa78a4  1      OPC=popq_r64_1      
  popq %r12                  #  202   0xa78a5  2      OPC=popq_r64_1      
  popq %r13                  #  203   0xa78a7  2      OPC=popq_r64_1      
  retq                       #  204   0xa78a9  1      OPC=retq            
.L_a78aa:                    #        0xa78aa  0      OPC=<label>         
  xorl %eax, %eax            #  205   0xa78aa  2      OPC=xorl_r32_r32    
  retq                       #  206   0xa78ac  1      OPC=retq            
.L_a78ad:                    #        0xa78ad  0      OPC=<label>         
  movl 0x4(%r9), %eax        #  207   0xa78ad  4      OPC=movl_r32_m32    
  addq $0x8, %rsp            #  208   0xa78b1  4      OPC=addq_r64_imm8   
  popq %rbx                  #  209   0xa78b5  1      OPC=popq_r64_1      
  popq %rbp                  #  210   0xa78b6  1      OPC=popq_r64_1      
  popq %r12                  #  211   0xa78b7  2      OPC=popq_r64_1      
  popq %r13                  #  212   0xa78b9  2      OPC=popq_r64_1      
  retq                       #  213   0xa78bb  1      OPC=retq            
.L_a78bc:                    #        0xa78bc  0      OPC=<label>         
  movl %ebx, %eax            #  214   0xa78bc  2      OPC=movl_r32_r32    
  addl $0x1, %ecx            #  215   0xa78be  3      OPC=addl_r32_imm8   
  shrl $0x16, %eax           #  216   0xa78c1  3      OPC=shrl_r32_imm8   
  leal 0x1(%rax), %edx       #  217   0xa78c4  3      OPC=leal_r32_m16    
  movl %ebx, %eax            #  218   0xa78c7  2      OPC=movl_r32_r32    
  shrl $0xc, %ebx            #  219   0xa78c9  3      OPC=shrl_r32_imm8   
  andl $0xfff, %eax          #  220   0xa78cc  5      OPC=andl_eax_imm32  
  addl $0x1, %eax            #  221   0xa78d1  3      OPC=addl_r32_imm8   
  imull %edx, %eax           #  222   0xa78d4  3      OPC=imull_r32_r32   
  movl %ebx, %edx            #  223   0xa78d7  2      OPC=movl_r32_r32    
  andl $0x3ff, %edx          #  224   0xa78d9  6      OPC=andl_r32_imm32  
  addl $0x1, %edx            #  225   0xa78df  3      OPC=addl_r32_imm8   
  imull %ecx, %eax           #  226   0xa78e2  3      OPC=imull_r32_r32   
  imull %edx, %eax           #  227   0xa78e5  3      OPC=imull_r32_r32   
  jmpq .L_a7755              #  228   0xa78e8  5      OPC=jmpq_label_1    
.L_a78ed:                    #        0xa78ed  0      OPC=<label>         
  movzbl 0x1(%r9), %eax      #  229   0xa78ed  5      OPC=movzbl_r32_m8   
  jmpq .L_a7755              #  230   0xa78f2  5      OPC=jmpq_label_1    
.L_a78f7:                    #        0xa78f7  0      OPC=<label>         
  movl %ebx, %eax            #  231   0xa78f7  2      OPC=movl_r32_r32    
  shrl $0x16, %eax           #  232   0xa78f9  3      OPC=shrl_r32_imm8   
  addl $0x1, %eax            #  233   0xa78fc  3      OPC=addl_r32_imm8   
  jmpq .L_a7755              #  234   0xa78ff  5      OPC=jmpq_label_1    
.L_a7904:                    #        0xa7904  0      OPC=<label>         
  leaq 0xe9725(%rip), %rcx   #  235   0xa7904  7      OPC=leaq_r64_m16    
  leaq 0xe419e(%rip), %rsi   #  236   0xa790b  7      OPC=leaq_r64_m16    
  leaq 0xe41b5(%rip), %rdi   #  237   0xa7912  7      OPC=leaq_r64_m16    
  movl $0xc1, %edx           #  238   0xa7919  5      OPC=movl_r32_imm32  
  callq .__assert_fail       #  239   0xa791e  5      OPC=callq_label     
.L_a7923:                    #        0xa7923  0      OPC=<label>         
  leaq 0xe9706(%rip), %rcx   #  240   0xa7923  7      OPC=leaq_r64_m16    
  leaq 0xe417f(%rip), %rsi   #  241   0xa792a  7      OPC=leaq_r64_m16    
  leaq 0xe4196(%rip), %rdi   #  242   0xa7931  7      OPC=leaq_r64_m16    
  movl $0xf1, %edx           #  243   0xa7938  5      OPC=movl_r32_imm32  
  callq .__assert_fail       #  244   0xa793d  5      OPC=callq_label     
  nop                        #  245   0xa7942  1      OPC=nop             
  nop                        #  246   0xa7943  1      OPC=nop             
  nop                        #  247   0xa7944  1      OPC=nop             
  nop                        #  248   0xa7945  1      OPC=nop             
  nop                        #  249   0xa7946  1      OPC=nop             
  nop                        #  250   0xa7947  1      OPC=nop             
  nop                        #  251   0xa7948  1      OPC=nop             
  nop                        #  252   0xa7949  1      OPC=nop             
  nop                        #  253   0xa794a  1      OPC=nop             
  nop                        #  254   0xa794b  1      OPC=nop             
  nop                        #  255   0xa794c  1      OPC=nop             
  nop                        #  256   0xa794d  1      OPC=nop             
  nop                        #  257   0xa794e  1      OPC=nop             
  nop                        #  258   0xa794f  1      OPC=nop             
                                                                          
.size intel_check_word, .-intel_check_word

