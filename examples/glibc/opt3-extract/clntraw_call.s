  .text
  .globl clntraw_call
  .type clntraw_call, @function

#! file-offset 0x129890
#! rip-offset  0x129890
#! capacity    544 bytes

# Text                                #  Line  RIP       Bytes  Opcode               
.clntraw_call:                        #        0x129890  0      OPC=<label>          
  pushq %r15                          #  1     0x129890  2      OPC=pushq_r64_1      
  pushq %r14                          #  2     0x129892  2      OPC=pushq_r64_1      
  movq %rdx, %r14                     #  3     0x129894  3      OPC=movq_r64_r64     
  pushq %r13                          #  4     0x129897  2      OPC=pushq_r64_1      
  pushq %r12                          #  5     0x129899  2      OPC=pushq_r64_1      
  movq %rdi, %r12                     #  6     0x12989b  3      OPC=movq_r64_r64     
  pushq %rbp                          #  7     0x12989e  1      OPC=pushq_r64_1      
  pushq %rbx                          #  8     0x12989f  1      OPC=pushq_r64_1      
  subq $0xc8, %rsp                    #  9     0x1298a0  7      OPC=subq_r64_imm32   
  movq %rsi, 0x38(%rsp)               #  10    0x1298a7  5      OPC=movq_m64_r64     
  movq %rcx, 0x10(%rsp)               #  11    0x1298ac  5      OPC=movq_m64_r64     
  movq %r8, 0x20(%rsp)                #  12    0x1298b1  5      OPC=movq_m64_r64     
  movq %r9, 0x28(%rsp)                #  13    0x1298b6  5      OPC=movq_m64_r64     
  callq .__rpc_thread_variables       #  14    0x1298bb  5      OPC=callq_label      
  movq 0xb8(%rax), %rbx               #  15    0x1298c0  7      OPC=movq_r64_m64     
  movl $0x10, %edx                    #  16    0x1298c7  5      OPC=movl_r32_imm32   
  testq %rbx, %rbx                    #  17    0x1298cc  3      OPC=testq_r64_r64    
  je .L_129a2b                        #  18    0x1298cf  6      OPC=je_label_1       
  leaq 0x22a8(%rbx), %rax             #  19    0x1298d5  7      OPC=leaq_r64_m16     
  leaq 0x18(%rbx), %rbp               #  20    0x1298dc  4      OPC=leaq_r64_m16     
  leaq 0x60(%rsp), %r13               #  21    0x1298e0  5      OPC=leaq_r64_m16     
  movq %rax, 0x8(%rsp)                #  22    0x1298e5  5      OPC=movq_m64_r64     
  leaq 0x38(%rsp), %rax               #  23    0x1298ea  5      OPC=leaq_r64_m16     
  movq %rax, 0x18(%rsp)               #  24    0x1298ef  5      OPC=movq_m64_r64     
  leaq 0x40(%rsp), %rax               #  25    0x1298f4  5      OPC=leaq_r64_m16     
  movq %rax, 0x30(%rsp)               #  26    0x1298f9  5      OPC=movq_m64_r64     
  jmpq .L_1299ee                      #  27    0x1298fe  5      OPC=jmpq_label_1     
  nop                                 #  28    0x129903  1      OPC=nop              
  nop                                 #  29    0x129904  1      OPC=nop              
  nop                                 #  30    0x129905  1      OPC=nop              
  nop                                 #  31    0x129906  1      OPC=nop              
  nop                                 #  32    0x129907  1      OPC=nop              
.L_129908:                            #        0x129908  0      OPC=<label>          
  movq 0x20(%rbx), %rax               #  33    0x129908  4      OPC=movq_r64_m64     
  movq 0x18(%rsp), %rsi               #  34    0x12990c  5      OPC=movq_r64_m64     
  movq %rbp, %rdi                     #  35    0x129911  3      OPC=movq_r64_r64     
  callq 0x8(%rax)                     #  36    0x129914  3      OPC=callq_m64        
  testl %eax, %eax                    #  37    0x129917  2      OPC=testl_r32_r32    
  je .L_129a26                        #  38    0x129919  6      OPC=je_label_1       
  movq (%r12), %rdi                   #  39    0x12991f  4      OPC=movq_r64_m64     
  movq %rbp, %rsi                     #  40    0x129923  3      OPC=movq_r64_r64     
  movq 0x38(%rdi), %rax               #  41    0x129926  4      OPC=movq_r64_m64     
  callq 0x8(%rax)                     #  42    0x12992a  3      OPC=callq_m64        
  testl %eax, %eax                    #  43    0x12992d  2      OPC=testl_r32_r32    
  je .L_129a26                        #  44    0x12992f  6      OPC=je_label_1       
  xorl %eax, %eax                     #  45    0x129935  2      OPC=xorl_r32_r32     
  movq 0x10(%rsp), %rsi               #  46    0x129937  5      OPC=movq_r64_m64     
  movq %rbp, %rdi                     #  47    0x12993c  3      OPC=movq_r64_r64     
  callq %r14                          #  48    0x12993f  3      OPC=callq_r64        
  testl %eax, %eax                    #  49    0x129942  2      OPC=testl_r32_r32    
  je .L_129a26                        #  50    0x129944  6      OPC=je_label_1       
  movq 0x20(%rbx), %rax               #  51    0x12994a  4      OPC=movq_r64_m64     
  movq %rbp, %rdi                     #  52    0x12994e  3      OPC=movq_r64_r64     
  callq 0x20(%rax)                    #  53    0x129951  3      OPC=callq_m64        
  movl $0x1, %edi                     #  54    0x129954  5      OPC=movl_r32_imm32   
  callq .svc_getreq_GLIBC_2_2_5       #  55    0x129959  5      OPC=callq_label      
  movq 0x20(%rbx), %rax               #  56    0x12995e  4      OPC=movq_r64_m64     
  xorl %esi, %esi                     #  57    0x129962  2      OPC=xorl_r32_r32     
  movq %rbp, %rdi                     #  58    0x129964  3      OPC=movq_r64_r64     
  movl $0x1, 0x18(%rbx)               #  59    0x129967  7      OPC=movl_m32_imm32   
  callq 0x28(%rax)                    #  60    0x12996e  3      OPC=callq_m64        
  movq 0x29c8b8(%rip), %rax           #  61    0x129971  7      OPC=movq_r64_m64     
  movq %r13, %rsi                     #  62    0x129978  3      OPC=movq_r64_r64     
  movq %rbp, %rdi                     #  63    0x12997b  3      OPC=movq_r64_r64     
  movq %rax, 0x78(%rsp)               #  64    0x12997e  5      OPC=movq_m64_r64     
  movq 0x29c8ae(%rip), %rax           #  65    0x129983  7      OPC=movq_r64_m64     
  movq %rax, 0x80(%rsp)               #  66    0x12998a  8      OPC=movq_m64_r64     
  movq 0x29c8a7(%rip), %rax           #  67    0x129992  7      OPC=movq_r64_m64     
  movq %rax, 0x88(%rsp)               #  68    0x129999  8      OPC=movq_m64_r64     
  movq 0x28(%rsp), %rax               #  69    0x1299a1  5      OPC=movq_r64_m64     
  movq %rax, 0x98(%rsp)               #  70    0x1299a6  8      OPC=movq_m64_r64     
  movq 0x20(%rsp), %rax               #  71    0x1299ae  5      OPC=movq_r64_m64     
  movq %rax, 0xa0(%rsp)               #  72    0x1299b3  8      OPC=movq_m64_r64     
  callq .xdr_replymsg_GLIBC_2_2_5     #  73    0x1299bb  5      OPC=callq_label      
  testl %eax, %eax                    #  74    0x1299c0  2      OPC=testl_r32_r32    
  je .L_129a60                        #  75    0x1299c2  6      OPC=je_label_1       
  movq 0x30(%rsp), %rsi               #  76    0x1299c8  5      OPC=movq_r64_m64     
  movq %r13, %rdi                     #  77    0x1299cd  3      OPC=movq_r64_r64     
  callq ._seterr_reply_GLIBC_2_2_5    #  78    0x1299d0  5      OPC=callq_label      
  movl 0x40(%rsp), %r15d              #  79    0x1299d5  5      OPC=movl_r32_m32     
  movq (%r12), %rdi                   #  80    0x1299da  4      OPC=movq_r64_m64     
  testl %r15d, %r15d                  #  81    0x1299de  3      OPC=testl_r32_r32    
  movq 0x38(%rdi), %rax               #  82    0x1299e1  4      OPC=movq_r64_m64     
  je .L_129a40                        #  83    0x1299e5  2      OPC=je_label         
  callq 0x18(%rax)                    #  84    0x1299e7  3      OPC=callq_m64        
  testl %eax, %eax                    #  85    0x1299ea  2      OPC=testl_r32_r32    
  je .L_129a54                        #  86    0x1299ec  2      OPC=je_label         
.L_1299ee:                            #        0x1299ee  0      OPC=<label>          
  movq 0x20(%rbx), %rax               #  87    0x1299ee  4      OPC=movq_r64_m64     
  xorl %esi, %esi                     #  88    0x1299f2  2      OPC=xorl_r32_r32     
  movq %rbp, %rdi                     #  89    0x1299f4  3      OPC=movq_r64_r64     
  movl $0x0, 0x18(%rbx)               #  90    0x1299f7  7      OPC=movl_m32_imm32   
  callq 0x28(%rax)                    #  91    0x1299fe  3      OPC=callq_m64        
  movq 0x20(%rbx), %rax               #  92    0x129a01  4      OPC=movq_r64_m64     
  addq $0x1, 0x22a8(%rbx)             #  93    0x129a05  8      OPC=addq_m64_imm8    
  movq %rbp, %rdi                     #  94    0x129a0d  3      OPC=movq_r64_r64     
  movl 0x22c0(%rbx), %edx             #  95    0x129a10  6      OPC=movl_r32_m32     
  movq 0x8(%rsp), %rsi                #  96    0x129a16  5      OPC=movq_r64_m64     
  callq 0x18(%rax)                    #  97    0x129a1b  3      OPC=callq_m64        
  testl %eax, %eax                    #  98    0x129a1e  2      OPC=testl_r32_r32    
  jne .L_129908                       #  99    0x129a20  6      OPC=jne_label_1      
.L_129a26:                            #        0x129a26  0      OPC=<label>          
  movl $0x1, %edx                     #  100   0x129a26  5      OPC=movl_r32_imm32   
.L_129a2b:                            #        0x129a2b  0      OPC=<label>          
  addq $0xc8, %rsp                    #  101   0x129a2b  7      OPC=addq_r64_imm32   
  movl %edx, %eax                     #  102   0x129a32  2      OPC=movl_r32_r32     
  popq %rbx                           #  103   0x129a34  1      OPC=popq_r64_1       
  popq %rbp                           #  104   0x129a35  1      OPC=popq_r64_1       
  popq %r12                           #  105   0x129a36  2      OPC=popq_r64_1       
  popq %r13                           #  106   0x129a38  2      OPC=popq_r64_1       
  popq %r14                           #  107   0x129a3a  2      OPC=popq_r64_1       
  popq %r15                           #  108   0x129a3c  2      OPC=popq_r64_1       
  retq                                #  109   0x129a3e  1      OPC=retq             
  nop                                 #  110   0x129a3f  1      OPC=nop              
.L_129a40:                            #        0x129a40  0      OPC=<label>          
  addq $0x18, %r13                    #  111   0x129a40  4      OPC=addq_r64_imm8    
  movq %r13, %rsi                     #  112   0x129a44  3      OPC=movq_r64_r64     
  callq 0x10(%rax)                    #  113   0x129a47  3      OPC=callq_m64        
  testl %eax, %eax                    #  114   0x129a4a  2      OPC=testl_r32_r32    
  jne .L_129a67                       #  115   0x129a4c  2      OPC=jne_label        
  movl $0x7, %r15d                    #  116   0x129a4e  6      OPC=movl_r32_imm32   
.L_129a54:                            #        0x129a54  0      OPC=<label>          
  movl %r15d, %edx                    #  117   0x129a54  3      OPC=movl_r32_r32     
  jmpq .L_129a2b                      #  118   0x129a57  2      OPC=jmpq_label       
  nop                                 #  119   0x129a59  1      OPC=nop              
  nop                                 #  120   0x129a5a  1      OPC=nop              
  nop                                 #  121   0x129a5b  1      OPC=nop              
  nop                                 #  122   0x129a5c  1      OPC=nop              
  nop                                 #  123   0x129a5d  1      OPC=nop              
  nop                                 #  124   0x129a5e  1      OPC=nop              
  nop                                 #  125   0x129a5f  1      OPC=nop              
.L_129a60:                            #        0x129a60  0      OPC=<label>          
  movl $0x2, %edx                     #  126   0x129a60  5      OPC=movl_r32_imm32   
  jmpq .L_129a2b                      #  127   0x129a65  2      OPC=jmpq_label       
.L_129a67:                            #        0x129a67  0      OPC=<label>          
  movq (%r12), %rdi                   #  128   0x129a67  4      OPC=movq_r64_m64     
  movq %r13, %rsi                     #  129   0x129a6b  3      OPC=movq_r64_r64     
  movq 0x38(%rdi), %rax               #  130   0x129a6e  4      OPC=movq_r64_m64     
  callq 0x10(%rax)                    #  131   0x129a72  3      OPC=callq_m64        
  testl %eax, %eax                    #  132   0x129a75  2      OPC=testl_r32_r32    
  movl $0x7, %eax                     #  133   0x129a77  5      OPC=movl_r32_imm32   
  cmovnel %r15d, %eax                 #  134   0x129a7c  4      OPC=cmovnel_r32_r32  
  cmpq $0x0, 0x80(%rsp)               #  135   0x129a80  9      OPC=cmpq_m64_imm8    
  movl %eax, %edx                     #  136   0x129a89  2      OPC=movl_r32_r32     
  je .L_129a2b                        #  137   0x129a8b  2      OPC=je_label         
  movl $0x2, 0x18(%rbx)               #  138   0x129a8d  7      OPC=movl_m32_imm32   
  movq %r13, %rsi                     #  139   0x129a94  3      OPC=movq_r64_r64     
  movq %rbp, %rdi                     #  140   0x129a97  3      OPC=movq_r64_r64     
  movl %edx, 0x8(%rsp)                #  141   0x129a9a  4      OPC=movl_m32_r32     
  callq .xdr_opaque_auth_GLIBC_2_2_5  #  142   0x129a9e  5      OPC=callq_label      
  movl 0x8(%rsp), %edx                #  143   0x129aa3  4      OPC=movl_r32_m32     
  jmpq .L_129a2b                      #  144   0x129aa7  2      OPC=jmpq_label       
  nop                                 #  145   0x129aa9  1      OPC=nop              
  nop                                 #  146   0x129aaa  1      OPC=nop              
  nop                                 #  147   0x129aab  1      OPC=nop              
  nop                                 #  148   0x129aac  1      OPC=nop              
  nop                                 #  149   0x129aad  1      OPC=nop              
  nop                                 #  150   0x129aae  1      OPC=nop              
  nop                                 #  151   0x129aaf  1      OPC=nop              
                                                                                     
.size clntraw_call, .-clntraw_call

