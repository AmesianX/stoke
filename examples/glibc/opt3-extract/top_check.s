  .text
  .globl top_check
  .type top_check, @function

#! file-offset 0x7cd70
#! rip-offset  0x7cd70
#! capacity    544 bytes

# Text                          #  Line  RIP      Bytes  Opcode                
.top_check:                     #        0x7cd70  0      OPC=<label>           
  pushq %r14                    #  1     0x7cd70  2      OPC=pushq_r64_1       
  pushq %r13                    #  2     0x7cd72  2      OPC=pushq_r64_1       
  pushq %r12                    #  3     0x7cd74  2      OPC=pushq_r64_1       
  pushq %rbp                    #  4     0x7cd76  1      OPC=pushq_r64_1       
  pushq %rbx                    #  5     0x7cd77  1      OPC=pushq_r64_1       
  subq $0x20, %rsp              #  6     0x7cd78  4      OPC=subq_r64_imm8     
  movq 0x3440f5(%rip), %rax     #  7     0x7cd7c  7      OPC=movq_r64_m64      
  movq 0x344f0e(%rip), %rdi     #  8     0x7cd83  7      OPC=movq_r64_m64      
  movq 0x18(%rax), %rbx         #  9     0x7cd8a  4      OPC=movq_r64_m64      
  leaq 0x344f03(%rip), %rax     #  10    0x7cd8e  7      OPC=leaq_r64_m16      
  cmpq %rax, %rdi               #  11    0x7cd95  3      OPC=cmpq_r64_r64      
  je .L_7cec0                   #  12    0x7cd98  6      OPC=je_label_1        
  movq 0x8(%rdi), %rax          #  13    0x7cd9e  4      OPC=movq_r64_m64      
  testb $0x2, %al               #  14    0x7cda2  2      OPC=testb_al_imm8     
  jne .L_7cdb7                  #  15    0x7cda4  2      OPC=jne_label         
  movq %rax, %rdx               #  16    0x7cda6  3      OPC=movq_r64_r64      
  andq $0xf8, %rdx              #  17    0x7cda9  4      OPC=andq_r64_imm8     
  cmpq $0x1f, %rdx              #  18    0x7cdad  4      OPC=cmpq_r64_imm8     
  ja .L_7ce90                   #  19    0x7cdb1  6      OPC=ja_label_1        
.L_7cdb7:                       #        0x7cdb7  0      OPC=<label>           
  movl 0x344e87(%rip), %eax     #  20    0x7cdb7  6      OPC=movl_r32_m32      
.L_7cdbd:                       #        0x7cdbd  0      OPC=<label>           
  movl 0x34440d(%rip), %ebp     #  21    0x7cdbd  6      OPC=movl_r32_m32      
  orl $0x4, %eax                #  22    0x7cdc3  3      OPC=orl_r32_imm8      
  movl %eax, 0x344e78(%rip)     #  23    0x7cdc6  6      OPC=movl_m32_r32      
  movl %ebp, %eax               #  24    0x7cdcc  2      OPC=movl_r32_r32      
  andl $0x5, %eax               #  25    0x7cdce  3      OPC=andl_r32_imm8     
  cmpl $0x5, %eax               #  26    0x7cdd1  3      OPC=cmpl_r32_imm8     
  je .L_7cf50                   #  27    0x7cdd4  6      OPC=je_label_1        
  testb $0x1, %bpl              #  28    0x7cdda  4      OPC=testb_r8_imm8     
  jne .L_7ced0                  #  29    0x7cdde  6      OPC=jne_label_1       
  andl $0x2, %ebp               #  30    0x7cde4  3      OPC=andl_r32_imm8     
  jne .L_7cf87                  #  31    0x7cde7  6      OPC=jne_label_1       
.L_7cded:                       #        0x7cded  0      OPC=<label>           
  movq 0x343fe4(%rip), %r12     #  32    0x7cded  7      OPC=movq_r64_m64      
  xorl %edi, %edi               #  33    0x7cdf4  2      OPC=xorl_r32_r32      
  callq (%r12)                  #  34    0x7cdf6  4      OPC=callq_m64         
  movq %rax, %r13               #  35    0x7cdfa  3      OPC=movq_r64_r64      
  movq %rax, %rbp               #  36    0x7cdfd  3      OPC=movq_r64_r64      
  andl $0xf, %r13d              #  37    0x7ce00  4      OPC=andl_r32_imm8     
  jne .L_7ce80                  #  38    0x7ce04  2      OPC=jne_label         
.L_7ce06:                       #        0x7ce06  0      OPC=<label>           
  movq 0x3443fb(%rip), %rax     #  39    0x7ce06  7      OPC=movq_r64_m64      
  leaq 0x20(%r13,%rax,1), %rdx  #  40    0x7ce0d  5      OPC=leaq_r64_m16      
  leaq -0x1(%rbx), %rax         #  41    0x7ce12  4      OPC=leaq_r64_m16      
  leaq (%rbp,%rdx,1), %rcx      #  42    0x7ce16  5      OPC=leaq_r64_m16      
  addq %rdx, %rbx               #  43    0x7ce1b  3      OPC=addq_r64_r64      
  andq %rcx, %rax               #  44    0x7ce1e  3      OPC=andq_r64_r64      
  subq %rax, %rbx               #  45    0x7ce21  3      OPC=subq_r64_r64      
  movq %rbx, %rdi               #  46    0x7ce24  3      OPC=movq_r64_r64      
  callq (%r12)                  #  47    0x7ce27  4      OPC=callq_m64         
  testq %rax, %rax              #  48    0x7ce2b  3      OPC=testq_r64_r64     
  movq %rax, %r12               #  49    0x7ce2e  3      OPC=movq_r64_r64      
  je .L_7cf6f                   #  50    0x7ce31  6      OPC=je_label_1        
  movq 0x34407a(%rip), %rax     #  51    0x7ce37  7      OPC=movq_r64_m64      
  movq (%rax), %rax             #  52    0x7ce3e  3      OPC=movq_r64_m64      
  testq %rax, %rax              #  53    0x7ce41  3      OPC=testq_r64_r64     
  je .L_7ce48                   #  54    0x7ce44  2      OPC=je_label          
  callq %rax                    #  55    0x7ce46  2      OPC=callq_r64         
.L_7ce48:                       #        0x7ce48  0      OPC=<label>           
  subq 0x344401(%rip), %r12     #  56    0x7ce48  7      OPC=subq_r64_m64      
  addq %r13, %rbp               #  57    0x7ce4f  3      OPC=addq_r64_r64      
  xorl %eax, %eax               #  58    0x7ce52  2      OPC=xorl_r32_r32      
  movq %rbp, 0x344e3d(%rip)     #  59    0x7ce54  7      OPC=movq_m64_r64      
  addq %rbx, %r12               #  60    0x7ce5b  3      OPC=addq_r64_r64      
  subq %r13, %rbx               #  61    0x7ce5e  3      OPC=subq_r64_r64      
  orq $0x1, %rbx                #  62    0x7ce61  4      OPC=orq_r64_imm8      
  movq %r12, 0x345654(%rip)     #  63    0x7ce65  7      OPC=movq_m64_r64      
  movq %rbx, 0x8(%rbp)          #  64    0x7ce6c  4      OPC=movq_m64_r64      
.L_7ce70:                       #        0x7ce70  0      OPC=<label>           
  addq $0x20, %rsp              #  65    0x7ce70  4      OPC=addq_r64_imm8     
  popq %rbx                     #  66    0x7ce74  1      OPC=popq_r64_1        
  popq %rbp                     #  67    0x7ce75  1      OPC=popq_r64_1        
  popq %r12                     #  68    0x7ce76  2      OPC=popq_r64_1        
  popq %r13                     #  69    0x7ce78  2      OPC=popq_r64_1        
  popq %r14                     #  70    0x7ce7a  2      OPC=popq_r64_1        
  retq                          #  71    0x7ce7c  1      OPC=retq              
  nop                           #  72    0x7ce7d  1      OPC=nop               
  nop                           #  73    0x7ce7e  1      OPC=nop               
  nop                           #  74    0x7ce7f  1      OPC=nop               
.L_7ce80:                       #        0x7ce80  0      OPC=<label>           
  movl $0x10, %eax              #  75    0x7ce80  5      OPC=movl_r32_imm32    
  subq %r13, %rax               #  76    0x7ce85  3      OPC=subq_r64_r64      
  movq %rax, %r13               #  77    0x7ce88  3      OPC=movq_r64_r64      
  jmpq .L_7ce06                 #  78    0x7ce8b  5      OPC=jmpq_label_1      
.L_7ce90:                       #        0x7ce90  0      OPC=<label>           
  testb $0x1, %al               #  79    0x7ce90  2      OPC=testb_al_imm8     
  je .L_7cdb7                   #  80    0x7ce92  6      OPC=je_label_1        
  movl 0x344da6(%rip), %eax     #  81    0x7ce98  6      OPC=movl_r32_m32      
  testb $0x2, %al               #  82    0x7ce9e  2      OPC=testb_al_imm8     
  jne .L_7cec0                  #  83    0x7cea0  2      OPC=jne_label         
  movq 0x345617(%rip), %rcx     #  84    0x7cea2  7      OPC=movq_r64_m64      
  addq 0x3443a0(%rip), %rcx     #  85    0x7cea9  7      OPC=addq_r64_m64      
  addq %rdi, %rdx               #  86    0x7ceb0  3      OPC=addq_r64_r64      
  cmpq %rcx, %rdx               #  87    0x7ceb3  3      OPC=cmpq_r64_r64      
  jne .L_7cdbd                  #  88    0x7ceb6  6      OPC=jne_label_1       
  nop                           #  89    0x7cebc  1      OPC=nop               
  nop                           #  90    0x7cebd  1      OPC=nop               
  nop                           #  91    0x7cebe  1      OPC=nop               
  nop                           #  92    0x7cebf  1      OPC=nop               
.L_7cec0:                       #        0x7cec0  0      OPC=<label>           
  addq $0x20, %rsp              #  93    0x7cec0  4      OPC=addq_r64_imm8     
  xorl %eax, %eax               #  94    0x7cec4  2      OPC=xorl_r32_r32      
  popq %rbx                     #  95    0x7cec6  1      OPC=popq_r64_1        
  popq %rbp                     #  96    0x7cec7  1      OPC=popq_r64_1        
  popq %r12                     #  97    0x7cec8  2      OPC=popq_r64_1        
  popq %r13                     #  98    0x7ceca  2      OPC=popq_r64_1        
  popq %r14                     #  99    0x7cecc  2      OPC=popq_r64_1        
  retq                          #  100   0x7cece  1      OPC=retq              
  nop                           #  101   0x7cecf  1      OPC=nop               
.L_7ced0:                       #        0x7ced0  0      OPC=<label>           
  leaq 0x10(%rsp), %rsi         #  102   0x7ced0  5      OPC=leaq_r64_m16      
  xorl %ecx, %ecx               #  103   0x7ced5  2      OPC=xorl_r32_r32      
  movl $0x10, %edx              #  104   0x7ced7  5      OPC=movl_r32_imm32    
  movb $0x0, 0x10(%rsp)         #  105   0x7cedc  5      OPC=movb_m8_imm8      
  callq ._itoa_word             #  106   0x7cee1  5      OPC=callq_label       
  cmpq %rsp, %rax               #  107   0x7cee6  3      OPC=cmpq_r64_r64      
  movq %rax, %r12               #  108   0x7cee9  3      OPC=movq_r64_r64      
  jbe .L_7cf13                  #  109   0x7ceec  2      OPC=jbe_label         
  movq %rax, %rdx               #  110   0x7ceee  3      OPC=movq_r64_r64      
  movq %rax, %rdi               #  111   0x7cef1  3      OPC=movq_r64_r64      
  movl $0x30, %esi              #  112   0x7cef4  5      OPC=movl_r32_imm32    
  subq %rsp, %rdx               #  113   0x7cef9  3      OPC=subq_r64_r64      
  leaq -0x1(%rax), %r14         #  114   0x7cefc  4      OPC=leaq_r64_m16      
  subq %rdx, %rdi               #  115   0x7cf00  3      OPC=subq_r64_r64      
  callq .__GI_memset            #  116   0x7cf03  5      OPC=callq_label       
  leaq -0x1(%rsp), %rax         #  117   0x7cf08  5      OPC=leaq_r64_m16      
  subq %r14, %rax               #  118   0x7cf0d  3      OPC=subq_r64_r64      
  addq %rax, %r12               #  119   0x7cf10  3      OPC=addq_r64_r64      
.L_7cf13:                       #        0x7cf13  0      OPC=<label>           
  movq 0x34987e(%rip), %rax     #  120   0x7cf13  7      OPC=movq_r64_m64      
  leaq 0x10e73a(%rip), %rdx     #  121   0x7cf1a  7      OPC=leaq_r64_m16      
  movl %ebp, %edi               #  122   0x7cf21  2      OPC=movl_r32_r32      
  leaq 0x10e73b(%rip), %rcx     #  123   0x7cf23  7      OPC=leaq_r64_m16      
  leaq 0x111bd7(%rip), %rsi     #  124   0x7cf2a  7      OPC=leaq_r64_m16      
  movq %r12, %r8                #  125   0x7cf31  3      OPC=movq_r64_r64      
  movq (%rax), %rax             #  126   0x7cf34  3      OPC=movq_r64_m64      
  testq %rax, %rax              #  127   0x7cf37  3      OPC=testq_r64_r64     
  cmovneq %rax, %rdx            #  128   0x7cf3a  4      OPC=cmovneq_r64_r64   
  andl $0x2, %edi               #  129   0x7cf3e  3      OPC=andl_r32_imm8     
  xorl %eax, %eax               #  130   0x7cf41  2      OPC=xorl_r32_r32      
  callq .__libc_message         #  131   0x7cf43  5      OPC=callq_label       
  jmpq .L_7cded                 #  132   0x7cf48  5      OPC=jmpq_label_1      
  nop                           #  133   0x7cf4d  1      OPC=nop               
  nop                           #  134   0x7cf4e  1      OPC=nop               
  nop                           #  135   0x7cf4f  1      OPC=nop               
.L_7cf50:                       #        0x7cf50  0      OPC=<label>           
  movl %ebp, %edi               #  136   0x7cf50  2      OPC=movl_r32_r32      
  leaq 0x10e70c(%rip), %rdx     #  137   0x7cf52  7      OPC=leaq_r64_m16      
  leaq 0x1103ef(%rip), %rsi     #  138   0x7cf59  7      OPC=leaq_r64_m16      
  andl $0x2, %edi               #  139   0x7cf60  3      OPC=andl_r32_imm8     
  xorl %eax, %eax               #  140   0x7cf63  2      OPC=xorl_r32_r32      
  callq .__libc_message         #  141   0x7cf65  5      OPC=callq_label       
  jmpq .L_7cded                 #  142   0x7cf6a  5      OPC=jmpq_label_1      
.L_7cf6f:                       #        0x7cf6f  0      OPC=<label>           
  movq 0x343f0a(%rip), %rax     #  143   0x7cf6f  7      OPC=movq_r64_m64      
  movl $0xc, (%rax)             #  144   0x7cf76  6      OPC=movl_m32_imm32    
  nop                           #  145   0x7cf7c  1      OPC=nop               
  movl $0xffffffff, %eax        #  146   0x7cf7d  6      OPC=movl_r32_imm32_1  
  jmpq .L_7ce70                 #  147   0x7cf83  5      OPC=jmpq_label_1      
.L_7cf87:                       #        0x7cf88  0      OPC=<label>           
  callq .abort                  #  148   0x7cf88  5      OPC=callq_label       
  nop                           #  149   0x7cf8d  1      OPC=nop               
  nop                           #  150   0x7cf8e  1      OPC=nop               
  nop                           #  151   0x7cf8f  1      OPC=nop               
  nop                           #  152   0x7cf90  1      OPC=nop               
                                                                               
.size top_check, .-top_check

