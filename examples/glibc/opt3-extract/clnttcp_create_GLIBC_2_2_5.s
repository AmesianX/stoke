  .text
  .globl clnttcp_create_GLIBC_2_2_5
  .type clnttcp_create_GLIBC_2_2_5, @function

#! file-offset 0x132fa0
#! rip-offset  0x132fa0
#! capacity    640 bytes

# Text                                       #  Line  RIP       Bytes  Opcode              
.clnttcp_create_GLIBC_2_2_5:                 #        0x132fa0  0      OPC=<label>         
  pushq %r15                                 #  1     0x132fa0  2      OPC=pushq_r64_1     
  pushq %r14                                 #  2     0x132fa2  2      OPC=pushq_r64_1     
  movq %rdi, %r15                            #  3     0x132fa4  3      OPC=movq_r64_r64    
  pushq %r13                                 #  4     0x132fa7  2      OPC=pushq_r64_1     
  pushq %r12                                 #  5     0x132fa9  2      OPC=pushq_r64_1     
  movl $0x18, %edi                           #  6     0x132fab  5      OPC=movl_r32_imm32  
  pushq %rbp                                 #  7     0x132fb0  1      OPC=pushq_r64_1     
  pushq %rbx                                 #  8     0x132fb1  1      OPC=pushq_r64_1     
  movq %rsi, %r13                            #  9     0x132fb2  3      OPC=movq_r64_r64    
  movq %rdx, %r12                            #  10    0x132fb5  3      OPC=movq_r64_r64    
  movq %rcx, %rbp                            #  11    0x132fb8  3      OPC=movq_r64_r64    
  subq $0x78, %rsp                           #  12    0x132fbb  4      OPC=subq_r64_imm8   
  movl %r8d, 0x8(%rsp)                       #  13    0x132fbf  5      OPC=movl_m32_r32    
  movl %r9d, 0xc(%rsp)                       #  14    0x132fc4  5      OPC=movl_m32_r32    
  callq .memalign_plt                        #  15    0x132fc9  5      OPC=callq_label     
  movl $0x98, %edi                           #  16    0x132fce  5      OPC=movl_r32_imm32  
  movq %rax, %rbx                            #  17    0x132fd3  3      OPC=movq_r64_r64    
  callq .memalign_plt                        #  18    0x132fd6  5      OPC=callq_label     
  testq %rax, %rax                           #  19    0x132fdb  3      OPC=testq_r64_r64   
  movq %rax, %r14                            #  20    0x132fde  3      OPC=movq_r64_r64    
  je .L_1331a8                               #  21    0x132fe1  6      OPC=je_label_1      
  testq %rbx, %rbx                           #  22    0x132fe7  3      OPC=testq_r64_r64   
  je .L_1331a8                               #  23    0x132fea  6      OPC=je_label_1      
  cmpw $0x0, 0x2(%r15)                       #  24    0x132ff0  6      OPC=cmpw_m16_imm8   
  je .L_1330f0                               #  25    0x132ff6  6      OPC=je_label_1      
  movl (%rbp), %eax                          #  26    0x132ffc  3      OPC=movl_r32_m32    
  testl %eax, %eax                           #  27    0x132fff  2      OPC=testl_r32_r32   
  js .L_13311c                               #  28    0x133001  6      OPC=js_label_1      
.L_133007:                                   #        0x133007  0      OPC=<label>         
  movl $0x0, 0x4(%r14)                       #  29    0x133007  8      OPC=movl_m32_imm32  
.L_13300f:                                   #        0x13300f  0      OPC=<label>         
  movq 0x8(%r15), %rdx                       #  30    0x13300f  4      OPC=movq_r64_m64    
  movl %eax, (%r14)                          #  31    0x133013  3      OPC=movl_m32_r32    
  movq (%r15), %rax                          #  32    0x133016  3      OPC=movq_r64_m64    
  movq $0x0, 0x10(%r14)                      #  33    0x133019  8      OPC=movq_m64_imm32  
  movl $0x0, 0x18(%r14)                      #  34    0x133021  8      OPC=movl_m32_imm32  
  movq %rdx, 0x24(%r14)                      #  35    0x133029  4      OPC=movq_m64_r64    
  movq %rax, 0x1c(%r14)                      #  36    0x13302d  4      OPC=movq_m64_r64    
  callq ._create_xid                         #  37    0x133031  5      OPC=callq_label     
  movq %r12, 0x30(%rsp)                      #  38    0x133036  5      OPC=movq_m64_r64    
  leaq 0x68(%r14), %r12                      #  39    0x13303b  4      OPC=leaq_r64_m16    
  leaq 0x48(%r14), %rsi                      #  40    0x13303f  4      OPC=leaq_r64_m16    
  xorl %ecx, %ecx                            #  41    0x133043  2      OPC=xorl_r32_r32    
  movl $0x18, %edx                           #  42    0x133045  5      OPC=movl_r32_imm32  
  movq %rax, 0x10(%rsp)                      #  43    0x13304a  5      OPC=movq_m64_r64    
  movq %r12, %rdi                            #  44    0x13304f  3      OPC=movq_r64_r64    
  movl $0x0, 0x18(%rsp)                      #  45    0x133052  8      OPC=movl_m32_imm32  
  movq $0x2, 0x20(%rsp)                      #  46    0x13305a  9      OPC=movq_m64_imm32  
  movq %r13, 0x28(%rsp)                      #  47    0x133063  5      OPC=movq_m64_r64    
  callq .xdrmem_create_GLIBC_2_2_5           #  48    0x133068  5      OPC=callq_label     
  leaq 0x10(%rsp), %rsi                      #  49    0x13306d  5      OPC=leaq_r64_m16    
  movq %r12, %rdi                            #  50    0x133072  3      OPC=movq_r64_r64    
  callq .xdr_callhdr_GLIBC_2_2_5             #  51    0x133075  5      OPC=callq_label     
  testl %eax, %eax                           #  52    0x13307a  2      OPC=testl_r32_r32   
  je .L_133170                               #  53    0x13307c  6      OPC=je_label_1      
  movq 0x70(%r14), %rax                      #  54    0x133082  4      OPC=movq_r64_m64    
  movq %r12, %rdi                            #  55    0x133086  3      OPC=movq_r64_r64    
  callq 0x20(%rax)                           #  56    0x133089  3      OPC=callq_m64       
  movl %eax, 0x60(%r14)                      #  57    0x13308c  4      OPC=movl_m32_r32    
  movq 0x70(%r14), %rax                      #  58    0x133090  4      OPC=movq_r64_m64    
  movq 0x38(%rax), %rax                      #  59    0x133094  4      OPC=movq_r64_m64    
  testq %rax, %rax                           #  60    0x133098  3      OPC=testq_r64_r64   
  je .L_1330a2                               #  61    0x13309b  2      OPC=je_label        
  movq %r12, %rdi                            #  62    0x13309d  3      OPC=movq_r64_r64    
  callq %rax                                 #  63    0x1330a0  2      OPC=callq_r64       
.L_1330a2:                                   #        0x1330a2  0      OPC=<label>         
  movl 0xc(%rsp), %edx                       #  64    0x1330a2  4      OPC=movl_r32_m32    
  movl 0x8(%rsp), %esi                       #  65    0x1330a6  4      OPC=movl_r32_m32    
  leaq -0x291(%rip), %r9                     #  66    0x1330aa  7      OPC=leaq_r64_m16    
  leaq -0x218(%rip), %r8                     #  67    0x1330b1  7      OPC=leaq_r64_m16    
  movq %r14, %rcx                            #  68    0x1330b8  3      OPC=movq_r64_r64    
  movq %r12, %rdi                            #  69    0x1330bb  3      OPC=movq_r64_r64    
  callq .xdrrec_create_GLIBC_2_2_5           #  70    0x1330be  5      OPC=callq_label     
  leaq 0x28c716(%rip), %rax                  #  71    0x1330c3  7      OPC=leaq_r64_m16    
  movq %r14, 0x10(%rbx)                      #  72    0x1330ca  4      OPC=movq_m64_r64    
  movq %rax, 0x8(%rbx)                       #  73    0x1330ce  4      OPC=movq_m64_r64    
  callq .authnone_create_GLIBC_2_2_5         #  74    0x1330d2  5      OPC=callq_label     
  movq %rax, (%rbx)                          #  75    0x1330d7  3      OPC=movq_m64_r64    
  addq $0x78, %rsp                           #  76    0x1330da  4      OPC=addq_r64_imm8   
  movq %rbx, %rax                            #  77    0x1330de  3      OPC=movq_r64_r64    
  popq %rbx                                  #  78    0x1330e1  1      OPC=popq_r64_1      
  popq %rbp                                  #  79    0x1330e2  1      OPC=popq_r64_1      
  popq %r12                                  #  80    0x1330e3  2      OPC=popq_r64_1      
  popq %r13                                  #  81    0x1330e5  2      OPC=popq_r64_1      
  popq %r14                                  #  82    0x1330e7  2      OPC=popq_r64_1      
  popq %r15                                  #  83    0x1330e9  2      OPC=popq_r64_1      
  retq                                       #  84    0x1330eb  1      OPC=retq            
  nop                                        #  85    0x1330ec  1      OPC=nop             
  nop                                        #  86    0x1330ed  1      OPC=nop             
  nop                                        #  87    0x1330ee  1      OPC=nop             
  nop                                        #  88    0x1330ef  1      OPC=nop             
.L_1330f0:                                   #        0x1330f0  0      OPC=<label>         
  movl $0x6, %ecx                            #  89    0x1330f0  5      OPC=movl_r32_imm32  
  movq %r12, %rdx                            #  90    0x1330f5  3      OPC=movq_r64_r64    
  movq %r13, %rsi                            #  91    0x1330f8  3      OPC=movq_r64_r64    
  movq %r15, %rdi                            #  92    0x1330fb  3      OPC=movq_r64_r64    
  callq .pmap_getport_GLIBC_2_2_5            #  93    0x1330fe  5      OPC=callq_label     
  testw %ax, %ax                             #  94    0x133103  3      OPC=testw_r16_r16   
  je .L_133180                               #  95    0x133106  2      OPC=je_label        
  rorw $0x8, %ax                             #  96    0x133108  4      OPC=rorw_r16_imm8   
  movw %ax, 0x2(%r15)                        #  97    0x13310c  5      OPC=movw_m16_r16    
  movl (%rbp), %eax                          #  98    0x133111  3      OPC=movl_r32_m32    
  testl %eax, %eax                           #  99    0x133114  2      OPC=testl_r32_r32   
  jns .L_133007                              #  100   0x133116  6      OPC=jns_label_1     
.L_13311c:                                   #        0x13311c  0      OPC=<label>         
  movl $0x6, %edx                            #  101   0x13311c  5      OPC=movl_r32_imm32  
  movl $0x1, %esi                            #  102   0x133121  5      OPC=movl_r32_imm32  
  movl $0x2, %edi                            #  103   0x133126  5      OPC=movl_r32_imm32  
  callq .__socket                            #  104   0x13312b  5      OPC=callq_label     
  xorl %esi, %esi                            #  105   0x133130  2      OPC=xorl_r32_r32    
  movl %eax, %edi                            #  106   0x133132  2      OPC=movl_r32_r32    
  movl %eax, (%rbp)                          #  107   0x133134  3      OPC=movl_m32_r32    
  callq .bindresvport                        #  108   0x133137  5      OPC=callq_label     
  movl (%rbp), %edi                          #  109   0x13313c  3      OPC=movl_r32_m32    
  testl %edi, %edi                           #  110   0x13313f  2      OPC=testl_r32_r32   
  js .L_1331f8                               #  111   0x133141  6      OPC=js_label_1      
  movl $0x10, %edx                           #  112   0x133147  5      OPC=movl_r32_imm32  
  movq %r15, %rsi                            #  113   0x13314c  3      OPC=movq_r64_r64    
  callq .__connect                           #  114   0x13314f  5      OPC=callq_label     
  testl %eax, %eax                           #  115   0x133154  2      OPC=testl_r32_r32   
  js .L_1331f8                               #  116   0x133156  6      OPC=js_label_1      
  movl $0x1, 0x4(%r14)                       #  117   0x13315c  8      OPC=movl_m32_imm32  
  movl (%rbp), %eax                          #  118   0x133164  3      OPC=movl_r32_m32    
  jmpq .L_13300f                             #  119   0x133167  5      OPC=jmpq_label_1    
  nop                                        #  120   0x13316c  1      OPC=nop             
  nop                                        #  121   0x13316d  1      OPC=nop             
  nop                                        #  122   0x13316e  1      OPC=nop             
  nop                                        #  123   0x13316f  1      OPC=nop             
.L_133170:                                   #        0x133170  0      OPC=<label>         
  movl 0x4(%r14), %eax                       #  124   0x133170  4      OPC=movl_r32_m32    
  testl %eax, %eax                           #  125   0x133174  2      OPC=testl_r32_r32   
  je .L_133180                               #  126   0x133176  2      OPC=je_label        
  movl (%rbp), %edi                          #  127   0x133178  3      OPC=movl_r32_m32    
.L_13317b:                                   #        0x13317b  0      OPC=<label>         
  callq .__close                             #  128   0x13317b  5      OPC=callq_label     
.L_133180:                                   #        0x133180  0      OPC=<label>         
  movq %r14, %rdi                            #  129   0x133180  3      OPC=movq_r64_r64    
  callq .L_1f8c0                             #  130   0x133183  5      OPC=callq_label     
  movq %rbx, %rdi                            #  131   0x133188  3      OPC=movq_r64_r64    
  callq .L_1f8c0                             #  132   0x13318b  5      OPC=callq_label     
  addq $0x78, %rsp                           #  133   0x133190  4      OPC=addq_r64_imm8   
  xorl %eax, %eax                            #  134   0x133194  2      OPC=xorl_r32_r32    
  popq %rbx                                  #  135   0x133196  1      OPC=popq_r64_1      
  popq %rbp                                  #  136   0x133197  1      OPC=popq_r64_1      
  popq %r12                                  #  137   0x133198  2      OPC=popq_r64_1      
  popq %r13                                  #  138   0x13319a  2      OPC=popq_r64_1      
  popq %r14                                  #  139   0x13319c  2      OPC=popq_r64_1      
  popq %r15                                  #  140   0x13319e  2      OPC=popq_r64_1      
  retq                                       #  141   0x1331a0  1      OPC=retq            
  nop                                        #  142   0x1331a1  1      OPC=nop             
  nop                                        #  143   0x1331a2  1      OPC=nop             
  nop                                        #  144   0x1331a3  1      OPC=nop             
  nop                                        #  145   0x1331a4  1      OPC=nop             
  nop                                        #  146   0x1331a5  1      OPC=nop             
  nop                                        #  147   0x1331a6  1      OPC=nop             
  nop                                        #  148   0x1331a7  1      OPC=nop             
.L_1331a8:                                   #        0x1331a8  0      OPC=<label>         
  callq .__rpc_thread_createerr_GLIBC_2_2_5  #  149   0x1331a8  5      OPC=callq_label     
  leaq 0x5a6bf(%rip), %rsi                   #  150   0x1331ad  7      OPC=leaq_r64_m16    
  leaq 0x573e1(%rip), %rdi                   #  151   0x1331b4  7      OPC=leaq_r64_m16    
  movl $0x5, %edx                            #  152   0x1331bb  5      OPC=movl_r32_imm32  
  movq %rax, %rbp                            #  153   0x1331c0  3      OPC=movq_r64_r64    
  callq .__dcgettext                         #  154   0x1331c3  5      OPC=callq_label     
  leaq 0x5a7b0(%rip), %rdx                   #  155   0x1331c8  7      OPC=leaq_r64_m16    
  leaq 0x59db7(%rip), %rsi                   #  156   0x1331cf  7      OPC=leaq_r64_m16    
  movq %rax, %rcx                            #  157   0x1331d6  3      OPC=movq_r64_r64    
  xorl %edi, %edi                            #  158   0x1331d9  2      OPC=xorl_r32_r32    
  xorl %eax, %eax                            #  159   0x1331db  2      OPC=xorl_r32_r32    
  callq .__fxprintf                          #  160   0x1331dd  5      OPC=callq_label     
  movl $0xc, (%rbp)                          #  161   0x1331e2  7      OPC=movl_m32_imm32  
  movl $0xc, 0x10(%rbp)                      #  162   0x1331e9  7      OPC=movl_m32_imm32  
  jmpq .L_133180                             #  163   0x1331f0  2      OPC=jmpq_label      
  nop                                        #  164   0x1331f2  1      OPC=nop             
  nop                                        #  165   0x1331f3  1      OPC=nop             
  nop                                        #  166   0x1331f4  1      OPC=nop             
  nop                                        #  167   0x1331f5  1      OPC=nop             
  nop                                        #  168   0x1331f6  1      OPC=nop             
  nop                                        #  169   0x1331f7  1      OPC=nop             
.L_1331f8:                                   #        0x1331f8  0      OPC=<label>         
  callq .__rpc_thread_createerr_GLIBC_2_2_5  #  170   0x1331f8  5      OPC=callq_label     
  movq 0x28dc7c(%rip), %rdx                  #  171   0x1331fd  7      OPC=movq_r64_m64    
  movl $0xc, (%rax)                          #  172   0x133204  6      OPC=movl_m32_imm32  
  movl (%rdx), %edx                          #  173   0x13320a  2      OPC=movl_r32_m32    
  nop                                        #  174   0x13320c  1      OPC=nop             
  movl %edx, 0x10(%rax)                      #  175   0x13320d  3      OPC=movl_m32_r32    
  movl (%rbp), %edi                          #  176   0x133210  3      OPC=movl_r32_m32    
  testl %edi, %edi                           #  177   0x133213  2      OPC=testl_r32_r32   
  jns .L_13317b                              #  178   0x133215  6      OPC=jns_label_1     
  jmpq .L_133180                             #  179   0x13321b  5      OPC=jmpq_label_1    
                                                                                           
.size clnttcp_create_GLIBC_2_2_5, .-clnttcp_create_GLIBC_2_2_5

