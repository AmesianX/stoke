  .text
  .globl str_to_mpn
  .type str_to_mpn, @function

#! file-offset 0xa0080
#! rip-offset  0xa0080
#! capacity    624 bytes

# Text                            #  Line  RIP      Bytes  Opcode              
.str_to_mpn:                      #        0xa0080  0      OPC=<label>         
  pushq %r15                      #  1     0xa0080  2      OPC=pushq_r64_1     
  pushq %r14                      #  2     0xa0082  2      OPC=pushq_r64_1     
  movl %esi, %r15d                #  3     0xa0084  3      OPC=movl_r32_r32    
  pushq %r13                      #  4     0xa0087  2      OPC=pushq_r64_1     
  pushq %r12                      #  5     0xa0089  2      OPC=pushq_r64_1     
  movq %rcx, %r13                 #  6     0xa008b  3      OPC=movq_r64_r64    
  pushq %rbp                      #  7     0xa008e  1      OPC=pushq_r64_1     
  pushq %rbx                      #  8     0xa008f  1      OPC=pushq_r64_1     
  subq $0x8, %rsp                 #  9     0xa0090  4      OPC=subq_r64_imm8   
  testl %esi, %esi                #  10    0xa0094  2      OPC=testl_r32_r32   
  movq $0x0, (%rcx)               #  11    0xa0096  7      OPC=movq_m64_imm32  
  jle .L_a028a                    #  12    0xa009d  6      OPC=jle_label_1     
  movq %rdx, %r14                 #  13    0xa00a3  3      OPC=movq_r64_r64    
  movq %rdi, %rbp                 #  14    0xa00a6  3      OPC=movq_r64_r64    
  movq %r8, %r12                  #  15    0xa00a9  3      OPC=movq_r64_r64    
  xorl %ebx, %ebx                 #  16    0xa00ac  2      OPC=xorl_r32_r32    
  xorl %edx, %edx                 #  17    0xa00ae  2      OPC=xorl_r32_r32    
.L_a00b0:                         #        0xa00b0  0      OPC=<label>         
  movslq (%rbp), %r9              #  18    0xa00b0  4      OPC=movslq_r64_m32  
  leal -0x30(%r9), %eax           #  19    0xa00b4  4      OPC=leal_r32_m16    
  cmpl $0x9, %eax                 #  20    0xa00b8  3      OPC=cmpl_r32_imm8   
  jbe .L_a00c5                    #  21    0xa00bb  2      OPC=jbe_label       
  movslq 0x4(%rbp), %r9           #  22    0xa00bd  4      OPC=movslq_r64_m32  
  addq $0x4, %rbp                 #  23    0xa00c1  4      OPC=addq_r64_imm8   
.L_a00c5:                         #        0xa00c5  0      OPC=<label>         
  leaq (%rbx,%rbx,4), %rax        #  24    0xa00c5  4      OPC=leaq_r64_m16    
  addq $0x4, %rbp                 #  25    0xa00c9  4      OPC=addq_r64_imm8   
  leaq -0x30(%rax,%rax,1), %rbx   #  26    0xa00cd  5      OPC=leaq_r64_m16    
  leal 0x1(%rdx), %eax            #  27    0xa00d2  3      OPC=leal_r32_m16    
  addq %r9, %rbx                  #  28    0xa00d5  3      OPC=addq_r64_r64    
  subl $0x1, %r15d                #  29    0xa00d8  4      OPC=subl_r32_imm8   
  je .L_a01a8                     #  30    0xa00dc  6      OPC=je_label_1      
  cmpl $0x13, %eax                #  31    0xa00e2  3      OPC=cmpl_r32_imm8   
  je .L_a00f0                     #  32    0xa00e5  2      OPC=je_label        
  movl %eax, %edx                 #  33    0xa00e7  2      OPC=movl_r32_r32    
  jmpq .L_a00b0                   #  34    0xa00e9  2      OPC=jmpq_label      
  nop                             #  35    0xa00eb  1      OPC=nop             
  nop                             #  36    0xa00ec  1      OPC=nop             
  nop                             #  37    0xa00ed  1      OPC=nop             
  nop                             #  38    0xa00ee  1      OPC=nop             
  nop                             #  39    0xa00ef  1      OPC=nop             
.L_a00f0:                         #        0xa00f0  0      OPC=<label>         
  movq (%r13), %rdx               #  40    0xa00f0  4      OPC=movq_r64_m64    
  testq %rdx, %rdx                #  41    0xa00f4  3      OPC=testq_r64_r64   
  jne .L_a0110                    #  42    0xa00f7  2      OPC=jne_label       
  xorb %al, %al                   #  43    0xa00f9  2      OPC=xorb_r8_r8      
  movq %rbx, (%r14)               #  44    0xa00fb  3      OPC=movq_m64_r64    
  movq $0x1, (%r13)               #  45    0xa00fe  8      OPC=movq_m64_imm32  
  xorl %ebx, %ebx                 #  46    0xa0106  2      OPC=xorl_r32_r32    
  movl %eax, %edx                 #  47    0xa0108  2      OPC=movl_r32_r32    
  jmpq .L_a00b0                   #  48    0xa010a  2      OPC=jmpq_label      
  nop                             #  49    0xa010c  1      OPC=nop             
  nop                             #  50    0xa010d  1      OPC=nop             
  nop                             #  51    0xa010e  1      OPC=nop             
  nop                             #  52    0xa010f  1      OPC=nop             
.L_a0110:                         #        0xa0110  0      OPC=<label>         
  movq %r14, %rsi                 #  53    0xa0110  3      OPC=movq_r64_r64    
  movq $0x8ac7230489e80000, %rcx  #  54    0xa0113  10     OPC=movq_r64_imm64  
  movq %r14, %rdi                 #  55    0xa011d  3      OPC=movq_r64_r64    
  callq .__mpn_mul_1              #  56    0xa0120  5      OPC=callq_label     
  movq (%r14), %rdx               #  57    0xa0125  3      OPC=movq_r64_m64    
  movq (%r13), %rsi               #  58    0xa0128  4      OPC=movq_r64_m64    
  leaq (%rbx,%rdx,1), %r9         #  59    0xa012c  4      OPC=leaq_r64_m16    
  cmpq %r9, %rdx                  #  60    0xa0130  3      OPC=cmpq_r64_r64    
  movq %r9, (%r14)                #  61    0xa0133  3      OPC=movq_m64_r64    
  jbe .L_a0178                    #  62    0xa0136  2      OPC=jbe_label       
  leaq 0x8(%r14), %rcx            #  63    0xa0138  4      OPC=leaq_r64_m16    
  jmpq .L_a0155                   #  64    0xa013c  2      OPC=jmpq_label      
  xchgw %ax, %ax                  #  65    0xa013e  2      OPC=xchgw_ax_r16    
.L_a0140:                         #        0xa0140  0      OPC=<label>         
  addq $0x8, %rcx                 #  66    0xa0140  4      OPC=addq_r64_imm8   
  movq -0x8(%rcx), %rdi           #  67    0xa0144  4      OPC=movq_r64_m64    
  leaq 0x1(%rdi), %rdx            #  68    0xa0148  4      OPC=leaq_r64_m16    
  testq %rdx, %rdx                #  69    0xa014c  3      OPC=testq_r64_r64   
  movq %rdx, -0x8(%rcx)           #  70    0xa014f  4      OPC=movq_m64_r64    
  jne .L_a0178                    #  71    0xa0153  2      OPC=jne_label       
.L_a0155:                         #        0xa0155  0      OPC=<label>         
  subq $0x1, %rsi                 #  72    0xa0155  4      OPC=subq_r64_imm8   
  jne .L_a0140                    #  73    0xa0159  2      OPC=jne_label       
  movl $0x1, %edx                 #  74    0xa015b  5      OPC=movl_r32_imm32  
  addq %rdx, %rax                 #  75    0xa0160  3      OPC=addq_r64_r64    
  jne .L_a017f                    #  76    0xa0163  2      OPC=jne_label       
  nop                             #  77    0xa0165  1      OPC=nop             
  nop                             #  78    0xa0166  1      OPC=nop             
  nop                             #  79    0xa0167  1      OPC=nop             
.L_a0168:                         #        0xa0168  0      OPC=<label>         
  xorl %eax, %eax                 #  80    0xa0168  2      OPC=xorl_r32_r32    
  xorl %ebx, %ebx                 #  81    0xa016a  2      OPC=xorl_r32_r32    
  movl %eax, %edx                 #  82    0xa016c  2      OPC=movl_r32_r32    
  jmpq .L_a00b0                   #  83    0xa016e  5      OPC=jmpq_label_1    
  nop                             #  84    0xa0173  1      OPC=nop             
  nop                             #  85    0xa0174  1      OPC=nop             
  nop                             #  86    0xa0175  1      OPC=nop             
  nop                             #  87    0xa0176  1      OPC=nop             
  nop                             #  88    0xa0177  1      OPC=nop             
.L_a0178:                         #        0xa0178  0      OPC=<label>         
  xorl %edx, %edx                 #  89    0xa0178  2      OPC=xorl_r32_r32    
  addq %rdx, %rax                 #  90    0xa017a  3      OPC=addq_r64_r64    
  je .L_a0168                     #  91    0xa017d  2      OPC=je_label        
.L_a017f:                         #        0xa017f  0      OPC=<label>         
  movq (%r13), %rdx               #  92    0xa017f  4      OPC=movq_r64_m64    
  cmpq $0x9, %rdx                 #  93    0xa0183  4      OPC=cmpq_r64_imm8   
  jg .L_a02c8                     #  94    0xa0187  6      OPC=jg_label_1      
  movq %rax, (%r14,%rdx,8)        #  95    0xa018d  4      OPC=movq_m64_r64    
  xorl %eax, %eax                 #  96    0xa0191  2      OPC=xorl_r32_r32    
  addq $0x1, (%r13)               #  97    0xa0193  5      OPC=addq_m64_imm8   
  xorl %ebx, %ebx                 #  98    0xa0198  2      OPC=xorl_r32_r32    
  movl %eax, %edx                 #  99    0xa019a  2      OPC=movl_r32_r32    
  jmpq .L_a00b0                   #  100   0xa019c  5      OPC=jmpq_label_1    
  nop                             #  101   0xa01a1  1      OPC=nop             
  nop                             #  102   0xa01a2  1      OPC=nop             
  nop                             #  103   0xa01a3  1      OPC=nop             
  nop                             #  104   0xa01a4  1      OPC=nop             
  nop                             #  105   0xa01a5  1      OPC=nop             
  nop                             #  106   0xa01a6  1      OPC=nop             
  nop                             #  107   0xa01a7  1      OPC=nop             
.L_a01a8:                         #        0xa01a8  0      OPC=<label>         
  movq (%r12), %rsi               #  108   0xa01a8  4      OPC=movq_r64_m64    
  testq %rsi, %rsi                #  109   0xa01ac  3      OPC=testq_r64_r64   
  jle .L_a01c0                    #  110   0xa01af  2      OPC=jle_label       
  movl $0x12, %ecx                #  111   0xa01b1  5      OPC=movl_r32_imm32  
  subl %edx, %ecx                 #  112   0xa01b6  2      OPC=subl_r32_r32    
  movslq %ecx, %rdx               #  113   0xa01b8  3      OPC=movslq_r64_r32  
  cmpq %rdx, %rsi                 #  114   0xa01bb  3      OPC=cmpq_r64_r64    
  jle .L_a01f8                    #  115   0xa01be  2      OPC=jle_label       
.L_a01c0:                         #        0xa01c0  0      OPC=<label>         
  leaq 0xb8ff9(%rip), %rdx        #  116   0xa01c0  7      OPC=leaq_r64_m16    
  cltq                            #  117   0xa01c7  2      OPC=cltq            
  movq (%rdx,%rax,8), %rcx        #  118   0xa01c9  4      OPC=movq_r64_m64    
  movq (%r13), %rdx               #  119   0xa01cd  4      OPC=movq_r64_m64    
  testq %rdx, %rdx                #  120   0xa01d1  3      OPC=testq_r64_r64   
  jne .L_a021e                    #  121   0xa01d4  2      OPC=jne_label       
.L_a01d6:                         #        0xa01d6  0      OPC=<label>         
  movq %rbx, (%r14)               #  122   0xa01d6  3      OPC=movq_m64_r64    
  movq $0x1, (%r13)               #  123   0xa01d9  8      OPC=movq_m64_imm32  
.L_a01e1:                         #        0xa01e1  0      OPC=<label>         
  addq $0x8, %rsp                 #  124   0xa01e1  4      OPC=addq_r64_imm8   
  movq %rbp, %rax                 #  125   0xa01e5  3      OPC=movq_r64_r64    
  popq %rbx                       #  126   0xa01e8  1      OPC=popq_r64_1      
  popq %rbp                       #  127   0xa01e9  1      OPC=popq_r64_1      
  popq %r12                       #  128   0xa01ea  2      OPC=popq_r64_1      
  popq %r13                       #  129   0xa01ec  2      OPC=popq_r64_1      
  popq %r14                       #  130   0xa01ee  2      OPC=popq_r64_1      
  popq %r15                       #  131   0xa01f0  2      OPC=popq_r64_1      
  retq                            #  132   0xa01f2  1      OPC=retq            
  nop                             #  133   0xa01f3  1      OPC=nop             
  nop                             #  134   0xa01f4  1      OPC=nop             
  nop                             #  135   0xa01f5  1      OPC=nop             
  nop                             #  136   0xa01f6  1      OPC=nop             
  nop                             #  137   0xa01f7  1      OPC=nop             
.L_a01f8:                         #        0xa01f8  0      OPC=<label>         
  leaq 0xb8fc1(%rip), %rdx        #  138   0xa01f8  7      OPC=leaq_r64_m16    
  cltq                            #  139   0xa01ff  2      OPC=cltq            
  movq $0x0, (%r12)               #  140   0xa0201  8      OPC=movq_m64_imm32  
  addq %rsi, %rax                 #  141   0xa0209  3      OPC=addq_r64_r64    
  imulq (%rdx,%rsi,8), %rbx       #  142   0xa020c  5      OPC=imulq_r64_m64   
  movq (%rdx,%rax,8), %rcx        #  143   0xa0211  4      OPC=movq_r64_m64    
  movq (%r13), %rdx               #  144   0xa0215  4      OPC=movq_r64_m64    
  testq %rdx, %rdx                #  145   0xa0219  3      OPC=testq_r64_r64   
  je .L_a01d6                     #  146   0xa021c  2      OPC=je_label        
.L_a021e:                         #        0xa021e  0      OPC=<label>         
  movq %r14, %rsi                 #  147   0xa021e  3      OPC=movq_r64_r64    
  movq %r14, %rdi                 #  148   0xa0221  3      OPC=movq_r64_r64    
  callq .__mpn_mul_1              #  149   0xa0224  5      OPC=callq_label     
  movq (%r14), %rdx               #  150   0xa0229  3      OPC=movq_r64_m64    
  movq (%r13), %rsi               #  151   0xa022c  4      OPC=movq_r64_m64    
  leaq (%rbx,%rdx,1), %r9         #  152   0xa0230  4      OPC=leaq_r64_m16    
  cmpq %r9, %rdx                  #  153   0xa0234  3      OPC=cmpq_r64_r64    
  movq %r9, (%r14)                #  154   0xa0237  3      OPC=movq_m64_r64    
  ja .L_a025b                     #  155   0xa023a  2      OPC=ja_label        
.L_a023c:                         #        0xa023c  0      OPC=<label>         
  xorl %edx, %edx                 #  156   0xa023c  2      OPC=xorl_r32_r32    
.L_a023e:                         #        0xa023e  0      OPC=<label>         
  addq %rdx, %rax                 #  157   0xa023e  3      OPC=addq_r64_r64    
  je .L_a01e1                     #  158   0xa0241  2      OPC=je_label        
  movq (%r13), %rdx               #  159   0xa0243  4      OPC=movq_r64_m64    
  cmpq $0x9, %rdx                 #  160   0xa0247  4      OPC=cmpq_r64_imm8   
  jg .L_a02a9                     #  161   0xa024b  2      OPC=jg_label        
  leaq 0x1(%rdx), %rcx            #  162   0xa024d  4      OPC=leaq_r64_m16    
  movq %rcx, (%r13)               #  163   0xa0251  4      OPC=movq_m64_r64    
  movq %rax, (%r14,%rdx,8)        #  164   0xa0255  4      OPC=movq_m64_r64    
  jmpq .L_a01e1                   #  165   0xa0259  2      OPC=jmpq_label      
.L_a025b:                         #        0xa025b  0      OPC=<label>         
  leaq 0x8(%r14), %rcx            #  166   0xa025b  4      OPC=leaq_r64_m16    
  jmpq .L_a027d                   #  167   0xa025f  2      OPC=jmpq_label      
  nop                             #  168   0xa0261  1      OPC=nop             
  nop                             #  169   0xa0262  1      OPC=nop             
  nop                             #  170   0xa0263  1      OPC=nop             
  nop                             #  171   0xa0264  1      OPC=nop             
  nop                             #  172   0xa0265  1      OPC=nop             
  nop                             #  173   0xa0266  1      OPC=nop             
  nop                             #  174   0xa0267  1      OPC=nop             
.L_a0268:                         #        0xa0268  0      OPC=<label>         
  addq $0x8, %rcx                 #  175   0xa0268  4      OPC=addq_r64_imm8   
  movq -0x8(%rcx), %rdi           #  176   0xa026c  4      OPC=movq_r64_m64    
  leaq 0x1(%rdi), %rdx            #  177   0xa0270  4      OPC=leaq_r64_m16    
  testq %rdx, %rdx                #  178   0xa0274  3      OPC=testq_r64_r64   
  movq %rdx, -0x8(%rcx)           #  179   0xa0277  4      OPC=movq_m64_r64    
  jne .L_a023c                    #  180   0xa027b  2      OPC=jne_label       
.L_a027d:                         #        0xa027d  0      OPC=<label>         
  subq $0x1, %rsi                 #  181   0xa027d  4      OPC=subq_r64_imm8   
  jne .L_a0268                    #  182   0xa0281  2      OPC=jne_label       
  movl $0x1, %edx                 #  183   0xa0283  5      OPC=movl_r32_imm32  
  jmpq .L_a023e                   #  184   0xa0288  2      OPC=jmpq_label      
.L_a028a:                         #        0xa028a  0      OPC=<label>         
  leaq 0xc3676(%rip), %rcx        #  185   0xa028a  7      OPC=leaq_r64_m16    
  leaq 0xc367a(%rip), %rsi        #  186   0xa0291  7      OPC=leaq_r64_m16    
  leaq 0xc358b(%rip), %rdi        #  187   0xa0298  7      OPC=leaq_r64_m16    
  movl $0x160, %edx               #  188   0xa029f  5      OPC=movl_r32_imm32  
  callq .__assert_fail            #  189   0xa02a4  5      OPC=callq_label     
.L_a02a9:                         #        0xa02a9  0      OPC=<label>         
  leaq 0xc3657(%rip), %rcx        #  190   0xa02a9  7      OPC=leaq_r64_m16    
  leaq 0xc365b(%rip), %rsi        #  191   0xa02b0  7      OPC=leaq_r64_m16    
  leaq 0xc3577(%rip), %rdi        #  192   0xa02b7  7      OPC=leaq_r64_m16    
  movl $0x1a9, %edx               #  193   0xa02be  5      OPC=movl_r32_imm32  
  callq .__assert_fail            #  194   0xa02c3  5      OPC=callq_label     
.L_a02c8:                         #        0xa02c8  0      OPC=<label>         
  leaq 0xc3638(%rip), %rcx        #  195   0xa02c8  7      OPC=leaq_r64_m16    
  leaq 0xc363c(%rip), %rsi        #  196   0xa02cf  7      OPC=leaq_r64_m16    
  leaq 0xc3558(%rip), %rdi        #  197   0xa02d6  7      OPC=leaq_r64_m16    
  movl $0x171, %edx               #  198   0xa02dd  5      OPC=movl_r32_imm32  
  callq .__assert_fail            #  199   0xa02e2  5      OPC=callq_label     
  nop                             #  200   0xa02e7  1      OPC=nop             
  nop                             #  201   0xa02e8  1      OPC=nop             
  nop                             #  202   0xa02e9  1      OPC=nop             
  nop                             #  203   0xa02ea  1      OPC=nop             
  nop                             #  204   0xa02eb  1      OPC=nop             
  nop                             #  205   0xa02ec  1      OPC=nop             
  nop                             #  206   0xa02ed  1      OPC=nop             
  nop                             #  207   0xa02ee  1      OPC=nop             
  nop                             #  208   0xa02ef  1      OPC=nop             
                                                                               
.size str_to_mpn, .-str_to_mpn

