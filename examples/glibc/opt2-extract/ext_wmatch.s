  .text
  .globl ext_wmatch
  .type ext_wmatch, @function

#! file-offset 0xbb1f0
#! rip-offset  0xbb1f0
#! capacity    1968 bytes

# Text                         #  Line  RIP      Bytes  Opcode                
.ext_wmatch:                   #        0xbb1f0  0      OPC=<label>           
  pushq %rbp                   #  1     0xbb1f0  1      OPC=pushq_r64_1       
  movq %rsp, %rbp              #  2     0xbb1f1  3      OPC=movq_r64_r64      
  pushq %r15                   #  3     0xbb1f4  2      OPC=pushq_r64_1       
  pushq %r14                   #  4     0xbb1f6  2      OPC=pushq_r64_1       
  pushq %r13                   #  5     0xbb1f8  2      OPC=pushq_r64_1       
  pushq %r12                   #  6     0xbb1fa  2      OPC=pushq_r64_1       
  movl %edi, %r13d             #  7     0xbb1fc  3      OPC=movl_r32_r32      
  pushq %rbx                   #  8     0xbb1ff  1      OPC=pushq_r64_1       
  movq %rsi, %r14              #  9     0xbb200  3      OPC=movq_r64_r64      
  movq %rsi, %rdi              #  10    0xbb203  3      OPC=movq_r64_r64      
  movq %rdx, %r12              #  11    0xbb206  3      OPC=movq_r64_r64      
  leal -0x3f(%r13), %ebx       #  12    0xbb209  4      OPC=leal_r32_m16      
  subq $0x68, %rsp             #  13    0xbb20d  4      OPC=subq_r64_imm8     
  movq %rcx, -0x58(%rbp)       #  14    0xbb211  4      OPC=movq_m64_r64      
  movl %r8d, -0x44(%rbp)       #  15    0xbb215  4      OPC=movl_m32_r32      
  movl %r9d, -0x60(%rbp)       #  16    0xbb219  4      OPC=movl_m32_r32      
  movq $0x0, -0x38(%rbp)       #  17    0xbb21d  8      OPC=movq_m64_imm32    
  callq .wcslen                #  18    0xbb225  5      OPC=callq_label       
  leaq 0x4(%r14), %rsi         #  19    0xbb22a  4      OPC=leaq_r64_m16      
  movq %rax, %rcx              #  20    0xbb22e  3      OPC=movq_r64_r64      
  leaq -0x38(%rbp), %rax       #  21    0xbb231  4      OPC=leaq_r64_m16      
  movl $0x0, -0x48(%rbp)       #  22    0xbb235  7      OPC=movl_m32_imm32    
  xorl %r8d, %r8d              #  23    0xbb23c  3      OPC=xorl_r32_r32      
  movq %rsi, %r15              #  24    0xbb23f  3      OPC=movq_r64_r64      
  movq %rax, -0x50(%rbp)       #  25    0xbb242  4      OPC=movq_m64_r64      
  nop                          #  26    0xbb246  1      OPC=nop               
  nop                          #  27    0xbb247  1      OPC=nop               
  nop                          #  28    0xbb248  1      OPC=nop               
  nop                          #  29    0xbb249  1      OPC=nop               
  nop                          #  30    0xbb24a  1      OPC=nop               
  nop                          #  31    0xbb24b  1      OPC=nop               
  nop                          #  32    0xbb24c  1      OPC=nop               
  nop                          #  33    0xbb24d  1      OPC=nop               
  nop                          #  34    0xbb24e  1      OPC=nop               
  nop                          #  35    0xbb24f  1      OPC=nop               
.L_bb250:                      #        0xbb250  0      OPC=<label>           
  movl (%r15), %eax            #  36    0xbb250  3      OPC=movl_r32_m32      
  testl %eax, %eax             #  37    0xbb253  2      OPC=testl_r32_r32     
  je .L_bb350                  #  38    0xbb255  6      OPC=je_label_1        
.L_bb25b:                      #        0xbb25b  0      OPC=<label>           
  cmpl $0x5b, %eax             #  39    0xbb25b  3      OPC=cmpl_r32_imm8     
  je .L_bb3c0                  #  40    0xbb25e  6      OPC=je_label_1        
  leal -0x3f(%rax), %edx       #  41    0xbb264  3      OPC=leal_r32_m16      
  cmpl $0x1, %edx              #  42    0xbb267  3      OPC=cmpl_r32_imm8     
  leal -0x2a(%rax), %edx       #  43    0xbb26a  3      OPC=leal_r32_m16      
  setbe %dil                   #  44    0xbb26d  4      OPC=setbe_r8          
  cmpl $0x1, %edx              #  45    0xbb271  3      OPC=cmpl_r32_imm8     
  setbe %dl                    #  46    0xbb274  3      OPC=setbe_r8          
  orb %dl, %dil                #  47    0xbb277  3      OPC=orb_r8_r8         
  jne .L_bb398                 #  48    0xbb27a  6      OPC=jne_label_1       
  cmpl $0x21, %eax             #  49    0xbb280  3      OPC=cmpl_r32_imm8     
  je .L_bb398                  #  50    0xbb283  6      OPC=je_label_1        
.L_bb289:                      #        0xbb289  0      OPC=<label>           
  cmpl $0x29, %eax             #  51    0xbb289  3      OPC=cmpl_r32_imm8     
  je .L_bb440                  #  52    0xbb28c  6      OPC=je_label_1        
  cmpl $0x7c, %eax             #  53    0xbb292  3      OPC=cmpl_r32_imm8     
  jne .L_bb3a7                 #  54    0xbb295  6      OPC=jne_label_1       
  testl %r8d, %r8d             #  55    0xbb29b  3      OPC=testl_r32_r32     
  jne .L_bb3a7                 #  56    0xbb29e  6      OPC=jne_label_1       
  cmpl $0x1, %ebx              #  57    0xbb2a4  3      OPC=cmpl_r32_imm8     
  movq %rcx, %rax              #  58    0xbb2a7  3      OPC=movq_r64_r64      
  jbe .L_bb2ba                 #  59    0xbb2aa  2      OPC=jbe_label         
  movq %r15, %rax              #  60    0xbb2ac  3      OPC=movq_r64_r64      
  subq %rsi, %rax              #  61    0xbb2af  3      OPC=subq_r64_r64      
  sarq $0x2, %rax              #  62    0xbb2b2  4      OPC=sarq_r64_imm8     
  addq $0x1, %rax              #  63    0xbb2b6  4      OPC=addq_r64_imm8     
.L_bb2ba:                      #        0xbb2ba  0      OPC=<label>           
  leaq 0x10(,%rax,4), %rdx     #  64    0xbb2ba  8      OPC=leaq_r64_m16      
  movq %rdx, %rdi              #  65    0xbb2c2  3      OPC=movq_r64_r64      
  addq 0x10(%rbp), %rdi        #  66    0xbb2c5  4      OPC=addq_r64_m64      
  cmpq $0x1000, %rdi           #  67    0xbb2c9  7      OPC=cmpq_r64_imm32    
  ja .L_bb890                  #  68    0xbb2d0  6      OPC=ja_label_1        
.L_bb2d6:                      #        0xbb2d6  0      OPC=<label>           
  movq %rsp, %rax              #  69    0xbb2d6  3      OPC=movq_r64_r64      
  addq $0x1e, %rdx             #  70    0xbb2d9  4      OPC=addq_r64_imm8     
  andq $0xf0, %rdx             #  71    0xbb2dd  4      OPC=andq_r64_imm8     
  subq %rdx, %rsp              #  72    0xbb2e1  3      OPC=subq_r64_r64      
  leaq 0xf(%rsp), %r8          #  73    0xbb2e4  5      OPC=leaq_r64_m16      
  andq $0xf0, %r8              #  74    0xbb2e9  4      OPC=andq_r64_imm8     
  subq %rsp, %rax              #  75    0xbb2ed  3      OPC=subq_r64_r64      
  addq %rax, 0x10(%rbp)        #  76    0xbb2f0  4      OPC=addq_m64_r64      
  xorl %eax, %eax              #  77    0xbb2f4  2      OPC=xorl_r32_r32      
.L_bb2f6:                      #        0xbb2f6  0      OPC=<label>           
  movq %r15, %rdx              #  78    0xbb2f6  3      OPC=movq_r64_r64      
  leaq 0xc(%r8), %rdi          #  79    0xbb2f9  4      OPC=leaq_r64_m16      
  movq $0x0, (%r8)             #  80    0xbb2fd  7      OPC=movq_m64_imm32    
  subq %rsi, %rdx              #  81    0xbb304  3      OPC=subq_r64_r64      
  movl %eax, 0x8(%r8)          #  82    0xbb307  4      OPC=movl_m32_r32      
  movq %rcx, -0x70(%rbp)       #  83    0xbb30b  4      OPC=movq_m64_r64      
  sarq $0x2, %rdx              #  84    0xbb30f  4      OPC=sarq_r64_imm8     
  movq %r8, -0x68(%rbp)        #  85    0xbb313  4      OPC=movq_m64_r64      
  callq .wmempcpy              #  86    0xbb317  5      OPC=callq_label       
  movq -0x68(%rbp), %r8        #  87    0xbb31c  4      OPC=movq_r64_m64      
  movl $0x0, (%rax)            #  88    0xbb320  6      OPC=movl_m32_imm32    
  leaq 0x4(%r15), %rsi         #  89    0xbb326  4      OPC=leaq_r64_m16      
  movq -0x50(%rbp), %rax       #  90    0xbb32a  4      OPC=movq_r64_m64      
  movq -0x70(%rbp), %rcx       #  91    0xbb32e  4      OPC=movq_r64_m64      
  movq %rsi, %r15              #  92    0xbb332  3      OPC=movq_r64_r64      
  movq %r8, -0x50(%rbp)        #  93    0xbb335  4      OPC=movq_m64_r64      
  movq %r8, (%rax)             #  94    0xbb339  3      OPC=movq_m64_r64      
  movl (%r15), %eax            #  95    0xbb33c  3      OPC=movl_r32_m32      
  xorl %r8d, %r8d              #  96    0xbb33f  3      OPC=xorl_r32_r32      
  testl %eax, %eax             #  97    0xbb342  2      OPC=testl_r32_r32     
  jne .L_bb25b                 #  98    0xbb344  6      OPC=jne_label_1       
  nop                          #  99    0xbb34a  1      OPC=nop               
  nop                          #  100   0xbb34b  1      OPC=nop               
  nop                          #  101   0xbb34c  1      OPC=nop               
  nop                          #  102   0xbb34d  1      OPC=nop               
  nop                          #  103   0xbb34e  1      OPC=nop               
  nop                          #  104   0xbb34f  1      OPC=nop               
.L_bb350:                      #        0xbb350  0      OPC=<label>           
  movl $0xffffffff, %r13d      #  105   0xbb350  7      OPC=movl_r32_imm32_1  
.L_bb356:                      #        0xbb357  0      OPC=<label>           
  movl -0x48(%rbp), %r9d       #  106   0xbb357  4      OPC=movl_r32_m32      
  testl %r9d, %r9d             #  107   0xbb35b  3      OPC=testl_r32_r32     
  je .L_bb380                  #  108   0xbb35e  2      OPC=je_label          
  movq -0x38(%rbp), %rdi       #  109   0xbb360  4      OPC=movq_r64_m64      
  jmpq .L_bb37b                #  110   0xbb364  2      OPC=jmpq_label        
  nop                          #  111   0xbb366  1      OPC=nop               
  nop                          #  112   0xbb367  1      OPC=nop               
  nop                          #  113   0xbb368  1      OPC=nop               
.L_bb368:                      #        0xbb369  0      OPC=<label>           
  movl 0x8(%rdi), %r8d         #  114   0xbb369  4      OPC=movl_r32_m32      
  movq (%rdi), %rbx            #  115   0xbb36d  3      OPC=movq_r64_m64      
  testl %r8d, %r8d             #  116   0xbb370  3      OPC=testl_r32_r32     
  jne .L_bb510                 #  117   0xbb373  6      OPC=jne_label_1       
  movq %rbx, %rdi              #  118   0xbb379  3      OPC=movq_r64_r64      
.L_bb37b:                      #        0xbb37c  0      OPC=<label>           
  testq %rdi, %rdi             #  119   0xbb37c  3      OPC=testq_r64_r64     
  jne .L_bb368                 #  120   0xbb37f  2      OPC=jne_label         
.L_bb380:                      #        0xbb381  0      OPC=<label>           
  leaq -0x28(%rbp), %rsp       #  121   0xbb381  4      OPC=leaq_r64_m16      
  movl %r13d, %eax             #  122   0xbb385  3      OPC=movl_r32_r32      
  popq %rbx                    #  123   0xbb388  1      OPC=popq_r64_1        
  popq %r12                    #  124   0xbb389  2      OPC=popq_r64_1        
  popq %r13                    #  125   0xbb38b  2      OPC=popq_r64_1        
  popq %r14                    #  126   0xbb38d  2      OPC=popq_r64_1        
  popq %r15                    #  127   0xbb38f  2      OPC=popq_r64_1        
  popq %rbp                    #  128   0xbb391  1      OPC=popq_r64_1        
  retq                         #  129   0xbb392  1      OPC=retq              
  nop                          #  130   0xbb393  1      OPC=nop               
  nop                          #  131   0xbb394  1      OPC=nop               
  nop                          #  132   0xbb395  1      OPC=nop               
  nop                          #  133   0xbb396  1      OPC=nop               
  nop                          #  134   0xbb397  1      OPC=nop               
  nop                          #  135   0xbb398  1      OPC=nop               
.L_bb398:                      #        0xbb399  0      OPC=<label>           
  cmpl $0x28, 0x4(%r15)        #  136   0xbb399  5      OPC=cmpl_m32_imm8     
  jne .L_bb289                 #  137   0xbb39e  6      OPC=jne_label_1       
  addl $0x1, %r8d              #  138   0xbb3a4  4      OPC=addl_r32_imm8     
.L_bb3a7:                      #        0xbb3a8  0      OPC=<label>           
  addq $0x4, %r15              #  139   0xbb3a8  4      OPC=addq_r64_imm8     
  testl %r8d, %r8d             #  140   0xbb3ac  3      OPC=testl_r32_r32     
  jns .L_bb250                 #  141   0xbb3af  6      OPC=jns_label_1       
.L_bb3b4:                      #        0xbb3b5  0      OPC=<label>           
  movq 0x10(%rbp), %rbx        #  142   0xbb3b5  4      OPC=movq_r64_m64      
  jmpq .L_bb4d6                #  143   0xbb3b9  5      OPC=jmpq_label_1      
  nop                          #  144   0xbb3be  1      OPC=nop               
  nop                          #  145   0xbb3bf  1      OPC=nop               
  nop                          #  146   0xbb3c0  1      OPC=nop               
.L_bb3c0:                      #        0xbb3c1  0      OPC=<label>           
  movl 0x2e2da5(%rip), %r10d   #  147   0xbb3c1  7      OPC=movl_r32_m32      
  testl %r10d, %r10d           #  148   0xbb3c8  3      OPC=testl_r32_r32     
  je .L_bb540                  #  149   0xbb3cb  6      OPC=je_label_1        
.L_bb3d0:                      #        0xbb3d1  0      OPC=<label>           
  movl 0x4(%r15), %eax         #  150   0xbb3d1  4      OPC=movl_r32_m32      
  cmpl $0x21, %eax             #  151   0xbb3d5  3      OPC=cmpl_r32_imm8     
  je .L_bb420                  #  152   0xbb3d8  2      OPC=je_label          
  cmpl $0x5e, %eax             #  153   0xbb3da  3      OPC=cmpl_r32_imm8     
  jne .L_bb3ea                 #  154   0xbb3dd  2      OPC=jne_label         
  movl 0x2e2d87(%rip), %r9d    #  155   0xbb3df  7      OPC=movl_r32_m32      
  testl %r9d, %r9d             #  156   0xbb3e6  3      OPC=testl_r32_r32     
  js .L_bb420                  #  157   0xbb3e9  2      OPC=js_label          
.L_bb3ea:                      #        0xbb3eb  0      OPC=<label>           
  addq $0x4, %r15              #  158   0xbb3eb  4      OPC=addq_r64_imm8     
  cmpl $0x5d, %eax             #  159   0xbb3ef  3      OPC=cmpl_r32_imm8     
  jne .L_bb407                 #  160   0xbb3f2  2      OPC=jne_label         
  jmpq .L_bb42d                #  161   0xbb3f4  2      OPC=jmpq_label        
  nop                          #  162   0xbb3f6  1      OPC=nop               
  nop                          #  163   0xbb3f7  1      OPC=nop               
  nop                          #  164   0xbb3f8  1      OPC=nop               
.L_bb3f8:                      #        0xbb3f9  0      OPC=<label>           
  addq $0x4, %r15              #  165   0xbb3f9  4      OPC=addq_r64_imm8     
  testl %eax, %eax             #  166   0xbb3fd  2      OPC=testl_r32_r32     
  je .L_bb350                  #  167   0xbb3ff  6      OPC=je_label_1        
  movl (%r15), %eax            #  168   0xbb405  3      OPC=movl_r32_m32      
.L_bb407:                      #        0xbb408  0      OPC=<label>           
  cmpl $0x5d, %eax             #  169   0xbb408  3      OPC=cmpl_r32_imm8     
  jne .L_bb3f8                 #  170   0xbb40b  2      OPC=jne_label         
  addq $0x4, %r15              #  171   0xbb40d  4      OPC=addq_r64_imm8     
  testl %r8d, %r8d             #  172   0xbb411  3      OPC=testl_r32_r32     
  jns .L_bb250                 #  173   0xbb414  6      OPC=jns_label_1       
  jmpq .L_bb3b4                #  174   0xbb41a  2      OPC=jmpq_label        
  nop                          #  175   0xbb41c  1      OPC=nop               
  nop                          #  176   0xbb41d  1      OPC=nop               
  nop                          #  177   0xbb41e  1      OPC=nop               
  nop                          #  178   0xbb41f  1      OPC=nop               
  nop                          #  179   0xbb420  1      OPC=nop               
.L_bb420:                      #        0xbb421  0      OPC=<label>           
  movl 0x8(%r15), %eax         #  180   0xbb421  4      OPC=movl_r32_m32      
  addq $0x8, %r15              #  181   0xbb425  4      OPC=addq_r64_imm8     
  cmpl $0x5d, %eax             #  182   0xbb429  3      OPC=cmpl_r32_imm8     
  jne .L_bb407                 #  183   0xbb42c  2      OPC=jne_label         
.L_bb42d:                      #        0xbb42e  0      OPC=<label>           
  movl 0x4(%r15), %eax         #  184   0xbb42e  4      OPC=movl_r32_m32      
  addq $0x4, %r15              #  185   0xbb432  4      OPC=addq_r64_imm8     
  jmpq .L_bb407                #  186   0xbb436  2      OPC=jmpq_label        
  nop                          #  187   0xbb438  1      OPC=nop               
  nop                          #  188   0xbb439  1      OPC=nop               
  nop                          #  189   0xbb43a  1      OPC=nop               
  nop                          #  190   0xbb43b  1      OPC=nop               
  nop                          #  191   0xbb43c  1      OPC=nop               
  nop                          #  192   0xbb43d  1      OPC=nop               
  nop                          #  193   0xbb43e  1      OPC=nop               
  nop                          #  194   0xbb43f  1      OPC=nop               
  nop                          #  195   0xbb440  1      OPC=nop               
.L_bb440:                      #        0xbb441  0      OPC=<label>           
  testl %r8d, %r8d             #  196   0xbb441  3      OPC=testl_r32_r32     
  jne .L_bb528                 #  197   0xbb444  6      OPC=jne_label_1       
  leal -0x3f(%r13), %eax       #  198   0xbb44a  4      OPC=leal_r32_m16      
  movq 0x10(%rbp), %rbx        #  199   0xbb44e  4      OPC=movq_r64_m64      
  cmpl $0x1, %eax              #  200   0xbb452  3      OPC=cmpl_r32_imm8     
  jbe .L_bb464                 #  201   0xbb455  2      OPC=jbe_label         
  movq %r15, %rcx              #  202   0xbb457  3      OPC=movq_r64_r64      
  subq %rsi, %rcx              #  203   0xbb45a  3      OPC=subq_r64_r64      
  sarq $0x2, %rcx              #  204   0xbb45d  4      OPC=sarq_r64_imm8     
  addq $0x1, %rcx              #  205   0xbb461  4      OPC=addq_r64_imm8     
.L_bb464:                      #        0xbb465  0      OPC=<label>           
  leaq 0x10(,%rcx,4), %rdx     #  206   0xbb465  8      OPC=leaq_r64_m16      
  movq %rdx, %rdi              #  207   0xbb46d  3      OPC=movq_r64_r64      
  addq 0x10(%rbp), %rdi        #  208   0xbb470  4      OPC=addq_r64_m64      
  cmpq $0x1000, %rdi           #  209   0xbb474  7      OPC=cmpq_r64_imm32    
  ja .L_bb846                  #  210   0xbb47b  6      OPC=ja_label_1        
.L_bb480:                      #        0xbb481  0      OPC=<label>           
  movq %rsp, %rbx              #  211   0xbb481  3      OPC=movq_r64_r64      
  addq $0x1e, %rdx             #  212   0xbb484  4      OPC=addq_r64_imm8     
  andq $0xf0, %rdx             #  213   0xbb488  4      OPC=andq_r64_imm8     
  subq %rdx, %rsp              #  214   0xbb48c  3      OPC=subq_r64_r64      
  leaq 0xf(%rsp), %rcx         #  215   0xbb48f  5      OPC=leaq_r64_m16      
  andq $0xf0, %rcx             #  216   0xbb494  4      OPC=andq_r64_imm8     
  subq %rsp, %rbx              #  217   0xbb498  3      OPC=subq_r64_r64      
  addq 0x10(%rbp), %rbx        #  218   0xbb49b  4      OPC=addq_r64_m64      
  xorl %eax, %eax              #  219   0xbb49f  2      OPC=xorl_r32_r32      
.L_bb4a0:                      #        0xbb4a1  0      OPC=<label>           
  movq %r15, %rdx              #  220   0xbb4a1  3      OPC=movq_r64_r64      
  leaq 0xc(%rcx), %rdi         #  221   0xbb4a4  4      OPC=leaq_r64_m16      
  movq $0x0, (%rcx)            #  222   0xbb4a8  7      OPC=movq_m64_imm32    
  subq %rsi, %rdx              #  223   0xbb4af  3      OPC=subq_r64_r64      
  movl %eax, 0x8(%rcx)         #  224   0xbb4b2  3      OPC=movl_m32_r32      
  movq %rcx, -0x68(%rbp)       #  225   0xbb4b5  4      OPC=movq_m64_r64      
  sarq $0x2, %rdx              #  226   0xbb4b9  4      OPC=sarq_r64_imm8     
  addq $0x4, %r15              #  227   0xbb4bd  4      OPC=addq_r64_imm8     
  callq .wmempcpy              #  228   0xbb4c1  5      OPC=callq_label       
  movq -0x68(%rbp), %rcx       #  229   0xbb4c6  4      OPC=movq_r64_m64      
  movl $0x0, (%rax)            #  230   0xbb4ca  6      OPC=movl_m32_imm32    
  movq -0x50(%rbp), %rax       #  231   0xbb4d0  4      OPC=movq_r64_m64      
  movq %rcx, (%rax)            #  232   0xbb4d4  3      OPC=movq_m64_r64      
.L_bb4d6:                      #        0xbb4d7  0      OPC=<label>           
  movq -0x38(%rbp), %rax       #  233   0xbb4d7  4      OPC=movq_r64_m64      
  testq %rax, %rax             #  234   0xbb4db  3      OPC=testq_r64_r64     
  movq %rax, -0x50(%rbp)       #  235   0xbb4de  4      OPC=movq_m64_r64      
  je .L_bb917                  #  236   0xbb4e2  6      OPC=je_label_1        
  cmpl $0x29, -0x4(%r15)       #  237   0xbb4e8  5      OPC=cmpl_m32_imm8     
  jne .L_bb949                 #  238   0xbb4ed  6      OPC=jne_label_1       
  subl $0x21, %r13d            #  239   0xbb4f3  4      OPC=subl_r32_imm8     
  cmpl $0x1f, %r13d            #  240   0xbb4f7  4      OPC=cmpl_r32_imm8     
  ja .L_bb805                  #  241   0xbb4fb  6      OPC=ja_label_1        
  leaq 0xa4ead(%rip), %rax     #  242   0xbb501  7      OPC=leaq_r64_m16      
  movslq (%rax,%r13,4), %rdx   #  243   0xbb508  4      OPC=movslq_r64_m32    
  addq %rdx, %rax              #  244   0xbb50c  3      OPC=addq_r64_r64      
  jmpq %rax                    #  245   0xbb50f  2      OPC=jmpq_r64          
.L_bb510:                      #        0xbb511  0      OPC=<label>           
  movq %rbx, -0x38(%rbp)       #  246   0xbb511  4      OPC=movq_m64_r64      
  callq .L_1f8c0               #  247   0xbb515  5      OPC=callq_label       
  movq %rbx, %rdi              #  248   0xbb51a  3      OPC=movq_r64_r64      
  jmpq .L_bb37b                #  249   0xbb51d  5      OPC=jmpq_label_1      
  nop                          #  250   0xbb522  1      OPC=nop               
  nop                          #  251   0xbb523  1      OPC=nop               
  nop                          #  252   0xbb524  1      OPC=nop               
  nop                          #  253   0xbb525  1      OPC=nop               
  nop                          #  254   0xbb526  1      OPC=nop               
  nop                          #  255   0xbb527  1      OPC=nop               
  nop                          #  256   0xbb528  1      OPC=nop               
.L_bb528:                      #        0xbb529  0      OPC=<label>           
  subl $0x1, %r8d              #  257   0xbb529  4      OPC=subl_r32_imm8     
  addq $0x4, %r15              #  258   0xbb52d  4      OPC=addq_r64_imm8     
  testl %r8d, %r8d             #  259   0xbb531  3      OPC=testl_r32_r32     
  jns .L_bb250                 #  260   0xbb534  6      OPC=jns_label_1       
  jmpq .L_bb3b4                #  261   0xbb53a  5      OPC=jmpq_label_1      
  xchgw %ax, %ax               #  262   0xbb53f  2      OPC=xchgw_ax_r16      
.L_bb540:                      #        0xbb541  0      OPC=<label>           
  leaq 0xa9c0d(%rip), %rdi     #  263   0xbb541  7      OPC=leaq_r64_m16      
  movq %rcx, -0x78(%rbp)       #  264   0xbb548  4      OPC=movq_m64_r64      
  movq %rsi, -0x70(%rbp)       #  265   0xbb54c  4      OPC=movq_m64_r64      
  movl %r8d, -0x68(%rbp)       #  266   0xbb550  4      OPC=movl_m32_r32      
  callq .getenv                #  267   0xbb554  5      OPC=callq_label       
  cmpq $0x1, %rax              #  268   0xbb559  4      OPC=cmpq_r64_imm8     
  movq -0x78(%rbp), %rcx       #  269   0xbb55d  4      OPC=movq_r64_m64      
  movq -0x70(%rbp), %rsi       #  270   0xbb561  4      OPC=movq_r64_m64      
  sbbl %eax, %eax              #  271   0xbb565  2      OPC=sbbl_r32_r32      
  movl -0x68(%rbp), %r8d       #  272   0xbb567  4      OPC=movl_r32_m32      
  orl $0x1, %eax               #  273   0xbb56b  3      OPC=orl_r32_imm8      
  movl %eax, 0x2e2bf9(%rip)    #  274   0xbb56e  6      OPC=movl_m32_r32      
  jmpq .L_bb3d0                #  275   0xbb574  5      OPC=jmpq_label_1      
  subq $0x8, %rsp              #  276   0xbb579  4      OPC=subq_r64_imm8     
  movl -0x60(%rbp), %r8d       #  277   0xbb57d  4      OPC=movl_r32_m32      
  movl -0x44(%rbp), %ecx       #  278   0xbb581  3      OPC=movl_r32_m32      
  movq -0x58(%rbp), %rdx       #  279   0xbb584  4      OPC=movq_r64_m64      
  pushq %rbx                   #  280   0xbb588  1      OPC=pushq_r64_1       
  xorl %r9d, %r9d              #  281   0xbb589  3      OPC=xorl_r32_r32      
  movq %r12, %rsi              #  282   0xbb58c  3      OPC=movq_r64_r64      
  movq %r15, %rdi              #  283   0xbb58f  3      OPC=movq_r64_r64      
  xorl %r13d, %r13d            #  284   0xbb592  3      OPC=xorl_r32_r32      
  callq .internal_fnwmatch     #  285   0xbb595  5      OPC=callq_label       
  testl %eax, %eax             #  286   0xbb59a  2      OPC=testl_r32_r32     
  popq %r8                     #  287   0xbb59c  2      OPC=popq_r64_1        
  popq %r9                     #  288   0xbb59e  2      OPC=popq_r64_1        
  je .L_bb356                  #  289   0xbb5a0  6      OPC=je_label_1        
  movl -0x60(%rbp), %eax       #  290   0xbb5a6  3      OPC=movl_r32_m32      
  movq -0x50(%rbp), %r14       #  291   0xbb5a9  4      OPC=movq_r64_m64      
  movl %eax, %r13d             #  292   0xbb5ad  3      OPC=movl_r32_r32      
  andl $0xfffffffb, %r13d      #  293   0xbb5b0  7      OPC=andl_r32_imm32    
  nop                          #  294   0xbb5b7  1      OPC=nop               
  nop                          #  295   0xbb5b8  1      OPC=nop               
  nop                          #  296   0xbb5b9  1      OPC=nop               
  nop                          #  297   0xbb5ba  1      OPC=nop               
  testb $0x1, %al              #  298   0xbb5bb  2      OPC=testb_al_imm8     
  cmovnel %eax, %r13d          #  299   0xbb5bd  4      OPC=cmovnel_r32_r32   
  jmpq .L_bb5d0                #  300   0xbb5c1  2      OPC=jmpq_label        
  nop                          #  301   0xbb5c3  1      OPC=nop               
  nop                          #  302   0xbb5c4  1      OPC=nop               
  nop                          #  303   0xbb5c5  1      OPC=nop               
  nop                          #  304   0xbb5c6  1      OPC=nop               
  nop                          #  305   0xbb5c7  1      OPC=nop               
.L_bb5c0:                      #        0xbb5c8  0      OPC=<label>           
  movq (%r14), %r14            #  306   0xbb5c8  3      OPC=movq_r64_m64      
  testq %r14, %r14             #  307   0xbb5cb  3      OPC=testq_r64_r64     
  movq %r14, -0x38(%rbp)       #  308   0xbb5ce  4      OPC=movq_m64_r64      
  je .L_bb7fa                  #  309   0xbb5d2  6      OPC=je_label_1        
.L_bb5d0:                      #        0xbb5d8  0      OPC=<label>           
  leaq 0xc(%r14), %rdi         #  310   0xbb5d8  4      OPC=leaq_r64_m16      
  movq %r15, %rsi              #  311   0xbb5dc  3      OPC=movq_r64_r64      
  callq .wcscat                #  312   0xbb5df  5      OPC=callq_label       
  subq $0x8, %rsp              #  313   0xbb5e4  4      OPC=subq_r64_imm8     
  movl -0x44(%rbp), %ecx       #  314   0xbb5e8  3      OPC=movl_r32_m32      
  movq -0x58(%rbp), %rdx       #  315   0xbb5eb  4      OPC=movq_r64_m64      
  pushq %rbx                   #  316   0xbb5ef  1      OPC=pushq_r64_1       
  xorl %r9d, %r9d              #  317   0xbb5f0  3      OPC=xorl_r32_r32      
  movq %r12, %rsi              #  318   0xbb5f3  3      OPC=movq_r64_r64      
  movq %rax, %rdi              #  319   0xbb5f6  3      OPC=movq_r64_r64      
  movl %r13d, %r8d             #  320   0xbb5f9  3      OPC=movl_r32_r32      
  callq .internal_fnwmatch     #  321   0xbb5fc  5      OPC=callq_label       
  testl %eax, %eax             #  322   0xbb601  2      OPC=testl_r32_r32     
  popq %rsi                    #  323   0xbb603  1      OPC=popq_r64_1        
  popq %rdi                    #  324   0xbb604  1      OPC=popq_r64_1        
  jne .L_bb5c0                 #  325   0xbb605  2      OPC=jne_label         
.L_bb5ff:                      #        0xbb607  0      OPC=<label>           
  xorl %r13d, %r13d            #  326   0xbb607  3      OPC=xorl_r32_r32      
  jmpq .L_bb356                #  327   0xbb60a  5      OPC=jmpq_label_1      
  subq $0x8, %rsp              #  328   0xbb60f  4      OPC=subq_r64_imm8     
  movl -0x60(%rbp), %r8d       #  329   0xbb613  4      OPC=movl_r32_m32      
  movl -0x44(%rbp), %ecx       #  330   0xbb617  3      OPC=movl_r32_m32      
  movq -0x58(%rbp), %rdx       #  331   0xbb61a  4      OPC=movq_r64_m64      
  pushq %rbx                   #  332   0xbb61e  1      OPC=pushq_r64_1       
  xorl %r9d, %r9d              #  333   0xbb61f  3      OPC=xorl_r32_r32      
  movq %r12, %rsi              #  334   0xbb622  3      OPC=movq_r64_r64      
  movq %r15, %rdi              #  335   0xbb625  3      OPC=movq_r64_r64      
  xorl %r13d, %r13d            #  336   0xbb628  3      OPC=xorl_r32_r32      
  callq .internal_fnwmatch     #  337   0xbb62b  5      OPC=callq_label       
  testl %eax, %eax             #  338   0xbb630  2      OPC=testl_r32_r32     
  popq %rsi                    #  339   0xbb632  1      OPC=popq_r64_1        
  popq %rdi                    #  340   0xbb633  1      OPC=popq_r64_1        
  je .L_bb356                  #  341   0xbb634  6      OPC=je_label_1        
  movl -0x60(%rbp), %r13d      #  342   0xbb63a  4      OPC=movl_r32_m32      
  movq %r15, -0x70(%rbp)       #  343   0xbb63e  4      OPC=movq_m64_r64      
  movl %r13d, %eax             #  344   0xbb642  3      OPC=movl_r32_r32      
  andl $0xfffffffb, %eax       #  345   0xbb645  6      OPC=andl_r32_imm32    
  nop                          #  346   0xbb64b  1      OPC=nop               
  nop                          #  347   0xbb64c  1      OPC=nop               
  nop                          #  348   0xbb64d  1      OPC=nop               
  movl %eax, %esi              #  349   0xbb64e  2      OPC=movl_r32_r32      
  movl %eax, -0x78(%rbp)       #  350   0xbb650  3      OPC=movl_m32_r32      
  movl %r13d, %eax             #  351   0xbb653  3      OPC=movl_r32_r32      
  andl $0x1, %r13d             #  352   0xbb656  4      OPC=andl_r32_imm8     
  cmovnel %eax, %esi           #  353   0xbb65a  3      OPC=cmovnel_r32_r32   
  andl $0x5, %eax              #  354   0xbb65d  3      OPC=andl_r32_imm8     
  movl %esi, -0x68(%rbp)       #  355   0xbb660  3      OPC=movl_m32_r32      
  movq -0x50(%rbp), %rsi       #  356   0xbb663  4      OPC=movq_r64_m64      
  movl %eax, -0x84(%rbp)       #  357   0xbb667  6      OPC=movl_m32_r32      
  movq %rsi, -0x90(%rbp)       #  358   0xbb66d  7      OPC=movq_m64_r64      
  leaq -0x4(%r14), %rsi        #  359   0xbb674  4      OPC=leaq_r64_m16      
  movq -0x58(%rbp), %r14       #  360   0xbb678  4      OPC=movq_r64_m64      
  movq %rsi, -0x80(%rbp)       #  361   0xbb67c  4      OPC=movq_m64_r64      
.L_bb672:                      #        0xbb680  0      OPC=<label>           
  cmpq %r14, %r12              #  362   0xbb680  3      OPC=cmpq_r64_r64      
  ja .L_bb8e6                  #  363   0xbb683  6      OPC=ja_label_1        
  movq -0x90(%rbp), %rax       #  364   0xbb689  7      OPC=movq_r64_m64      
  movq %r12, %r15              #  365   0xbb690  3      OPC=movq_r64_r64      
  addq $0xc, %rax              #  366   0xbb693  4      OPC=addq_r64_imm8     
  movq %rax, -0x50(%rbp)       #  367   0xbb697  4      OPC=movq_m64_r64      
  jmpq .L_bb738                #  368   0xbb69b  5      OPC=jmpq_label_1      
  nop                          #  369   0xbb6a0  1      OPC=nop               
  nop                          #  370   0xbb6a1  1      OPC=nop               
  nop                          #  371   0xbb6a2  1      OPC=nop               
  nop                          #  372   0xbb6a3  1      OPC=nop               
  nop                          #  373   0xbb6a4  1      OPC=nop               
  nop                          #  374   0xbb6a5  1      OPC=nop               
.L_bb698:                      #        0xbb6a6  0      OPC=<label>           
  subq $0x8, %rsp              #  375   0xbb6a6  4      OPC=subq_r64_imm8     
  movl -0x78(%rbp), %r8d       #  376   0xbb6aa  4      OPC=movl_r32_m32      
  xorl %r9d, %r9d              #  377   0xbb6ae  3      OPC=xorl_r32_r32      
  pushq %rbx                   #  378   0xbb6b1  1      OPC=pushq_r64_1       
.L_bb6a4:                      #        0xbb6b2  0      OPC=<label>           
  movl -0x44(%rbp), %ecx       #  379   0xbb6b2  3      OPC=movl_r32_m32      
  movq -0x50(%rbp), %rdi       #  380   0xbb6b5  4      OPC=movq_r64_m64      
  movq %r15, %rdx              #  381   0xbb6b9  3      OPC=movq_r64_r64      
  movq %r12, %rsi              #  382   0xbb6bc  3      OPC=movq_r64_r64      
  callq .internal_fnwmatch     #  383   0xbb6bf  5      OPC=callq_label       
  testl %eax, %eax             #  384   0xbb6c4  2      OPC=testl_r32_r32     
  popq %rdx                    #  385   0xbb6c6  1      OPC=popq_r64_1        
  popq %rcx                    #  386   0xbb6c7  1      OPC=popq_r64_1        
  jne .L_bb72b                 #  387   0xbb6c8  2      OPC=jne_label         
  cmpq %r12, %r15              #  388   0xbb6ca  3      OPC=cmpq_r64_r64      
  je .L_bb968                  #  389   0xbb6cd  6      OPC=je_label_1        
  xorl %ecx, %ecx              #  390   0xbb6d3  2      OPC=xorl_r32_r32      
  cmpl $0x2f, -0x4(%r15)       #  391   0xbb6d5  5      OPC=cmpl_m32_imm8     
  je .L_bb824                  #  392   0xbb6da  6      OPC=je_label_1        
.L_bb6d2:                      #        0xbb6e0  0      OPC=<label>           
  subq $0x8, %rsp              #  393   0xbb6e0  4      OPC=subq_r64_imm8     
  movl -0x68(%rbp), %r8d       #  394   0xbb6e4  4      OPC=movl_r32_m32      
  movq -0x70(%rbp), %rdi       #  395   0xbb6e8  4      OPC=movq_r64_m64      
  pushq %rbx                   #  396   0xbb6ec  1      OPC=pushq_r64_1       
  xorl %r9d, %r9d              #  397   0xbb6ed  3      OPC=xorl_r32_r32      
  movq %r14, %rdx              #  398   0xbb6f0  3      OPC=movq_r64_r64      
  movq %r15, %rsi              #  399   0xbb6f3  3      OPC=movq_r64_r64      
  callq .internal_fnwmatch     #  400   0xbb6f6  5      OPC=callq_label       
  testl %eax, %eax             #  401   0xbb6fb  2      OPC=testl_r32_r32     
  popq %rdx                    #  402   0xbb6fd  1      OPC=popq_r64_1        
  popq %rcx                    #  403   0xbb6fe  1      OPC=popq_r64_1        
  je .L_bb5ff                  #  404   0xbb6ff  6      OPC=je_label_1        
  xorl %ecx, %ecx              #  405   0xbb705  2      OPC=xorl_r32_r32      
  cmpl $0x2f, -0x4(%r15)       #  406   0xbb707  5      OPC=cmpl_m32_imm8     
  je .L_bb835                  #  407   0xbb70c  6      OPC=je_label_1        
.L_bb704:                      #        0xbb712  0      OPC=<label>           
  subq $0x8, %rsp              #  408   0xbb712  4      OPC=subq_r64_imm8     
  movl -0x68(%rbp), %r8d       #  409   0xbb716  4      OPC=movl_r32_m32      
  movq -0x80(%rbp), %rdi       #  410   0xbb71a  4      OPC=movq_r64_m64      
  pushq %rbx                   #  411   0xbb71e  1      OPC=pushq_r64_1       
  xorl %r9d, %r9d              #  412   0xbb71f  3      OPC=xorl_r32_r32      
  movq %r14, %rdx              #  413   0xbb722  3      OPC=movq_r64_r64      
  movq %r15, %rsi              #  414   0xbb725  3      OPC=movq_r64_r64      
  callq .internal_fnwmatch     #  415   0xbb728  5      OPC=callq_label       
  testl %eax, %eax             #  416   0xbb72d  2      OPC=testl_r32_r32     
  popq %r10                    #  417   0xbb72f  2      OPC=popq_r64_1        
  popq %r11                    #  418   0xbb731  2      OPC=popq_r64_1        
  je .L_bb5ff                  #  419   0xbb733  6      OPC=je_label_1        
.L_bb72b:                      #        0xbb739  0      OPC=<label>           
  addq $0x4, %r15              #  420   0xbb739  4      OPC=addq_r64_imm8     
  cmpq %r15, %r14              #  421   0xbb73d  3      OPC=cmpq_r64_r64      
  jb .L_bb8e6                  #  422   0xbb740  6      OPC=jb_label_1        
.L_bb738:                      #        0xbb746  0      OPC=<label>           
  testl %r13d, %r13d           #  423   0xbb746  3      OPC=testl_r32_r32     
  je .L_bb698                  #  424   0xbb749  6      OPC=je_label_1        
  subq $0x8, %rsp              #  425   0xbb74f  4      OPC=subq_r64_imm8     
  xorl %r9d, %r9d              #  426   0xbb753  3      OPC=xorl_r32_r32      
  movl -0x60(%rbp), %r8d       #  427   0xbb756  4      OPC=movl_r32_m32      
  pushq %rbx                   #  428   0xbb75a  1      OPC=pushq_r64_1       
  jmpq .L_bb6a4                #  429   0xbb75b  5      OPC=jmpq_label_1      
  cmpq -0x58(%rbp), %r12       #  430   0xbb760  4      OPC=cmpq_r64_m64      
  ja .L_bb7fa                  #  431   0xbb764  6      OPC=ja_label_1        
  movl -0x60(%rbp), %eax       #  432   0xbb76a  3      OPC=movl_r32_m32      
  movq %r12, %r13              #  433   0xbb76d  3      OPC=movq_r64_r64      
  movq %r15, -0x60(%rbp)       #  434   0xbb770  4      OPC=movq_m64_r64      
  movl %eax, %r14d             #  435   0xbb774  3      OPC=movl_r32_r32      
  andl $0xfffffffb, %r14d      #  436   0xbb777  7      OPC=andl_r32_imm32    
  nop                          #  437   0xbb77e  1      OPC=nop               
  nop                          #  438   0xbb77f  1      OPC=nop               
  nop                          #  439   0xbb780  1      OPC=nop               
  nop                          #  440   0xbb781  1      OPC=nop               
  testb $0x1, %al              #  441   0xbb782  2      OPC=testb_al_imm8     
  cmovnel %eax, %r14d          #  442   0xbb784  4      OPC=cmovnel_r32_r32   
  andl $0x5, %eax              #  443   0xbb788  3      OPC=andl_r32_imm8     
  movl %eax, -0x68(%rbp)       #  444   0xbb78b  3      OPC=movl_m32_r32      
  nop                          #  445   0xbb78e  1      OPC=nop               
  nop                          #  446   0xbb78f  1      OPC=nop               
  nop                          #  447   0xbb790  1      OPC=nop               
  nop                          #  448   0xbb791  1      OPC=nop               
  nop                          #  449   0xbb792  1      OPC=nop               
  nop                          #  450   0xbb793  1      OPC=nop               
  nop                          #  451   0xbb794  1      OPC=nop               
.L_bb780:                      #        0xbb795  0      OPC=<label>           
  movq -0x50(%rbp), %r15       #  452   0xbb795  4      OPC=movq_r64_m64      
  nop                          #  453   0xbb799  1      OPC=nop               
  nop                          #  454   0xbb79a  1      OPC=nop               
  nop                          #  455   0xbb79b  1      OPC=nop               
  nop                          #  456   0xbb79c  1      OPC=nop               
.L_bb788:                      #        0xbb79d  0      OPC=<label>           
  subq $0x8, %rsp              #  457   0xbb79d  4      OPC=subq_r64_imm8     
  movl -0x44(%rbp), %ecx       #  458   0xbb7a1  3      OPC=movl_r32_m32      
  leaq 0xc(%r15), %rdi         #  459   0xbb7a4  4      OPC=leaq_r64_m16      
  pushq %rbx                   #  460   0xbb7a8  1      OPC=pushq_r64_1       
  xorl %r9d, %r9d              #  461   0xbb7a9  3      OPC=xorl_r32_r32      
  movq %r13, %rdx              #  462   0xbb7ac  3      OPC=movq_r64_r64      
  movl %r14d, %r8d             #  463   0xbb7af  3      OPC=movl_r32_r32      
  movq %r12, %rsi              #  464   0xbb7b2  3      OPC=movq_r64_r64      
  callq .internal_fnwmatch     #  465   0xbb7b5  5      OPC=callq_label       
  testl %eax, %eax             #  466   0xbb7ba  2      OPC=testl_r32_r32     
  popq %rdx                    #  467   0xbb7bc  1      OPC=popq_r64_1        
  popq %rcx                    #  468   0xbb7bd  1      OPC=popq_r64_1        
  je .L_bb7f0                  #  469   0xbb7be  2      OPC=je_label          
  movq (%r15), %r15            #  470   0xbb7c0  3      OPC=movq_r64_m64      
  testq %r15, %r15             #  471   0xbb7c3  3      OPC=testq_r64_r64     
  jne .L_bb788                 #  472   0xbb7c6  2      OPC=jne_label         
  cmpq %r12, %r13              #  473   0xbb7c8  3      OPC=cmpq_r64_r64      
  je .L_bb941                  #  474   0xbb7cb  6      OPC=je_label_1        
  xorl %ecx, %ecx              #  475   0xbb7d1  2      OPC=xorl_r32_r32      
  cmpl $0x2f, -0x4(%r13)       #  476   0xbb7d3  5      OPC=cmpl_m32_imm8     
  je .L_bb909                  #  477   0xbb7d8  6      OPC=je_label_1        
.L_bb7c9:                      #        0xbb7de  0      OPC=<label>           
  subq $0x8, %rsp              #  478   0xbb7de  4      OPC=subq_r64_imm8     
  movq -0x58(%rbp), %rdx       #  479   0xbb7e2  4      OPC=movq_r64_m64      
  movq -0x60(%rbp), %rdi       #  480   0xbb7e6  4      OPC=movq_r64_m64      
  pushq %rbx                   #  481   0xbb7ea  1      OPC=pushq_r64_1       
  xorl %r9d, %r9d              #  482   0xbb7eb  3      OPC=xorl_r32_r32      
  movl %r14d, %r8d             #  483   0xbb7ee  3      OPC=movl_r32_r32      
  movq %r13, %rsi              #  484   0xbb7f1  3      OPC=movq_r64_r64      
  callq .internal_fnwmatch     #  485   0xbb7f4  5      OPC=callq_label       
  testl %eax, %eax             #  486   0xbb7f9  2      OPC=testl_r32_r32     
  popq %r10                    #  487   0xbb7fb  2      OPC=popq_r64_1        
  popq %r11                    #  488   0xbb7fd  2      OPC=popq_r64_1        
  je .L_bb5ff                  #  489   0xbb7ff  6      OPC=je_label_1        
.L_bb7f0:                      #        0xbb805  0      OPC=<label>           
  addq $0x4, %r13              #  490   0xbb805  4      OPC=addq_r64_imm8     
  cmpq %r13, -0x58(%rbp)       #  491   0xbb809  4      OPC=cmpq_m64_r64      
  jae .L_bb780                 #  492   0xbb80d  2      OPC=jae_label         
.L_bb7fa:                      #        0xbb80f  0      OPC=<label>           
  movl $0x1, %r13d             #  493   0xbb80f  6      OPC=movl_r32_imm32    
  jmpq .L_bb356                #  494   0xbb815  5      OPC=jmpq_label_1      
.L_bb805:                      #        0xbb81a  0      OPC=<label>           
  leaq 0xa99a6(%rip), %rcx     #  495   0xbb81a  7      OPC=leaq_r64_m16      
  leaq 0xa9951(%rip), %rsi     #  496   0xbb821  7      OPC=leaq_r64_m16      
  leaq 0xad62e(%rip), %rdi     #  497   0xbb828  7      OPC=leaq_r64_m16      
  movl $0x4d9, %edx            #  498   0xbb82f  5      OPC=movl_r32_imm32    
  callq .__assert_fail         #  499   0xbb834  5      OPC=callq_label       
.L_bb824:                      #        0xbb839  0      OPC=<label>           
  xorl %ecx, %ecx              #  500   0xbb839  2      OPC=xorl_r32_r32      
  cmpl $0x5, -0x84(%rbp)       #  501   0xbb83b  7      OPC=cmpl_m32_imm8     
  sete %cl                     #  502   0xbb842  3      OPC=sete_r8           
  jmpq .L_bb6d2                #  503   0xbb845  5      OPC=jmpq_label_1      
.L_bb835:                      #        0xbb84a  0      OPC=<label>           
  xorl %ecx, %ecx              #  504   0xbb84a  2      OPC=xorl_r32_r32      
  cmpl $0x5, -0x84(%rbp)       #  505   0xbb84c  7      OPC=cmpl_m32_imm8     
  sete %cl                     #  506   0xbb853  3      OPC=sete_r8           
  jmpq .L_bb704                #  507   0xbb856  5      OPC=jmpq_label_1      
.L_bb846:                      #        0xbb85b  0      OPC=<label>           
  movq %rdx, -0x70(%rbp)       #  508   0xbb85b  4      OPC=movq_m64_r64      
  movq %rsi, -0x68(%rbp)       #  509   0xbb85f  4      OPC=movq_m64_r64      
  callq .__libc_alloca_cutoff  #  510   0xbb863  5      OPC=callq_label       
  testl %eax, %eax             #  511   0xbb868  2      OPC=testl_r32_r32     
  movq -0x68(%rbp), %rsi       #  512   0xbb86a  4      OPC=movq_r64_m64      
  movq -0x70(%rbp), %rdx       #  513   0xbb86e  4      OPC=movq_r64_m64      
  jne .L_bb480                 #  514   0xbb872  6      OPC=jne_label_1       
  movq %rdx, %rdi              #  515   0xbb878  3      OPC=movq_r64_r64      
  movq %rsi, -0x68(%rbp)       #  516   0xbb87b  4      OPC=movq_m64_r64      
  callq .memalign_plt          #  517   0xbb87f  5      OPC=callq_label       
  testq %rax, %rax             #  518   0xbb884  3      OPC=testq_r64_r64     
  movq %rax, %rcx              #  519   0xbb887  3      OPC=movq_r64_r64      
  je .L_bb936                  #  520   0xbb88a  6      OPC=je_label_1        
  movl $0x1, %eax              #  521   0xbb890  5      OPC=movl_r32_imm32    
  movl $0x1, -0x48(%rbp)       #  522   0xbb895  7      OPC=movl_m32_imm32    
  movq -0x68(%rbp), %rsi       #  523   0xbb89c  4      OPC=movq_r64_m64      
  jmpq .L_bb4a0                #  524   0xbb8a0  5      OPC=jmpq_label_1      
.L_bb890:                      #        0xbb8a5  0      OPC=<label>           
  movq %rcx, -0x78(%rbp)       #  525   0xbb8a5  4      OPC=movq_m64_r64      
  movq %rsi, -0x70(%rbp)       #  526   0xbb8a9  4      OPC=movq_m64_r64      
  movq %rdx, -0x68(%rbp)       #  527   0xbb8ad  4      OPC=movq_m64_r64      
  callq .__libc_alloca_cutoff  #  528   0xbb8b1  5      OPC=callq_label       
  testl %eax, %eax             #  529   0xbb8b6  2      OPC=testl_r32_r32     
  movq -0x68(%rbp), %rdx       #  530   0xbb8b8  4      OPC=movq_r64_m64      
  movq -0x70(%rbp), %rsi       #  531   0xbb8bc  4      OPC=movq_r64_m64      
  movq -0x78(%rbp), %rcx       #  532   0xbb8c0  4      OPC=movq_r64_m64      
  jne .L_bb2d6                 #  533   0xbb8c4  6      OPC=jne_label_1       
  movq %rdx, %rdi              #  534   0xbb8ca  3      OPC=movq_r64_r64      
  movq %rcx, -0x70(%rbp)       #  535   0xbb8cd  4      OPC=movq_m64_r64      
  movq %rsi, -0x68(%rbp)       #  536   0xbb8d1  4      OPC=movq_m64_r64      
  callq .memalign_plt          #  537   0xbb8d5  5      OPC=callq_label       
  testq %rax, %rax             #  538   0xbb8da  3      OPC=testq_r64_r64     
  movq %rax, %r8               #  539   0xbb8dd  3      OPC=movq_r64_r64      
  je .L_bb936                  #  540   0xbb8e0  2      OPC=je_label          
  movl $0x1, %eax              #  541   0xbb8e2  5      OPC=movl_r32_imm32    
  movl $0x1, -0x48(%rbp)       #  542   0xbb8e7  7      OPC=movl_m32_imm32    
  movq -0x68(%rbp), %rsi       #  543   0xbb8ee  4      OPC=movq_r64_m64      
  movq -0x70(%rbp), %rcx       #  544   0xbb8f2  4      OPC=movq_r64_m64      
  jmpq .L_bb2f6                #  545   0xbb8f6  5      OPC=jmpq_label_1      
.L_bb8e6:                      #        0xbb8fb  0      OPC=<label>           
  movq -0x90(%rbp), %rax       #  546   0xbb8fb  7      OPC=movq_r64_m64      
  movq (%rax), %rax            #  547   0xbb902  3      OPC=movq_r64_m64      
  testq %rax, %rax             #  548   0xbb905  3      OPC=testq_r64_r64     
  movq %rax, -0x90(%rbp)       #  549   0xbb908  7      OPC=movq_m64_r64      
  movq %rax, -0x38(%rbp)       #  550   0xbb90f  4      OPC=movq_m64_r64      
  jne .L_bb672                 #  551   0xbb913  6      OPC=jne_label_1       
  jmpq .L_bb7fa                #  552   0xbb919  5      OPC=jmpq_label_1      
.L_bb909:                      #        0xbb91e  0      OPC=<label>           
  xorl %ecx, %ecx              #  553   0xbb91e  2      OPC=xorl_r32_r32      
  cmpl $0x5, -0x68(%rbp)       #  554   0xbb920  4      OPC=cmpl_m32_imm8     
  sete %cl                     #  555   0xbb924  3      OPC=sete_r8           
  jmpq .L_bb7c9                #  556   0xbb927  5      OPC=jmpq_label_1      
.L_bb917:                      #        0xbb92c  0      OPC=<label>           
  leaq 0xa9894(%rip), %rcx     #  557   0xbb92c  7      OPC=leaq_r64_m16      
  leaq 0xa983f(%rip), %rsi     #  558   0xbb933  7      OPC=leaq_r64_m16      
  leaq 0xa9847(%rip), %rdi     #  559   0xbb93a  7      OPC=leaq_r64_m16      
  movl $0x474, %edx            #  560   0xbb941  5      OPC=movl_r32_imm32    
  callq .__assert_fail         #  561   0xbb946  5      OPC=callq_label       
.L_bb936:                      #        0xbb94b  0      OPC=<label>           
  movl $0xfffffffe, %r13d      #  562   0xbb94b  7      OPC=movl_r32_imm32_1  
  jmpq .L_bb356                #  563   0xbb952  5      OPC=jmpq_label_1      
.L_bb941:                      #        0xbb957  0      OPC=<label>           
  movl -0x44(%rbp), %ecx       #  564   0xbb957  3      OPC=movl_r32_m32      
  jmpq .L_bb7c9                #  565   0xbb95a  5      OPC=jmpq_label_1      
.L_bb949:                      #        0xbb95f  0      OPC=<label>           
  leaq 0xa9862(%rip), %rcx     #  566   0xbb95f  7      OPC=leaq_r64_m16      
  leaq 0xa980d(%rip), %rsi     #  567   0xbb966  7      OPC=leaq_r64_m16      
  leaq 0xa9822(%rip), %rdi     #  568   0xbb96d  7      OPC=leaq_r64_m16      
  movl $0x475, %edx            #  569   0xbb974  5      OPC=movl_r32_imm32    
  callq .__assert_fail         #  570   0xbb979  5      OPC=callq_label       
.L_bb968:                      #        0xbb97e  0      OPC=<label>           
  subq $0x8, %rsp              #  571   0xbb97e  4      OPC=subq_r64_imm8     
  movq -0x70(%rbp), %rdi       #  572   0xbb982  4      OPC=movq_r64_m64      
  movl -0x68(%rbp), %r8d       #  573   0xbb986  4      OPC=movl_r32_m32      
  movl -0x44(%rbp), %ecx       #  574   0xbb98a  3      OPC=movl_r32_m32      
  pushq %rbx                   #  575   0xbb98d  1      OPC=pushq_r64_1       
  xorl %r9d, %r9d              #  576   0xbb98e  3      OPC=xorl_r32_r32      
  movq %r15, %rsi              #  577   0xbb991  3      OPC=movq_r64_r64      
  movq %r14, %rdx              #  578   0xbb994  3      OPC=movq_r64_r64      
  callq .internal_fnwmatch     #  579   0xbb997  5      OPC=callq_label       
  testl %eax, %eax             #  580   0xbb99c  2      OPC=testl_r32_r32     
  popq %rsi                    #  581   0xbb99e  1      OPC=popq_r64_1        
  popq %rdi                    #  582   0xbb99f  1      OPC=popq_r64_1        
  jne .L_bb72b                 #  583   0xbb9a0  6      OPC=jne_label_1       
  jmpq .L_bb5ff                #  584   0xbb9a6  5      OPC=jmpq_label_1      
  nop                          #  585   0xbb9ab  1      OPC=nop               
  nop                          #  586   0xbb9ac  1      OPC=nop               
  nop                          #  587   0xbb9ad  1      OPC=nop               
  nop                          #  588   0xbb9ae  1      OPC=nop               
  nop                          #  589   0xbb9af  1      OPC=nop               
  nop                          #  590   0xbb9b0  1      OPC=nop               
  nop                          #  591   0xbb9b1  1      OPC=nop               
  nop                          #  592   0xbb9b2  1      OPC=nop               
  nop                          #  593   0xbb9b3  1      OPC=nop               
  nop                          #  594   0xbb9b4  1      OPC=nop               
  nop                          #  595   0xbb9b5  1      OPC=nop               
                                                                              
.size ext_wmatch, .-ext_wmatch

