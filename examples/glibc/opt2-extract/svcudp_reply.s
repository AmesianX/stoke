  .text
  .globl svcudp_reply
  .type svcudp_reply, @function

#! file-offset 0x112e10
#! rip-offset  0x112e10
#! capacity    640 bytes

# Text                              #  Line  RIP       Bytes  Opcode              
.svcudp_reply:                      #        0x112e10  0      OPC=<label>         
  pushq %r15                        #  1     0x112e10  2      OPC=pushq_r64_1     
  pushq %r14                        #  2     0x112e12  2      OPC=pushq_r64_1     
  pushq %r13                        #  3     0x112e14  2      OPC=pushq_r64_1     
  pushq %r12                        #  4     0x112e16  2      OPC=pushq_r64_1     
  movq %rsi, %r13                   #  5     0x112e18  3      OPC=movq_r64_r64    
  pushq %rbp                        #  6     0x112e1b  1      OPC=pushq_r64_1     
  pushq %rbx                        #  7     0x112e1c  1      OPC=pushq_r64_1     
  xorl %esi, %esi                   #  8     0x112e1d  2      OPC=xorl_r32_r32    
  movq %rdi, %rbp                   #  9     0x112e1f  3      OPC=movq_r64_r64    
  subq $0x18, %rsp                  #  10    0x112e22  4      OPC=subq_r64_imm8   
  movq 0x48(%rdi), %rbx             #  11    0x112e26  4      OPC=movq_r64_m64    
  movq 0x18(%rbx), %rax             #  12    0x112e2a  4      OPC=movq_r64_m64    
  leaq 0x10(%rbx), %r12             #  13    0x112e2e  4      OPC=leaq_r64_m16    
  movl $0x0, 0x10(%rbx)             #  14    0x112e32  7      OPC=movl_m32_imm32  
  movq %r12, %rdi                   #  15    0x112e39  3      OPC=movq_r64_r64    
  callq 0x28(%rax)                  #  16    0x112e3c  3      OPC=callq_m64       
  movq 0x8(%rbx), %rax              #  17    0x112e3f  4      OPC=movq_r64_m64    
  movq %r13, %rsi                   #  18    0x112e43  3      OPC=movq_r64_r64    
  movq %r12, %rdi                   #  19    0x112e46  3      OPC=movq_r64_r64    
  movq %rax, (%r13)                 #  20    0x112e49  4      OPC=movq_m64_r64    
  callq .xdr_replymsg_GLIBC_2_2_5   #  21    0x112e4d  5      OPC=callq_label     
  testl %eax, %eax                  #  22    0x112e52  2      OPC=testl_r32_r32   
  jne .L_112e70                     #  23    0x112e54  2      OPC=jne_label       
.L_112e56:                          #        0x112e56  0      OPC=<label>         
  xorl %eax, %eax                   #  24    0x112e56  2      OPC=xorl_r32_r32    
.L_112e58:                          #        0x112e58  0      OPC=<label>         
  addq $0x18, %rsp                  #  25    0x112e58  4      OPC=addq_r64_imm8   
  popq %rbx                         #  26    0x112e5c  1      OPC=popq_r64_1      
  popq %rbp                         #  27    0x112e5d  1      OPC=popq_r64_1      
  popq %r12                         #  28    0x112e5e  2      OPC=popq_r64_1      
  popq %r13                         #  29    0x112e60  2      OPC=popq_r64_1      
  popq %r14                         #  30    0x112e62  2      OPC=popq_r64_1      
  popq %r15                         #  31    0x112e64  2      OPC=popq_r64_1      
  retq                              #  32    0x112e66  1      OPC=retq            
  nop                               #  33    0x112e67  1      OPC=nop             
  nop                               #  34    0x112e68  1      OPC=nop             
  nop                               #  35    0x112e69  1      OPC=nop             
  nop                               #  36    0x112e6a  1      OPC=nop             
  nop                               #  37    0x112e6b  1      OPC=nop             
  nop                               #  38    0x112e6c  1      OPC=nop             
  nop                               #  39    0x112e6d  1      OPC=nop             
  nop                               #  40    0x112e6e  1      OPC=nop             
  nop                               #  41    0x112e6f  1      OPC=nop             
.L_112e70:                          #        0x112e70  0      OPC=<label>         
  movq 0x18(%rbx), %rax             #  42    0x112e70  4      OPC=movq_r64_m64    
  movq %r12, %rdi                   #  43    0x112e74  3      OPC=movq_r64_r64    
  callq 0x20(%rax)                  #  44    0x112e77  3      OPC=callq_m64       
  cmpq $0x0, 0x78(%rbp)             #  45    0x112e7a  5      OPC=cmpq_m64_imm8   
  movl %eax, %r12d                  #  46    0x112e7f  3      OPC=movl_r32_r32    
  jne .L_112f60                     #  47    0x112e82  6      OPC=jne_label_1     
  movq 0x40(%rbp), %rsi             #  48    0x112e88  4      OPC=movq_r64_m64    
  movl 0x10(%rbp), %r9d             #  49    0x112e8c  4      OPC=movl_r32_m32    
  leaq 0x14(%rbp), %r8              #  50    0x112e90  4      OPC=leaq_r64_m16    
  movl (%rbp), %edi                 #  51    0x112e94  3      OPC=movl_r32_m32    
  movslq %eax, %rdx                 #  52    0x112e97  3      OPC=movslq_r64_r32  
  xorl %ecx, %ecx                   #  53    0x112e9a  2      OPC=xorl_r32_r32    
  callq .sendto                     #  54    0x112e9c  5      OPC=callq_label     
  movl %eax, %edx                   #  55    0x112ea1  2      OPC=movl_r32_r32    
.L_112ea3:                          #        0x112ea3  0      OPC=<label>         
  cmpl %r12d, %edx                  #  56    0x112ea3  3      OPC=cmpl_r32_r32    
  jne .L_112e56                     #  57    0x112ea6  2      OPC=jne_label       
  testl %edx, %edx                  #  58    0x112ea8  2      OPC=testl_r32_r32   
  js .L_112f4c                      #  59    0x112eaa  6      OPC=js_label_1      
  cmpq $0x0, 0x1d0(%rbx)            #  60    0x112eb0  8      OPC=cmpq_m64_imm8   
  je .L_112f4c                      #  61    0x112eb8  6      OPC=je_label_1      
  movq 0x48(%rbp), %r14             #  62    0x112ebe  4      OPC=movq_r64_m64    
  movslq %edx, %r12                 #  63    0x112ec2  3      OPC=movslq_r64_r32  
  movq 0x1d0(%r14), %r13            #  64    0x112ec5  7      OPC=movq_r64_m64    
  movq 0x18(%r13), %rdx             #  65    0x112ecc  4      OPC=movq_r64_m64    
  movq 0x10(%r13), %rax             #  66    0x112ed0  4      OPC=movq_r64_m64    
  movq (%rax,%rdx,8), %rbx          #  67    0x112ed4  4      OPC=movq_r64_m64    
  testq %rbx, %rbx                  #  68    0x112ed8  3      OPC=testq_r64_r64   
  je .L_113033                      #  69    0x112edb  6      OPC=je_label_1      
  movq (%r13), %rax                 #  70    0x112ee1  4      OPC=movq_r64_m64    
  xorl %edx, %edx                   #  71    0x112ee5  2      OPC=xorl_r32_r32    
  leaq (,%rax,4), %rcx              #  72    0x112ee7  8      OPC=leaq_r64_m16    
  movq (%rbx), %rax                 #  73    0x112eef  3      OPC=movq_r64_m64    
  divq %rcx                         #  74    0x112ef2  3      OPC=divq_r64        
  movq 0x8(%r13), %rax              #  75    0x112ef5  4      OPC=movq_r64_m64    
  movl %edx, %edx                   #  76    0x112ef9  2      OPC=movl_r32_r32    
  leaq (%rax,%rdx,8), %rax          #  77    0x112efb  4      OPC=leaq_r64_m16    
  movq (%rax), %rcx                 #  78    0x112eff  3      OPC=movq_r64_m64    
  testq %rcx, %rcx                  #  79    0x112f02  3      OPC=testq_r64_r64   
  je .L_112f21                      #  80    0x112f05  2      OPC=je_label        
  cmpq %rcx, %rbx                   #  81    0x112f07  3      OPC=cmpq_r64_r64    
  jne .L_112f18                     #  82    0x112f0a  2      OPC=jne_label       
  jmpq .L_112f8c                    #  83    0x112f0c  2      OPC=jmpq_label      
  xchgw %ax, %ax                    #  84    0x112f0e  2      OPC=xchgw_ax_r16    
.L_112f10:                          #        0x112f10  0      OPC=<label>         
  cmpq %rdx, %rbx                   #  85    0x112f10  3      OPC=cmpq_r64_r64    
  je .L_112f88                      #  86    0x112f13  2      OPC=je_label        
  movq %rdx, %rcx                   #  87    0x112f15  3      OPC=movq_r64_r64    
.L_112f18:                          #        0x112f18  0      OPC=<label>         
  movq 0x40(%rcx), %rdx             #  88    0x112f18  4      OPC=movq_r64_m64    
  testq %rdx, %rdx                  #  89    0x112f1c  3      OPC=testq_r64_r64   
  jne .L_112f10                     #  90    0x112f1f  2      OPC=jne_label       
.L_112f21:                          #        0x112f21  0      OPC=<label>         
  leaq 0x53ca1(%rip), %rsi          #  91    0x112f21  7      OPC=leaq_r64_m16    
  movl $0x5, %edx                   #  92    0x112f28  5      OPC=movl_r32_imm32  
.L_112f2d:                          #        0x112f2d  0      OPC=<label>         
  leaq 0x50868(%rip), %rdi          #  93    0x112f2d  7      OPC=leaq_r64_m16    
  callq .__dcgettext                #  94    0x112f34  5      OPC=callq_label     
  leaq 0x535c3(%rip), %rsi          #  95    0x112f39  7      OPC=leaq_r64_m16    
  movq %rax, %rdx                   #  96    0x112f40  3      OPC=movq_r64_r64    
  xorl %edi, %edi                   #  97    0x112f43  2      OPC=xorl_r32_r32    
  xorl %eax, %eax                   #  98    0x112f45  2      OPC=xorl_r32_r32    
  callq .__fxprintf                 #  99    0x112f47  5      OPC=callq_label     
.L_112f4c:                          #        0x112f4c  0      OPC=<label>         
  movl $0x1, %eax                   #  100   0x112f4c  5      OPC=movl_r32_imm32  
  jmpq .L_112e58                    #  101   0x112f51  5      OPC=jmpq_label_1    
  nop                               #  102   0x112f56  1      OPC=nop             
  nop                               #  103   0x112f57  1      OPC=nop             
  nop                               #  104   0x112f58  1      OPC=nop             
  nop                               #  105   0x112f59  1      OPC=nop             
  nop                               #  106   0x112f5a  1      OPC=nop             
  nop                               #  107   0x112f5b  1      OPC=nop             
  nop                               #  108   0x112f5c  1      OPC=nop             
  nop                               #  109   0x112f5d  1      OPC=nop             
  nop                               #  110   0x112f5e  1      OPC=nop             
  nop                               #  111   0x112f5f  1      OPC=nop             
.L_112f60:                          #        0x112f60  0      OPC=<label>         
  movq 0x40(%rbp), %rax             #  112   0x112f60  4      OPC=movq_r64_m64    
  movl (%rbp), %edi                 #  113   0x112f64  3      OPC=movl_r32_m32    
  leaq 0x60(%rbp), %rsi             #  114   0x112f67  4      OPC=leaq_r64_m16    
  xorl %edx, %edx                   #  115   0x112f6b  2      OPC=xorl_r32_r32    
  movq %rax, 0x50(%rbp)             #  116   0x112f6d  4      OPC=movq_m64_r64    
  movslq %r12d, %rax                #  117   0x112f71  3      OPC=movslq_r64_r32  
  movq %rax, 0x58(%rbp)             #  118   0x112f74  4      OPC=movq_m64_r64    
  callq .sendmsg                    #  119   0x112f78  5      OPC=callq_label     
  movl %eax, %edx                   #  120   0x112f7d  2      OPC=movl_r32_r32    
  jmpq .L_112ea3                    #  121   0x112f7f  5      OPC=jmpq_label_1    
  nop                               #  122   0x112f84  1      OPC=nop             
  nop                               #  123   0x112f85  1      OPC=nop             
  nop                               #  124   0x112f86  1      OPC=nop             
  nop                               #  125   0x112f87  1      OPC=nop             
.L_112f88:                          #        0x112f88  0      OPC=<label>         
  leaq 0x40(%rcx), %rax             #  126   0x112f88  4      OPC=leaq_r64_m16    
.L_112f8c:                          #        0x112f8c  0      OPC=<label>         
  movq 0x40(%rbx), %rdx             #  127   0x112f8c  4      OPC=movq_r64_m64    
  movq %rdx, (%rax)                 #  128   0x112f90  3      OPC=movq_m64_r64    
  movl (%r14), %edx                 #  129   0x112f93  3      OPC=movl_r32_m32    
  movq 0x30(%rbx), %rsi             #  130   0x112f96  4      OPC=movq_r64_m64    
.L_112f9a:                          #        0x112f9a  0      OPC=<label>         
  movq 0x40(%rbp), %rax             #  131   0x112f9a  4      OPC=movq_r64_m64    
  leaq 0x10(%r14), %rdi             #  132   0x112f9e  4      OPC=leaq_r64_m16    
  movq %r12, 0x38(%rbx)             #  133   0x112fa2  4      OPC=movq_m64_r64    
  xorl %ecx, %ecx                   #  134   0x112fa6  2      OPC=xorl_r32_r32    
  movq %rax, 0x30(%rbx)             #  135   0x112fa8  4      OPC=movq_m64_r64    
  movq %rsi, 0x40(%rbp)             #  136   0x112fac  4      OPC=movq_m64_r64    
  callq .xdrmem_create_GLIBC_2_2_5  #  137   0x112fb0  5      OPC=callq_label     
  movq 0x30(%r13), %rdx             #  138   0x112fb5  4      OPC=movq_r64_m64    
  movq 0x8(%r14), %rax              #  139   0x112fb9  4      OPC=movq_r64_m64    
  movq %rdx, 0x8(%rbx)              #  140   0x112fbd  4      OPC=movq_m64_r64    
  movq 0x28(%r13), %rdx             #  141   0x112fc1  4      OPC=movq_r64_m64    
  movq %rax, (%rbx)                 #  142   0x112fc5  3      OPC=movq_m64_r64    
  movq %rdx, 0x10(%rbx)             #  143   0x112fc8  4      OPC=movq_m64_r64    
  movq 0x20(%r13), %rdx             #  144   0x112fcc  4      OPC=movq_r64_m64    
  movq %rdx, 0x18(%rbx)             #  145   0x112fd0  4      OPC=movq_m64_r64    
  movq 0x38(%r13), %rsi             #  146   0x112fd4  4      OPC=movq_r64_m64    
  movq 0x40(%r13), %rdi             #  147   0x112fd8  4      OPC=movq_r64_m64    
  movq %rsi, 0x20(%rbx)             #  148   0x112fdc  4      OPC=movq_m64_r64    
  movq %rdi, 0x28(%rbx)             #  149   0x112fe0  4      OPC=movq_m64_r64    
  movq 0x48(%rbp), %rdx             #  150   0x112fe4  4      OPC=movq_r64_m64    
  movq 0x1d0(%rdx), %rdx            #  151   0x112fe8  7      OPC=movq_r64_m64    
  movq (%rdx), %rcx                 #  152   0x112fef  3      OPC=movq_r64_m64    
  xorl %edx, %edx                   #  153   0x112ff2  2      OPC=xorl_r32_r32    
  shlq $0x2, %rcx                   #  154   0x112ff4  4      OPC=shlq_r64_imm8   
  divq %rcx                         #  155   0x112ff8  3      OPC=divq_r64        
  movl %edx, %eax                   #  156   0x112ffb  2      OPC=movl_r32_r32    
  movq 0x8(%r13), %rdx              #  157   0x112ffd  4      OPC=movq_r64_m64    
  leaq (%rdx,%rax,8), %rax          #  158   0x113001  4      OPC=leaq_r64_m16    
  movq (%rax), %rdx                 #  159   0x113005  3      OPC=movq_r64_m64    
  movq %rdx, 0x40(%rbx)             #  160   0x113008  4      OPC=movq_m64_r64    
  movq %rbx, (%rax)                 #  161   0x11300c  3      OPC=movq_m64_r64    
  movq 0x18(%r13), %rax             #  162   0x11300f  4      OPC=movq_r64_m64    
  movq 0x10(%r13), %rdx             #  163   0x113013  4      OPC=movq_r64_m64    
  movq %rbx, (%rdx,%rax,8)          #  164   0x113017  4      OPC=movq_m64_r64    
  addq $0x1, %rax                   #  165   0x11301b  4      OPC=addq_r64_imm8   
  xorl %edx, %edx                   #  166   0x11301f  2      OPC=xorl_r32_r32    
  divq (%r13)                       #  167   0x113021  4      OPC=divq_m64        
  movl $0x1, %eax                   #  168   0x113025  5      OPC=movl_r32_imm32  
  movq %rdx, 0x18(%r13)             #  169   0x11302a  4      OPC=movq_m64_r64    
  jmpq .L_112e58                    #  170   0x11302e  5      OPC=jmpq_label_1    
.L_113033:                          #        0x113033  0      OPC=<label>         
  movl $0x48, %edi                  #  171   0x113033  5      OPC=movl_r32_imm32  
  callq .memalign_plt               #  172   0x113038  5      OPC=callq_label     
  testq %rax, %rax                  #  173   0x11303d  3      OPC=testq_r64_r64   
  movq %rax, %r15                   #  174   0x113040  3      OPC=movq_r64_r64    
  movq %rax, %rbx                   #  175   0x113043  3      OPC=movq_r64_r64    
  movl $0x5, %edx                   #  176   0x113046  5      OPC=movl_r32_imm32  
  leaq 0x56d9e(%rip), %rsi          #  177   0x11304b  7      OPC=leaq_r64_m16    
  je .L_112f2d                      #  178   0x113052  6      OPC=je_label_1      
  movl (%r14), %edi                 #  179   0x113058  3      OPC=movl_r32_m32    
  movl %edi, 0xc(%rsp)              #  180   0x11305b  4      OPC=movl_m32_r32    
  callq .memalign_plt               #  181   0x11305f  5      OPC=callq_label     
  testq %rax, %rax                  #  182   0x113064  3      OPC=testq_r64_r64   
  movq %rax, %rsi                   #  183   0x113067  3      OPC=movq_r64_r64    
  movl 0xc(%rsp), %edx              #  184   0x11306a  4      OPC=movl_r32_m32    
  jne .L_112f9a                     #  185   0x11306e  6      OPC=jne_label_1     
  movq %r15, %rdi                   #  186   0x113074  3      OPC=movq_r64_r64    
  callq .L_1f8c0                    #  187   0x113077  5      OPC=callq_label     
  movl $0x5, %edx                   #  188   0x11307c  5      OPC=movl_r32_imm32  
  leaq 0x56d88(%rip), %rsi          #  189   0x113081  7      OPC=leaq_r64_m16    
  jmpq .L_112f2d                    #  190   0x113088  5      OPC=jmpq_label_1    
  nop                               #  191   0x11308d  1      OPC=nop             
  nop                               #  192   0x11308e  1      OPC=nop             
  nop                               #  193   0x11308f  1      OPC=nop             
                                                                                  
.size svcudp_reply, .-svcudp_reply

