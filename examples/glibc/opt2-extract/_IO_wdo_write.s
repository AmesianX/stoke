  .text
  .globl _IO_wdo_write
  .type _IO_wdo_write, @function

#! file-offset 0x6bf50
#! rip-offset  0x6bf50
#! capacity    480 bytes

# Text                              #  Line  RIP      Bytes  Opcode               
._IO_wdo_write:                     #        0x6bf50  0      OPC=<label>          
  pushq %r15                        #  1     0x6bf50  2      OPC=pushq_r64_1      
  pushq %r14                        #  2     0x6bf52  2      OPC=pushq_r64_1      
  pushq %r13                        #  3     0x6bf54  2      OPC=pushq_r64_1      
  pushq %r12                        #  4     0x6bf56  2      OPC=pushq_r64_1      
  movq %rdx, %r12                   #  5     0x6bf58  3      OPC=movq_r64_r64     
  pushq %rbp                        #  6     0x6bf5b  1      OPC=pushq_r64_1      
  pushq %rbx                        #  7     0x6bf5c  1      OPC=pushq_r64_1      
  movq %rdi, %rbx                   #  8     0x6bf5d  3      OPC=movq_r64_r64     
  subq $0x48, %rsp                  #  9     0x6bf60  4      OPC=subq_r64_imm8    
  movq 0x98(%rdi), %rax             #  10    0x6bf64  7      OPC=movq_r64_m64     
  testq %rdx, %rdx                  #  11    0x6bf6b  3      OPC=testq_r64_r64    
  movq %rax, (%rsp)                 #  12    0x6bf6e  4      OPC=movq_m64_r64     
  je .L_6c080                       #  13    0x6bf72  6      OPC=je_label_1       
  movq 0x28(%rdi), %r9              #  14    0x6bf78  4      OPC=movq_r64_m64     
  cmpq %r9, 0x30(%rdi)              #  15    0x6bf7c  4      OPC=cmpq_m64_r64     
  movq %rsi, %r15                   #  16    0x6bf80  3      OPC=movq_r64_r64     
  movq 0x20(%rdi), %rsi             #  17    0x6bf83  4      OPC=movq_r64_m64     
  je .L_6c0be                       #  18    0x6bf87  6      OPC=je_label_1       
.L_6bf8d:                           #        0x6bf8d  0      OPC=<label>          
  leaq 0x20(%rsp), %rax             #  19    0x6bf8d  5      OPC=leaq_r64_m16     
  movq %rsi, %rbp                   #  20    0x6bf92  3      OPC=movq_r64_r64     
  movq %rax, 0x10(%rsp)             #  21    0x6bf95  5      OPC=movq_m64_r64     
  leaq 0x28(%rsp), %rax             #  22    0x6bf9a  5      OPC=leaq_r64_m16     
  movq %rax, 0x8(%rsp)              #  23    0x6bf9f  5      OPC=movq_m64_r64     
  leaq 0x30(%rsp), %rax             #  24    0x6bfa4  5      OPC=leaq_r64_m16     
  movq %rax, 0x18(%rsp)             #  25    0x6bfa9  5      OPC=movq_m64_r64     
  jmpq .L_6c057                     #  26    0x6bfae  5      OPC=jmpq_label_1     
  nop                               #  27    0x6bfb3  1      OPC=nop              
  nop                               #  28    0x6bfb4  1      OPC=nop              
  nop                               #  29    0x6bfb5  1      OPC=nop              
  nop                               #  30    0x6bfb6  1      OPC=nop              
  nop                               #  31    0x6bfb7  1      OPC=nop              
.L_6bfb8:                           #        0x6bfb8  0      OPC=<label>          
  movq 0x18(%rsp), %rbp             #  32    0x6bfb8  5      OPC=movq_r64_m64     
  leaq 0x40(%rsp), %rax             #  33    0x6bfbd  5      OPC=leaq_r64_m16     
  movq %rbp, 0x28(%rsp)             #  34    0x6bfc2  5      OPC=movq_m64_r64     
  movq %rbp, %r9                    #  35    0x6bfc7  3      OPC=movq_r64_r64     
  movq %rbp, %r13                   #  36    0x6bfca  3      OPC=movq_r64_r64     
.L_6bfcd:                           #        0x6bfcd  0      OPC=<label>          
  pushq 0x8(%rsp)                   #  37    0x6bfcd  4      OPC=pushq_m64        
  movq 0xa0(%rbx), %rdi             #  38    0x6bfd1  7      OPC=movq_r64_m64     
  leaq (%r15,%r12,4), %rcx          #  39    0x6bfd8  4      OPC=leaq_r64_m16     
  pushq %rax                        #  40    0x6bfdc  1      OPC=pushq_r64_1      
  movq 0x10(%rsp), %rax             #  41    0x6bfdd  5      OPC=movq_r64_m64     
  movq %r15, %rdx                   #  42    0x6bfe2  3      OPC=movq_r64_r64     
  movq 0x20(%rsp), %r8              #  43    0x6bfe5  5      OPC=movq_r64_m64     
  leaq 0x58(%rdi), %rsi             #  44    0x6bfea  4      OPC=leaq_r64_m16     
  movq %rax, %rdi                   #  45    0x6bfee  3      OPC=movq_r64_r64     
  callq 0x8(%rax)                   #  46    0x6bff1  3      OPC=callq_m64        
  movl %eax, %r14d                  #  47    0x6bff4  3      OPC=movl_r32_r32     
  movq %rbp, %rsi                   #  48    0x6bff7  3      OPC=movq_r64_r64     
  movq %rbx, %rdi                   #  49    0x6bffa  3      OPC=movq_r64_r64     
  popq %rax                         #  50    0x6bffd  1      OPC=popq_r64_1       
  popq %rdx                         #  51    0x6bffe  1      OPC=popq_r64_1       
  movq 0x28(%rsp), %rdx             #  52    0x6bfff  5      OPC=movq_r64_m64     
  subq %r13, %rdx                   #  53    0x6c004  3      OPC=subq_r64_r64     
  callq ._IO_do_write__GLIBC_2_2_5  #  54    0x6c007  5      OPC=callq_label      
  cmpl $0xffffffff, %eax            #  55    0x6c00c  6      OPC=cmpl_r32_imm32   
  nop                               #  56    0x6c012  1      OPC=nop              
  nop                               #  57    0x6c013  1      OPC=nop              
  nop                               #  58    0x6c014  1      OPC=nop              
  je .L_6c0af                       #  59    0x6c015  6      OPC=je_label_1       
  movq 0x20(%rsp), %rax             #  60    0x6c01b  5      OPC=movq_r64_m64     
  movq %rax, %rdx                   #  61    0x6c020  3      OPC=movq_r64_r64     
  subq %r15, %rdx                   #  62    0x6c023  3      OPC=subq_r64_r64     
  movq %rdx, %rsi                   #  63    0x6c026  3      OPC=movq_r64_r64     
  sarq $0x2, %rsi                   #  64    0x6c029  4      OPC=sarq_r64_imm8    
  subq %rsi, %r12                   #  65    0x6c02d  3      OPC=subq_r64_r64     
  testl %r14d, %r14d                #  66    0x6c030  3      OPC=testl_r32_r32    
  je .L_6c047                       #  67    0x6c033  2      OPC=je_label         
  cmpl $0x1, %r14d                  #  68    0x6c035  4      OPC=cmpl_r32_imm8    
  jne .L_6c0e8                      #  69    0x6c039  6      OPC=jne_label_1      
  addq $0x3, %rdx                   #  70    0x6c03f  4      OPC=addq_r64_imm8    
  cmpq $0x6, %rdx                   #  71    0x6c043  4      OPC=cmpq_r64_imm8    
  jbe .L_6c0e8                      #  72    0x6c047  6      OPC=jbe_label_1      
.L_6c047:                           #        0x6c04d  0      OPC=<label>          
  testq %r12, %r12                  #  73    0x6c04d  3      OPC=testq_r64_r64    
  je .L_6c080                       #  74    0x6c050  2      OPC=je_label         
  movq 0x28(%rbx), %r9              #  75    0x6c052  4      OPC=movq_r64_m64     
  movq 0x20(%rbx), %rbp             #  76    0x6c056  4      OPC=movq_r64_m64     
  movq %rax, %r15                   #  77    0x6c05a  3      OPC=movq_r64_r64     
.L_6c057:                           #        0x6c05d  0      OPC=<label>          
  movq %r9, %rax                    #  78    0x6c05d  3      OPC=movq_r64_r64     
  movq %rbp, %r13                   #  79    0x6c060  3      OPC=movq_r64_r64     
  subq %rbp, %rax                   #  80    0x6c063  3      OPC=subq_r64_r64     
  cmpq $0xf, %rax                   #  81    0x6c066  4      OPC=cmpq_r64_imm8    
  jbe .L_6bfb8                      #  82    0x6c06a  6      OPC=jbe_label_1      
  movq %r9, 0x28(%rsp)              #  83    0x6c070  5      OPC=movq_m64_r64     
  movq 0x40(%rbx), %rax             #  84    0x6c075  4      OPC=movq_r64_m64     
  jmpq .L_6bfcd                     #  85    0x6c079  5      OPC=jmpq_label_1     
  nop                               #  86    0x6c07e  1      OPC=nop              
  nop                               #  87    0x6c07f  1      OPC=nop              
  nop                               #  88    0x6c080  1      OPC=nop              
  nop                               #  89    0x6c081  1      OPC=nop              
  nop                               #  90    0x6c082  1      OPC=nop              
  nop                               #  91    0x6c083  1      OPC=nop              
  nop                               #  92    0x6c084  1      OPC=nop              
  nop                               #  93    0x6c085  1      OPC=nop              
.L_6c080:                           #        0x6c086  0      OPC=<label>          
  movq 0xa0(%rbx), %rdx             #  94    0x6c086  7      OPC=movq_r64_m64     
  movl (%rbx), %eax                 #  95    0x6c08d  2      OPC=movl_r32_m32     
  movq 0x30(%rdx), %rcx             #  96    0x6c08f  4      OPC=movq_r64_m64     
  andl $0x202, %eax                 #  97    0x6c093  5      OPC=andl_eax_imm32   
  movq %rcx, 0x10(%rdx)             #  98    0x6c098  4      OPC=movq_m64_r64     
  movq %rcx, (%rdx)                 #  99    0x6c09c  3      OPC=movq_m64_r64     
  movq %rcx, 0x8(%rdx)              #  100   0x6c09f  4      OPC=movq_m64_r64     
  movq %rcx, 0x20(%rdx)             #  101   0x6c0a3  4      OPC=movq_m64_r64     
  movq %rcx, 0x18(%rdx)             #  102   0x6c0a7  4      OPC=movq_m64_r64     
  jne .L_6c11a                      #  103   0x6c0ab  2      OPC=jne_label        
.L_6c0a7:                           #        0x6c0ad  0      OPC=<label>          
  movq 0x38(%rdx), %rcx             #  104   0x6c0ad  4      OPC=movq_r64_m64     
.L_6c0ab:                           #        0x6c0b1  0      OPC=<label>          
  movq %rcx, 0x28(%rdx)             #  105   0x6c0b1  4      OPC=movq_m64_r64     
.L_6c0af:                           #        0x6c0b5  0      OPC=<label>          
  addq $0x48, %rsp                  #  106   0x6c0b5  4      OPC=addq_r64_imm8    
  popq %rbx                         #  107   0x6c0b9  1      OPC=popq_r64_1       
  popq %rbp                         #  108   0x6c0ba  1      OPC=popq_r64_1       
  popq %r12                         #  109   0x6c0bb  2      OPC=popq_r64_1       
  popq %r13                         #  110   0x6c0bd  2      OPC=popq_r64_1       
  popq %r14                         #  111   0x6c0bf  2      OPC=popq_r64_1       
  popq %r15                         #  112   0x6c0c1  2      OPC=popq_r64_1       
  retq                              #  113   0x6c0c3  1      OPC=retq             
.L_6c0be:                           #        0x6c0c4  0      OPC=<label>          
  cmpq %rsi, %r9                    #  114   0x6c0c4  3      OPC=cmpq_r64_r64     
  je .L_6bf8d                       #  115   0x6c0c7  6      OPC=je_label_1       
  movq %r9, %rdx                    #  116   0x6c0cd  3      OPC=movq_r64_r64     
  subq %rsi, %rdx                   #  117   0x6c0d0  3      OPC=subq_r64_r64     
  callq ._IO_do_write__GLIBC_2_2_5  #  118   0x6c0d3  5      OPC=callq_label      
  cmpl $0xffffffff, %eax            #  119   0x6c0d8  6      OPC=cmpl_r32_imm32   
  nop                               #  120   0x6c0de  1      OPC=nop              
  nop                               #  121   0x6c0df  1      OPC=nop              
  nop                               #  122   0x6c0e0  1      OPC=nop              
  je .L_6c0af                       #  123   0x6c0e1  2      OPC=je_label         
  movq 0x28(%rbx), %r9              #  124   0x6c0e3  4      OPC=movq_r64_m64     
  movq 0x20(%rbx), %rsi             #  125   0x6c0e7  4      OPC=movq_r64_m64     
  jmpq .L_6bf8d                     #  126   0x6c0eb  5      OPC=jmpq_label_1     
  nop                               #  127   0x6c0f0  1      OPC=nop              
  nop                               #  128   0x6c0f1  1      OPC=nop              
  nop                               #  129   0x6c0f2  1      OPC=nop              
  nop                               #  130   0x6c0f3  1      OPC=nop              
.L_6c0e8:                           #        0x6c0f4  0      OPC=<label>          
  movq 0xa0(%rbx), %rdx             #  131   0x6c0f4  7      OPC=movq_r64_m64     
  xorl %eax, %eax                   #  132   0x6c0fb  2      OPC=xorl_r32_r32     
  testq %r12, %r12                  #  133   0x6c0fd  3      OPC=testq_r64_r64    
  setne %al                         #  134   0x6c100  3      OPC=setne_r8         
  negl %eax                         #  135   0x6c103  2      OPC=negl_r32         
  testl $0x202, (%rbx)              #  136   0x6c105  6      OPC=testl_m32_imm32  
  movq 0x30(%rdx), %rcx             #  137   0x6c10b  4      OPC=movq_r64_m64     
  movq %rcx, 0x10(%rdx)             #  138   0x6c10f  4      OPC=movq_m64_r64     
  movq %rcx, (%rdx)                 #  139   0x6c113  3      OPC=movq_m64_r64     
  movq %rcx, 0x8(%rdx)              #  140   0x6c116  4      OPC=movq_m64_r64     
  movq %rcx, 0x20(%rdx)             #  141   0x6c11a  4      OPC=movq_m64_r64     
  movq %rcx, 0x18(%rdx)             #  142   0x6c11e  4      OPC=movq_m64_r64     
  jne .L_6c0ab                      #  143   0x6c122  2      OPC=jne_label        
  jmpq .L_6c0a7                     #  144   0x6c124  2      OPC=jmpq_label       
.L_6c11a:                           #        0x6c126  0      OPC=<label>          
  movq %rcx, 0x28(%rdx)             #  145   0x6c126  4      OPC=movq_m64_r64     
  xorl %eax, %eax                   #  146   0x6c12a  2      OPC=xorl_r32_r32     
  jmpq .L_6c0af                     #  147   0x6c12c  2      OPC=jmpq_label       
  nop                               #  148   0x6c12e  1      OPC=nop              
  nop                               #  149   0x6c12f  1      OPC=nop              
  nop                               #  150   0x6c130  1      OPC=nop              
  nop                               #  151   0x6c131  1      OPC=nop              
  nop                               #  152   0x6c132  1      OPC=nop              
  nop                               #  153   0x6c133  1      OPC=nop              
  nop                               #  154   0x6c134  1      OPC=nop              
  nop                               #  155   0x6c135  1      OPC=nop              
  nop                               #  156   0x6c136  1      OPC=nop              
  nop                               #  157   0x6c137  1      OPC=nop              
  nop                               #  158   0x6c138  1      OPC=nop              
  nop                               #  159   0x6c139  1      OPC=nop              
  nop                               #  160   0x6c13a  1      OPC=nop              
  nop                               #  161   0x6c13b  1      OPC=nop              
                                                                                  
.size _IO_wdo_write, .-_IO_wdo_write

