  .text
  .globl __tz_convert
  .type __tz_convert, @function

#! file-offset 0xa8260
#! rip-offset  0xa8260
#! capacity    432 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
.__tz_convert:                      #        0xa8260  0      OPC=<label>           
  pushq %r12                        #  1     0xa8260  2      OPC=pushq_r64_1       
  pushq %rbp                        #  2     0xa8262  1      OPC=pushq_r64_1       
  movq %rdi, %rbp                   #  3     0xa8263  3      OPC=movq_r64_r64      
  pushq %rbx                        #  4     0xa8266  1      OPC=pushq_r64_1       
  subq $0x10, %rsp                  #  5     0xa8267  4      OPC=subq_r64_imm8     
  testq %rdi, %rdi                  #  6     0xa826b  3      OPC=testq_r64_r64     
  je .L_a83f0                       #  7     0xa826e  6      OPC=je_label_1        
  movl %esi, %r12d                  #  8     0xa8274  3      OPC=movl_r32_r32      
  movq %rdx, %rbx                   #  9     0xa8277  3      OPC=movq_r64_r64      
  movl $0x1, %esi                   #  10    0xa827a  5      OPC=movl_r32_imm32    
  xorl %eax, %eax                   #  11    0xa827f  2      OPC=xorl_r32_r32      
  cmpl $0x0, 0x2f8978(%rip)         #  12    0xa8281  7      OPC=cmpl_m32_imm8     
  je .L_a8296                       #  13    0xa8288  2      OPC=je_label          
  lock                              #  14    0xa828a  1      OPC=lock              
  cmpxchgl %esi, 0x2f5b4e(%rip)     #  15    0xa828b  7      OPC=cmpxchgl_m32_r32  
  nop                               #  16    0xa8292  1      OPC=nop               
  jne .L_a829f                      #  17    0xa8293  2      OPC=jne_label         
  jmpq .L_a82b9                     #  18    0xa8295  2      OPC=jmpq_label        
.L_a8296:                           #        0xa8297  0      OPC=<label>           
  cmpxchgl %esi, 0x2f5b43(%rip)     #  19    0xa8297  7      OPC=cmpxchgl_m32_r32  
  je .L_a82b9                       #  20    0xa829e  2      OPC=je_label          
.L_a829f:                           #        0xa82a0  0      OPC=<label>           
  leaq 0x2f5b3a(%rip), %rdi         #  21    0xa82a0  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  22    0xa82a7  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  23    0xa82ae  5      OPC=callq_label       
  addq $0x80, %rsp                  #  24    0xa82b3  7      OPC=addq_r64_imm32    
.L_a82b9:                           #        0xa82ba  0      OPC=<label>           
  leaq 0x2f86a0(%rip), %rax         #  25    0xa82ba  7      OPC=leaq_r64_m16      
  movl $0x1, %esi                   #  26    0xa82c1  5      OPC=movl_r32_imm32    
  cmpq %rax, %rdx                   #  27    0xa82c6  3      OPC=cmpq_r64_r64      
  sete %al                          #  28    0xa82c9  3      OPC=sete_r8           
  xorl %edi, %edi                   #  29    0xa82cc  2      OPC=xorl_r32_r32      
  testl %r12d, %r12d                #  30    0xa82ce  3      OPC=testl_r32_r32     
  setne %dil                        #  31    0xa82d1  4      OPC=setne_r8          
  andl %eax, %edi                   #  32    0xa82d5  2      OPC=andl_r32_r32      
  callq .tzset_internal             #  33    0xa82d7  5      OPC=callq_label       
  movl 0x2f86bf(%rip), %eax         #  34    0xa82dc  6      OPC=movl_r32_m32      
  testl %eax, %eax                  #  35    0xa82e2  2      OPC=testl_r32_r32     
  jne .L_a8380                      #  36    0xa82e4  6      OPC=jne_label_1       
  xorl %esi, %esi                   #  37    0xa82ea  2      OPC=xorl_r32_r32      
  movq %rbx, %rdx                   #  38    0xa82ec  3      OPC=movq_r64_r64      
  movq %rbp, %rdi                   #  39    0xa82ef  3      OPC=movq_r64_r64      
  callq .__offtime                  #  40    0xa82f2  5      OPC=callq_label       
  testl %eax, %eax                  #  41    0xa82f7  2      OPC=testl_r32_r32     
  jne .L_a83d8                      #  42    0xa82f9  6      OPC=jne_label_1       
  xorl %ebx, %ebx                   #  43    0xa82ff  2      OPC=xorl_r32_r32      
.L_a8300:                           #        0xa8301  0      OPC=<label>           
  movq $0x0, 0x8(%rsp)              #  44    0xa8301  9      OPC=movq_m64_imm32    
  movl $0x0, 0x4(%rsp)              #  45    0xa830a  8      OPC=movl_m32_imm32    
.L_a8311:                           #        0xa8312  0      OPC=<label>           
  cmpl $0x0, 0x2f88e8(%rip)         #  46    0xa8312  7      OPC=cmpl_m32_imm8     
  je .L_a8325                       #  47    0xa8319  2      OPC=je_label          
  lock                              #  48    0xa831b  1      OPC=lock              
  decl 0x2f5abf(%rip)               #  49    0xa831c  6      OPC=decl_m32          
  nop                               #  50    0xa8322  1      OPC=nop               
  jne .L_a832d                      #  51    0xa8323  2      OPC=jne_label         
  jmpq .L_a8347                     #  52    0xa8325  2      OPC=jmpq_label        
.L_a8325:                           #        0xa8327  0      OPC=<label>           
  decl 0x2f5ab5(%rip)               #  53    0xa8327  6      OPC=decl_m32          
  je .L_a8347                       #  54    0xa832d  2      OPC=je_label          
.L_a832d:                           #        0xa832f  0      OPC=<label>           
  leaq 0x2f5aac(%rip), %rdi         #  55    0xa832f  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  56    0xa8336  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  57    0xa833d  5      OPC=callq_label       
  addq $0x80, %rsp                  #  58    0xa8342  7      OPC=addq_r64_imm32    
.L_a8347:                           #        0xa8349  0      OPC=<label>           
  testq %rbx, %rbx                  #  59    0xa8349  3      OPC=testq_r64_r64     
  je .L_a83a0                       #  60    0xa834c  2      OPC=je_label          
  testl %r12d, %r12d                #  61    0xa834e  3      OPC=testl_r32_r32     
  je .L_a83b0                       #  62    0xa8351  2      OPC=je_label          
  movq 0x28(%rbx), %rsi             #  63    0xa8353  4      OPC=movq_r64_m64      
.L_a8355:                           #        0xa8357  0      OPC=<label>           
  subq 0x8(%rsp), %rsi              #  64    0xa8357  5      OPC=subq_r64_m64      
  movq %rbx, %rdx                   #  65    0xa835c  3      OPC=movq_r64_r64      
  movq %rbp, %rdi                   #  66    0xa835f  3      OPC=movq_r64_r64      
  callq .__offtime                  #  67    0xa8362  5      OPC=callq_label       
  testl %eax, %eax                  #  68    0xa8367  2      OPC=testl_r32_r32     
  je .L_a83a0                       #  69    0xa8369  2      OPC=je_label          
  movl 0x4(%rsp), %eax              #  70    0xa836b  4      OPC=movl_r32_m32      
  addl %eax, (%rbx)                 #  71    0xa836f  2      OPC=addl_m32_r32      
  movq %rbx, %rax                   #  72    0xa8371  3      OPC=movq_r64_r64      
.L_a8372:                           #        0xa8374  0      OPC=<label>           
  addq $0x10, %rsp                  #  73    0xa8374  4      OPC=addq_r64_imm8     
  popq %rbx                         #  74    0xa8378  1      OPC=popq_r64_1        
  popq %rbp                         #  75    0xa8379  1      OPC=popq_r64_1        
  popq %r12                         #  76    0xa837a  2      OPC=popq_r64_1        
  retq                              #  77    0xa837c  1      OPC=retq              
  nop                               #  78    0xa837d  1      OPC=nop               
  nop                               #  79    0xa837e  1      OPC=nop               
  nop                               #  80    0xa837f  1      OPC=nop               
  nop                               #  81    0xa8380  1      OPC=nop               
  nop                               #  82    0xa8381  1      OPC=nop               
.L_a8380:                           #        0xa8382  0      OPC=<label>           
  movq (%rbp), %rdi                 #  83    0xa8382  4      OPC=movq_r64_m64      
  leaq 0x4(%rsp), %rcx              #  84    0xa8386  5      OPC=leaq_r64_m16      
  leaq 0x8(%rsp), %rdx              #  85    0xa838b  5      OPC=leaq_r64_m16      
  movq %rbx, %r8                    #  86    0xa8390  3      OPC=movq_r64_r64      
  movl %r12d, %esi                  #  87    0xa8393  3      OPC=movl_r32_r32      
  callq .__tzfile_compute           #  88    0xa8396  5      OPC=callq_label       
  jmpq .L_a8311                     #  89    0xa839b  5      OPC=jmpq_label_1      
  xchgw %ax, %ax                    #  90    0xa83a0  2      OPC=xchgw_ax_r16      
.L_a83a0:                           #        0xa83a2  0      OPC=<label>           
  addq $0x10, %rsp                  #  91    0xa83a2  4      OPC=addq_r64_imm8     
  xorl %eax, %eax                   #  92    0xa83a6  2      OPC=xorl_r32_r32      
  popq %rbx                         #  93    0xa83a8  1      OPC=popq_r64_1        
  popq %rbp                         #  94    0xa83a9  1      OPC=popq_r64_1        
  popq %r12                         #  95    0xa83aa  2      OPC=popq_r64_1        
  retq                              #  96    0xa83ac  1      OPC=retq              
  nop                               #  97    0xa83ad  1      OPC=nop               
  nop                               #  98    0xa83ae  1      OPC=nop               
  nop                               #  99    0xa83af  1      OPC=nop               
  nop                               #  100   0xa83b0  1      OPC=nop               
  nop                               #  101   0xa83b1  1      OPC=nop               
.L_a83b0:                           #        0xa83b2  0      OPC=<label>           
  leaq 0xbcaf3(%rip), %rax          #  102   0xa83b2  7      OPC=leaq_r64_m16      
  movl $0x0, 0x20(%rbx)             #  103   0xa83b9  7      OPC=movl_m32_imm32    
  movq $0x0, 0x28(%rbx)             #  104   0xa83c0  8      OPC=movq_m64_imm32    
  xorl %esi, %esi                   #  105   0xa83c8  2      OPC=xorl_r32_r32      
  movq %rax, 0x30(%rbx)             #  106   0xa83ca  4      OPC=movq_m64_r64      
  jmpq .L_a8355                     #  107   0xa83ce  5      OPC=jmpq_label_1      
  nop                               #  108   0xa83d3  1      OPC=nop               
  nop                               #  109   0xa83d4  1      OPC=nop               
  nop                               #  110   0xa83d5  1      OPC=nop               
  nop                               #  111   0xa83d6  1      OPC=nop               
  nop                               #  112   0xa83d7  1      OPC=nop               
  nop                               #  113   0xa83d8  1      OPC=nop               
  nop                               #  114   0xa83d9  1      OPC=nop               
.L_a83d8:                           #        0xa83da  0      OPC=<label>           
  movq (%rbp), %rdi                 #  115   0xa83da  4      OPC=movq_r64_m64      
  movl %r12d, %edx                  #  116   0xa83de  3      OPC=movl_r32_r32      
  movq %rbx, %rsi                   #  117   0xa83e1  3      OPC=movq_r64_r64      
  callq .__tz_compute               #  118   0xa83e4  5      OPC=callq_label       
  jmpq .L_a8300                     #  119   0xa83e9  5      OPC=jmpq_label_1      
  nop                               #  120   0xa83ee  1      OPC=nop               
  nop                               #  121   0xa83ef  1      OPC=nop               
  nop                               #  122   0xa83f0  1      OPC=nop               
  nop                               #  123   0xa83f1  1      OPC=nop               
.L_a83f0:                           #        0xa83f2  0      OPC=<label>           
  movq 0x2f2a89(%rip), %rax         #  124   0xa83f2  7      OPC=movq_r64_m64      
  movl $0x16, (%rax)                #  125   0xa83f9  6      OPC=movl_m32_imm32    
  nop                               #  126   0xa83ff  1      OPC=nop               
  xorl %eax, %eax                   #  127   0xa8400  2      OPC=xorl_r32_r32      
  jmpq .L_a8372                     #  128   0xa8402  5      OPC=jmpq_label_1      
  nop                               #  129   0xa8407  1      OPC=nop               
  nop                               #  130   0xa8408  1      OPC=nop               
  nop                               #  131   0xa8409  1      OPC=nop               
  nop                               #  132   0xa840a  1      OPC=nop               
  nop                               #  133   0xa840b  1      OPC=nop               
  nop                               #  134   0xa840c  1      OPC=nop               
  nop                               #  135   0xa840d  1      OPC=nop               
  nop                               #  136   0xa840e  1      OPC=nop               
  nop                               #  137   0xa840f  1      OPC=nop               
  nop                               #  138   0xa8410  1      OPC=nop               
  nop                               #  139   0xa8411  1      OPC=nop               
                                                                                   
.size __tz_convert, .-__tz_convert

