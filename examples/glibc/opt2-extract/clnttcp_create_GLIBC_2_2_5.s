  .text
  .globl clnttcp_create_GLIBC_2_2_5
  .type clnttcp_create_GLIBC_2_2_5, @function

#! file-offset 0x10fa20
#! rip-offset  0x10fa20
#! capacity    640 bytes

# Text                                       #  Line  RIP       Bytes  Opcode              
.clnttcp_create_GLIBC_2_2_5:                 #        0x10fa20  0      OPC=<label>         
  pushq %r15                                 #  1     0x10fa20  2      OPC=pushq_r64_1     
  pushq %r14                                 #  2     0x10fa22  2      OPC=pushq_r64_1     
  movq %rdi, %r15                            #  3     0x10fa24  3      OPC=movq_r64_r64    
  pushq %r13                                 #  4     0x10fa27  2      OPC=pushq_r64_1     
  pushq %r12                                 #  5     0x10fa29  2      OPC=pushq_r64_1     
  movl $0x18, %edi                           #  6     0x10fa2b  5      OPC=movl_r32_imm32  
  pushq %rbp                                 #  7     0x10fa30  1      OPC=pushq_r64_1     
  pushq %rbx                                 #  8     0x10fa31  1      OPC=pushq_r64_1     
  movq %rsi, %r13                            #  9     0x10fa32  3      OPC=movq_r64_r64    
  movq %rdx, %r12                            #  10    0x10fa35  3      OPC=movq_r64_r64    
  movq %rcx, %rbp                            #  11    0x10fa38  3      OPC=movq_r64_r64    
  subq $0x78, %rsp                           #  12    0x10fa3b  4      OPC=subq_r64_imm8   
  movl %r8d, 0x8(%rsp)                       #  13    0x10fa3f  5      OPC=movl_m32_r32    
  movl %r9d, 0xc(%rsp)                       #  14    0x10fa44  5      OPC=movl_m32_r32    
  callq .memalign_plt                        #  15    0x10fa49  5      OPC=callq_label     
  movl $0x98, %edi                           #  16    0x10fa4e  5      OPC=movl_r32_imm32  
  movq %rax, %rbx                            #  17    0x10fa53  3      OPC=movq_r64_r64    
  callq .memalign_plt                        #  18    0x10fa56  5      OPC=callq_label     
  testq %rax, %rax                           #  19    0x10fa5b  3      OPC=testq_r64_r64   
  movq %rax, %r14                            #  20    0x10fa5e  3      OPC=movq_r64_r64    
  je .L_10fc28                               #  21    0x10fa61  6      OPC=je_label_1      
  testq %rbx, %rbx                           #  22    0x10fa67  3      OPC=testq_r64_r64   
  je .L_10fc28                               #  23    0x10fa6a  6      OPC=je_label_1      
  cmpw $0x0, 0x2(%r15)                       #  24    0x10fa70  6      OPC=cmpw_m16_imm8   
  je .L_10fb70                               #  25    0x10fa76  6      OPC=je_label_1      
  movl (%rbp), %eax                          #  26    0x10fa7c  3      OPC=movl_r32_m32    
  testl %eax, %eax                           #  27    0x10fa7f  2      OPC=testl_r32_r32   
  js .L_10fb9c                               #  28    0x10fa81  6      OPC=js_label_1      
.L_10fa87:                                   #        0x10fa87  0      OPC=<label>         
  movl $0x0, 0x4(%r14)                       #  29    0x10fa87  8      OPC=movl_m32_imm32  
.L_10fa8f:                                   #        0x10fa8f  0      OPC=<label>         
  movq 0x8(%r15), %rdx                       #  30    0x10fa8f  4      OPC=movq_r64_m64    
  movl %eax, (%r14)                          #  31    0x10fa93  3      OPC=movl_m32_r32    
  movq (%r15), %rax                          #  32    0x10fa96  3      OPC=movq_r64_m64    
  movq $0x0, 0x10(%r14)                      #  33    0x10fa99  8      OPC=movq_m64_imm32  
  movl $0x0, 0x18(%r14)                      #  34    0x10faa1  8      OPC=movl_m32_imm32  
  movq %rdx, 0x24(%r14)                      #  35    0x10faa9  4      OPC=movq_m64_r64    
  movq %rax, 0x1c(%r14)                      #  36    0x10faad  4      OPC=movq_m64_r64    
  callq ._create_xid                         #  37    0x10fab1  5      OPC=callq_label     
  movq %r12, 0x30(%rsp)                      #  38    0x10fab6  5      OPC=movq_m64_r64    
  leaq 0x68(%r14), %r12                      #  39    0x10fabb  4      OPC=leaq_r64_m16    
  leaq 0x48(%r14), %rsi                      #  40    0x10fabf  4      OPC=leaq_r64_m16    
  xorl %ecx, %ecx                            #  41    0x10fac3  2      OPC=xorl_r32_r32    
  movl $0x18, %edx                           #  42    0x10fac5  5      OPC=movl_r32_imm32  
  movq %rax, 0x10(%rsp)                      #  43    0x10faca  5      OPC=movq_m64_r64    
  movq %r12, %rdi                            #  44    0x10facf  3      OPC=movq_r64_r64    
  movl $0x0, 0x18(%rsp)                      #  45    0x10fad2  8      OPC=movl_m32_imm32  
  movq $0x2, 0x20(%rsp)                      #  46    0x10fada  9      OPC=movq_m64_imm32  
  movq %r13, 0x28(%rsp)                      #  47    0x10fae3  5      OPC=movq_m64_r64    
  callq .xdrmem_create_GLIBC_2_2_5           #  48    0x10fae8  5      OPC=callq_label     
  leaq 0x10(%rsp), %rsi                      #  49    0x10faed  5      OPC=leaq_r64_m16    
  movq %r12, %rdi                            #  50    0x10faf2  3      OPC=movq_r64_r64    
  callq .xdr_callhdr_GLIBC_2_2_5             #  51    0x10faf5  5      OPC=callq_label     
  testl %eax, %eax                           #  52    0x10fafa  2      OPC=testl_r32_r32   
  je .L_10fbf0                               #  53    0x10fafc  6      OPC=je_label_1      
  movq 0x70(%r14), %rax                      #  54    0x10fb02  4      OPC=movq_r64_m64    
  movq %r12, %rdi                            #  55    0x10fb06  3      OPC=movq_r64_r64    
  callq 0x20(%rax)                           #  56    0x10fb09  3      OPC=callq_m64       
  movl %eax, 0x60(%r14)                      #  57    0x10fb0c  4      OPC=movl_m32_r32    
  movq 0x70(%r14), %rax                      #  58    0x10fb10  4      OPC=movq_r64_m64    
  movq 0x38(%rax), %rax                      #  59    0x10fb14  4      OPC=movq_r64_m64    
  testq %rax, %rax                           #  60    0x10fb18  3      OPC=testq_r64_r64   
  je .L_10fb22                               #  61    0x10fb1b  2      OPC=je_label        
  movq %r12, %rdi                            #  62    0x10fb1d  3      OPC=movq_r64_r64    
  callq %rax                                 #  63    0x10fb20  2      OPC=callq_r64       
.L_10fb22:                                   #        0x10fb22  0      OPC=<label>         
  movl 0xc(%rsp), %edx                       #  64    0x10fb22  4      OPC=movl_r32_m32    
  movl 0x8(%rsp), %esi                       #  65    0x10fb26  4      OPC=movl_r32_m32    
  leaq -0x291(%rip), %r9                     #  66    0x10fb2a  7      OPC=leaq_r64_m16    
  leaq -0x218(%rip), %r8                     #  67    0x10fb31  7      OPC=leaq_r64_m16    
  movq %r14, %rcx                            #  68    0x10fb38  3      OPC=movq_r64_r64    
  movq %r12, %rdi                            #  69    0x10fb3b  3      OPC=movq_r64_r64    
  callq .xdrrec_create_GLIBC_2_2_5           #  70    0x10fb3e  5      OPC=callq_label     
  leaq 0x289c96(%rip), %rax                  #  71    0x10fb43  7      OPC=leaq_r64_m16    
  movq %r14, 0x10(%rbx)                      #  72    0x10fb4a  4      OPC=movq_m64_r64    
  movq %rax, 0x8(%rbx)                       #  73    0x10fb4e  4      OPC=movq_m64_r64    
  callq .authnone_create_GLIBC_2_2_5         #  74    0x10fb52  5      OPC=callq_label     
  movq %rax, (%rbx)                          #  75    0x10fb57  3      OPC=movq_m64_r64    
  addq $0x78, %rsp                           #  76    0x10fb5a  4      OPC=addq_r64_imm8   
  movq %rbx, %rax                            #  77    0x10fb5e  3      OPC=movq_r64_r64    
  popq %rbx                                  #  78    0x10fb61  1      OPC=popq_r64_1      
  popq %rbp                                  #  79    0x10fb62  1      OPC=popq_r64_1      
  popq %r12                                  #  80    0x10fb63  2      OPC=popq_r64_1      
  popq %r13                                  #  81    0x10fb65  2      OPC=popq_r64_1      
  popq %r14                                  #  82    0x10fb67  2      OPC=popq_r64_1      
  popq %r15                                  #  83    0x10fb69  2      OPC=popq_r64_1      
  retq                                       #  84    0x10fb6b  1      OPC=retq            
  nop                                        #  85    0x10fb6c  1      OPC=nop             
  nop                                        #  86    0x10fb6d  1      OPC=nop             
  nop                                        #  87    0x10fb6e  1      OPC=nop             
  nop                                        #  88    0x10fb6f  1      OPC=nop             
.L_10fb70:                                   #        0x10fb70  0      OPC=<label>         
  movl $0x6, %ecx                            #  89    0x10fb70  5      OPC=movl_r32_imm32  
  movq %r12, %rdx                            #  90    0x10fb75  3      OPC=movq_r64_r64    
  movq %r13, %rsi                            #  91    0x10fb78  3      OPC=movq_r64_r64    
  movq %r15, %rdi                            #  92    0x10fb7b  3      OPC=movq_r64_r64    
  callq .pmap_getport_GLIBC_2_2_5            #  93    0x10fb7e  5      OPC=callq_label     
  testw %ax, %ax                             #  94    0x10fb83  3      OPC=testw_r16_r16   
  je .L_10fc00                               #  95    0x10fb86  2      OPC=je_label        
  rorw $0x8, %ax                             #  96    0x10fb88  4      OPC=rorw_r16_imm8   
  movw %ax, 0x2(%r15)                        #  97    0x10fb8c  5      OPC=movw_m16_r16    
  movl (%rbp), %eax                          #  98    0x10fb91  3      OPC=movl_r32_m32    
  testl %eax, %eax                           #  99    0x10fb94  2      OPC=testl_r32_r32   
  jns .L_10fa87                              #  100   0x10fb96  6      OPC=jns_label_1     
.L_10fb9c:                                   #        0x10fb9c  0      OPC=<label>         
  movl $0x6, %edx                            #  101   0x10fb9c  5      OPC=movl_r32_imm32  
  movl $0x1, %esi                            #  102   0x10fba1  5      OPC=movl_r32_imm32  
  movl $0x2, %edi                            #  103   0x10fba6  5      OPC=movl_r32_imm32  
  callq .__socket                            #  104   0x10fbab  5      OPC=callq_label     
  xorl %esi, %esi                            #  105   0x10fbb0  2      OPC=xorl_r32_r32    
  movl %eax, %edi                            #  106   0x10fbb2  2      OPC=movl_r32_r32    
  movl %eax, (%rbp)                          #  107   0x10fbb4  3      OPC=movl_m32_r32    
  callq .bindresvport                        #  108   0x10fbb7  5      OPC=callq_label     
  movl (%rbp), %edi                          #  109   0x10fbbc  3      OPC=movl_r32_m32    
  testl %edi, %edi                           #  110   0x10fbbf  2      OPC=testl_r32_r32   
  js .L_10fc78                               #  111   0x10fbc1  6      OPC=js_label_1      
  movl $0x10, %edx                           #  112   0x10fbc7  5      OPC=movl_r32_imm32  
  movq %r15, %rsi                            #  113   0x10fbcc  3      OPC=movq_r64_r64    
  callq .__connect                           #  114   0x10fbcf  5      OPC=callq_label     
  testl %eax, %eax                           #  115   0x10fbd4  2      OPC=testl_r32_r32   
  js .L_10fc78                               #  116   0x10fbd6  6      OPC=js_label_1      
  movl $0x1, 0x4(%r14)                       #  117   0x10fbdc  8      OPC=movl_m32_imm32  
  movl (%rbp), %eax                          #  118   0x10fbe4  3      OPC=movl_r32_m32    
  jmpq .L_10fa8f                             #  119   0x10fbe7  5      OPC=jmpq_label_1    
  nop                                        #  120   0x10fbec  1      OPC=nop             
  nop                                        #  121   0x10fbed  1      OPC=nop             
  nop                                        #  122   0x10fbee  1      OPC=nop             
  nop                                        #  123   0x10fbef  1      OPC=nop             
.L_10fbf0:                                   #        0x10fbf0  0      OPC=<label>         
  movl 0x4(%r14), %eax                       #  124   0x10fbf0  4      OPC=movl_r32_m32    
  testl %eax, %eax                           #  125   0x10fbf4  2      OPC=testl_r32_r32   
  je .L_10fc00                               #  126   0x10fbf6  2      OPC=je_label        
  movl (%rbp), %edi                          #  127   0x10fbf8  3      OPC=movl_r32_m32    
.L_10fbfb:                                   #        0x10fbfb  0      OPC=<label>         
  callq .__close                             #  128   0x10fbfb  5      OPC=callq_label     
.L_10fc00:                                   #        0x10fc00  0      OPC=<label>         
  movq %r14, %rdi                            #  129   0x10fc00  3      OPC=movq_r64_r64    
  callq .L_1f8c0                             #  130   0x10fc03  5      OPC=callq_label     
  movq %rbx, %rdi                            #  131   0x10fc08  3      OPC=movq_r64_r64    
  callq .L_1f8c0                             #  132   0x10fc0b  5      OPC=callq_label     
  addq $0x78, %rsp                           #  133   0x10fc10  4      OPC=addq_r64_imm8   
  xorl %eax, %eax                            #  134   0x10fc14  2      OPC=xorl_r32_r32    
  popq %rbx                                  #  135   0x10fc16  1      OPC=popq_r64_1      
  popq %rbp                                  #  136   0x10fc17  1      OPC=popq_r64_1      
  popq %r12                                  #  137   0x10fc18  2      OPC=popq_r64_1      
  popq %r13                                  #  138   0x10fc1a  2      OPC=popq_r64_1      
  popq %r14                                  #  139   0x10fc1c  2      OPC=popq_r64_1      
  popq %r15                                  #  140   0x10fc1e  2      OPC=popq_r64_1      
  retq                                       #  141   0x10fc20  1      OPC=retq            
  nop                                        #  142   0x10fc21  1      OPC=nop             
  nop                                        #  143   0x10fc22  1      OPC=nop             
  nop                                        #  144   0x10fc23  1      OPC=nop             
  nop                                        #  145   0x10fc24  1      OPC=nop             
  nop                                        #  146   0x10fc25  1      OPC=nop             
  nop                                        #  147   0x10fc26  1      OPC=nop             
  nop                                        #  148   0x10fc27  1      OPC=nop             
.L_10fc28:                                   #        0x10fc28  0      OPC=<label>         
  callq .__rpc_thread_createerr_GLIBC_2_2_5  #  149   0x10fc28  5      OPC=callq_label     
  leaq 0x56e14(%rip), %rsi                   #  150   0x10fc2d  7      OPC=leaq_r64_m16    
  leaq 0x53b61(%rip), %rdi                   #  151   0x10fc34  7      OPC=leaq_r64_m16    
  movl $0x5, %edx                            #  152   0x10fc3b  5      OPC=movl_r32_imm32  
  movq %rax, %rbp                            #  153   0x10fc40  3      OPC=movq_r64_r64    
  callq .__dcgettext                         #  154   0x10fc43  5      OPC=callq_label     
  leaq 0x56f05(%rip), %rdx                   #  155   0x10fc48  7      OPC=leaq_r64_m16    
  leaq 0x564eb(%rip), %rsi                   #  156   0x10fc4f  7      OPC=leaq_r64_m16    
  movq %rax, %rcx                            #  157   0x10fc56  3      OPC=movq_r64_r64    
  xorl %edi, %edi                            #  158   0x10fc59  2      OPC=xorl_r32_r32    
  xorl %eax, %eax                            #  159   0x10fc5b  2      OPC=xorl_r32_r32    
  callq .__fxprintf                          #  160   0x10fc5d  5      OPC=callq_label     
  movl $0xc, (%rbp)                          #  161   0x10fc62  7      OPC=movl_m32_imm32  
  movl $0xc, 0x10(%rbp)                      #  162   0x10fc69  7      OPC=movl_m32_imm32  
  jmpq .L_10fc00                             #  163   0x10fc70  2      OPC=jmpq_label      
  nop                                        #  164   0x10fc72  1      OPC=nop             
  nop                                        #  165   0x10fc73  1      OPC=nop             
  nop                                        #  166   0x10fc74  1      OPC=nop             
  nop                                        #  167   0x10fc75  1      OPC=nop             
  nop                                        #  168   0x10fc76  1      OPC=nop             
  nop                                        #  169   0x10fc77  1      OPC=nop             
.L_10fc78:                                   #        0x10fc78  0      OPC=<label>         
  callq .__rpc_thread_createerr_GLIBC_2_2_5  #  170   0x10fc78  5      OPC=callq_label     
  movq 0x28b1fc(%rip), %rdx                  #  171   0x10fc7d  7      OPC=movq_r64_m64    
  movl $0xc, (%rax)                          #  172   0x10fc84  6      OPC=movl_m32_imm32  
  movl (%rdx), %edx                          #  173   0x10fc8a  2      OPC=movl_r32_m32    
  nop                                        #  174   0x10fc8c  1      OPC=nop             
  movl %edx, 0x10(%rax)                      #  175   0x10fc8d  3      OPC=movl_m32_r32    
  movl (%rbp), %edi                          #  176   0x10fc90  3      OPC=movl_r32_m32    
  testl %edi, %edi                           #  177   0x10fc93  2      OPC=testl_r32_r32   
  jns .L_10fbfb                              #  178   0x10fc95  6      OPC=jns_label_1     
  jmpq .L_10fc00                             #  179   0x10fc9b  5      OPC=jmpq_label_1    
                                                                                           
.size clnttcp_create_GLIBC_2_2_5, .-clnttcp_create_GLIBC_2_2_5

