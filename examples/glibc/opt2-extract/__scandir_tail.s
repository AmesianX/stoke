  .text
  .globl __scandir_tail
  .type __scandir_tail, @function

#! file-offset 0xb29c0
#! rip-offset  0xb29c0
#! capacity    512 bytes

# Text                             #  Line  RIP      Bytes  Opcode                
.__scandir_tail:                   #        0xb29c0  0      OPC=<label>           
  testq %rdi, %rdi                 #  1     0xb29c0  3      OPC=testq_r64_r64     
  je .L_b2b99                      #  2     0xb29c3  6      OPC=je_label_1        
  pushq %r15                       #  3     0xb29c9  2      OPC=pushq_r64_1       
  pushq %r14                       #  4     0xb29cb  2      OPC=pushq_r64_1       
  xorl %r15d, %r15d                #  5     0xb29cd  3      OPC=xorl_r32_r32      
  pushq %r13                       #  6     0xb29d0  2      OPC=pushq_r64_1       
  pushq %r12                       #  7     0xb29d2  2      OPC=pushq_r64_1       
  pushq %rbp                       #  8     0xb29d4  1      OPC=pushq_r64_1       
  pushq %rbx                       #  9     0xb29d5  1      OPC=pushq_r64_1       
  movq %rdx, %rbp                  #  10    0xb29d6  3      OPC=movq_r64_r64      
  subq $0x58, %rsp                 #  11    0xb29d9  4      OPC=subq_r64_imm8     
  movq 0x2e849c(%rip), %r14        #  12    0xb29dd  7      OPC=movq_r64_m64      
  movq %rsi, 0x20(%rsp)            #  13    0xb29e4  5      OPC=movq_m64_r64      
  movq %rcx, 0x18(%rsp)            #  14    0xb29e9  5      OPC=movq_m64_r64      
  movq %rdi, 0x8(%rsp)             #  15    0xb29ee  5      OPC=movq_m64_r64      
  movq $0x0, 0x38(%rsp)            #  16    0xb29f3  9      OPC=movq_m64_imm32    
  movl (%r14), %esi                #  17    0xb29fc  3      OPC=movl_r32_m32      
  nop                              #  18    0xb29ff  1      OPC=nop               
  movq $0x0, 0x40(%rsp)            #  19    0xb2a00  9      OPC=movq_m64_imm32    
  movl $0x0, (%r14)                #  20    0xb2a09  7      OPC=movl_m32_imm32    
  nop                              #  21    0xb2a10  1      OPC=nop               
  movq %rdi, 0x30(%rsp)            #  22    0xb2a11  5      OPC=movq_m64_r64      
  movq $0x0, 0x10(%rsp)            #  23    0xb2a16  9      OPC=movq_m64_imm32    
  movl %esi, 0x2c(%rsp)            #  24    0xb2a1f  4      OPC=movl_m32_r32      
  nop                              #  25    0xb2a23  1      OPC=nop               
  nop                              #  26    0xb2a24  1      OPC=nop               
  nop                              #  27    0xb2a25  1      OPC=nop               
  nop                              #  28    0xb2a26  1      OPC=nop               
  nop                              #  29    0xb2a27  1      OPC=nop               
.L_b2a28:                          #        0xb2a28  0      OPC=<label>           
  movq 0x8(%rsp), %rdi             #  30    0xb2a28  5      OPC=movq_r64_m64      
  leaq 0x30(%rsp), %r12            #  31    0xb2a2d  5      OPC=leaq_r64_m16      
  callq .readdir                   #  32    0xb2a32  5      OPC=callq_label       
  testq %rax, %rax                 #  33    0xb2a37  3      OPC=testq_r64_r64     
  movq %rax, %rbx                  #  34    0xb2a3a  3      OPC=movq_r64_r64      
  je .L_b2ab7                      #  35    0xb2a3d  2      OPC=je_label          
.L_b2a3f:                          #        0xb2a3f  0      OPC=<label>           
  testq %rbp, %rbp                 #  36    0xb2a3f  3      OPC=testq_r64_r64     
  je .L_b2b28                      #  37    0xb2a42  6      OPC=je_label_1        
  leaq 0x30(%rsp), %r12            #  38    0xb2a48  5      OPC=leaq_r64_m16      
  movq %rbx, %rdi                  #  39    0xb2a4d  3      OPC=movq_r64_r64      
  callq %rbp                       #  40    0xb2a50  2      OPC=callq_r64         
  testl %eax, %eax                 #  41    0xb2a52  2      OPC=testl_r32_r32     
  movl $0x0, (%r14)                #  42    0xb2a54  7      OPC=movl_m32_imm32    
  nop                              #  43    0xb2a5b  1      OPC=nop               
  je .L_b2a28                      #  44    0xb2a5c  2      OPC=je_label          
  cmpq 0x40(%rsp), %r15            #  45    0xb2a5e  5      OPC=cmpq_r64_m64      
  je .L_b2b3b                      #  46    0xb2a63  6      OPC=je_label_1        
.L_b2a69:                          #        0xb2a69  0      OPC=<label>           
  movzwl 0x10(%rbx), %r12d         #  47    0xb2a69  5      OPC=movzwl_r32_m16    
  movq %r12, %rdi                  #  48    0xb2a6e  3      OPC=movq_r64_r64      
  callq .memalign_plt              #  49    0xb2a71  5      OPC=callq_label       
  testq %rax, %rax                 #  50    0xb2a76  3      OPC=testq_r64_r64     
  je .L_b2ab7                      #  51    0xb2a79  2      OPC=je_label          
  movq 0x40(%rsp), %r13            #  52    0xb2a7b  5      OPC=movq_r64_m64      
  movq %rax, %rdi                  #  53    0xb2a80  3      OPC=movq_r64_r64      
  movq %rbx, %rsi                  #  54    0xb2a83  3      OPC=movq_r64_r64      
  leaq 0x1(%r13), %rdx             #  55    0xb2a86  4      OPC=leaq_r64_m16      
  movq %rdx, 0x40(%rsp)            #  56    0xb2a8a  5      OPC=movq_m64_r64      
  movq %r12, %rdx                  #  57    0xb2a8f  3      OPC=movq_r64_r64      
  leaq 0x30(%rsp), %r12            #  58    0xb2a92  5      OPC=leaq_r64_m16      
  callq .__GI_memcpy               #  59    0xb2a97  5      OPC=callq_label       
  movq 0x10(%rsp), %rcx            #  60    0xb2a9c  5      OPC=movq_r64_m64      
  movq 0x8(%rsp), %rdi             #  61    0xb2aa1  5      OPC=movq_r64_m64      
  movq %rax, (%rcx,%r13,8)         #  62    0xb2aa6  4      OPC=movq_m64_r64      
  callq .readdir                   #  63    0xb2aaa  5      OPC=callq_label       
  testq %rax, %rax                 #  64    0xb2aaf  3      OPC=testq_r64_r64     
  movq %rax, %rbx                  #  65    0xb2ab2  3      OPC=movq_r64_r64      
  jne .L_b2a3f                     #  66    0xb2ab5  2      OPC=jne_label         
.L_b2ab7:                          #        0xb2ab7  0      OPC=<label>           
  movl (%r14), %eax                #  67    0xb2ab7  3      OPC=movl_r32_m32      
  nop                              #  68    0xb2aba  1      OPC=nop               
  leaq 0x30(%rsp), %r12            #  69    0xb2abb  5      OPC=leaq_r64_m16      
  testl %eax, %eax                 #  70    0xb2ac0  2      OPC=testl_r32_r32     
  jne .L_b2b7d                     #  71    0xb2ac2  6      OPC=jne_label_1       
  movq 0x8(%rsp), %rdi             #  72    0xb2ac8  5      OPC=movq_r64_m64      
  callq .closedir                  #  73    0xb2acd  5      OPC=callq_label       
  cmpq $0x0, 0x18(%rsp)            #  74    0xb2ad2  6      OPC=cmpq_m64_imm8     
  je .L_b2af8                      #  75    0xb2ad8  2      OPC=je_label          
  movq 0x18(%rsp), %rcx            #  76    0xb2ada  5      OPC=movq_r64_m64      
  movq 0x40(%rsp), %rsi            #  77    0xb2adf  5      OPC=movq_r64_m64      
  movl $0x8, %edx                  #  78    0xb2ae4  5      OPC=movl_r32_imm32    
  movq 0x10(%rsp), %rdi            #  79    0xb2ae9  5      OPC=movq_r64_m64      
  leaq 0x30(%rsp), %r12            #  80    0xb2aee  5      OPC=leaq_r64_m16      
  callq .qsort                     #  81    0xb2af3  5      OPC=callq_label       
.L_b2af8:                          #        0xb2af8  0      OPC=<label>           
  movq 0x20(%rsp), %rax            #  82    0xb2af8  5      OPC=movq_r64_m64      
  movq 0x10(%rsp), %rsi            #  83    0xb2afd  5      OPC=movq_r64_m64      
  movq %rsi, (%rax)                #  84    0xb2b02  3      OPC=movq_m64_r64      
  movq 0x40(%rsp), %rax            #  85    0xb2b05  5      OPC=movq_r64_m64      
  testl %eax, %eax                 #  86    0xb2b0a  2      OPC=testl_r32_r32     
  js .L_b2b16                      #  87    0xb2b0c  2      OPC=js_label          
  movl 0x2c(%rsp), %esi            #  88    0xb2b0e  4      OPC=movl_r32_m32      
  movl %esi, (%r14)                #  89    0xb2b12  3      OPC=movl_m32_r32      
  nop                              #  90    0xb2b15  1      OPC=nop               
.L_b2b16:                          #        0xb2b16  0      OPC=<label>           
  addq $0x58, %rsp                 #  91    0xb2b16  4      OPC=addq_r64_imm8     
  popq %rbx                        #  92    0xb2b1a  1      OPC=popq_r64_1        
  popq %rbp                        #  93    0xb2b1b  1      OPC=popq_r64_1        
  popq %r12                        #  94    0xb2b1c  2      OPC=popq_r64_1        
  popq %r13                        #  95    0xb2b1e  2      OPC=popq_r64_1        
  popq %r14                        #  96    0xb2b20  2      OPC=popq_r64_1        
  popq %r15                        #  97    0xb2b22  2      OPC=popq_r64_1        
  retq                             #  98    0xb2b24  1      OPC=retq              
  nop                              #  99    0xb2b25  1      OPC=nop               
  nop                              #  100   0xb2b26  1      OPC=nop               
  nop                              #  101   0xb2b27  1      OPC=nop               
.L_b2b28:                          #        0xb2b28  0      OPC=<label>           
  cmpq 0x40(%rsp), %r15            #  102   0xb2b28  5      OPC=cmpq_r64_m64      
  movl $0x0, (%r14)                #  103   0xb2b2d  7      OPC=movl_m32_imm32    
  nop                              #  104   0xb2b34  1      OPC=nop               
  jne .L_b2a69                     #  105   0xb2b35  6      OPC=jne_label_1       
.L_b2b3b:                          #        0xb2b3b  0      OPC=<label>           
  testq %r15, %r15                 #  106   0xb2b3b  3      OPC=testq_r64_r64     
  je .L_b2b70                      #  107   0xb2b3e  2      OPC=je_label          
  addq %r15, %r15                  #  108   0xb2b40  3      OPC=addq_r64_r64      
  leaq (,%r15,8), %rsi             #  109   0xb2b43  8      OPC=leaq_r64_m16      
.L_b2b4b:                          #        0xb2b4b  0      OPC=<label>           
  movq 0x10(%rsp), %rdi            #  110   0xb2b4b  5      OPC=movq_r64_m64      
  callq .__tls_get_addr_plt        #  111   0xb2b50  5      OPC=callq_label       
  testq %rax, %rax                 #  112   0xb2b55  3      OPC=testq_r64_r64     
  je .L_b2ab7                      #  113   0xb2b58  6      OPC=je_label_1        
  movq %rax, 0x38(%rsp)            #  114   0xb2b5e  5      OPC=movq_m64_r64      
  movq %rax, 0x10(%rsp)            #  115   0xb2b63  5      OPC=movq_m64_r64      
  jmpq .L_b2a69                    #  116   0xb2b68  5      OPC=jmpq_label_1      
  nop                              #  117   0xb2b6d  1      OPC=nop               
  nop                              #  118   0xb2b6e  1      OPC=nop               
  nop                              #  119   0xb2b6f  1      OPC=nop               
.L_b2b70:                          #        0xb2b70  0      OPC=<label>           
  movl $0x50, %esi                 #  120   0xb2b70  5      OPC=movl_r32_imm32    
  movl $0xa, %r15d                 #  121   0xb2b75  6      OPC=movl_r32_imm32    
  jmpq .L_b2b4b                    #  122   0xb2b7b  2      OPC=jmpq_label        
.L_b2b7d:                          #        0xb2b7d  0      OPC=<label>           
  movq %r12, %rdi                  #  123   0xb2b7d  3      OPC=movq_r64_r64      
  callq .__scandir_cancel_handler  #  124   0xb2b80  5      OPC=callq_label       
  addq $0x58, %rsp                 #  125   0xb2b85  4      OPC=addq_r64_imm8     
  movl $0xffffffff, %eax           #  126   0xb2b89  6      OPC=movl_r32_imm32_1  
  popq %rbx                        #  127   0xb2b8f  1      OPC=popq_r64_1        
  popq %rbp                        #  128   0xb2b90  1      OPC=popq_r64_1        
  popq %r12                        #  129   0xb2b91  2      OPC=popq_r64_1        
  popq %r13                        #  130   0xb2b93  2      OPC=popq_r64_1        
  popq %r14                        #  131   0xb2b95  2      OPC=popq_r64_1        
  popq %r15                        #  132   0xb2b97  2      OPC=popq_r64_1        
  retq                             #  133   0xb2b99  1      OPC=retq              
.L_b2b99:                          #        0xb2b9a  0      OPC=<label>           
  movl $0xffffffff, %eax           #  134   0xb2b9a  6      OPC=movl_r32_imm32_1  
  retq                             #  135   0xb2ba0  1      OPC=retq              
  movq %rax, %rbx                  #  136   0xb2ba1  3      OPC=movq_r64_r64      
  movq %r12, %rdi                  #  137   0xb2ba4  3      OPC=movq_r64_r64      
  callq .__scandir_cancel_handler  #  138   0xb2ba7  5      OPC=callq_label       
  movq %rbx, %rdi                  #  139   0xb2bac  3      OPC=movq_r64_r64      
  callq ._Unwind_Resume            #  140   0xb2baf  5      OPC=callq_label       
  nop                              #  141   0xb2bb4  1      OPC=nop               
  nop                              #  142   0xb2bb5  1      OPC=nop               
  nop                              #  143   0xb2bb6  1      OPC=nop               
  nop                              #  144   0xb2bb7  1      OPC=nop               
  nop                              #  145   0xb2bb8  1      OPC=nop               
  nop                              #  146   0xb2bb9  1      OPC=nop               
  nop                              #  147   0xb2bba  1      OPC=nop               
  nop                              #  148   0xb2bbb  1      OPC=nop               
  nop                              #  149   0xb2bbc  1      OPC=nop               
  nop                              #  150   0xb2bbd  1      OPC=nop               
  nop                              #  151   0xb2bbe  1      OPC=nop               
  nop                              #  152   0xb2bbf  1      OPC=nop               
  nop                              #  153   0xb2bc0  1      OPC=nop               
  nop                              #  154   0xb2bc1  1      OPC=nop               
                                                                                  
.size __scandir_tail, .-__scandir_tail

