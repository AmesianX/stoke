  .text
  .globl open_socket
  .type open_socket, @function

#! file-offset 0x117fd0
#! rip-offset  0x117fd0
#! capacity    528 bytes

# Text                            #  Line  RIP       Bytes  Opcode                   
.open_socket:                     #        0x117fd0  0      OPC=<label>              
  pushq %rbp                      #  1     0x117fd0  1      OPC=pushq_r64_1          
  movq %rsp, %rbp                 #  2     0x117fd1  3      OPC=movq_r64_r64         
  pushq %r15                      #  3     0x117fd4  2      OPC=pushq_r64_1          
  pushq %r14                      #  4     0x117fd6  2      OPC=pushq_r64_1          
  pushq %r13                      #  5     0x117fd8  2      OPC=pushq_r64_1          
  pushq %r12                      #  6     0x117fda  2      OPC=pushq_r64_1          
  movl %edi, %r15d                #  7     0x117fdc  3      OPC=movl_r32_r32         
  pushq %rbx                      #  8     0x117fdf  1      OPC=pushq_r64_1          
  movq %rdx, %r14                 #  9     0x117fe0  3      OPC=movq_r64_r64         
  movl $0x1, %edi                 #  10    0x117fe3  5      OPC=movl_r32_imm32       
  xorl %edx, %edx                 #  11    0x117fe8  2      OPC=xorl_r32_r32         
  subq $0xb8, %rsp                #  12    0x117fea  7      OPC=subq_r64_imm32       
  movq %rsi, -0xd8(%rbp)          #  13    0x117ff1  7      OPC=movq_m64_r64         
  movl $0x80801, %esi             #  14    0x117ff8  5      OPC=movl_r32_imm32       
  callq .__socket                 #  15    0x117ffd  5      OPC=callq_label          
  testl %eax, %eax                #  16    0x118002  2      OPC=testl_r32_r32        
  movl %eax, %r12d                #  17    0x118004  3      OPC=movl_r32_r32         
  js .L_1181d0                    #  18    0x118007  6      OPC=js_label_1           
  leaq 0x2a(%r14), %rax           #  19    0x11800d  4      OPC=leaq_r64_m16         
  leaq -0xa0(%rbp), %rsi          #  20    0x118011  7      OPC=leaq_r64_m16         
  movq $0x6e75722f7261762f, %rcx  #  21    0x118018  10     OPC=movq_r64_imm64       
  movq %rcx, -0x9e(%rbp)          #  22    0x118022  7      OPC=movq_m64_r64         
  movl $0x1, %edx                 #  23    0x118029  5      OPC=movl_r32_imm32       
  movq $0x6f732f6463736e2f, %rcx  #  24    0x11802e  10     OPC=movq_r64_imm64       
  andq $0xf0, %rax                #  25    0x118038  4      OPC=andq_r64_imm8        
  movw %dx, -0xa0(%rbp)           #  26    0x11803c  7      OPC=movw_m16_r16         
  movq %rcx, 0xa(%rsi)            #  27    0x118043  4      OPC=movq_m64_r64         
  subq %rax, %rsp                 #  28    0x118047  3      OPC=subq_r64_r64         
  movl $0x74656b63, 0x12(%rsi)    #  29    0x11804a  7      OPC=movl_m32_imm32       
  movb $0x0, 0x16(%rsi)           #  30    0x118051  4      OPC=movb_m8_imm8         
  leaq 0xf(%rsp), %rbx            #  31    0x118055  5      OPC=leaq_r64_m16         
  movl $0x6e, %edx                #  32    0x11805a  5      OPC=movl_r32_imm32       
  movl %r12d, %edi                #  33    0x11805f  3      OPC=movl_r32_r32         
  callq .__connect                #  34    0x118062  5      OPC=callq_label          
  andq $0xf0, %rbx                #  35    0x118067  4      OPC=andq_r64_imm8        
  testl %eax, %eax                #  36    0x11806b  2      OPC=testl_r32_r32        
  leaq 0xc(%r14), %r13            #  37    0x11806d  4      OPC=leaq_r64_m16         
  js .L_1180e0                    #  38    0x118071  2      OPC=js_label             
.L_118073:                        #        0x118073  0      OPC=<label>              
  movq -0xd8(%rbp), %rsi          #  39    0x118073  7      OPC=movq_r64_m64         
  leaq 0xc(%rbx), %rdi            #  40    0x11807a  4      OPC=leaq_r64_m16         
  movl %r15d, 0x4(%rbx)           #  41    0x11807e  4      OPC=movl_m32_r32         
  movl %r14d, 0x8(%rbx)           #  42    0x118082  4      OPC=movl_m32_r32         
  movq %r14, %rdx                 #  43    0x118086  3      OPC=movq_r64_r64         
  movl $0x2, (%rbx)               #  44    0x118089  6      OPC=movl_m32_imm32       
  leaq -0xb0(%rbp), %r15          #  45    0x11808f  7      OPC=leaq_r64_m16         
  movl $0x1, %r14d                #  46    0x118096  6      OPC=movl_r32_imm32       
  callq .__GI_memcpy              #  47    0x11809c  5      OPC=callq_label          
  leaq -0xd0(%rbp), %rax          #  48    0x1180a1  7      OPC=leaq_r64_m16         
  movq %rax, -0xd8(%rbp)          #  49    0x1180a8  7      OPC=movq_m64_r64         
.L_1180af:                        #        0x1180af  0      OPC=<label>              
  movl $0x4000, %ecx              #  50    0x1180af  5      OPC=movl_r32_imm32       
  movq %r13, %rdx                 #  51    0x1180b4  3      OPC=movq_r64_r64         
  movq %rbx, %rsi                 #  52    0x1180b7  3      OPC=movq_r64_r64         
  movl %r12d, %edi                #  53    0x1180ba  3      OPC=movl_r32_r32         
  callq .__send                   #  54    0x1180bd  5      OPC=callq_label          
  cmpq $0xff, %rax                #  55    0x1180c2  4      OPC=cmpq_r64_imm8        
  je .L_118100                    #  56    0x1180c6  2      OPC=je_label             
  cmpq %r13, %rax                 #  57    0x1180c8  3      OPC=cmpq_r64_r64         
  jne .L_1180ed                   #  58    0x1180cb  2      OPC=jne_label            
.L_1180cd:                        #        0x1180cd  0      OPC=<label>              
  movl %r12d, %eax                #  59    0x1180cd  3      OPC=movl_r32_r32         
.L_1180d0:                        #        0x1180d0  0      OPC=<label>              
  leaq -0x28(%rbp), %rsp          #  60    0x1180d0  4      OPC=leaq_r64_m16         
  popq %rbx                       #  61    0x1180d4  1      OPC=popq_r64_1           
  popq %r12                       #  62    0x1180d5  2      OPC=popq_r64_1           
  popq %r13                       #  63    0x1180d7  2      OPC=popq_r64_1           
  popq %r14                       #  64    0x1180d9  2      OPC=popq_r64_1           
  popq %r15                       #  65    0x1180db  2      OPC=popq_r64_1           
  popq %rbp                       #  66    0x1180dd  1      OPC=popq_r64_1           
  retq                            #  67    0x1180de  1      OPC=retq                 
  nop                             #  68    0x1180df  1      OPC=nop                  
.L_1180e0:                        #        0x1180e0  0      OPC=<label>              
  movq 0x282d99(%rip), %rax       #  69    0x1180e0  7      OPC=movq_r64_m64         
  cmpl $0x73, (%rax)              #  70    0x1180e7  3      OPC=cmpl_m32_imm8        
  nop                             #  71    0x1180ea  1      OPC=nop                  
  je .L_118073                    #  72    0x1180eb  2      OPC=je_label             
.L_1180ed:                        #        0x1180ed  0      OPC=<label>              
  movslq %r12d, %rdi              #  73    0x1180ed  3      OPC=movslq_r64_r32       
  movl $0x3, %eax                 #  74    0x1180f0  5      OPC=movl_r32_imm32       
  syscall                         #  75    0x1180f5  2      OPC=syscall              
  movl $0xffffffff, %eax          #  76    0x1180f7  6      OPC=movl_r32_imm32_1     
  jmpq .L_1180d0                  #  77    0x1180fd  2      OPC=jmpq_label           
  xchgw %ax, %ax                  #  78    0x1180ff  2      OPC=xchgw_ax_r16         
.L_118100:                        #        0x118101  0      OPC=<label>              
  movq 0x282d79(%rip), %rax       #  79    0x118101  7      OPC=movq_r64_m64         
  movl (%rax), %eax               #  80    0x118108  2      OPC=movl_r32_m32         
  nop                             #  81    0x11810a  1      OPC=nop                  
  cmpl $0x4, %eax                 #  82    0x11810b  3      OPC=cmpl_r32_imm8        
  je .L_1180af                    #  83    0x11810e  2      OPC=je_label             
  cmpq $0xff, %r13                #  84    0x118110  4      OPC=cmpq_r64_imm8        
  je .L_1180cd                    #  85    0x118114  2      OPC=je_label             
  cmpl $0xb, %eax                 #  86    0x118116  3      OPC=cmpl_r32_imm8        
  jne .L_1180ed                   #  87    0x118119  2      OPC=jne_label            
  xorl %esi, %esi                 #  88    0x11811b  2      OPC=xorl_r32_r32         
  movq %r15, %rdi                 #  89    0x11811d  3      OPC=movq_r64_r64         
  callq .malloc_plt               #  90    0x118120  5      OPC=callq_label          
  testb %r14b, %r14b              #  91    0x118125  3      OPC=testb_r8_r8          
  jne .L_1181a0                   #  92    0x118128  2      OPC=jne_label            
  movq -0xb8(%rbp), %rcx          #  93    0x11812a  7      OPC=movq_r64_m64         
  subq -0xa8(%rbp), %rcx          #  94    0x118131  7      OPC=subq_r64_m64         
  movq $0x20c49ba5e353f7cf, %rax  #  95    0x118138  10     OPC=movq_r64_imm64       
  imulq %rcx                      #  96    0x118142  3      OPC=imulq_r64            
  movq -0xc0(%rbp), %rax          #  97    0x118145  7      OPC=movq_r64_m64         
  subq -0xb0(%rbp), %rax          #  98    0x11814c  7      OPC=subq_r64_m64         
  sarq $0x3f, %rcx                #  99    0x118153  4      OPC=sarq_r64_imm8        
  imull $0x3e8, %eax, %eax        #  100   0x118157  6      OPC=imull_r32_r32_imm32  
  sarq $0x7, %rdx                 #  101   0x11815d  4      OPC=sarq_r64_imm8        
  subq %rcx, %rdx                 #  102   0x118161  3      OPC=subq_r64_r64         
  addl %eax, %edx                 #  103   0x118164  2      OPC=addl_r32_r32         
.L_118165:                        #        0x118166  0      OPC=<label>              
  movq -0xd8(%rbp), %rdi          #  104   0x118166  7      OPC=movq_r64_m64         
  movl $0x1c, %eax                #  105   0x11816d  5      OPC=movl_r32_imm32       
  movl $0x1, %esi                 #  106   0x118172  5      OPC=movl_r32_imm32       
  movl %r12d, -0xd0(%rbp)         #  107   0x118177  7      OPC=movl_m32_r32         
  movw %ax, -0xcc(%rbp)           #  108   0x11817e  7      OPC=movw_m16_r16         
  callq .__poll                   #  109   0x118185  5      OPC=callq_label          
  testl %eax, %eax                #  110   0x11818a  2      OPC=testl_r32_r32        
  jle .L_1180ed                   #  111   0x11818c  6      OPC=jle_label_1          
  xorl %r14d, %r14d               #  112   0x118192  3      OPC=xorl_r32_r32         
  jmpq .L_1180af                  #  113   0x118195  5      OPC=jmpq_label_1         
  nop                             #  114   0x11819a  1      OPC=nop                  
  nop                             #  115   0x11819b  1      OPC=nop                  
  nop                             #  116   0x11819c  1      OPC=nop                  
  nop                             #  117   0x11819d  1      OPC=nop                  
  nop                             #  118   0x11819e  1      OPC=nop                  
  nop                             #  119   0x11819f  1      OPC=nop                  
  nop                             #  120   0x1181a0  1      OPC=nop                  
.L_1181a0:                        #        0x1181a1  0      OPC=<label>              
  movq -0xa8(%rbp), %rax          #  121   0x1181a1  7      OPC=movq_r64_m64         
  movl $0x1388, %edx              #  122   0x1181a8  5      OPC=movl_r32_imm32       
  movq %rax, -0xb8(%rbp)          #  123   0x1181ad  7      OPC=movq_m64_r64         
  movq -0xb0(%rbp), %rax          #  124   0x1181b4  7      OPC=movq_r64_m64         
  addq $0x5, %rax                 #  125   0x1181bb  4      OPC=addq_r64_imm8        
  movq %rax, -0xc0(%rbp)          #  126   0x1181bf  7      OPC=movq_m64_r64         
  jmpq .L_118165                  #  127   0x1181c6  2      OPC=jmpq_label           
  nop                             #  128   0x1181c8  1      OPC=nop                  
  nop                             #  129   0x1181c9  1      OPC=nop                  
  nop                             #  130   0x1181ca  1      OPC=nop                  
  nop                             #  131   0x1181cb  1      OPC=nop                  
  nop                             #  132   0x1181cc  1      OPC=nop                  
  nop                             #  133   0x1181cd  1      OPC=nop                  
  nop                             #  134   0x1181ce  1      OPC=nop                  
  nop                             #  135   0x1181cf  1      OPC=nop                  
  nop                             #  136   0x1181d0  1      OPC=nop                  
.L_1181d0:                        #        0x1181d1  0      OPC=<label>              
  movl $0xffffffff, %eax          #  137   0x1181d1  6      OPC=movl_r32_imm32_1     
  jmpq .L_1180d0                  #  138   0x1181d7  5      OPC=jmpq_label_1         
  nop                             #  139   0x1181dc  1      OPC=nop                  
  nop                             #  140   0x1181dd  1      OPC=nop                  
  nop                             #  141   0x1181de  1      OPC=nop                  
  nop                             #  142   0x1181df  1      OPC=nop                  
  nop                             #  143   0x1181e0  1      OPC=nop                  
  nop                             #  144   0x1181e1  1      OPC=nop                  
                                                                                     
.size open_socket, .-open_socket

