  .text
  .globl round_and_return
  .type round_and_return, @function

#! file-offset 0xa0370
#! rip-offset  0xa0370
#! capacity    1008 bytes

# Text                          #  Line  RIP      Bytes  Opcode               
.round_and_return:              #        0xa0370  0      OPC=<label>          
  pushq %r15                    #  1     0xa0370  2      OPC=pushq_r64_1      
  pushq %r14                    #  2     0xa0372  2      OPC=pushq_r64_1      
  pushq %r13                    #  3     0xa0374  2      OPC=pushq_r64_1      
  pushq %r12                    #  4     0xa0376  2      OPC=pushq_r64_1      
  movq %rcx, %r13               #  5     0xa0378  3      OPC=movq_r64_r64     
  pushq %rbp                    #  6     0xa037b  1      OPC=pushq_r64_1      
  pushq %rbx                    #  7     0xa037c  1      OPC=pushq_r64_1      
  movq %rdi, %r12               #  8     0xa037d  3      OPC=movq_r64_r64     
  movq %rsi, %rbx               #  9     0xa0380  3      OPC=movq_r64_r64     
  movl %edx, %ebp               #  10    0xa0383  2      OPC=movl_r32_r32     
  subq $0x28, %rsp              #  11    0xa0385  4      OPC=subq_r64_imm8    
  fnstcw 0x1e(%rsp)             #  12    0xa0389  4      OPC=fnstcw_m2byte    
  movzwl 0x1e(%rsp), %eax       #  13    0xa038d  5      OPC=movzwl_r32_m16   
  andw $0xc00, %ax              #  14    0xa0392  4      OPC=andw_ax_imm16    
  cmpw $0x400, %ax              #  15    0xa0396  4      OPC=cmpw_ax_imm16    
  je .L_a0550                   #  16    0xa039a  6      OPC=je_label_1       
  jbe .L_a0470                  #  17    0xa03a0  6      OPC=jbe_label_1      
  cmpw $0x800, %ax              #  18    0xa03a6  4      OPC=cmpw_ax_imm16    
  je .L_a0408                   #  19    0xa03aa  2      OPC=je_label         
  cmpw $0xc00, %ax              #  20    0xa03ac  4      OPC=cmpw_ax_imm16    
  movl $0xc00, %r15d            #  21    0xa03b0  6      OPC=movl_r32_imm32   
  jne .L_a047c                  #  22    0xa03b6  6      OPC=jne_label_1      
.L_a03bc:                       #        0xa03bc  0      OPC=<label>          
  cmpq $0x82, %rbx              #  23    0xa03bc  4      OPC=cmpq_r64_imm8    
  jge .L_a0414                  #  24    0xa03c0  2      OPC=jge_label        
.L_a03c2:                       #        0xa03c2  0      OPC=<label>          
  cmpq $0xffffff6a, %rbx        #  25    0xa03c2  7      OPC=cmpq_r64_imm32   
  jge .L_a0488                  #  26    0xa03c9  6      OPC=jge_label_1      
  movq 0x2faaaa(%rip), %rax     #  27    0xa03cf  7      OPC=movq_r64_m64     
  testl %ebp, %ebp              #  28    0xa03d6  2      OPC=testl_r32_r32    
  movl $0x22, (%rax)            #  29    0xa03d8  6      OPC=movl_m32_imm32   
  nop                           #  30    0xa03de  1      OPC=nop              
  je .L_a0560                   #  31    0xa03df  6      OPC=je_label_1       
  movss 0xcaf17(%rip), %xmm0    #  32    0xa03e5  8      OPC=movss_xmm_m32    
  mulss 0xcaf0b(%rip), %xmm0    #  33    0xa03ed  8      OPC=mulss_xmm_m32    
  addq $0x28, %rsp              #  34    0xa03f5  4      OPC=addq_r64_imm8    
  popq %rbx                     #  35    0xa03f9  1      OPC=popq_r64_1       
  popq %rbp                     #  36    0xa03fa  1      OPC=popq_r64_1       
  popq %r12                     #  37    0xa03fb  2      OPC=popq_r64_1       
  popq %r13                     #  38    0xa03fd  2      OPC=popq_r64_1       
  popq %r14                     #  39    0xa03ff  2      OPC=popq_r64_1       
  popq %r15                     #  40    0xa0401  2      OPC=popq_r64_1       
  retq                          #  41    0xa0403  1      OPC=retq             
  nop                           #  42    0xa0404  1      OPC=nop              
  nop                           #  43    0xa0405  1      OPC=nop              
  nop                           #  44    0xa0406  1      OPC=nop              
  nop                           #  45    0xa0407  1      OPC=nop              
.L_a0408:                       #        0xa0408  0      OPC=<label>          
  cmpq $0x82, %rbx              #  46    0xa0408  4      OPC=cmpq_r64_imm8    
  movl $0x800, %r15d            #  47    0xa040c  6      OPC=movl_r32_imm32   
  jl .L_a03c2                   #  48    0xa0412  2      OPC=jl_label         
.L_a0414:                       #        0xa0414  0      OPC=<label>          
  cmpq $0x80, %rbx              #  49    0xa0414  7      OPC=cmpq_r64_imm32   
  jle .L_a0580                  #  50    0xa041b  6      OPC=jle_label_1      
.L_a0421:                       #        0xa0421  0      OPC=<label>          
  movq 0x2faa58(%rip), %rax     #  51    0xa0421  7      OPC=movq_r64_m64     
  testl %ebp, %ebp              #  52    0xa0428  2      OPC=testl_r32_r32    
  movl $0x22, (%rax)            #  53    0xa042a  6      OPC=movl_m32_imm32   
  nop                           #  54    0xa0430  1      OPC=nop              
  jne .L_a0450                  #  55    0xa0431  2      OPC=jne_label        
  movss 0xcaebd(%rip), %xmm0    #  56    0xa0433  8      OPC=movss_xmm_m32    
  mulss %xmm0, %xmm0            #  57    0xa043b  4      OPC=mulss_xmm_xmm    
.L_a043f:                       #        0xa043f  0      OPC=<label>          
  addq $0x28, %rsp              #  58    0xa043f  4      OPC=addq_r64_imm8    
  popq %rbx                     #  59    0xa0443  1      OPC=popq_r64_1       
  popq %rbp                     #  60    0xa0444  1      OPC=popq_r64_1       
  popq %r12                     #  61    0xa0445  2      OPC=popq_r64_1       
  popq %r13                     #  62    0xa0447  2      OPC=popq_r64_1       
  popq %r14                     #  63    0xa0449  2      OPC=popq_r64_1       
  popq %r15                     #  64    0xa044b  2      OPC=popq_r64_1       
  retq                          #  65    0xa044d  1      OPC=retq             
  xchgw %ax, %ax                #  66    0xa044e  2      OPC=xchgw_ax_r16     
.L_a0450:                       #        0xa0450  0      OPC=<label>          
  movss 0xcaeb0(%rip), %xmm0    #  67    0xa0450  8      OPC=movss_xmm_m32    
  mulss 0xcae98(%rip), %xmm0    #  68    0xa0458  8      OPC=mulss_xmm_m32    
  addq $0x28, %rsp              #  69    0xa0460  4      OPC=addq_r64_imm8    
  popq %rbx                     #  70    0xa0464  1      OPC=popq_r64_1       
  popq %rbp                     #  71    0xa0465  1      OPC=popq_r64_1       
  popq %r12                     #  72    0xa0466  2      OPC=popq_r64_1       
  popq %r13                     #  73    0xa0468  2      OPC=popq_r64_1       
  popq %r14                     #  74    0xa046a  2      OPC=popq_r64_1       
  popq %r15                     #  75    0xa046c  2      OPC=popq_r64_1       
  retq                          #  76    0xa046e  1      OPC=retq             
  nop                           #  77    0xa046f  1      OPC=nop              
.L_a0470:                       #        0xa0470  0      OPC=<label>          
  xorl %r15d, %r15d             #  78    0xa0470  3      OPC=xorl_r32_r32     
  testw %ax, %ax                #  79    0xa0473  3      OPC=testw_r16_r16    
  je .L_a03bc                   #  80    0xa0476  6      OPC=je_label_1       
.L_a047c:                       #        0xa047c  0      OPC=<label>          
  callq .abort                  #  81    0xa047c  5      OPC=callq_label      
  nop                           #  82    0xa0481  1      OPC=nop              
  nop                           #  83    0xa0482  1      OPC=nop              
  nop                           #  84    0xa0483  1      OPC=nop              
  nop                           #  85    0xa0484  1      OPC=nop              
  nop                           #  86    0xa0485  1      OPC=nop              
  nop                           #  87    0xa0486  1      OPC=nop              
  nop                           #  88    0xa0487  1      OPC=nop              
.L_a0488:                       #        0xa0488  0      OPC=<label>          
  movl $0x1, %eax               #  89    0xa0488  5      OPC=movl_r32_imm32   
  movl %r8d, %ecx               #  90    0xa048d  3      OPC=movl_r32_r32     
  movq $0xffffff82, %rdx        #  91    0xa0490  7      OPC=movq_r64_imm32   
  shlq %cl, %rax                #  92    0xa0497  3      OPC=shlq_r64_cl      
  subq %rbx, %rdx               #  93    0xa049a  3      OPC=subq_r64_r64     
  subq $0x1, %rax               #  94    0xa049d  4      OPC=subq_r64_imm8    
  testq %r13, %rax              #  95    0xa04a1  3      OPC=testq_r64_r64    
  setne %al                     #  96    0xa04a4  3      OPC=setne_r8         
  movzbl %al, %eax              #  97    0xa04a7  3      OPC=movzbl_r32_r8    
  orl %eax, %r9d                #  98    0xa04aa  3      OPC=orl_r32_r32      
  cmpq $0x18, %rdx              #  99    0xa04ad  4      OPC=cmpq_r64_imm8    
  je .L_a06c0                   #  100   0xa04b1  6      OPC=je_label_1       
  cmpq $0x1, %rdx               #  101   0xa04b7  4      OPC=cmpq_r64_imm8    
  je .L_a0618                   #  102   0xa04bb  6      OPC=je_label_1       
  movl %edx, %ecx               #  103   0xa04c1  2      OPC=movl_r32_r32     
  movq %r12, %rsi               #  104   0xa04c3  3      OPC=movq_r64_r64     
  movq %r12, %rdi               #  105   0xa04c6  3      OPC=movq_r64_r64     
  movl $0x1, %edx               #  106   0xa04c9  5      OPC=movl_r32_imm32   
  movl %r9d, 0x8(%rsp)          #  107   0xa04ce  5      OPC=movl_m32_r32     
  movq (%r12), %r13             #  108   0xa04d3  4      OPC=movq_r64_m64     
  callq .__mpn_rshift           #  109   0xa04d7  5      OPC=callq_label      
  movq (%r12), %r14             #  110   0xa04dc  4      OPC=movq_r64_m64     
  movl 0x8(%rsp), %r9d          #  111   0xa04e0  5      OPC=movl_r32_m32     
  movq $0xffffff81, %rdi        #  112   0xa04e5  7      OPC=movq_r64_imm32   
  subl %ebx, %edi               #  113   0xa04ec  2      OPC=subl_r32_r32     
  movl %r14d, %esi              #  114   0xa04ee  3      OPC=movl_r32_r32     
  andl $0x1, %esi               #  115   0xa04f1  3      OPC=andl_r32_imm8    
.L_a04f4:                       #        0xa04f4  0      OPC=<label>          
  movq %r13, %rdx               #  116   0xa04f4  3      OPC=movq_r64_r64     
  movl %edi, %ecx               #  117   0xa04f7  2      OPC=movl_r32_r32     
  shrq %cl, %rdx                #  118   0xa04f9  3      OPC=shrq_r64_cl      
  andl $0x1, %edx               #  119   0xa04fc  3      OPC=andl_r32_imm8    
  testl %r9d, %r9d              #  120   0xa04ff  3      OPC=testl_r32_r32    
  jne .L_a051a                  #  121   0xa0502  2      OPC=jne_label        
  testq %rdx, %rdx              #  122   0xa0504  3      OPC=testq_r64_r64    
  jne .L_a051a                  #  123   0xa0507  2      OPC=jne_label        
  movl $0x1, %eax               #  124   0xa0509  5      OPC=movl_r32_imm32   
  shlq %cl, %rax                #  125   0xa050e  3      OPC=shlq_r64_cl      
  subq $0x1, %rax               #  126   0xa0511  4      OPC=subq_r64_imm8    
  testq %r13, %rax              #  127   0xa0515  3      OPC=testq_r64_r64    
  je .L_a0534                   #  128   0xa0518  2      OPC=je_label         
.L_a051a:                       #        0xa051a  0      OPC=<label>          
  movq 0x2fa95f(%rip), %rax     #  129   0xa051a  7      OPC=movq_r64_m64     
  movss 0xcadd7(%rip), %xmm0    #  130   0xa0521  8      OPC=movss_xmm_m32    
  mulss %xmm0, %xmm0            #  131   0xa0529  4      OPC=mulss_xmm_xmm    
  movl $0x22, (%rax)            #  132   0xa052d  6      OPC=movl_m32_imm32   
  nop                           #  133   0xa0533  1      OPC=nop              
.L_a0534:                       #        0xa0534  0      OPC=<label>          
  xorl %r10d, %r10d             #  134   0xa0534  3      OPC=xorl_r32_r32     
  testl %ebp, %ebp              #  135   0xa0537  2      OPC=testl_r32_r32    
  setne %r10b                   #  136   0xa0539  4      OPC=setne_r8         
.L_a053d:                       #        0xa053d  0      OPC=<label>          
  movq $0xffffff81, %rbx        #  137   0xa053d  7      OPC=movq_r64_imm32   
  jmpq .L_a05a2                 #  138   0xa0544  2      OPC=jmpq_label       
  nop                           #  139   0xa0546  1      OPC=nop              
  nop                           #  140   0xa0547  1      OPC=nop              
  nop                           #  141   0xa0548  1      OPC=nop              
  nop                           #  142   0xa0549  1      OPC=nop              
  nop                           #  143   0xa054a  1      OPC=nop              
  nop                           #  144   0xa054b  1      OPC=nop              
  nop                           #  145   0xa054c  1      OPC=nop              
  nop                           #  146   0xa054d  1      OPC=nop              
  nop                           #  147   0xa054e  1      OPC=nop              
  nop                           #  148   0xa054f  1      OPC=nop              
.L_a0550:                       #        0xa0550  0      OPC=<label>          
  movl $0x400, %r15d            #  149   0xa0550  6      OPC=movl_r32_imm32   
  jmpq .L_a03bc                 #  150   0xa0556  5      OPC=jmpq_label_1     
  nop                           #  151   0xa055b  1      OPC=nop              
  nop                           #  152   0xa055c  1      OPC=nop              
  nop                           #  153   0xa055d  1      OPC=nop              
  nop                           #  154   0xa055e  1      OPC=nop              
  nop                           #  155   0xa055f  1      OPC=nop              
.L_a0560:                       #        0xa0560  0      OPC=<label>          
  movss 0xcad98(%rip), %xmm0    #  156   0xa0560  8      OPC=movss_xmm_m32    
  addq $0x28, %rsp              #  157   0xa0568  4      OPC=addq_r64_imm8    
  popq %rbx                     #  158   0xa056c  1      OPC=popq_r64_1       
  mulss %xmm0, %xmm0            #  159   0xa056d  4      OPC=mulss_xmm_xmm    
  popq %rbp                     #  160   0xa0571  1      OPC=popq_r64_1       
  popq %r12                     #  161   0xa0572  2      OPC=popq_r64_1       
  popq %r13                     #  162   0xa0574  2      OPC=popq_r64_1       
  popq %r14                     #  163   0xa0576  2      OPC=popq_r64_1       
  popq %r15                     #  164   0xa0578  2      OPC=popq_r64_1       
  retq                          #  165   0xa057a  1      OPC=retq             
  nop                           #  166   0xa057b  1      OPC=nop              
  nop                           #  167   0xa057c  1      OPC=nop              
  nop                           #  168   0xa057d  1      OPC=nop              
  nop                           #  169   0xa057e  1      OPC=nop              
  nop                           #  170   0xa057f  1      OPC=nop              
.L_a0580:                       #        0xa0580  0      OPC=<label>          
  movq (%r12), %r14             #  171   0xa0580  4      OPC=movq_r64_m64     
  xorl %r10d, %r10d             #  172   0xa0584  3      OPC=xorl_r32_r32     
  movq %r13, %rdx               #  173   0xa0587  3      OPC=movq_r64_r64     
  testl %ebp, %ebp              #  174   0xa058a  2      OPC=testl_r32_r32    
  movl %r8d, %ecx               #  175   0xa058c  3      OPC=movl_r32_r32     
  movl %r8d, %edi               #  176   0xa058f  3      OPC=movl_r32_r32     
  setne %r10b                   #  177   0xa0592  4      OPC=setne_r8         
  shrq %cl, %rdx                #  178   0xa0596  3      OPC=shrq_r64_cl      
  movl %r14d, %esi              #  179   0xa0599  3      OPC=movl_r32_r32     
  andl $0x1, %edx               #  180   0xa059c  3      OPC=andl_r32_imm8    
  andl $0x1, %esi               #  181   0xa059f  3      OPC=andl_r32_imm8    
.L_a05a2:                       #        0xa05a2  0      OPC=<label>          
  testl %r9d, %r9d              #  182   0xa05a2  3      OPC=testl_r32_r32    
  movl $0x1, %ecx               #  183   0xa05a5  5      OPC=movl_r32_imm32   
  jne .L_a05c2                  #  184   0xa05aa  2      OPC=jne_label        
  movl %edi, %ecx               #  185   0xa05ac  2      OPC=movl_r32_r32     
  movl $0x1, %eax               #  186   0xa05ae  5      OPC=movl_r32_imm32   
  shlq %cl, %rax                #  187   0xa05b3  3      OPC=shlq_r64_cl      
  xorl %ecx, %ecx               #  188   0xa05b6  2      OPC=xorl_r32_r32     
  subq $0x1, %rax               #  189   0xa05b8  4      OPC=subq_r64_imm8    
  testq %r13, %rax              #  190   0xa05bc  3      OPC=testq_r64_r64    
  setne %cl                     #  191   0xa05bf  3      OPC=setne_r8         
.L_a05c2:                       #        0xa05c2  0      OPC=<label>          
  movl %r15d, %r8d              #  192   0xa05c2  3      OPC=movl_r32_r32     
  movl %r10d, %edi              #  193   0xa05c5  3      OPC=movl_r32_r32     
  callq .round_away             #  194   0xa05c8  5      OPC=callq_label      
  testb %al, %al                #  195   0xa05cd  2      OPC=testb_r8_r8      
  je .L_a05ec                   #  196   0xa05cf  2      OPC=je_label         
  addq $0x1, %r14               #  197   0xa05d1  4      OPC=addq_r64_imm8    
  testl $0x1000000, %r14d       #  198   0xa05d5  7      OPC=testl_r32_imm32  
  movq %r14, (%r12)             #  199   0xa05dc  4      OPC=movq_m64_r64     
  jne .L_a06e0                  #  200   0xa05e0  6      OPC=jne_label_1      
  cmpq $0x81, %rbx              #  201   0xa05e6  4      OPC=cmpq_r64_imm8    
  je .L_a0600                   #  202   0xa05ea  2      OPC=je_label         
.L_a05ec:                       #        0xa05ec  0      OPC=<label>          
  movl %ebx, %esi               #  203   0xa05ec  2      OPC=movl_r32_r32     
.L_a05ee:                       #        0xa05ee  0      OPC=<label>          
  movl %ebp, %edx               #  204   0xa05ee  2      OPC=movl_r32_r32     
  movq %r12, %rdi               #  205   0xa05f0  3      OPC=movq_r64_r64     
  callq .__mpn_construct_float  #  206   0xa05f3  5      OPC=callq_label      
  jmpq .L_a043f                 #  207   0xa05f8  5      OPC=jmpq_label_1     
  nop                           #  208   0xa05fd  1      OPC=nop              
  nop                           #  209   0xa05fe  1      OPC=nop              
  nop                           #  210   0xa05ff  1      OPC=nop              
.L_a0600:                       #        0xa0600  0      OPC=<label>          
  andl $0x800000, %r14d         #  211   0xa0600  7      OPC=andl_r32_imm32   
  cmpq $0x1, %r14               #  212   0xa0607  4      OPC=cmpq_r64_imm8    
  sbbl %esi, %esi               #  213   0xa060b  2      OPC=sbbl_r32_r32     
  subl $0x7e, %esi              #  214   0xa060d  3      OPC=subl_r32_imm8    
  jmpq .L_a05ee                 #  215   0xa0610  2      OPC=jmpq_label       
  nop                           #  216   0xa0612  1      OPC=nop              
  nop                           #  217   0xa0613  1      OPC=nop              
  nop                           #  218   0xa0614  1      OPC=nop              
  nop                           #  219   0xa0615  1      OPC=nop              
  nop                           #  220   0xa0616  1      OPC=nop              
  nop                           #  221   0xa0617  1      OPC=nop              
.L_a0618:                       #        0xa0618  0      OPC=<label>          
  movl %r8d, %ecx               #  222   0xa0618  3      OPC=movl_r32_r32     
  movq %r13, %rdx               #  223   0xa061b  3      OPC=movq_r64_r64     
  movq (%r12), %r13             #  224   0xa061e  4      OPC=movq_r64_m64     
  shrq %cl, %rdx                #  225   0xa0622  3      OPC=shrq_r64_cl      
  xorl %r10d, %r10d             #  226   0xa0625  3      OPC=xorl_r32_r32     
  movl %r15d, %r8d              #  227   0xa0628  3      OPC=movl_r32_r32     
  andl $0x1, %edx               #  228   0xa062b  3      OPC=andl_r32_imm8    
  testl %ebp, %ebp              #  229   0xa062e  2      OPC=testl_r32_r32    
  movl %r9d, 0xc(%rsp)          #  230   0xa0630  5      OPC=movl_m32_r32     
  setne %r10b                   #  231   0xa0635  4      OPC=setne_r8         
  testl %r9d, %r9d              #  232   0xa0639  3      OPC=testl_r32_r32    
  movq %r13, %rsi               #  233   0xa063c  3      OPC=movq_r64_r64     
  setne %cl                     #  234   0xa063f  3      OPC=setne_r8         
  movl %r10d, %edi              #  235   0xa0642  3      OPC=movl_r32_r32     
  andl $0x1, %esi               #  236   0xa0645  3      OPC=andl_r32_imm8    
  movzbl %cl, %ecx              #  237   0xa0648  3      OPC=movzbl_r32_r8    
  movl %r10d, 0x8(%rsp)         #  238   0xa064b  5      OPC=movl_m32_r32     
  callq .round_away             #  239   0xa0650  5      OPC=callq_label      
  testb %al, %al                #  240   0xa0655  2      OPC=testb_r8_r8      
  movl 0xc(%rsp), %r9d          #  241   0xa0657  5      OPC=movl_r32_m32     
  je .L_a0718                   #  242   0xa065c  6      OPC=je_label_1       
  movq $0xffffff81, %rax        #  243   0xa0662  7      OPC=movq_r64_imm32   
  movl $0x1, %ecx               #  244   0xa0669  5      OPC=movl_r32_imm32   
  movl $0x1, %edx               #  245   0xa066e  5      OPC=movl_r32_imm32   
  subq %rbx, %rax               #  246   0xa0673  3      OPC=subq_r64_r64     
  movq %r12, %rsi               #  247   0xa0676  3      OPC=movq_r64_r64     
  movq %r12, %rdi               #  248   0xa0679  3      OPC=movq_r64_r64     
  movq %rax, %rbx               #  249   0xa067c  3      OPC=movq_r64_r64     
  callq .__mpn_rshift           #  250   0xa067f  5      OPC=callq_label      
  leaq 0x1(%r13), %rax          #  251   0xa0684  4      OPC=leaq_r64_m16     
  movl 0x8(%rsp), %r10d         #  252   0xa0688  5      OPC=movl_r32_m32     
  movl 0xc(%rsp), %r9d          #  253   0xa068d  5      OPC=movl_r32_m32     
  testl $0x1000000, %eax        #  254   0xa0692  5      OPC=testl_eax_imm32  
  je .L_a0744                   #  255   0xa0697  6      OPC=je_label_1       
  movq (%r12), %r14             #  256   0xa069d  4      OPC=movq_r64_m64     
  movq %r13, %rdx               #  257   0xa06a1  3      OPC=movq_r64_r64     
  movl %ebx, %ecx               #  258   0xa06a4  2      OPC=movl_r32_r32     
  shrq %cl, %rdx                #  259   0xa06a6  3      OPC=shrq_r64_cl      
  movl %ebx, %edi               #  260   0xa06a9  2      OPC=movl_r32_r32     
  andl $0x1, %edx               #  261   0xa06ab  3      OPC=andl_r32_imm8    
  movl %r14d, %esi              #  262   0xa06ae  3      OPC=movl_r32_r32     
  andl $0x1, %esi               #  263   0xa06b1  3      OPC=andl_r32_imm8    
  jmpq .L_a053d                 #  264   0xa06b4  5      OPC=jmpq_label_1     
  nop                           #  265   0xa06b9  1      OPC=nop              
  nop                           #  266   0xa06ba  1      OPC=nop              
  nop                           #  267   0xa06bb  1      OPC=nop              
  nop                           #  268   0xa06bc  1      OPC=nop              
  nop                           #  269   0xa06bd  1      OPC=nop              
  nop                           #  270   0xa06be  1      OPC=nop              
  nop                           #  271   0xa06bf  1      OPC=nop              
.L_a06c0:                       #        0xa06c0  0      OPC=<label>          
  movq (%r12), %r13             #  272   0xa06c0  4      OPC=movq_r64_m64     
  xorl %esi, %esi               #  273   0xa06c4  2      OPC=xorl_r32_r32     
  movq $0x0, (%r12)             #  274   0xa06c6  8      OPC=movq_m64_imm32   
  xorl %r14d, %r14d             #  275   0xa06ce  3      OPC=xorl_r32_r32     
  movl $0x17, %edi              #  276   0xa06d1  5      OPC=movl_r32_imm32   
  jmpq .L_a04f4                 #  277   0xa06d6  5      OPC=jmpq_label_1     
  nop                           #  278   0xa06db  1      OPC=nop              
  nop                           #  279   0xa06dc  1      OPC=nop              
  nop                           #  280   0xa06dd  1      OPC=nop              
  nop                           #  281   0xa06de  1      OPC=nop              
  nop                           #  282   0xa06df  1      OPC=nop              
.L_a06e0:                       #        0xa06e0  0      OPC=<label>          
  addq $0x1, %rbx               #  283   0xa06e0  4      OPC=addq_r64_imm8    
  movl $0x1, %ecx               #  284   0xa06e4  5      OPC=movl_r32_imm32   
  movl $0x1, %edx               #  285   0xa06e9  5      OPC=movl_r32_imm32   
  movq %r12, %rsi               #  286   0xa06ee  3      OPC=movq_r64_r64     
  movq %r12, %rdi               #  287   0xa06f1  3      OPC=movq_r64_r64     
  callq .__mpn_rshift           #  288   0xa06f4  5      OPC=callq_label      
  orq $0x800000, (%r12)         #  289   0xa06f9  8      OPC=orq_m64_imm32    
  cmpq $0x81, %rbx              #  290   0xa0701  7      OPC=cmpq_r64_imm32   
  je .L_a0421                   #  291   0xa0708  6      OPC=je_label_1       
  jmpq .L_a05ec                 #  292   0xa070e  5      OPC=jmpq_label_1     
  nop                           #  293   0xa0713  1      OPC=nop              
  nop                           #  294   0xa0714  1      OPC=nop              
  nop                           #  295   0xa0715  1      OPC=nop              
  nop                           #  296   0xa0716  1      OPC=nop              
  nop                           #  297   0xa0717  1      OPC=nop              
.L_a0718:                       #        0xa0718  0      OPC=<label>          
  movq $0xffffff81, %rax        #  298   0xa0718  7      OPC=movq_r64_imm32   
  movl $0x1, %ecx               #  299   0xa071f  5      OPC=movl_r32_imm32   
  movl $0x1, %edx               #  300   0xa0724  5      OPC=movl_r32_imm32   
  subq %rbx, %rax               #  301   0xa0729  3      OPC=subq_r64_r64     
  movq %r12, %rsi               #  302   0xa072c  3      OPC=movq_r64_r64     
  movq %r12, %rdi               #  303   0xa072f  3      OPC=movq_r64_r64     
  movl %r9d, 0x8(%rsp)          #  304   0xa0732  5      OPC=movl_m32_r32     
  movq %rax, %rbx               #  305   0xa0737  3      OPC=movq_r64_r64     
  callq .__mpn_rshift           #  306   0xa073a  5      OPC=callq_label      
  movl 0x8(%rsp), %r9d          #  307   0xa073f  5      OPC=movl_r32_m32     
.L_a0744:                       #        0xa0744  0      OPC=<label>          
  movq (%r12), %r14             #  308   0xa0744  4      OPC=movq_r64_m64     
  movl %ebx, %edi               #  309   0xa0748  2      OPC=movl_r32_r32     
  movl %r14d, %esi              #  310   0xa074a  3      OPC=movl_r32_r32     
  andl $0x1, %esi               #  311   0xa074d  3      OPC=andl_r32_imm8    
  jmpq .L_a04f4                 #  312   0xa0750  5      OPC=jmpq_label_1     
  nop                           #  313   0xa0755  1      OPC=nop              
  nop                           #  314   0xa0756  1      OPC=nop              
  nop                           #  315   0xa0757  1      OPC=nop              
  nop                           #  316   0xa0758  1      OPC=nop              
  nop                           #  317   0xa0759  1      OPC=nop              
  nop                           #  318   0xa075a  1      OPC=nop              
  nop                           #  319   0xa075b  1      OPC=nop              
  nop                           #  320   0xa075c  1      OPC=nop              
  nop                           #  321   0xa075d  1      OPC=nop              
  nop                           #  322   0xa075e  1      OPC=nop              
  nop                           #  323   0xa075f  1      OPC=nop              
                                                                              
.size round_and_return, .-round_and_return

