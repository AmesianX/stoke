  .text
  .globl execvpe
  .type execvpe, @function

#! file-offset 0xb6af0
#! rip-offset  0xb6af0
#! capacity    1200 bytes

# Text                          #  Line  RIP      Bytes  Opcode                
.execvpe:                       #        0xb6af0  0      OPC=<label>           
  cmpb $0x0, (%rdi)             #  1     0xb6af0  3      OPC=cmpb_m8_imm8      
  je .L_b6b58                   #  2     0xb6af3  2      OPC=je_label          
  pushq %rbp                    #  3     0xb6af5  1      OPC=pushq_r64_1       
  movq %rsp, %rbp               #  4     0xb6af6  3      OPC=movq_r64_r64      
  pushq %r15                    #  5     0xb6af9  2      OPC=pushq_r64_1       
  pushq %r14                    #  6     0xb6afb  2      OPC=pushq_r64_1       
  pushq %r13                    #  7     0xb6afd  2      OPC=pushq_r64_1       
  pushq %r12                    #  8     0xb6aff  2      OPC=pushq_r64_1       
  movq %rdi, %r13               #  9     0xb6b01  3      OPC=movq_r64_r64      
  pushq %rbx                    #  10    0xb6b04  1      OPC=pushq_r64_1       
  movq %rsi, %rbx               #  11    0xb6b05  3      OPC=movq_r64_r64      
  movl $0x2f, %esi              #  12    0xb6b08  5      OPC=movl_r32_imm32    
  movq %rdx, %r12               #  13    0xb6b0d  3      OPC=movq_r64_r64      
  subq $0x48, %rsp              #  14    0xb6b10  4      OPC=subq_r64_imm8     
  callq .__GI_strchr            #  15    0xb6b14  5      OPC=callq_label       
  testq %rax, %rax              #  16    0xb6b19  3      OPC=testq_r64_r64     
  je .L_b6c28                   #  17    0xb6b1c  6      OPC=je_label_1        
  movq %r12, %rdx               #  18    0xb6b22  3      OPC=movq_r64_r64      
  movq %rbx, %rsi               #  19    0xb6b25  3      OPC=movq_r64_r64      
  movq %r13, %rdi               #  20    0xb6b28  3      OPC=movq_r64_r64      
  callq .execve                 #  21    0xb6b2b  5      OPC=callq_label       
  movq 0x2e4349(%rip), %rax     #  22    0xb6b30  7      OPC=movq_r64_m64      
  cmpl $0x8, (%rax)             #  23    0xb6b37  3      OPC=cmpl_m32_imm8     
  nop                           #  24    0xb6b3a  1      OPC=nop               
  je .L_b6b70                   #  25    0xb6b3b  2      OPC=je_label          
.L_b6b3d:                       #        0xb6b3d  0      OPC=<label>           
  leaq -0x28(%rbp), %rsp        #  26    0xb6b3d  4      OPC=leaq_r64_m16      
  movl $0xffffffff, %eax        #  27    0xb6b41  6      OPC=movl_r32_imm32_1  
  popq %rbx                     #  28    0xb6b47  1      OPC=popq_r64_1        
  popq %r12                     #  29    0xb6b48  2      OPC=popq_r64_1        
  popq %r13                     #  30    0xb6b4a  2      OPC=popq_r64_1        
  popq %r14                     #  31    0xb6b4c  2      OPC=popq_r64_1        
  popq %r15                     #  32    0xb6b4e  2      OPC=popq_r64_1        
  popq %rbp                     #  33    0xb6b50  1      OPC=popq_r64_1        
  retq                          #  34    0xb6b51  1      OPC=retq              
  nop                           #  35    0xb6b52  1      OPC=nop               
  nop                           #  36    0xb6b53  1      OPC=nop               
  nop                           #  37    0xb6b54  1      OPC=nop               
  nop                           #  38    0xb6b55  1      OPC=nop               
  nop                           #  39    0xb6b56  1      OPC=nop               
  nop                           #  40    0xb6b57  1      OPC=nop               
  nop                           #  41    0xb6b58  1      OPC=nop               
.L_b6b58:                       #        0xb6b59  0      OPC=<label>           
  movq 0x2e4321(%rip), %rax     #  42    0xb6b59  7      OPC=movq_r64_m64      
  movl $0x2, (%rax)             #  43    0xb6b60  6      OPC=movl_m32_imm32    
  nop                           #  44    0xb6b66  1      OPC=nop               
  movl $0xffffffff, %eax        #  45    0xb6b67  6      OPC=movl_r32_imm32_1  
  retq                          #  46    0xb6b6d  1      OPC=retq              
  nop                           #  47    0xb6b6e  1      OPC=nop               
  nop                           #  48    0xb6b6f  1      OPC=nop               
  nop                           #  49    0xb6b70  1      OPC=nop               
  nop                           #  50    0xb6b71  1      OPC=nop               
.L_b6b70:                       #        0xb6b72  0      OPC=<label>           
  movq %rbx, %rax               #  51    0xb6b72  3      OPC=movq_r64_r64      
  xorl %edx, %edx               #  52    0xb6b75  2      OPC=xorl_r32_r32      
  jmpq .L_b6b83                 #  53    0xb6b77  2      OPC=jmpq_label        
  nop                           #  54    0xb6b79  1      OPC=nop               
  nop                           #  55    0xb6b7a  1      OPC=nop               
  nop                           #  56    0xb6b7b  1      OPC=nop               
  nop                           #  57    0xb6b7c  1      OPC=nop               
  nop                           #  58    0xb6b7d  1      OPC=nop               
  nop                           #  59    0xb6b7e  1      OPC=nop               
  nop                           #  60    0xb6b7f  1      OPC=nop               
  nop                           #  61    0xb6b80  1      OPC=nop               
  nop                           #  62    0xb6b81  1      OPC=nop               
.L_b6b80:                       #        0xb6b82  0      OPC=<label>           
  movl %r15d, %edx              #  63    0xb6b82  3      OPC=movl_r32_r32      
.L_b6b83:                       #        0xb6b85  0      OPC=<label>           
  addq $0x8, %rax               #  64    0xb6b85  4      OPC=addq_r64_imm8     
  leal 0x1(%rdx), %r15d         #  65    0xb6b89  4      OPC=leal_r32_m16      
  cmpq $0x0, -0x8(%rax)         #  66    0xb6b8d  5      OPC=cmpq_m64_imm8     
  jne .L_b6b80                  #  67    0xb6b92  2      OPC=jne_label         
  leal 0x2(%rdx), %r14d         #  68    0xb6b94  4      OPC=leal_r32_m16      
  movslq %r14d, %r14            #  69    0xb6b98  3      OPC=movslq_r64_r32    
  shlq $0x3, %r14               #  70    0xb6b9b  4      OPC=shlq_r64_imm8     
  cmpq $0x1000, %r14            #  71    0xb6b9f  7      OPC=cmpq_r64_imm32    
  ja .L_b6e6b                   #  72    0xb6ba6  6      OPC=ja_label_1        
.L_b6baa:                       #        0xb6bac  0      OPC=<label>           
  addq $0x1e, %r14              #  73    0xb6bac  4      OPC=addq_r64_imm8     
  andq $0xf0, %r14              #  74    0xb6bb0  4      OPC=andq_r64_imm8     
  subq %r14, %rsp               #  75    0xb6bb4  3      OPC=subq_r64_r64      
  xorl %r14d, %r14d             #  76    0xb6bb7  3      OPC=xorl_r32_r32      
  leaq 0xf(%rsp), %rsi          #  77    0xb6bba  5      OPC=leaq_r64_m16      
  andq $0xf0, %rsi              #  78    0xb6bbf  4      OPC=andq_r64_imm8     
.L_b6bc1:                       #        0xb6bc3  0      OPC=<label>           
  leaq 0xacd62(%rip), %rax      #  79    0xb6bc3  7      OPC=leaq_r64_m16      
  cmpl $0x1, %r15d              #  80    0xb6bca  4      OPC=cmpl_r32_imm8     
  movq %r13, 0x8(%rsi)          #  81    0xb6bce  4      OPC=movq_m64_r64      
  movq %rax, (%rsi)             #  82    0xb6bd2  3      OPC=movq_m64_r64      
  je .L_b6ea0                   #  83    0xb6bd5  6      OPC=je_label_1        
  leal -0x2(%r15), %ecx         #  84    0xb6bdb  4      OPC=leal_r32_m16      
  movslq %r15d, %r15            #  85    0xb6bdf  3      OPC=movslq_r64_r32    
  xorl %edx, %edx               #  86    0xb6be2  2      OPC=xorl_r32_r32      
  shlq $0x3, %r15               #  87    0xb6be4  4      OPC=shlq_r64_imm8     
  notq %rcx                     #  88    0xb6be8  3      OPC=notq_r64          
  addq %r15, %rbx               #  89    0xb6beb  3      OPC=addq_r64_r64      
  addq %rsi, %r15               #  90    0xb6bee  3      OPC=addq_r64_r64      
  shlq $0x3, %rcx               #  91    0xb6bf1  4      OPC=shlq_r64_imm8     
  nop                           #  92    0xb6bf5  1      OPC=nop               
  nop                           #  93    0xb6bf6  1      OPC=nop               
  nop                           #  94    0xb6bf7  1      OPC=nop               
  nop                           #  95    0xb6bf8  1      OPC=nop               
  nop                           #  96    0xb6bf9  1      OPC=nop               
.L_b6bf8:                       #        0xb6bfa  0      OPC=<label>           
  movq -0x8(%rbx,%rdx,1), %rax  #  97    0xb6bfa  5      OPC=movq_r64_m64      
  movq %rax, (%r15,%rdx,1)      #  98    0xb6bff  4      OPC=movq_m64_r64      
  subq $0x8, %rdx               #  99    0xb6c03  4      OPC=subq_r64_imm8     
  cmpq %rcx, %rdx               #  100   0xb6c07  3      OPC=cmpq_r64_r64      
  jne .L_b6bf8                  #  101   0xb6c0a  2      OPC=jne_label         
  movq (%rsi), %rdi             #  102   0xb6c0c  3      OPC=movq_r64_m64      
.L_b6c0d:                       #        0xb6c0f  0      OPC=<label>           
  movq %r12, %rdx               #  103   0xb6c0f  3      OPC=movq_r64_r64      
  callq .execve                 #  104   0xb6c12  5      OPC=callq_label       
  movq %r14, %rdi               #  105   0xb6c17  3      OPC=movq_r64_r64      
  callq .L_1f8c0                #  106   0xb6c1a  5      OPC=callq_label       
  jmpq .L_b6b3d                 #  107   0xb6c1f  5      OPC=jmpq_label_1      
  nop                           #  108   0xb6c24  1      OPC=nop               
  nop                           #  109   0xb6c25  1      OPC=nop               
  nop                           #  110   0xb6c26  1      OPC=nop               
  nop                           #  111   0xb6c27  1      OPC=nop               
  nop                           #  112   0xb6c28  1      OPC=nop               
  nop                           #  113   0xb6c29  1      OPC=nop               
.L_b6c28:                       #        0xb6c2a  0      OPC=<label>           
  leaq 0xac92d(%rip), %rdi      #  114   0xb6c2a  7      OPC=leaq_r64_m16      
  callq .getenv                 #  115   0xb6c31  5      OPC=callq_label       
  testq %rax, %rax              #  116   0xb6c36  3      OPC=testq_r64_r64     
  movq %rax, %r15               #  117   0xb6c39  3      OPC=movq_r64_r64      
  je .L_b6f06                   #  118   0xb6c3c  6      OPC=je_label_1        
  movq %rax, %rdi               #  119   0xb6c42  3      OPC=movq_r64_r64      
  movl $0x1, %r14d              #  120   0xb6c45  6      OPC=movl_r32_imm32    
  callq .strlen                 #  121   0xb6c4b  5      OPC=callq_label       
  movq %rax, %r8                #  122   0xb6c50  3      OPC=movq_r64_r64      
.L_b6c51:                       #        0xb6c53  0      OPC=<label>           
  movq %r13, %rdi               #  123   0xb6c53  3      OPC=movq_r64_r64      
  movq %r8, -0x38(%rbp)         #  124   0xb6c56  4      OPC=movq_m64_r64      
  callq .strlen                 #  125   0xb6c5a  5      OPC=callq_label       
  movq -0x38(%rbp), %r8         #  126   0xb6c5f  4      OPC=movq_r64_m64      
  leaq 0x1(%rax), %rcx          #  127   0xb6c63  4      OPC=leaq_r64_m16      
  leaq (%rcx,%r8,1), %rdx       #  128   0xb6c67  4      OPC=leaq_r64_m16      
  leaq (%rdx,%r14,1), %rax      #  129   0xb6c6b  4      OPC=leaq_r64_m16      
  cmpq $0x1000, %rax            #  130   0xb6c6f  6      OPC=cmpq_rax_imm32    
  movq %rax, -0x48(%rbp)        #  131   0xb6c75  4      OPC=movq_m64_r64      
  ja .L_b6eac                   #  132   0xb6c79  6      OPC=ja_label_1        
.L_b6c7d:                       #        0xb6c7f  0      OPC=<label>           
  movq -0x48(%rbp), %rax        #  133   0xb6c7f  4      OPC=movq_r64_m64      
  movq $0x0, -0x58(%rbp)        #  134   0xb6c83  8      OPC=movq_m64_imm32    
  leaq 0x1e(%rax), %rsi         #  135   0xb6c8b  4      OPC=leaq_r64_m16      
  andq $0xf0, %rsi              #  136   0xb6c8f  4      OPC=andq_r64_imm8     
  subq %rsi, %rsp               #  137   0xb6c93  3      OPC=subq_r64_r64      
  leaq 0xf(%rsp), %r14          #  138   0xb6c96  5      OPC=leaq_r64_m16      
  andq $0xf0, %r14              #  139   0xb6c9b  4      OPC=andq_r64_imm8     
.L_b6c9d:                       #        0xb6c9f  0      OPC=<label>           
  testq %r15, %r15              #  140   0xb6c9f  3      OPC=testq_r64_r64     
  je .L_b6f1d                   #  141   0xb6ca2  6      OPC=je_label_1        
.L_b6ca6:                       #        0xb6ca8  0      OPC=<label>           
  leaq 0x1(%r14,%r8,1), %rdi    #  142   0xb6ca8  5      OPC=leaq_r64_m16      
  movq %rcx, %rdx               #  143   0xb6cad  3      OPC=movq_r64_r64      
  movq %r13, %rsi               #  144   0xb6cb0  3      OPC=movq_r64_r64      
  callq .__GI_memcpy            #  145   0xb6cb3  5      OPC=callq_label       
  movq %rax, -0x38(%rbp)        #  146   0xb6cb8  4      OPC=movq_m64_r64      
  movb $0x2f, -0x1(%rax)        #  147   0xb6cbc  4      OPC=movb_m8_imm8      
  movq %rbx, %rax               #  148   0xb6cc0  3      OPC=movq_r64_r64      
  movb $0x0, -0x50(%rbp)        #  149   0xb6cc3  4      OPC=movb_m8_imm8      
  movq %r15, %rbx               #  150   0xb6cc7  3      OPC=movq_r64_r64      
  movq $0x0, -0x60(%rbp)        #  151   0xb6cca  8      OPC=movq_m64_imm32    
  movq $0x0, -0x40(%rbp)        #  152   0xb6cd2  8      OPC=movq_m64_imm32    
  movq %rax, %r15               #  153   0xb6cda  3      OPC=movq_r64_r64      
.L_b6cdb:                       #        0xb6cdd  0      OPC=<label>           
  movl $0x3a, %esi              #  154   0xb6cdd  5      OPC=movl_r32_imm32    
  movq %rbx, %rdi               #  155   0xb6ce2  3      OPC=movq_r64_r64      
  callq .strchrnul              #  156   0xb6ce5  5      OPC=callq_label       
  movq %rax, %r13               #  157   0xb6cea  3      OPC=movq_r64_r64      
  movq -0x38(%rbp), %rax        #  158   0xb6ced  4      OPC=movq_r64_m64      
  cmpq %r13, %rbx               #  159   0xb6cf1  3      OPC=cmpq_r64_r64      
  movq %rax, %r14               #  160   0xb6cf4  3      OPC=movq_r64_r64      
  je .L_b6d11                   #  161   0xb6cf7  2      OPC=je_label          
  movq %r13, %rdx               #  162   0xb6cf9  3      OPC=movq_r64_r64      
  movq %rbx, %rsi               #  163   0xb6cfc  3      OPC=movq_r64_r64      
  subq %rbx, %rdx               #  164   0xb6cff  3      OPC=subq_r64_r64      
  movq %rdx, %rdi               #  165   0xb6d02  3      OPC=movq_r64_r64      
  notq %rdi                     #  166   0xb6d05  3      OPC=notq_r64          
  addq %rax, %rdi               #  167   0xb6d08  3      OPC=addq_r64_r64      
  callq .__GI_memcpy            #  168   0xb6d0b  5      OPC=callq_label       
  movq %rax, %r14               #  169   0xb6d10  3      OPC=movq_r64_r64      
.L_b6d11:                       #        0xb6d13  0      OPC=<label>           
  movq %r12, %rdx               #  170   0xb6d13  3      OPC=movq_r64_r64      
  movq %r15, %rsi               #  171   0xb6d16  3      OPC=movq_r64_r64      
  movq %r14, %rdi               #  172   0xb6d19  3      OPC=movq_r64_r64      
  callq .execve                 #  173   0xb6d1c  5      OPC=callq_label       
  movq 0x2e415a(%rip), %rax     #  174   0xb6d21  7      OPC=movq_r64_m64      
  movl (%rax), %edx             #  175   0xb6d28  2      OPC=movl_r32_m32      
  nop                           #  176   0xb6d2a  1      OPC=nop               
  cmpl $0x8, %edx               #  177   0xb6d2b  3      OPC=cmpl_r32_imm8     
  je .L_b6d90                   #  178   0xb6d2e  2      OPC=je_label          
.L_b6d2e:                       #        0xb6d30  0      OPC=<label>           
  cmpl $0x14, %edx              #  179   0xb6d30  3      OPC=cmpl_r32_imm8     
  jg .L_b6d80                   #  180   0xb6d33  2      OPC=jg_label          
  cmpl $0x13, %edx              #  181   0xb6d35  3      OPC=cmpl_r32_imm8     
  jge .L_b6d4a                  #  182   0xb6d38  2      OPC=jge_label         
  cmpl $0x2, %edx               #  183   0xb6d3a  3      OPC=cmpl_r32_imm8     
  je .L_b6d4a                   #  184   0xb6d3d  2      OPC=je_label          
  cmpl $0xd, %edx               #  185   0xb6d3f  3      OPC=cmpl_r32_imm8     
  jne .L_b6b3d                  #  186   0xb6d42  6      OPC=jne_label_1       
  movb $0x1, -0x50(%rbp)        #  187   0xb6d48  4      OPC=movb_m8_imm8      
.L_b6d4a:                       #        0xb6d4c  0      OPC=<label>           
  cmpb $0x0, (%r13)             #  188   0xb6d4c  5      OPC=cmpb_m8_imm8      
  leaq 0x1(%r13), %rbx          #  189   0xb6d51  4      OPC=leaq_r64_m16      
  jne .L_b6cdb                  #  190   0xb6d55  2      OPC=jne_label         
  cmpb $0x0, -0x50(%rbp)        #  191   0xb6d57  4      OPC=cmpb_m8_imm8      
  je .L_b6d69                   #  192   0xb6d5b  2      OPC=je_label          
  movq 0x2e411e(%rip), %rax     #  193   0xb6d5d  7      OPC=movq_r64_m64      
  movl $0xd, (%rax)             #  194   0xb6d64  6      OPC=movl_m32_imm32    
  nop                           #  195   0xb6d6a  1      OPC=nop               
.L_b6d69:                       #        0xb6d6b  0      OPC=<label>           
  movq -0x60(%rbp), %rdi        #  196   0xb6d6b  4      OPC=movq_r64_m64      
  callq .L_1f8c0                #  197   0xb6d6f  5      OPC=callq_label       
  movq -0x58(%rbp), %rdi        #  198   0xb6d74  4      OPC=movq_r64_m64      
  callq .L_1f8c0                #  199   0xb6d78  5      OPC=callq_label       
  jmpq .L_b6b3d                 #  200   0xb6d7d  5      OPC=jmpq_label_1      
.L_b6d80:                       #        0xb6d82  0      OPC=<label>           
  cmpl $0x6e, %edx              #  201   0xb6d82  3      OPC=cmpl_r32_imm8     
  je .L_b6d4a                   #  202   0xb6d85  2      OPC=je_label          
  cmpl $0x74, %edx              #  203   0xb6d87  3      OPC=cmpl_r32_imm8     
  jne .L_b6b3d                  #  204   0xb6d8a  6      OPC=jne_label_1       
  jmpq .L_b6d4a                 #  205   0xb6d90  2      OPC=jmpq_label        
.L_b6d90:                       #        0xb6d92  0      OPC=<label>           
  movq -0x40(%rbp), %rax        #  206   0xb6d92  4      OPC=movq_r64_m64      
  testq %rax, %rax              #  207   0xb6d96  3      OPC=testq_r64_r64     
  je .L_b6db7                   #  208   0xb6d99  2      OPC=je_label          
.L_b6d99:                       #        0xb6d9b  0      OPC=<label>           
  movq (%rax), %rdi             #  209   0xb6d9b  3      OPC=movq_r64_m64      
.L_b6d9c:                       #        0xb6d9e  0      OPC=<label>           
  movq -0x40(%rbp), %rsi        #  210   0xb6d9e  4      OPC=movq_r64_m64      
  movq %r12, %rdx               #  211   0xb6da2  3      OPC=movq_r64_r64      
  callq .execve                 #  212   0xb6da5  5      OPC=callq_label       
  movq 0x2e40d1(%rip), %rax     #  213   0xb6daa  7      OPC=movq_r64_m64      
  movl (%rax), %edx             #  214   0xb6db1  2      OPC=movl_r32_m32      
  nop                           #  215   0xb6db3  1      OPC=nop               
  jmpq .L_b6d2e                 #  216   0xb6db4  5      OPC=jmpq_label_1      
.L_b6db7:                       #        0xb6db9  0      OPC=<label>           
  movq %r15, %rax               #  217   0xb6db9  3      OPC=movq_r64_r64      
  xorl %edx, %edx               #  218   0xb6dbc  2      OPC=xorl_r32_r32      
  jmpq .L_b6dc2                 #  219   0xb6dbe  2      OPC=jmpq_label        
  xchgw %ax, %ax                #  220   0xb6dc0  2      OPC=xchgw_ax_r16      
.L_b6dc0:                       #        0xb6dc2  0      OPC=<label>           
  movl %ecx, %edx               #  221   0xb6dc2  2      OPC=movl_r32_r32      
.L_b6dc2:                       #        0xb6dc4  0      OPC=<label>           
  addq $0x8, %rax               #  222   0xb6dc4  4      OPC=addq_r64_imm8     
  leal 0x1(%rdx), %ecx          #  223   0xb6dc8  3      OPC=leal_r32_m16      
  cmpq $0x0, -0x8(%rax)         #  224   0xb6dcb  5      OPC=cmpq_m64_imm8     
  jne .L_b6dc0                  #  225   0xb6dd0  2      OPC=jne_label         
  leal 0x2(%rdx), %ebx          #  226   0xb6dd2  3      OPC=leal_r32_m16      
  movq -0x48(%rbp), %rax        #  227   0xb6dd5  4      OPC=movq_r64_m64      
  movslq %ebx, %rbx             #  228   0xb6dd9  3      OPC=movslq_r64_r32    
  shlq $0x3, %rbx               #  229   0xb6ddc  4      OPC=shlq_r64_imm8     
  leaq (%rbx,%rax,1), %rdi      #  230   0xb6de0  4      OPC=leaq_r64_m16      
  cmpq $0x1000, %rdi            #  231   0xb6de4  7      OPC=cmpq_r64_imm32    
  ja .L_b6f49                   #  232   0xb6deb  6      OPC=ja_label_1        
.L_b6def:                       #        0xb6df1  0      OPC=<label>           
  leaq 0x1e(%rbx), %rax         #  233   0xb6df1  4      OPC=leaq_r64_m16      
  xorl %edx, %edx               #  234   0xb6df5  2      OPC=xorl_r32_r32      
  movl $0x10, %ebx              #  235   0xb6df7  5      OPC=movl_r32_imm32    
  divq %rbx                     #  236   0xb6dfc  3      OPC=divq_r64          
  shlq $0x4, %rax               #  237   0xb6dff  4      OPC=shlq_r64_imm8     
  subq %rax, %rsp               #  238   0xb6e03  3      OPC=subq_r64_r64      
  leaq 0xf(%rsp), %rbx          #  239   0xb6e06  5      OPC=leaq_r64_m16      
  andq $0xf0, %rbx              #  240   0xb6e0b  4      OPC=andq_r64_imm8     
  movq %rbx, -0x40(%rbp)        #  241   0xb6e0f  4      OPC=movq_m64_r64      
.L_b6e11:                       #        0xb6e13  0      OPC=<label>           
  movq -0x40(%rbp), %rax        #  242   0xb6e13  4      OPC=movq_r64_m64      
  leaq 0xacb0e(%rip), %rbx      #  243   0xb6e17  7      OPC=leaq_r64_m16      
  cmpl $0x1, %ecx               #  244   0xb6e1e  3      OPC=cmpl_r32_imm8     
  movq %rbx, (%rax)             #  245   0xb6e21  3      OPC=movq_m64_r64      
  movq %r14, 0x8(%rax)          #  246   0xb6e24  4      OPC=movq_m64_r64      
  je .L_b6f7c                   #  247   0xb6e28  6      OPC=je_label_1        
  leal -0x2(%rcx), %esi         #  248   0xb6e2e  3      OPC=leal_r32_m16      
  movslq %ecx, %rcx             #  249   0xb6e31  3      OPC=movslq_r64_r32    
  shlq $0x3, %rcx               #  250   0xb6e34  4      OPC=shlq_r64_imm8     
  notq %rsi                     #  251   0xb6e38  3      OPC=notq_r64          
  leaq (%r15,%rcx,1), %rdi      #  252   0xb6e3b  4      OPC=leaq_r64_m16      
  addq %rax, %rcx               #  253   0xb6e3f  3      OPC=addq_r64_r64      
  shlq $0x3, %rsi               #  254   0xb6e42  4      OPC=shlq_r64_imm8     
  xorl %eax, %eax               #  255   0xb6e46  2      OPC=xorl_r32_r32      
  nop                           #  256   0xb6e48  1      OPC=nop               
  nop                           #  257   0xb6e49  1      OPC=nop               
  nop                           #  258   0xb6e4a  1      OPC=nop               
  nop                           #  259   0xb6e4b  1      OPC=nop               
  nop                           #  260   0xb6e4c  1      OPC=nop               
  nop                           #  261   0xb6e4d  1      OPC=nop               
  nop                           #  262   0xb6e4e  1      OPC=nop               
  nop                           #  263   0xb6e4f  1      OPC=nop               
  nop                           #  264   0xb6e50  1      OPC=nop               
  nop                           #  265   0xb6e51  1      OPC=nop               
.L_b6e50:                       #        0xb6e52  0      OPC=<label>           
  movq -0x8(%rdi,%rax,1), %rdx  #  266   0xb6e52  5      OPC=movq_r64_m64      
  movq %rdx, (%rcx,%rax,1)      #  267   0xb6e57  4      OPC=movq_m64_r64      
  subq $0x8, %rax               #  268   0xb6e5b  4      OPC=subq_r64_imm8     
  cmpq %rsi, %rax               #  269   0xb6e5f  3      OPC=cmpq_r64_r64      
  jne .L_b6e50                  #  270   0xb6e62  2      OPC=jne_label         
  movq -0x40(%rbp), %rax        #  271   0xb6e64  4      OPC=movq_r64_m64      
  jmpq .L_b6d99                 #  272   0xb6e68  5      OPC=jmpq_label_1      
.L_b6e6b:                       #        0xb6e6d  0      OPC=<label>           
  movq %r14, %rdi               #  273   0xb6e6d  3      OPC=movq_r64_r64      
  callq .__libc_alloca_cutoff   #  274   0xb6e70  5      OPC=callq_label       
  testl %eax, %eax              #  275   0xb6e75  2      OPC=testl_r32_r32     
  jne .L_b6baa                  #  276   0xb6e77  6      OPC=jne_label_1       
  movq %r14, %rdi               #  277   0xb6e7d  3      OPC=movq_r64_r64      
  callq .memalign_plt           #  278   0xb6e80  5      OPC=callq_label       
  testq %rax, %rax              #  279   0xb6e85  3      OPC=testq_r64_r64     
  movq %rax, %r14               #  280   0xb6e88  3      OPC=movq_r64_r64      
  movq %rax, %rsi               #  281   0xb6e8b  3      OPC=movq_r64_r64      
  jne .L_b6bc1                  #  282   0xb6e8e  6      OPC=jne_label_1       
  jmpq .L_b6b3d                 #  283   0xb6e94  5      OPC=jmpq_label_1      
  nop                           #  284   0xb6e99  1      OPC=nop               
  nop                           #  285   0xb6e9a  1      OPC=nop               
  nop                           #  286   0xb6e9b  1      OPC=nop               
  nop                           #  287   0xb6e9c  1      OPC=nop               
  nop                           #  288   0xb6e9d  1      OPC=nop               
  nop                           #  289   0xb6e9e  1      OPC=nop               
  nop                           #  290   0xb6e9f  1      OPC=nop               
  nop                           #  291   0xb6ea0  1      OPC=nop               
  nop                           #  292   0xb6ea1  1      OPC=nop               
.L_b6ea0:                       #        0xb6ea2  0      OPC=<label>           
  leaq 0xaca83(%rip), %rdi      #  293   0xb6ea2  7      OPC=leaq_r64_m16      
  jmpq .L_b6c0d                 #  294   0xb6ea9  5      OPC=jmpq_label_1      
.L_b6eac:                       #        0xb6eae  0      OPC=<label>           
  movq %rax, %rdi               #  295   0xb6eae  3      OPC=movq_r64_r64      
  movq %rdx, -0x50(%rbp)        #  296   0xb6eb1  4      OPC=movq_m64_r64      
  movq %rcx, -0x40(%rbp)        #  297   0xb6eb5  4      OPC=movq_m64_r64      
  callq .__libc_alloca_cutoff   #  298   0xb6eb9  5      OPC=callq_label       
  testl %eax, %eax              #  299   0xb6ebe  2      OPC=testl_r32_r32     
  movq -0x38(%rbp), %r8         #  300   0xb6ec0  4      OPC=movq_r64_m64      
  movq -0x40(%rbp), %rcx        #  301   0xb6ec4  4      OPC=movq_r64_m64      
  movq -0x50(%rbp), %rdx        #  302   0xb6ec8  4      OPC=movq_r64_m64      
  jne .L_b6c7d                  #  303   0xb6ecc  6      OPC=jne_label_1       
  movq -0x48(%rbp), %rdi        #  304   0xb6ed2  4      OPC=movq_r64_m64      
  movq %rdx, -0x50(%rbp)        #  305   0xb6ed6  4      OPC=movq_m64_r64      
  movq %rcx, -0x40(%rbp)        #  306   0xb6eda  4      OPC=movq_m64_r64      
  movq %r8, -0x38(%rbp)         #  307   0xb6ede  4      OPC=movq_m64_r64      
  callq .memalign_plt           #  308   0xb6ee2  5      OPC=callq_label       
  testq %rax, %rax              #  309   0xb6ee7  3      OPC=testq_r64_r64     
  movq %rax, %r14               #  310   0xb6eea  3      OPC=movq_r64_r64      
  je .L_b6b3d                   #  311   0xb6eed  6      OPC=je_label_1        
  movq %rax, -0x58(%rbp)        #  312   0xb6ef3  4      OPC=movq_m64_r64      
  movq -0x38(%rbp), %r8         #  313   0xb6ef7  4      OPC=movq_r64_m64      
  movq -0x40(%rbp), %rcx        #  314   0xb6efb  4      OPC=movq_r64_m64      
  movq -0x50(%rbp), %rdx        #  315   0xb6eff  4      OPC=movq_r64_m64      
  jmpq .L_b6c9d                 #  316   0xb6f03  5      OPC=jmpq_label_1      
.L_b6f06:                       #        0xb6f08  0      OPC=<label>           
  xorl %edx, %edx               #  317   0xb6f08  2      OPC=xorl_r32_r32      
  xorl %esi, %esi               #  318   0xb6f0a  2      OPC=xorl_r32_r32      
  xorl %edi, %edi               #  319   0xb6f0c  2      OPC=xorl_r32_r32      
  callq .confstr                #  320   0xb6f0e  5      OPC=callq_label       
  movq %rax, %r8                #  321   0xb6f13  3      OPC=movq_r64_r64      
  leaq 0x2(%rax), %r14          #  322   0xb6f16  4      OPC=leaq_r64_m16      
  jmpq .L_b6c51                 #  323   0xb6f1a  5      OPC=jmpq_label_1      
.L_b6f1d:                       #        0xb6f1f  0      OPC=<label>           
  leaq 0x1(%r14,%rdx,1), %r15   #  324   0xb6f1f  5      OPC=leaq_r64_m16      
  xorl %edi, %edi               #  325   0xb6f24  2      OPC=xorl_r32_r32      
  movq %r8, %rdx                #  326   0xb6f26  3      OPC=movq_r64_r64      
  movq %rcx, -0x40(%rbp)        #  327   0xb6f29  4      OPC=movq_m64_r64      
  movq %r8, -0x38(%rbp)         #  328   0xb6f2d  4      OPC=movq_m64_r64      
  leaq 0x1(%r15), %rsi          #  329   0xb6f31  4      OPC=leaq_r64_m16      
  movb $0x3a, (%r15)            #  330   0xb6f35  4      OPC=movb_m8_imm8      
  callq .confstr                #  331   0xb6f39  5      OPC=callq_label       
  movq -0x40(%rbp), %rcx        #  332   0xb6f3e  4      OPC=movq_r64_m64      
  movq -0x38(%rbp), %r8         #  333   0xb6f42  4      OPC=movq_r64_m64      
  jmpq .L_b6ca6                 #  334   0xb6f46  5      OPC=jmpq_label_1      
.L_b6f49:                       #        0xb6f4b  0      OPC=<label>           
  movl %ecx, -0x40(%rbp)        #  335   0xb6f4b  3      OPC=movl_m32_r32      
  callq .__libc_alloca_cutoff   #  336   0xb6f4e  5      OPC=callq_label       
  testl %eax, %eax              #  337   0xb6f53  2      OPC=testl_r32_r32     
  movl -0x40(%rbp), %ecx        #  338   0xb6f55  3      OPC=movl_r32_m32      
  jne .L_b6def                  #  339   0xb6f58  6      OPC=jne_label_1       
  movq %rbx, %rdi               #  340   0xb6f5e  3      OPC=movq_r64_r64      
  movl %ecx, -0x64(%rbp)        #  341   0xb6f61  3      OPC=movl_m32_r32      
  callq .memalign_plt           #  342   0xb6f64  5      OPC=callq_label       
  testq %rax, %rax              #  343   0xb6f69  3      OPC=testq_r64_r64     
  movq %rax, -0x40(%rbp)        #  344   0xb6f6c  4      OPC=movq_m64_r64      
  je .L_b6f88                   #  345   0xb6f70  2      OPC=je_label          
  movq %rax, -0x60(%rbp)        #  346   0xb6f72  4      OPC=movq_m64_r64      
  movl -0x64(%rbp), %ecx        #  347   0xb6f76  3      OPC=movl_r32_m32      
  jmpq .L_b6e11                 #  348   0xb6f79  5      OPC=jmpq_label_1      
.L_b6f7c:                       #        0xb6f7e  0      OPC=<label>           
  leaq 0xac9a7(%rip), %rdi      #  349   0xb6f7e  7      OPC=leaq_r64_m16      
  jmpq .L_b6d9c                 #  350   0xb6f85  5      OPC=jmpq_label_1      
.L_b6f88:                       #        0xb6f8a  0      OPC=<label>           
  movq $0x0, -0x60(%rbp)        #  351   0xb6f8a  8      OPC=movq_m64_imm32    
  jmpq .L_b6d69                 #  352   0xb6f92  5      OPC=jmpq_label_1      
  nop                           #  353   0xb6f97  1      OPC=nop               
  nop                           #  354   0xb6f98  1      OPC=nop               
  nop                           #  355   0xb6f99  1      OPC=nop               
  nop                           #  356   0xb6f9a  1      OPC=nop               
  nop                           #  357   0xb6f9b  1      OPC=nop               
  nop                           #  358   0xb6f9c  1      OPC=nop               
  nop                           #  359   0xb6f9d  1      OPC=nop               
  nop                           #  360   0xb6f9e  1      OPC=nop               
  nop                           #  361   0xb6f9f  1      OPC=nop               
  nop                           #  362   0xb6fa0  1      OPC=nop               
  nop                           #  363   0xb6fa1  1      OPC=nop               
                                                                               
.size execvpe, .-execvpe

