  .text
  .globl next_line
  .type next_line, @function

#! file-offset 0xe4c60
#! rip-offset  0xe4c60
#! capacity    528 bytes

# Text                       #  Line  RIP      Bytes  Opcode               
.next_line:                  #        0xe4c60  0      OPC=<label>          
  pushq %r15                 #  1     0xe4c60  2      OPC=pushq_r64_1      
  pushq %r14                 #  2     0xe4c62  2      OPC=pushq_r64_1      
  movq %rdx, %r15            #  3     0xe4c64  3      OPC=movq_r64_r64     
  pushq %r13                 #  4     0xe4c67  2      OPC=pushq_r64_1      
  pushq %r12                 #  5     0xe4c69  2      OPC=pushq_r64_1      
  movq %r8, %r14             #  6     0xe4c6b  3      OPC=movq_r64_r64     
  pushq %rbp                 #  7     0xe4c6e  1      OPC=pushq_r64_1      
  pushq %rbx                 #  8     0xe4c6f  1      OPC=pushq_r64_1      
  movq %rcx, %rbx            #  9     0xe4c70  3      OPC=movq_r64_r64     
  subq $0x18, %rsp           #  10    0xe4c73  4      OPC=subq_r64_imm8    
  movq (%rcx), %rbp          #  11    0xe4c77  3      OPC=movq_r64_m64     
  movq (%rdx), %r12          #  12    0xe4c7a  3      OPC=movq_r64_m64     
  movl %edi, 0x8(%rsp)       #  13    0xe4c7d  4      OPC=movl_m32_r32     
  movq %rsi, (%rsp)          #  14    0xe4c81  4      OPC=movq_m64_r64     
  movl $0xa, %esi            #  15    0xe4c85  5      OPC=movl_r32_imm32   
  movq %rbp, %r13            #  16    0xe4c8a  3      OPC=movq_r64_r64     
  movq %r12, %rdi            #  17    0xe4c8d  3      OPC=movq_r64_r64     
  subq %r12, %r13            #  18    0xe4c90  3      OPC=subq_r64_r64     
  movq %r13, %rdx            #  19    0xe4c93  3      OPC=movq_r64_r64     
  callq .memchr              #  20    0xe4c96  5      OPC=callq_label      
  testq %rax, %rax           #  21    0xe4c9b  3      OPC=testq_r64_r64    
  je .L_e4cd0                #  22    0xe4c9e  2      OPC=je_label         
.L_e4ca0:                    #        0xe4ca0  0      OPC=<label>          
  addq $0x1, %rax            #  23    0xe4ca0  4      OPC=addq_r64_imm8    
  movq %rax, (%r15)          #  24    0xe4ca4  3      OPC=movq_m64_r64     
  movq (%rbx), %rdx          #  25    0xe4ca7  3      OPC=movq_r64_m64     
  cmpq %rdx, %rax            #  26    0xe4caa  3      OPC=cmpq_r64_r64     
  ja .L_e4e44                #  27    0xe4cad  6      OPC=ja_label_1       
  cmpq %rdx, %r12            #  28    0xe4cb3  3      OPC=cmpq_r64_r64     
  movl $0x0, %eax            #  29    0xe4cb6  5      OPC=movl_r32_imm32   
  cmovneq %r12, %rax         #  30    0xe4cbb  4      OPC=cmovneq_r64_r64  
.L_e4cbf:                    #        0xe4cbf  0      OPC=<label>          
  addq $0x18, %rsp           #  31    0xe4cbf  4      OPC=addq_r64_imm8    
  popq %rbx                  #  32    0xe4cc3  1      OPC=popq_r64_1       
  popq %rbp                  #  33    0xe4cc4  1      OPC=popq_r64_1       
  popq %r12                  #  34    0xe4cc5  2      OPC=popq_r64_1       
  popq %r13                  #  35    0xe4cc7  2      OPC=popq_r64_1       
  popq %r14                  #  36    0xe4cc9  2      OPC=popq_r64_1       
  popq %r15                  #  37    0xe4ccb  2      OPC=popq_r64_1       
  retq                       #  38    0xe4ccd  1      OPC=retq             
  xchgw %ax, %ax             #  39    0xe4cce  2      OPC=xchgw_ax_r16     
.L_e4cd0:                    #        0xe4cd0  0      OPC=<label>          
  cmpq (%rsp), %r12          #  40    0xe4cd0  4      OPC=cmpq_r64_m64     
  je .L_e4cdb                #  41    0xe4cd4  2      OPC=je_label         
  cmpq %r14, %rbp            #  42    0xe4cd6  3      OPC=cmpq_r64_r64     
  je .L_e4ce1                #  43    0xe4cd9  2      OPC=je_label         
.L_e4cdb:                    #        0xe4cdb  0      OPC=<label>          
  leaq -0x1(%rbp), %rax      #  44    0xe4cdb  4      OPC=leaq_r64_m16     
  jmpq .L_e4ca0              #  45    0xe4cdf  2      OPC=jmpq_label       
.L_e4ce1:                    #        0xe4ce1  0      OPC=<label>          
  movq (%rsp), %r14          #  46    0xe4ce1  4      OPC=movq_r64_m64     
  movq %r13, %rdx            #  47    0xe4ce5  3      OPC=movq_r64_r64     
  movq %r12, %rsi            #  48    0xe4ce8  3      OPC=movq_r64_r64     
  xorl %r12d, %r12d          #  49    0xe4ceb  3      OPC=xorl_r32_r32     
  movq %r14, %rdi            #  50    0xe4cee  3      OPC=movq_r64_r64     
  callq .__GI_memmove        #  51    0xe4cf1  5      OPC=callq_label      
  movq %r14, %rax            #  52    0xe4cf6  3      OPC=movq_r64_r64     
  addq (%rbx), %rax          #  53    0xe4cf9  3      OPC=addq_r64_m64     
  movq %rbp, %rdx            #  54    0xe4cfc  3      OPC=movq_r64_r64     
  subq (%r15), %rax          #  55    0xe4cff  3      OPC=subq_r64_m64     
  movq %rax, (%rbx)          #  56    0xe4d02  3      OPC=movq_m64_r64     
  movslq 0x8(%rsp), %rax     #  57    0xe4d05  5      OPC=movslq_r64_m32   
  movq %r14, (%r15)          #  58    0xe4d0a  3      OPC=movq_m64_r64     
  movq (%rbx), %rsi          #  59    0xe4d0d  3      OPC=movq_r64_m64     
  movq %rax, 0x8(%rsp)       #  60    0xe4d10  5      OPC=movq_m64_r64     
  movq %rax, %rdi            #  61    0xe4d15  3      OPC=movq_r64_r64     
  subq %rsi, %rdx            #  62    0xe4d18  3      OPC=subq_r64_r64     
  movl %r12d, %eax           #  63    0xe4d1b  3      OPC=movl_r32_r32     
  syscall                    #  64    0xe4d1e  2      OPC=syscall          
  cmpq $0xfffff000, %rax     #  65    0xe4d20  6      OPC=cmpq_rax_imm32   
  jbe .L_e4d38               #  66    0xe4d26  2      OPC=jbe_label        
  movq 0x2b6151(%rip), %rdx  #  67    0xe4d28  7      OPC=movq_r64_m64     
  negl %eax                  #  68    0xe4d2f  2      OPC=negl_r32         
  movl %eax, (%rdx)          #  69    0xe4d31  2      OPC=movl_m32_r32     
  nop                        #  70    0xe4d33  1      OPC=nop              
  xorl %eax, %eax            #  71    0xe4d34  2      OPC=xorl_r32_r32     
  jmpq .L_e4cbf              #  72    0xe4d36  2      OPC=jmpq_label       
.L_e4d38:                    #        0xe4d38  0      OPC=<label>          
  testq %rax, %rax           #  73    0xe4d38  3      OPC=testq_r64_r64    
  js .L_e4dd1                #  74    0xe4d3b  6      OPC=js_label_1       
  addq (%rbx), %rax          #  75    0xe4d41  3      OPC=addq_r64_m64     
  movl $0xa, %esi            #  76    0xe4d44  5      OPC=movl_r32_imm32   
  movq %rax, (%rbx)          #  77    0xe4d49  3      OPC=movq_m64_r64     
  movq (%r15), %r13          #  78    0xe4d4c  3      OPC=movq_r64_m64     
  movq %rax, %rdx            #  79    0xe4d4f  3      OPC=movq_r64_r64     
  movq %rax, %r14            #  80    0xe4d52  3      OPC=movq_r64_r64     
  subq %r13, %rdx            #  81    0xe4d55  3      OPC=subq_r64_r64     
  movq %r13, %rdi            #  82    0xe4d58  3      OPC=movq_r64_r64     
  callq .memchr              #  83    0xe4d5b  5      OPC=callq_label      
  testq %rax, %rax           #  84    0xe4d60  3      OPC=testq_r64_r64    
  jne .L_e4e31               #  85    0xe4d63  6      OPC=jne_label_1      
  cmpq %r14, %rbp            #  86    0xe4d69  3      OPC=cmpq_r64_r64     
  jne .L_e4e63               #  87    0xe4d6c  6      OPC=jne_label_1      
  movq (%rsp), %rcx          #  88    0xe4d72  4      OPC=movq_r64_m64     
  movq %rbp, %rax            #  89    0xe4d76  3      OPC=movq_r64_r64     
  movq 0x8(%rsp), %rdi       #  90    0xe4d79  5      OPC=movq_r64_m64     
  subq %rcx, %rax            #  91    0xe4d7e  3      OPC=subq_r64_r64     
  leaq (%rax,%rax,2), %r14   #  92    0xe4d81  4      OPC=leaq_r64_m16     
  leaq 0x3(%r14), %rax       #  93    0xe4d85  4      OPC=leaq_r64_m16     
  testq %r14, %r14           #  94    0xe4d89  3      OPC=testq_r64_r64    
  cmovsq %rax, %r14          #  95    0xe4d8c  4      OPC=cmovsq_r64_r64   
  movq %rbp, %rax            #  96    0xe4d90  3      OPC=movq_r64_r64     
  sarq $0x2, %r14            #  97    0xe4d93  4      OPC=sarq_r64_imm8    
  addq %rcx, %r14            #  98    0xe4d97  3      OPC=addq_r64_r64     
  subq %r14, %rax            #  99    0xe4d9a  3      OPC=subq_r64_r64     
  movq %r14, (%rbx)          #  100   0xe4d9d  3      OPC=movq_m64_r64     
  movq %r14, %rsi            #  101   0xe4da0  3      OPC=movq_r64_r64     
  movq %rax, (%rsp)          #  102   0xe4da3  4      OPC=movq_m64_r64     
  movq %rax, %rdx            #  103   0xe4da7  3      OPC=movq_r64_r64     
  movl %r12d, %eax           #  104   0xe4daa  3      OPC=movl_r32_r32     
  syscall                    #  105   0xe4dad  2      OPC=syscall          
  cmpq $0xfffff000, %rax     #  106   0xe4daf  6      OPC=cmpq_rax_imm32   
  movq %rax, %r12            #  107   0xe4db5  3      OPC=movq_r64_r64     
  jbe .L_e4e03               #  108   0xe4db8  2      OPC=jbe_label        
  nop                        #  109   0xe4dba  1      OPC=nop              
  nop                        #  110   0xe4dbb  1      OPC=nop              
  nop                        #  111   0xe4dbc  1      OPC=nop              
  nop                        #  112   0xe4dbd  1      OPC=nop              
  nop                        #  113   0xe4dbe  1      OPC=nop              
  nop                        #  114   0xe4dbf  1      OPC=nop              
.L_e4dc0:                    #        0xe4dc0  0      OPC=<label>          
  movq 0x2b60b9(%rip), %rax  #  115   0xe4dc0  7      OPC=movq_r64_m64     
  movl %r12d, %r13d          #  116   0xe4dc7  3      OPC=movl_r32_r32     
  negl %r13d                 #  117   0xe4dca  3      OPC=negl_r32         
  movl %r13d, (%rax)         #  118   0xe4dcd  3      OPC=movl_m32_r32     
  nop                        #  119   0xe4dd0  1      OPC=nop              
.L_e4dd1:                    #        0xe4dd1  0      OPC=<label>          
  xorl %eax, %eax            #  120   0xe4dd1  2      OPC=xorl_r32_r32     
  jmpq .L_e4cbf              #  121   0xe4dd3  5      OPC=jmpq_label_1     
  nop                        #  122   0xe4dd8  1      OPC=nop              
  nop                        #  123   0xe4dd9  1      OPC=nop              
  nop                        #  124   0xe4dda  1      OPC=nop              
  nop                        #  125   0xe4ddb  1      OPC=nop              
  nop                        #  126   0xe4ddc  1      OPC=nop              
  nop                        #  127   0xe4ddd  1      OPC=nop              
  nop                        #  128   0xe4dde  1      OPC=nop              
  nop                        #  129   0xe4ddf  1      OPC=nop              
.L_e4de0:                    #        0xe4de0  0      OPC=<label>          
  cmpq %r8, %rbp             #  130   0xe4de0  3      OPC=cmpq_r64_r64     
  jne .L_e4e39               #  131   0xe4de3  2      OPC=jne_label        
  movq %r14, (%rbx)          #  132   0xe4de5  3      OPC=movq_m64_r64     
  movq (%rsp), %rdx          #  133   0xe4de8  4      OPC=movq_r64_m64     
  movq %r14, %rsi            #  134   0xe4dec  3      OPC=movq_r64_r64     
  movq 0x8(%rsp), %rdi       #  135   0xe4def  5      OPC=movq_r64_m64     
  xorl %eax, %eax            #  136   0xe4df4  2      OPC=xorl_r32_r32     
  syscall                    #  137   0xe4df6  2      OPC=syscall          
  cmpq $0xfffff000, %rax     #  138   0xe4df8  6      OPC=cmpq_rax_imm32   
  movq %rax, %r12            #  139   0xe4dfe  3      OPC=movq_r64_r64     
  ja .L_e4dc0                #  140   0xe4e01  2      OPC=ja_label         
.L_e4e03:                    #        0xe4e03  0      OPC=<label>          
  testq %r12, %r12           #  141   0xe4e03  3      OPC=testq_r64_r64    
  js .L_e4dd1                #  142   0xe4e06  2      OPC=js_label         
  movq (%rbx), %r13          #  143   0xe4e08  3      OPC=movq_r64_m64     
  movq %r12, %rdx            #  144   0xe4e0b  3      OPC=movq_r64_r64     
  movl $0xa, %esi            #  145   0xe4e0e  5      OPC=movl_r32_imm32   
  movq %r13, %rdi            #  146   0xe4e13  3      OPC=movq_r64_r64     
  callq .memchr              #  147   0xe4e16  5      OPC=callq_label      
  movb $0xa, (%r13)          #  148   0xe4e1b  5      OPC=movb_m8_imm8     
  movq %r12, %r8             #  149   0xe4e20  3      OPC=movq_r64_r64     
  addq (%rbx), %r8           #  150   0xe4e23  3      OPC=addq_r64_m64     
  testq %rax, %rax           #  151   0xe4e26  3      OPC=testq_r64_r64    
  movq %r8, (%rbx)           #  152   0xe4e29  3      OPC=movq_m64_r64     
  je .L_e4de0                #  153   0xe4e2c  2      OPC=je_label         
  movq (%r15), %r13          #  154   0xe4e2e  3      OPC=movq_r64_m64     
.L_e4e31:                    #        0xe4e31  0      OPC=<label>          
  movq %r13, %r12            #  155   0xe4e31  3      OPC=movq_r64_r64     
  jmpq .L_e4ca0              #  156   0xe4e34  5      OPC=jmpq_label_1     
.L_e4e39:                    #        0xe4e39  0      OPC=<label>          
  movq %r8, %rbp             #  157   0xe4e39  3      OPC=movq_r64_r64     
  movq (%r15), %r12          #  158   0xe4e3c  3      OPC=movq_r64_m64     
  jmpq .L_e4cdb              #  159   0xe4e3f  5      OPC=jmpq_label_1     
.L_e4e44:                    #        0xe4e44  0      OPC=<label>          
  leaq 0x80952(%rip), %rcx   #  160   0xe4e44  7      OPC=leaq_r64_m16     
  leaq 0x84626(%rip), %rsi   #  161   0xe4e4b  7      OPC=leaq_r64_m16     
  leaq 0x808fe(%rip), %rdi   #  162   0xe4e52  7      OPC=leaq_r64_m16     
  movl $0x77, %edx           #  163   0xe4e59  5      OPC=movl_r32_imm32   
  callq .__assert_fail       #  164   0xe4e5e  5      OPC=callq_label      
.L_e4e63:                    #        0xe4e63  0      OPC=<label>          
  movq %r14, %rbp            #  165   0xe4e63  3      OPC=movq_r64_r64     
  movq %r13, %r12            #  166   0xe4e66  3      OPC=movq_r64_r64     
  jmpq .L_e4cdb              #  167   0xe4e69  5      OPC=jmpq_label_1     
  xchgw %ax, %ax             #  168   0xe4e6e  2      OPC=xchgw_ax_r16     
                                                                           
.size next_line, .-next_line

