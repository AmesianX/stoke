  .text
  .globl _IO_getline_info
  .type _IO_getline_info, @function

#! file-offset 0x66d00
#! rip-offset  0x66d00
#! capacity    432 bytes

# Text                          #  Line  RIP      Bytes  Opcode               
._IO_getline_info:              #        0x66d00  0      OPC=<label>          
  pushq %r15                    #  1     0x66d00  2      OPC=pushq_r64_1      
  pushq %r14                    #  2     0x66d02  2      OPC=pushq_r64_1      
  movq %rdi, %r15               #  3     0x66d04  3      OPC=movq_r64_r64     
  pushq %r13                    #  4     0x66d07  2      OPC=pushq_r64_1      
  pushq %r12                    #  5     0x66d09  2      OPC=pushq_r64_1      
  movq %rdx, %r13               #  6     0x66d0b  3      OPC=movq_r64_r64     
  pushq %rbp                    #  7     0x66d0e  1      OPC=pushq_r64_1      
  pushq %rbx                    #  8     0x66d0f  1      OPC=pushq_r64_1      
  movl %ecx, %r12d              #  9     0x66d10  3      OPC=movl_r32_r32     
  subq $0x28, %rsp              #  10    0x66d13  4      OPC=subq_r64_imm8    
  testq %r9, %r9                #  11    0x66d17  3      OPC=testq_r64_r64    
  movq %rsi, 0x8(%rsp)          #  12    0x66d1a  5      OPC=movq_m64_r64     
  movl %r8d, 0x14(%rsp)         #  13    0x66d1f  5      OPC=movl_m32_r32     
  movq %r9, 0x18(%rsp)          #  14    0x66d24  5      OPC=movq_m64_r64     
  je .L_66d32                   #  15    0x66d29  2      OPC=je_label         
  movl $0x0, (%r9)              #  16    0x66d2b  7      OPC=movl_m32_imm32   
.L_66d32:                       #        0x66d32  0      OPC=<label>          
  movl 0xc0(%r15), %eax         #  17    0x66d32  7      OPC=movl_r32_m32     
  testl %eax, %eax              #  18    0x66d39  2      OPC=testl_r32_r32    
  je .L_66e72                   #  19    0x66d3b  6      OPC=je_label_1       
.L_66d41:                       #        0x66d41  0      OPC=<label>          
  testq %r13, %r13              #  20    0x66d41  3      OPC=testq_r64_r64    
  je .L_66ea0                   #  21    0x66d44  6      OPC=je_label_1       
  movq 0x8(%rsp), %rbp          #  22    0x66d4a  5      OPC=movq_r64_m64     
  jmpq .L_66d92                 #  23    0x66d4f  2      OPC=jmpq_label       
  nop                           #  24    0x66d51  1      OPC=nop              
  nop                           #  25    0x66d52  1      OPC=nop              
  nop                           #  26    0x66d53  1      OPC=nop              
  nop                           #  27    0x66d54  1      OPC=nop              
  nop                           #  28    0x66d55  1      OPC=nop              
  nop                           #  29    0x66d56  1      OPC=nop              
  nop                           #  30    0x66d57  1      OPC=nop              
.L_66d58:                       #        0x66d58  0      OPC=<label>          
  cmpq %r13, %rbx               #  31    0x66d58  3      OPC=cmpq_r64_r64     
  movl %r12d, %esi              #  32    0x66d5b  3      OPC=movl_r32_r32     
  movq %r14, %rdi               #  33    0x66d5e  3      OPC=movq_r64_r64     
  cmovaeq %r13, %rbx            #  34    0x66d61  4      OPC=cmovaeq_r64_r64  
  movq %rbx, %rdx               #  35    0x66d65  3      OPC=movq_r64_r64     
  callq .memchr                 #  36    0x66d68  5      OPC=callq_label      
  testq %rax, %rax              #  37    0x66d6d  3      OPC=testq_r64_r64    
  movq %rax, %r8                #  38    0x66d70  3      OPC=movq_r64_r64     
  jne .L_66df0                  #  39    0x66d73  2      OPC=jne_label        
  movq %rbp, %rdi               #  40    0x66d75  3      OPC=movq_r64_r64     
  movq %rbx, %rdx               #  41    0x66d78  3      OPC=movq_r64_r64     
  movq %r14, %rsi               #  42    0x66d7b  3      OPC=movq_r64_r64     
  subq %rbx, %r13               #  43    0x66d7e  3      OPC=subq_r64_r64     
  addq %rbx, %rbp               #  44    0x66d81  3      OPC=addq_r64_r64     
  callq .__GI_memcpy            #  45    0x66d84  5      OPC=callq_label      
  addq %rbx, 0x8(%r15)          #  46    0x66d89  4      OPC=addq_m64_r64     
  testq %r13, %r13              #  47    0x66d8d  3      OPC=testq_r64_r64    
  je .L_66dd0                   #  48    0x66d90  2      OPC=je_label         
.L_66d92:                       #        0x66d92  0      OPC=<label>          
  movq 0x8(%r15), %r14          #  49    0x66d92  4      OPC=movq_r64_m64     
  movq 0x10(%r15), %rbx         #  50    0x66d96  4      OPC=movq_r64_m64     
  subq %r14, %rbx               #  51    0x66d9a  3      OPC=subq_r64_r64     
  testq %rbx, %rbx              #  52    0x66d9d  3      OPC=testq_r64_r64    
  jg .L_66d58                   #  53    0x66da0  2      OPC=jg_label         
  movq %r15, %rdi               #  54    0x66da2  3      OPC=movq_r64_r64     
  callq .__uflow                #  55    0x66da5  5      OPC=callq_label      
  cmpl $0xffffffff, %eax        #  56    0x66daa  6      OPC=cmpl_r32_imm32   
  nop                           #  57    0x66db0  1      OPC=nop              
  nop                           #  58    0x66db1  1      OPC=nop              
  nop                           #  59    0x66db2  1      OPC=nop              
  je .L_66e40                   #  60    0x66db3  6      OPC=je_label_1       
  cmpl %eax, %r12d              #  61    0x66db9  3      OPC=cmpl_r32_r32     
  je .L_66e5c                   #  62    0x66dbc  6      OPC=je_label_1       
  subq $0x1, %r13               #  63    0x66dc2  4      OPC=subq_r64_imm8    
  movb %al, (%rbp)              #  64    0x66dc6  3      OPC=movb_m8_r8       
  addq $0x1, %rbp               #  65    0x66dc9  4      OPC=addq_r64_imm8    
  testq %r13, %r13              #  66    0x66dcd  3      OPC=testq_r64_r64    
  jne .L_66d92                  #  67    0x66dd0  2      OPC=jne_label        
  nop                           #  68    0x66dd2  1      OPC=nop              
  nop                           #  69    0x66dd3  1      OPC=nop              
  nop                           #  70    0x66dd4  1      OPC=nop              
  nop                           #  71    0x66dd5  1      OPC=nop              
.L_66dd0:                       #        0x66dd6  0      OPC=<label>          
  movq %rbp, %rax               #  72    0x66dd6  3      OPC=movq_r64_r64     
  subq 0x8(%rsp), %rax          #  73    0x66dd9  5      OPC=subq_r64_m64     
.L_66dd8:                       #        0x66dde  0      OPC=<label>          
  addq $0x28, %rsp              #  74    0x66dde  4      OPC=addq_r64_imm8    
  popq %rbx                     #  75    0x66de2  1      OPC=popq_r64_1       
  popq %rbp                     #  76    0x66de3  1      OPC=popq_r64_1       
  popq %r12                     #  77    0x66de4  2      OPC=popq_r64_1       
  popq %r13                     #  78    0x66de6  2      OPC=popq_r64_1       
  popq %r14                     #  79    0x66de8  2      OPC=popq_r64_1       
  popq %r15                     #  80    0x66dea  2      OPC=popq_r64_1       
  retq                          #  81    0x66dec  1      OPC=retq             
  nop                           #  82    0x66ded  1      OPC=nop              
  nop                           #  83    0x66dee  1      OPC=nop              
  nop                           #  84    0x66def  1      OPC=nop              
  nop                           #  85    0x66df0  1      OPC=nop              
  nop                           #  86    0x66df1  1      OPC=nop              
  nop                           #  87    0x66df2  1      OPC=nop              
  nop                           #  88    0x66df3  1      OPC=nop              
  nop                           #  89    0x66df4  1      OPC=nop              
  nop                           #  90    0x66df5  1      OPC=nop              
.L_66df0:                       #        0x66df6  0      OPC=<label>          
  movq %rax, %r12               #  91    0x66df6  3      OPC=movq_r64_r64     
  movl 0x14(%rsp), %eax         #  92    0x66df9  4      OPC=movl_r32_m32     
  movq %rbp, %rbx               #  93    0x66dfd  3      OPC=movq_r64_r64     
  subq %r14, %r12               #  94    0x66e00  3      OPC=subq_r64_r64     
  subq 0x8(%rsp), %rbx          #  95    0x66e03  5      OPC=subq_r64_m64     
  testl %eax, %eax              #  96    0x66e08  2      OPC=testl_r32_r32    
  js .L_66e11                   #  97    0x66e0a  2      OPC=js_label         
  addq $0x1, %r8                #  98    0x66e0c  4      OPC=addq_r64_imm8    
  cmpl $0x1, %eax               #  99    0x66e10  3      OPC=cmpl_r32_imm8    
  sbbq $0xff, %r12              #  100   0x66e13  4      OPC=sbbq_r64_imm8    
.L_66e11:                       #        0x66e17  0      OPC=<label>          
  movq %r12, %rdx               #  101   0x66e17  3      OPC=movq_r64_r64     
  movq %r14, %rsi               #  102   0x66e1a  3      OPC=movq_r64_r64     
  movq %rbp, %rdi               #  103   0x66e1d  3      OPC=movq_r64_r64     
  movq %r8, 0x8(%rsp)           #  104   0x66e20  5      OPC=movq_m64_r64     
  callq .__GI_memcpy            #  105   0x66e25  5      OPC=callq_label      
  movq 0x8(%rsp), %r8           #  106   0x66e2a  5      OPC=movq_r64_m64     
  leaq (%r12,%rbx,1), %rax      #  107   0x66e2f  4      OPC=leaq_r64_m16     
  movq %r8, 0x8(%r15)           #  108   0x66e33  4      OPC=movq_m64_r64     
  addq $0x28, %rsp              #  109   0x66e37  4      OPC=addq_r64_imm8    
  popq %rbx                     #  110   0x66e3b  1      OPC=popq_r64_1       
  popq %rbp                     #  111   0x66e3c  1      OPC=popq_r64_1       
  popq %r12                     #  112   0x66e3d  2      OPC=popq_r64_1       
  popq %r13                     #  113   0x66e3f  2      OPC=popq_r64_1       
  popq %r14                     #  114   0x66e41  2      OPC=popq_r64_1       
  popq %r15                     #  115   0x66e43  2      OPC=popq_r64_1       
  retq                          #  116   0x66e45  1      OPC=retq             
.L_66e40:                       #        0x66e46  0      OPC=<label>          
  cmpq $0x0, 0x18(%rsp)         #  117   0x66e46  6      OPC=cmpq_m64_imm8    
  je .L_66dd0                   #  118   0x66e4c  2      OPC=je_label         
  movq 0x18(%rsp), %rcx         #  119   0x66e4e  5      OPC=movq_r64_m64     
  movl %eax, (%rcx)             #  120   0x66e53  2      OPC=movl_m32_r32     
  movq %rbp, %rax               #  121   0x66e55  3      OPC=movq_r64_r64     
  subq 0x8(%rsp), %rax          #  122   0x66e58  5      OPC=subq_r64_m64     
  jmpq .L_66dd8                 #  123   0x66e5d  5      OPC=jmpq_label_1     
.L_66e5c:                       #        0x66e62  0      OPC=<label>          
  cmpl $0x0, 0x14(%rsp)         #  124   0x66e62  5      OPC=cmpl_m32_imm8    
  movq %rbp, %rax               #  125   0x66e67  3      OPC=movq_r64_r64     
  jle .L_66e82                  #  126   0x66e6a  2      OPC=jle_label        
  addq $0x1, %rbp               #  127   0x66e6c  4      OPC=addq_r64_imm8    
  movb %r12b, (%rax)            #  128   0x66e70  3      OPC=movb_m8_r8       
  jmpq .L_66dd0                 #  129   0x66e73  5      OPC=jmpq_label_1     
.L_66e72:                       #        0x66e78  0      OPC=<label>          
  movl $0xffffffff, 0xc0(%r15)  #  130   0x66e78  11     OPC=movl_m32_imm32   
  jmpq .L_66d41                 #  131   0x66e83  5      OPC=jmpq_label_1     
.L_66e82:                       #        0x66e88  0      OPC=<label>          
  je .L_66dd0                   #  132   0x66e88  6      OPC=je_label_1       
  movl %r12d, %esi              #  133   0x66e8e  3      OPC=movl_r32_r32     
  movq %r15, %rdi               #  134   0x66e91  3      OPC=movq_r64_r64     
  callq ._IO_sputbackc          #  135   0x66e94  5      OPC=callq_label      
  jmpq .L_66dd0                 #  136   0x66e99  5      OPC=jmpq_label_1     
  nop                           #  137   0x66e9e  1      OPC=nop              
  nop                           #  138   0x66e9f  1      OPC=nop              
  nop                           #  139   0x66ea0  1      OPC=nop              
  nop                           #  140   0x66ea1  1      OPC=nop              
  nop                           #  141   0x66ea2  1      OPC=nop              
  nop                           #  142   0x66ea3  1      OPC=nop              
  nop                           #  143   0x66ea4  1      OPC=nop              
  nop                           #  144   0x66ea5  1      OPC=nop              
.L_66ea0:                       #        0x66ea6  0      OPC=<label>          
  xorl %eax, %eax               #  145   0x66ea6  2      OPC=xorl_r32_r32     
  jmpq .L_66dd8                 #  146   0x66ea8  5      OPC=jmpq_label_1     
  nop                           #  147   0x66ead  1      OPC=nop              
  nop                           #  148   0x66eae  1      OPC=nop              
  nop                           #  149   0x66eaf  1      OPC=nop              
  nop                           #  150   0x66eb0  1      OPC=nop              
  nop                           #  151   0x66eb1  1      OPC=nop              
  nop                           #  152   0x66eb2  1      OPC=nop              
  nop                           #  153   0x66eb3  1      OPC=nop              
  nop                           #  154   0x66eb4  1      OPC=nop              
  nop                           #  155   0x66eb5  1      OPC=nop              
                                                                              
.size _IO_getline_info, .-_IO_getline_info

