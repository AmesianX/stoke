  .text
  .globl clnt_sperror_GLIBC_2_2_5
  .type clnt_sperror_GLIBC_2_2_5, @function

#! file-offset 0x10f090
#! rip-offset  0x10f090
#! capacity    560 bytes

# Text                           #  Line  RIP       Bytes  Opcode              
.clnt_sperror_GLIBC_2_2_5:       #        0x10f090  0      OPC=<label>         
  pushq %r13                     #  1     0x10f090  2      OPC=pushq_r64_1     
  pushq %r12                     #  2     0x10f092  2      OPC=pushq_r64_1     
  pushq %rbp                     #  3     0x10f094  1      OPC=pushq_r64_1     
  pushq %rbx                     #  4     0x10f095  1      OPC=pushq_r64_1     
  movq %rsi, %rbx                #  5     0x10f096  3      OPC=movq_r64_r64    
  subq $0x438, %rsp              #  6     0x10f099  7      OPC=subq_r64_imm32  
  movq 0x8(%rdi), %rax           #  7     0x10f0a0  4      OPC=movq_r64_m64    
  leaq 0x10(%rsp), %rsi          #  8     0x10f0a4  5      OPC=leaq_r64_m16    
  callq 0x10(%rax)               #  9     0x10f0a9  3      OPC=callq_m64       
  movl 0x10(%rsp), %edi          #  10    0x10f0ac  4      OPC=movl_r32_m32    
  callq .clnt_sperrno            #  11    0x10f0b0  5      OPC=callq_label     
  cmpl $0x11, 0x10(%rsp)         #  12    0x10f0b5  5      OPC=cmpl_m32_imm8   
  movq %rax, %rbp                #  13    0x10f0ba  3      OPC=movq_r64_r64    
  ja .L_10f218                   #  14    0x10f0bd  6      OPC=ja_label_1      
  movl 0x10(%rsp), %eax          #  15    0x10f0c3  4      OPC=movl_r32_m32    
  leaq 0x53c32(%rip), %rdi       #  16    0x10f0c7  7      OPC=leaq_r64_m16    
  movslq (%rdi,%rax,4), %rax     #  17    0x10f0ce  4      OPC=movslq_r64_m32  
  addq %rax, %rdi                #  18    0x10f0d2  3      OPC=addq_r64_r64    
  jmpq %rdi                      #  19    0x10f0d5  2      OPC=jmpq_r64        
  nop                            #  20    0x10f0d7  1      OPC=nop             
  nop                            #  21    0x10f0d8  1      OPC=nop             
  nop                            #  22    0x10f0d9  1      OPC=nop             
  nop                            #  23    0x10f0da  1      OPC=nop             
  nop                            #  24    0x10f0db  1      OPC=nop             
  nop                            #  25    0x10f0dc  1      OPC=nop             
  nop                            #  26    0x10f0dd  1      OPC=nop             
  nop                            #  27    0x10f0de  1      OPC=nop             
  nop                            #  28    0x10f0df  1      OPC=nop             
  movq 0x20(%rsp), %r13          #  29    0x10f0e0  5      OPC=movq_r64_m64    
  movq 0x18(%rsp), %r12          #  30    0x10f0e5  5      OPC=movq_r64_m64    
  leaq 0x5ac3f(%rip), %rsi       #  31    0x10f0ea  7      OPC=leaq_r64_m16    
  leaq 0x546a4(%rip), %rdi       #  32    0x10f0f1  7      OPC=leaq_r64_m16    
  movl $0x5, %edx                #  33    0x10f0f8  5      OPC=movl_r32_imm32  
  callq .__dcgettext             #  34    0x10f0fd  5      OPC=callq_label     
  leaq 0x8(%rsp), %rdi           #  35    0x10f102  5      OPC=leaq_r64_m16    
  movq %rax, %rsi                #  36    0x10f107  3      OPC=movq_r64_r64    
  movq %r13, %r9                 #  37    0x10f10a  3      OPC=movq_r64_r64    
  movq %r12, %r8                 #  38    0x10f10d  3      OPC=movq_r64_r64    
  movq %rbp, %rcx                #  39    0x10f110  3      OPC=movq_r64_r64    
  movq %rbx, %rdx                #  40    0x10f113  3      OPC=movq_r64_r64    
  xorl %eax, %eax                #  41    0x10f116  2      OPC=xorl_r32_r32    
  callq .__asprintf              #  42    0x10f118  5      OPC=callq_label     
.L_10f11d:                       #        0x10f11d  0      OPC=<label>         
  testl %eax, %eax               #  43    0x10f11d  2      OPC=testl_r32_r32   
  js .L_10f240                   #  44    0x10f11f  6      OPC=js_label_1      
  callq .__rpc_thread_variables  #  45    0x10f125  5      OPC=callq_label     
  movq 0x8(%rsp), %rdx           #  46    0x10f12a  5      OPC=movq_r64_m64    
  movq 0xb0(%rax), %rdi          #  47    0x10f12f  7      OPC=movq_r64_m64    
  movq %rdx, 0xb0(%rax)          #  48    0x10f136  7      OPC=movq_m64_r64    
  callq .L_1f8c0                 #  49    0x10f13d  5      OPC=callq_label     
  movq 0x8(%rsp), %rax           #  50    0x10f142  5      OPC=movq_r64_m64    
.L_10f147:                       #        0x10f147  0      OPC=<label>         
  addq $0x438, %rsp              #  51    0x10f147  7      OPC=addq_r64_imm32  
  popq %rbx                      #  52    0x10f14e  1      OPC=popq_r64_1      
  popq %rbp                      #  53    0x10f14f  1      OPC=popq_r64_1      
  popq %r12                      #  54    0x10f150  2      OPC=popq_r64_1      
  popq %r13                      #  55    0x10f152  2      OPC=popq_r64_1      
  retq                           #  56    0x10f154  1      OPC=retq            
  nop                            #  57    0x10f155  1      OPC=nop             
  nop                            #  58    0x10f156  1      OPC=nop             
  nop                            #  59    0x10f157  1      OPC=nop             
  movl 0x18(%rsp), %r12d         #  60    0x10f158  5      OPC=movl_r32_m32    
  leaq 0x53c1c(%rip), %rax       #  61    0x10f15d  7      OPC=leaq_r64_m16    
  xorl %edi, %edi                #  62    0x10f164  2      OPC=xorl_r32_r32    
  nop                            #  63    0x10f166  1      OPC=nop             
  nop                            #  64    0x10f167  1      OPC=nop             
  nop                            #  65    0x10f168  1      OPC=nop             
  nop                            #  66    0x10f169  1      OPC=nop             
  nop                            #  67    0x10f16a  1      OPC=nop             
  nop                            #  68    0x10f16b  1      OPC=nop             
  nop                            #  69    0x10f16c  1      OPC=nop             
  nop                            #  70    0x10f16d  1      OPC=nop             
  nop                            #  71    0x10f16e  1      OPC=nop             
  nop                            #  72    0x10f16f  1      OPC=nop             
.L_10f170:                       #        0x10f170  0      OPC=<label>         
  cmpl (%rax,%rdi,8), %r12d      #  73    0x10f170  4      OPC=cmpl_r32_m32    
  je .L_10f250                   #  74    0x10f174  6      OPC=je_label_1      
  addq $0x1, %rdi                #  75    0x10f17a  4      OPC=addq_r64_imm8   
  cmpq $0x8, %rdi                #  76    0x10f17e  4      OPC=cmpq_r64_imm8   
  jne .L_10f170                  #  77    0x10f182  2      OPC=jne_label       
.L_10f184:                       #        0x10f184  0      OPC=<label>         
  leaq 0x5abd5(%rip), %rsi       #  78    0x10f184  7      OPC=leaq_r64_m16    
  leaq 0x5460a(%rip), %rdi       #  79    0x10f18b  7      OPC=leaq_r64_m16    
  movl $0x5, %edx                #  80    0x10f192  5      OPC=movl_r32_imm32  
  callq .__dcgettext             #  81    0x10f197  5      OPC=callq_label     
  leaq 0x8(%rsp), %rdi           #  82    0x10f19c  5      OPC=leaq_r64_m16    
  movq %rax, %rsi                #  83    0x10f1a1  3      OPC=movq_r64_r64    
  movl %r12d, %r8d               #  84    0x10f1a4  3      OPC=movl_r32_r32    
  movq %rbp, %rcx                #  85    0x10f1a7  3      OPC=movq_r64_r64    
  movq %rbx, %rdx                #  86    0x10f1aa  3      OPC=movq_r64_r64    
  xorl %eax, %eax                #  87    0x10f1ad  2      OPC=xorl_r32_r32    
  callq .__asprintf              #  88    0x10f1af  5      OPC=callq_label     
  jmpq .L_10f11d                 #  89    0x10f1b4  5      OPC=jmpq_label_1    
  nop                            #  90    0x10f1b9  1      OPC=nop             
  nop                            #  91    0x10f1ba  1      OPC=nop             
  nop                            #  92    0x10f1bb  1      OPC=nop             
  nop                            #  93    0x10f1bc  1      OPC=nop             
  nop                            #  94    0x10f1bd  1      OPC=nop             
  nop                            #  95    0x10f1be  1      OPC=nop             
  nop                            #  96    0x10f1bf  1      OPC=nop             
  leaq 0x8(%rsp), %rdi           #  97    0x10f1c0  5      OPC=leaq_r64_m16    
  leaq 0x562e6(%rip), %rsi       #  98    0x10f1c5  7      OPC=leaq_r64_m16    
  movq %rbp, %rcx                #  99    0x10f1cc  3      OPC=movq_r64_r64    
  movq %rbx, %rdx                #  100   0x10f1cf  3      OPC=movq_r64_r64    
  xorl %eax, %eax                #  101   0x10f1d2  2      OPC=xorl_r32_r32    
  callq .__asprintf              #  102   0x10f1d4  5      OPC=callq_label     
  jmpq .L_10f11d                 #  103   0x10f1d9  5      OPC=jmpq_label_1    
  xchgw %ax, %ax                 #  104   0x10f1de  2      OPC=xchgw_ax_r16    
  movl 0x18(%rsp), %edi          #  105   0x10f1e0  4      OPC=movl_r32_m32    
  leaq 0x30(%rsp), %rsi          #  106   0x10f1e4  5      OPC=leaq_r64_m16    
  movl $0x400, %edx              #  107   0x10f1e9  5      OPC=movl_r32_imm32  
  callq .__strerror_r            #  108   0x10f1ee  5      OPC=callq_label     
  leaq 0x8(%rsp), %rdi           #  109   0x10f1f3  5      OPC=leaq_r64_m16    
  leaq 0x57904(%rip), %rsi       #  110   0x10f1f8  7      OPC=leaq_r64_m16    
  movq %rax, %r8                 #  111   0x10f1ff  3      OPC=movq_r64_r64    
  movq %rbp, %rcx                #  112   0x10f202  3      OPC=movq_r64_r64    
  movq %rbx, %rdx                #  113   0x10f205  3      OPC=movq_r64_r64    
  xorl %eax, %eax                #  114   0x10f208  2      OPC=xorl_r32_r32    
  callq .__asprintf              #  115   0x10f20a  5      OPC=callq_label     
  jmpq .L_10f11d                 #  116   0x10f20f  5      OPC=jmpq_label_1    
  nop                            #  117   0x10f214  1      OPC=nop             
  nop                            #  118   0x10f215  1      OPC=nop             
  nop                            #  119   0x10f216  1      OPC=nop             
  nop                            #  120   0x10f217  1      OPC=nop             
.L_10f218:                       #        0x10f218  0      OPC=<label>         
  movq 0x20(%rsp), %r9           #  121   0x10f218  5      OPC=movq_r64_m64    
  movq 0x18(%rsp), %r8           #  122   0x10f21d  5      OPC=movq_r64_m64    
  leaq 0x8(%rsp), %rdi           #  123   0x10f222  5      OPC=leaq_r64_m16    
  leaq 0x578fb(%rip), %rsi       #  124   0x10f227  7      OPC=leaq_r64_m16    
  movq %rax, %rcx                #  125   0x10f22e  3      OPC=movq_r64_r64    
  movq %rbx, %rdx                #  126   0x10f231  3      OPC=movq_r64_r64    
  xorl %eax, %eax                #  127   0x10f234  2      OPC=xorl_r32_r32    
  callq .__asprintf              #  128   0x10f236  5      OPC=callq_label     
  jmpq .L_10f11d                 #  129   0x10f23b  5      OPC=jmpq_label_1    
.L_10f240:                       #        0x10f240  0      OPC=<label>         
  xorl %eax, %eax                #  130   0x10f240  2      OPC=xorl_r32_r32    
  jmpq .L_10f147                 #  131   0x10f242  5      OPC=jmpq_label_1    
  nop                            #  132   0x10f247  1      OPC=nop             
  nop                            #  133   0x10f248  1      OPC=nop             
  nop                            #  134   0x10f249  1      OPC=nop             
  nop                            #  135   0x10f24a  1      OPC=nop             
  nop                            #  136   0x10f24b  1      OPC=nop             
  nop                            #  137   0x10f24c  1      OPC=nop             
  nop                            #  138   0x10f24d  1      OPC=nop             
  nop                            #  139   0x10f24e  1      OPC=nop             
  nop                            #  140   0x10f24f  1      OPC=nop             
.L_10f250:                       #        0x10f250  0      OPC=<label>         
  leaq 0x53b29(%rip), %rax       #  141   0x10f250  7      OPC=leaq_r64_m16    
  movl $0x5, %edx                #  142   0x10f257  5      OPC=movl_r32_imm32  
  movl 0x4(%rax,%rdi,8), %esi    #  143   0x10f25c  4      OPC=movl_r32_m32    
  leaq 0x53b59(%rip), %rax       #  144   0x10f260  7      OPC=leaq_r64_m16    
  leaq 0x5452e(%rip), %rdi       #  145   0x10f267  7      OPC=leaq_r64_m16    
  addq %rax, %rsi                #  146   0x10f26e  3      OPC=addq_r64_r64    
  callq .__dcgettext             #  147   0x10f271  5      OPC=callq_label     
  testq %rax, %rax               #  148   0x10f276  3      OPC=testq_r64_r64   
  movq %rax, %r12                #  149   0x10f279  3      OPC=movq_r64_r64    
  je .L_10f2b3                   #  150   0x10f27c  2      OPC=je_label        
  leaq 0x57892(%rip), %rsi       #  151   0x10f27e  7      OPC=leaq_r64_m16    
  leaq 0x54510(%rip), %rdi       #  152   0x10f285  7      OPC=leaq_r64_m16    
  movl $0x5, %edx                #  153   0x10f28c  5      OPC=movl_r32_imm32  
  callq .__dcgettext             #  154   0x10f291  5      OPC=callq_label     
  leaq 0x8(%rsp), %rdi           #  155   0x10f296  5      OPC=leaq_r64_m16    
  movq %rax, %rsi                #  156   0x10f29b  3      OPC=movq_r64_r64    
  movq %r12, %r8                 #  157   0x10f29e  3      OPC=movq_r64_r64    
  movq %rbp, %rcx                #  158   0x10f2a1  3      OPC=movq_r64_r64    
  movq %rbx, %rdx                #  159   0x10f2a4  3      OPC=movq_r64_r64    
  xorl %eax, %eax                #  160   0x10f2a7  2      OPC=xorl_r32_r32    
  callq .__asprintf              #  161   0x10f2a9  5      OPC=callq_label     
  jmpq .L_10f11d                 #  162   0x10f2ae  5      OPC=jmpq_label_1    
.L_10f2b3:                       #        0x10f2b3  0      OPC=<label>         
  movl 0x18(%rsp), %r12d         #  163   0x10f2b3  5      OPC=movl_r32_m32    
  jmpq .L_10f184                 #  164   0x10f2b8  5      OPC=jmpq_label_1    
  nop                            #  165   0x10f2bd  1      OPC=nop             
  nop                            #  166   0x10f2be  1      OPC=nop             
  nop                            #  167   0x10f2bf  1      OPC=nop             
                                                                               
.size clnt_sperror_GLIBC_2_2_5, .-clnt_sperror_GLIBC_2_2_5

