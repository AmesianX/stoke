  .text
  .globl getipv4sourcefilter
  .type getipv4sourcefilter, @function

#! file-offset 0x100ad0
#! rip-offset  0x100ad0
#! capacity    384 bytes

# Text                         #  Line  RIP       Bytes  Opcode              
.getipv4sourcefilter:          #        0x100ad0  0      OPC=<label>         
  pushq %rbp                   #  1     0x100ad0  1      OPC=pushq_r64_1     
  movq %rsp, %rbp              #  2     0x100ad1  3      OPC=movq_r64_r64    
  pushq %r15                   #  3     0x100ad4  2      OPC=pushq_r64_1     
  pushq %r14                   #  4     0x100ad6  2      OPC=pushq_r64_1     
  pushq %r13                   #  5     0x100ad8  2      OPC=pushq_r64_1     
  pushq %r12                   #  6     0x100ada  2      OPC=pushq_r64_1     
  movq %rcx, %r14              #  7     0x100adc  3      OPC=movq_r64_r64    
  pushq %rbx                   #  8     0x100adf  1      OPC=pushq_r64_1     
  movl %edi, %r12d             #  9     0x100ae0  3      OPC=movl_r32_r32    
  movq %r8, %r13               #  10    0x100ae3  3      OPC=movq_r64_r64    
  movq %r9, %r15               #  11    0x100ae6  3      OPC=movq_r64_r64    
  subq $0x28, %rsp             #  12    0x100ae9  4      OPC=subq_r64_imm8   
  movl (%r8), %ecx             #  13    0x100aed  3      OPC=movl_r32_m32    
  leal 0x10(,%rcx,4), %ebx     #  14    0x100af0  7      OPC=leal_r32_m16    
  cmpl $0x1000, %ebx           #  15    0x100af7  6      OPC=cmpl_r32_imm32  
  movl %ebx, -0x34(%rbp)       #  16    0x100afd  3      OPC=movl_m32_r32    
  ja .L_100bb8                 #  17    0x100b00  6      OPC=ja_label_1      
.L_100b06:                     #        0x100b06  0      OPC=<label>         
  addq $0x1e, %rbx             #  18    0x100b06  4      OPC=addq_r64_imm8   
  leaq -0x34(%rbp), %r8        #  19    0x100b0a  4      OPC=leaq_r64_m16    
  movl %r12d, %edi             #  20    0x100b0e  3      OPC=movl_r32_r32    
  shrq $0x4, %rbx              #  21    0x100b11  4      OPC=shrq_r64_imm8   
  shlq $0x4, %rbx              #  22    0x100b15  4      OPC=shlq_r64_imm8   
  subq %rbx, %rsp              #  23    0x100b19  3      OPC=subq_r64_r64    
  leaq 0xf(%rsp), %rbx         #  24    0x100b1c  5      OPC=leaq_r64_m16    
  andq $0xf0, %rbx             #  25    0x100b21  4      OPC=andq_r64_imm8   
  movl %edx, (%rbx)            #  26    0x100b25  2      OPC=movl_m32_r32    
  movl %esi, 0x4(%rbx)         #  27    0x100b27  3      OPC=movl_m32_r32    
  movl $0x29, %edx             #  28    0x100b2a  5      OPC=movl_r32_imm32  
  movl %ecx, 0xc(%rbx)         #  29    0x100b2f  3      OPC=movl_m32_r32    
  xorl %esi, %esi              #  30    0x100b32  2      OPC=xorl_r32_r32    
  movq %rbx, %rcx              #  31    0x100b34  3      OPC=movq_r64_r64    
  callq .getsockopt            #  32    0x100b37  5      OPC=callq_label     
  testl %eax, %eax             #  33    0x100b3c  2      OPC=testl_r32_r32   
  jne .L_100b84                #  34    0x100b3e  2      OPC=jne_label       
  movl $0x1, %r9d              #  35    0x100b40  6      OPC=movl_r32_imm32  
.L_100b46:                     #        0x100b46  0      OPC=<label>         
  movl 0x8(%rbx), %eax         #  36    0x100b46  3      OPC=movl_r32_m32    
  movl 0xc(%rbx), %edx         #  37    0x100b49  3      OPC=movl_r32_m32    
  movl %eax, (%r14)            #  38    0x100b4c  3      OPC=movl_m32_r32    
  movl (%r13), %eax            #  39    0x100b4f  4      OPC=movl_r32_m32    
  movq %rdx, %r12              #  40    0x100b53  3      OPC=movq_r64_r64    
  shlq $0x2, %rdx              #  41    0x100b56  4      OPC=shlq_r64_imm8   
  cmpl %r12d, %eax             #  42    0x100b5a  3      OPC=cmpl_r32_r32    
  jae .L_100b65                #  43    0x100b5d  2      OPC=jae_label       
  movl %eax, %edx              #  44    0x100b5f  2      OPC=movl_r32_r32    
  shlq $0x2, %rdx              #  45    0x100b61  4      OPC=shlq_r64_imm8   
.L_100b65:                     #        0x100b65  0      OPC=<label>         
  leaq 0x10(%rbx), %rsi        #  46    0x100b65  4      OPC=leaq_r64_m16    
  movq %r15, %rdi              #  47    0x100b69  3      OPC=movq_r64_r64    
  movl %r9d, -0x44(%rbp)       #  48    0x100b6c  4      OPC=movl_m32_r32    
  callq .__GI_memcpy           #  49    0x100b70  5      OPC=callq_label     
  movl -0x44(%rbp), %r9d       #  50    0x100b75  4      OPC=movl_r32_m32    
  xorl %eax, %eax              #  51    0x100b79  2      OPC=xorl_r32_r32    
  movl %r12d, (%r13)           #  52    0x100b7b  4      OPC=movl_m32_r32    
  testl %r9d, %r9d             #  53    0x100b7f  3      OPC=testl_r32_r32   
  je .L_100b98                 #  54    0x100b82  2      OPC=je_label        
.L_100b84:                     #        0x100b84  0      OPC=<label>         
  leaq -0x28(%rbp), %rsp       #  55    0x100b84  4      OPC=leaq_r64_m16    
  popq %rbx                    #  56    0x100b88  1      OPC=popq_r64_1      
  popq %r12                    #  57    0x100b89  2      OPC=popq_r64_1      
  popq %r13                    #  58    0x100b8b  2      OPC=popq_r64_1      
  popq %r14                    #  59    0x100b8d  2      OPC=popq_r64_1      
  popq %r15                    #  60    0x100b8f  2      OPC=popq_r64_1      
  popq %rbp                    #  61    0x100b91  1      OPC=popq_r64_1      
  retq                         #  62    0x100b92  1      OPC=retq            
  nop                          #  63    0x100b93  1      OPC=nop             
  nop                          #  64    0x100b94  1      OPC=nop             
  nop                          #  65    0x100b95  1      OPC=nop             
  nop                          #  66    0x100b96  1      OPC=nop             
  nop                          #  67    0x100b97  1      OPC=nop             
.L_100b98:                     #        0x100b98  0      OPC=<label>         
  xorl %r12d, %r12d            #  68    0x100b98  3      OPC=xorl_r32_r32    
.L_100b9b:                     #        0x100b9b  0      OPC=<label>         
  movq %rbx, %rdi              #  69    0x100b9b  3      OPC=movq_r64_r64    
  callq .L_1f8c0               #  70    0x100b9e  5      OPC=callq_label     
  leaq -0x28(%rbp), %rsp       #  71    0x100ba3  4      OPC=leaq_r64_m16    
  movl %r12d, %eax             #  72    0x100ba7  3      OPC=movl_r32_r32    
  popq %rbx                    #  73    0x100baa  1      OPC=popq_r64_1      
  popq %r12                    #  74    0x100bab  2      OPC=popq_r64_1      
  popq %r13                    #  75    0x100bad  2      OPC=popq_r64_1      
  popq %r14                    #  76    0x100baf  2      OPC=popq_r64_1      
  popq %r15                    #  77    0x100bb1  2      OPC=popq_r64_1      
  popq %rbp                    #  78    0x100bb3  1      OPC=popq_r64_1      
  retq                         #  79    0x100bb4  1      OPC=retq            
  nop                          #  80    0x100bb5  1      OPC=nop             
  nop                          #  81    0x100bb6  1      OPC=nop             
  nop                          #  82    0x100bb7  1      OPC=nop             
.L_100bb8:                     #        0x100bb8  0      OPC=<label>         
  movq %rbx, %rdi              #  83    0x100bb8  3      OPC=movq_r64_r64    
  movl %edx, -0x4c(%rbp)       #  84    0x100bbb  3      OPC=movl_m32_r32    
  movl %esi, -0x48(%rbp)       #  85    0x100bbe  3      OPC=movl_m32_r32    
  movl %ecx, -0x44(%rbp)       #  86    0x100bc1  3      OPC=movl_m32_r32    
  callq .__libc_alloca_cutoff  #  87    0x100bc4  5      OPC=callq_label     
  testl %eax, %eax             #  88    0x100bc9  2      OPC=testl_r32_r32   
  movl -0x44(%rbp), %ecx       #  89    0x100bcb  3      OPC=movl_r32_m32    
  movl -0x48(%rbp), %esi       #  90    0x100bce  3      OPC=movl_r32_m32    
  movl -0x4c(%rbp), %edx       #  91    0x100bd1  3      OPC=movl_r32_m32    
  jne .L_100b06                #  92    0x100bd4  6      OPC=jne_label_1     
  movq %rbx, %rdi              #  93    0x100bda  3      OPC=movq_r64_r64    
  movl %edx, -0x50(%rbp)       #  94    0x100bdd  3      OPC=movl_m32_r32    
  movl %esi, -0x4c(%rbp)       #  95    0x100be0  3      OPC=movl_m32_r32    
  movl %ecx, -0x44(%rbp)       #  96    0x100be3  3      OPC=movl_m32_r32    
  movl %eax, -0x48(%rbp)       #  97    0x100be6  3      OPC=movl_m32_r32    
  callq .memalign_plt          #  98    0x100be9  5      OPC=callq_label     
  testq %rax, %rax             #  99    0x100bee  3      OPC=testq_r64_r64   
  movq %rax, %rbx              #  100   0x100bf1  3      OPC=movq_r64_r64    
  movl -0x44(%rbp), %ecx       #  101   0x100bf4  3      OPC=movl_r32_m32    
  movl -0x48(%rbp), %r9d       #  102   0x100bf7  4      OPC=movl_r32_m32    
  movl -0x4c(%rbp), %esi       #  103   0x100bfb  3      OPC=movl_r32_m32    
  movl -0x50(%rbp), %edx       #  104   0x100bfe  3      OPC=movl_r32_m32    
  je .L_100c39                 #  105   0x100c01  2      OPC=je_label        
  leaq -0x34(%rbp), %r8        #  106   0x100c03  4      OPC=leaq_r64_m16    
  movl %edx, (%rax)            #  107   0x100c07  2      OPC=movl_m32_r32    
  movl %esi, 0x4(%rax)         #  108   0x100c09  3      OPC=movl_m32_r32    
  movl %ecx, 0xc(%rax)         #  109   0x100c0c  3      OPC=movl_m32_r32    
  xorl %esi, %esi              #  110   0x100c0f  2      OPC=xorl_r32_r32    
  movl %r12d, %edi             #  111   0x100c11  3      OPC=movl_r32_r32    
  movq %rax, %rcx              #  112   0x100c14  3      OPC=movq_r64_r64    
  movl $0x29, %edx             #  113   0x100c17  5      OPC=movl_r32_imm32  
  movl %r9d, -0x44(%rbp)       #  114   0x100c1c  4      OPC=movl_m32_r32    
  callq .getsockopt            #  115   0x100c20  5      OPC=callq_label     
  testl %eax, %eax             #  116   0x100c25  2      OPC=testl_r32_r32   
  movl %eax, %r12d             #  117   0x100c27  3      OPC=movl_r32_r32    
  movl -0x44(%rbp), %r9d       #  118   0x100c2a  4      OPC=movl_r32_m32    
  je .L_100b46                 #  119   0x100c2e  6      OPC=je_label_1      
  jmpq .L_100b9b               #  120   0x100c34  5      OPC=jmpq_label_1    
.L_100c39:                     #        0x100c39  0      OPC=<label>         
  orl $0xffffffff, %eax        #  121   0x100c39  6      OPC=orl_r32_imm32   
  nop                          #  122   0x100c3f  1      OPC=nop             
  nop                          #  123   0x100c40  1      OPC=nop             
  nop                          #  124   0x100c41  1      OPC=nop             
  jmpq .L_100b84               #  125   0x100c42  5      OPC=jmpq_label_1    
  nop                          #  126   0x100c47  1      OPC=nop             
  nop                          #  127   0x100c48  1      OPC=nop             
  nop                          #  128   0x100c49  1      OPC=nop             
  nop                          #  129   0x100c4a  1      OPC=nop             
  nop                          #  130   0x100c4b  1      OPC=nop             
  nop                          #  131   0x100c4c  1      OPC=nop             
  nop                          #  132   0x100c4d  1      OPC=nop             
  nop                          #  133   0x100c4e  1      OPC=nop             
  nop                          #  134   0x100c4f  1      OPC=nop             
  nop                          #  135   0x100c50  1      OPC=nop             
  nop                          #  136   0x100c51  1      OPC=nop             
  nop                          #  137   0x100c52  1      OPC=nop             
  nop                          #  138   0x100c53  1      OPC=nop             
  nop                          #  139   0x100c54  1      OPC=nop             
  nop                          #  140   0x100c55  1      OPC=nop             
                                                                             
.size getipv4sourcefilter, .-getipv4sourcefilter

