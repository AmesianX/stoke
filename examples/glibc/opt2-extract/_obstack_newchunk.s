  .text
  .globl _obstack_newchunk
  .type _obstack_newchunk, @function

#! file-offset 0x7bf10
#! rip-offset  0x7bf10
#! capacity    368 bytes

# Text                          #  Line  RIP      Bytes  Opcode               
._obstack_newchunk:             #        0x7bf10  0      OPC=<label>          
  pushq %r13                    #  1     0x7bf10  2      OPC=pushq_r64_1      
  pushq %r12                    #  2     0x7bf12  2      OPC=pushq_r64_1      
  movslq %esi, %rsi             #  3     0x7bf14  3      OPC=movslq_r64_r32   
  pushq %rbp                    #  4     0x7bf17  1      OPC=pushq_r64_1      
  pushq %rbx                    #  5     0x7bf18  1      OPC=pushq_r64_1      
  movq %rdi, %rbx               #  6     0x7bf19  3      OPC=movq_r64_r64     
  subq $0x18, %rsp              #  7     0x7bf1c  4      OPC=subq_r64_imm8    
  movq 0x18(%rdi), %r12         #  8     0x7bf20  4      OPC=movq_r64_m64     
  subq 0x10(%rdi), %r12         #  9     0x7bf24  4      OPC=subq_r64_m64     
  movq (%rdi), %rbp             #  10    0x7bf28  3      OPC=movq_r64_m64     
  movq 0x8(%rdi), %r13          #  11    0x7bf2b  4      OPC=movq_r64_m64     
  movq %r12, %rax               #  12    0x7bf2f  3      OPC=movq_r64_r64     
  addq %r12, %rsi               #  13    0x7bf32  3      OPC=addq_r64_r64     
  sarq $0x3, %rax               #  14    0x7bf35  4      OPC=sarq_r64_imm8    
  addq %rax, %rsi               #  15    0x7bf39  3      OPC=addq_r64_r64     
  movslq 0x30(%rdi), %rax       #  16    0x7bf3c  4      OPC=movslq_r64_m32   
  leaq 0x64(%rsi,%rax,1), %rax  #  17    0x7bf40  5      OPC=leaq_r64_m16     
  cmpq %rbp, %rax               #  18    0x7bf45  3      OPC=cmpq_r64_r64     
  cmovgeq %rax, %rbp            #  19    0x7bf48  4      OPC=cmovgeq_r64_r64  
  testb $0x1, 0x50(%rdi)        #  20    0x7bf4c  4      OPC=testb_m8_imm8    
  je .L_7c030                   #  21    0x7bf50  6      OPC=je_label_1       
  movq 0x48(%rdi), %rdi         #  22    0x7bf56  4      OPC=movq_r64_m64     
  movq %rbp, %rsi               #  23    0x7bf5a  3      OPC=movq_r64_r64     
  callq 0x38(%rbx)              #  24    0x7bf5d  3      OPC=callq_m64        
.L_7bf60:                       #        0x7bf60  0      OPC=<label>          
  testq %rax, %rax              #  25    0x7bf60  3      OPC=testq_r64_r64    
  je .L_7c055                   #  26    0x7bf63  6      OPC=je_label_1       
.L_7bf69:                       #        0x7bf69  0      OPC=<label>          
  movslq 0x30(%rbx), %rsi       #  27    0x7bf69  4      OPC=movslq_r64_m32   
  addq %rax, %rbp               #  28    0x7bf6d  3      OPC=addq_r64_r64     
  movq %rax, 0x8(%rbx)          #  29    0x7bf70  4      OPC=movq_m64_r64     
  movq %r13, 0x8(%rax)          #  30    0x7bf74  4      OPC=movq_m64_r64     
  movq %rbp, 0x20(%rbx)         #  31    0x7bf78  4      OPC=movq_m64_r64     
  movq %rbp, (%rax)             #  32    0x7bf7c  3      OPC=movq_m64_r64     
  movl %esi, %ebp               #  33    0x7bf7f  2      OPC=movl_r32_r32     
  notl %ebp                     #  34    0x7bf81  2      OPC=notl_r32         
  movslq %ebp, %rcx             #  35    0x7bf83  3      OPC=movslq_r64_r32   
  leaq 0x10(%rax,%rsi,1), %rbp  #  36    0x7bf86  5      OPC=leaq_r64_m16     
  andq %rcx, %rbp               #  37    0x7bf8b  3      OPC=andq_r64_r64     
  cmpl $0xe, %esi               #  38    0x7bf8e  3      OPC=cmpl_r32_imm8    
  jg .L_7bff8                   #  39    0x7bf91  2      OPC=jg_label         
  xorl %edx, %edx               #  40    0x7bf93  2      OPC=xorl_r32_r32     
.L_7bf95:                       #        0x7bf95  0      OPC=<label>          
  cmpq %r12, %rdx               #  41    0x7bf95  3      OPC=cmpq_r64_r64     
  jge .L_7bfb5                  #  42    0x7bf98  2      OPC=jge_label        
  nop                           #  43    0x7bf9a  1      OPC=nop              
  nop                           #  44    0x7bf9b  1      OPC=nop              
  nop                           #  45    0x7bf9c  1      OPC=nop              
  nop                           #  46    0x7bf9d  1      OPC=nop              
  nop                           #  47    0x7bf9e  1      OPC=nop              
  nop                           #  48    0x7bf9f  1      OPC=nop              
.L_7bfa0:                       #        0x7bfa0  0      OPC=<label>          
  movq 0x10(%rbx), %rcx         #  49    0x7bfa0  4      OPC=movq_r64_m64     
  movzbl (%rcx,%rdx,1), %ecx    #  50    0x7bfa4  4      OPC=movzbl_r32_m8    
  addq $0x1, %rdx               #  51    0x7bfa8  4      OPC=addq_r64_imm8    
  movb %cl, -0x1(%rdx,%rbp,1)   #  52    0x7bfac  4      OPC=movb_m8_r8       
  cmpq %r12, %rdx               #  53    0x7bfb0  3      OPC=cmpq_r64_r64     
  jne .L_7bfa0                  #  54    0x7bfb3  2      OPC=jne_label        
.L_7bfb5:                       #        0x7bfb5  0      OPC=<label>          
  movzbl 0x50(%rbx), %esi       #  55    0x7bfb5  4      OPC=movzbl_r32_m8    
  testb $0x2, %sil              #  56    0x7bfb9  4      OPC=testb_r8_imm8    
  jne .L_7bfd8                  #  57    0x7bfbd  2      OPC=jne_label        
  movslq 0x30(%rbx), %rdx       #  58    0x7bfbf  4      OPC=movslq_r64_m32   
  movl %edx, %ecx               #  59    0x7bfc3  2      OPC=movl_r32_r32     
  leaq 0x10(%r13,%rdx,1), %rdx  #  60    0x7bfc5  5      OPC=leaq_r64_m16     
  notl %ecx                     #  61    0x7bfca  2      OPC=notl_r32         
  movslq %ecx, %rcx             #  62    0x7bfcc  3      OPC=movslq_r64_r32   
  andq %rcx, %rdx               #  63    0x7bfcf  3      OPC=andq_r64_r64     
  cmpq %rdx, 0x10(%rbx)         #  64    0x7bfd2  4      OPC=cmpq_m64_r64     
  je .L_7c040                   #  65    0x7bfd6  2      OPC=je_label         
.L_7bfd8:                       #        0x7bfd8  0      OPC=<label>          
  movq %rbp, 0x10(%rbx)         #  66    0x7bfd8  4      OPC=movq_m64_r64     
  addq %r12, %rbp               #  67    0x7bfdc  3      OPC=addq_r64_r64     
  andb $0xfd, 0x50(%rbx)        #  68    0x7bfdf  4      OPC=andb_m8_imm8     
  movq %rbp, 0x18(%rbx)         #  69    0x7bfe3  4      OPC=movq_m64_r64     
  addq $0x18, %rsp              #  70    0x7bfe7  4      OPC=addq_r64_imm8    
  popq %rbx                     #  71    0x7bfeb  1      OPC=popq_r64_1       
  popq %rbp                     #  72    0x7bfec  1      OPC=popq_r64_1       
  popq %r12                     #  73    0x7bfed  2      OPC=popq_r64_1       
  popq %r13                     #  74    0x7bfef  2      OPC=popq_r64_1       
  retq                          #  75    0x7bff1  1      OPC=retq             
  nop                           #  76    0x7bff2  1      OPC=nop              
  nop                           #  77    0x7bff3  1      OPC=nop              
  nop                           #  78    0x7bff4  1      OPC=nop              
  nop                           #  79    0x7bff5  1      OPC=nop              
  nop                           #  80    0x7bff6  1      OPC=nop              
  nop                           #  81    0x7bff7  1      OPC=nop              
.L_7bff8:                       #        0x7bff8  0      OPC=<label>          
  movq %r12, %rdx               #  82    0x7bff8  3      OPC=movq_r64_r64     
  shrq $0x2, %rdx               #  83    0x7bffb  4      OPC=shrq_r64_imm8    
  leaq -0x1(%rdx), %rcx         #  84    0x7bfff  4      OPC=leaq_r64_m16     
  cmpq $0xff, %rcx              #  85    0x7c003  4      OPC=cmpq_r64_imm8    
  je .L_7c023                   #  86    0x7c007  2      OPC=je_label         
  movq 0x10(%rbx), %rsi         #  87    0x7c009  4      OPC=movq_r64_m64     
  nop                           #  88    0x7c00d  1      OPC=nop              
  nop                           #  89    0x7c00e  1      OPC=nop              
  nop                           #  90    0x7c00f  1      OPC=nop              
.L_7c010:                       #        0x7c010  0      OPC=<label>          
  movl (%rsi,%rcx,4), %r8d      #  91    0x7c010  4      OPC=movl_r32_m32     
  movl %r8d, (%rbp,%rcx,4)      #  92    0x7c014  5      OPC=movl_m32_r32     
  subq $0x1, %rcx               #  93    0x7c019  4      OPC=subq_r64_imm8    
  cmpq $0xff, %rcx              #  94    0x7c01d  4      OPC=cmpq_r64_imm8    
  jne .L_7c010                  #  95    0x7c021  2      OPC=jne_label        
.L_7c023:                       #        0x7c023  0      OPC=<label>          
  shlq $0x2, %rdx               #  96    0x7c023  4      OPC=shlq_r64_imm8    
  jmpq .L_7bf95                 #  97    0x7c027  5      OPC=jmpq_label_1     
  nop                           #  98    0x7c02c  1      OPC=nop              
  nop                           #  99    0x7c02d  1      OPC=nop              
  nop                           #  100   0x7c02e  1      OPC=nop              
  nop                           #  101   0x7c02f  1      OPC=nop              
.L_7c030:                       #        0x7c030  0      OPC=<label>          
  movq %rbp, %rdi               #  102   0x7c030  3      OPC=movq_r64_r64     
  callq 0x38(%rbx)              #  103   0x7c033  3      OPC=callq_m64        
  jmpq .L_7bf60                 #  104   0x7c036  5      OPC=jmpq_label_1     
  nop                           #  105   0x7c03b  1      OPC=nop              
  nop                           #  106   0x7c03c  1      OPC=nop              
  nop                           #  107   0x7c03d  1      OPC=nop              
  nop                           #  108   0x7c03e  1      OPC=nop              
  nop                           #  109   0x7c03f  1      OPC=nop              
.L_7c040:                       #        0x7c040  0      OPC=<label>          
  movq 0x8(%r13), %rdx          #  110   0x7c040  4      OPC=movq_r64_m64     
  andl $0x1, %esi               #  111   0x7c044  3      OPC=andl_r32_imm8    
  movq %rdx, 0x8(%rax)          #  112   0x7c047  4      OPC=movq_m64_r64     
  jne .L_7c06d                  #  113   0x7c04b  2      OPC=jne_label        
  movq %r13, %rdi               #  114   0x7c04d  3      OPC=movq_r64_r64     
  callq 0x40(%rbx)              #  115   0x7c050  3      OPC=callq_m64        
  jmpq .L_7bfd8                 #  116   0x7c053  2      OPC=jmpq_label       
.L_7c055:                       #        0x7c055  0      OPC=<label>          
  movq 0x31ef04(%rip), %rdx     #  117   0x7c055  7      OPC=movq_r64_m64     
  movq %rax, 0x8(%rsp)          #  118   0x7c05c  5      OPC=movq_m64_r64     
  callq (%rdx)                  #  119   0x7c061  2      OPC=callq_m64        
  movq 0x8(%rsp), %rax          #  120   0x7c063  5      OPC=movq_r64_m64     
  jmpq .L_7bf69                 #  121   0x7c068  5      OPC=jmpq_label_1     
.L_7c06d:                       #        0x7c06d  0      OPC=<label>          
  movq 0x48(%rbx), %rdi         #  122   0x7c06d  4      OPC=movq_r64_m64     
  movq %r13, %rsi               #  123   0x7c071  3      OPC=movq_r64_r64     
  callq 0x40(%rbx)              #  124   0x7c074  3      OPC=callq_m64        
  jmpq .L_7bfd8                 #  125   0x7c077  5      OPC=jmpq_label_1     
  nop                           #  126   0x7c07c  1      OPC=nop              
  nop                           #  127   0x7c07d  1      OPC=nop              
  nop                           #  128   0x7c07e  1      OPC=nop              
  nop                           #  129   0x7c07f  1      OPC=nop              
                                                                              
.size _obstack_newchunk, .-_obstack_newchunk

