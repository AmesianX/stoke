  .text
  .globl check_arrival
  .type check_arrival, @function

#! file-offset 0xc6200
#! rip-offset  0xc6200
#! capacity    1888 bytes

# Text                                    #  Line  RIP      Bytes  Opcode              
.check_arrival:                           #        0xc6200  0      OPC=<label>         
  pushq %r15                              #  1     0xc6200  2      OPC=pushq_r64_1     
  pushq %r14                              #  2     0xc6202  2      OPC=pushq_r64_1     
  pushq %r13                              #  3     0xc6204  2      OPC=pushq_r64_1     
  pushq %r12                              #  4     0xc6206  2      OPC=pushq_r64_1     
  movq %rdi, %r13                         #  5     0xc6208  3      OPC=movq_r64_r64    
  pushq %rbp                              #  6     0xc620b  1      OPC=pushq_r64_1     
  pushq %rbx                              #  7     0xc620c  1      OPC=pushq_r64_1     
  movl %ecx, %ebx                         #  8     0xc620d  2      OPC=movl_r32_r32    
  movl %edx, %r12d                        #  9     0xc620f  3      OPC=movl_r32_r32    
  subq $0xa8, %rsp                        #  10    0xc6212  7      OPC=subq_r64_imm32  
  movq 0x70(%rdi), %rax                   #  11    0xc6219  4      OPC=movq_r64_m64    
  movslq 0x4(%rsi), %rbp                  #  12    0xc621d  4      OPC=movslq_r64_m32  
  movl $0x0, 0x78(%rsp)                   #  13    0xc6221  8      OPC=movl_m32_imm32  
  movq %rsi, 0x58(%rsp)                   #  14    0xc6229  5      OPC=movq_m64_r64    
  movl %r8d, 0x68(%rsp)                   #  15    0xc622e  5      OPC=movl_m32_r32    
  movl %r9d, 0x48(%rsp)                   #  16    0xc6233  5      OPC=movl_m32_r32    
  movq %rax, %rcx                         #  17    0xc6238  3      OPC=movq_r64_r64    
  movq %rax, 0x40(%rsp)                   #  18    0xc623b  5      OPC=movq_m64_r64    
  movslq %edx, %rax                       #  19    0xc6240  3      OPC=movslq_r64_r32  
  shlq $0x4, %rax                         #  20    0xc6243  4      OPC=shlq_r64_imm8   
  addq (%rcx), %rax                       #  21    0xc6247  3      OPC=addq_r64_m64    
  movq %rsi, %rcx                         #  22    0xc624a  3      OPC=movq_r64_r64    
  movl (%rax), %eax                       #  23    0xc624d  2      OPC=movl_r32_m32    
  movl %eax, 0x4c(%rsp)                   #  24    0xc624f  4      OPC=movl_m32_r32    
  movl 0xa8(%rdi), %eax                   #  25    0xc6253  6      OPC=movl_r32_m32    
  addl %r9d, %eax                         #  26    0xc6259  3      OPC=addl_r32_r32    
  cmpl %ebp, %eax                         #  27    0xc625c  2      OPC=cmpl_r32_r32    
  jge .L_c6865                            #  28    0xc625e  6      OPC=jge_label_1     
.L_c6264:                                 #        0xc6264  0      OPC=<label>         
  movq 0x58(%rsp), %rax                   #  29    0xc6264  5      OPC=movq_r64_m64    
  movl (%rax), %ebp                       #  30    0xc6269  2      OPC=movl_r32_m32    
  movq 0x88(%r13), %rax                   #  31    0xc626b  7      OPC=movq_r64_m64    
  movq %rax, 0x60(%rsp)                   #  32    0xc6272  5      OPC=movq_m64_r64    
  movl 0x38(%r13), %eax                   #  33    0xc6277  4      OPC=movl_r32_m32    
  testl %ebp, %ebp                        #  34    0xc627b  2      OPC=testl_r32_r32   
  movl %eax, 0x6c(%rsp)                   #  35    0xc627d  4      OPC=movl_m32_r32    
  movq 0x58(%rsp), %rax                   #  36    0xc6281  5      OPC=movq_r64_m64    
  je .L_c670b                             #  37    0xc6286  6      OPC=je_label_1      
  movq 0x8(%rax), %r14                    #  38    0xc628c  4      OPC=movq_r64_m64    
  movl 0x78(%r13), %edx                   #  39    0xc6290  4      OPC=movl_r32_m32    
  leal -0x1(%rbp), %esi                   #  40    0xc6294  3      OPC=leal_r32_m16    
  movl %ebp, 0x38(%r13)                   #  41    0xc6297  4      OPC=movl_m32_r32    
  movq %r13, %rdi                         #  42    0xc629b  3      OPC=movq_r64_r64    
  movq %r14, 0x88(%r13)                   #  43    0xc629e  7      OPC=movq_m64_r64    
  callq .re_string_context_at             #  44    0xc62a5  5      OPC=callq_label     
  cmpl %ebx, %ebp                         #  45    0xc62aa  2      OPC=cmpl_r32_r32    
  movl %eax, %r9d                         #  46    0xc62ac  3      OPC=movl_r32_r32    
  je .L_c672c                             #  47    0xc62af  6      OPC=je_label_1      
  movslq %ebp, %rbx                       #  48    0xc62b5  3      OPC=movslq_r64_r32  
  movq (%r14,%rbx,8), %r15                #  49    0xc62b8  4      OPC=movq_r64_m64    
  testq %r15, %r15                        #  50    0xc62bc  3      OPC=testq_r64_r64   
  je .L_c690f                             #  51    0xc62bf  6      OPC=je_label_1      
  movzbl 0x50(%r15), %eax                 #  52    0xc62c5  5      OPC=movzbl_r32_m8   
  testb $0x40, %al                        #  53    0xc62ca  2      OPC=testb_al_imm8   
  jne .L_c68af                            #  54    0xc62cc  6      OPC=jne_label_1     
  movq $0x0, 0x80(%rsp)                   #  55    0xc62d2  12     OPC=movq_m64_imm32  
  movq $0x0, 0x88(%rsp)                   #  56    0xc62de  12     OPC=movq_m64_imm32  
.L_c62ea:                                 #        0xc62ea  0      OPC=<label>         
  testb $0x40, %al                        #  57    0xc62ea  2      OPC=testb_al_imm8   
  je .L_c6361                             #  58    0xc62ec  2      OPC=je_label        
  leaq 0x80(%rsp), %r12                   #  59    0xc62ee  8      OPC=leaq_r64_m16    
.L_c62f6:                                 #        0xc62f6  0      OPC=<label>         
  movl 0x84(%rsp), %r10d                  #  60    0xc62f6  8      OPC=movl_r32_m32    
  testl %r10d, %r10d                      #  61    0xc62fe  3      OPC=testl_r32_r32   
  je .L_c6332                             #  62    0xc6301  2      OPC=je_label        
  movl 0xe0(%rsp), %r8d                   #  63    0xc6303  8      OPC=movl_r32_m32    
  movl 0x4c(%rsp), %ecx                   #  64    0xc630b  4      OPC=movl_r32_m32    
  movl %ebp, %edx                         #  65    0xc630f  2      OPC=movl_r32_r32    
  movq %r12, %rsi                         #  66    0xc6311  3      OPC=movq_r64_r64    
  movq %r13, %rdi                         #  67    0xc6314  3      OPC=movq_r64_r64    
  movl %r9d, 0x18(%rsp)                   #  68    0xc6317  5      OPC=movl_m32_r32    
  callq .expand_bkref_cache               #  69    0xc631c  5      OPC=callq_label     
  testl %eax, %eax                        #  70    0xc6321  2      OPC=testl_r32_r32   
  movl %eax, 0x78(%rsp)                   #  71    0xc6323  4      OPC=movl_m32_r32    
  movl 0x18(%rsp), %r9d                   #  72    0xc6327  5      OPC=movl_r32_m32    
  jne .L_c67a0                            #  73    0xc632c  6      OPC=jne_label_1     
.L_c6332:                                 #        0xc6332  0      OPC=<label>         
  movq 0x40(%rsp), %rsi                   #  74    0xc6332  5      OPC=movq_r64_m64    
  leaq 0x78(%rsp), %rdi                   #  75    0xc6337  5      OPC=leaq_r64_m16    
  movl %r9d, %ecx                         #  76    0xc633c  3      OPC=movl_r32_r32    
  movq %r12, %rdx                         #  77    0xc633f  3      OPC=movq_r64_r64    
  callq .re_acquire_state_context         #  78    0xc6342  5      OPC=callq_label     
  testq %rax, %rax                        #  79    0xc6347  3      OPC=testq_r64_r64   
  movq %rax, %r15                         #  80    0xc634a  3      OPC=movq_r64_r64    
  je .L_c68fc                             #  81    0xc634d  6      OPC=je_label_1      
.L_c6353:                                 #        0xc6353  0      OPC=<label>         
  movq 0x88(%r13), %rax                   #  82    0xc6353  7      OPC=movq_r64_m64    
  movslq %ebp, %rbx                       #  83    0xc635a  3      OPC=movslq_r64_r32  
  movq %r15, (%rax,%rbx,8)                #  84    0xc635d  4      OPC=movq_m64_r64    
.L_c6361:                                 #        0xc6361  0      OPC=<label>         
  cmpl 0x48(%rsp), %ebp                   #  85    0xc6361  4      OPC=cmpl_r32_m32    
  jge .L_c66a0                            #  86    0xc6365  6      OPC=jge_label_1     
  movl 0xa8(%r13), %edi                   #  87    0xc636b  7      OPC=movl_r32_m32    
  testl %edi, %edi                        #  88    0xc6372  2      OPC=testl_r32_r32   
  js .L_c66a0                             #  89    0xc6374  6      OPC=js_label_1      
  leaq 0x8(,%rbx,8), %rax                 #  90    0xc637a  8      OPC=leaq_r64_m16    
  movl $0x0, 0x3c(%rsp)                   #  91    0xc6382  8      OPC=movl_m32_imm32  
  movq %r13, %r12                         #  92    0xc638a  3      OPC=movq_r64_r64    
  movq %rax, 0x30(%rsp)                   #  93    0xc638d  5      OPC=movq_m64_r64    
  leal 0x1(%rbp), %eax                    #  94    0xc6392  3      OPC=leal_r32_m16    
  movl %eax, 0x38(%rsp)                   #  95    0xc6395  4      OPC=movl_m32_r32    
  leaq 0x90(%rsp), %rax                   #  96    0xc6399  8      OPC=leaq_r64_m16    
  movq %rax, 0x8(%rsp)                    #  97    0xc63a1  5      OPC=movq_m64_r64    
  leaq 0x7c(%rsp), %rax                   #  98    0xc63a6  5      OPC=leaq_r64_m16    
  movq %rax, 0x28(%rsp)                   #  99    0xc63ab  5      OPC=movq_m64_r64    
  leaq 0x78(%rsp), %rax                   #  100   0xc63b0  5      OPC=leaq_r64_m16    
  movq %rax, 0x50(%rsp)                   #  101   0xc63b5  5      OPC=movq_m64_r64    
  nop                                     #  102   0xc63ba  1      OPC=nop             
  nop                                     #  103   0xc63bb  1      OPC=nop             
  nop                                     #  104   0xc63bc  1      OPC=nop             
  nop                                     #  105   0xc63bd  1      OPC=nop             
  nop                                     #  106   0xc63be  1      OPC=nop             
  nop                                     #  107   0xc63bf  1      OPC=nop             
.L_c63c0:                                 #        0xc63c0  0      OPC=<label>         
  movl 0x38(%rsp), %eax                   #  108   0xc63c0  4      OPC=movl_r32_m32    
  movq 0x30(%rsp), %rcx                   #  109   0xc63c4  5      OPC=movq_r64_m64    
  movl $0x0, 0x84(%rsp)                   #  110   0xc63c9  11     OPC=movl_m32_imm32  
  subl $0x1, %eax                         #  111   0xc63d4  3      OPC=subl_r32_imm8   
  movl %eax, 0x18(%rsp)                   #  112   0xc63d7  4      OPC=movl_m32_r32    
  movq 0x88(%r12), %rax                   #  113   0xc63db  8      OPC=movq_r64_m64    
  movq (%rax,%rcx,1), %rsi                #  114   0xc63e3  4      OPC=movq_r64_m64    
  testq %rsi, %rsi                        #  115   0xc63e7  3      OPC=testq_r64_r64   
  je .L_c6800                             #  116   0xc63ea  6      OPC=je_label_1      
  leaq 0x80(%rsp), %rbx                   #  117   0xc63f0  8      OPC=leaq_r64_m16    
  addq $0x8, %rsi                         #  118   0xc63f8  4      OPC=addq_r64_imm8   
  movq %rbx, %rdi                         #  119   0xc63fc  3      OPC=movq_r64_r64    
  callq .re_node_set_merge                #  120   0xc63ff  5      OPC=callq_label     
  testl %eax, %eax                        #  121   0xc6404  2      OPC=testl_r32_r32   
  movl %eax, 0x78(%rsp)                   #  122   0xc6406  4      OPC=movl_m32_r32    
  jne .L_c67a0                            #  123   0xc640a  6      OPC=jne_label_1     
  testq %r15, %r15                        #  124   0xc6410  3      OPC=testq_r64_r64   
  je .L_c65d0                             #  125   0xc6413  6      OPC=je_label_1      
.L_c6419:                                 #        0xc6419  0      OPC=<label>         
  movl 0x1c(%r15), %esi                   #  126   0xc6419  4      OPC=movl_r32_m32    
  movq 0x8(%rsp), %rax                    #  127   0xc641d  5      OPC=movq_r64_m64    
  movq 0x70(%r12), %rbp                   #  128   0xc6422  5      OPC=movq_r64_m64    
  movl $0x0, 0x7c(%rsp)                   #  129   0xc6427  8      OPC=movl_m32_imm32  
  testl %esi, %esi                        #  130   0xc642f  2      OPC=testl_r32_r32   
  movq $0x0, (%rax)                       #  131   0xc6431  7      OPC=movq_m64_imm32  
  movq $0x0, 0x8(%rax)                    #  132   0xc6438  8      OPC=movq_m64_imm32  
  jle .L_c68f5                            #  133   0xc6440  6      OPC=jle_label_1     
  leaq 0x80(%rsp), %rax                   #  134   0xc6446  8      OPC=leaq_r64_m16    
  xorl %ebx, %ebx                         #  135   0xc644e  2      OPC=xorl_r32_r32    
  movq %rax, (%rsp)                       #  136   0xc6450  4      OPC=movq_m64_r64    
  leaq 0xc8(%rbp), %rax                   #  137   0xc6454  7      OPC=leaq_r64_m16    
  movq %rax, 0x20(%rsp)                   #  138   0xc645b  5      OPC=movq_m64_r64    
  jmpq .L_c64aa                           #  139   0xc6460  2      OPC=jmpq_label      
  nop                                     #  140   0xc6462  1      OPC=nop             
  nop                                     #  141   0xc6463  1      OPC=nop             
  nop                                     #  142   0xc6464  1      OPC=nop             
  nop                                     #  143   0xc6465  1      OPC=nop             
  nop                                     #  144   0xc6466  1      OPC=nop             
  nop                                     #  145   0xc6467  1      OPC=nop             
.L_c6468:                                 #        0xc6468  0      OPC=<label>         
  movl 0x18(%rsp), %edx                   #  146   0xc6468  4      OPC=movl_r32_m32    
  movq %r12, %rdi                         #  147   0xc646c  3      OPC=movq_r64_r64    
  callq .check_node_accept                #  148   0xc646f  5      OPC=callq_label     
  testl %eax, %eax                        #  149   0xc6474  2      OPC=testl_r32_r32   
  je .L_c6499                             #  150   0xc6476  2      OPC=je_label        
.L_c6478:                                 #        0xc6478  0      OPC=<label>         
  leaq (,%r13,4), %r14                    #  151   0xc6478  8      OPC=leaq_r64_m16    
.L_c6480:                                 #        0xc6480  0      OPC=<label>         
  movq 0x18(%rbp), %rax                   #  152   0xc6480  4      OPC=movq_r64_m64    
  movq (%rsp), %rdi                       #  153   0xc6484  4      OPC=movq_r64_m64    
  movl (%rax,%r14,1), %esi                #  154   0xc6488  4      OPC=movl_r32_m32    
  callq .re_node_set_insert               #  155   0xc648c  5      OPC=callq_label     
  testl %eax, %eax                        #  156   0xc6491  2      OPC=testl_r32_r32   
  js .L_c6820                             #  157   0xc6493  6      OPC=js_label_1      
.L_c6499:                                 #        0xc6499  0      OPC=<label>         
  leal 0x1(%rbx), %eax                    #  158   0xc6499  3      OPC=leal_r32_m16    
  addq $0x1, %rbx                         #  159   0xc649c  4      OPC=addq_r64_imm8   
  cmpl %eax, 0x1c(%r15)                   #  160   0xc64a0  4      OPC=cmpl_m32_r32    
  jle .L_c67d8                            #  161   0xc64a4  6      OPC=jle_label_1     
.L_c64aa:                                 #        0xc64aa  0      OPC=<label>         
  movq 0x20(%r15), %rax                   #  162   0xc64aa  4      OPC=movq_r64_m64    
  movq (%rbp), %rdi                       #  163   0xc64ae  4      OPC=movq_r64_m64    
  movslq (%rax,%rbx,4), %r13              #  164   0xc64b2  4      OPC=movslq_r64_m32  
  movq %r13, %r14                         #  165   0xc64b6  3      OPC=movq_r64_r64    
  movq %r13, %rdx                         #  166   0xc64b9  3      OPC=movq_r64_r64    
  shlq $0x4, %r14                         #  167   0xc64bc  4      OPC=shlq_r64_imm8   
  leaq (%rdi,%r14,1), %rsi                #  168   0xc64c0  4      OPC=leaq_r64_m16    
  testb $0x10, 0xa(%rsi)                  #  169   0xc64c4  4      OPC=testb_m8_imm8   
  je .L_c6468                             #  170   0xc64c8  2      OPC=je_label        
  movl 0x18(%rsp), %r8d                   #  171   0xc64ca  5      OPC=movl_r32_m32    
  movq 0x20(%rsp), %rsi                   #  172   0xc64cf  5      OPC=movq_r64_m64    
  movq %r12, %rcx                         #  173   0xc64d4  3      OPC=movq_r64_r64    
  callq .check_node_accept_bytes_isra_28  #  174   0xc64d7  5      OPC=callq_label     
  cmpl $0x1, %eax                         #  175   0xc64dc  3      OPC=cmpl_r32_imm8   
  jle .L_c67c0                            #  176   0xc64df  6      OPC=jle_label_1     
  addl 0x18(%rsp), %eax                   #  177   0xc64e5  4      OPC=addl_r32_m32    
  movq 0x18(%rbp), %rdx                   #  178   0xc64e9  4      OPC=movq_r64_m64    
  leaq (,%r13,4), %r14                    #  179   0xc64ed  8      OPC=leaq_r64_m16    
  movl (%rdx,%r13,4), %edx                #  180   0xc64f5  4      OPC=movl_r32_m32    
  movslq %eax, %r13                       #  181   0xc64f9  3      OPC=movslq_r64_r32  
  leaq (,%r13,8), %rax                    #  182   0xc64fc  8      OPC=leaq_r64_m16    
  movq %rax, 0x10(%rsp)                   #  183   0xc6504  5      OPC=movq_m64_r64    
  movq 0x88(%r12), %rax                   #  184   0xc6509  8      OPC=movq_r64_m64    
  movq (%rax,%r13,8), %rax                #  185   0xc6511  4      OPC=movq_r64_m64    
  movl $0x0, 0x94(%rsp)                   #  186   0xc6515  11     OPC=movl_m32_imm32  
  testq %rax, %rax                        #  187   0xc6520  3      OPC=testq_r64_r64   
  je .L_c6543                             #  188   0xc6523  2      OPC=je_label        
  movq 0x8(%rsp), %rdi                    #  189   0xc6525  5      OPC=movq_r64_m64    
  leaq 0x8(%rax), %rsi                    #  190   0xc652a  4      OPC=leaq_r64_m16    
  movl %edx, 0x1c(%rsp)                   #  191   0xc652e  4      OPC=movl_m32_r32    
  callq .re_node_set_merge                #  192   0xc6532  5      OPC=callq_label     
  testl %eax, %eax                        #  193   0xc6537  2      OPC=testl_r32_r32   
  movl %eax, 0x7c(%rsp)                   #  194   0xc6539  4      OPC=movl_m32_r32    
  movl 0x1c(%rsp), %edx                   #  195   0xc653d  4      OPC=movl_r32_m32    
  jne .L_c65a2                            #  196   0xc6541  2      OPC=jne_label       
.L_c6543:                                 #        0xc6543  0      OPC=<label>         
  movq 0x8(%rsp), %rdi                    #  197   0xc6543  5      OPC=movq_r64_m64    
  movl %edx, %esi                         #  198   0xc6548  2      OPC=movl_r32_r32    
  callq .re_node_set_insert               #  199   0xc654a  5      OPC=callq_label     
  testl %eax, %eax                        #  200   0xc654f  2      OPC=testl_r32_r32   
  js .L_c6820                             #  201   0xc6551  6      OPC=js_label_1      
  movq 0x10(%rsp), %rcx                   #  202   0xc6557  5      OPC=movq_r64_m64    
  addq 0x88(%r12), %rcx                   #  203   0xc655c  8      OPC=addq_r64_m64    
  movq %rbp, %rsi                         #  204   0xc6564  3      OPC=movq_r64_r64    
  movq 0x8(%rsp), %rdx                    #  205   0xc6567  5      OPC=movq_r64_m64    
  movq 0x28(%rsp), %rdi                   #  206   0xc656c  5      OPC=movq_r64_m64    
  movq %rcx, 0x10(%rsp)                   #  207   0xc6571  5      OPC=movq_m64_r64    
  callq .re_acquire_state                 #  208   0xc6576  5      OPC=callq_label     
  movq 0x10(%rsp), %rcx                   #  209   0xc657b  5      OPC=movq_r64_m64    
  movq %rax, (%rcx)                       #  210   0xc6580  3      OPC=movq_m64_r64    
  movq 0x88(%r12), %rax                   #  211   0xc6583  8      OPC=movq_r64_m64    
  cmpq $0x0, (%rax,%r13,8)                #  212   0xc658b  5      OPC=cmpq_m64_imm8   
  jne .L_c6480                            #  213   0xc6590  6      OPC=jne_label_1     
  movl 0x7c(%rsp), %ecx                   #  214   0xc6596  4      OPC=movl_r32_m32    
  testl %ecx, %ecx                        #  215   0xc659a  2      OPC=testl_r32_r32   
  je .L_c6480                             #  216   0xc659c  6      OPC=je_label_1      
.L_c65a2:                                 #        0xc65a2  0      OPC=<label>         
  movq 0x98(%rsp), %rdi                   #  217   0xc65a2  8      OPC=movq_r64_m64    
  callq .L_1f8c0                          #  218   0xc65aa  5      OPC=callq_label     
  movl 0x7c(%rsp), %eax                   #  219   0xc65af  4      OPC=movl_r32_m32    
  testl %eax, %eax                        #  220   0xc65b3  2      OPC=testl_r32_r32   
  movl %eax, 0x78(%rsp)                   #  221   0xc65b5  4      OPC=movl_m32_r32    
  jne .L_c67a0                            #  222   0xc65b9  6      OPC=jne_label_1     
  leaq 0x80(%rsp), %rbx                   #  223   0xc65bf  8      OPC=leaq_r64_m16    
  nop                                     #  224   0xc65c7  1      OPC=nop             
  nop                                     #  225   0xc65c8  1      OPC=nop             
  nop                                     #  226   0xc65c9  1      OPC=nop             
  nop                                     #  227   0xc65ca  1      OPC=nop             
  nop                                     #  228   0xc65cb  1      OPC=nop             
  nop                                     #  229   0xc65cc  1      OPC=nop             
  nop                                     #  230   0xc65cd  1      OPC=nop             
  nop                                     #  231   0xc65ce  1      OPC=nop             
  nop                                     #  232   0xc65cf  1      OPC=nop             
.L_c65d0:                                 #        0xc65d0  0      OPC=<label>         
  movl 0x84(%rsp), %edx                   #  233   0xc65d0  7      OPC=movl_r32_m32    
  movl 0x38(%rsp), %ebp                   #  234   0xc65d7  4      OPC=movl_r32_m32    
  testl %edx, %edx                        #  235   0xc65db  2      OPC=testl_r32_r32   
  je .L_c662a                             #  236   0xc65dd  2      OPC=je_label        
  movl 0xe0(%rsp), %ecx                   #  237   0xc65df  7      OPC=movl_r32_m32    
  movl 0x4c(%rsp), %edx                   #  238   0xc65e6  4      OPC=movl_r32_m32    
  movq %rbx, %rsi                         #  239   0xc65ea  3      OPC=movq_r64_r64    
  movq 0x40(%rsp), %rdi                   #  240   0xc65ed  5      OPC=movq_r64_m64    
  callq .check_arrival_expand_ecl         #  241   0xc65f2  5      OPC=callq_label     
  testl %eax, %eax                        #  242   0xc65f7  2      OPC=testl_r32_r32   
  movl %eax, 0x78(%rsp)                   #  243   0xc65f9  4      OPC=movl_m32_r32    
  jne .L_c67a0                            #  244   0xc65fd  6      OPC=jne_label_1     
  movl 0xe0(%rsp), %r8d                   #  245   0xc6603  8      OPC=movl_r32_m32    
  movl 0x4c(%rsp), %ecx                   #  246   0xc660b  4      OPC=movl_r32_m32    
  movq %rbx, %rsi                         #  247   0xc660f  3      OPC=movq_r64_r64    
  movl 0x38(%rsp), %edx                   #  248   0xc6612  4      OPC=movl_r32_m32    
  movq %r12, %rdi                         #  249   0xc6616  3      OPC=movq_r64_r64    
  callq .expand_bkref_cache               #  250   0xc6619  5      OPC=callq_label     
  testl %eax, %eax                        #  251   0xc661e  2      OPC=testl_r32_r32   
  movl %eax, 0x78(%rsp)                   #  252   0xc6620  4      OPC=movl_m32_r32    
  jne .L_c67a0                            #  253   0xc6624  6      OPC=jne_label_1     
.L_c662a:                                 #        0xc662a  0      OPC=<label>         
  movl 0x78(%r12), %edx                   #  254   0xc662a  5      OPC=movl_r32_m32    
  movl 0x18(%rsp), %esi                   #  255   0xc662f  4      OPC=movl_r32_m32    
  movq %r12, %rdi                         #  256   0xc6633  3      OPC=movq_r64_r64    
  callq .re_string_context_at             #  257   0xc6636  5      OPC=callq_label     
  movq 0x40(%rsp), %rsi                   #  258   0xc663b  5      OPC=movq_r64_m64    
  movq 0x50(%rsp), %rdi                   #  259   0xc6640  5      OPC=movq_r64_m64    
  movl %eax, %ecx                         #  260   0xc6645  2      OPC=movl_r32_r32    
  movq %rbx, %rdx                         #  261   0xc6647  3      OPC=movq_r64_r64    
  callq .re_acquire_state_context         #  262   0xc664a  5      OPC=callq_label     
  testq %rax, %rax                        #  263   0xc664f  3      OPC=testq_r64_r64   
  movq %rax, %r15                         #  264   0xc6652  3      OPC=movq_r64_r64    
  je .L_c683a                             #  265   0xc6655  6      OPC=je_label_1      
  movq 0x88(%r12), %rax                   #  266   0xc665b  8      OPC=movq_r64_m64    
  movq 0x30(%rsp), %rcx                   #  267   0xc6663  5      OPC=movq_r64_m64    
  movl $0x0, 0x3c(%rsp)                   #  268   0xc6668  8      OPC=movl_m32_imm32  
  movq %r15, (%rax,%rcx,1)                #  269   0xc6670  4      OPC=movq_m64_r64    
.L_c6674:                                 #        0xc6674  0      OPC=<label>         
  movl 0x38(%rsp), %eax                   #  270   0xc6674  4      OPC=movl_r32_m32    
  cmpl %eax, 0x48(%rsp)                   #  271   0xc6678  4      OPC=cmpl_m32_r32    
  jle .L_c669d                            #  272   0xc667c  2      OPC=jle_label       
  addl $0x1, %eax                         #  273   0xc667e  3      OPC=addl_r32_imm8   
  addq $0x8, 0x30(%rsp)                   #  274   0xc6681  6      OPC=addq_m64_imm8   
  movl %eax, 0x38(%rsp)                   #  275   0xc6687  4      OPC=movl_m32_r32    
  movl 0x3c(%rsp), %eax                   #  276   0xc668b  4      OPC=movl_r32_m32    
  cmpl %eax, 0xa8(%r12)                   #  277   0xc668f  8      OPC=cmpl_m32_r32    
  jge .L_c63c0                            #  278   0xc6697  6      OPC=jge_label_1     
.L_c669d:                                 #        0xc669d  0      OPC=<label>         
  movq %r12, %r13                         #  279   0xc669d  3      OPC=movq_r64_r64    
.L_c66a0:                                 #        0xc66a0  0      OPC=<label>         
  movq 0x88(%rsp), %rdi                   #  280   0xc66a0  8      OPC=movq_r64_m64    
  callq .L_1f8c0                          #  281   0xc66a8  5      OPC=callq_label     
  movslq 0x48(%rsp), %rdx                 #  282   0xc66ad  5      OPC=movslq_r64_m32  
  movq 0x88(%r13), %rax                   #  283   0xc66b2  7      OPC=movq_r64_m64    
  movq (%rax,%rdx,8), %rax                #  284   0xc66b9  4      OPC=movq_r64_m64    
  testq %rax, %rax                        #  285   0xc66bd  3      OPC=testq_r64_r64   
  je .L_c692c                             #  286   0xc66c0  6      OPC=je_label_1      
  movq 0x58(%rsp), %rcx                   #  287   0xc66c6  5      OPC=movq_r64_m64    
  movl 0x68(%rsp), %edx                   #  288   0xc66cb  4      OPC=movl_r32_m32    
  leaq 0x10(%rax), %rsi                   #  289   0xc66cf  4      OPC=leaq_r64_m16    
  movl %ebp, (%rcx)                       #  290   0xc66d3  2      OPC=movl_m32_r32    
  movq 0x60(%rsp), %rcx                   #  291   0xc66d5  5      OPC=movq_r64_m64    
  movq %rcx, 0x88(%r13)                   #  292   0xc66da  7      OPC=movq_m64_r64    
  movl 0x6c(%rsp), %ecx                   #  293   0xc66e1  4      OPC=movl_r32_m32    
  movl %ecx, 0x38(%r13)                   #  294   0xc66e5  4      OPC=movl_m32_r32    
  movl 0xc(%rax), %edi                    #  295   0xc66e9  3      OPC=movl_r32_m32    
  callq .re_node_set_contains_isra_3      #  296   0xc66ec  5      OPC=callq_label     
  testl %eax, %eax                        #  297   0xc66f1  2      OPC=testl_r32_r32   
  sete %al                                #  298   0xc66f3  3      OPC=sete_r8         
  movzbl %al, %eax                        #  299   0xc66f6  3      OPC=movzbl_r32_r8   
.L_c66f9:                                 #        0xc66f9  0      OPC=<label>         
  addq $0xa8, %rsp                        #  300   0xc66f9  7      OPC=addq_r64_imm32  
  popq %rbx                               #  301   0xc6700  1      OPC=popq_r64_1      
  popq %rbp                               #  302   0xc6701  1      OPC=popq_r64_1      
  popq %r12                               #  303   0xc6702  2      OPC=popq_r64_1      
  popq %r13                               #  304   0xc6704  2      OPC=popq_r64_1      
  popq %r14                               #  305   0xc6706  2      OPC=popq_r64_1      
  popq %r15                               #  306   0xc6708  2      OPC=popq_r64_1      
  retq                                    #  307   0xc670a  1      OPC=retq            
.L_c670b:                                 #        0xc670b  0      OPC=<label>         
  movq 0x8(%rax), %rax                    #  308   0xc670b  4      OPC=movq_r64_m64    
  movl 0x78(%r13), %edx                   #  309   0xc670f  4      OPC=movl_r32_m32    
  leal -0x1(%rbx), %esi                   #  310   0xc6713  3      OPC=leal_r32_m16    
  movl %ebx, 0x38(%r13)                   #  311   0xc6716  4      OPC=movl_m32_r32    
  movq %r13, %rdi                         #  312   0xc671a  3      OPC=movq_r64_r64    
  movq %rax, 0x88(%r13)                   #  313   0xc671d  7      OPC=movq_m64_r64    
  callq .re_string_context_at             #  314   0xc6724  5      OPC=callq_label     
  movl %eax, %r9d                         #  315   0xc6729  3      OPC=movl_r32_r32    
.L_c672c:                                 #        0xc672c  0      OPC=<label>         
  movl $0x4, %edi                         #  316   0xc672c  5      OPC=movl_r32_imm32  
  movl %r9d, 0x18(%rsp)                   #  317   0xc6731  5      OPC=movl_m32_r32    
  movl $0x1, 0x80(%rsp)                   #  318   0xc6736  11     OPC=movl_m32_imm32  
  movl $0x1, 0x84(%rsp)                   #  319   0xc6741  11     OPC=movl_m32_imm32  
  callq .memalign_plt                     #  320   0xc674c  5      OPC=callq_label     
  testq %rax, %rax                        #  321   0xc6751  3      OPC=testq_r64_r64   
  movq %rax, 0x88(%rsp)                   #  322   0xc6754  8      OPC=movq_m64_r64    
  je .L_c6951                             #  323   0xc675c  6      OPC=je_label_1      
  movl %r12d, (%rax)                      #  324   0xc6762  3      OPC=movl_m32_r32    
  movl 0xe0(%rsp), %ecx                   #  325   0xc6765  7      OPC=movl_r32_m32    
  leaq 0x80(%rsp), %r12                   #  326   0xc676c  8      OPC=leaq_r64_m16    
  movl 0x4c(%rsp), %edx                   #  327   0xc6774  4      OPC=movl_r32_m32    
  movq 0x40(%rsp), %rdi                   #  328   0xc6778  5      OPC=movq_r64_m64    
  movl %ebx, %ebp                         #  329   0xc677d  2      OPC=movl_r32_r32    
  movq %r12, %rsi                         #  330   0xc677f  3      OPC=movq_r64_r64    
  movl $0x0, 0x78(%rsp)                   #  331   0xc6782  8      OPC=movl_m32_imm32  
  callq .check_arrival_expand_ecl         #  332   0xc678a  5      OPC=callq_label     
  testl %eax, %eax                        #  333   0xc678f  2      OPC=testl_r32_r32   
  movl %eax, 0x78(%rsp)                   #  334   0xc6791  4      OPC=movl_m32_r32    
  movl 0x18(%rsp), %r9d                   #  335   0xc6795  5      OPC=movl_r32_m32    
  je .L_c62f6                             #  336   0xc679a  6      OPC=je_label_1      
.L_c67a0:                                 #        0xc67a0  0      OPC=<label>         
  movq 0x88(%rsp), %rdi                   #  337   0xc67a0  8      OPC=movq_r64_m64    
  callq .L_1f8c0                          #  338   0xc67a8  5      OPC=callq_label     
  movl 0x78(%rsp), %eax                   #  339   0xc67ad  4      OPC=movl_r32_m32    
  jmpq .L_c66f9                           #  340   0xc67b1  5      OPC=jmpq_label_1    
  nop                                     #  341   0xc67b6  1      OPC=nop             
  nop                                     #  342   0xc67b7  1      OPC=nop             
  nop                                     #  343   0xc67b8  1      OPC=nop             
  nop                                     #  344   0xc67b9  1      OPC=nop             
  nop                                     #  345   0xc67ba  1      OPC=nop             
  nop                                     #  346   0xc67bb  1      OPC=nop             
  nop                                     #  347   0xc67bc  1      OPC=nop             
  nop                                     #  348   0xc67bd  1      OPC=nop             
  nop                                     #  349   0xc67be  1      OPC=nop             
  nop                                     #  350   0xc67bf  1      OPC=nop             
.L_c67c0:                                 #        0xc67c0  0      OPC=<label>         
  testl %eax, %eax                        #  351   0xc67c0  2      OPC=testl_r32_r32   
  jne .L_c6478                            #  352   0xc67c2  6      OPC=jne_label_1     
  movq %r14, %rsi                         #  353   0xc67c8  3      OPC=movq_r64_r64    
  addq (%rbp), %rsi                       #  354   0xc67cb  4      OPC=addq_r64_m64    
  jmpq .L_c6468                           #  355   0xc67cf  5      OPC=jmpq_label_1    
  nop                                     #  356   0xc67d4  1      OPC=nop             
  nop                                     #  357   0xc67d5  1      OPC=nop             
  nop                                     #  358   0xc67d6  1      OPC=nop             
  nop                                     #  359   0xc67d7  1      OPC=nop             
.L_c67d8:                                 #        0xc67d8  0      OPC=<label>         
  movq 0x98(%rsp), %rdi                   #  360   0xc67d8  8      OPC=movq_r64_m64    
.L_c67e0:                                 #        0xc67e0  0      OPC=<label>         
  callq .L_1f8c0                          #  361   0xc67e0  5      OPC=callq_label     
  leaq 0x80(%rsp), %rbx                   #  362   0xc67e5  8      OPC=leaq_r64_m16    
  movl $0x0, 0x78(%rsp)                   #  363   0xc67ed  8      OPC=movl_m32_imm32  
  jmpq .L_c65d0                           #  364   0xc67f5  5      OPC=jmpq_label_1    
  nop                                     #  365   0xc67fa  1      OPC=nop             
  nop                                     #  366   0xc67fb  1      OPC=nop             
  nop                                     #  367   0xc67fc  1      OPC=nop             
  nop                                     #  368   0xc67fd  1      OPC=nop             
  nop                                     #  369   0xc67fe  1      OPC=nop             
  nop                                     #  370   0xc67ff  1      OPC=nop             
.L_c6800:                                 #        0xc6800  0      OPC=<label>         
  testq %r15, %r15                        #  371   0xc6800  3      OPC=testq_r64_r64   
  jne .L_c6419                            #  372   0xc6803  6      OPC=jne_label_1     
  movl 0x38(%rsp), %ebp                   #  373   0xc6809  4      OPC=movl_r32_m32    
  leaq 0x80(%rsp), %rbx                   #  374   0xc680d  8      OPC=leaq_r64_m16    
  jmpq .L_c662a                           #  375   0xc6815  5      OPC=jmpq_label_1    
  nop                                     #  376   0xc681a  1      OPC=nop             
  nop                                     #  377   0xc681b  1      OPC=nop             
  nop                                     #  378   0xc681c  1      OPC=nop             
  nop                                     #  379   0xc681d  1      OPC=nop             
  nop                                     #  380   0xc681e  1      OPC=nop             
  nop                                     #  381   0xc681f  1      OPC=nop             
.L_c6820:                                 #        0xc6820  0      OPC=<label>         
  movq 0x98(%rsp), %rdi                   #  382   0xc6820  8      OPC=movq_r64_m64    
  callq .L_1f8c0                          #  383   0xc6828  5      OPC=callq_label     
  movl $0xc, 0x78(%rsp)                   #  384   0xc682d  8      OPC=movl_m32_imm32  
  jmpq .L_c67a0                           #  385   0xc6835  5      OPC=jmpq_label_1    
.L_c683a:                                 #        0xc683a  0      OPC=<label>         
  movl 0x78(%rsp), %eax                   #  386   0xc683a  4      OPC=movl_r32_m32    
  testl %eax, %eax                        #  387   0xc683e  2      OPC=testl_r32_r32   
  jne .L_c67a0                            #  388   0xc6840  6      OPC=jne_label_1     
  movq 0x88(%r12), %rax                   #  389   0xc6846  8      OPC=movq_r64_m64    
  movq 0x30(%rsp), %rcx                   #  390   0xc684e  5      OPC=movq_r64_m64    
  addl $0x1, 0x3c(%rsp)                   #  391   0xc6853  5      OPC=addl_m32_imm8   
  movq $0x0, (%rax,%rcx,1)                #  392   0xc6858  8      OPC=movq_m64_imm32  
  jmpq .L_c6674                           #  393   0xc6860  5      OPC=jmpq_label_1    
.L_c6865:                                 #        0xc6865  0      OPC=<label>         
  leal 0x1(%rax,%rbp,1), %eax             #  394   0xc6865  4      OPC=leal_r32_m16    
  movq 0x8(%rcx), %rdi                    #  395   0xc6869  4      OPC=movq_r64_m64    
  movl %eax, 0x4(%rsi)                    #  396   0xc686d  3      OPC=movl_m32_r32    
  cltq                                    #  397   0xc6870  2      OPC=cltq            
  leaq (,%rax,8), %rsi                    #  398   0xc6872  8      OPC=leaq_r64_m16    
  callq .__tls_get_addr_plt               #  399   0xc687a  5      OPC=callq_label     
  testq %rax, %rax                        #  400   0xc687f  3      OPC=testq_r64_r64   
  je .L_c68e3                             #  401   0xc6882  2      OPC=je_label        
  movq 0x58(%rsp), %rcx                   #  402   0xc6884  5      OPC=movq_r64_m64    
  leaq (%rax,%rbp,8), %rdi                #  403   0xc6889  4      OPC=leaq_r64_m16    
  xorl %esi, %esi                         #  404   0xc688d  2      OPC=xorl_r32_r32    
  movq %rax, 0x8(%rcx)                    #  405   0xc688f  4      OPC=movq_m64_r64    
  movl 0x4(%rcx), %ecx                    #  406   0xc6893  3      OPC=movl_r32_m32    
  movl %ecx, %edx                         #  407   0xc6896  2      OPC=movl_r32_r32    
  movl %ecx, 0x18(%rsp)                   #  408   0xc6898  4      OPC=movl_m32_r32    
  subl %ebp, %edx                         #  409   0xc689c  2      OPC=subl_r32_r32    
  movslq %edx, %rdx                       #  410   0xc689e  3      OPC=movslq_r64_r32  
  shlq $0x3, %rdx                         #  411   0xc68a1  4      OPC=shlq_r64_imm8   
  callq .__GI_memset                      #  412   0xc68a5  5      OPC=callq_label     
  jmpq .L_c6264                           #  413   0xc68aa  5      OPC=jmpq_label_1    
.L_c68af:                                 #        0xc68af  0      OPC=<label>         
  leaq 0x80(%rsp), %r12                   #  414   0xc68af  8      OPC=leaq_r64_m16    
  leaq 0x8(%r15), %rsi                    #  415   0xc68b7  4      OPC=leaq_r64_m16    
  movl %r9d, 0x18(%rsp)                   #  416   0xc68bb  5      OPC=movl_m32_r32    
  movq %r12, %rdi                         #  417   0xc68c0  3      OPC=movq_r64_r64    
  callq .re_node_set_init_copy            #  418   0xc68c3  5      OPC=callq_label     
  testl %eax, %eax                        #  419   0xc68c8  2      OPC=testl_r32_r32   
  movl %eax, 0x78(%rsp)                   #  420   0xc68ca  4      OPC=movl_m32_r32    
  jne .L_c66f9                            #  421   0xc68ce  6      OPC=jne_label_1     
  movzbl 0x50(%r15), %eax                 #  422   0xc68d4  5      OPC=movzbl_r32_m8   
  movl 0x18(%rsp), %r9d                   #  423   0xc68d9  5      OPC=movl_r32_m32    
  jmpq .L_c62ea                           #  424   0xc68de  5      OPC=jmpq_label_1    
.L_c68e3:                                 #        0xc68e3  0      OPC=<label>         
  movq 0x58(%rsp), %rax                   #  425   0xc68e3  5      OPC=movq_r64_m64    
  movl %ebp, 0x4(%rax)                    #  426   0xc68e8  3      OPC=movl_m32_r32    
  movl $0xc, %eax                         #  427   0xc68eb  5      OPC=movl_r32_imm32  
  jmpq .L_c66f9                           #  428   0xc68f0  5      OPC=jmpq_label_1    
.L_c68f5:                                 #        0xc68f5  0      OPC=<label>         
  xorl %edi, %edi                         #  429   0xc68f5  2      OPC=xorl_r32_r32    
  jmpq .L_c67e0                           #  430   0xc68f7  5      OPC=jmpq_label_1    
.L_c68fc:                                 #        0xc68fc  0      OPC=<label>         
  movl 0x78(%rsp), %r8d                   #  431   0xc68fc  5      OPC=movl_r32_m32    
  testl %r8d, %r8d                        #  432   0xc6901  3      OPC=testl_r32_r32   
  je .L_c6353                             #  433   0xc6904  6      OPC=je_label_1      
  jmpq .L_c67a0                           #  434   0xc690a  5      OPC=jmpq_label_1    
.L_c690f:                                 #        0xc690f  0      OPC=<label>         
  movq $0x0, 0x80(%rsp)                   #  435   0xc690f  12     OPC=movq_m64_imm32  
  movq $0x0, 0x88(%rsp)                   #  436   0xc691b  12     OPC=movq_m64_imm32  
  jmpq .L_c6361                           #  437   0xc6927  5      OPC=jmpq_label_1    
.L_c692c:                                 #        0xc692c  0      OPC=<label>         
  movq 0x58(%rsp), %rax                   #  438   0xc692c  5      OPC=movq_r64_m64    
  movl %ebp, (%rax)                       #  439   0xc6931  2      OPC=movl_m32_r32    
  movq 0x60(%rsp), %rax                   #  440   0xc6933  5      OPC=movq_r64_m64    
  movq %rax, 0x88(%r13)                   #  441   0xc6938  7      OPC=movq_m64_r64    
  movl 0x6c(%rsp), %eax                   #  442   0xc693f  4      OPC=movl_r32_m32    
  movl %eax, 0x38(%r13)                   #  443   0xc6943  4      OPC=movl_m32_r32    
  movl $0x1, %eax                         #  444   0xc6947  5      OPC=movl_r32_imm32  
  jmpq .L_c66f9                           #  445   0xc694c  5      OPC=jmpq_label_1    
.L_c6951:                                 #        0xc6951  0      OPC=<label>         
  movl $0xc, %eax                         #  446   0xc6951  5      OPC=movl_r32_imm32  
  jmpq .L_c66f9                           #  447   0xc6956  5      OPC=jmpq_label_1    
  nop                                     #  448   0xc695b  1      OPC=nop             
  nop                                     #  449   0xc695c  1      OPC=nop             
  nop                                     #  450   0xc695d  1      OPC=nop             
  nop                                     #  451   0xc695e  1      OPC=nop             
  nop                                     #  452   0xc695f  1      OPC=nop             
                                                                                       
.size check_arrival, .-check_arrival

