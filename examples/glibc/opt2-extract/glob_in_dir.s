  .text
  .globl glob_in_dir
  .type glob_in_dir, @function

#! file-offset 0xb8a60
#! rip-offset  0xb8a60
#! capacity    2032 bytes

# Text                            #  Line  RIP      Bytes  Opcode               
.glob_in_dir:                     #        0xb8a60  0      OPC=<label>          
  pushq %rbp                      #  1     0xb8a60  1      OPC=pushq_r64_1      
  movq %rsp, %rbp                 #  2     0xb8a61  3      OPC=movq_r64_r64     
  pushq %r15                      #  3     0xb8a64  2      OPC=pushq_r64_1      
  pushq %r14                      #  4     0xb8a66  2      OPC=pushq_r64_1      
  pushq %r13                      #  5     0xb8a68  2      OPC=pushq_r64_1      
  pushq %r12                      #  6     0xb8a6a  2      OPC=pushq_r64_1      
  movl %edx, %r12d                #  7     0xb8a6c  3      OPC=movl_r32_r32     
  pushq %rbx                      #  8     0xb8a6f  1      OPC=pushq_r64_1      
  movl %r12d, %r13d               #  9     0xb8a70  3      OPC=movl_r32_r32     
  movq %rdi, %rbx                 #  10    0xb8a73  3      OPC=movq_r64_r64     
  movq %rcx, %r15                 #  11    0xb8a76  3      OPC=movq_r64_r64     
  movq %r9, %r14                  #  12    0xb8a79  3      OPC=movq_r64_r64     
  subq $0x448, %rsp               #  13    0xb8a7c  7      OPC=subq_r64_imm32   
  movq %rdi, -0x400(%rbp)         #  14    0xb8a83  7      OPC=movq_m64_r64     
  movq %rsi, %rdi                 #  15    0xb8a8a  3      OPC=movq_r64_r64     
  movq %rsi, -0x428(%rbp)         #  16    0xb8a8d  7      OPC=movq_m64_r64     
  movq %r8, -0x410(%rbp)          #  17    0xb8a94  7      OPC=movq_m64_r64     
  callq .strlen                   #  18    0xb8a9b  5      OPC=callq_label      
  xorl %esi, %esi                 #  19    0xb8aa0  2      OPC=xorl_r32_r32     
  andl $0x40, %r13d               #  20    0xb8aa2  4      OPC=andl_r32_imm8    
  movq %rbx, %rdi                 #  21    0xb8aa6  3      OPC=movq_r64_r64     
  sete %sil                       #  22    0xb8aa9  4      OPC=sete_r8          
  movq %rax, -0x430(%rbp)         #  23    0xb8aad  7      OPC=movq_m64_r64     
  movq $0x0, -0x240(%rbp)         #  24    0xb8ab4  11     OPC=movq_m64_imm32   
  movq $0x40, -0x238(%rbp)        #  25    0xb8abf  11     OPC=movq_m64_imm32   
  callq .__glob_pattern_type      #  26    0xb8aca  5      OPC=callq_label      
  testl %eax, %eax                #  27    0xb8acf  2      OPC=testl_r32_r32    
  je .L_b8d2c                     #  28    0xb8ad1  6      OPC=je_label_1       
  movl %r12d, %eax                #  29    0xb8ad7  3      OPC=movl_r32_r32     
  movq -0x428(%rbp), %rdi         #  30    0xb8ada  7      OPC=movq_r64_m64     
  andl $0x200, %eax               #  31    0xb8ae1  5      OPC=andl_eax_imm32   
  movl %eax, -0x3f4(%rbp)         #  32    0xb8ae6  6      OPC=movl_m32_r32     
  jne .L_b9065                    #  33    0xb8aec  6      OPC=jne_label_1      
  callq .opendir                  #  34    0xb8af2  5      OPC=callq_label      
  testq %rax, %rax                #  35    0xb8af7  3      OPC=testq_r64_r64    
  movq %rax, %rbx                 #  36    0xb8afa  3      OPC=movq_r64_r64     
  je .L_b9085                     #  37    0xb8afd  6      OPC=je_label_1       
  movl (%rax), %eax               #  38    0xb8b03  2      OPC=movl_r32_m32     
  movl %eax, -0x434(%rbp)         #  39    0xb8b05  6      OPC=movl_m32_r32     
.L_b8b0b:                         #        0xb8b0b  0      OPC=<label>          
  movl %r12d, %eax                #  40    0xb8b0b  3      OPC=movl_r32_r32     
  movl $0x2, %edx                 #  41    0xb8b0e  5      OPC=movl_r32_imm32   
  leaq 0x210(%r14), %rcx          #  42    0xb8b13  7      OPC=leaq_r64_m16     
  andl $0x80, %eax                #  43    0xb8b1a  5      OPC=andl_eax_imm32   
  movq $0x0, -0x420(%rbp)         #  44    0xb8b1f  11     OPC=movq_m64_imm32   
  cmpl $0x1, %eax                 #  45    0xb8b2a  3      OPC=cmpl_r32_imm8    
  movq %rcx, -0x448(%rbp)         #  46    0xb8b2d  7      OPC=movq_m64_r64     
  sbbl %eax, %eax                 #  47    0xb8b34  2      OPC=sbbl_r32_r32     
  andl $0x4, %eax                 #  48    0xb8b36  3      OPC=andl_r32_imm8    
  testl %r13d, %r13d              #  49    0xb8b39  3      OPC=testl_r32_r32    
  cmovnel %edx, %r13d             #  50    0xb8b3c  4      OPC=cmovnel_r32_r32  
  orl %eax, %r13d                 #  51    0xb8b40  3      OPC=orl_r32_r32      
  movl %r12d, %eax                #  52    0xb8b43  3      OPC=movl_r32_r32     
  andl $0x2000, %r12d             #  53    0xb8b46  7      OPC=andl_r32_imm32   
  orb $0x1, %ah                   #  54    0xb8b4d  3      OPC=orb_rh_imm8      
  movl %r13d, -0x414(%rbp)        #  55    0xb8b50  7      OPC=movl_m32_r32     
  movl %r12d, -0x3f8(%rbp)        #  56    0xb8b57  7      OPC=movl_m32_r32     
  movl %eax, -0x418(%rbp)         #  57    0xb8b5e  6      OPC=movl_m32_r32     
  leaq -0x240(%rbp), %rax         #  58    0xb8b64  7      OPC=leaq_r64_m16     
  xorl %r13d, %r13d               #  59    0xb8b6b  3      OPC=xorl_r32_r32     
  movq %rax, -0x440(%rbp)         #  60    0xb8b6e  7      OPC=movq_m64_r64     
  movq %rax, -0x408(%rbp)         #  61    0xb8b75  7      OPC=movq_m64_r64     
  movq %rax, %r15                 #  62    0xb8b7c  3      OPC=movq_r64_r64     
  leaq -0x360(%rbp), %rax         #  63    0xb8b7f  7      OPC=leaq_r64_m16     
  movq %rax, -0x450(%rbp)         #  64    0xb8b86  7      OPC=movq_m64_r64     
  addq $0x13, %rax                #  65    0xb8b8d  4      OPC=addq_r64_imm8    
  movq %rax, -0x458(%rbp)         #  66    0xb8b91  7      OPC=movq_m64_r64     
  leaq -0x3f0(%rbp), %rax         #  67    0xb8b98  7      OPC=leaq_r64_m16     
  movq %rax, -0x460(%rbp)         #  68    0xb8b9f  7      OPC=movq_m64_r64     
  nop                             #  69    0xb8ba6  1      OPC=nop              
  nop                             #  70    0xb8ba7  1      OPC=nop              
  nop                             #  71    0xb8ba8  1      OPC=nop              
  nop                             #  72    0xb8ba9  1      OPC=nop              
  nop                             #  73    0xb8baa  1      OPC=nop              
  nop                             #  74    0xb8bab  1      OPC=nop              
  nop                             #  75    0xb8bac  1      OPC=nop              
  nop                             #  76    0xb8bad  1      OPC=nop              
  nop                             #  77    0xb8bae  1      OPC=nop              
  nop                             #  78    0xb8baf  1      OPC=nop              
.L_b8bb0:                         #        0xb8bb0  0      OPC=<label>          
  movl -0x3f4(%rbp), %ecx         #  79    0xb8bb0  6      OPC=movl_r32_m32     
  testl %ecx, %ecx                #  80    0xb8bb6  2      OPC=testl_r32_r32    
  jne .L_b8cd1                    #  81    0xb8bb8  6      OPC=jne_label_1      
.L_b8bbe:                         #        0xb8bbe  0      OPC=<label>          
  movq %rbx, %rdi                 #  82    0xb8bbe  3      OPC=movq_r64_r64     
  callq .readdir                  #  83    0xb8bc1  5      OPC=callq_label      
  testq %rax, %rax                #  84    0xb8bc6  3      OPC=testq_r64_r64    
  movq %rax, %r14                 #  85    0xb8bc9  3      OPC=movq_r64_r64     
  je .L_b8ecf                     #  86    0xb8bcc  6      OPC=je_label_1       
.L_b8bd2:                         #        0xb8bd2  0      OPC=<label>          
  movq (%rax), %rdx               #  87    0xb8bd2  3      OPC=movq_r64_m64     
.L_b8bd5:                         #        0xb8bd5  0      OPC=<label>          
  testq %rdx, %rdx                #  88    0xb8bd5  3      OPC=testq_r64_r64    
  je .L_b8bb0                     #  89    0xb8bd8  2      OPC=je_label         
  movl -0x3f8(%rbp), %edx         #  90    0xb8bda  6      OPC=movl_r32_m32     
  testl %edx, %edx                #  91    0xb8be0  2      OPC=testl_r32_r32    
  je .L_b8bf1                     #  92    0xb8be2  2      OPC=je_label         
  movzbl 0x12(%r14), %eax         #  93    0xb8be4  5      OPC=movzbl_r32_m8    
  testb $0xfb, %al                #  94    0xb8be9  3      OPC=testb_r8_imm8    
  je .L_b8bf1                     #  95    0xb8bec  2      OPC=je_label         
  cmpb $0xa, %al                  #  96    0xb8bee  2      OPC=cmpb_al_imm8     
  jne .L_b8bb0                    #  97    0xb8bf0  2      OPC=jne_label        
.L_b8bf1:                         #        0xb8bf2  0      OPC=<label>          
  leaq 0x13(%r14), %r12           #  98    0xb8bf2  4      OPC=leaq_r64_m16     
  movl -0x414(%rbp), %edx         #  99    0xb8bf6  6      OPC=movl_r32_m32     
  movq -0x400(%rbp), %rdi         #  100   0xb8bfc  7      OPC=movq_r64_m64     
  movq %r12, %rsi                 #  101   0xb8c03  3      OPC=movq_r64_r64     
  callq .fnmatch__GLIBC_2_2_5     #  102   0xb8c06  5      OPC=callq_label      
  testl %eax, %eax                #  103   0xb8c0b  2      OPC=testl_r32_r32    
  jne .L_b8bb0                    #  104   0xb8c0d  2      OPC=jne_label        
  movzbl 0x12(%r14), %eax         #  105   0xb8c0f  5      OPC=movzbl_r32_m8    
  cmpb $0xa, %al                  #  106   0xb8c14  2      OPC=cmpb_al_imm8     
  je .L_b8e88                     #  107   0xb8c16  6      OPC=je_label_1       
  testb %al, %al                  #  108   0xb8c1c  2      OPC=testb_r8_r8      
  je .L_b8e88                     #  109   0xb8c1e  6      OPC=je_label_1       
.L_b8c23:                         #        0xb8c24  0      OPC=<label>          
  cmpq %r13, 0x8(%r15)            #  110   0xb8c24  4      OPC=cmpq_m64_r64     
  jne .L_b8c82                    #  111   0xb8c28  2      OPC=jne_label        
  leaq (%r13,%r13,1), %r14        #  112   0xb8c2a  5      OPC=leaq_r64_m16     
  movq -0x448(%rbp), %rax         #  113   0xb8c2f  7      OPC=movq_r64_m64     
  leaq 0x10(,%r14,8), %rdx        #  114   0xb8c36  8      OPC=leaq_r64_m16     
  leaq (%rax,%rdx,1), %rdi        #  115   0xb8c3e  4      OPC=leaq_r64_m16     
  cmpq $0x1000, %rdi              #  116   0xb8c42  7      OPC=cmpq_r64_imm32   
  ja .L_b8fbf                     #  117   0xb8c49  6      OPC=ja_label_1       
.L_b8c4e:                         #        0xb8c4f  0      OPC=<label>          
  movq %rsp, %rax                 #  118   0xb8c4f  3      OPC=movq_r64_r64     
  addq $0x10, %rdx                #  119   0xb8c52  4      OPC=addq_r64_imm8    
  subq %rdx, %rsp                 #  120   0xb8c56  3      OPC=subq_r64_r64     
  leaq 0xf(%rsp), %rdx            #  121   0xb8c59  5      OPC=leaq_r64_m16     
  andq $0xf0, %rdx                #  122   0xb8c5e  4      OPC=andq_r64_imm8    
  movq %rdx, -0x408(%rbp)         #  123   0xb8c62  7      OPC=movq_m64_r64     
  subq %rsp, %rax                 #  124   0xb8c69  3      OPC=subq_r64_r64     
  addq %rax, -0x448(%rbp)         #  125   0xb8c6c  7      OPC=addq_m64_r64     
  movq %rdx, %rax                 #  126   0xb8c73  3      OPC=movq_r64_r64     
.L_b8c75:                         #        0xb8c76  0      OPC=<label>          
  movq %r15, (%rax)               #  127   0xb8c76  3      OPC=movq_m64_r64     
  movq %r14, 0x8(%rax)            #  128   0xb8c79  4      OPC=movq_m64_r64     
  movq %rax, %r15                 #  129   0xb8c7d  3      OPC=movq_r64_r64     
  xorl %r13d, %r13d               #  130   0xb8c80  3      OPC=xorl_r32_r32     
.L_b8c82:                         #        0xb8c83  0      OPC=<label>          
  movq %r12, %rdi                 #  131   0xb8c83  3      OPC=movq_r64_r64     
  callq .strlen                   #  132   0xb8c86  5      OPC=callq_label      
  leaq 0x1(%rax), %rdi            #  133   0xb8c8b  4      OPC=leaq_r64_m16     
  movq %rax, %r14                 #  134   0xb8c8f  3      OPC=movq_r64_r64     
  callq .memalign_plt             #  135   0xb8c92  5      OPC=callq_label      
  testq %rax, %rax                #  136   0xb8c97  3      OPC=testq_r64_r64    
  movq %rax, 0x10(%r15,%r13,8)    #  137   0xb8c9a  5      OPC=movq_m64_r64     
  je .L_b8feb                     #  138   0xb8c9f  6      OPC=je_label_1       
  movq %r14, %rdx                 #  139   0xb8ca5  3      OPC=movq_r64_r64     
  movq %r12, %rsi                 #  140   0xb8ca8  3      OPC=movq_r64_r64     
  movq %rax, %rdi                 #  141   0xb8cab  3      OPC=movq_r64_r64     
  callq .__GI_memcpy              #  142   0xb8cae  5      OPC=callq_label      
  movl -0x3f4(%rbp), %ecx         #  143   0xb8cb3  6      OPC=movl_r32_m32     
  addq $0x1, %r13                 #  144   0xb8cb9  4      OPC=addq_r64_imm8    
  addq $0x1, -0x420(%rbp)         #  145   0xb8cbd  8      OPC=addq_m64_imm8    
  movb $0x0, (%rax,%r14,1)        #  146   0xb8cc5  5      OPC=movb_m8_imm8     
  testl %ecx, %ecx                #  147   0xb8cca  2      OPC=testl_r32_r32    
  je .L_b8bbe                     #  148   0xb8ccc  6      OPC=je_label_1       
.L_b8cd1:                         #        0xb8cd2  0      OPC=<label>          
  movq -0x410(%rbp), %rax         #  149   0xb8cd2  7      OPC=movq_r64_m64     
  movq %rbx, %rdi                 #  150   0xb8cd9  3      OPC=movq_r64_r64     
  callq 0x28(%rax)                #  151   0xb8cdc  3      OPC=callq_m64        
  testq %rax, %rax                #  152   0xb8cdf  3      OPC=testq_r64_r64    
  movq %rax, %r12                 #  153   0xb8ce2  3      OPC=movq_r64_r64     
  je .L_b8ecf                     #  154   0xb8ce5  6      OPC=je_label_1       
  leaq 0x13(%rax), %r14           #  155   0xb8ceb  4      OPC=leaq_r64_m16     
  movq %r14, %rdi                 #  156   0xb8cef  3      OPC=movq_r64_r64     
  callq .strlen                   #  157   0xb8cf2  5      OPC=callq_label      
  movq -0x458(%rbp), %rdi         #  158   0xb8cf7  7      OPC=movq_r64_m64     
  leaq 0x1(%rax), %rdx            #  159   0xb8cfe  4      OPC=leaq_r64_m16     
  movq %r14, %rsi                 #  160   0xb8d02  3      OPC=movq_r64_r64     
  callq .__GI_memcpy              #  161   0xb8d05  5      OPC=callq_label      
  movq (%r12), %rdx               #  162   0xb8d0a  4      OPC=movq_r64_m64     
  movq -0x450(%rbp), %r14         #  163   0xb8d0e  7      OPC=movq_r64_m64     
  movq %rdx, -0x360(%rbp)         #  164   0xb8d15  7      OPC=movq_m64_r64     
  movzbl 0x12(%r12), %eax         #  165   0xb8d1c  6      OPC=movzbl_r32_m8    
  movb %al, -0x34e(%rbp)          #  166   0xb8d22  6      OPC=movb_m8_r8       
  jmpq .L_b8bd5                   #  167   0xb8d28  5      OPC=jmpq_label_1     
.L_b8d2c:                         #        0xb8d2d  0      OPC=<label>          
  testl $0x810, %r12d             #  168   0xb8d2d  7      OPC=testl_r32_imm32  
  jne .L_b8e78                    #  169   0xb8d34  6      OPC=jne_label_1      
  movq -0x400(%rbp), %rdi         #  170   0xb8d3a  7      OPC=movq_r64_m64     
  callq .strlen                   #  171   0xb8d41  5      OPC=callq_label      
  movq %rax, %r13                 #  172   0xb8d46  3      OPC=movq_r64_r64     
  movq -0x430(%rbp), %rax         #  173   0xb8d49  7      OPC=movq_r64_m64     
  leaq 0x212(%r14,%rax,1), %rdi   #  174   0xb8d50  8      OPC=leaq_r64_m16     
  addq %r13, %rdi                 #  175   0xb8d58  3      OPC=addq_r64_r64     
  cmpq $0x1000, %rdi              #  176   0xb8d5b  7      OPC=cmpq_r64_imm32   
  ja .L_b91c3                     #  177   0xb8d62  6      OPC=ja_label_1       
.L_b8d67:                         #        0xb8d68  0      OPC=<label>          
  movq %rsp, %rax                 #  178   0xb8d68  3      OPC=movq_r64_r64     
  movq -0x430(%rbp), %rsi         #  179   0xb8d6b  7      OPC=movq_r64_m64     
  leaq 0x20(%rsi,%r13,1), %rdx    #  180   0xb8d72  5      OPC=leaq_r64_m16     
  andq $0xf0, %rdx                #  181   0xb8d77  4      OPC=andq_r64_imm8    
  subq %rdx, %rsp                 #  182   0xb8d7b  3      OPC=subq_r64_r64     
  leaq 0xf(%rsp), %rbx            #  183   0xb8d7e  5      OPC=leaq_r64_m16     
  andq $0xf0, %rbx                #  184   0xb8d83  4      OPC=andq_r64_imm8    
  subq %rsp, %rax                 #  185   0xb8d87  3      OPC=subq_r64_r64     
  movl $0x1, %r14d                #  186   0xb8d8a  6      OPC=movl_r32_imm32   
.L_b8d8f:                         #        0xb8d90  0      OPC=<label>          
  movq -0x430(%rbp), %r15         #  187   0xb8d90  7      OPC=movq_r64_m64     
  movq -0x428(%rbp), %rsi         #  188   0xb8d97  7      OPC=movq_r64_m64     
  movq %rbx, %rdi                 #  189   0xb8d9e  3      OPC=movq_r64_r64     
  movq %r15, %rdx                 #  190   0xb8da1  3      OPC=movq_r64_r64     
  callq .__GI_memcpy              #  191   0xb8da4  5      OPC=callq_label      
  movq -0x400(%rbp), %rsi         #  192   0xb8da9  7      OPC=movq_r64_m64     
  addq %r15, %rax                 #  193   0xb8db0  3      OPC=addq_r64_r64     
  leaq 0x1(%r13), %rdx            #  194   0xb8db3  4      OPC=leaq_r64_m16     
  leaq 0x1(%rax), %rdi            #  195   0xb8db7  4      OPC=leaq_r64_m16     
  movb $0x2f, (%rax)              #  196   0xb8dbb  3      OPC=movb_m8_imm8     
  callq .__GI_memcpy              #  197   0xb8dbe  5      OPC=callq_label      
  testl $0x200, %r12d             #  198   0xb8dc3  7      OPC=testl_r32_imm32  
  jne .L_b91a5                    #  199   0xb8dca  6      OPC=jne_label_1      
  leaq -0x360(%rbp), %rdx         #  200   0xb8dd0  7      OPC=leaq_r64_m16     
  movq %rbx, %rsi                 #  201   0xb8dd7  3      OPC=movq_r64_r64     
  movl $0x1, %edi                 #  202   0xb8dda  5      OPC=movl_r32_imm32   
  callq .__xstat                  #  203   0xb8ddf  5      OPC=callq_label      
  testl %eax, %eax                #  204   0xb8de4  2      OPC=testl_r32_r32    
  sete %al                        #  205   0xb8de6  3      OPC=sete_r8          
.L_b8de8:                         #        0xb8de9  0      OPC=<label>          
  movl %r12d, %edx                #  206   0xb8de9  3      OPC=movl_r32_r32     
  orl $0x10, %edx                 #  207   0xb8dec  3      OPC=orl_r32_imm8     
  testb %al, %al                  #  208   0xb8def  2      OPC=testb_r8_r8      
  cmovnel %edx, %r12d             #  209   0xb8df1  4      OPC=cmovnel_r32_r32  
  testl %r14d, %r14d              #  210   0xb8df5  3      OPC=testl_r32_r32    
  je .L_b915a                     #  211   0xb8df8  6      OPC=je_label_1       
.L_b8dfd:                         #        0xb8dfe  0      OPC=<label>          
  movl %r12d, -0x418(%rbp)        #  212   0xb8dfe  7      OPC=movl_m32_r32     
.L_b8e04:                         #        0xb8e05  0      OPC=<label>          
  leaq -0x240(%rbp), %rax         #  213   0xb8e05  7      OPC=leaq_r64_m16     
  xorl %r13d, %r13d               #  214   0xb8e0c  3      OPC=xorl_r32_r32     
  xorl %ebx, %ebx                 #  215   0xb8e0f  2      OPC=xorl_r32_r32     
  movq %rax, -0x440(%rbp)         #  216   0xb8e11  7      OPC=movq_m64_r64     
  movq %rax, -0x408(%rbp)         #  217   0xb8e18  7      OPC=movq_m64_r64     
  movq %rax, %r15                 #  218   0xb8e1f  3      OPC=movq_r64_r64     
.L_b8e21:                         #        0xb8e22  0      OPC=<label>          
  testb $0x10, -0x418(%rbp)       #  219   0xb8e22  7      OPC=testb_m8_imm8    
  movl $0x3, %r12d                #  220   0xb8e29  6      OPC=movl_r32_imm32   
  jne .L_b90c7                    #  221   0xb8e2f  6      OPC=jne_label_1      
.L_b8e34:                         #        0xb8e35  0      OPC=<label>          
  testq %rbx, %rbx                #  222   0xb8e35  3      OPC=testq_r64_r64    
  je .L_b9053                     #  223   0xb8e38  6      OPC=je_label_1       
.L_b8e3d:                         #        0xb8e3e  0      OPC=<label>          
  testl $0x200, -0x418(%rbp)      #  224   0xb8e3e  10     OPC=testl_m32_imm32  
  movq 0x2e2032(%rip), %r13       #  225   0xb8e48  7      OPC=movq_r64_m64     
  movq %rbx, %rdi                 #  226   0xb8e4f  3      OPC=movq_r64_r64     
  movl (%r13), %r14d              #  227   0xb8e52  4      OPC=movl_r32_m32     
  nop                             #  228   0xb8e56  1      OPC=nop              
  jne .L_b9111                    #  229   0xb8e57  6      OPC=jne_label_1      
  callq .closedir                 #  230   0xb8e5d  5      OPC=callq_label      
.L_b8e61:                         #        0xb8e62  0      OPC=<label>          
  movl %r14d, (%r13)              #  231   0xb8e62  4      OPC=movl_m32_r32     
  nop                             #  232   0xb8e66  1      OPC=nop              
  movl %r12d, %eax                #  233   0xb8e67  3      OPC=movl_r32_r32     
.L_b8e69:                         #        0xb8e6a  0      OPC=<label>          
  leaq -0x28(%rbp), %rsp          #  234   0xb8e6a  4      OPC=leaq_r64_m16     
  popq %rbx                       #  235   0xb8e6e  1      OPC=popq_r64_1       
  popq %r12                       #  236   0xb8e6f  2      OPC=popq_r64_1       
  popq %r13                       #  237   0xb8e71  2      OPC=popq_r64_1       
  popq %r14                       #  238   0xb8e73  2      OPC=popq_r64_1       
  popq %r15                       #  239   0xb8e75  2      OPC=popq_r64_1       
  popq %rbp                       #  240   0xb8e77  1      OPC=popq_r64_1       
  retq                            #  241   0xb8e78  1      OPC=retq             
.L_b8e78:                         #        0xb8e79  0      OPC=<label>          
  orl $0x10, %r12d                #  242   0xb8e79  4      OPC=orl_r32_imm8     
  movl %r12d, -0x418(%rbp)        #  243   0xb8e7d  7      OPC=movl_m32_r32     
  jmpq .L_b8e04                   #  244   0xb8e84  5      OPC=jmpq_label_1     
.L_b8e88:                         #        0xb8e89  0      OPC=<label>          
  movl -0x3f4(%rbp), %eax         #  245   0xb8e89  6      OPC=movl_r32_m32     
  testl %eax, %eax                #  246   0xb8e8f  2      OPC=testl_r32_r32    
  jne .L_b9120                    #  247   0xb8e91  6      OPC=jne_label_1      
  movq -0x460(%rbp), %rcx         #  248   0xb8e97  7      OPC=movq_r64_m64     
  movl -0x434(%rbp), %esi         #  249   0xb8e9e  6      OPC=movl_r32_m32     
  xorl %r8d, %r8d                 #  250   0xb8ea4  3      OPC=xorl_r32_r32     
  movq %r12, %rdx                 #  251   0xb8ea7  3      OPC=movq_r64_r64     
  movl $0x1, %edi                 #  252   0xb8eaa  5      OPC=movl_r32_imm32   
  callq .__fxstatat               #  253   0xb8eaf  5      OPC=callq_label      
  testl %eax, %eax                #  254   0xb8eb4  2      OPC=testl_r32_r32    
  je .L_b8c23                     #  255   0xb8eb6  6      OPC=je_label_1       
  movq %rbx, %rdi                 #  256   0xb8ebc  3      OPC=movq_r64_r64     
  callq .readdir                  #  257   0xb8ebf  5      OPC=callq_label      
  testq %rax, %rax                #  258   0xb8ec4  3      OPC=testq_r64_r64    
  movq %rax, %r14                 #  259   0xb8ec7  3      OPC=movq_r64_r64     
  jne .L_b8bd2                    #  260   0xb8eca  6      OPC=jne_label_1      
.L_b8ecf:                         #        0xb8ed0  0      OPC=<label>          
  cmpq $0x0, -0x420(%rbp)         #  261   0xb8ed0  8      OPC=cmpq_m64_imm8    
  movq -0x420(%rbp), %rdx         #  262   0xb8ed8  7      OPC=movq_r64_m64     
  je .L_b8e21                     #  263   0xb8edf  6      OPC=je_label_1       
.L_b8ee4:                         #        0xb8ee5  0      OPC=<label>          
  movq -0x410(%rbp), %rsi         #  264   0xb8ee5  7      OPC=movq_r64_m64     
  movq 0x10(%rsi), %rcx           #  265   0xb8eec  4      OPC=movq_r64_m64     
  movq (%rsi), %rax               #  266   0xb8ef0  3      OPC=movq_r64_m64     
  movq %rcx, %rsi                 #  267   0xb8ef3  3      OPC=movq_r64_r64     
  notq %rsi                       #  268   0xb8ef6  3      OPC=notq_r64         
  cmpq %rsi, %rax                 #  269   0xb8ef9  3      OPC=cmpq_r64_r64     
  ja .L_b8feb                     #  270   0xb8efc  6      OPC=ja_label_1       
  addq %rcx, %rax                 #  271   0xb8f02  3      OPC=addq_r64_r64     
  movq %rdx, %rcx                 #  272   0xb8f05  3      OPC=movq_r64_r64     
  notq %rcx                       #  273   0xb8f08  3      OPC=notq_r64         
  cmpq %rcx, %rax                 #  274   0xb8f0b  3      OPC=cmpq_r64_r64     
  ja .L_b8feb                     #  275   0xb8f0e  6      OPC=ja_label_1       
  addq %rdx, %rax                 #  276   0xb8f14  3      OPC=addq_r64_r64     
  cmpq $0xff, %rax                #  277   0xb8f17  4      OPC=cmpq_r64_imm8    
  je .L_b8feb                     #  278   0xb8f1b  6      OPC=je_label_1       
  addq $0x1, %rax                 #  279   0xb8f21  4      OPC=addq_r64_imm8    
  movq $0x1fffffffffffffff, %rdx  #  280   0xb8f25  10     OPC=movq_r64_imm64   
  cmpq %rdx, %rax                 #  281   0xb8f2f  3      OPC=cmpq_r64_r64     
  ja .L_b8feb                     #  282   0xb8f32  6      OPC=ja_label_1       
  leaq (,%rax,8), %rsi            #  283   0xb8f38  8      OPC=leaq_r64_m16     
  movq -0x410(%rbp), %rax         #  284   0xb8f40  7      OPC=movq_r64_m64     
  movq 0x8(%rax), %rdi            #  285   0xb8f47  4      OPC=movq_r64_m64     
  callq .__tls_get_addr_plt       #  286   0xb8f4b  5      OPC=callq_label      
  testq %rax, %rax                #  287   0xb8f50  3      OPC=testq_r64_r64    
  movq %rax, %r12                 #  288   0xb8f53  3      OPC=movq_r64_r64     
  je .L_b8feb                     #  289   0xb8f56  6      OPC=je_label_1       
  movq %r15, %rdi                 #  290   0xb8f5c  3      OPC=movq_r64_r64     
  movq -0x410(%rbp), %r15         #  291   0xb8f5f  7      OPC=movq_r64_m64     
  movq %rbx, %r14                 #  292   0xb8f66  3      OPC=movq_r64_r64     
.L_b8f68:                         #        0xb8f69  0      OPC=<label>          
  testq %r13, %r13                #  293   0xb8f69  3      OPC=testq_r64_r64    
  je .L_b8f98                     #  294   0xb8f6c  2      OPC=je_label         
  movq (%r15), %rsi               #  295   0xb8f6e  3      OPC=movq_r64_m64     
  movq %rsi, %rax                 #  296   0xb8f71  3      OPC=movq_r64_r64     
  addq 0x10(%r15), %rax           #  297   0xb8f74  4      OPC=addq_r64_m64     
  leaq (%r12,%rax,8), %rcx        #  298   0xb8f78  4      OPC=leaq_r64_m16     
  xorl %eax, %eax                 #  299   0xb8f7c  2      OPC=xorl_r32_r32     
  nop                             #  300   0xb8f7e  1      OPC=nop              
  nop                             #  301   0xb8f7f  1      OPC=nop              
  nop                             #  302   0xb8f80  1      OPC=nop              
.L_b8f80:                         #        0xb8f81  0      OPC=<label>          
  movq 0x10(%rdi,%rax,8), %rdx    #  303   0xb8f81  5      OPC=movq_r64_m64     
  movq %rdx, (%rcx,%rax,8)        #  304   0xb8f86  4      OPC=movq_m64_r64     
  addq $0x1, %rax                 #  305   0xb8f8a  4      OPC=addq_r64_imm8    
  cmpq %r13, %rax                 #  306   0xb8f8e  3      OPC=cmpq_r64_r64     
  jne .L_b8f80                    #  307   0xb8f91  2      OPC=jne_label        
  addq %rsi, %rax                 #  308   0xb8f93  3      OPC=addq_r64_r64     
  movq %rax, (%r15)               #  309   0xb8f96  3      OPC=movq_m64_r64     
.L_b8f98:                         #        0xb8f99  0      OPC=<label>          
  movq (%rdi), %rbx               #  310   0xb8f99  3      OPC=movq_r64_m64     
  testq %rbx, %rbx                #  311   0xb8f9c  3      OPC=testq_r64_r64    
  je .L_b9167                     #  312   0xb8f9f  6      OPC=je_label_1       
  cmpq -0x408(%rbp), %rdi         #  313   0xb8fa5  7      OPC=cmpq_r64_m64     
  movq 0x8(%rbx), %r13            #  314   0xb8fac  4      OPC=movq_r64_m64     
  je .L_b914e                     #  315   0xb8fb0  6      OPC=je_label_1       
  callq .L_1f8c0                  #  316   0xb8fb6  5      OPC=callq_label      
.L_b8fba:                         #        0xb8fbb  0      OPC=<label>          
  movq %rbx, %rdi                 #  317   0xb8fbb  3      OPC=movq_r64_r64     
  jmpq .L_b8f68                   #  318   0xb8fbe  2      OPC=jmpq_label       
.L_b8fbf:                         #        0xb8fc0  0      OPC=<label>          
  movq %rdx, -0x468(%rbp)         #  319   0xb8fc0  7      OPC=movq_m64_r64     
  callq .__libc_alloca_cutoff     #  320   0xb8fc7  5      OPC=callq_label      
  testl %eax, %eax                #  321   0xb8fcc  2      OPC=testl_r32_r32    
  movq -0x468(%rbp), %rdx         #  322   0xb8fce  7      OPC=movq_r64_m64     
  jne .L_b8c4e                    #  323   0xb8fd5  6      OPC=jne_label_1      
  movq %rdx, %rdi                 #  324   0xb8fdb  3      OPC=movq_r64_r64     
  callq .memalign_plt             #  325   0xb8fde  5      OPC=callq_label      
  testq %rax, %rax                #  326   0xb8fe3  3      OPC=testq_r64_r64    
  jne .L_b8c75                    #  327   0xb8fe6  6      OPC=jne_label_1      
.L_b8feb:                         #        0xb8fec  0      OPC=<label>          
  movq -0x408(%rbp), %r14         #  328   0xb8fec  7      OPC=movq_r64_m64     
  nop                             #  329   0xb8ff3  1      OPC=nop              
  nop                             #  330   0xb8ff4  1      OPC=nop              
  nop                             #  331   0xb8ff5  1      OPC=nop              
  nop                             #  332   0xb8ff6  1      OPC=nop              
  nop                             #  333   0xb8ff7  1      OPC=nop              
  nop                             #  334   0xb8ff8  1      OPC=nop              
.L_b8ff8:                         #        0xb8ff9  0      OPC=<label>          
  testq %r13, %r13                #  335   0xb8ff9  3      OPC=testq_r64_r64    
  je .L_b9013                     #  336   0xb8ffc  2      OPC=je_label         
  xorl %r12d, %r12d               #  337   0xb8ffe  3      OPC=xorl_r32_r32     
.L_b9000:                         #        0xb9001  0      OPC=<label>          
  movq 0x10(%r15,%r12,8), %rdi    #  338   0xb9001  5      OPC=movq_r64_m64     
  addq $0x1, %r12                 #  339   0xb9006  4      OPC=addq_r64_imm8    
  callq .L_1f8c0                  #  340   0xb900a  5      OPC=callq_label      
  cmpq %r13, %r12                 #  341   0xb900f  3      OPC=cmpq_r64_r64     
  jne .L_b9000                    #  342   0xb9012  2      OPC=jne_label        
.L_b9013:                         #        0xb9014  0      OPC=<label>          
  movq (%r15), %r12               #  343   0xb9014  3      OPC=movq_r64_m64     
  testq %r12, %r12                #  344   0xb9017  3      OPC=testq_r64_r64    
  je .L_b9037                     #  345   0xb901a  2      OPC=je_label         
  cmpq %r14, %r15                 #  346   0xb901c  3      OPC=cmpq_r64_r64     
  movq 0x8(%r12), %r13            #  347   0xb901f  5      OPC=movq_r64_m64     
  je .L_b9032                     #  348   0xb9024  2      OPC=je_label         
  movq %r15, %rdi                 #  349   0xb9026  3      OPC=movq_r64_r64     
  callq .L_1f8c0                  #  350   0xb9029  5      OPC=callq_label      
.L_b902d:                         #        0xb902e  0      OPC=<label>          
  movq %r12, %r15                 #  351   0xb902e  3      OPC=movq_r64_r64     
  jmpq .L_b8ff8                   #  352   0xb9031  2      OPC=jmpq_label       
.L_b9032:                         #        0xb9033  0      OPC=<label>          
  movq %r12, %r14                 #  353   0xb9033  3      OPC=movq_r64_r64     
  jmpq .L_b902d                   #  354   0xb9036  2      OPC=jmpq_label       
.L_b9037:                         #        0xb9038  0      OPC=<label>          
  cmpq -0x440(%rbp), %r15         #  355   0xb9038  7      OPC=cmpq_r64_m64     
  jne .L_b91fa                    #  356   0xb903f  6      OPC=jne_label_1      
  testq %rbx, %rbx                #  357   0xb9045  3      OPC=testq_r64_r64    
  movl $0x1, %r12d                #  358   0xb9048  6      OPC=movl_r32_imm32   
  jne .L_b8e3d                    #  359   0xb904e  6      OPC=jne_label_1      
.L_b9053:                         #        0xb9054  0      OPC=<label>          
  leaq -0x28(%rbp), %rsp          #  360   0xb9054  4      OPC=leaq_r64_m16     
  movl %r12d, %eax                #  361   0xb9058  3      OPC=movl_r32_r32     
  popq %rbx                       #  362   0xb905b  1      OPC=popq_r64_1       
  popq %r12                       #  363   0xb905c  2      OPC=popq_r64_1       
  popq %r13                       #  364   0xb905e  2      OPC=popq_r64_1       
  popq %r14                       #  365   0xb9060  2      OPC=popq_r64_1       
  popq %r15                       #  366   0xb9062  2      OPC=popq_r64_1       
  popq %rbp                       #  367   0xb9064  1      OPC=popq_r64_1       
  retq                            #  368   0xb9065  1      OPC=retq             
.L_b9065:                         #        0xb9066  0      OPC=<label>          
  movq -0x410(%rbp), %rax         #  369   0xb9066  7      OPC=movq_r64_m64     
  callq 0x30(%rax)                #  370   0xb906d  3      OPC=callq_m64        
  testq %rax, %rax                #  371   0xb9070  3      OPC=testq_r64_r64    
  movq %rax, %rbx                 #  372   0xb9073  3      OPC=movq_r64_r64     
  movl $0xffffffff, -0x434(%rbp)  #  373   0xb9076  10     OPC=movl_m32_imm32   
  jne .L_b8b0b                    #  374   0xb9080  6      OPC=jne_label_1      
.L_b9085:                         #        0xb9086  0      OPC=<label>          
  movq 0x2e1df4(%rip), %rax       #  375   0xb9086  7      OPC=movq_r64_m64     
  movl (%rax), %esi               #  376   0xb908d  2      OPC=movl_r32_m32     
  nop                             #  377   0xb908f  1      OPC=nop              
  cmpl $0x14, %esi                #  378   0xb9090  3      OPC=cmpl_r32_imm8    
  je .L_b8dfd                     #  379   0xb9093  6      OPC=je_label_1       
  testq %r15, %r15                #  380   0xb9099  3      OPC=testq_r64_r64    
  je .L_b9219                     #  381   0xb909c  6      OPC=je_label_1       
  movq -0x428(%rbp), %rdi         #  382   0xb90a2  7      OPC=movq_r64_m64     
  callq %r15                      #  383   0xb90a9  3      OPC=callq_r64        
  testl %eax, %eax                #  384   0xb90ac  2      OPC=testl_r32_r32    
  je .L_b9219                     #  385   0xb90ae  6      OPC=je_label_1       
.L_b90b3:                         #        0xb90b4  0      OPC=<label>          
  leaq -0x28(%rbp), %rsp          #  386   0xb90b4  4      OPC=leaq_r64_m16     
  movl $0x2, %eax                 #  387   0xb90b8  5      OPC=movl_r32_imm32   
  popq %rbx                       #  388   0xb90bd  1      OPC=popq_r64_1       
  popq %r12                       #  389   0xb90be  2      OPC=popq_r64_1       
  popq %r13                       #  390   0xb90c0  2      OPC=popq_r64_1       
  popq %r14                       #  391   0xb90c2  2      OPC=popq_r64_1       
  popq %r15                       #  392   0xb90c4  2      OPC=popq_r64_1       
  popq %rbp                       #  393   0xb90c6  1      OPC=popq_r64_1       
  retq                            #  394   0xb90c7  1      OPC=retq             
.L_b90c7:                         #        0xb90c8  0      OPC=<label>          
  movq -0x400(%rbp), %r14         #  395   0xb90c8  7      OPC=movq_r64_m64     
  movq %r14, %rdi                 #  396   0xb90cf  3      OPC=movq_r64_r64     
  callq .strlen                   #  397   0xb90d2  5      OPC=callq_label      
  leaq 0x1(%rax), %rdi            #  398   0xb90d7  4      OPC=leaq_r64_m16     
  movq %rax, %r12                 #  399   0xb90db  3      OPC=movq_r64_r64     
  callq .memalign_plt             #  400   0xb90de  5      OPC=callq_label      
  testq %rax, %rax                #  401   0xb90e3  3      OPC=testq_r64_r64    
  movq %rax, 0x10(%r15,%r13,8)    #  402   0xb90e6  5      OPC=movq_m64_r64     
  je .L_b8feb                     #  403   0xb90eb  6      OPC=je_label_1       
  movq %r12, %rdx                 #  404   0xb90f1  3      OPC=movq_r64_r64     
  movq %r14, %rsi                 #  405   0xb90f4  3      OPC=movq_r64_r64     
  movq %rax, %rdi                 #  406   0xb90f7  3      OPC=movq_r64_r64     
  callq .__GI_memcpy              #  407   0xb90fa  5      OPC=callq_label      
  addq $0x1, %r13                 #  408   0xb90ff  4      OPC=addq_r64_imm8    
  movb $0x0, (%rax,%r12,1)        #  409   0xb9103  5      OPC=movb_m8_imm8     
  movl $0x1, %edx                 #  410   0xb9108  5      OPC=movl_r32_imm32   
  jmpq .L_b8ee4                   #  411   0xb910d  5      OPC=jmpq_label_1     
.L_b9111:                         #        0xb9112  0      OPC=<label>          
  movq -0x410(%rbp), %rax         #  412   0xb9112  7      OPC=movq_r64_m64     
  callq 0x20(%rax)                #  413   0xb9119  3      OPC=callq_m64        
  jmpq .L_b8e61                   #  414   0xb911c  5      OPC=jmpq_label_1     
.L_b9120:                         #        0xb9121  0      OPC=<label>          
  movq -0x410(%rbp), %rax         #  415   0xb9121  7      OPC=movq_r64_m64     
  movq -0x430(%rbp), %rsi         #  416   0xb9128  7      OPC=movq_r64_m64     
  movq %r12, %rdx                 #  417   0xb912f  3      OPC=movq_r64_r64     
  movq -0x428(%rbp), %rdi         #  418   0xb9132  7      OPC=movq_r64_m64     
  leaq 0x40(%rax), %rcx           #  419   0xb9139  4      OPC=leaq_r64_m16     
  callq .link_exists2_p_isra_0    #  420   0xb913d  5      OPC=callq_label      
  testl %eax, %eax                #  421   0xb9142  2      OPC=testl_r32_r32    
  jne .L_b8c23                    #  422   0xb9144  6      OPC=jne_label_1      
  jmpq .L_b8bb0                   #  423   0xb914a  5      OPC=jmpq_label_1     
.L_b914e:                         #        0xb914f  0      OPC=<label>          
  movq %rbx, -0x408(%rbp)         #  424   0xb914f  7      OPC=movq_m64_r64     
  jmpq .L_b8fba                   #  425   0xb9156  5      OPC=jmpq_label_1     
.L_b915a:                         #        0xb915b  0      OPC=<label>          
  movq %rbx, %rdi                 #  426   0xb915b  3      OPC=movq_r64_r64     
  callq .L_1f8c0                  #  427   0xb915e  5      OPC=callq_label      
  jmpq .L_b8dfd                   #  428   0xb9163  5      OPC=jmpq_label_1     
.L_b9167:                         #        0xb9168  0      OPC=<label>          
  cmpq -0x440(%rbp), %rdi         #  429   0xb9168  7      OPC=cmpq_r64_m64     
  movq %r14, %rbx                 #  430   0xb916f  3      OPC=movq_r64_r64     
  jne .L_b9228                    #  431   0xb9172  6      OPC=jne_label_1      
  movq -0x410(%rbp), %rcx         #  432   0xb9178  7      OPC=movq_r64_m64     
  movq 0x10(%rcx), %rax           #  433   0xb917f  4      OPC=movq_r64_m64     
  addq (%rcx), %rax               #  434   0xb9183  3      OPC=addq_r64_m64     
  movq %r12, 0x8(%rcx)            #  435   0xb9186  4      OPC=movq_m64_r64     
  movq $0x0, (%r12,%rax,8)        #  436   0xb918a  8      OPC=movq_m64_imm32   
  movq %rcx, %rax                 #  437   0xb9192  3      OPC=movq_r64_r64     
  movl -0x418(%rbp), %ecx         #  438   0xb9195  6      OPC=movl_r32_m32     
  xorl %r12d, %r12d               #  439   0xb919b  3      OPC=xorl_r32_r32     
  movl %ecx, 0x18(%rax)           #  440   0xb919e  3      OPC=movl_m32_r32     
  jmpq .L_b8e34                   #  441   0xb91a1  5      OPC=jmpq_label_1     
.L_b91a5:                         #        0xb91a6  0      OPC=<label>          
  movq -0x410(%rbp), %rax         #  442   0xb91a6  7      OPC=movq_r64_m64     
  leaq -0x360(%rbp), %rsi         #  443   0xb91ad  7      OPC=leaq_r64_m16     
  movq %rbx, %rdi                 #  444   0xb91b4  3      OPC=movq_r64_r64     
  callq 0x40(%rax)                #  445   0xb91b7  3      OPC=callq_m64        
  testl %eax, %eax                #  446   0xb91ba  2      OPC=testl_r32_r32    
  sete %al                        #  447   0xb91bc  3      OPC=sete_r8          
  jmpq .L_b8de8                   #  448   0xb91bf  5      OPC=jmpq_label_1     
.L_b91c3:                         #        0xb91c4  0      OPC=<label>          
  callq .__libc_alloca_cutoff     #  449   0xb91c4  5      OPC=callq_label      
  testl %eax, %eax                #  450   0xb91c9  2      OPC=testl_r32_r32    
  movl %eax, %r14d                #  451   0xb91cb  3      OPC=movl_r32_r32     
  jne .L_b8d67                    #  452   0xb91ce  6      OPC=jne_label_1      
  movq -0x430(%rbp), %rax         #  453   0xb91d4  7      OPC=movq_r64_m64     
  leaq 0x2(%rax,%r13,1), %rdi     #  454   0xb91db  5      OPC=leaq_r64_m16     
  callq .memalign_plt             #  455   0xb91e0  5      OPC=callq_label      
  testq %rax, %rax                #  456   0xb91e5  3      OPC=testq_r64_r64    
  movq %rax, %rbx                 #  457   0xb91e8  3      OPC=movq_r64_r64     
  jne .L_b8d8f                    #  458   0xb91eb  6      OPC=jne_label_1      
  movl $0x1, %eax                 #  459   0xb91f1  5      OPC=movl_r32_imm32   
  jmpq .L_b8e69                   #  460   0xb91f6  5      OPC=jmpq_label_1     
.L_b91fa:                         #        0xb91fb  0      OPC=<label>          
  leaq 0xabf47(%rip), %rcx        #  461   0xb91fb  7      OPC=leaq_r64_m16     
  leaq 0xabf09(%rip), %rsi        #  462   0xb9202  7      OPC=leaq_r64_m16     
  leaq 0xabf12(%rip), %rdi        #  463   0xb9209  7      OPC=leaq_r64_m16     
  movl $0x690, %edx               #  464   0xb9210  5      OPC=movl_r32_imm32   
  callq .__assert_fail            #  465   0xb9215  5      OPC=callq_label      
.L_b9219:                         #        0xb921a  0      OPC=<label>          
  testb $0x1, %r12b               #  466   0xb921a  4      OPC=testb_r8_imm8    
  jne .L_b90b3                    #  467   0xb921e  6      OPC=jne_label_1      
  jmpq .L_b8dfd                   #  468   0xb9224  5      OPC=jmpq_label_1     
.L_b9228:                         #        0xb9229  0      OPC=<label>          
  leaq 0xabf19(%rip), %rcx        #  469   0xb9229  7      OPC=leaq_r64_m16     
  leaq 0xabedb(%rip), %rsi        #  470   0xb9230  7      OPC=leaq_r64_m16     
  leaq 0xabee4(%rip), %rdi        #  471   0xb9237  7      OPC=leaq_r64_m16     
  movl $0x6aa, %edx               #  472   0xb923e  5      OPC=movl_r32_imm32   
  callq .__assert_fail            #  473   0xb9243  5      OPC=callq_label      
  nop                             #  474   0xb9248  1      OPC=nop              
  nop                             #  475   0xb9249  1      OPC=nop              
  nop                             #  476   0xb924a  1      OPC=nop              
  nop                             #  477   0xb924b  1      OPC=nop              
  nop                             #  478   0xb924c  1      OPC=nop              
  nop                             #  479   0xb924d  1      OPC=nop              
  nop                             #  480   0xb924e  1      OPC=nop              
  nop                             #  481   0xb924f  1      OPC=nop              
  nop                             #  482   0xb9250  1      OPC=nop              
                                                                                
.size glob_in_dir, .-glob_in_dir

