  .text
  .globl fgetgrent
  .type fgetgrent, @function

#! file-offset 0xb2c10
#! rip-offset  0xb2c10
#! capacity    480 bytes

# Text                               #  Line  RIP      Bytes  Opcode                
.fgetgrent:                          #        0xb2c10  0      OPC=<label>           
  pushq %r15                         #  1     0xb2c10  2      OPC=pushq_r64_1       
  pushq %r14                         #  2     0xb2c12  2      OPC=pushq_r64_1       
  pushq %r13                         #  3     0xb2c14  2      OPC=pushq_r64_1       
  pushq %r12                         #  4     0xb2c16  2      OPC=pushq_r64_1       
  pushq %rbp                         #  5     0xb2c18  1      OPC=pushq_r64_1       
  pushq %rbx                         #  6     0xb2c19  1      OPC=pushq_r64_1       
  movq %rdi, %rbx                    #  7     0xb2c1a  3      OPC=movq_r64_r64      
  subq $0x38, %rsp                   #  8     0xb2c1d  4      OPC=subq_r64_imm8     
  leaq 0x20(%rsp), %rbp              #  9     0xb2c21  5      OPC=leaq_r64_m16      
  movq %rbp, %rsi                    #  10    0xb2c26  3      OPC=movq_r64_r64      
  callq ._IO_fgetpos64__GLIBC_2_2_5  #  11    0xb2c29  5      OPC=callq_label       
  testl %eax, %eax                   #  12    0xb2c2e  2      OPC=testl_r32_r32     
  jne .L_b2db2                       #  13    0xb2c30  6      OPC=jne_label_1       
  movl $0x1, %esi                    #  14    0xb2c36  5      OPC=movl_r32_imm32    
  cmpl $0x0, 0x2edfbe(%rip)          #  15    0xb2c3b  7      OPC=cmpl_m32_imm8     
  je .L_b2c50                        #  16    0xb2c42  2      OPC=je_label          
  lock                               #  17    0xb2c44  1      OPC=lock              
  cmpxchgl %esi, 0x2eb27c(%rip)      #  18    0xb2c45  7      OPC=cmpxchgl_m32_r32  
  nop                                #  19    0xb2c4c  1      OPC=nop               
  jne .L_b2c59                       #  20    0xb2c4d  2      OPC=jne_label         
  jmpq .L_b2c73                      #  21    0xb2c4f  2      OPC=jmpq_label        
.L_b2c50:                            #        0xb2c51  0      OPC=<label>           
  cmpxchgl %esi, 0x2eb271(%rip)      #  22    0xb2c51  7      OPC=cmpxchgl_m32_r32  
  je .L_b2c73                        #  23    0xb2c58  2      OPC=je_label          
.L_b2c59:                            #        0xb2c5a  0      OPC=<label>           
  leaq 0x2eb268(%rip), %rdi          #  24    0xb2c5a  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                   #  25    0xb2c61  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private     #  26    0xb2c68  5      OPC=callq_label       
  addq $0x80, %rsp                   #  27    0xb2c6d  7      OPC=addq_r64_imm32    
.L_b2c73:                            #        0xb2c74  0      OPC=<label>           
  movq 0x2e9c36(%rip), %rdx          #  28    0xb2c74  7      OPC=movq_r64_m64      
  testq %rdx, %rdx                   #  29    0xb2c7b  3      OPC=testq_r64_r64     
  je .L_b2dc3                        #  30    0xb2c7e  6      OPC=je_label_1        
.L_b2c83:                            #        0xb2c84  0      OPC=<label>           
  movq 0x2e81f6(%rip), %r13          #  31    0xb2c84  7      OPC=movq_r64_m64      
  leaq 0x18(%rsp), %r12              #  32    0xb2c8b  5      OPC=leaq_r64_m16      
  jmpq .L_b2cb9                      #  33    0xb2c90  2      OPC=jmpq_label        
  nop                                #  34    0xb2c92  1      OPC=nop               
  nop                                #  35    0xb2c93  1      OPC=nop               
  nop                                #  36    0xb2c94  1      OPC=nop               
  nop                                #  37    0xb2c95  1      OPC=nop               
  nop                                #  38    0xb2c96  1      OPC=nop               
  nop                                #  39    0xb2c97  1      OPC=nop               
  nop                                #  40    0xb2c98  1      OPC=nop               
.L_b2c98:                            #        0xb2c99  0      OPC=<label>           
  movq %rbp, %rsi                    #  41    0xb2c99  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                    #  42    0xb2c9c  3      OPC=movq_r64_r64      
  movq %rax, 0x2e9c0b(%rip)          #  43    0xb2c9f  7      OPC=movq_m64_r64      
  callq ._IO_fsetpos64__GLIBC_2_2_5  #  44    0xb2ca6  5      OPC=callq_label       
  testl %eax, %eax                   #  45    0xb2cab  2      OPC=testl_r32_r32     
  jne .L_b2da0                       #  46    0xb2cad  6      OPC=jne_label_1       
  movq 0x2e9bf7(%rip), %rdx          #  47    0xb2cb3  7      OPC=movq_r64_m64      
.L_b2cb9:                            #        0xb2cba  0      OPC=<label>           
  testq %rdx, %rdx                   #  48    0xb2cba  3      OPC=testq_r64_r64     
  je .L_b2d40                        #  49    0xb2cbd  6      OPC=je_label_1        
  movq 0x2eb1f7(%rip), %rcx          #  50    0xb2cc3  7      OPC=movq_r64_m64      
  leaq 0x2eb1d0(%rip), %rsi          #  51    0xb2cca  7      OPC=leaq_r64_m16      
  movq %r12, %r8                     #  52    0xb2cd1  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                    #  53    0xb2cd4  3      OPC=movq_r64_r64      
  callq .fgetgrent_r                 #  54    0xb2cd7  5      OPC=callq_label       
  cmpl $0x22, %eax                   #  55    0xb2cdc  3      OPC=cmpl_r32_imm8     
  jne .L_b2d30                       #  56    0xb2cdf  2      OPC=jne_label         
  movq 0x2eb1d9(%rip), %rax          #  57    0xb2ce1  7      OPC=movq_r64_m64      
  movq 0x2e9bc2(%rip), %r14          #  58    0xb2ce8  7      OPC=movq_r64_m64      
  leaq 0x400(%rax), %rsi             #  59    0xb2cef  7      OPC=leaq_r64_m16      
  movq %r14, %rdi                    #  60    0xb2cf6  3      OPC=movq_r64_r64      
  movq %rsi, 0x2eb1c1(%rip)          #  61    0xb2cf9  7      OPC=movq_m64_r64      
  callq .__tls_get_addr_plt          #  62    0xb2d00  5      OPC=callq_label       
  testq %rax, %rax                   #  63    0xb2d05  3      OPC=testq_r64_r64     
  jne .L_b2c98                       #  64    0xb2d08  2      OPC=jne_label         
  movl (%r13), %r15d                 #  65    0xb2d0a  4      OPC=movl_r32_m32      
  nop                                #  66    0xb2d0e  1      OPC=nop               
  movq %r14, %rdi                    #  67    0xb2d0f  3      OPC=movq_r64_r64      
  movq %rax, 0x8(%rsp)               #  68    0xb2d12  5      OPC=movq_m64_r64      
  callq .L_1f8c0                     #  69    0xb2d17  5      OPC=callq_label       
  movq 0x8(%rsp), %rax               #  70    0xb2d1c  5      OPC=movq_r64_m64      
  movl %r15d, (%r13)                 #  71    0xb2d21  4      OPC=movl_m32_r32      
  nop                                #  72    0xb2d25  1      OPC=nop               
  jmpq .L_b2c98                      #  73    0xb2d26  5      OPC=jmpq_label_1      
  nop                                #  74    0xb2d2b  1      OPC=nop               
  nop                                #  75    0xb2d2c  1      OPC=nop               
  nop                                #  76    0xb2d2d  1      OPC=nop               
  nop                                #  77    0xb2d2e  1      OPC=nop               
  nop                                #  78    0xb2d2f  1      OPC=nop               
  nop                                #  79    0xb2d30  1      OPC=nop               
.L_b2d30:                            #        0xb2d31  0      OPC=<label>           
  cmpq $0x0, 0x2e9b78(%rip)          #  80    0xb2d31  8      OPC=cmpq_m64_imm8     
  jne .L_b2d49                       #  81    0xb2d39  2      OPC=jne_label         
  nop                                #  82    0xb2d3b  1      OPC=nop               
  nop                                #  83    0xb2d3c  1      OPC=nop               
  nop                                #  84    0xb2d3d  1      OPC=nop               
  nop                                #  85    0xb2d3e  1      OPC=nop               
  nop                                #  86    0xb2d3f  1      OPC=nop               
  nop                                #  87    0xb2d40  1      OPC=nop               
.L_b2d40:                            #        0xb2d41  0      OPC=<label>           
  movq $0x0, 0x18(%rsp)              #  88    0xb2d41  9      OPC=movq_m64_imm32    
.L_b2d49:                            #        0xb2d4a  0      OPC=<label>           
  movl (%r13), %edx                  #  89    0xb2d4a  4      OPC=movl_r32_m32      
  nop                                #  90    0xb2d4e  1      OPC=nop               
  cmpl $0x0, 0x2edeab(%rip)          #  91    0xb2d4f  7      OPC=cmpl_m32_imm8     
  je .L_b2d62                        #  92    0xb2d56  2      OPC=je_label          
  lock                               #  93    0xb2d58  1      OPC=lock              
  decl 0x2eb16a(%rip)                #  94    0xb2d59  6      OPC=decl_m32          
  nop                                #  95    0xb2d5f  1      OPC=nop               
  jne .L_b2d6a                       #  96    0xb2d60  2      OPC=jne_label         
  jmpq .L_b2d84                      #  97    0xb2d62  2      OPC=jmpq_label        
.L_b2d62:                            #        0xb2d64  0      OPC=<label>           
  decl 0x2eb160(%rip)                #  98    0xb2d64  6      OPC=decl_m32          
  je .L_b2d84                        #  99    0xb2d6a  2      OPC=je_label          
.L_b2d6a:                            #        0xb2d6c  0      OPC=<label>           
  leaq 0x2eb157(%rip), %rdi          #  100   0xb2d6c  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                   #  101   0xb2d73  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private   #  102   0xb2d7a  5      OPC=callq_label       
  addq $0x80, %rsp                   #  103   0xb2d7f  7      OPC=addq_r64_imm32    
.L_b2d84:                            #        0xb2d86  0      OPC=<label>           
  movl %edx, (%r13)                  #  104   0xb2d86  4      OPC=movl_m32_r32      
  nop                                #  105   0xb2d8a  1      OPC=nop               
  movq 0x18(%rsp), %rax              #  106   0xb2d8b  5      OPC=movq_r64_m64      
  addq $0x38, %rsp                   #  107   0xb2d90  4      OPC=addq_r64_imm8     
  popq %rbx                          #  108   0xb2d94  1      OPC=popq_r64_1        
  popq %rbp                          #  109   0xb2d95  1      OPC=popq_r64_1        
  popq %r12                          #  110   0xb2d96  2      OPC=popq_r64_1        
  popq %r13                          #  111   0xb2d98  2      OPC=popq_r64_1        
  popq %r14                          #  112   0xb2d9a  2      OPC=popq_r64_1        
  popq %r15                          #  113   0xb2d9c  2      OPC=popq_r64_1        
  retq                               #  114   0xb2d9e  1      OPC=retq              
  nop                                #  115   0xb2d9f  1      OPC=nop               
  nop                                #  116   0xb2da0  1      OPC=nop               
  nop                                #  117   0xb2da1  1      OPC=nop               
.L_b2da0:                            #        0xb2da2  0      OPC=<label>           
  movq $0x0, 0x2e9b05(%rip)          #  118   0xb2da2  11     OPC=movq_m64_imm32    
  xorl %edx, %edx                    #  119   0xb2dad  2      OPC=xorl_r32_r32      
  jmpq .L_b2cb9                      #  120   0xb2daf  5      OPC=jmpq_label_1      
.L_b2db2:                            #        0xb2db4  0      OPC=<label>           
  addq $0x38, %rsp                   #  121   0xb2db4  4      OPC=addq_r64_imm8     
  xorl %eax, %eax                    #  122   0xb2db8  2      OPC=xorl_r32_r32      
  popq %rbx                          #  123   0xb2dba  1      OPC=popq_r64_1        
  popq %rbp                          #  124   0xb2dbb  1      OPC=popq_r64_1        
  popq %r12                          #  125   0xb2dbc  2      OPC=popq_r64_1        
  popq %r13                          #  126   0xb2dbe  2      OPC=popq_r64_1        
  popq %r14                          #  127   0xb2dc0  2      OPC=popq_r64_1        
  popq %r15                          #  128   0xb2dc2  2      OPC=popq_r64_1        
  retq                               #  129   0xb2dc4  1      OPC=retq              
.L_b2dc3:                            #        0xb2dc5  0      OPC=<label>           
  movl $0x400, %edi                  #  130   0xb2dc5  5      OPC=movl_r32_imm32    
  movq $0x400, 0x2eb0ed(%rip)        #  131   0xb2dca  11     OPC=movq_m64_imm32    
  callq .memalign_plt                #  132   0xb2dd5  5      OPC=callq_label       
  movq %rax, 0x2e9ad1(%rip)          #  133   0xb2dda  7      OPC=movq_m64_r64      
  movq %rax, %rdx                    #  134   0xb2de1  3      OPC=movq_r64_r64      
  jmpq .L_b2c83                      #  135   0xb2de4  5      OPC=jmpq_label_1      
  nop                                #  136   0xb2de9  1      OPC=nop               
  nop                                #  137   0xb2dea  1      OPC=nop               
  nop                                #  138   0xb2deb  1      OPC=nop               
  nop                                #  139   0xb2dec  1      OPC=nop               
  nop                                #  140   0xb2ded  1      OPC=nop               
  nop                                #  141   0xb2dee  1      OPC=nop               
  nop                                #  142   0xb2def  1      OPC=nop               
  nop                                #  143   0xb2df0  1      OPC=nop               
  nop                                #  144   0xb2df1  1      OPC=nop               
                                                                                    
.size fgetgrent, .-fgetgrent

