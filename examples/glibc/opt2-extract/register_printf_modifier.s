  .text
  .globl register_printf_modifier
  .type register_printf_modifier, @function

#! file-offset 0x4e0f0
#! rip-offset  0x4e0f0
#! capacity    416 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
.register_printf_modifier:          #        0x4e0f0  0      OPC=<label>           
  pushq %r12                        #  1     0x4e0f0  2      OPC=pushq_r64_1       
  pushq %rbp                        #  2     0x4e0f2  1      OPC=pushq_r64_1       
  pushq %rbx                        #  3     0x4e0f3  1      OPC=pushq_r64_1       
  movl (%rdi), %eax                 #  4     0x4e0f4  2      OPC=movl_r32_m32      
  movq %rdi, %rbx                   #  5     0x4e0f6  3      OPC=movq_r64_r64      
  subl $0x1, %eax                   #  6     0x4e0f9  3      OPC=subl_r32_imm8     
  cmpl $0xfe, %eax                  #  7     0x4e0fc  5      OPC=cmpl_eax_imm32    
  jbe .L_4e11b                      #  8     0x4e101  2      OPC=jbe_label         
  jmpq .L_4e238                     #  9     0x4e103  5      OPC=jmpq_label_1      
  nop                               #  10    0x4e108  1      OPC=nop               
  nop                               #  11    0x4e109  1      OPC=nop               
  nop                               #  12    0x4e10a  1      OPC=nop               
  nop                               #  13    0x4e10b  1      OPC=nop               
  nop                               #  14    0x4e10c  1      OPC=nop               
  nop                               #  15    0x4e10d  1      OPC=nop               
  nop                               #  16    0x4e10e  1      OPC=nop               
  nop                               #  17    0x4e10f  1      OPC=nop               
.L_4e110:                           #        0x4e110  0      OPC=<label>           
  cmpl $0xff, %eax                  #  18    0x4e110  5      OPC=cmpl_eax_imm32    
  ja .L_4e238                       #  19    0x4e115  6      OPC=ja_label_1        
.L_4e11b:                           #        0x4e11b  0      OPC=<label>           
  addq $0x4, %rbx                   #  20    0x4e11b  4      OPC=addq_r64_imm8     
  movl (%rbx), %eax                 #  21    0x4e11f  2      OPC=movl_r32_m32      
  testl %eax, %eax                  #  22    0x4e121  2      OPC=testl_r32_r32     
  jne .L_4e110                      #  23    0x4e123  2      OPC=jne_label         
  movl 0x34f7f9(%rip), %ecx         #  24    0x4e125  6      OPC=movl_r32_m32      
  leal -0x10(%rcx), %edx            #  25    0x4e12b  3      OPC=leal_r32_m16      
  cmpl $0x7, %edx                   #  26    0x4e12e  3      OPC=cmpl_r32_imm8     
  jbe .L_4e27a                      #  27    0x4e131  6      OPC=jbe_label_1       
  movq %rdi, %rbp                   #  28    0x4e137  3      OPC=movq_r64_r64      
  movl $0x1, %esi                   #  29    0x4e13a  5      OPC=movl_r32_imm32    
  cmpl $0x0, 0x352aba(%rip)         #  30    0x4e13f  7      OPC=cmpl_m32_imm8     
  je .L_4e154                       #  31    0x4e146  2      OPC=je_label          
  lock                              #  32    0x4e148  1      OPC=lock              
  cmpxchgl %esi, 0x34f7d8(%rip)     #  33    0x4e149  7      OPC=cmpxchgl_m32_r32  
  nop                               #  34    0x4e150  1      OPC=nop               
  jne .L_4e15d                      #  35    0x4e151  2      OPC=jne_label         
  jmpq .L_4e177                     #  36    0x4e153  2      OPC=jmpq_label        
.L_4e154:                           #        0x4e155  0      OPC=<label>           
  cmpxchgl %esi, 0x34f7cd(%rip)     #  37    0x4e155  7      OPC=cmpxchgl_m32_r32  
  je .L_4e177                       #  38    0x4e15c  2      OPC=je_label          
.L_4e15d:                           #        0x4e15e  0      OPC=<label>           
  leaq 0x34f7c4(%rip), %rdi         #  39    0x4e15e  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  40    0x4e165  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  41    0x4e16c  5      OPC=callq_label       
  addq $0x80, %rsp                  #  42    0x4e171  7      OPC=addq_r64_imm32    
.L_4e177:                           #        0x4e178  0      OPC=<label>           
  cmpq $0x0, 0x3527b1(%rip)         #  43    0x4e178  8      OPC=cmpq_m64_imm8     
  je .L_4e250                       #  44    0x4e180  6      OPC=je_label_1        
.L_4e185:                           #        0x4e186  0      OPC=<label>           
  subq %rbp, %rbx                   #  45    0x4e186  3      OPC=subq_r64_r64      
  leaq 0x10(%rbx), %rdi             #  46    0x4e189  4      OPC=leaq_r64_m16      
  callq .memalign_plt               #  47    0x4e18d  5      OPC=callq_label       
  testq %rax, %rax                  #  48    0x4e192  3      OPC=testq_r64_r64     
  movq %rax, %r12                   #  49    0x4e195  3      OPC=movq_r64_r64      
  je .L_4e270                       #  50    0x4e198  6      OPC=je_label_1        
  movzbl (%rbp), %edx               #  51    0x4e19e  4      OPC=movzbl_r32_m8     
  movq 0x352788(%rip), %rax         #  52    0x4e1a2  7      OPC=movq_r64_m64      
  leaq 0x4(%rbp), %rsi              #  53    0x4e1a9  4      OPC=leaq_r64_m16      
  movl 0x34f772(%rip), %ecx         #  54    0x4e1ad  6      OPC=movl_r32_m32      
  leaq 0xc(%r12), %rdi              #  55    0x4e1b3  5      OPC=leaq_r64_m16      
  movq (%rax,%rdx,8), %rax          #  56    0x4e1b8  4      OPC=movq_r64_m64      
  movq %rbx, %rdx                   #  57    0x4e1bc  3      OPC=movq_r64_r64      
  sarq $0x2, %rdx                   #  58    0x4e1bf  4      OPC=sarq_r64_imm8     
  movq %rax, (%r12)                 #  59    0x4e1c3  4      OPC=movq_m64_r64      
  leal 0x1(%rcx), %eax              #  60    0x4e1c7  3      OPC=leal_r32_m16      
  movl %eax, 0x34f755(%rip)         #  61    0x4e1ca  6      OPC=movl_m32_r32      
  movl $0x1, %eax                   #  62    0x4e1d0  5      OPC=movl_r32_imm32    
  shll %cl, %eax                    #  63    0x4e1d5  2      OPC=shll_r32_cl       
  movl %eax, 0x8(%r12)              #  64    0x4e1d7  5      OPC=movl_m32_r32      
  callq .wmemcpy                    #  65    0x4e1dc  5      OPC=callq_label       
  movzbl (%rbp), %edx               #  66    0x4e1e1  4      OPC=movzbl_r32_m8     
  movq 0x352745(%rip), %rax         #  67    0x4e1e5  7      OPC=movq_r64_m64      
  movq %r12, (%rax,%rdx,8)          #  68    0x4e1ec  4      OPC=movq_m64_r64      
  movl 0x8(%r12), %edx              #  69    0x4e1f0  5      OPC=movl_r32_m32      
.L_4e1f4:                           #        0x4e1f5  0      OPC=<label>           
  cmpl $0x0, 0x352a05(%rip)         #  70    0x4e1f5  7      OPC=cmpl_m32_imm8     
  je .L_4e208                       #  71    0x4e1fc  2      OPC=je_label          
  lock                              #  72    0x4e1fe  1      OPC=lock              
  decl 0x34f724(%rip)               #  73    0x4e1ff  6      OPC=decl_m32          
  nop                               #  74    0x4e205  1      OPC=nop               
  jne .L_4e210                      #  75    0x4e206  2      OPC=jne_label         
  jmpq .L_4e22a                     #  76    0x4e208  2      OPC=jmpq_label        
.L_4e208:                           #        0x4e20a  0      OPC=<label>           
  decl 0x34f71a(%rip)               #  77    0x4e20a  6      OPC=decl_m32          
  je .L_4e22a                       #  78    0x4e210  2      OPC=je_label          
.L_4e210:                           #        0x4e212  0      OPC=<label>           
  leaq 0x34f711(%rip), %rdi         #  79    0x4e212  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  80    0x4e219  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  81    0x4e220  5      OPC=callq_label       
  addq $0x80, %rsp                  #  82    0x4e225  7      OPC=addq_r64_imm32    
.L_4e22a:                           #        0x4e22c  0      OPC=<label>           
  popq %rbx                         #  83    0x4e22c  1      OPC=popq_r64_1        
  movl %edx, %eax                   #  84    0x4e22d  2      OPC=movl_r32_r32      
  popq %rbp                         #  85    0x4e22f  1      OPC=popq_r64_1        
  popq %r12                         #  86    0x4e230  2      OPC=popq_r64_1        
  retq                              #  87    0x4e232  1      OPC=retq              
  nop                               #  88    0x4e233  1      OPC=nop               
  nop                               #  89    0x4e234  1      OPC=nop               
  nop                               #  90    0x4e235  1      OPC=nop               
  nop                               #  91    0x4e236  1      OPC=nop               
  nop                               #  92    0x4e237  1      OPC=nop               
  nop                               #  93    0x4e238  1      OPC=nop               
  nop                               #  94    0x4e239  1      OPC=nop               
.L_4e238:                           #        0x4e23a  0      OPC=<label>           
  movq 0x34cc41(%rip), %rax         #  95    0x4e23a  7      OPC=movq_r64_m64      
  movl $0x16, (%rax)                #  96    0x4e241  6      OPC=movl_m32_imm32    
  nop                               #  97    0x4e247  1      OPC=nop               
  movl $0xffffffff, %eax            #  98    0x4e248  6      OPC=movl_r32_imm32_1  
.L_4e24b:                           #        0x4e24e  0      OPC=<label>           
  popq %rbx                         #  99    0x4e24e  1      OPC=popq_r64_1        
  popq %rbp                         #  100   0x4e24f  1      OPC=popq_r64_1        
  popq %r12                         #  101   0x4e250  2      OPC=popq_r64_1        
  retq                              #  102   0x4e252  1      OPC=retq              
.L_4e250:                           #        0x4e253  0      OPC=<label>           
  movl $0x8, %esi                   #  103   0x4e253  5      OPC=movl_r32_imm32    
  movl $0xff, %edi                  #  104   0x4e258  5      OPC=movl_r32_imm32    
  callq .L_1f8b0                    #  105   0x4e25d  5      OPC=callq_label       
  testq %rax, %rax                  #  106   0x4e262  3      OPC=testq_r64_r64     
  movq %rax, 0x3526c7(%rip)         #  107   0x4e265  7      OPC=movq_m64_r64      
  jne .L_4e185                      #  108   0x4e26c  6      OPC=jne_label_1       
  nop                               #  109   0x4e272  1      OPC=nop               
.L_4e270:                           #        0x4e273  0      OPC=<label>           
  movl $0xffffffff, %edx            #  110   0x4e273  6      OPC=movl_r32_imm32_1  
  jmpq .L_4e1f4                     #  111   0x4e279  5      OPC=jmpq_label_1      
.L_4e27a:                           #        0x4e27e  0      OPC=<label>           
  movq 0x34cbff(%rip), %rax         #  112   0x4e27e  7      OPC=movq_r64_m64      
  movl $0x1c, (%rax)                #  113   0x4e285  6      OPC=movl_m32_imm32    
  nop                               #  114   0x4e28b  1      OPC=nop               
  movl $0xffffffff, %eax            #  115   0x4e28c  6      OPC=movl_r32_imm32_1  
  jmpq .L_4e24b                     #  116   0x4e292  2      OPC=jmpq_label        
  nop                               #  117   0x4e294  1      OPC=nop               
                                                                                   
.size register_printf_modifier, .-register_printf_modifier

