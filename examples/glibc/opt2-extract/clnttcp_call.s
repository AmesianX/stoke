  .text
  .globl clnttcp_call
  .type clnttcp_call, @function

#! file-offset 0x10f5c0
#! rip-offset  0x10f5c0
#! capacity    736 bytes

# Text                                   #  Line  RIP       Bytes  Opcode              
.clnttcp_call:                           #        0x10f5c0  0      OPC=<label>         
  pushq %r15                             #  1     0x10f5c0  2      OPC=pushq_r64_1     
  pushq %r14                             #  2     0x10f5c2  2      OPC=pushq_r64_1     
  movq %rdi, %r14                        #  3     0x10f5c4  3      OPC=movq_r64_r64    
  pushq %r13                             #  4     0x10f5c7  2      OPC=pushq_r64_1     
  pushq %r12                             #  5     0x10f5c9  2      OPC=pushq_r64_1     
  pushq %rbp                             #  6     0x10f5cb  1      OPC=pushq_r64_1     
  pushq %rbx                             #  7     0x10f5cc  1      OPC=pushq_r64_1     
  subq $0xb8, %rsp                       #  8     0x10f5cd  7      OPC=subq_r64_imm32  
  movq 0x10(%rdi), %rbx                  #  9     0x10f5d4  4      OPC=movq_r64_m64    
  movq %rdx, 0x20(%rsp)                  #  10    0x10f5d8  5      OPC=movq_m64_r64    
  movq %rsi, 0x48(%rsp)                  #  11    0x10f5dd  5      OPC=movq_m64_r64    
  movq %rcx, 0x28(%rsp)                  #  12    0x10f5e2  5      OPC=movq_m64_r64    
  movq %r8, 0x18(%rsp)                   #  13    0x10f5e7  5      OPC=movq_m64_r64    
  movl 0x18(%rbx), %edx                  #  14    0x10f5ec  3      OPC=movl_r32_m32    
  movq %r9, 0x40(%rsp)                   #  15    0x10f5ef  5      OPC=movq_m64_r64    
  leaq 0x68(%rbx), %rbp                  #  16    0x10f5f4  4      OPC=leaq_r64_m16    
  testl %edx, %edx                       #  17    0x10f5f8  2      OPC=testl_r32_r32   
  jne .L_10f614                          #  18    0x10f5fa  2      OPC=jne_label       
  movq 0xf0(%rsp), %rax                  #  19    0x10f5fc  8      OPC=movq_r64_m64    
  movq 0xf8(%rsp), %rdx                  #  20    0x10f604  8      OPC=movq_r64_m64    
  movq %rax, 0x8(%rbx)                   #  21    0x10f60c  4      OPC=movq_m64_r64    
  movq %rdx, 0x10(%rbx)                  #  22    0x10f610  4      OPC=movq_m64_r64    
.L_10f614:                               #        0x10f614  0      OPC=<label>         
  cmpq $0x0, 0x18(%rsp)                  #  23    0x10f614  6      OPC=cmpq_m64_imm8   
  movl $0x1, %r15d                       #  24    0x10f61a  6      OPC=movl_r32_imm32  
  je .L_10f7d8                           #  25    0x10f620  6      OPC=je_label_1      
.L_10f626:                               #        0x10f626  0      OPC=<label>         
  leaq 0x48(%rbx), %rax                  #  26    0x10f626  4      OPC=leaq_r64_m16    
  leaq 0x50(%rsp), %r13                  #  27    0x10f62a  5      OPC=leaq_r64_m16    
  movl $0x3, 0x34(%rsp)                  #  28    0x10f62f  8      OPC=movl_m32_imm32  
  movq %rax, 0x8(%rsp)                   #  29    0x10f637  5      OPC=movq_m64_r64    
  leaq 0x48(%rsp), %rax                  #  30    0x10f63c  5      OPC=leaq_r64_m16    
  movq %rax, 0x10(%rsp)                  #  31    0x10f641  5      OPC=movq_m64_r64    
  leaq 0x30(%rbx), %rax                  #  32    0x10f646  4      OPC=leaq_r64_m16    
  movq %rax, 0x38(%rsp)                  #  33    0x10f64a  5      OPC=movq_m64_r64    
.L_10f64f:                               #        0x10f64f  0      OPC=<label>         
  movl 0x48(%rbx), %eax                  #  34    0x10f64f  3      OPC=movl_r32_m32    
  movl $0x0, 0x68(%rbx)                  #  35    0x10f652  7      OPC=movl_m32_imm32  
  movq %rbp, %rdi                        #  36    0x10f659  3      OPC=movq_r64_r64    
  movl $0x0, 0x30(%rbx)                  #  37    0x10f65c  7      OPC=movl_m32_imm32  
  movl 0x60(%rbx), %edx                  #  38    0x10f663  3      OPC=movl_r32_m32    
  movq 0x8(%rsp), %rsi                   #  39    0x10f666  5      OPC=movq_r64_m64    
  leal -0x1(%rax), %r12d                 #  40    0x10f66b  4      OPC=leal_r32_m16    
  movq 0x70(%rbx), %rax                  #  41    0x10f66f  4      OPC=movq_r64_m64    
  movl %r12d, 0x48(%rbx)                 #  42    0x10f673  4      OPC=movl_m32_r32    
  bswap %r12d                            #  43    0x10f677  3      OPC=bswap_r32       
  callq 0x18(%rax)                       #  44    0x10f67a  3      OPC=callq_m64       
  testl %eax, %eax                       #  45    0x10f67d  2      OPC=testl_r32_r32   
  je .L_10f7f8                           #  46    0x10f67f  6      OPC=je_label_1      
  movq 0x70(%rbx), %rax                  #  47    0x10f685  4      OPC=movq_r64_m64    
  movq 0x10(%rsp), %rsi                  #  48    0x10f689  5      OPC=movq_r64_m64    
  movq %rbp, %rdi                        #  49    0x10f68e  3      OPC=movq_r64_r64    
  callq 0x8(%rax)                        #  50    0x10f691  3      OPC=callq_m64       
  testl %eax, %eax                       #  51    0x10f694  2      OPC=testl_r32_r32   
  je .L_10f7f8                           #  52    0x10f696  6      OPC=je_label_1      
  movq (%r14), %rdi                      #  53    0x10f69c  3      OPC=movq_r64_m64    
  movq %rbp, %rsi                        #  54    0x10f69f  3      OPC=movq_r64_r64    
  movq 0x38(%rdi), %rax                  #  55    0x10f6a2  4      OPC=movq_r64_m64    
  callq 0x8(%rax)                        #  56    0x10f6a6  3      OPC=callq_m64       
  testl %eax, %eax                       #  57    0x10f6a9  2      OPC=testl_r32_r32   
  je .L_10f7f8                           #  58    0x10f6ab  6      OPC=je_label_1      
  xorl %eax, %eax                        #  59    0x10f6b1  2      OPC=xorl_r32_r32    
  movq 0x28(%rsp), %rsi                  #  60    0x10f6b3  5      OPC=movq_r64_m64    
  movq %rbp, %rdi                        #  61    0x10f6b8  3      OPC=movq_r64_r64    
  movq 0x20(%rsp), %rcx                  #  62    0x10f6bb  5      OPC=movq_r64_m64    
  callq %rcx                             #  63    0x10f6c0  2      OPC=callq_r64       
  testl %eax, %eax                       #  64    0x10f6c2  2      OPC=testl_r32_r32   
  je .L_10f7f8                           #  65    0x10f6c4  6      OPC=je_label_1      
  movl %r15d, %esi                       #  66    0x10f6ca  3      OPC=movl_r32_r32    
  movq %rbp, %rdi                        #  67    0x10f6cd  3      OPC=movq_r64_r64    
  callq .xdrrec_endofrecord_GLIBC_2_2_5  #  68    0x10f6d0  5      OPC=callq_label     
  testl %eax, %eax                       #  69    0x10f6d5  2      OPC=testl_r32_r32   
  je .L_10f81b                           #  70    0x10f6d7  6      OPC=je_label_1      
  testl %r15d, %r15d                     #  71    0x10f6dd  3      OPC=testl_r32_r32   
  je .L_10f829                           #  72    0x10f6e0  6      OPC=je_label_1      
  cmpq $0x0, 0x8(%rbx)                   #  73    0x10f6e6  5      OPC=cmpq_m64_imm8   
  je .L_10f7b8                           #  74    0x10f6eb  6      OPC=je_label_1      
.L_10f6f1:                               #        0x10f6f1  0      OPC=<label>         
  movl $0x1, 0x68(%rbx)                  #  75    0x10f6f1  7      OPC=movl_m32_imm32  
.L_10f6f8:                               #        0x10f6f8  0      OPC=<label>         
  movq 0x290b31(%rip), %rax              #  76    0x10f6f8  7      OPC=movq_r64_m64    
  movq %rbp, %rdi                        #  77    0x10f6ff  3      OPC=movq_r64_r64    
  movq $0x0, 0x88(%rsp)                  #  78    0x10f702  12     OPC=movq_m64_imm32  
  movq %rax, 0x68(%rsp)                  #  79    0x10f70e  5      OPC=movq_m64_r64    
  movq 0x290b1e(%rip), %rax              #  80    0x10f713  7      OPC=movq_r64_m64    
  movq %rax, 0x70(%rsp)                  #  81    0x10f71a  5      OPC=movq_m64_r64    
  movq 0x290b1a(%rip), %rax              #  82    0x10f71f  7      OPC=movq_r64_m64    
  movq %rax, 0x78(%rsp)                  #  83    0x10f726  5      OPC=movq_m64_r64    
  leaq 0x426e(%rip), %rax                #  84    0x10f72b  7      OPC=leaq_r64_m16    
  movq %rax, 0x90(%rsp)                  #  85    0x10f732  8      OPC=movq_m64_r64    
  callq .xdrrec_skiprecord_GLIBC_2_2_5   #  86    0x10f73a  5      OPC=callq_label     
  testl %eax, %eax                       #  87    0x10f73f  2      OPC=testl_r32_r32   
  je .L_10f7b0                           #  88    0x10f741  2      OPC=je_label        
  movq %r13, %rsi                        #  89    0x10f743  3      OPC=movq_r64_r64    
  movq %rbp, %rdi                        #  90    0x10f746  3      OPC=movq_r64_r64    
  callq .xdr_replymsg_GLIBC_2_2_5        #  91    0x10f749  5      OPC=callq_label     
  testl %eax, %eax                       #  92    0x10f74e  2      OPC=testl_r32_r32   
  jne .L_10f770                          #  93    0x10f750  2      OPC=jne_label       
  movl 0x30(%rbx), %eax                  #  94    0x10f752  3      OPC=movl_r32_m32    
  testl %eax, %eax                       #  95    0x10f755  2      OPC=testl_r32_r32   
  je .L_10f6f8                           #  96    0x10f757  2      OPC=je_label        
.L_10f759:                               #        0x10f759  0      OPC=<label>         
  addq $0xb8, %rsp                       #  97    0x10f759  7      OPC=addq_r64_imm32  
  popq %rbx                              #  98    0x10f760  1      OPC=popq_r64_1      
  popq %rbp                              #  99    0x10f761  1      OPC=popq_r64_1      
  popq %r12                              #  100   0x10f762  2      OPC=popq_r64_1      
  popq %r13                              #  101   0x10f764  2      OPC=popq_r64_1      
  popq %r14                              #  102   0x10f766  2      OPC=popq_r64_1      
  popq %r15                              #  103   0x10f768  2      OPC=popq_r64_1      
  retq                                   #  104   0x10f76a  1      OPC=retq            
  nop                                    #  105   0x10f76b  1      OPC=nop             
  nop                                    #  106   0x10f76c  1      OPC=nop             
  nop                                    #  107   0x10f76d  1      OPC=nop             
  nop                                    #  108   0x10f76e  1      OPC=nop             
  nop                                    #  109   0x10f76f  1      OPC=nop             
.L_10f770:                               #        0x10f770  0      OPC=<label>         
  cmpl 0x50(%rsp), %r12d                 #  110   0x10f770  5      OPC=cmpl_r32_m32    
  jne .L_10f6f8                          #  111   0x10f775  2      OPC=jne_label       
  movq 0x38(%rsp), %rsi                  #  112   0x10f777  5      OPC=movq_r64_m64    
  movq %r13, %rdi                        #  113   0x10f77c  3      OPC=movq_r64_r64    
  callq ._seterr_reply_GLIBC_2_2_5       #  114   0x10f77f  5      OPC=callq_label     
  movl 0x30(%rbx), %eax                  #  115   0x10f784  3      OPC=movl_r32_m32    
  testl %eax, %eax                       #  116   0x10f787  2      OPC=testl_r32_r32   
  je .L_10f830                           #  117   0x10f789  6      OPC=je_label_1      
  subl $0x1, 0x34(%rsp)                  #  118   0x10f78f  5      OPC=subl_m32_imm8   
  je .L_10f759                           #  119   0x10f794  2      OPC=je_label        
  movq (%r14), %rdi                      #  120   0x10f796  3      OPC=movq_r64_m64    
  movq 0x38(%rdi), %rax                  #  121   0x10f799  4      OPC=movq_r64_m64    
  callq 0x18(%rax)                       #  122   0x10f79d  3      OPC=callq_m64       
  testl %eax, %eax                       #  123   0x10f7a0  2      OPC=testl_r32_r32   
  jne .L_10f64f                          #  124   0x10f7a2  6      OPC=jne_label_1     
  nop                                    #  125   0x10f7a8  1      OPC=nop             
  nop                                    #  126   0x10f7a9  1      OPC=nop             
  nop                                    #  127   0x10f7aa  1      OPC=nop             
  nop                                    #  128   0x10f7ab  1      OPC=nop             
  nop                                    #  129   0x10f7ac  1      OPC=nop             
  nop                                    #  130   0x10f7ad  1      OPC=nop             
  nop                                    #  131   0x10f7ae  1      OPC=nop             
  nop                                    #  132   0x10f7af  1      OPC=nop             
.L_10f7b0:                               #        0x10f7b0  0      OPC=<label>         
  movl 0x30(%rbx), %eax                  #  133   0x10f7b0  3      OPC=movl_r32_m32    
  jmpq .L_10f759                         #  134   0x10f7b3  2      OPC=jmpq_label      
  nop                                    #  135   0x10f7b5  1      OPC=nop             
  nop                                    #  136   0x10f7b6  1      OPC=nop             
  nop                                    #  137   0x10f7b7  1      OPC=nop             
.L_10f7b8:                               #        0x10f7b8  0      OPC=<label>         
  cmpq $0x0, 0x10(%rbx)                  #  138   0x10f7b8  5      OPC=cmpq_m64_imm8   
  jne .L_10f6f1                          #  139   0x10f7bd  6      OPC=jne_label_1     
  movl $0x5, 0x30(%rbx)                  #  140   0x10f7c3  7      OPC=movl_m32_imm32  
  movl $0x5, %eax                        #  141   0x10f7ca  5      OPC=movl_r32_imm32  
  jmpq .L_10f759                         #  142   0x10f7cf  2      OPC=jmpq_label      
  nop                                    #  143   0x10f7d1  1      OPC=nop             
  nop                                    #  144   0x10f7d2  1      OPC=nop             
  nop                                    #  145   0x10f7d3  1      OPC=nop             
  nop                                    #  146   0x10f7d4  1      OPC=nop             
  nop                                    #  147   0x10f7d5  1      OPC=nop             
  nop                                    #  148   0x10f7d6  1      OPC=nop             
  nop                                    #  149   0x10f7d7  1      OPC=nop             
.L_10f7d8:                               #        0x10f7d8  0      OPC=<label>         
  cmpq $0x0, 0x8(%rbx)                   #  150   0x10f7d8  5      OPC=cmpq_m64_imm8   
  jne .L_10f626                          #  151   0x10f7dd  6      OPC=jne_label_1     
  xorl %r15d, %r15d                      #  152   0x10f7e3  3      OPC=xorl_r32_r32    
  cmpq $0x0, 0x10(%rbx)                  #  153   0x10f7e6  5      OPC=cmpq_m64_imm8   
  setne %r15b                            #  154   0x10f7eb  4      OPC=setne_r8        
  jmpq .L_10f626                         #  155   0x10f7ef  5      OPC=jmpq_label_1    
  nop                                    #  156   0x10f7f4  1      OPC=nop             
  nop                                    #  157   0x10f7f5  1      OPC=nop             
  nop                                    #  158   0x10f7f6  1      OPC=nop             
  nop                                    #  159   0x10f7f7  1      OPC=nop             
.L_10f7f8:                               #        0x10f7f8  0      OPC=<label>         
  movl 0x30(%rbx), %eax                  #  160   0x10f7f8  3      OPC=movl_r32_m32    
  testl %eax, %eax                       #  161   0x10f7fb  2      OPC=testl_r32_r32   
  jne .L_10f806                          #  162   0x10f7fd  2      OPC=jne_label       
  movl $0x1, 0x30(%rbx)                  #  163   0x10f7ff  7      OPC=movl_m32_imm32  
.L_10f806:                               #        0x10f806  0      OPC=<label>         
  movl $0x1, %esi                        #  164   0x10f806  5      OPC=movl_r32_imm32  
  movq %rbp, %rdi                        #  165   0x10f80b  3      OPC=movq_r64_r64    
  callq .xdrrec_endofrecord_GLIBC_2_2_5  #  166   0x10f80e  5      OPC=callq_label     
  movl 0x30(%rbx), %eax                  #  167   0x10f813  3      OPC=movl_r32_m32    
  jmpq .L_10f759                         #  168   0x10f816  5      OPC=jmpq_label_1    
.L_10f81b:                               #        0x10f81b  0      OPC=<label>         
  movl $0x3, 0x30(%rbx)                  #  169   0x10f81b  7      OPC=movl_m32_imm32  
  movb $0x3, %al                         #  170   0x10f822  2      OPC=movb_r8_imm8    
  jmpq .L_10f759                         #  171   0x10f824  5      OPC=jmpq_label_1    
.L_10f829:                               #        0x10f829  0      OPC=<label>         
  xorl %eax, %eax                        #  172   0x10f829  2      OPC=xorl_r32_r32    
  jmpq .L_10f759                         #  173   0x10f82b  5      OPC=jmpq_label_1    
.L_10f830:                               #        0x10f830  0      OPC=<label>         
  movq (%r14), %rdi                      #  174   0x10f830  3      OPC=movq_r64_m64    
  leaq 0x18(%r13), %rsi                  #  175   0x10f833  4      OPC=leaq_r64_m16    
  movq 0x38(%rdi), %rax                  #  176   0x10f837  4      OPC=movq_r64_m64    
  callq 0x10(%rax)                       #  177   0x10f83b  3      OPC=callq_m64       
  testl %eax, %eax                       #  178   0x10f83e  2      OPC=testl_r32_r32   
  jne .L_10f877                          #  179   0x10f840  2      OPC=jne_label       
  movl $0x7, 0x30(%rbx)                  #  180   0x10f842  7      OPC=movl_m32_imm32  
  movl $0x6, 0x38(%rbx)                  #  181   0x10f849  7      OPC=movl_m32_imm32  
.L_10f850:                               #        0x10f850  0      OPC=<label>         
  cmpq $0x0, 0x70(%rsp)                  #  182   0x10f850  6      OPC=cmpq_m64_imm8   
  je .L_10f7b0                           #  183   0x10f856  6      OPC=je_label_1      
  leaq 0x18(%r13), %rsi                  #  184   0x10f85c  4      OPC=leaq_r64_m16    
  movl $0x2, 0x68(%rbx)                  #  185   0x10f860  7      OPC=movl_m32_imm32  
  movq %rbp, %rdi                        #  186   0x10f867  3      OPC=movq_r64_r64    
  callq .xdr_opaque_auth_GLIBC_2_2_5     #  187   0x10f86a  5      OPC=callq_label     
  movl 0x30(%rbx), %eax                  #  188   0x10f86f  3      OPC=movl_r32_m32    
  jmpq .L_10f759                         #  189   0x10f872  5      OPC=jmpq_label_1    
.L_10f877:                               #        0x10f877  0      OPC=<label>         
  xorl %eax, %eax                        #  190   0x10f877  2      OPC=xorl_r32_r32    
  movq 0x40(%rsp), %rsi                  #  191   0x10f879  5      OPC=movq_r64_m64    
  movq %rbp, %rdi                        #  192   0x10f87e  3      OPC=movq_r64_r64    
  movq 0x18(%rsp), %rcx                  #  193   0x10f881  5      OPC=movq_r64_m64    
  callq %rcx                             #  194   0x10f886  2      OPC=callq_r64       
  testl %eax, %eax                       #  195   0x10f888  2      OPC=testl_r32_r32   
  jne .L_10f850                          #  196   0x10f88a  2      OPC=jne_label       
  cmpl $0x0, 0x30(%rbx)                  #  197   0x10f88c  4      OPC=cmpl_m32_imm8   
  jne .L_10f850                          #  198   0x10f890  2      OPC=jne_label       
  movl $0x2, 0x30(%rbx)                  #  199   0x10f892  7      OPC=movl_m32_imm32  
  jmpq .L_10f850                         #  200   0x10f899  2      OPC=jmpq_label      
  nop                                    #  201   0x10f89b  1      OPC=nop             
  nop                                    #  202   0x10f89c  1      OPC=nop             
  nop                                    #  203   0x10f89d  1      OPC=nop             
  nop                                    #  204   0x10f89e  1      OPC=nop             
  nop                                    #  205   0x10f89f  1      OPC=nop             
                                                                                       
.size clnttcp_call, .-clnttcp_call

