  .text
  .globl _nl_load_locale_from_archive
  .type _nl_load_locale_from_archive, @function

#! file-offset 0x2af70
#! rip-offset  0x2af70
#! capacity    1312 bytes

# Text                           #  Line  RIP      Bytes  Opcode                
._nl_load_locale_from_archive:   #        0x2af70  0      OPC=<label>           
  pushq %rbp                     #  1     0x2af70  1      OPC=pushq_r64_1       
  movq %rsp, %rbp                #  2     0x2af71  3      OPC=movq_r64_r64      
  pushq %r15                     #  3     0x2af74  2      OPC=pushq_r64_1       
  pushq %r14                     #  4     0x2af76  2      OPC=pushq_r64_1       
  pushq %r13                     #  5     0x2af78  2      OPC=pushq_r64_1       
  pushq %r12                     #  6     0x2af7a  2      OPC=pushq_r64_1       
  movq %rsi, %r13                #  7     0x2af7c  3      OPC=movq_r64_r64      
  pushq %rbx                     #  8     0x2af7f  1      OPC=pushq_r64_1       
  subq $0x108, %rsp              #  9     0x2af80  7      OPC=subq_r64_imm32    
  movl %edi, -0x124(%rbp)        #  10    0x2af87  6      OPC=movl_m32_r32      
  movl $0x1e, %edi               #  11    0x2af8d  5      OPC=movl_r32_imm32    
  movq (%rsi), %rbx              #  12    0x2af92  3      OPC=movq_r64_m64      
  callq .__sysconf               #  13    0x2af95  5      OPC=callq_label       
  movq 0x371b5f(%rip), %r14      #  14    0x2af9a  7      OPC=movq_r64_m64      
  testq %r14, %r14               #  15    0x2afa1  3      OPC=testq_r64_r64     
  jne .L_2afc7                   #  16    0x2afa4  2      OPC=jne_label         
  jmpq .L_2aff8                  #  17    0x2afa6  2      OPC=jmpq_label        
  nop                            #  18    0x2afa8  1      OPC=nop               
  nop                            #  19    0x2afa9  1      OPC=nop               
  nop                            #  20    0x2afaa  1      OPC=nop               
  nop                            #  21    0x2afab  1      OPC=nop               
  nop                            #  22    0x2afac  1      OPC=nop               
  nop                            #  23    0x2afad  1      OPC=nop               
  nop                            #  24    0x2afae  1      OPC=nop               
  nop                            #  25    0x2afaf  1      OPC=nop               
.L_2afb0:                        #        0x2afb0  0      OPC=<label>           
  movq %r15, %rsi                #  26    0x2afb0  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                #  27    0x2afb3  3      OPC=movq_r64_r64      
  callq .__GI_strcmp             #  28    0x2afb6  5      OPC=callq_label       
  testl %eax, %eax               #  29    0x2afbb  2      OPC=testl_r32_r32     
  je .L_2afd0                    #  30    0x2afbd  2      OPC=je_label          
  movq (%r14), %r14              #  31    0x2afbf  3      OPC=movq_r64_m64      
  testq %r14, %r14               #  32    0x2afc2  3      OPC=testq_r64_r64     
  je .L_2aff8                    #  33    0x2afc5  2      OPC=je_label          
.L_2afc7:                        #        0x2afc7  0      OPC=<label>           
  movq 0x8(%r14), %r15           #  34    0x2afc7  4      OPC=movq_r64_m64      
  cmpq %rbx, %r15                #  35    0x2afcb  3      OPC=cmpq_r64_r64      
  jne .L_2afb0                   #  36    0x2afce  2      OPC=jne_label         
.L_2afd0:                        #        0x2afd0  0      OPC=<label>           
  movslq -0x124(%rbp), %r12      #  37    0x2afd0  7      OPC=movslq_r64_m32    
  movq %r15, (%r13)              #  38    0x2afd7  4      OPC=movq_m64_r64      
  addq $0x2, %r12                #  39    0x2afdb  4      OPC=addq_r64_imm8     
  movq (%r14,%r12,8), %rax       #  40    0x2afdf  4      OPC=movq_r64_m64      
.L_2afe3:                        #        0x2afe3  0      OPC=<label>           
  leaq -0x28(%rbp), %rsp         #  41    0x2afe3  4      OPC=leaq_r64_m16      
  popq %rbx                      #  42    0x2afe7  1      OPC=popq_r64_1        
  popq %r12                      #  43    0x2afe8  2      OPC=popq_r64_1        
  popq %r13                      #  44    0x2afea  2      OPC=popq_r64_1        
  popq %r14                      #  45    0x2afec  2      OPC=popq_r64_1        
  popq %r15                      #  46    0x2afee  2      OPC=popq_r64_1        
  popq %rbp                      #  47    0x2aff0  1      OPC=popq_r64_1        
  retq                           #  48    0x2aff1  1      OPC=retq              
  nop                            #  49    0x2aff2  1      OPC=nop               
  nop                            #  50    0x2aff3  1      OPC=nop               
  nop                            #  51    0x2aff4  1      OPC=nop               
  nop                            #  52    0x2aff5  1      OPC=nop               
  nop                            #  53    0x2aff6  1      OPC=nop               
  nop                            #  54    0x2aff7  1      OPC=nop               
.L_2aff8:                        #        0x2aff8  0      OPC=<label>           
  movl $0x2e, %esi               #  55    0x2aff8  5      OPC=movl_r32_imm32    
  movq %rbx, %rdi                #  56    0x2affd  3      OPC=movq_r64_r64      
  callq .__GI_strchr             #  57    0x2b000  5      OPC=callq_label       
  testq %rax, %rax               #  58    0x2b005  3      OPC=testq_r64_r64     
  je .L_2b014                    #  59    0x2b008  2      OPC=je_label          
  testb $0xbf, 0x1(%rax)         #  60    0x2b00a  4      OPC=testb_m8_imm8     
  jne .L_2b274                   #  61    0x2b00e  6      OPC=jne_label_1       
.L_2b014:                        #        0x2b014  0      OPC=<label>           
  cmpq $0x0, 0x371bcc(%rip)      #  62    0x2b014  8      OPC=cmpq_m64_imm8     
  je .L_2b355                    #  63    0x2b01c  6      OPC=je_label_1        
  movq 0x371ba7(%rip), %r14      #  64    0x2b022  7      OPC=movq_r64_m64      
  testq %r14, %r14               #  65    0x2b029  3      OPC=testq_r64_r64     
  je .L_2b258                    #  66    0x2b02c  6      OPC=je_label_1        
.L_2b032:                        #        0x2b032  0      OPC=<label>           
  movq %rbx, %rdi                #  67    0x2b032  3      OPC=movq_r64_r64      
  callq .strlen                  #  68    0x2b035  5      OPC=callq_label       
  testq %rax, %rax               #  69    0x2b03a  3      OPC=testq_r64_r64     
  movl %eax, %edx                #  70    0x2b03d  2      OPC=movl_r32_r32      
  je .L_2b061                    #  71    0x2b03f  2      OPC=je_label          
  movq %rbx, %rcx                #  72    0x2b041  3      OPC=movq_r64_r64      
  addq %rbx, %rax                #  73    0x2b044  3      OPC=addq_r64_r64      
  nop                            #  74    0x2b047  1      OPC=nop               
  nop                            #  75    0x2b048  1      OPC=nop               
  nop                            #  76    0x2b049  1      OPC=nop               
  nop                            #  77    0x2b04a  1      OPC=nop               
  nop                            #  78    0x2b04b  1      OPC=nop               
  nop                            #  79    0x2b04c  1      OPC=nop               
  nop                            #  80    0x2b04d  1      OPC=nop               
  nop                            #  81    0x2b04e  1      OPC=nop               
  nop                            #  82    0x2b04f  1      OPC=nop               
.L_2b050:                        #        0x2b050  0      OPC=<label>           
  movzbl (%rcx), %esi            #  83    0x2b050  3      OPC=movzbl_r32_m8     
  roll $0x9, %edx                #  84    0x2b053  3      OPC=roll_r32_imm8     
  addq $0x1, %rcx                #  85    0x2b056  4      OPC=addq_r64_imm8     
  addl %esi, %edx                #  86    0x2b05a  2      OPC=addl_r32_r32      
  cmpq %rax, %rcx                #  87    0x2b05c  3      OPC=cmpq_r64_r64      
  jne .L_2b050                   #  88    0x2b05f  2      OPC=jne_label         
.L_2b061:                        #        0x2b061  0      OPC=<label>           
  movl 0x10(%r14), %ecx          #  89    0x2b061  4      OPC=movl_r32_m32      
  testl %edx, %edx               #  90    0x2b065  2      OPC=testl_r32_r32     
  movl %edx, %r8d                #  91    0x2b067  3      OPC=movl_r32_r32      
  movl $0xffffffff, %eax         #  92    0x2b06a  6      OPC=movl_r32_imm32_1  
  movl 0x8(%r14), %r15d          #  93    0x2b070  4      OPC=movl_r32_m32      
  cmoveq %rax, %r8               #  94    0x2b074  4      OPC=cmoveq_r64_r64    
  testl %ecx, %ecx               #  95    0x2b078  2      OPC=testl_r32_r32     
  je .L_2b258                    #  96    0x2b07a  6      OPC=je_label_1        
  movl %ecx, %r10d               #  97    0x2b080  3      OPC=movl_r32_r32      
  movq %r8, %rax                 #  98    0x2b083  3      OPC=movq_r64_r64      
  xorl %edx, %edx                #  99    0x2b086  2      OPC=xorl_r32_r32      
  divq %r10                      #  100   0x2b088  3      OPC=divq_r64          
  subl $0x2, %ecx                #  101   0x2b08b  3      OPC=subl_r32_imm8     
  movq %r8, %rax                 #  102   0x2b08e  3      OPC=movq_r64_r64      
  movq %rdx, %rsi                #  103   0x2b091  3      OPC=movq_r64_r64      
  xorl %edx, %edx                #  104   0x2b094  2      OPC=xorl_r32_r32      
  divq %rcx                      #  105   0x2b096  3      OPC=divq_r64          
  movl %r15d, %eax               #  106   0x2b099  3      OPC=movl_r32_r32      
  movq %rax, -0x130(%rbp)        #  107   0x2b09c  7      OPC=movq_m64_r64      
  leaq 0x1(%rdx), %r9            #  108   0x2b0a3  4      OPC=leaq_r64_m16      
  leaq (%r9,%r9,2), %r11         #  109   0x2b0a7  4      OPC=leaq_r64_m16      
  leaq (,%r11,4), %r12           #  110   0x2b0ab  8      OPC=leaq_r64_m16      
.L_2b0b2:                        #        0x2b0b3  0      OPC=<label>           
  movq -0x130(%rbp), %rcx        #  111   0x2b0b3  7      OPC=movq_r64_m64      
  leaq (%rsi,%rsi,2), %rax       #  112   0x2b0ba  4      OPC=leaq_r64_m16      
  leaq (%rsi,%r9,1), %rdx        #  113   0x2b0be  4      OPC=leaq_r64_m16      
  leaq (%rcx,%rax,4), %rcx       #  114   0x2b0c2  4      OPC=leaq_r64_m16      
  leaq (%r14,%rcx,1), %r15       #  115   0x2b0c6  4      OPC=leaq_r64_m16      
  jmpq .L_2b0e3                  #  116   0x2b0ca  2      OPC=jmpq_label        
  nop                            #  117   0x2b0cc  1      OPC=nop               
  nop                            #  118   0x2b0cd  1      OPC=nop               
  nop                            #  119   0x2b0ce  1      OPC=nop               
  nop                            #  120   0x2b0cf  1      OPC=nop               
  nop                            #  121   0x2b0d0  1      OPC=nop               
.L_2b0d0:                        #        0x2b0d1  0      OPC=<label>           
  addq %r12, %r15                #  122   0x2b0d1  3      OPC=addq_r64_r64      
  cmpq %rdx, %r10                #  123   0x2b0d4  3      OPC=cmpq_r64_r64      
  leaq (%rdx,%r9,1), %rax        #  124   0x2b0d7  4      OPC=leaq_r64_m16      
  jbe .L_2b269                   #  125   0x2b0db  6      OPC=jbe_label_1       
  movq %rax, %rdx                #  126   0x2b0e1  3      OPC=movq_r64_r64      
.L_2b0e3:                        #        0x2b0e4  0      OPC=<label>           
  movl 0x4(%r15), %esi           #  127   0x2b0e4  4      OPC=movl_r32_m32      
  testl %esi, %esi               #  128   0x2b0e8  2      OPC=testl_r32_r32     
  je .L_2b258                    #  129   0x2b0ea  6      OPC=je_label_1        
  movl (%r15), %eax              #  130   0x2b0f0  3      OPC=movl_r32_m32      
  cmpq %r8, %rax                 #  131   0x2b0f3  3      OPC=cmpq_r64_r64      
  jne .L_2b0d0                   #  132   0x2b0f6  2      OPC=jne_label         
  addq %r14, %rsi                #  133   0x2b0f8  3      OPC=addq_r64_r64      
  movq %rbx, %rdi                #  134   0x2b0fb  3      OPC=movq_r64_r64      
  movq %rdx, -0x120(%rbp)        #  135   0x2b0fe  7      OPC=movq_m64_r64      
  movq %r8, -0x118(%rbp)         #  136   0x2b105  7      OPC=movq_m64_r64      
  movq %r9, -0x110(%rbp)         #  137   0x2b10c  7      OPC=movq_m64_r64      
  movq %r10, -0x108(%rbp)        #  138   0x2b113  7      OPC=movq_m64_r64      
  callq .__GI_strcmp             #  139   0x2b11a  5      OPC=callq_label       
  testl %eax, %eax               #  140   0x2b11f  2      OPC=testl_r32_r32     
  movq -0x108(%rbp), %r10        #  141   0x2b121  7      OPC=movq_r64_m64      
  movq -0x110(%rbp), %r9         #  142   0x2b128  7      OPC=movq_r64_m64      
  movq -0x118(%rbp), %r8         #  143   0x2b12f  7      OPC=movq_r64_m64      
  movq -0x120(%rbp), %rdx        #  144   0x2b136  7      OPC=movq_r64_m64      
  jne .L_2b0d0                   #  145   0x2b13d  2      OPC=jne_label         
  movl 0x8(%r15), %eax           #  146   0x2b13f  4      OPC=movl_r32_m32      
  testl %eax, %eax               #  147   0x2b143  2      OPC=testl_r32_r32     
  je .L_2b258                    #  148   0x2b145  6      OPC=je_label_1        
  movl 0x371a8c(%rip), %edx      #  149   0x2b14b  6      OPC=movl_r32_m32      
  cmpq 0x371a19(%rip), %rdx      #  150   0x2b151  7      OPC=cmpq_r64_m64      
  movq %rdx, %r9                 #  151   0x2b158  3      OPC=movq_r64_r64      
  jne .L_2b470                   #  152   0x2b15b  6      OPC=jne_label_1       
  leaq -0x100(%rbp), %r15        #  153   0x2b161  7      OPC=leaq_r64_m16      
  leaq 0x4(%r14,%rax,1), %rsi    #  154   0x2b168  5      OPC=leaq_r64_m16      
  movl $0x1, %edx                #  155   0x2b16d  5      OPC=movl_r32_imm32    
  movq %r15, %rcx                #  156   0x2b172  3      OPC=movq_r64_r64      
  jmpq .L_2b181                  #  157   0x2b175  2      OPC=jmpq_label        
.L_2b176:                        #        0x2b177  0      OPC=<label>           
  addl $0x1, %edx                #  158   0x2b177  3      OPC=addl_r32_imm8     
  addq $0x10, %rcx               #  159   0x2b17a  4      OPC=addq_r64_imm8     
  addq $0x8, %rsi                #  160   0x2b17e  4      OPC=addq_r64_imm8     
.L_2b181:                        #        0x2b182  0      OPC=<label>           
  cmpl $0x7, %edx                #  161   0x2b182  3      OPC=cmpl_r32_imm8     
  je .L_2b176                    #  162   0x2b185  2      OPC=je_label          
  movl (%rsi), %eax              #  163   0x2b187  2      OPC=movl_r32_m32      
  movl 0x4(%rsi), %edi           #  164   0x2b189  3      OPC=movl_r32_m32      
  leal (%rdi,%rax,1), %r8d       #  165   0x2b18c  4      OPC=leal_r32_m16      
  cmpl %r8d, %r9d                #  166   0x2b190  3      OPC=cmpl_r32_r32      
  jb .L_2b258                    #  167   0x2b193  6      OPC=jb_label_1        
  addq %r14, %rax                #  168   0x2b199  3      OPC=addq_r64_r64      
  cmpl $0xd, %edx                #  169   0x2b19c  3      OPC=cmpl_r32_imm8     
  movq %rax, (%rcx)              #  170   0x2b19f  3      OPC=movq_m64_r64      
  movl %edi, %eax                #  171   0x2b1a2  2      OPC=movl_r32_r32      
  movq %rax, 0x8(%rcx)           #  172   0x2b1a4  4      OPC=movq_m64_r64      
  jne .L_2b176                   #  173   0x2b1a8  2      OPC=jne_label         
  movl $0x78, %edi               #  174   0x2b1aa  5      OPC=movl_r32_imm32    
  callq .memalign_plt            #  175   0x2b1af  5      OPC=callq_label       
  testq %rax, %rax               #  176   0x2b1b4  3      OPC=testq_r64_r64     
  movq %rax, %r14                #  177   0x2b1b7  3      OPC=movq_r64_r64      
  je .L_2b258                    #  178   0x2b1ba  6      OPC=je_label_1        
  movq (%r13), %rdi              #  179   0x2b1c0  4      OPC=movq_r64_m64      
  callq .__strdup                #  180   0x2b1c4  5      OPC=callq_label       
  testq %rax, %rax               #  181   0x2b1c9  3      OPC=testq_r64_r64     
  movq %rax, 0x8(%r14)           #  182   0x2b1cc  4      OPC=movq_m64_r64      
  je .L_2b461                    #  183   0x2b1d0  6      OPC=je_label_1        
  movq 0x371924(%rip), %rax      #  184   0x2b1d6  7      OPC=movq_r64_m64      
  movl $0x1, %r12d               #  185   0x2b1dd  6      OPC=movl_r32_imm32    
  movq %r14, 0x371917(%rip)      #  186   0x2b1e3  7      OPC=movq_m64_r64      
  xorl %ebx, %ebx                #  187   0x2b1ea  2      OPC=xorl_r32_r32      
  movq %rax, (%r14)              #  188   0x2b1ec  3      OPC=movq_m64_r64      
  jmpq .L_2b1fc                  #  189   0x2b1ef  2      OPC=jmpq_label        
.L_2b1f0:                        #        0x2b1f1  0      OPC=<label>           
  addq $0x1, %rbx                #  190   0x2b1f1  4      OPC=addq_r64_imm8     
  addl $0x1, %r12d               #  191   0x2b1f5  4      OPC=addl_r32_imm8     
  addq $0x10, %r15               #  192   0x2b1f9  4      OPC=addq_r64_imm8     
.L_2b1fc:                        #        0x2b1fd  0      OPC=<label>           
  cmpq $0x6, %rbx                #  193   0x2b1fd  4      OPC=cmpq_r64_imm8     
  je .L_2b1f0                    #  194   0x2b201  2      OPC=je_label          
  movq 0x8(%r15), %rdx           #  195   0x2b203  4      OPC=movq_r64_m64      
  movq (%r15), %rsi              #  196   0x2b207  3      OPC=movq_r64_m64      
  movl %ebx, %edi                #  197   0x2b20a  2      OPC=movl_r32_r32      
  callq ._nl_intern_locale_data  #  198   0x2b20c  5      OPC=callq_label       
  testq %rax, %rax               #  199   0x2b211  3      OPC=testq_r64_r64     
  movq %rax, 0x10(%r14,%rbx,8)   #  200   0x2b214  5      OPC=movq_m64_r64      
  je .L_2b22f                    #  201   0x2b219  2      OPC=je_label          
  movq 0x8(%r14), %rdx           #  202   0x2b21b  4      OPC=movq_r64_m64      
  movl $0x2, 0x18(%rax)          #  203   0x2b21f  7      OPC=movl_m32_imm32    
  movl $0xffffffff, 0x30(%rax)   #  204   0x2b226  7      OPC=movl_m32_imm32    
  movq %rdx, (%rax)              #  205   0x2b22d  3      OPC=movq_m64_r64      
.L_2b22f:                        #        0x2b230  0      OPC=<label>           
  cmpl $0xd, %r12d               #  206   0x2b230  4      OPC=cmpl_r32_imm8     
  jne .L_2b1f0                   #  207   0x2b234  2      OPC=jne_label         
  movslq -0x124(%rbp), %rdx      #  208   0x2b236  7      OPC=movslq_r64_m32    
  movq 0x8(%r14), %rax           #  209   0x2b23d  4      OPC=movq_r64_m64      
  movq %rax, (%r13)              #  210   0x2b241  4      OPC=movq_m64_r64      
  addq $0x2, %rdx                #  211   0x2b245  4      OPC=addq_r64_imm8     
  movq (%r14,%rdx,8), %rax       #  212   0x2b249  4      OPC=movq_r64_m64      
  jmpq .L_2afe3                  #  213   0x2b24d  5      OPC=jmpq_label_1      
  nop                            #  214   0x2b252  1      OPC=nop               
  nop                            #  215   0x2b253  1      OPC=nop               
  nop                            #  216   0x2b254  1      OPC=nop               
  nop                            #  217   0x2b255  1      OPC=nop               
  nop                            #  218   0x2b256  1      OPC=nop               
  nop                            #  219   0x2b257  1      OPC=nop               
  nop                            #  220   0x2b258  1      OPC=nop               
.L_2b258:                        #        0x2b259  0      OPC=<label>           
  leaq -0x28(%rbp), %rsp         #  221   0x2b259  4      OPC=leaq_r64_m16      
  xorl %eax, %eax                #  222   0x2b25d  2      OPC=xorl_r32_r32      
  popq %rbx                      #  223   0x2b25f  1      OPC=popq_r64_1        
  popq %r12                      #  224   0x2b260  2      OPC=popq_r64_1        
  popq %r13                      #  225   0x2b262  2      OPC=popq_r64_1        
  popq %r14                      #  226   0x2b264  2      OPC=popq_r64_1        
  popq %r15                      #  227   0x2b266  2      OPC=popq_r64_1        
  popq %rbp                      #  228   0x2b268  1      OPC=popq_r64_1        
  retq                           #  229   0x2b269  1      OPC=retq              
.L_2b269:                        #        0x2b26a  0      OPC=<label>           
  subq %r10, %rdx                #  230   0x2b26a  3      OPC=subq_r64_r64      
  movq %rdx, %rsi                #  231   0x2b26d  3      OPC=movq_r64_r64      
  jmpq .L_2b0b2                  #  232   0x2b270  5      OPC=jmpq_label_1      
.L_2b274:                        #        0x2b275  0      OPC=<label>           
  leaq 0x1(%rax), %r14           #  233   0x2b275  4      OPC=leaq_r64_m16      
  movl $0x40, %esi               #  234   0x2b279  5      OPC=movl_r32_imm32    
  movq %r14, %rdi                #  235   0x2b27e  3      OPC=movq_r64_r64      
  callq .strchrnul               #  236   0x2b281  5      OPC=callq_label       
  movq %rax, %r15                #  237   0x2b286  3      OPC=movq_r64_r64      
  movq %r14, %rdi                #  238   0x2b289  3      OPC=movq_r64_r64      
  movq %rax, -0x108(%rbp)        #  239   0x2b28c  7      OPC=movq_m64_r64      
  subq %r14, %r15                #  240   0x2b293  3      OPC=subq_r64_r64      
  movq %r15, %rsi                #  241   0x2b296  3      OPC=movq_r64_r64      
  callq ._nl_normalize_codeset   #  242   0x2b299  5      OPC=callq_label       
  testq %rax, %rax               #  243   0x2b29e  3      OPC=testq_r64_r64     
  movq %rax, %r12                #  244   0x2b2a1  3      OPC=movq_r64_r64      
  je .L_2b258                    #  245   0x2b2a4  2      OPC=je_label          
  movq %r15, %rdx                #  246   0x2b2a6  3      OPC=movq_r64_r64      
  movq %r14, %rsi                #  247   0x2b2a9  3      OPC=movq_r64_r64      
  movq %rax, %rdi                #  248   0x2b2ac  3      OPC=movq_r64_r64      
  callq .__GI_strncmp            #  249   0x2b2af  5      OPC=callq_label       
  testl %eax, %eax               #  250   0x2b2b4  2      OPC=testl_r32_r32     
  jne .L_2b2c2                   #  251   0x2b2b6  2      OPC=jne_label         
  cmpb $0x0, (%r12,%r15,1)       #  252   0x2b2b8  5      OPC=cmpb_m8_imm8      
  je .L_2b348                    #  253   0x2b2bd  6      OPC=je_label_1        
.L_2b2c2:                        #        0x2b2c3  0      OPC=<label>           
  movq %r12, %rdi                #  254   0x2b2c3  3      OPC=movq_r64_r64      
  subq %rbx, %r14                #  255   0x2b2c6  3      OPC=subq_r64_r64      
  callq .strlen                  #  256   0x2b2c9  5      OPC=callq_label       
  movq -0x108(%rbp), %rdi        #  257   0x2b2ce  7      OPC=movq_r64_m64      
  movq %rax, %r15                #  258   0x2b2d5  3      OPC=movq_r64_r64      
  callq .strlen                  #  259   0x2b2d8  5      OPC=callq_label       
  leaq 0x1(%rax), %r9            #  260   0x2b2dd  4      OPC=leaq_r64_m16      
  leaq (%r15,%r14,1), %rax       #  261   0x2b2e1  4      OPC=leaq_r64_m16      
  movq %rbx, %rsi                #  262   0x2b2e5  3      OPC=movq_r64_r64      
  movq %r14, %rdx                #  263   0x2b2e8  3      OPC=movq_r64_r64      
  leaq 0x1e(%r9,%rax,1), %rax    #  264   0x2b2eb  5      OPC=leaq_r64_m16      
  movq %r9, -0x118(%rbp)         #  265   0x2b2f0  7      OPC=movq_m64_r64      
  andq $0xf0, %rax               #  266   0x2b2f7  4      OPC=andq_r64_imm8     
  subq %rax, %rsp                #  267   0x2b2fb  3      OPC=subq_r64_r64      
  leaq 0xf(%rsp), %r8            #  268   0x2b2fe  5      OPC=leaq_r64_m16      
  andq $0xf0, %r8                #  269   0x2b303  4      OPC=andq_r64_imm8     
  movq %r8, %rdi                 #  270   0x2b307  3      OPC=movq_r64_r64      
  movq %r8, -0x110(%rbp)         #  271   0x2b30a  7      OPC=movq_m64_r64      
  callq .__GI_memcpy             #  272   0x2b311  5      OPC=callq_label       
  leaq (%rax,%r14,1), %rdi       #  273   0x2b316  4      OPC=leaq_r64_m16      
  movq %r15, %rdx                #  274   0x2b31a  3      OPC=movq_r64_r64      
  movq %r12, %rsi                #  275   0x2b31d  3      OPC=movq_r64_r64      
  callq .__GI_memcpy             #  276   0x2b320  5      OPC=callq_label       
  movq -0x118(%rbp), %r9         #  277   0x2b325  7      OPC=movq_r64_m64      
  movq -0x108(%rbp), %rsi        #  278   0x2b32c  7      OPC=movq_r64_m64      
  leaq (%rax,%r15,1), %rdi       #  279   0x2b333  4      OPC=leaq_r64_m16      
  movq %r9, %rdx                 #  280   0x2b337  3      OPC=movq_r64_r64      
  callq .__GI_memcpy             #  281   0x2b33a  5      OPC=callq_label       
  movq -0x110(%rbp), %r8         #  282   0x2b33f  7      OPC=movq_r64_m64      
  movq %r8, %rbx                 #  283   0x2b346  3      OPC=movq_r64_r64      
.L_2b348:                        #        0x2b349  0      OPC=<label>           
  movq %r12, %rdi                #  284   0x2b349  3      OPC=movq_r64_r64      
  callq .L_1f8c0                 #  285   0x2b34c  5      OPC=callq_label       
  jmpq .L_2b014                  #  286   0x2b351  5      OPC=jmpq_label_1      
.L_2b355:                        #        0x2b356  0      OPC=<label>           
  leaq 0x371874(%rip), %rax      #  287   0x2b356  7      OPC=leaq_r64_m16      
  movl $0x2, %ecx                #  288   0x2b35d  5      OPC=movl_r32_imm32    
  movl $0x80000, %esi            #  289   0x2b362  5      OPC=movl_r32_imm32    
  leaq 0x121393(%rip), %rdi      #  290   0x2b367  7      OPC=leaq_r64_m16      
  movq %rax, 0x371874(%rip)      #  291   0x2b36e  7      OPC=movq_m64_r64      
  movl %ecx, %eax                #  292   0x2b375  2      OPC=movl_r32_r32      
  syscall                        #  293   0x2b377  2      OPC=syscall           
  cmpq $0xfffff000, %rax         #  294   0x2b379  6      OPC=cmpq_rax_imm32    
  movq %rax, %r15                #  295   0x2b37f  3      OPC=movq_r64_r64      
  ja .L_2b430                    #  296   0x2b382  6      OPC=ja_label_1        
  testl %eax, %eax               #  297   0x2b388  2      OPC=testl_r32_r32     
  js .L_2b258                    #  298   0x2b38a  6      OPC=js_label_1        
  leaq 0x3717aa(%rip), %rdx      #  299   0x2b390  7      OPC=leaq_r64_m16      
  movl %eax, %esi                #  300   0x2b397  2      OPC=movl_r32_r32      
  movl $0x1, %edi                #  301   0x2b399  5      OPC=movl_r32_imm32    
  callq .__fxstat                #  302   0x2b39e  5      OPC=callq_label       
  cmpl $0xffffffff, %eax         #  303   0x2b3a3  6      OPC=cmpl_r32_imm32    
  nop                            #  304   0x2b3a9  1      OPC=nop               
  nop                            #  305   0x2b3aa  1      OPC=nop               
  nop                            #  306   0x2b3ab  1      OPC=nop               
  je .L_2b450                    #  307   0x2b3ac  6      OPC=je_label_1        
  movq 0x3717be(%rip), %r12      #  308   0x2b3b2  7      OPC=movq_r64_m64      
  xorl %r9d, %r9d                #  309   0x2b3b9  3      OPC=xorl_r32_r32      
  xorl %edi, %edi                #  310   0x2b3bc  2      OPC=xorl_r32_r32      
  movl %r15d, %r8d               #  311   0x2b3be  3      OPC=movl_r32_r32      
  movl $0x2, %ecx                #  312   0x2b3c1  5      OPC=movl_r32_imm32    
  movl $0x1, %edx                #  313   0x2b3c6  5      OPC=movl_r32_imm32    
  movq %r12, %rsi                #  314   0x2b3cb  3      OPC=movq_r64_r64      
  callq .mmap                    #  315   0x2b3ce  5      OPC=callq_label       
  cmpq $0xff, %rax               #  316   0x2b3d3  4      OPC=cmpq_r64_imm8     
  movq %rax, %r14                #  317   0x2b3d7  3      OPC=movq_r64_r64      
  je .L_2b450                    #  318   0x2b3da  2      OPC=je_label          
  movl 0x10(%rax), %eax          #  319   0x2b3dc  3      OPC=movl_r32_m32      
  leaq (%rax,%rax,2), %rdx       #  320   0x2b3df  4      OPC=leaq_r64_m16      
  movl 0x8(%r14), %eax           #  321   0x2b3e3  4      OPC=movl_r32_m32      
  leaq (%rax,%rdx,4), %rax       #  322   0x2b3e7  4      OPC=leaq_r64_m16      
  movl 0x24(%r14), %edx          #  323   0x2b3eb  4      OPC=movl_r32_m32      
  leaq (%rdx,%rdx,2), %rdx       #  324   0x2b3ef  4      OPC=leaq_r64_m16      
  leaq (%rdx,%rdx,8), %rcx       #  325   0x2b3f3  4      OPC=leaq_r64_m16      
  movl 0x20(%r14), %edx          #  326   0x2b3f7  4      OPC=movl_r32_m32      
  leaq (%rdx,%rcx,4), %rdx       #  327   0x2b3fb  4      OPC=leaq_r64_m16      
  cmpq %rdx, %rax                #  328   0x2b3ff  3      OPC=cmpq_r64_r64      
  cmovlq %rdx, %rax              #  329   0x2b402  4      OPC=cmovlq_r64_r64    
  movl 0x14(%r14), %edx          #  330   0x2b406  4      OPC=movl_r32_m32      
  addl 0x18(%r14), %edx          #  331   0x2b40a  4      OPC=addl_r32_m32      
  cmpq %rdx, %rax                #  332   0x2b40e  3      OPC=cmpq_r64_r64      
  cmovlq %rdx, %rax              #  333   0x2b411  4      OPC=cmovlq_r64_r64    
  cmpq %rax, %r12                #  334   0x2b415  3      OPC=cmpq_r64_r64      
  jb .L_2b445                    #  335   0x2b418  2      OPC=jb_label          
  movslq %r15d, %rdi             #  336   0x2b41a  3      OPC=movslq_r64_r32    
  movl $0x3, %eax                #  337   0x2b41d  5      OPC=movl_r32_imm32    
  syscall                        #  338   0x2b422  2      OPC=syscall           
  movq %r14, 0x3717ac(%rip)      #  339   0x2b424  7      OPC=movq_m64_r64      
  movl %r12d, 0x3717b1(%rip)     #  340   0x2b42b  7      OPC=movl_m32_r32      
  jmpq .L_2b032                  #  341   0x2b432  5      OPC=jmpq_label_1      
.L_2b430:                        #        0x2b437  0      OPC=<label>           
  movq 0x36fa49(%rip), %rdx      #  342   0x2b437  7      OPC=movq_r64_m64      
  negl %r15d                     #  343   0x2b43e  3      OPC=negl_r32          
  xorl %eax, %eax                #  344   0x2b441  2      OPC=xorl_r32_r32      
  movl %r15d, (%rdx)             #  345   0x2b443  3      OPC=movl_m32_r32      
  nop                            #  346   0x2b446  1      OPC=nop               
  jmpq .L_2afe3                  #  347   0x2b447  5      OPC=jmpq_label_1      
.L_2b445:                        #        0x2b44c  0      OPC=<label>           
  movq %r12, %rsi                #  348   0x2b44c  3      OPC=movq_r64_r64      
  movq %r14, %rdi                #  349   0x2b44f  3      OPC=movq_r64_r64      
  callq .munmap                  #  350   0x2b452  5      OPC=callq_label       
.L_2b450:                        #        0x2b457  0      OPC=<label>           
  movslq %r15d, %rdi             #  351   0x2b457  3      OPC=movslq_r64_r32    
  movl $0x3, %eax                #  352   0x2b45a  5      OPC=movl_r32_imm32    
  syscall                        #  353   0x2b45f  2      OPC=syscall           
  xorl %eax, %eax                #  354   0x2b461  2      OPC=xorl_r32_r32      
  jmpq .L_2afe3                  #  355   0x2b463  5      OPC=jmpq_label_1      
.L_2b461:                        #        0x2b468  0      OPC=<label>           
  movq %r14, %rdi                #  356   0x2b468  3      OPC=movq_r64_r64      
  callq .L_1f8c0                 #  357   0x2b46b  5      OPC=callq_label       
  xorl %eax, %eax                #  358   0x2b470  2      OPC=xorl_r32_r32      
  jmpq .L_2afe3                  #  359   0x2b472  5      OPC=jmpq_label_1      
.L_2b470:                        #        0x2b477  0      OPC=<label>           
  leaq 0x13ed19(%rip), %rcx      #  360   0x2b477  7      OPC=leaq_r64_m16      
  leaq 0x138135(%rip), %rsi      #  361   0x2b47e  7      OPC=leaq_r64_m16      
  leaq 0x13bbc3(%rip), %rdi      #  362   0x2b485  7      OPC=leaq_r64_m16      
  movl $0x137, %edx              #  363   0x2b48c  5      OPC=movl_r32_imm32    
  callq .__assert_fail           #  364   0x2b491  5      OPC=callq_label       
  nop                            #  365   0x2b496  1      OPC=nop               
                                                                                
.size _nl_load_locale_from_archive, .-_nl_load_locale_from_archive

