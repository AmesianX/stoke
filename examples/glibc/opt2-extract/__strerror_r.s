  .text
  .globl __strerror_r
  .type __strerror_r, @function

#! file-offset 0x7e060
#! rip-offset  0x7e060
#! capacity    432 bytes

# Text                          #  Line  RIP      Bytes  Opcode               
.__strerror_r:                  #        0x7e060  0      OPC=<label>          
  pushq %r15                    #  1     0x7e060  2      OPC=pushq_r64_1      
  pushq %r14                    #  2     0x7e062  2      OPC=pushq_r64_1      
  pushq %r13                    #  3     0x7e064  2      OPC=pushq_r64_1      
  pushq %r12                    #  4     0x7e066  2      OPC=pushq_r64_1      
  movq %rdx, %r12               #  5     0x7e068  3      OPC=movq_r64_r64     
  pushq %rbp                    #  6     0x7e06b  1      OPC=pushq_r64_1      
  pushq %rbx                    #  7     0x7e06c  1      OPC=pushq_r64_1      
  movq %rsi, %rbp               #  8     0x7e06d  3      OPC=movq_r64_r64     
  movl %edi, %ebx               #  9     0x7e070  2      OPC=movl_r32_r32     
  subq $0x38, %rsp              #  10    0x7e072  4      OPC=subq_r64_imm8    
  testl %edi, %edi              #  11    0x7e076  2      OPC=testl_r32_r32    
  js .L_7e0c0                   #  12    0x7e078  2      OPC=js_label         
  cmpl 0xed29c(%rip), %edi      #  13    0x7e07a  6      OPC=cmpl_r32_m32     
  jge .L_7e170                  #  14    0x7e080  6      OPC=jge_label_1      
  leaq 0x31a673(%rip), %rcx     #  15    0x7e086  7      OPC=leaq_r64_m16     
  movslq %edi, %r8              #  16    0x7e08d  3      OPC=movslq_r64_r32   
  movq (%rcx,%r8,8), %rsi       #  17    0x7e090  4      OPC=movq_r64_m64     
  testq %rsi, %rsi              #  18    0x7e094  3      OPC=testq_r64_r64    
  je .L_7e170                   #  19    0x7e097  6      OPC=je_label_1       
  leaq 0xe56f8(%rip), %rdi      #  20    0x7e09d  7      OPC=leaq_r64_m16     
  movl $0x5, %edx               #  21    0x7e0a4  5      OPC=movl_r32_imm32   
  callq .__dcgettext            #  22    0x7e0a9  5      OPC=callq_label      
  addq $0x38, %rsp              #  23    0x7e0ae  4      OPC=addq_r64_imm8    
  popq %rbx                     #  24    0x7e0b2  1      OPC=popq_r64_1       
  popq %rbp                     #  25    0x7e0b3  1      OPC=popq_r64_1       
  popq %r12                     #  26    0x7e0b4  2      OPC=popq_r64_1       
  popq %r13                     #  27    0x7e0b6  2      OPC=popq_r64_1       
  popq %r14                     #  28    0x7e0b8  2      OPC=popq_r64_1       
  popq %r15                     #  29    0x7e0ba  2      OPC=popq_r64_1       
  retq                          #  30    0x7e0bc  1      OPC=retq             
  nop                           #  31    0x7e0bd  1      OPC=nop              
  nop                           #  32    0x7e0be  1      OPC=nop              
  nop                           #  33    0x7e0bf  1      OPC=nop              
.L_7e0c0:                       #        0x7e0c0  0      OPC=<label>          
  leaq 0xe6b70(%rip), %rsi      #  34    0x7e0c0  7      OPC=leaq_r64_m16     
  leaq 0xe56ce(%rip), %rdi      #  35    0x7e0c7  7      OPC=leaq_r64_m16     
  movl $0x5, %edx               #  36    0x7e0ce  5      OPC=movl_r32_imm32   
  leaq 0x10(%rsp), %r14         #  37    0x7e0d3  5      OPC=leaq_r64_m16     
  callq .__dcgettext            #  38    0x7e0d8  5      OPC=callq_label      
  movq %rax, %rdi               #  39    0x7e0dd  3      OPC=movq_r64_r64     
  movq %rax, %r15               #  40    0x7e0e0  3      OPC=movq_r64_r64     
  callq .strlen                 #  41    0x7e0e3  5      OPC=callq_label      
  movq %rax, %r13               #  42    0x7e0e8  3      OPC=movq_r64_r64     
  movl %ebx, %eax               #  43    0x7e0eb  2      OPC=movl_r32_r32     
  leaq 0x24(%rsp), %rsi         #  44    0x7e0ed  5      OPC=leaq_r64_m16     
  sarl $0x1f, %eax              #  45    0x7e0f2  3      OPC=sarl_r32_imm8    
  xorl %ecx, %ecx               #  46    0x7e0f5  2      OPC=xorl_r32_r32     
  movl $0xa, %edx               #  47    0x7e0f7  5      OPC=movl_r32_imm32   
  xorl %eax, %ebx               #  48    0x7e0fc  2      OPC=xorl_r32_r32     
  movb $0x0, 0x24(%rsp)         #  49    0x7e0fe  5      OPC=movb_m8_imm8     
  subl %eax, %ebx               #  50    0x7e103  2      OPC=subl_r32_r32     
  movslq %ebx, %rdi             #  51    0x7e105  3      OPC=movslq_r64_r32   
  callq ._itoa_word             #  52    0x7e108  5      OPC=callq_label      
  cmpq %r12, %r13               #  53    0x7e10d  3      OPC=cmpq_r64_r64     
  movq %r12, %rcx               #  54    0x7e110  3      OPC=movq_r64_r64     
  movq %r15, %rsi               #  55    0x7e113  3      OPC=movq_r64_r64     
  cmovbeq %r13, %rcx            #  56    0x7e116  4      OPC=cmovbeq_r64_r64  
  movq %rbp, %rdi               #  57    0x7e11a  3      OPC=movq_r64_r64     
  movq %rax, %rbx               #  58    0x7e11d  3      OPC=movq_r64_r64     
  movq %rcx, %rdx               #  59    0x7e120  3      OPC=movq_r64_r64     
  movq %rcx, 0x8(%rsp)          #  60    0x7e123  5      OPC=movq_m64_r64     
  callq .__GI_memcpy            #  61    0x7e128  5      OPC=callq_label      
  movq 0x8(%rsp), %rcx          #  62    0x7e12d  5      OPC=movq_r64_m64     
  addq %rbp, %rcx               #  63    0x7e132  3      OPC=addq_r64_r64     
  cmpq %r12, %r13               #  64    0x7e135  3      OPC=cmpq_r64_r64     
  jae .L_7e14e                  #  65    0x7e138  2      OPC=jae_label        
  addq $0x1, %r13               #  66    0x7e13a  4      OPC=addq_r64_imm8    
  leaq 0x1(%rcx), %rdi          #  67    0x7e13e  4      OPC=leaq_r64_m16     
  movb $0x2d, (%rcx)            #  68    0x7e142  3      OPC=movb_m8_imm8     
  cmpq %r12, %r13               #  69    0x7e145  3      OPC=cmpq_r64_r64     
  jb .L_7e1ef                   #  70    0x7e148  6      OPC=jb_label_1       
.L_7e14e:                       #        0x7e14e  0      OPC=<label>          
  testq %r12, %r12              #  71    0x7e14e  3      OPC=testq_r64_r64    
  je .L_7e159                   #  72    0x7e151  2      OPC=je_label         
  movb $0x0, -0x1(%rbp,%r12,1)  #  73    0x7e153  6      OPC=movb_m8_imm8     
.L_7e159:                       #        0x7e159  0      OPC=<label>          
  addq $0x38, %rsp              #  74    0x7e159  4      OPC=addq_r64_imm8    
  movq %rbp, %rax               #  75    0x7e15d  3      OPC=movq_r64_r64     
  popq %rbx                     #  76    0x7e160  1      OPC=popq_r64_1       
  popq %rbp                     #  77    0x7e161  1      OPC=popq_r64_1       
  popq %r12                     #  78    0x7e162  2      OPC=popq_r64_1       
  popq %r13                     #  79    0x7e164  2      OPC=popq_r64_1       
  popq %r14                     #  80    0x7e166  2      OPC=popq_r64_1       
  popq %r15                     #  81    0x7e168  2      OPC=popq_r64_1       
  retq                          #  82    0x7e16a  1      OPC=retq             
  nop                           #  83    0x7e16b  1      OPC=nop              
  nop                           #  84    0x7e16c  1      OPC=nop              
  nop                           #  85    0x7e16d  1      OPC=nop              
  nop                           #  86    0x7e16e  1      OPC=nop              
  nop                           #  87    0x7e16f  1      OPC=nop              
.L_7e170:                       #        0x7e170  0      OPC=<label>          
  leaq 0xe6ac0(%rip), %rsi      #  88    0x7e170  7      OPC=leaq_r64_m16     
  leaq 0xe561e(%rip), %rdi      #  89    0x7e177  7      OPC=leaq_r64_m16     
  movl $0x5, %edx               #  90    0x7e17e  5      OPC=movl_r32_imm32   
  leaq 0x10(%rsp), %r14         #  91    0x7e183  5      OPC=leaq_r64_m16     
  callq .__dcgettext            #  92    0x7e188  5      OPC=callq_label      
  movq %rax, %rdi               #  93    0x7e18d  3      OPC=movq_r64_r64     
  movq %rax, %r15               #  94    0x7e190  3      OPC=movq_r64_r64     
  callq .strlen                 #  95    0x7e193  5      OPC=callq_label      
  movq %rax, %r13               #  96    0x7e198  3      OPC=movq_r64_r64     
  movl %ebx, %eax               #  97    0x7e19b  2      OPC=movl_r32_r32     
  leaq 0x14(%r14), %rsi         #  98    0x7e19d  4      OPC=leaq_r64_m16     
  sarl $0x1f, %eax              #  99    0x7e1a1  3      OPC=sarl_r32_imm8    
  xorl %ecx, %ecx               #  100   0x7e1a4  2      OPC=xorl_r32_r32     
  movl $0xa, %edx               #  101   0x7e1a6  5      OPC=movl_r32_imm32   
  xorl %eax, %ebx               #  102   0x7e1ab  2      OPC=xorl_r32_r32     
  movb $0x0, 0x24(%rsp)         #  103   0x7e1ad  5      OPC=movb_m8_imm8     
  subl %eax, %ebx               #  104   0x7e1b2  2      OPC=subl_r32_r32     
  movslq %ebx, %rdi             #  105   0x7e1b4  3      OPC=movslq_r64_r32   
  callq ._itoa_word             #  106   0x7e1b7  5      OPC=callq_label      
  cmpq %r12, %r13               #  107   0x7e1bc  3      OPC=cmpq_r64_r64     
  movq %r12, %rcx               #  108   0x7e1bf  3      OPC=movq_r64_r64     
  movq %rbp, %rdi               #  109   0x7e1c2  3      OPC=movq_r64_r64     
  cmovbeq %r13, %rcx            #  110   0x7e1c5  4      OPC=cmovbeq_r64_r64  
  movq %r15, %rsi               #  111   0x7e1c9  3      OPC=movq_r64_r64     
  movq %rax, %rbx               #  112   0x7e1cc  3      OPC=movq_r64_r64     
  movq %rcx, %rdx               #  113   0x7e1cf  3      OPC=movq_r64_r64     
  movq %rcx, 0x8(%rsp)          #  114   0x7e1d2  5      OPC=movq_m64_r64     
  callq .__GI_memcpy            #  115   0x7e1d7  5      OPC=callq_label      
  movq 0x8(%rsp), %rcx          #  116   0x7e1dc  5      OPC=movq_r64_m64     
  cmpq %r12, %r13               #  117   0x7e1e1  3      OPC=cmpq_r64_r64     
  leaq (%rbp,%rcx,1), %rdi      #  118   0x7e1e4  5      OPC=leaq_r64_m16     
  jae .L_7e14e                  #  119   0x7e1e9  6      OPC=jae_label_1      
.L_7e1ef:                       #        0x7e1ef  0      OPC=<label>          
  addq $0x15, %r14              #  120   0x7e1ef  4      OPC=addq_r64_imm8    
  movq %r12, %rdx               #  121   0x7e1f3  3      OPC=movq_r64_r64     
  movq %rbx, %rsi               #  122   0x7e1f6  3      OPC=movq_r64_r64     
  subq %rbx, %r14               #  123   0x7e1f9  3      OPC=subq_r64_r64     
  subq %r13, %rdx               #  124   0x7e1fc  3      OPC=subq_r64_r64     
  cmpq %rdx, %r14               #  125   0x7e1ff  3      OPC=cmpq_r64_r64     
  cmovbeq %r14, %rdx            #  126   0x7e202  4      OPC=cmovbeq_r64_r64  
  callq .__GI_memcpy            #  127   0x7e206  5      OPC=callq_label      
  jmpq .L_7e14e                 #  128   0x7e20b  5      OPC=jmpq_label_1     
                                                                              
.size __strerror_r, .-__strerror_r

