  .text
  .globl end_wpattern
  .type end_wpattern, @function

#! file-offset 0xbafc0
#! rip-offset  0xbafc0
#! capacity    272 bytes

# Text                       #  Line  RIP      Bytes  Opcode             
.end_wpattern:               #        0xbafc0  0      OPC=<label>        
  pushq %rbp                 #  1     0xbafc0  1      OPC=pushq_r64_1    
  pushq %rbx                 #  2     0xbafc1  1      OPC=pushq_r64_1    
  movq %rdi, %rbp            #  3     0xbafc2  3      OPC=movq_r64_r64   
  movq %rdi, %rbx            #  4     0xbafc5  3      OPC=movq_r64_r64   
  subq $0x8, %rsp            #  5     0xbafc8  4      OPC=subq_r64_imm8  
.L_bafcc:                    #        0xbafcc  0      OPC=<label>        
  movl 0x4(%rbx), %edx       #  6     0xbafcc  3      OPC=movl_r32_m32   
  testl %edx, %edx           #  7     0xbafcf  2      OPC=testl_r32_r32  
  je .L_bb010                #  8     0xbafd1  2      OPC=je_label       
.L_bafd3:                    #        0xbafd3  0      OPC=<label>        
  cmpl $0x5b, %edx           #  9     0xbafd3  3      OPC=cmpl_r32_imm8  
  je .L_bb040                #  10    0xbafd6  2      OPC=je_label       
  leal -0x3f(%rdx), %ecx     #  11    0xbafd8  3      OPC=leal_r32_m16   
  cmpl $0x1, %ecx            #  12    0xbafdb  3      OPC=cmpl_r32_imm8  
  leal -0x2a(%rdx), %ecx     #  13    0xbafde  3      OPC=leal_r32_m16   
  setbe %sil                 #  14    0xbafe1  4      OPC=setbe_r8       
  cmpl $0x1, %ecx            #  15    0xbafe5  3      OPC=cmpl_r32_imm8  
  setbe %cl                  #  16    0xbafe8  3      OPC=setbe_r8       
  orb %cl, %sil              #  17    0xbafeb  3      OPC=orb_r8_r8      
  jne .L_bb020               #  18    0xbafee  2      OPC=jne_label      
  cmpl $0x21, %edx           #  19    0xbaff0  3      OPC=cmpl_r32_imm8  
  je .L_bb020                #  20    0xbaff3  2      OPC=je_label       
.L_baff5:                    #        0xbaff5  0      OPC=<label>        
  cmpl $0x29, %edx           #  21    0xbaff5  3      OPC=cmpl_r32_imm8  
  je .L_bb0bd                #  22    0xbaff8  6      OPC=je_label_1     
  addq $0x4, %rbx            #  23    0xbaffe  4      OPC=addq_r64_imm8  
  movl 0x4(%rbx), %edx       #  24    0xbb002  3      OPC=movl_r32_m32   
  testl %edx, %edx           #  25    0xbb005  2      OPC=testl_r32_r32  
  jne .L_bafd3               #  26    0xbb007  2      OPC=jne_label      
  nop                        #  27    0xbb009  1      OPC=nop            
  nop                        #  28    0xbb00a  1      OPC=nop            
  nop                        #  29    0xbb00b  1      OPC=nop            
  nop                        #  30    0xbb00c  1      OPC=nop            
  nop                        #  31    0xbb00d  1      OPC=nop            
  nop                        #  32    0xbb00e  1      OPC=nop            
  nop                        #  33    0xbb00f  1      OPC=nop            
.L_bb010:                    #        0xbb010  0      OPC=<label>        
  movq %rbp, %rax            #  34    0xbb010  3      OPC=movq_r64_r64   
.L_bb013:                    #        0xbb013  0      OPC=<label>        
  addq $0x8, %rsp            #  35    0xbb013  4      OPC=addq_r64_imm8  
  popq %rbx                  #  36    0xbb017  1      OPC=popq_r64_1     
  popq %rbp                  #  37    0xbb018  1      OPC=popq_r64_1     
  retq                       #  38    0xbb019  1      OPC=retq           
  nop                        #  39    0xbb01a  1      OPC=nop            
  nop                        #  40    0xbb01b  1      OPC=nop            
  nop                        #  41    0xbb01c  1      OPC=nop            
  nop                        #  42    0xbb01d  1      OPC=nop            
  nop                        #  43    0xbb01e  1      OPC=nop            
  nop                        #  44    0xbb01f  1      OPC=nop            
.L_bb020:                    #        0xbb020  0      OPC=<label>        
  cmpl $0x28, 0x8(%rbx)      #  45    0xbb020  4      OPC=cmpl_m32_imm8  
  jne .L_baff5               #  46    0xbb024  2      OPC=jne_label      
  leaq 0x8(%rbx), %rdi       #  47    0xbb026  4      OPC=leaq_r64_m16   
  callq .end_wpattern        #  48    0xbb02a  5      OPC=callq_label    
  movq %rax, %rbx            #  49    0xbb02f  3      OPC=movq_r64_r64   
  movl (%rax), %eax          #  50    0xbb032  2      OPC=movl_r32_m32   
  testl %eax, %eax           #  51    0xbb034  2      OPC=testl_r32_r32  
  jne .L_bafcc               #  52    0xbb036  2      OPC=jne_label      
  jmpq .L_bb010              #  53    0xbb038  2      OPC=jmpq_label     
  nop                        #  54    0xbb03a  1      OPC=nop            
  nop                        #  55    0xbb03b  1      OPC=nop            
  nop                        #  56    0xbb03c  1      OPC=nop            
  nop                        #  57    0xbb03d  1      OPC=nop            
  nop                        #  58    0xbb03e  1      OPC=nop            
  nop                        #  59    0xbb03f  1      OPC=nop            
.L_bb040:                    #        0xbb040  0      OPC=<label>        
  movl 0x2e3126(%rip), %esi  #  60    0xbb040  6      OPC=movl_r32_m32   
  testl %esi, %esi           #  61    0xbb046  2      OPC=testl_r32_r32  
  je .L_bb0a0                #  62    0xbb048  2      OPC=je_label       
.L_bb04a:                    #        0xbb04a  0      OPC=<label>        
  movl 0x8(%rbx), %edx       #  63    0xbb04a  3      OPC=movl_r32_m32   
  cmpl $0x21, %edx           #  64    0xbb04d  3      OPC=cmpl_r32_imm8  
  je .L_bb088                #  65    0xbb050  2      OPC=je_label       
  cmpl $0x5e, %edx           #  66    0xbb052  3      OPC=cmpl_r32_imm8  
  jne .L_bb061               #  67    0xbb055  2      OPC=jne_label      
  movl 0x2e310f(%rip), %ecx  #  68    0xbb057  6      OPC=movl_r32_m32   
  testl %ecx, %ecx           #  69    0xbb05d  2      OPC=testl_r32_r32  
  js .L_bb088                #  70    0xbb05f  2      OPC=js_label       
.L_bb061:                    #        0xbb061  0      OPC=<label>        
  addq $0x8, %rbx            #  71    0xbb061  4      OPC=addq_r64_imm8  
  cmpl $0x5d, %edx           #  72    0xbb065  3      OPC=cmpl_r32_imm8  
  jne .L_bb072               #  73    0xbb068  2      OPC=jne_label      
  jmpq .L_bb094              #  74    0xbb06a  2      OPC=jmpq_label     
  nop                        #  75    0xbb06c  1      OPC=nop            
  nop                        #  76    0xbb06d  1      OPC=nop            
  nop                        #  77    0xbb06e  1      OPC=nop            
  nop                        #  78    0xbb06f  1      OPC=nop            
.L_bb070:                    #        0xbb070  0      OPC=<label>        
  movl (%rbx), %edx          #  79    0xbb070  2      OPC=movl_r32_m32   
.L_bb072:                    #        0xbb072  0      OPC=<label>        
  cmpl $0x5d, %edx           #  80    0xbb072  3      OPC=cmpl_r32_imm8  
  je .L_bafcc                #  81    0xbb075  6      OPC=je_label_1     
  addq $0x4, %rbx            #  82    0xbb07b  4      OPC=addq_r64_imm8  
  testl %edx, %edx           #  83    0xbb07f  2      OPC=testl_r32_r32  
  jne .L_bb070               #  84    0xbb081  2      OPC=jne_label      
  jmpq .L_bb010              #  85    0xbb083  2      OPC=jmpq_label     
  nop                        #  86    0xbb085  1      OPC=nop            
  nop                        #  87    0xbb086  1      OPC=nop            
  nop                        #  88    0xbb087  1      OPC=nop            
.L_bb088:                    #        0xbb088  0      OPC=<label>        
  movl 0xc(%rbx), %edx       #  89    0xbb088  3      OPC=movl_r32_m32   
  addq $0xc, %rbx            #  90    0xbb08b  4      OPC=addq_r64_imm8  
  cmpl $0x5d, %edx           #  91    0xbb08f  3      OPC=cmpl_r32_imm8  
  jne .L_bb072               #  92    0xbb092  2      OPC=jne_label      
.L_bb094:                    #        0xbb094  0      OPC=<label>        
  movl 0x4(%rbx), %edx       #  93    0xbb094  3      OPC=movl_r32_m32   
  addq $0x4, %rbx            #  94    0xbb097  4      OPC=addq_r64_imm8  
  jmpq .L_bb072              #  95    0xbb09b  2      OPC=jmpq_label     
  nop                        #  96    0xbb09d  1      OPC=nop            
  nop                        #  97    0xbb09e  1      OPC=nop            
  nop                        #  98    0xbb09f  1      OPC=nop            
.L_bb0a0:                    #        0xbb0a0  0      OPC=<label>        
  leaq 0xaa0ad(%rip), %rdi   #  99    0xbb0a0  7      OPC=leaq_r64_m16   
  callq .getenv              #  100   0xbb0a7  5      OPC=callq_label    
  cmpq $0x1, %rax            #  101   0xbb0ac  4      OPC=cmpq_r64_imm8  
  sbbl %eax, %eax            #  102   0xbb0b0  2      OPC=sbbl_r32_r32   
  orl $0x1, %eax             #  103   0xbb0b2  3      OPC=orl_r32_imm8   
  movl %eax, 0x2e30b1(%rip)  #  104   0xbb0b5  6      OPC=movl_m32_r32   
  jmpq .L_bb04a              #  105   0xbb0bb  2      OPC=jmpq_label     
.L_bb0bd:                    #        0xbb0bd  0      OPC=<label>        
  leaq 0x8(%rbx), %rax       #  106   0xbb0bd  4      OPC=leaq_r64_m16   
  jmpq .L_bb013              #  107   0xbb0c1  5      OPC=jmpq_label_1   
  nop                        #  108   0xbb0c6  1      OPC=nop            
  nop                        #  109   0xbb0c7  1      OPC=nop            
  nop                        #  110   0xbb0c8  1      OPC=nop            
  nop                        #  111   0xbb0c9  1      OPC=nop            
  nop                        #  112   0xbb0ca  1      OPC=nop            
  nop                        #  113   0xbb0cb  1      OPC=nop            
  nop                        #  114   0xbb0cc  1      OPC=nop            
  nop                        #  115   0xbb0cd  1      OPC=nop            
  nop                        #  116   0xbb0ce  1      OPC=nop            
  nop                        #  117   0xbb0cf  1      OPC=nop            
                                                                         
.size end_wpattern, .-end_wpattern

