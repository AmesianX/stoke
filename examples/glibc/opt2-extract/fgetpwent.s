  .text
  .globl fgetpwent
  .type fgetpwent, @function

#! file-offset 0xb4870
#! rip-offset  0xb4870
#! capacity    480 bytes

# Text                               #  Line  RIP      Bytes  Opcode                
.fgetpwent:                          #        0xb4870  0      OPC=<label>           
  pushq %r15                         #  1     0xb4870  2      OPC=pushq_r64_1       
  pushq %r14                         #  2     0xb4872  2      OPC=pushq_r64_1       
  pushq %r13                         #  3     0xb4874  2      OPC=pushq_r64_1       
  pushq %r12                         #  4     0xb4876  2      OPC=pushq_r64_1       
  pushq %rbp                         #  5     0xb4878  1      OPC=pushq_r64_1       
  pushq %rbx                         #  6     0xb4879  1      OPC=pushq_r64_1       
  movq %rdi, %rbx                    #  7     0xb487a  3      OPC=movq_r64_r64      
  subq $0x38, %rsp                   #  8     0xb487d  4      OPC=subq_r64_imm8     
  leaq 0x20(%rsp), %rbp              #  9     0xb4881  5      OPC=leaq_r64_m16      
  movq %rbp, %rsi                    #  10    0xb4886  3      OPC=movq_r64_r64      
  callq ._IO_fgetpos64__GLIBC_2_2_5  #  11    0xb4889  5      OPC=callq_label       
  testl %eax, %eax                   #  12    0xb488e  2      OPC=testl_r32_r32     
  jne .L_b4a12                       #  13    0xb4890  6      OPC=jne_label_1       
  movl $0x1, %esi                    #  14    0xb4896  5      OPC=movl_r32_imm32    
  cmpl $0x0, 0x2ec35e(%rip)          #  15    0xb489b  7      OPC=cmpl_m32_imm8     
  je .L_b48b0                        #  16    0xb48a2  2      OPC=je_label          
  lock                               #  17    0xb48a4  1      OPC=lock              
  cmpxchgl %esi, 0x2e978c(%rip)      #  18    0xb48a5  7      OPC=cmpxchgl_m32_r32  
  nop                                #  19    0xb48ac  1      OPC=nop               
  jne .L_b48b9                       #  20    0xb48ad  2      OPC=jne_label         
  jmpq .L_b48d3                      #  21    0xb48af  2      OPC=jmpq_label        
.L_b48b0:                            #        0xb48b1  0      OPC=<label>           
  cmpxchgl %esi, 0x2e9781(%rip)      #  22    0xb48b1  7      OPC=cmpxchgl_m32_r32  
  je .L_b48d3                        #  23    0xb48b8  2      OPC=je_label          
.L_b48b9:                            #        0xb48ba  0      OPC=<label>           
  leaq 0x2e9778(%rip), %rdi          #  24    0xb48ba  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                   #  25    0xb48c1  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private     #  26    0xb48c8  5      OPC=callq_label       
  addq $0x80, %rsp                   #  27    0xb48cd  7      OPC=addq_r64_imm32    
.L_b48d3:                            #        0xb48d4  0      OPC=<label>           
  movq 0x2e7ff6(%rip), %rdx          #  28    0xb48d4  7      OPC=movq_r64_m64      
  testq %rdx, %rdx                   #  29    0xb48db  3      OPC=testq_r64_r64     
  je .L_b4a23                        #  30    0xb48de  6      OPC=je_label_1        
.L_b48e3:                            #        0xb48e4  0      OPC=<label>           
  movq 0x2e6596(%rip), %r13          #  31    0xb48e4  7      OPC=movq_r64_m64      
  leaq 0x18(%rsp), %r12              #  32    0xb48eb  5      OPC=leaq_r64_m16      
  jmpq .L_b4919                      #  33    0xb48f0  2      OPC=jmpq_label        
  nop                                #  34    0xb48f2  1      OPC=nop               
  nop                                #  35    0xb48f3  1      OPC=nop               
  nop                                #  36    0xb48f4  1      OPC=nop               
  nop                                #  37    0xb48f5  1      OPC=nop               
  nop                                #  38    0xb48f6  1      OPC=nop               
  nop                                #  39    0xb48f7  1      OPC=nop               
  nop                                #  40    0xb48f8  1      OPC=nop               
.L_b48f8:                            #        0xb48f9  0      OPC=<label>           
  movq %rbp, %rsi                    #  41    0xb48f9  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                    #  42    0xb48fc  3      OPC=movq_r64_r64      
  movq %rax, 0x2e7fcb(%rip)          #  43    0xb48ff  7      OPC=movq_m64_r64      
  callq ._IO_fsetpos64__GLIBC_2_2_5  #  44    0xb4906  5      OPC=callq_label       
  testl %eax, %eax                   #  45    0xb490b  2      OPC=testl_r32_r32     
  jne .L_b4a00                       #  46    0xb490d  6      OPC=jne_label_1       
  movq 0x2e7fb7(%rip), %rdx          #  47    0xb4913  7      OPC=movq_r64_m64      
.L_b4919:                            #        0xb491a  0      OPC=<label>           
  testq %rdx, %rdx                   #  48    0xb491a  3      OPC=testq_r64_r64     
  je .L_b49a0                        #  49    0xb491d  6      OPC=je_label_1        
  movq 0x2e9707(%rip), %rcx          #  50    0xb4923  7      OPC=movq_r64_m64      
  leaq 0x2e96d0(%rip), %rsi          #  51    0xb492a  7      OPC=leaq_r64_m16      
  movq %r12, %r8                     #  52    0xb4931  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                    #  53    0xb4934  3      OPC=movq_r64_r64      
  callq .fgetpwent_r                 #  54    0xb4937  5      OPC=callq_label       
  cmpl $0x22, %eax                   #  55    0xb493c  3      OPC=cmpl_r32_imm8     
  jne .L_b4990                       #  56    0xb493f  2      OPC=jne_label         
  movq 0x2e96e9(%rip), %rax          #  57    0xb4941  7      OPC=movq_r64_m64      
  movq 0x2e7f82(%rip), %r14          #  58    0xb4948  7      OPC=movq_r64_m64      
  leaq 0x400(%rax), %rsi             #  59    0xb494f  7      OPC=leaq_r64_m16      
  movq %r14, %rdi                    #  60    0xb4956  3      OPC=movq_r64_r64      
  movq %rsi, 0x2e96d1(%rip)          #  61    0xb4959  7      OPC=movq_m64_r64      
  callq .__tls_get_addr_plt          #  62    0xb4960  5      OPC=callq_label       
  testq %rax, %rax                   #  63    0xb4965  3      OPC=testq_r64_r64     
  jne .L_b48f8                       #  64    0xb4968  2      OPC=jne_label         
  movl (%r13), %r15d                 #  65    0xb496a  4      OPC=movl_r32_m32      
  nop                                #  66    0xb496e  1      OPC=nop               
  movq %r14, %rdi                    #  67    0xb496f  3      OPC=movq_r64_r64      
  movq %rax, 0x8(%rsp)               #  68    0xb4972  5      OPC=movq_m64_r64      
  callq .L_1f8c0                     #  69    0xb4977  5      OPC=callq_label       
  movq 0x8(%rsp), %rax               #  70    0xb497c  5      OPC=movq_r64_m64      
  movl %r15d, (%r13)                 #  71    0xb4981  4      OPC=movl_m32_r32      
  nop                                #  72    0xb4985  1      OPC=nop               
  jmpq .L_b48f8                      #  73    0xb4986  5      OPC=jmpq_label_1      
  nop                                #  74    0xb498b  1      OPC=nop               
  nop                                #  75    0xb498c  1      OPC=nop               
  nop                                #  76    0xb498d  1      OPC=nop               
  nop                                #  77    0xb498e  1      OPC=nop               
  nop                                #  78    0xb498f  1      OPC=nop               
  nop                                #  79    0xb4990  1      OPC=nop               
.L_b4990:                            #        0xb4991  0      OPC=<label>           
  cmpq $0x0, 0x2e7f38(%rip)          #  80    0xb4991  8      OPC=cmpq_m64_imm8     
  jne .L_b49a9                       #  81    0xb4999  2      OPC=jne_label         
  nop                                #  82    0xb499b  1      OPC=nop               
  nop                                #  83    0xb499c  1      OPC=nop               
  nop                                #  84    0xb499d  1      OPC=nop               
  nop                                #  85    0xb499e  1      OPC=nop               
  nop                                #  86    0xb499f  1      OPC=nop               
  nop                                #  87    0xb49a0  1      OPC=nop               
.L_b49a0:                            #        0xb49a1  0      OPC=<label>           
  movq $0x0, 0x18(%rsp)              #  88    0xb49a1  9      OPC=movq_m64_imm32    
.L_b49a9:                            #        0xb49aa  0      OPC=<label>           
  movl (%r13), %edx                  #  89    0xb49aa  4      OPC=movl_r32_m32      
  nop                                #  90    0xb49ae  1      OPC=nop               
  cmpl $0x0, 0x2ec24b(%rip)          #  91    0xb49af  7      OPC=cmpl_m32_imm8     
  je .L_b49c2                        #  92    0xb49b6  2      OPC=je_label          
  lock                               #  93    0xb49b8  1      OPC=lock              
  decl 0x2e967a(%rip)                #  94    0xb49b9  6      OPC=decl_m32          
  nop                                #  95    0xb49bf  1      OPC=nop               
  jne .L_b49ca                       #  96    0xb49c0  2      OPC=jne_label         
  jmpq .L_b49e4                      #  97    0xb49c2  2      OPC=jmpq_label        
.L_b49c2:                            #        0xb49c4  0      OPC=<label>           
  decl 0x2e9670(%rip)                #  98    0xb49c4  6      OPC=decl_m32          
  je .L_b49e4                        #  99    0xb49ca  2      OPC=je_label          
.L_b49ca:                            #        0xb49cc  0      OPC=<label>           
  leaq 0x2e9667(%rip), %rdi          #  100   0xb49cc  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                   #  101   0xb49d3  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private   #  102   0xb49da  5      OPC=callq_label       
  addq $0x80, %rsp                   #  103   0xb49df  7      OPC=addq_r64_imm32    
.L_b49e4:                            #        0xb49e6  0      OPC=<label>           
  movl %edx, (%r13)                  #  104   0xb49e6  4      OPC=movl_m32_r32      
  nop                                #  105   0xb49ea  1      OPC=nop               
  movq 0x18(%rsp), %rax              #  106   0xb49eb  5      OPC=movq_r64_m64      
  addq $0x38, %rsp                   #  107   0xb49f0  4      OPC=addq_r64_imm8     
  popq %rbx                          #  108   0xb49f4  1      OPC=popq_r64_1        
  popq %rbp                          #  109   0xb49f5  1      OPC=popq_r64_1        
  popq %r12                          #  110   0xb49f6  2      OPC=popq_r64_1        
  popq %r13                          #  111   0xb49f8  2      OPC=popq_r64_1        
  popq %r14                          #  112   0xb49fa  2      OPC=popq_r64_1        
  popq %r15                          #  113   0xb49fc  2      OPC=popq_r64_1        
  retq                               #  114   0xb49fe  1      OPC=retq              
  nop                                #  115   0xb49ff  1      OPC=nop               
  nop                                #  116   0xb4a00  1      OPC=nop               
  nop                                #  117   0xb4a01  1      OPC=nop               
.L_b4a00:                            #        0xb4a02  0      OPC=<label>           
  movq $0x0, 0x2e7ec5(%rip)          #  118   0xb4a02  11     OPC=movq_m64_imm32    
  xorl %edx, %edx                    #  119   0xb4a0d  2      OPC=xorl_r32_r32      
  jmpq .L_b4919                      #  120   0xb4a0f  5      OPC=jmpq_label_1      
.L_b4a12:                            #        0xb4a14  0      OPC=<label>           
  addq $0x38, %rsp                   #  121   0xb4a14  4      OPC=addq_r64_imm8     
  xorl %eax, %eax                    #  122   0xb4a18  2      OPC=xorl_r32_r32      
  popq %rbx                          #  123   0xb4a1a  1      OPC=popq_r64_1        
  popq %rbp                          #  124   0xb4a1b  1      OPC=popq_r64_1        
  popq %r12                          #  125   0xb4a1c  2      OPC=popq_r64_1        
  popq %r13                          #  126   0xb4a1e  2      OPC=popq_r64_1        
  popq %r14                          #  127   0xb4a20  2      OPC=popq_r64_1        
  popq %r15                          #  128   0xb4a22  2      OPC=popq_r64_1        
  retq                               #  129   0xb4a24  1      OPC=retq              
.L_b4a23:                            #        0xb4a25  0      OPC=<label>           
  movl $0x400, %edi                  #  130   0xb4a25  5      OPC=movl_r32_imm32    
  movq $0x400, 0x2e95fd(%rip)        #  131   0xb4a2a  11     OPC=movq_m64_imm32    
  callq .memalign_plt                #  132   0xb4a35  5      OPC=callq_label       
  movq %rax, 0x2e7e91(%rip)          #  133   0xb4a3a  7      OPC=movq_m64_r64      
  movq %rax, %rdx                    #  134   0xb4a41  3      OPC=movq_r64_r64      
  jmpq .L_b48e3                      #  135   0xb4a44  5      OPC=jmpq_label_1      
  nop                                #  136   0xb4a49  1      OPC=nop               
  nop                                #  137   0xb4a4a  1      OPC=nop               
  nop                                #  138   0xb4a4b  1      OPC=nop               
  nop                                #  139   0xb4a4c  1      OPC=nop               
  nop                                #  140   0xb4a4d  1      OPC=nop               
  nop                                #  141   0xb4a4e  1      OPC=nop               
  nop                                #  142   0xb4a4f  1      OPC=nop               
  nop                                #  143   0xb4a50  1      OPC=nop               
  nop                                #  144   0xb4a51  1      OPC=nop               
                                                                                    
.size fgetpwent, .-fgetpwent

