  .text
  .globl malloc_info
  .type malloc_info, @function

#! file-offset 0x7a770
#! rip-offset  0x7a770
#! capacity    1152 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
.malloc_info:                       #        0x7a770  0      OPC=<label>           
  testl %edi, %edi                  #  1     0x7a770  2      OPC=testl_r32_r32     
  movl $0x16, %eax                  #  2     0x7a772  5      OPC=movl_r32_imm32    
  je .L_7a780                       #  3     0x7a777  2      OPC=je_label          
  retq                              #  4     0x7a779  1      OPC=retq              
  nop                               #  5     0x7a77a  1      OPC=nop               
  nop                               #  6     0x7a77b  1      OPC=nop               
  nop                               #  7     0x7a77c  1      OPC=nop               
  nop                               #  8     0x7a77d  1      OPC=nop               
  nop                               #  9     0x7a77e  1      OPC=nop               
  nop                               #  10    0x7a77f  1      OPC=nop               
.L_7a780:                           #        0x7a780  0      OPC=<label>           
  pushq %r15                        #  11    0x7a780  2      OPC=pushq_r64_1       
  pushq %r14                        #  12    0x7a782  2      OPC=pushq_r64_1       
  pushq %r13                        #  13    0x7a784  2      OPC=pushq_r64_1       
  pushq %r12                        #  14    0x7a786  2      OPC=pushq_r64_1       
  pushq %rbp                        #  15    0x7a788  1      OPC=pushq_r64_1       
  pushq %rbx                        #  16    0x7a789  1      OPC=pushq_r64_1       
  movq %rsi, %rbx                   #  17    0x7a78a  3      OPC=movq_r64_r64      
  subq $0x1198, %rsp                #  18    0x7a78d  7      OPC=subq_r64_imm32    
  movl 0x320a2a(%rip), %ecx         #  19    0x7a794  6      OPC=movl_r32_m32      
  testl %ecx, %ecx                  #  20    0x7a79a  2      OPC=testl_r32_r32     
  js .L_7abe5                       #  21    0x7a79c  6      OPC=js_label_1        
.L_7a7a2:                           #        0x7a7a2  0      OPC=<label>           
  leaq 0xea316(%rip), %rdi          #  22    0x7a7a2  7      OPC=leaq_r64_m16      
  movq %rbx, %rsi                   #  23    0x7a7a9  3      OPC=movq_r64_r64      
  leaq 0x32148d(%rip), %r13         #  24    0x7a7ac  7      OPC=leaq_r64_m16      
  callq ._IO_fputs                  #  25    0x7a7b3  5      OPC=callq_label       
  leaq 0x70(%rsp), %rax             #  26    0x7a7b8  5      OPC=leaq_r64_m16      
  movq $0x0, 0x10(%rsp)             #  27    0x7a7bd  9      OPC=movq_m64_imm32    
  movq $0x0, 0x8(%rsp)              #  28    0x7a7c6  9      OPC=movq_m64_imm32    
  movq $0x0, 0x48(%rsp)             #  29    0x7a7cf  9      OPC=movq_m64_imm32    
  movq $0x0, 0x40(%rsp)             #  30    0x7a7d8  9      OPC=movq_m64_imm32    
  xorl %edx, %edx                   #  31    0x7a7e1  2      OPC=xorl_r32_r32      
  movq %rax, 0x18(%rsp)             #  32    0x7a7e3  5      OPC=movq_m64_r64      
  leaq 0x1b8(%rsp), %rax            #  33    0x7a7e8  8      OPC=leaq_r64_m16      
  movq $0x0, 0x38(%rsp)             #  34    0x7a7f0  9      OPC=movq_m64_imm32    
  movq $0x0, 0x30(%rsp)             #  35    0x7a7f9  9      OPC=movq_m64_imm32    
  movq $0x0, 0x28(%rsp)             #  36    0x7a802  9      OPC=movq_m64_imm32    
  movq $0x0, 0x20(%rsp)             #  37    0x7a80b  9      OPC=movq_m64_imm32    
  movq %rax, 0x68(%rsp)             #  38    0x7a814  5      OPC=movq_m64_r64      
.L_7a819:                           #        0x7a819  0      OPC=<label>           
  leal 0x1(%rdx), %eax              #  39    0x7a819  3      OPC=leal_r32_m16      
  leaq 0xea2b2(%rip), %rsi          #  40    0x7a81c  7      OPC=leaq_r64_m16      
  movq %rbx, %rdi                   #  41    0x7a823  3      OPC=movq_r64_r64      
  movl %eax, 0x64(%rsp)             #  42    0x7a826  4      OPC=movl_m32_r32      
  xorl %eax, %eax                   #  43    0x7a82a  2      OPC=xorl_r32_r32      
  callq .fprintf                    #  44    0x7a82c  5      OPC=callq_label       
  movl $0x1, %esi                   #  45    0x7a831  5      OPC=movl_r32_imm32    
  xorl %eax, %eax                   #  46    0x7a836  2      OPC=xorl_r32_r32      
  cmpl $0x0, 0x3263c1(%rip)         #  47    0x7a838  7      OPC=cmpl_m32_imm8     
  je .L_7a84b                       #  48    0x7a83f  2      OPC=je_label          
  lock                              #  49    0x7a841  1      OPC=lock              
  cmpxchgl %esi, (%r13)             #  50    0x7a842  5      OPC=cmpxchgl_m32_r32  
  nop                               #  51    0x7a847  1      OPC=nop               
  jne .L_7a852                      #  52    0x7a848  2      OPC=jne_label         
  jmpq .L_7a869                     #  53    0x7a84a  2      OPC=jmpq_label        
.L_7a84b:                           #        0x7a84c  0      OPC=<label>           
  cmpxchgl %esi, (%r13)             #  54    0x7a84c  5      OPC=cmpxchgl_m32_r32  
  je .L_7a869                       #  55    0x7a851  2      OPC=je_label          
.L_7a852:                           #        0x7a853  0      OPC=<label>           
  leaq (%r13), %rdi                 #  56    0x7a853  4      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  57    0x7a857  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  58    0x7a85e  5      OPC=callq_label       
  addq $0x80, %rsp                  #  59    0x7a863  7      OPC=addq_r64_imm32    
.L_7a869:                           #        0x7a86a  0      OPC=<label>           
  movq 0x18(%rsp), %rax             #  60    0x7a86a  5      OPC=movq_r64_m64      
  movq 0x68(%rsp), %r10             #  61    0x7a86f  5      OPC=movq_r64_m64      
  leaq 0x8(%r13), %rdi              #  62    0x7a874  4      OPC=leaq_r64_m16      
  xorl %r9d, %r9d                   #  63    0x7a878  3      OPC=xorl_r32_r32      
  xorl %r8d, %r8d                   #  64    0x7a87b  3      OPC=xorl_r32_r32      
  leaq 0x8(%rax), %rcx              #  65    0x7a87e  4      OPC=leaq_r64_m16      
  nop                               #  66    0x7a882  1      OPC=nop               
  nop                               #  67    0x7a883  1      OPC=nop               
  nop                               #  68    0x7a884  1      OPC=nop               
  nop                               #  69    0x7a885  1      OPC=nop               
  nop                               #  70    0x7a886  1      OPC=nop               
  nop                               #  71    0x7a887  1      OPC=nop               
  nop                               #  72    0x7a888  1      OPC=nop               
.L_7a888:                           #        0x7a889  0      OPC=<label>           
  movq (%rdi), %rax                 #  73    0x7a889  3      OPC=movq_r64_m64      
  testq %rax, %rax                  #  74    0x7a88c  3      OPC=testq_r64_r64     
  je .L_7ab68                       #  75    0x7a88f  6      OPC=je_label_1        
  movq 0x8(%rax), %rsi              #  76    0x7a895  4      OPC=movq_r64_m64      
  xorl %edx, %edx                   #  77    0x7a899  2      OPC=xorl_r32_r32      
  andq $0xf8, %rsi                  #  78    0x7a89b  4      OPC=andq_r64_imm8     
  xchgw %ax, %ax                    #  79    0x7a89f  2      OPC=xchgw_ax_r16      
.L_7a8a0:                           #        0x7a8a1  0      OPC=<label>           
  movq 0x10(%rax), %rax             #  80    0x7a8a1  4      OPC=movq_r64_m64      
  addq $0x1, %rdx                   #  81    0x7a8a5  4      OPC=addq_r64_imm8     
  testq %rax, %rax                  #  82    0x7a8a9  3      OPC=testq_r64_r64     
  jne .L_7a8a0                      #  83    0x7a8ac  2      OPC=jne_label         
  movq %rdx, %rax                   #  84    0x7a8ae  3      OPC=movq_r64_r64      
  addq %rdx, %r8                    #  85    0x7a8b1  3      OPC=addq_r64_r64      
  movq %rsi, (%rcx)                 #  86    0x7a8b4  3      OPC=movq_m64_r64      
  imulq %rsi, %rax                  #  87    0x7a8b7  4      OPC=imulq_r64_r64     
  movq %rdx, 0x10(%rcx)             #  88    0x7a8bb  4      OPC=movq_m64_r64      
  addq %rax, %r9                    #  89    0x7a8bf  3      OPC=addq_r64_r64      
  leaq -0xf(%rsi), %rax             #  90    0x7a8c2  4      OPC=leaq_r64_m16      
  movq %rax, -0x8(%rcx)             #  91    0x7a8c6  4      OPC=movq_m64_r64      
.L_7a8c9:                           #        0x7a8ca  0      OPC=<label>           
  movq %rdx, %rax                   #  92    0x7a8ca  3      OPC=movq_r64_r64      
  addq $0x20, %rcx                  #  93    0x7a8cd  4      OPC=addq_r64_imm8     
  addq $0x8, %rdi                   #  94    0x7a8d1  4      OPC=addq_r64_imm8     
  imulq -0x20(%rcx), %rax           #  95    0x7a8d5  5      OPC=imulq_r64_m64     
  movq %rax, -0x18(%rcx)            #  96    0x7a8da  4      OPC=movq_m64_r64      
  cmpq %r10, %rcx                   #  97    0x7a8de  3      OPC=cmpq_r64_r64      
  jne .L_7a888                      #  98    0x7a8e1  2      OPC=jne_label         
  movq 0x18(%rsp), %rax             #  99    0x7a8e3  5      OPC=movq_r64_m64      
  leaq 0x58(%r13), %r10             #  100   0x7a8e8  4      OPC=leaq_r64_m16      
  leaq 0x1190(%rsp), %r11           #  101   0x7a8ec  8      OPC=leaq_r64_m16      
  movq %r8, 0x50(%rsp)              #  102   0x7a8f4  5      OPC=movq_m64_r64      
  movq %r9, 0x58(%rsp)              #  103   0x7a8f9  5      OPC=movq_m64_r64      
  xorl %r8d, %r8d                   #  104   0x7a8fe  3      OPC=xorl_r32_r32      
  xorl %r14d, %r14d                 #  105   0x7a901  3      OPC=xorl_r32_r32      
  leaq 0x140(%rax), %rdi            #  106   0x7a904  7      OPC=leaq_r64_m16      
  nop                               #  107   0x7a90b  1      OPC=nop               
  nop                               #  108   0x7a90c  1      OPC=nop               
  nop                               #  109   0x7a90d  1      OPC=nop               
  nop                               #  110   0x7a90e  1      OPC=nop               
  nop                               #  111   0x7a90f  1      OPC=nop               
  nop                               #  112   0x7a910  1      OPC=nop               
.L_7a910:                           #        0x7a911  0      OPC=<label>           
  movq 0x10(%r10), %rdx             #  113   0x7a911  4      OPC=movq_r64_m64      
  movq $0xffffffff, (%rdi)          #  114   0x7a915  7      OPC=movq_m64_imm32    
  movq $0x0, 0x18(%rdi)             #  115   0x7a91c  8      OPC=movq_m64_imm32    
  movq $0x0, 0x10(%rdi)             #  116   0x7a924  8      OPC=movq_m64_imm32    
  movq $0x0, 0x8(%rdi)              #  117   0x7a92c  8      OPC=movq_m64_imm32    
  testq %rdx, %rdx                  #  118   0x7a934  3      OPC=testq_r64_r64     
  je .L_7a984                       #  119   0x7a937  2      OPC=je_label          
  cmpq %rdx, %r10                   #  120   0x7a939  3      OPC=cmpq_r64_r64      
  je .L_7a984                       #  121   0x7a93c  2      OPC=je_label          
  xorl %r9d, %r9d                   #  122   0x7a93e  3      OPC=xorl_r32_r32      
  movq $0xffffffff, %rsi            #  123   0x7a941  7      OPC=movq_r64_imm32    
  movl $0x1, %ebp                   #  124   0x7a948  5      OPC=movl_r32_imm32    
  xorl %ecx, %ecx                   #  125   0x7a94d  2      OPC=xorl_r32_r32      
  jmpq .L_7a953                     #  126   0x7a94f  2      OPC=jmpq_label        
.L_7a950:                           #        0x7a951  0      OPC=<label>           
  movq %rax, %rbp                   #  127   0x7a951  3      OPC=movq_r64_r64      
.L_7a953:                           #        0x7a954  0      OPC=<label>           
  movq 0x8(%rdx), %rax              #  128   0x7a954  4      OPC=movq_r64_m64      
  movq 0x10(%rdx), %rdx             #  129   0x7a958  4      OPC=movq_r64_m64      
  addq %rax, %r9                    #  130   0x7a95c  3      OPC=addq_r64_r64      
  cmpq %rax, %rsi                   #  131   0x7a95f  3      OPC=cmpq_r64_r64      
  cmovaq %rax, %rsi                 #  132   0x7a962  4      OPC=cmovaq_r64_r64    
  cmpq %rax, %rcx                   #  133   0x7a966  3      OPC=cmpq_r64_r64      
  cmovbq %rax, %rcx                 #  134   0x7a969  4      OPC=cmovbq_r64_r64    
  cmpq %rdx, %r10                   #  135   0x7a96d  3      OPC=cmpq_r64_r64      
  leaq 0x1(%rbp), %rax              #  136   0x7a970  4      OPC=leaq_r64_m16      
  jne .L_7a950                      #  137   0x7a974  2      OPC=jne_label         
  movq %rbp, 0x18(%rdi)             #  138   0x7a976  4      OPC=movq_m64_r64      
  movq %r9, 0x10(%rdi)              #  139   0x7a97a  4      OPC=movq_m64_r64      
  movq %rsi, (%rdi)                 #  140   0x7a97e  3      OPC=movq_m64_r64      
  movq %rcx, 0x8(%rdi)              #  141   0x7a981  4      OPC=movq_m64_r64      
.L_7a984:                           #        0x7a985  0      OPC=<label>           
  movq 0x18(%rdi), %rax             #  142   0x7a985  4      OPC=movq_r64_m64      
  testq %rax, %rax                  #  143   0x7a989  3      OPC=testq_r64_r64     
  jne .L_7a994                      #  144   0x7a98c  2      OPC=jne_label         
  movq $0x0, (%rdi)                 #  145   0x7a98e  7      OPC=movq_m64_imm32    
.L_7a994:                           #        0x7a995  0      OPC=<label>           
  movq %r8, %r15                    #  146   0x7a995  3      OPC=movq_r64_r64      
  addq 0x10(%rdi), %r15             #  147   0x7a998  4      OPC=addq_r64_m64      
  addq $0x20, %rdi                  #  148   0x7a99c  4      OPC=addq_r64_imm8     
  addq %rax, %r14                   #  149   0x7a9a0  3      OPC=addq_r64_r64      
  addq $0x10, %r10                  #  150   0x7a9a3  4      OPC=addq_r64_imm8     
  cmpq %r11, %rdi                   #  151   0x7a9a7  3      OPC=cmpq_r64_r64      
  movq %r15, %r8                    #  152   0x7a9aa  3      OPC=movq_r64_r64      
  jne .L_7a910                      #  153   0x7a9ad  6      OPC=jne_label_1       
  cmpl $0x0, 0x326247(%rip)         #  154   0x7a9b3  7      OPC=cmpl_m32_imm8     
  je .L_7a9c4                       #  155   0x7a9ba  2      OPC=je_label          
  lock                              #  156   0x7a9bc  1      OPC=lock              
  decl (%r13)                       #  157   0x7a9bd  4      OPC=decl_m32          
  nop                               #  158   0x7a9c1  1      OPC=nop               
  jne .L_7a9ca                      #  159   0x7a9c2  2      OPC=jne_label         
  jmpq .L_7a9e1                     #  160   0x7a9c4  2      OPC=jmpq_label        
.L_7a9c4:                           #        0x7a9c6  0      OPC=<label>           
  decl (%r13)                       #  161   0x7a9c6  4      OPC=decl_m32          
  je .L_7a9e1                       #  162   0x7a9ca  2      OPC=je_label          
.L_7a9ca:                           #        0x7a9cc  0      OPC=<label>           
  leaq (%r13), %rdi                 #  163   0x7a9cc  4      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  164   0x7a9d0  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  165   0x7a9d7  5      OPC=callq_label       
  addq $0x80, %rsp                  #  166   0x7a9dc  7      OPC=addq_r64_imm32    
.L_7a9e1:                           #        0x7a9e3  0      OPC=<label>           
  movq 0x18(%rsp), %rax             #  167   0x7a9e3  5      OPC=movq_r64_m64      
  movq 0x50(%rsp), %rdi             #  168   0x7a9e8  5      OPC=movq_r64_m64      
  xorl %ebp, %ebp                   #  169   0x7a9ed  2      OPC=xorl_r32_r32      
  addq %rdi, 0x28(%rsp)             #  170   0x7a9ef  5      OPC=addq_m64_r64      
  addq %r14, 0x20(%rsp)             #  171   0x7a9f4  5      OPC=addq_m64_r64      
  movq 0x58(%rsp), %rdi             #  172   0x7a9f9  5      OPC=movq_r64_m64      
  addq %r15, 0x30(%rsp)             #  173   0x7a9fe  5      OPC=addq_m64_r64      
  addq %rdi, 0x38(%rsp)             #  174   0x7aa03  5      OPC=addq_m64_r64      
  leaq 0x18(%rax), %r12             #  175   0x7aa08  4      OPC=leaq_r64_m16      
  nop                               #  176   0x7aa0c  1      OPC=nop               
  nop                               #  177   0x7aa0d  1      OPC=nop               
  nop                               #  178   0x7aa0e  1      OPC=nop               
  nop                               #  179   0x7aa0f  1      OPC=nop               
  nop                               #  180   0x7aa10  1      OPC=nop               
  nop                               #  181   0x7aa11  1      OPC=nop               
.L_7aa10:                           #        0x7aa12  0      OPC=<label>           
  movq (%r12), %r9                  #  182   0x7aa12  4      OPC=movq_r64_m64      
  testq %r9, %r9                    #  183   0x7aa16  3      OPC=testq_r64_r64     
  je .L_7aa3f                       #  184   0x7aa19  2      OPC=je_label          
  cmpq $0xa, %rbp                   #  185   0x7aa1b  4      OPC=cmpq_r64_imm8     
  je .L_7aa3f                       #  186   0x7aa1f  2      OPC=je_label          
  movq -0x10(%r12), %rcx            #  187   0x7aa21  5      OPC=movq_r64_m64      
  movq -0x18(%r12), %rdx            #  188   0x7aa26  5      OPC=movq_r64_m64      
  leaq 0xedb60(%rip), %rsi          #  189   0x7aa2b  7      OPC=leaq_r64_m16      
  movq -0x8(%r12), %r8              #  190   0x7aa32  5      OPC=movq_r64_m64      
  movq %rbx, %rdi                   #  191   0x7aa37  3      OPC=movq_r64_r64      
  xorl %eax, %eax                   #  192   0x7aa3a  2      OPC=xorl_r32_r32      
  callq .fprintf                    #  193   0x7aa3c  5      OPC=callq_label       
.L_7aa3f:                           #        0x7aa41  0      OPC=<label>           
  addq $0x1, %rbp                   #  194   0x7aa41  4      OPC=addq_r64_imm8     
  addq $0x20, %r12                  #  195   0x7aa45  4      OPC=addq_r64_imm8     
  cmpq $0x89, %rbp                  #  196   0x7aa49  7      OPC=cmpq_r64_imm32    
  jne .L_7aa10                      #  197   0x7aa50  2      OPC=jne_label         
  movq 0x1c8(%rsp), %r9             #  198   0x7aa52  8      OPC=movq_r64_m64      
  testq %r9, %r9                    #  199   0x7aa5a  3      OPC=testq_r64_r64     
  jne .L_7ab86                      #  200   0x7aa5d  6      OPC=jne_label_1       
.L_7aa61:                           #        0x7aa63  0      OPC=<label>           
  movq 0x880(%r13), %rax            #  201   0x7aa63  7      OPC=movq_r64_m64      
  movq 0x888(%r13), %rdx            #  202   0x7aa6a  7      OPC=movq_r64_m64      
  leaq 0xedba2(%rip), %rsi          #  203   0x7aa71  7      OPC=leaq_r64_m16      
  addq %rax, 0x40(%rsp)             #  204   0x7aa78  5      OPC=addq_m64_r64      
  addq %rdx, 0x48(%rsp)             #  205   0x7aa7d  5      OPC=addq_m64_r64      
  movq %r15, %r9                    #  206   0x7aa82  3      OPC=movq_r64_r64      
  movq %r14, %r8                    #  207   0x7aa85  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                   #  208   0x7aa88  3      OPC=movq_r64_r64      
  pushq %rdx                        #  209   0x7aa8b  1      OPC=pushq_r64_1       
  pushq %rax                        #  210   0x7aa8c  1      OPC=pushq_r64_1       
  xorl %eax, %eax                   #  211   0x7aa8d  2      OPC=xorl_r32_r32      
  movq 0x68(%rsp), %rcx             #  212   0x7aa8f  5      OPC=movq_r64_m64      
  movq 0x60(%rsp), %rdx             #  213   0x7aa94  5      OPC=movq_r64_m64      
  callq .fprintf                    #  214   0x7aa99  5      OPC=callq_label       
  popq %rax                         #  215   0x7aa9e  1      OPC=popq_r64_1        
  leaq 0x32119c(%rip), %rax         #  216   0x7aa9f  7      OPC=leaq_r64_m16      
  popq %rdx                         #  217   0x7aaa6  1      OPC=popq_r64_1        
  cmpq %rax, %r13                   #  218   0x7aaa7  3      OPC=cmpq_r64_r64      
  je .L_7abb4                       #  219   0x7aaaa  6      OPC=je_label_1        
  movq 0x58(%r13), %rbp             #  220   0x7aab0  4      OPC=movq_r64_m64      
  leaq 0xedc07(%rip), %rsi          #  221   0x7aab4  7      OPC=leaq_r64_m16      
  movq %rbx, %rdi                   #  222   0x7aabb  3      OPC=movq_r64_r64      
  xorl %eax, %eax                   #  223   0x7aabe  2      OPC=xorl_r32_r32      
  andq $0xfc000000, %rbp            #  224   0x7aac0  7      OPC=andq_r64_imm32    
  movq 0x18(%rbp), %rcx             #  225   0x7aac7  4      OPC=movq_r64_m64      
  movq 0x10(%rbp), %rdx             #  226   0x7aacb  4      OPC=movq_r64_m64      
  callq .fprintf                    #  227   0x7aacf  5      OPC=callq_label       
  movq 0x10(%rbp), %rdi             #  228   0x7aad4  4      OPC=movq_r64_m64      
  addq %rdi, 0x8(%rsp)              #  229   0x7aad8  5      OPC=addq_m64_r64      
  movq 0x18(%rbp), %rdi             #  230   0x7aadd  4      OPC=movq_r64_m64      
  addq %rdi, 0x10(%rsp)             #  231   0x7aae1  5      OPC=addq_m64_r64      
.L_7aae4:                           #        0x7aae6  0      OPC=<label>           
  leaq 0xea002(%rip), %rdi          #  232   0x7aae6  7      OPC=leaq_r64_m16      
  movq %rbx, %rsi                   #  233   0x7aaed  3      OPC=movq_r64_r64      
  callq ._IO_fputs                  #  234   0x7aaf0  5      OPC=callq_label       
  movq 0x868(%r13), %r13            #  235   0x7aaf5  7      OPC=movq_r64_m64      
  leaq 0x32113f(%rip), %rax         #  236   0x7aafc  7      OPC=leaq_r64_m16      
  movl 0x64(%rsp), %edx             #  237   0x7ab03  4      OPC=movl_r32_m32      
  cmpq %rax, %r13                   #  238   0x7ab07  3      OPC=cmpq_r64_r64      
  jne .L_7a819                      #  239   0x7ab0a  6      OPC=jne_label_1       
  movl 0x320714(%rip), %eax         #  240   0x7ab10  6      OPC=movl_r32_m32      
  pushq 0x10(%rsp)                  #  241   0x7ab16  4      OPC=pushq_m64         
  leaq 0xedbe9(%rip), %rsi          #  242   0x7ab1a  7      OPC=leaq_r64_m16      
  pushq 0x10(%rsp)                  #  243   0x7ab21  4      OPC=pushq_m64         
  pushq 0x58(%rsp)                  #  244   0x7ab25  4      OPC=pushq_m64         
  movq %rbx, %rdi                   #  245   0x7ab29  3      OPC=movq_r64_r64      
  pushq 0x58(%rsp)                  #  246   0x7ab2c  4      OPC=pushq_m64         
  pushq 0x320704(%rip)              #  247   0x7ab30  6      OPC=pushq_m64         
  pushq %rax                        #  248   0x7ab36  1      OPC=pushq_r64_1       
  movq 0x60(%rsp), %r9              #  249   0x7ab37  5      OPC=movq_r64_m64      
  xorl %eax, %eax                   #  250   0x7ab3c  2      OPC=xorl_r32_r32      
  movq 0x50(%rsp), %r8              #  251   0x7ab3e  5      OPC=movq_r64_m64      
  movq 0x68(%rsp), %rcx             #  252   0x7ab43  5      OPC=movq_r64_m64      
  movq 0x58(%rsp), %rdx             #  253   0x7ab48  5      OPC=movq_r64_m64      
  callq .fprintf                    #  254   0x7ab4d  5      OPC=callq_label       
  addq $0x11c8, %rsp                #  255   0x7ab52  7      OPC=addq_r64_imm32    
  xorl %eax, %eax                   #  256   0x7ab59  2      OPC=xorl_r32_r32      
  popq %rbx                         #  257   0x7ab5b  1      OPC=popq_r64_1        
  popq %rbp                         #  258   0x7ab5c  1      OPC=popq_r64_1        
  popq %r12                         #  259   0x7ab5d  2      OPC=popq_r64_1        
  popq %r13                         #  260   0x7ab5f  2      OPC=popq_r64_1        
  popq %r14                         #  261   0x7ab61  2      OPC=popq_r64_1        
  popq %r15                         #  262   0x7ab63  2      OPC=popq_r64_1        
  retq                              #  263   0x7ab65  1      OPC=retq              
  nop                               #  264   0x7ab66  1      OPC=nop               
  nop                               #  265   0x7ab67  1      OPC=nop               
  nop                               #  266   0x7ab68  1      OPC=nop               
  nop                               #  267   0x7ab69  1      OPC=nop               
.L_7ab68:                           #        0x7ab6a  0      OPC=<label>           
  movq $0x0, 0x10(%rcx)             #  268   0x7ab6a  8      OPC=movq_m64_imm32    
  movq $0x0, (%rcx)                 #  269   0x7ab72  7      OPC=movq_m64_imm32    
  xorl %edx, %edx                   #  270   0x7ab79  2      OPC=xorl_r32_r32      
  movq $0x0, -0x8(%rcx)             #  271   0x7ab7b  8      OPC=movq_m64_imm32    
  jmpq .L_7a8c9                     #  272   0x7ab83  5      OPC=jmpq_label_1      
.L_7ab86:                           #        0x7ab88  0      OPC=<label>           
  movq 0x1c0(%rsp), %r8             #  273   0x7ab88  8      OPC=movq_r64_m64      
  movq 0x1b8(%rsp), %rcx            #  274   0x7ab90  8      OPC=movq_r64_m64      
  leaq 0xeda3b(%rip), %rsi          #  275   0x7ab98  7      OPC=leaq_r64_m16      
  movq 0x1b0(%rsp), %rdx            #  276   0x7ab9f  8      OPC=movq_r64_m64      
  movq %rbx, %rdi                   #  277   0x7aba7  3      OPC=movq_r64_r64      
  xorl %eax, %eax                   #  278   0x7abaa  2      OPC=xorl_r32_r32      
  callq .fprintf                    #  279   0x7abac  5      OPC=callq_label       
  jmpq .L_7aa61                     #  280   0x7abb1  5      OPC=jmpq_label_1      
.L_7abb4:                           #        0x7abb6  0      OPC=<label>           
  movq 0x880(%r13), %rdx            #  281   0x7abb6  7      OPC=movq_r64_m64      
  leaq 0xedafe(%rip), %rsi          #  282   0x7abbd  7      OPC=leaq_r64_m16      
  movq %rbx, %rdi                   #  283   0x7abc4  3      OPC=movq_r64_r64      
  xorl %eax, %eax                   #  284   0x7abc7  2      OPC=xorl_r32_r32      
  movq %rdx, %rcx                   #  285   0x7abc9  3      OPC=movq_r64_r64      
  callq .fprintf                    #  286   0x7abcc  5      OPC=callq_label       
  movq 0x880(%r13), %rax            #  287   0x7abd1  7      OPC=movq_r64_m64      
  addq %rax, 0x8(%rsp)              #  288   0x7abd8  5      OPC=addq_m64_r64      
  addq %rax, 0x10(%rsp)             #  289   0x7abdd  5      OPC=addq_m64_r64      
  jmpq .L_7aae4                     #  290   0x7abe2  5      OPC=jmpq_label_1      
.L_7abe5:                           #        0x7abe7  0      OPC=<label>           
  callq .ptmalloc_init_part_7       #  291   0x7abe7  5      OPC=callq_label       
  jmpq .L_7a7a2                     #  292   0x7abec  5      OPC=jmpq_label_1      
  nop                               #  293   0x7abf1  1      OPC=nop               
                                                                                   
.size malloc_info, .-malloc_info

