  .text
  .globl argp_default_parser
  .type argp_default_parser, @function

#! file-offset 0xf1500
#! rip-offset  0xf1500
#! capacity    320 bytes

# Text                       #  Line  RIP      Bytes  Opcode               
.argp_default_parser:        #        0xf1500  0      OPC=<label>          
  pushq %rbp                 #  1     0xf1500  1      OPC=pushq_r64_1      
  pushq %rbx                 #  2     0xf1501  1      OPC=pushq_r64_1      
  movq %rdx, %rbx            #  3     0xf1502  3      OPC=movq_r64_r64     
  subq $0x8, %rsp            #  4     0xf1505  4      OPC=subq_r64_imm8    
  cmpl $0xfffffffd, %edi     #  5     0xf1509  6      OPC=cmpl_r32_imm32   
  nop                        #  6     0xf150f  1      OPC=nop              
  nop                        #  7     0xf1510  1      OPC=nop              
  nop                        #  8     0xf1511  1      OPC=nop              
  je .L_f1608                #  9     0xf1512  6      OPC=je_label_1       
  movq %rsi, %rbp            #  10    0xf1518  3      OPC=movq_r64_r64     
  jle .L_f15a0               #  11    0xf151b  6      OPC=jle_label_1      
  cmpl $0xfffffffe, %edi     #  12    0xf1521  6      OPC=cmpl_r32_imm32   
  nop                        #  13    0xf1527  1      OPC=nop              
  nop                        #  14    0xf1528  1      OPC=nop              
  nop                        #  15    0xf1529  1      OPC=nop              
  je .L_f1548                #  16    0xf152a  2      OPC=je_label         
  cmpl $0x3f, %edi           #  17    0xf152c  3      OPC=cmpl_r32_imm8    
  jne .L_f15f8               #  18    0xf152f  6      OPC=jne_label_1      
  movq 0x50(%rdx), %rsi      #  19    0xf1535  4      OPC=movq_r64_m64     
  movq %rbx, %rdi            #  20    0xf1539  3      OPC=movq_r64_r64     
  movl $0x27a, %edx          #  21    0xf153c  5      OPC=movl_r32_imm32   
  callq .argp_state_help     #  22    0xf1541  5      OPC=callq_label      
  addq $0x8, %rsp            #  23    0xf1546  4      OPC=addq_r64_imm8    
  xorl %eax, %eax            #  24    0xf154a  2      OPC=xorl_r32_r32     
  popq %rbx                  #  25    0xf154c  1      OPC=popq_r64_1       
  popq %rbp                  #  26    0xf154d  1      OPC=popq_r64_1       
  retq                       #  27    0xf154e  1      OPC=retq             
  nop                        #  28    0xf154f  1      OPC=nop              
  nop                        #  29    0xf1550  1      OPC=nop              
  nop                        #  30    0xf1551  1      OPC=nop              
  nop                        #  31    0xf1552  1      OPC=nop              
  nop                        #  32    0xf1553  1      OPC=nop              
.L_f1548:                    #        0xf1554  0      OPC=<label>          
  movq 0x2a9a49(%rip), %rax  #  33    0xf1554  7      OPC=movq_r64_m64     
  movq %rbp, %rdi            #  34    0xf155b  3      OPC=movq_r64_r64     
  movq %rsi, (%rax)          #  35    0xf155e  3      OPC=movq_m64_r64     
  movl $0x2f, %esi           #  36    0xf1561  5      OPC=movl_r32_imm32   
  callq .strrchr             #  37    0xf1566  5      OPC=callq_label      
  testq %rax, %rax           #  38    0xf156b  3      OPC=testq_r64_r64    
  movq %rax, 0x40(%rbx)      #  39    0xf156e  4      OPC=movq_m64_r64     
  je .L_f1628                #  40    0xf1572  6      OPC=je_label_1       
  addq $0x1, %rax            #  41    0xf1578  4      OPC=addq_r64_imm8    
  movq %rax, 0x40(%rbx)      #  42    0xf157c  4      OPC=movq_m64_r64     
.L_f1574:                    #        0xf1580  0      OPC=<label>          
  movq 0x2a99c5(%rip), %rdx  #  43    0xf1580  7      OPC=movq_r64_m64     
  movq %rax, (%rdx)          #  44    0xf1587  3      OPC=movq_m64_r64     
  movl 0x1c(%rbx), %eax      #  45    0xf158a  3      OPC=movl_r32_m32     
  andl $0x3, %eax            #  46    0xf158d  3      OPC=andl_r32_imm8    
  cmpl $0x1, %eax            #  47    0xf1590  3      OPC=cmpl_r32_imm8    
  jne .L_f1590               #  48    0xf1593  2      OPC=jne_label        
  movq 0x10(%rbx), %rax      #  49    0xf1595  4      OPC=movq_r64_m64     
  movq %rbp, (%rax)          #  50    0xf1599  3      OPC=movq_m64_r64     
.L_f1590:                    #        0xf159c  0      OPC=<label>          
  xorl %eax, %eax            #  51    0xf159c  2      OPC=xorl_r32_r32     
.L_f1592:                    #        0xf159e  0      OPC=<label>          
  addq $0x8, %rsp            #  52    0xf159e  4      OPC=addq_r64_imm8    
  popq %rbx                  #  53    0xf15a2  1      OPC=popq_r64_1       
  popq %rbp                  #  54    0xf15a3  1      OPC=popq_r64_1       
  retq                       #  55    0xf15a4  1      OPC=retq             
  nop                        #  56    0xf15a5  1      OPC=nop              
  nop                        #  57    0xf15a6  1      OPC=nop              
  nop                        #  58    0xf15a7  1      OPC=nop              
  nop                        #  59    0xf15a8  1      OPC=nop              
  nop                        #  60    0xf15a9  1      OPC=nop              
  nop                        #  61    0xf15aa  1      OPC=nop              
  nop                        #  62    0xf15ab  1      OPC=nop              
.L_f15a0:                    #        0xf15ac  0      OPC=<label>          
  cmpl $0xfffffffc, %edi     #  63    0xf15ac  6      OPC=cmpl_r32_imm32   
  nop                        #  64    0xf15b2  1      OPC=nop              
  nop                        #  65    0xf15b3  1      OPC=nop              
  nop                        #  66    0xf15b4  1      OPC=nop              
  jne .L_f15f8               #  67    0xf15b5  2      OPC=jne_label        
  leaq 0x74b86(%rip), %rdi   #  68    0xf15b7  7      OPC=leaq_r64_m16     
  testq %rsi, %rsi           #  69    0xf15be  3      OPC=testq_r64_r64    
  movl $0xa, %edx            #  70    0xf15c1  5      OPC=movl_r32_imm32   
  cmovneq %rsi, %rdi         #  71    0xf15c6  4      OPC=cmovneq_r64_r64  
  xorl %esi, %esi            #  72    0xf15ca  2      OPC=xorl_r32_r32     
  callq .strtol              #  73    0xf15cc  5      OPC=callq_label      
  movl %eax, 0x2ad61f(%rip)  #  74    0xf15d1  6      OPC=movl_m32_r32     
  jmpq .L_f15da              #  75    0xf15d7  2      OPC=jmpq_label       
  nop                        #  76    0xf15d9  1      OPC=nop              
  nop                        #  77    0xf15da  1      OPC=nop              
  nop                        #  78    0xf15db  1      OPC=nop              
  nop                        #  79    0xf15dc  1      OPC=nop              
  nop                        #  80    0xf15dd  1      OPC=nop              
  nop                        #  81    0xf15de  1      OPC=nop              
  nop                        #  82    0xf15df  1      OPC=nop              
  nop                        #  83    0xf15e0  1      OPC=nop              
  nop                        #  84    0xf15e1  1      OPC=nop              
.L_f15d0:                    #        0xf15e2  0      OPC=<label>          
  movl $0x1, %edi            #  85    0xf15e2  5      OPC=movl_r32_imm32   
  callq .sleep               #  86    0xf15e7  5      OPC=callq_label      
.L_f15da:                    #        0xf15ec  0      OPC=<label>          
  movl 0x2ad604(%rip), %eax  #  87    0xf15ec  6      OPC=movl_r32_m32     
  leal -0x1(%rax), %edx      #  88    0xf15f2  3      OPC=leal_r32_m16     
  testl %eax, %eax           #  89    0xf15f5  2      OPC=testl_r32_r32    
  movl %edx, 0x2ad5f9(%rip)  #  90    0xf15f7  6      OPC=movl_m32_r32     
  jg .L_f15d0                #  91    0xf15fd  2      OPC=jg_label         
  xorl %eax, %eax            #  92    0xf15ff  2      OPC=xorl_r32_r32     
  jmpq .L_f1592              #  93    0xf1601  2      OPC=jmpq_label       
  nop                        #  94    0xf1603  1      OPC=nop              
  nop                        #  95    0xf1604  1      OPC=nop              
  nop                        #  96    0xf1605  1      OPC=nop              
  nop                        #  97    0xf1606  1      OPC=nop              
  nop                        #  98    0xf1607  1      OPC=nop              
  nop                        #  99    0xf1608  1      OPC=nop              
  nop                        #  100   0xf1609  1      OPC=nop              
.L_f15f8:                    #        0xf160a  0      OPC=<label>          
  addq $0x8, %rsp            #  101   0xf160a  4      OPC=addq_r64_imm8    
  movl $0x7, %eax            #  102   0xf160e  5      OPC=movl_r32_imm32   
  popq %rbx                  #  103   0xf1613  1      OPC=popq_r64_1       
  popq %rbp                  #  104   0xf1614  1      OPC=popq_r64_1       
  retq                       #  105   0xf1615  1      OPC=retq             
  nop                        #  106   0xf1616  1      OPC=nop              
  nop                        #  107   0xf1617  1      OPC=nop              
  nop                        #  108   0xf1618  1      OPC=nop              
  nop                        #  109   0xf1619  1      OPC=nop              
.L_f1608:                    #        0xf161a  0      OPC=<label>          
  movq 0x50(%rdx), %rsi      #  110   0xf161a  4      OPC=movq_r64_m64     
  movq %rbx, %rdi            #  111   0xf161e  3      OPC=movq_r64_r64     
  movl $0x201, %edx          #  112   0xf1621  5      OPC=movl_r32_imm32   
  callq .argp_state_help     #  113   0xf1626  5      OPC=callq_label      
  addq $0x8, %rsp            #  114   0xf162b  4      OPC=addq_r64_imm8    
  xorl %eax, %eax            #  115   0xf162f  2      OPC=xorl_r32_r32     
  popq %rbx                  #  116   0xf1631  1      OPC=popq_r64_1       
  popq %rbp                  #  117   0xf1632  1      OPC=popq_r64_1       
  retq                       #  118   0xf1633  1      OPC=retq             
  nop                        #  119   0xf1634  1      OPC=nop              
  nop                        #  120   0xf1635  1      OPC=nop              
  nop                        #  121   0xf1636  1      OPC=nop              
  nop                        #  122   0xf1637  1      OPC=nop              
  nop                        #  123   0xf1638  1      OPC=nop              
  nop                        #  124   0xf1639  1      OPC=nop              
.L_f1628:                    #        0xf163a  0      OPC=<label>          
  movq %rbp, 0x40(%rbx)      #  125   0xf163a  4      OPC=movq_m64_r64     
  movq %rbp, %rax            #  126   0xf163e  3      OPC=movq_r64_r64     
  jmpq .L_f1574              #  127   0xf1641  5      OPC=jmpq_label_1     
  nop                        #  128   0xf1646  1      OPC=nop              
  nop                        #  129   0xf1647  1      OPC=nop              
  nop                        #  130   0xf1648  1      OPC=nop              
  nop                        #  131   0xf1649  1      OPC=nop              
  nop                        #  132   0xf164a  1      OPC=nop              
  nop                        #  133   0xf164b  1      OPC=nop              
  nop                        #  134   0xf164c  1      OPC=nop              
  nop                        #  135   0xf164d  1      OPC=nop              
  nop                        #  136   0xf164e  1      OPC=nop              
  nop                        #  137   0xf164f  1      OPC=nop              
  nop                        #  138   0xf1650  1      OPC=nop              
  nop                        #  139   0xf1651  1      OPC=nop              
                                                                           
.size argp_default_parser, .-argp_default_parser

