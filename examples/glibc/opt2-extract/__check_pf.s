  .text
  .globl __check_pf
  .type __check_pf, @function

#! file-offset 0x101620
#! rip-offset  0x101620
#! capacity    1952 bytes

# Text                                 #  Line  RIP       Bytes  Opcode                
.__check_pf:                           #        0x101620  0      OPC=<label>           
  pushq %rbp                           #  1     0x101620  1      OPC=pushq_r64_1       
  xorl %eax, %eax                      #  2     0x101621  2      OPC=xorl_r32_r32      
  movq %rsp, %rbp                      #  3     0x101623  3      OPC=movq_r64_r64      
  pushq %r15                           #  4     0x101626  2      OPC=pushq_r64_1       
  pushq %r14                           #  5     0x101628  2      OPC=pushq_r64_1       
  pushq %r13                           #  6     0x10162a  2      OPC=pushq_r64_1       
  pushq %r12                           #  7     0x10162c  2      OPC=pushq_r64_1       
  movq %rcx, %r14                      #  8     0x10162e  3      OPC=movq_r64_r64      
  pushq %rbx                           #  9     0x101631  1      OPC=pushq_r64_1       
  subq $0x118, %rsp                    #  10    0x101632  7      OPC=subq_r64_imm32    
  movq %rsi, -0xe0(%rbp)               #  11    0x101639  7      OPC=movq_m64_r64      
  movq $0x0, (%rdx)                    #  12    0x101640  7      OPC=movq_m64_imm32    
  movq %rdi, -0xd8(%rbp)               #  13    0x101647  7      OPC=movq_m64_r64      
  movq %rdx, -0xe8(%rbp)               #  14    0x10164e  7      OPC=movq_m64_r64      
  movl $0x1, %esi                      #  15    0x101655  5      OPC=movl_r32_imm32    
  movq $0x0, (%rcx)                    #  16    0x10165a  7      OPC=movq_m64_imm32    
  cmpl $0x0, 0x29f598(%rip)            #  17    0x101661  7      OPC=cmpl_m32_imm8     
  je .L_101676                         #  18    0x101668  2      OPC=je_label          
  lock                                 #  19    0x10166a  1      OPC=lock              
  cmpxchgl %esi, 0x29e5be(%rip)        #  20    0x10166b  7      OPC=cmpxchgl_m32_r32  
  nop                                  #  21    0x101672  1      OPC=nop               
  jne .L_10167f                        #  22    0x101673  2      OPC=jne_label         
  jmpq .L_101699                       #  23    0x101675  2      OPC=jmpq_label        
.L_101676:                             #        0x101677  0      OPC=<label>           
  cmpxchgl %esi, 0x29e5b3(%rip)        #  24    0x101677  7      OPC=cmpxchgl_m32_r32  
  je .L_101699                         #  25    0x10167e  2      OPC=je_label          
.L_10167f:                             #        0x101680  0      OPC=<label>           
  leaq 0x29e5aa(%rip), %rdi            #  26    0x101680  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                     #  27    0x101687  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private       #  28    0x10168e  5      OPC=callq_label       
  addq $0x80, %rsp                     #  29    0x101693  7      OPC=addq_r64_imm32    
.L_101699:                             #        0x10169a  0      OPC=<label>           
  cmpq $0x0, 0x29e597(%rip)            #  30    0x10169a  8      OPC=cmpq_m64_imm8     
  je .L_1016b0                         #  31    0x1016a2  2      OPC=je_label          
  callq .__nscd_get_nl_timestamp       #  32    0x1016a4  5      OPC=callq_label       
  testl %eax, %eax                     #  33    0x1016a9  2      OPC=testl_r32_r32     
  jne .L_1017d8                        #  34    0x1016ab  6      OPC=jne_label_1       
.L_1016b0:                             #        0x1016b1  0      OPC=<label>           
  xorl %edx, %edx                      #  35    0x1016b1  2      OPC=xorl_r32_r32      
  movl $0x3, %esi                      #  36    0x1016b3  5      OPC=movl_r32_imm32    
  movl $0x10, %edi                     #  37    0x1016b8  5      OPC=movl_r32_imm32    
  callq .__socket                      #  38    0x1016bd  5      OPC=callq_label       
  xorl %r13d, %r13d                    #  39    0x1016c2  3      OPC=xorl_r32_r32      
  xorl %edx, %edx                      #  40    0x1016c5  2      OPC=xorl_r32_r32      
  testl %eax, %eax                     #  41    0x1016c7  2      OPC=testl_r32_r32     
  movl %eax, %r12d                     #  42    0x1016c9  3      OPC=movl_r32_r32      
  js .L_10173b                         #  43    0x1016cc  2      OPC=js_label          
  leaq -0xc0(%rbp), %rbx               #  44    0x1016ce  7      OPC=leaq_r64_m16      
  movl $0x10, %eax                     #  45    0x1016d5  5      OPC=movl_r32_imm32    
  movl $0xc, %edx                      #  46    0x1016da  5      OPC=movl_r32_imm32    
  movl %r12d, %edi                     #  47    0x1016df  3      OPC=movl_r32_r32      
  movq $0x0, -0xc0(%rbp)               #  48    0x1016e2  11     OPC=movq_m64_imm32    
  movl $0x0, -0xb8(%rbp)               #  49    0x1016ed  10     OPC=movl_m32_imm32    
  movq %rbx, %rsi                      #  50    0x1016f7  3      OPC=movq_r64_r64      
  movw %ax, -0xc0(%rbp)                #  51    0x1016fa  7      OPC=movw_m16_r16      
  movl $0xc, -0xc4(%rbp)               #  52    0x101701  10     OPC=movl_m32_imm32    
  callq .bind                          #  53    0x10170b  5      OPC=callq_label       
  testl %eax, %eax                     #  54    0x101710  2      OPC=testl_r32_r32     
  je .L_101810                         #  55    0x101712  6      OPC=je_label_1        
.L_101717:                             #        0x101718  0      OPC=<label>           
  xorl %r13d, %r13d                    #  56    0x101718  3      OPC=xorl_r32_r32      
.L_10171a:                             #        0x10171b  0      OPC=<label>           
  movslq %r12d, %rdi                   #  57    0x10171b  3      OPC=movslq_r64_r32    
  movl $0x3, %eax                      #  58    0x10171e  5      OPC=movl_r32_imm32    
  syscall                              #  59    0x101723  2      OPC=syscall           
  testq %r13, %r13                     #  60    0x101725  3      OPC=testq_r64_r64     
  je .L_101cc8                         #  61    0x101728  6      OPC=je_label_1        
  movq 0x29e504(%rip), %rdx            #  62    0x10172e  7      OPC=movq_r64_m64      
  movq %r13, 0x29e4fd(%rip)            #  63    0x101735  7      OPC=movq_m64_r64      
.L_10173b:                             #        0x10173c  0      OPC=<label>           
  cmpl $0x0, 0x29f4be(%rip)            #  64    0x10173c  7      OPC=cmpl_m32_imm8     
  je .L_10174f                         #  65    0x101743  2      OPC=je_label          
  lock                                 #  66    0x101745  1      OPC=lock              
  decl 0x29e4e5(%rip)                  #  67    0x101746  6      OPC=decl_m32          
  nop                                  #  68    0x10174c  1      OPC=nop               
  jne .L_101757                        #  69    0x10174d  2      OPC=jne_label         
  jmpq .L_101771                       #  70    0x10174f  2      OPC=jmpq_label        
.L_10174f:                             #        0x101751  0      OPC=<label>           
  decl 0x29e4db(%rip)                  #  71    0x101751  6      OPC=decl_m32          
  je .L_101771                         #  72    0x101757  2      OPC=je_label          
.L_101757:                             #        0x101759  0      OPC=<label>           
  leaq 0x29e4d2(%rip), %rdi            #  73    0x101759  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                     #  74    0x101760  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private     #  75    0x101767  5      OPC=callq_label       
  addq $0x80, %rsp                     #  76    0x10176c  7      OPC=addq_r64_imm32    
.L_101771:                             #        0x101773  0      OPC=<label>           
  testq %r13, %r13                     #  77    0x101773  3      OPC=testq_r64_r64     
  je .L_101a80                         #  78    0x101776  6      OPC=je_label_1        
  movzbl 0x8(%r13), %eax               #  79    0x10177c  5      OPC=movzbl_r32_m8     
  movq -0xd8(%rbp), %rbx               #  80    0x101781  7      OPC=movq_r64_m64      
  leaq 0x18(%r13), %r8                 #  81    0x101788  4      OPC=leaq_r64_m16      
  testq %rdx, %rdx                     #  82    0x10178c  3      OPC=testq_r64_r64     
  movb %al, (%rbx)                     #  83    0x10178f  2      OPC=movb_m8_r8        
  movzbl 0x9(%r13), %eax               #  84    0x101791  5      OPC=movzbl_r32_m8     
  movq -0xe0(%rbp), %rbx               #  85    0x101796  7      OPC=movq_r64_m64      
  movb %al, (%rbx)                     #  86    0x10179d  2      OPC=movb_m8_r8        
  movq 0x10(%r13), %rax                #  87    0x10179f  4      OPC=movq_r64_m64      
  movq %rax, (%r14)                    #  88    0x1017a3  3      OPC=movq_m64_r64      
  movq -0xe8(%rbp), %rax               #  89    0x1017a6  7      OPC=movq_r64_m64      
  movq %r8, (%rax)                     #  90    0x1017ad  3      OPC=movq_m64_r64      
  je .L_1017c3                         #  91    0x1017b0  2      OPC=je_label          
  movl 0x4(%rdx), %eax                 #  92    0x1017b2  3      OPC=movl_r32_m32      
  testl %eax, %eax                     #  93    0x1017b5  2      OPC=testl_r32_r32     
  je .L_1017c3                         #  94    0x1017b7  2      OPC=je_label          
  lock                                 #  95    0x1017b9  1      OPC=lock              
  addl $0xffffffff, 0x4(%rdx)          #  96    0x1017ba  7      OPC=addl_m32_imm32    
  nop                                  #  97    0x1017c1  1      OPC=nop               
  nop                                  #  98    0x1017c2  1      OPC=nop               
  nop                                  #  99    0x1017c3  1      OPC=nop               
  nop                                  #  100   0x1017c4  1      OPC=nop               
  nop                                  #  101   0x1017c5  1      OPC=nop               
  sete %al                             #  102   0x1017c6  3      OPC=sete_r8           
  testb %al, %al                       #  103   0x1017c9  2      OPC=testb_r8_r8       
  jne .L_1017f8                        #  104   0x1017cb  2      OPC=jne_label         
.L_1017c3:                             #        0x1017cd  0      OPC=<label>           
  leaq -0x28(%rbp), %rsp               #  105   0x1017cd  4      OPC=leaq_r64_m16      
  popq %rbx                            #  106   0x1017d1  1      OPC=popq_r64_1        
  popq %r12                            #  107   0x1017d2  2      OPC=popq_r64_1        
  popq %r13                            #  108   0x1017d4  2      OPC=popq_r64_1        
  popq %r14                            #  109   0x1017d6  2      OPC=popq_r64_1        
  popq %r15                            #  110   0x1017d8  2      OPC=popq_r64_1        
  popq %rbp                            #  111   0x1017da  1      OPC=popq_r64_1        
  retq                                 #  112   0x1017db  1      OPC=retq              
  nop                                  #  113   0x1017dc  1      OPC=nop               
  nop                                  #  114   0x1017dd  1      OPC=nop               
  nop                                  #  115   0x1017de  1      OPC=nop               
  nop                                  #  116   0x1017df  1      OPC=nop               
  nop                                  #  117   0x1017e0  1      OPC=nop               
  nop                                  #  118   0x1017e1  1      OPC=nop               
.L_1017d8:                             #        0x1017e2  0      OPC=<label>           
  movq 0x29e459(%rip), %r13            #  119   0x1017e2  7      OPC=movq_r64_m64      
  cmpl (%r13), %eax                    #  120   0x1017e9  4      OPC=cmpl_r32_m32      
  jne .L_1016b0                        #  121   0x1017ed  6      OPC=jne_label_1       
  lock                                 #  122   0x1017f3  1      OPC=lock              
  incl 0x4(%r13)                       #  123   0x1017f4  4      OPC=incl_m32          
  nop                                  #  124   0x1017f8  1      OPC=nop               
  xorl %edx, %edx                      #  125   0x1017f9  2      OPC=xorl_r32_r32      
  jmpq .L_10173b                       #  126   0x1017fb  5      OPC=jmpq_label_1      
  nop                                  #  127   0x101800  1      OPC=nop               
  nop                                  #  128   0x101801  1      OPC=nop               
  nop                                  #  129   0x101802  1      OPC=nop               
.L_1017f8:                             #        0x101803  0      OPC=<label>           
  movq %rdx, %rdi                      #  130   0x101803  3      OPC=movq_r64_r64      
  callq .L_1f8c0                       #  131   0x101806  5      OPC=callq_label       
  leaq -0x28(%rbp), %rsp               #  132   0x10180b  4      OPC=leaq_r64_m16      
  popq %rbx                            #  133   0x10180f  1      OPC=popq_r64_1        
  popq %r12                            #  134   0x101810  2      OPC=popq_r64_1        
  popq %r13                            #  135   0x101812  2      OPC=popq_r64_1        
  popq %r14                            #  136   0x101814  2      OPC=popq_r64_1        
  popq %r15                            #  137   0x101816  2      OPC=popq_r64_1        
  popq %rbp                            #  138   0x101818  1      OPC=popq_r64_1        
  retq                                 #  139   0x101819  1      OPC=retq              
  nop                                  #  140   0x10181a  1      OPC=nop               
.L_101810:                             #        0x10181b  0      OPC=<label>           
  leaq -0xc4(%rbp), %rdx               #  141   0x10181b  7      OPC=leaq_r64_m16      
  movq %rbx, %rsi                      #  142   0x101822  3      OPC=movq_r64_r64      
  movl %r12d, %edi                     #  143   0x101825  3      OPC=movl_r32_r32      
  callq .getsockname                   #  144   0x101828  5      OPC=callq_label       
  testl %eax, %eax                     #  145   0x10182d  2      OPC=testl_r32_r32     
  jne .L_101717                        #  146   0x10182f  6      OPC=jne_label_1       
  movl -0xbc(%rbp), %eax               #  147   0x101835  6      OPC=movl_r32_m32      
  movl $0x16, %r10d                    #  148   0x10183b  6      OPC=movl_r32_imm32    
  movl $0x301, %r11d                   #  149   0x101841  6      OPC=movl_r32_imm32    
  xorl %edi, %edi                      #  150   0x101847  2      OPC=xorl_r32_r32      
  movq %rsp, -0x128(%rbp)              #  151   0x101849  7      OPC=movq_m64_r64      
  movl $0x14, -0x90(%rbp)              #  152   0x101850  10     OPC=movl_m32_imm32    
  movw %r10w, -0x8c(%rbp)              #  153   0x10185a  8      OPC=movw_m16_r16      
  movw %r11w, -0x8a(%rbp)              #  154   0x101862  8      OPC=movw_m16_r16      
  leaq -0x90(%rbp), %rbx               #  155   0x10186a  7      OPC=leaq_r64_m16      
  movl %eax, %r15d                     #  156   0x101871  3      OPC=movl_r32_r32      
  movl $0x0, -0x84(%rbp)               #  157   0x101874  10     OPC=movl_m32_imm32    
  xorl %r13d, %r13d                    #  158   0x10187e  3      OPC=xorl_r32_r32      
  callq .L_1f8d0                       #  159   0x101881  5      OPC=callq_label       
  movl %eax, -0x88(%rbp)               #  160   0x101886  6      OPC=movl_m32_r32      
  movl $0x10, %eax                     #  161   0x10188c  5      OPC=movl_r32_imm32    
  movq $0x0, -0xb0(%rbp)               #  162   0x101891  11     OPC=movq_m64_imm32    
  movw %ax, -0xb0(%rbp)                #  163   0x10189c  7      OPC=movw_m16_r16      
  leaq -0xb0(%rbp), %rax               #  164   0x1018a3  7      OPC=leaq_r64_m16      
  subq $0x1000, %rsp                   #  165   0x1018aa  7      OPC=subq_r64_imm32    
  movw %r13w, -0x7f(%rbp)              #  166   0x1018b1  5      OPC=movw_m16_r16      
  movb $0x0, -0x80(%rbp)               #  167   0x1018b6  4      OPC=movb_m8_imm8      
  movb $0x0, 0x13(%rbx)                #  168   0x1018ba  4      OPC=movb_m8_imm8      
  movl $0x0, -0xa8(%rbp)               #  169   0x1018be  10     OPC=movl_m32_imm32    
  movq %rax, %r13                      #  170   0x1018c8  3      OPC=movq_r64_r64      
  movq %rsp, -0x108(%rbp)              #  171   0x1018cb  7      OPC=movq_m64_r64      
  movq %rsp, -0xa0(%rbp)               #  172   0x1018d2  7      OPC=movq_m64_r64      
  movq $0x1000, -0x98(%rbp)            #  173   0x1018d9  11     OPC=movq_m64_imm32    
  movq %rax, -0xf0(%rbp)               #  174   0x1018e4  7      OPC=movq_m64_r64      
  jmpq .L_1018f9                       #  175   0x1018eb  2      OPC=jmpq_label        
  nop                                  #  176   0x1018ed  1      OPC=nop               
  nop                                  #  177   0x1018ee  1      OPC=nop               
  nop                                  #  178   0x1018ef  1      OPC=nop               
  nop                                  #  179   0x1018f0  1      OPC=nop               
  nop                                  #  180   0x1018f1  1      OPC=nop               
  nop                                  #  181   0x1018f2  1      OPC=nop               
.L_1018e8:                             #        0x1018f3  0      OPC=<label>           
  movq 0x299591(%rip), %rax            #  182   0x1018f3  7      OPC=movq_r64_m64      
  cmpl $0x4, (%rax)                    #  183   0x1018fa  3      OPC=cmpl_m32_imm8     
  nop                                  #  184   0x1018fd  1      OPC=nop               
  jne .L_101cea                        #  185   0x1018fe  6      OPC=jne_label_1       
.L_1018f9:                             #        0x101904  0      OPC=<label>           
  xorl %ecx, %ecx                      #  186   0x101904  2      OPC=xorl_r32_r32      
  movl $0xc, %r9d                      #  187   0x101906  6      OPC=movl_r32_imm32    
  movq %r13, %r8                       #  188   0x10190c  3      OPC=movq_r64_r64      
  movl $0x14, %edx                     #  189   0x10190f  5      OPC=movl_r32_imm32    
  movq %rbx, %rsi                      #  190   0x101914  3      OPC=movq_r64_r64      
  movl %r12d, %edi                     #  191   0x101917  3      OPC=movl_r32_r32      
  callq .sendto                        #  192   0x10191a  5      OPC=callq_label       
  cmpq $0xff, %rax                     #  193   0x10191f  4      OPC=cmpq_r64_imm8     
  je .L_1018e8                         #  194   0x101923  2      OPC=je_label          
  testq %rax, %rax                     #  195   0x101925  3      OPC=testq_r64_r64     
  js .L_101cea                         #  196   0x101928  6      OPC=js_label_1        
  leaq -0xa0(%rbp), %rax               #  197   0x10192e  7      OPC=leaq_r64_m16      
  movb $0x0, -0x119(%rbp)              #  198   0x101935  7      OPC=movb_m8_imm8      
  movb $0x0, -0x11a(%rbp)              #  199   0x10193c  7      OPC=movb_m8_imm8      
  movq $0x20, -0x118(%rbp)             #  200   0x101943  11     OPC=movq_m64_imm32    
  movq $0x0, -0x110(%rbp)              #  201   0x10194e  11     OPC=movq_m64_imm32    
  xorl %r13d, %r13d                    #  202   0x101959  3      OPC=xorl_r32_r32      
  movq %rax, -0xf8(%rbp)               #  203   0x10195c  7      OPC=movq_m64_r64      
  leaq -0x70(%rbp), %rax               #  204   0x101963  4      OPC=leaq_r64_m16      
  movq %rax, %rbx                      #  205   0x101967  3      OPC=movq_r64_r64      
  nop                                  #  206   0x10196a  1      OPC=nop               
.L_101960:                             #        0x10196b  0      OPC=<label>           
  movq -0xf0(%rbp), %rax               #  207   0x10196b  7      OPC=movq_r64_m64      
  movl $0xc, -0x68(%rbp)               #  208   0x101972  7      OPC=movl_m32_imm32    
  movq $0x1, -0x58(%rbp)               #  209   0x101979  8      OPC=movq_m64_imm32    
  movq $0x0, -0x50(%rbp)               #  210   0x101981  8      OPC=movq_m64_imm32    
  movq $0x0, -0x48(%rbp)               #  211   0x101989  8      OPC=movq_m64_imm32    
  movl $0x0, -0x40(%rbp)               #  212   0x101991  7      OPC=movl_m32_imm32    
  movq %rax, -0x70(%rbp)               #  213   0x101998  4      OPC=movq_m64_r64      
  movq -0xf8(%rbp), %rax               #  214   0x10199c  7      OPC=movq_r64_m64      
  movq %rax, -0x60(%rbp)               #  215   0x1019a3  4      OPC=movq_m64_r64      
  jmpq .L_1019b1                       #  216   0x1019a7  2      OPC=jmpq_label        
  xchgw %ax, %ax                       #  217   0x1019a9  2      OPC=xchgw_ax_r16      
.L_1019a0:                             #        0x1019ab  0      OPC=<label>           
  movq 0x2994d9(%rip), %rdx            #  218   0x1019ab  7      OPC=movq_r64_m64      
  cmpl $0x4, (%rdx)                    #  219   0x1019b2  3      OPC=cmpl_m32_imm8     
  nop                                  #  220   0x1019b5  1      OPC=nop               
  jne .L_101b00                        #  221   0x1019b6  6      OPC=jne_label_1       
.L_1019b1:                             #        0x1019bc  0      OPC=<label>           
  xorl %edx, %edx                      #  222   0x1019bc  2      OPC=xorl_r32_r32      
  movq %rbx, %rsi                      #  223   0x1019be  3      OPC=movq_r64_r64      
  movl %r12d, %edi                     #  224   0x1019c1  3      OPC=movl_r32_r32      
  callq .recvmsg                       #  225   0x1019c4  5      OPC=callq_label       
  cmpq $0xff, %rax                     #  226   0x1019c9  4      OPC=cmpq_r64_imm8     
  je .L_1019a0                         #  227   0x1019cd  2      OPC=je_label          
  movq %rax, %rsi                      #  228   0x1019cf  3      OPC=movq_r64_r64      
  movl %r12d, %edi                     #  229   0x1019d2  3      OPC=movl_r32_r32      
  movq %rax, -0x100(%rbp)              #  230   0x1019d5  7      OPC=movq_m64_r64      
  callq .__netlink_assert_response     #  231   0x1019dc  5      OPC=callq_label       
  movq -0x100(%rbp), %rdx              #  232   0x1019e1  7      OPC=movq_r64_m64      
  testq %rdx, %rdx                     #  233   0x1019e8  3      OPC=testq_r64_r64     
  js .L_101b0b                         #  234   0x1019eb  6      OPC=js_label_1        
  testb $0x20, -0x40(%rbp)             #  235   0x1019f1  4      OPC=testb_m8_imm8     
  jne .L_101b0b                        #  236   0x1019f5  6      OPC=jne_label_1       
  cmpq $0xf, %rdx                      #  237   0x1019fb  4      OPC=cmpq_r64_imm8     
  jle .L_101960                        #  238   0x1019ff  6      OPC=jle_label_1       
  movq -0x108(%rbp), %rcx              #  239   0x101a05  7      OPC=movq_r64_m64      
  movl (%rcx), %eax                    #  240   0x101a0c  2      OPC=movl_r32_m32      
  cmpl $0xf, %eax                      #  241   0x101a0e  3      OPC=cmpl_r32_imm8     
  jbe .L_101960                        #  242   0x101a11  6      OPC=jbe_label_1       
  cmpq %rdx, %rax                      #  243   0x101a17  3      OPC=cmpq_r64_r64      
  ja .L_101960                         #  244   0x101a1a  6      OPC=ja_label_1        
  xorl %r11d, %r11d                    #  245   0x101a20  3      OPC=xorl_r32_r32      
  movq %rax, %rsi                      #  246   0x101a23  3      OPC=movq_r64_r64      
  jmpq .L_101a40                       #  247   0x101a26  2      OPC=jmpq_label        
  nop                                  #  248   0x101a28  1      OPC=nop               
  nop                                  #  249   0x101a29  1      OPC=nop               
  nop                                  #  250   0x101a2a  1      OPC=nop               
.L_101a20:                             #        0x101a2b  0      OPC=<label>           
  movl (%rcx), %eax                    #  251   0x101a2b  2      OPC=movl_r32_m32      
  addl $0x3, %eax                      #  252   0x101a2d  3      OPC=addl_r32_imm8     
  andl $0xfffffffc, %eax               #  253   0x101a30  6      OPC=andl_r32_imm32    
  nop                                  #  254   0x101a36  1      OPC=nop               
  nop                                  #  255   0x101a37  1      OPC=nop               
  nop                                  #  256   0x101a38  1      OPC=nop               
  subq %rax, %rdx                      #  257   0x101a39  3      OPC=subq_r64_r64      
  addq %rax, %rcx                      #  258   0x101a3c  3      OPC=addq_r64_r64      
  cmpq $0xf, %rdx                      #  259   0x101a3f  4      OPC=cmpq_r64_imm8     
  jbe .L_101aa8                        #  260   0x101a43  2      OPC=jbe_label         
  movl (%rcx), %esi                    #  261   0x101a45  2      OPC=movl_r32_m32      
  cmpl $0xf, %esi                      #  262   0x101a47  3      OPC=cmpl_r32_imm8     
  jbe .L_101aa8                        #  263   0x101a4a  2      OPC=jbe_label         
  cmpq %rdx, %rsi                      #  264   0x101a4c  3      OPC=cmpq_r64_r64      
  ja .L_101aa8                         #  265   0x101a4f  2      OPC=ja_label          
.L_101a40:                             #        0x101a51  0      OPC=<label>           
  movl -0xac(%rbp), %r9d               #  266   0x101a51  7      OPC=movl_r32_m32      
  testl %r9d, %r9d                     #  267   0x101a58  3      OPC=testl_r32_r32     
  jne .L_101a20                        #  268   0x101a5b  2      OPC=jne_label         
  cmpl 0xc(%rcx), %r15d                #  269   0x101a5d  4      OPC=cmpl_r32_m32      
  jne .L_101a20                        #  270   0x101a61  2      OPC=jne_label         
  movl -0x88(%rbp), %eax               #  271   0x101a63  6      OPC=movl_r32_m32      
  cmpl %eax, 0x8(%rcx)                 #  272   0x101a69  3      OPC=cmpl_m32_r32      
  jne .L_101a20                        #  273   0x101a6c  2      OPC=jne_label         
  movzwl 0x4(%rcx), %eax               #  274   0x101a6e  4      OPC=movzwl_r32_m16    
  cmpw $0x14, %ax                      #  275   0x101a72  4      OPC=cmpw_ax_imm16     
  je .L_101b20                         #  276   0x101a76  6      OPC=je_label_1        
  cmpw $0x3, %ax                       #  277   0x101a7c  4      OPC=cmpw_ax_imm16     
  movl $0x1, %eax                      #  278   0x101a80  5      OPC=movl_r32_imm32    
  cmovel %eax, %r11d                   #  279   0x101a85  4      OPC=cmovel_r32_r32    
  jmpq .L_101a20                       #  280   0x101a89  2      OPC=jmpq_label        
  nop                                  #  281   0x101a8b  1      OPC=nop               
  nop                                  #  282   0x101a8c  1      OPC=nop               
  nop                                  #  283   0x101a8d  1      OPC=nop               
  nop                                  #  284   0x101a8e  1      OPC=nop               
  nop                                  #  285   0x101a8f  1      OPC=nop               
  nop                                  #  286   0x101a90  1      OPC=nop               
.L_101a80:                             #        0x101a91  0      OPC=<label>           
  movq -0xd8(%rbp), %rax               #  287   0x101a91  7      OPC=movq_r64_m64      
  movb $0x1, (%rax)                    #  288   0x101a98  3      OPC=movb_m8_imm8      
  movq -0xe0(%rbp), %rax               #  289   0x101a9b  7      OPC=movq_r64_m64      
  movb $0x1, (%rax)                    #  290   0x101aa2  3      OPC=movb_m8_imm8      
  leaq -0x28(%rbp), %rsp               #  291   0x101aa5  4      OPC=leaq_r64_m16      
  popq %rbx                            #  292   0x101aa9  1      OPC=popq_r64_1        
  popq %r12                            #  293   0x101aaa  2      OPC=popq_r64_1        
  popq %r13                            #  294   0x101aac  2      OPC=popq_r64_1        
  popq %r14                            #  295   0x101aae  2      OPC=popq_r64_1        
  popq %r15                            #  296   0x101ab0  2      OPC=popq_r64_1        
  popq %rbp                            #  297   0x101ab2  1      OPC=popq_r64_1        
  retq                                 #  298   0x101ab3  1      OPC=retq              
  nop                                  #  299   0x101ab4  1      OPC=nop               
  nop                                  #  300   0x101ab5  1      OPC=nop               
  nop                                  #  301   0x101ab6  1      OPC=nop               
  nop                                  #  302   0x101ab7  1      OPC=nop               
  nop                                  #  303   0x101ab8  1      OPC=nop               
.L_101aa8:                             #        0x101ab9  0      OPC=<label>           
  testb %r11b, %r11b                   #  304   0x101ab9  3      OPC=testb_r8_r8       
  je .L_101960                         #  305   0x101abc  6      OPC=je_label_1        
  testq %r13, %r13                     #  306   0x101ac2  3      OPC=testq_r64_r64     
  je .L_101d73                         #  307   0x101ac5  6      OPC=je_label_1        
  cmpb $0x0, -0x119(%rbp)              #  308   0x101acb  7      OPC=cmpb_m8_imm8      
  je .L_101d73                         #  309   0x101ad2  6      OPC=je_label_1        
  callq .__nscd_get_nl_timestamp       #  310   0x101ad8  5      OPC=callq_label       
  movl %eax, (%r13)                    #  311   0x101add  4      OPC=movl_m32_r32      
  movzbl -0x11a(%rbp), %eax            #  312   0x101ae1  7      OPC=movzbl_r32_m8     
  movl $0x2, 0x4(%r13)                 #  313   0x101ae8  8      OPC=movl_m32_imm32    
  movb $0x1, 0x9(%r13)                 #  314   0x101af0  5      OPC=movb_m8_imm8      
  movb %al, 0x8(%r13)                  #  315   0x101af5  4      OPC=movb_m8_r8        
  movq -0x110(%rbp), %rax              #  316   0x101af9  7      OPC=movq_r64_m64      
  movq %rax, 0x10(%r13)                #  317   0x101b00  4      OPC=movq_m64_r64      
.L_101af3:                             #        0x101b04  0      OPC=<label>           
  movq -0x128(%rbp), %rsp              #  318   0x101b04  7      OPC=movq_r64_m64      
  jmpq .L_10171a                       #  319   0x101b0b  5      OPC=jmpq_label_1      
  nop                                  #  320   0x101b10  1      OPC=nop               
.L_101b00:                             #        0x101b11  0      OPC=<label>           
  movq %rax, %rsi                      #  321   0x101b11  3      OPC=movq_r64_r64      
  movl %r12d, %edi                     #  322   0x101b14  3      OPC=movl_r32_r32      
  callq .__netlink_assert_response     #  323   0x101b17  5      OPC=callq_label       
.L_101b0b:                             #        0x101b1c  0      OPC=<label>           
  movq %r13, %rdi                      #  324   0x101b1c  3      OPC=movq_r64_r64      
  xorl %r13d, %r13d                    #  325   0x101b1f  3      OPC=xorl_r32_r32      
  callq .L_1f8c0                       #  326   0x101b22  5      OPC=callq_label       
  jmpq .L_101af3                       #  327   0x101b27  2      OPC=jmpq_label        
  nop                                  #  328   0x101b29  1      OPC=nop               
  nop                                  #  329   0x101b2a  1      OPC=nop               
  nop                                  #  330   0x101b2b  1      OPC=nop               
  nop                                  #  331   0x101b2c  1      OPC=nop               
  nop                                  #  332   0x101b2d  1      OPC=nop               
  nop                                  #  333   0x101b2e  1      OPC=nop               
  nop                                  #  334   0x101b2f  1      OPC=nop               
  nop                                  #  335   0x101b30  1      OPC=nop               
.L_101b20:                             #        0x101b31  0      OPC=<label>           
  movzbl 0x10(%rcx), %edi              #  336   0x101b31  4      OPC=movzbl_r32_m8     
  movl %edi, %eax                      #  337   0x101b35  2      OPC=movl_r32_r32      
  andl $0xfffffff7, %eax               #  338   0x101b37  6      OPC=andl_r32_imm32    
  nop                                  #  339   0x101b3d  1      OPC=nop               
  nop                                  #  340   0x101b3e  1      OPC=nop               
  nop                                  #  341   0x101b3f  1      OPC=nop               
  cmpb $0x2, %al                       #  342   0x101b40  2      OPC=cmpb_al_imm8      
  jne .L_101a20                        #  343   0x101b42  6      OPC=jne_label_1       
  subq $0x18, %rsi                     #  344   0x101b48  4      OPC=subq_r64_imm8     
  cmpq $0x3, %rsi                      #  345   0x101b4c  4      OPC=cmpq_r64_imm8     
  jbe .L_101da9                        #  346   0x101b50  6      OPC=jbe_label_1       
  movzwl 0x18(%rcx), %r8d              #  347   0x101b56  5      OPC=movzwl_r32_m16    
  cmpw $0x3, %r8w                      #  348   0x101b5b  5      OPC=cmpw_r16_imm8     
  jbe .L_101da9                        #  349   0x101b60  6      OPC=jbe_label_1       
  movzwl %r8w, %eax                    #  350   0x101b66  4      OPC=movzwl_r32_r16    
  cmpq %rax, %rsi                      #  351   0x101b6a  3      OPC=cmpq_r64_r64      
  jb .L_101da9                         #  352   0x101b6d  6      OPC=jb_label_1        
  leaq 0x18(%rcx), %r9                 #  353   0x101b73  4      OPC=leaq_r64_m16      
  xorl %r10d, %r10d                    #  354   0x101b77  3      OPC=xorl_r32_r32      
  movl %r12d, -0x100(%rbp)             #  355   0x101b7a  7      OPC=movl_m32_r32      
.L_101b6a:                             #        0x101b81  0      OPC=<label>           
  movzwl 0x2(%r9), %eax                #  356   0x101b81  5      OPC=movzwl_r32_m16    
  cmpw $0x1, %ax                       #  357   0x101b86  4      OPC=cmpw_ax_imm16     
  je .L_101cac                         #  358   0x101b8a  6      OPC=je_label_1        
  leaq 0x4(%r9), %r12                  #  359   0x101b90  4      OPC=leaq_r64_m16      
  cmpw $0x2, %ax                       #  360   0x101b94  4      OPC=cmpw_ax_imm16     
  movzwl %r8w, %eax                    #  361   0x101b98  4      OPC=movzwl_r32_r16    
  cmoveq %r12, %r10                    #  362   0x101b9c  4      OPC=cmoveq_r64_r64    
  addl $0x3, %eax                      #  363   0x101ba0  3      OPC=addl_r32_imm8     
  andl $0x1fffc, %eax                  #  364   0x101ba3  5      OPC=andl_eax_imm32    
  subq %rax, %rsi                      #  365   0x101ba8  3      OPC=subq_r64_r64      
  addq %rax, %r9                       #  366   0x101bab  3      OPC=addq_r64_r64      
  cmpq $0x3, %rsi                      #  367   0x101bae  4      OPC=cmpq_r64_imm8     
  jbe .L_101bb1                        #  368   0x101bb2  2      OPC=jbe_label         
  movzwl (%r9), %r8d                   #  369   0x101bb4  4      OPC=movzwl_r32_m16    
  cmpw $0x3, %r8w                      #  370   0x101bb8  5      OPC=cmpw_r16_imm8     
  jbe .L_101bb1                        #  371   0x101bbd  2      OPC=jbe_label         
  movzwl %r8w, %eax                    #  372   0x101bbf  4      OPC=movzwl_r32_r16    
  cmpq %rax, %rsi                      #  373   0x101bc3  3      OPC=cmpq_r64_r64      
  jae .L_101b6a                        #  374   0x101bc6  2      OPC=jae_label         
.L_101bb1:                             #        0x101bc8  0      OPC=<label>           
  testq %r10, %r10                     #  375   0x101bc8  3      OPC=testq_r64_r64     
  movl -0x100(%rbp), %r12d             #  376   0x101bcb  7      OPC=movl_r32_m32      
  je .L_101c08                         #  377   0x101bd2  2      OPC=je_label          
.L_101bbd:                             #        0x101bd4  0      OPC=<label>           
  cmpb $0x2, %dil                      #  378   0x101bd4  4      OPC=cmpb_r8_imm8      
  je .L_101d52                         #  379   0x101bd8  6      OPC=je_label_1        
  movl (%r10), %r8d                    #  380   0x101bde  3      OPC=movl_r32_m32      
  testl %r8d, %r8d                     #  381   0x101be1  3      OPC=testl_r32_r32     
  jne .L_101cbc                        #  382   0x101be4  6      OPC=jne_label_1       
  movl 0x4(%r10), %edi                 #  383   0x101bea  4      OPC=movl_r32_m32      
  testl %edi, %edi                     #  384   0x101bee  2      OPC=testl_r32_r32     
  jne .L_101cbc                        #  385   0x101bf0  6      OPC=jne_label_1       
  movl 0x8(%r10), %esi                 #  386   0x101bf6  4      OPC=movl_r32_m32      
  testl %esi, %esi                     #  387   0x101bfa  2      OPC=testl_r32_r32     
  jne .L_101cbc                        #  388   0x101bfc  6      OPC=jne_label_1       
  movzbl -0x119(%rbp), %eax            #  389   0x101c02  7      OPC=movzbl_r32_m8     
  cmpl $0x1000000, 0xc(%r10)           #  390   0x101c09  8      OPC=cmpl_m32_imm32    
  movl $0x1, %edi                      #  391   0x101c11  5      OPC=movl_r32_imm32    
  cmovnel %edi, %eax                   #  392   0x101c16  3      OPC=cmovnel_r32_r32   
  movb %al, -0x119(%rbp)               #  393   0x101c19  6      OPC=movb_m8_r8        
.L_101c08:                             #        0x101c1f  0      OPC=<label>           
  movq -0x110(%rbp), %rax              #  394   0x101c1f  7      OPC=movq_r64_m64      
  movq -0x118(%rbp), %rdi              #  395   0x101c26  7      OPC=movq_r64_m64      
  cmpq %rdi, %rax                      #  396   0x101c2d  3      OPC=cmpq_r64_r64      
  je .L_101cf2                         #  397   0x101c30  6      OPC=je_label_1        
  testq %rax, %rax                     #  398   0x101c36  3      OPC=testq_r64_r64     
  je .L_101cf2                         #  399   0x101c39  6      OPC=je_label_1        
.L_101c28:                             #        0x101c3f  0      OPC=<label>           
  testq %r13, %r13                     #  400   0x101c3f  3      OPC=testq_r64_r64     
  je .L_101b0b                         #  401   0x101c42  6      OPC=je_label_1        
  movzbl 0x12(%rcx), %esi              #  402   0x101c48  4      OPC=movzbl_r32_m8     
  movq -0x110(%rbp), %r9               #  403   0x101c4c  7      OPC=movq_r64_m64      
  leaq 0x1(%r9), %r8                   #  404   0x101c53  4      OPC=leaq_r64_m16      
  leaq (%r9,%r9,2), %r9                #  405   0x101c57  4      OPC=leaq_r64_m16      
  testb $0x24, %sil                    #  406   0x101c5b  4      OPC=testb_r8_imm8     
  setne %dil                           #  407   0x101c5f  4      OPC=setne_r8          
  andl $0x10, %esi                     #  408   0x101c63  3      OPC=andl_r32_imm8     
  cmpb $0x1, %sil                      #  409   0x101c66  4      OPC=cmpb_r8_imm8      
  sbbl %eax, %eax                      #  410   0x101c6a  2      OPC=sbbl_r32_r32      
  shlq $0x3, %r9                       #  411   0x101c6c  4      OPC=shlq_r64_imm8     
  notl %eax                            #  412   0x101c70  2      OPC=notl_r32          
  leaq 0x10(%r13,%r9,1), %rsi          #  413   0x101c72  5      OPC=leaq_r64_m16      
  andl $0x2, %eax                      #  414   0x101c77  3      OPC=andl_r32_imm8     
  orl %edi, %eax                       #  415   0x101c7a  2      OPC=orl_r32_r32       
  movb %al, 0x8(%rsi)                  #  416   0x101c7c  3      OPC=movb_m8_r8        
  movzbl 0x11(%rcx), %eax              #  417   0x101c7f  4      OPC=movzbl_r32_m8     
  movb %al, 0x9(%rsi)                  #  418   0x101c83  3      OPC=movb_m8_r8        
  movl 0x14(%rcx), %eax                #  419   0x101c86  3      OPC=movl_r32_m32      
  movl %eax, 0xc(%rsi)                 #  420   0x101c89  3      OPC=movl_m32_r32      
  cmpb $0x2, 0x10(%rcx)                #  421   0x101c8c  4      OPC=cmpb_m8_imm8      
  jne .L_101ccf                        #  422   0x101c90  2      OPC=jne_label         
  leaq (%r8,%r8,2), %rax               #  423   0x101c92  4      OPC=leaq_r64_m16      
  movl $0x0, 0x10(%rsi)                #  424   0x101c96  7      OPC=movl_m32_imm32    
  movl $0x0, 0x24(%r13,%r9,1)          #  425   0x101c9d  9      OPC=movl_m32_imm32    
  movq %r8, -0x110(%rbp)               #  426   0x101ca6  7      OPC=movq_m64_r64      
  movl $0xffff0000, 0x10(%r13,%rax,8)  #  427   0x101cad  9      OPC=movl_m32_imm32    
  movl (%r10), %eax                    #  428   0x101cb6  3      OPC=movl_r32_m32      
  movl %eax, 0x2c(%r13,%r9,1)          #  429   0x101cb9  5      OPC=movl_m32_r32      
  jmpq .L_101a20                       #  430   0x101cbe  5      OPC=jmpq_label_1      
.L_101cac:                             #        0x101cc3  0      OPC=<label>           
  movl -0x100(%rbp), %r12d             #  431   0x101cc3  7      OPC=movl_r32_m32      
  leaq 0x4(%r9), %r10                  #  432   0x101cca  4      OPC=leaq_r64_m16      
  jmpq .L_101bbd                       #  433   0x101cce  5      OPC=jmpq_label_1      
.L_101cbc:                             #        0x101cd3  0      OPC=<label>           
  movb $0x1, -0x119(%rbp)              #  434   0x101cd3  7      OPC=movb_m8_imm8      
  jmpq .L_101c08                       #  435   0x101cda  5      OPC=jmpq_label_1      
.L_101cc8:                             #        0x101cdf  0      OPC=<label>           
  xorl %edx, %edx                      #  436   0x101cdf  2      OPC=xorl_r32_r32      
  jmpq .L_10173b                       #  437   0x101ce1  5      OPC=jmpq_label_1      
.L_101ccf:                             #        0x101ce6  0      OPC=<label>           
  movq (%r10), %rax                    #  438   0x101ce6  3      OPC=movq_r64_m64      
  movq %r8, -0x110(%rbp)               #  439   0x101ce9  7      OPC=movq_m64_r64      
  movq %rax, 0x10(%rsi)                #  440   0x101cf0  4      OPC=movq_m64_r64      
  movq 0x8(%r10), %rax                 #  441   0x101cf4  4      OPC=movq_r64_m64      
  movq %rax, 0x18(%rsi)                #  442   0x101cf8  4      OPC=movq_m64_r64      
  jmpq .L_101a20                       #  443   0x101cfc  5      OPC=jmpq_label_1      
.L_101cea:                             #        0x101d01  0      OPC=<label>           
  xorl %r13d, %r13d                    #  444   0x101d01  3      OPC=xorl_r32_r32      
  jmpq .L_101b0b                       #  445   0x101d04  5      OPC=jmpq_label_1      
.L_101cf2:                             #        0x101d09  0      OPC=<label>           
  shlq $0x1, -0x118(%rbp)              #  446   0x101d09  7      OPC=shlq_m64_one      
  movq %r13, %rdi                      #  447   0x101d10  3      OPC=movq_r64_r64      
  movb %r11b, -0x11b(%rbp)             #  448   0x101d13  7      OPC=movb_m8_r8        
  movq -0x118(%rbp), %rax              #  449   0x101d1a  7      OPC=movq_r64_m64      
  movq %rcx, -0x138(%rbp)              #  450   0x101d21  7      OPC=movq_m64_r64      
  movq %rdx, -0x130(%rbp)              #  451   0x101d28  7      OPC=movq_m64_r64      
  movq %r10, -0x100(%rbp)              #  452   0x101d2f  7      OPC=movq_m64_r64      
  leaq 0x3(%rax,%rax,2), %rsi          #  453   0x101d36  5      OPC=leaq_r64_m16      
  shlq $0x3, %rsi                      #  454   0x101d3b  4      OPC=shlq_r64_imm8     
  callq .__tls_get_addr_plt            #  455   0x101d3f  5      OPC=callq_label       
  movzbl -0x11b(%rbp), %r11d           #  456   0x101d44  8      OPC=movzbl_r32_m8     
  movq %rax, %r13                      #  457   0x101d4c  3      OPC=movq_r64_r64      
  movq -0x138(%rbp), %rcx              #  458   0x101d4f  7      OPC=movq_r64_m64      
  movq -0x130(%rbp), %rdx              #  459   0x101d56  7      OPC=movq_r64_m64      
  movq -0x100(%rbp), %r10              #  460   0x101d5d  7      OPC=movq_r64_m64      
  jmpq .L_101c28                       #  461   0x101d64  5      OPC=jmpq_label_1      
.L_101d52:                             #        0x101d69  0      OPC=<label>           
  movzbl -0x11a(%rbp), %eax            #  462   0x101d69  7      OPC=movzbl_r32_m8     
  cmpl $0x100007f, (%r10)              #  463   0x101d70  7      OPC=cmpl_m32_imm32    
  movl $0x1, %edi                      #  464   0x101d77  5      OPC=movl_r32_imm32    
  cmovnel %edi, %eax                   #  465   0x101d7c  3      OPC=cmovnel_r32_r32   
  movb %al, -0x11a(%rbp)               #  466   0x101d7f  6      OPC=movb_m8_r8        
  jmpq .L_101c08                       #  467   0x101d85  5      OPC=jmpq_label_1      
.L_101d73:                             #        0x101d8a  0      OPC=<label>           
  movq %r13, %rdi                      #  468   0x101d8a  3      OPC=movq_r64_r64      
  callq .L_1f8c0                       #  469   0x101d8d  5      OPC=callq_label       
  lock                                 #  470   0x101d92  1      OPC=lock              
  addl $0x2, 0x299631(%rip)            #  471   0x101d93  7      OPC=addl_m32_imm8     
  nop                                  #  472   0x101d9a  1      OPC=nop               
  movzbl -0x11a(%rbp), %eax            #  473   0x101d9b  7      OPC=movzbl_r32_m8     
  leaq 0x29961f(%rip), %r13            #  474   0x101da2  7      OPC=leaq_r64_m16      
  movb %al, 0x299621(%rip)             #  475   0x101da9  6      OPC=movb_m8_r8        
  movzbl -0x119(%rbp), %eax            #  476   0x101daf  7      OPC=movzbl_r32_m8     
  movb %al, 0x299615(%rip)             #  477   0x101db6  6      OPC=movb_m8_r8        
  jmpq .L_101af3                       #  478   0x101dbc  5      OPC=jmpq_label_1      
.L_101da9:                             #        0x101dc1  0      OPC=<label>           
  xorl %r10d, %r10d                    #  479   0x101dc1  3      OPC=xorl_r32_r32      
  jmpq .L_101c08                       #  480   0x101dc4  5      OPC=jmpq_label_1      
  nop                                  #  481   0x101dc9  1      OPC=nop               
  nop                                  #  482   0x101dca  1      OPC=nop               
  nop                                  #  483   0x101dcb  1      OPC=nop               
  nop                                  #  484   0x101dcc  1      OPC=nop               
  nop                                  #  485   0x101dcd  1      OPC=nop               
  nop                                  #  486   0x101dce  1      OPC=nop               
  nop                                  #  487   0x101dcf  1      OPC=nop               
  nop                                  #  488   0x101dd0  1      OPC=nop               
  nop                                  #  489   0x101dd1  1      OPC=nop               
  nop                                  #  490   0x101dd2  1      OPC=nop               
  nop                                  #  491   0x101dd3  1      OPC=nop               
  nop                                  #  492   0x101dd4  1      OPC=nop               
  nop                                  #  493   0x101dd5  1      OPC=nop               
  nop                                  #  494   0x101dd6  1      OPC=nop               
  nop                                  #  495   0x101dd7  1      OPC=nop               
                                                                                       
.size __check_pf, .-__check_pf

