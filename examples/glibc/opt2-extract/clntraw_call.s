  .text
  .globl clntraw_call
  .type clntraw_call, @function

#! file-offset 0x107230
#! rip-offset  0x107230
#! capacity    544 bytes

# Text                                #  Line  RIP       Bytes  Opcode               
.clntraw_call:                        #        0x107230  0      OPC=<label>          
  pushq %r15                          #  1     0x107230  2      OPC=pushq_r64_1      
  pushq %r14                          #  2     0x107232  2      OPC=pushq_r64_1      
  movq %rdx, %r14                     #  3     0x107234  3      OPC=movq_r64_r64     
  pushq %r13                          #  4     0x107237  2      OPC=pushq_r64_1      
  pushq %r12                          #  5     0x107239  2      OPC=pushq_r64_1      
  movq %rdi, %r12                     #  6     0x10723b  3      OPC=movq_r64_r64     
  pushq %rbp                          #  7     0x10723e  1      OPC=pushq_r64_1      
  pushq %rbx                          #  8     0x10723f  1      OPC=pushq_r64_1      
  subq $0xc8, %rsp                    #  9     0x107240  7      OPC=subq_r64_imm32   
  movq %rsi, 0x38(%rsp)               #  10    0x107247  5      OPC=movq_m64_r64     
  movq %rcx, 0x10(%rsp)               #  11    0x10724c  5      OPC=movq_m64_r64     
  movq %r8, 0x20(%rsp)                #  12    0x107251  5      OPC=movq_m64_r64     
  movq %r9, 0x28(%rsp)                #  13    0x107256  5      OPC=movq_m64_r64     
  callq .__rpc_thread_variables       #  14    0x10725b  5      OPC=callq_label      
  movq 0xb8(%rax), %rbx               #  15    0x107260  7      OPC=movq_r64_m64     
  movl $0x10, %edx                    #  16    0x107267  5      OPC=movl_r32_imm32   
  testq %rbx, %rbx                    #  17    0x10726c  3      OPC=testq_r64_r64    
  je .L_1073cb                        #  18    0x10726f  6      OPC=je_label_1       
  leaq 0x22a8(%rbx), %rax             #  19    0x107275  7      OPC=leaq_r64_m16     
  leaq 0x18(%rbx), %rbp               #  20    0x10727c  4      OPC=leaq_r64_m16     
  leaq 0x60(%rsp), %r13               #  21    0x107280  5      OPC=leaq_r64_m16     
  movq %rax, 0x8(%rsp)                #  22    0x107285  5      OPC=movq_m64_r64     
  leaq 0x38(%rsp), %rax               #  23    0x10728a  5      OPC=leaq_r64_m16     
  movq %rax, 0x18(%rsp)               #  24    0x10728f  5      OPC=movq_m64_r64     
  leaq 0x40(%rsp), %rax               #  25    0x107294  5      OPC=leaq_r64_m16     
  movq %rax, 0x30(%rsp)               #  26    0x107299  5      OPC=movq_m64_r64     
  jmpq .L_10738e                      #  27    0x10729e  5      OPC=jmpq_label_1     
  nop                                 #  28    0x1072a3  1      OPC=nop              
  nop                                 #  29    0x1072a4  1      OPC=nop              
  nop                                 #  30    0x1072a5  1      OPC=nop              
  nop                                 #  31    0x1072a6  1      OPC=nop              
  nop                                 #  32    0x1072a7  1      OPC=nop              
.L_1072a8:                            #        0x1072a8  0      OPC=<label>          
  movq 0x20(%rbx), %rax               #  33    0x1072a8  4      OPC=movq_r64_m64     
  movq 0x18(%rsp), %rsi               #  34    0x1072ac  5      OPC=movq_r64_m64     
  movq %rbp, %rdi                     #  35    0x1072b1  3      OPC=movq_r64_r64     
  callq 0x8(%rax)                     #  36    0x1072b4  3      OPC=callq_m64        
  testl %eax, %eax                    #  37    0x1072b7  2      OPC=testl_r32_r32    
  je .L_1073c6                        #  38    0x1072b9  6      OPC=je_label_1       
  movq (%r12), %rdi                   #  39    0x1072bf  4      OPC=movq_r64_m64     
  movq %rbp, %rsi                     #  40    0x1072c3  3      OPC=movq_r64_r64     
  movq 0x38(%rdi), %rax               #  41    0x1072c6  4      OPC=movq_r64_m64     
  callq 0x8(%rax)                     #  42    0x1072ca  3      OPC=callq_m64        
  testl %eax, %eax                    #  43    0x1072cd  2      OPC=testl_r32_r32    
  je .L_1073c6                        #  44    0x1072cf  6      OPC=je_label_1       
  xorl %eax, %eax                     #  45    0x1072d5  2      OPC=xorl_r32_r32     
  movq 0x10(%rsp), %rsi               #  46    0x1072d7  5      OPC=movq_r64_m64     
  movq %rbp, %rdi                     #  47    0x1072dc  3      OPC=movq_r64_r64     
  callq %r14                          #  48    0x1072df  3      OPC=callq_r64        
  testl %eax, %eax                    #  49    0x1072e2  2      OPC=testl_r32_r32    
  je .L_1073c6                        #  50    0x1072e4  6      OPC=je_label_1       
  movq 0x20(%rbx), %rax               #  51    0x1072ea  4      OPC=movq_r64_m64     
  movq %rbp, %rdi                     #  52    0x1072ee  3      OPC=movq_r64_r64     
  callq 0x20(%rax)                    #  53    0x1072f1  3      OPC=callq_m64        
  movl $0x1, %edi                     #  54    0x1072f4  5      OPC=movl_r32_imm32   
  callq .svc_getreq_GLIBC_2_2_5       #  55    0x1072f9  5      OPC=callq_label      
  movq 0x20(%rbx), %rax               #  56    0x1072fe  4      OPC=movq_r64_m64     
  xorl %esi, %esi                     #  57    0x107302  2      OPC=xorl_r32_r32     
  movq %rbp, %rdi                     #  58    0x107304  3      OPC=movq_r64_r64     
  movl $0x1, 0x18(%rbx)               #  59    0x107307  7      OPC=movl_m32_imm32   
  callq 0x28(%rax)                    #  60    0x10730e  3      OPC=callq_m64        
  movq 0x298f18(%rip), %rax           #  61    0x107311  7      OPC=movq_r64_m64     
  movq %r13, %rsi                     #  62    0x107318  3      OPC=movq_r64_r64     
  movq %rbp, %rdi                     #  63    0x10731b  3      OPC=movq_r64_r64     
  movq %rax, 0x78(%rsp)               #  64    0x10731e  5      OPC=movq_m64_r64     
  movq 0x298f0e(%rip), %rax           #  65    0x107323  7      OPC=movq_r64_m64     
  movq %rax, 0x80(%rsp)               #  66    0x10732a  8      OPC=movq_m64_r64     
  movq 0x298f07(%rip), %rax           #  67    0x107332  7      OPC=movq_r64_m64     
  movq %rax, 0x88(%rsp)               #  68    0x107339  8      OPC=movq_m64_r64     
  movq 0x28(%rsp), %rax               #  69    0x107341  5      OPC=movq_r64_m64     
  movq %rax, 0x98(%rsp)               #  70    0x107346  8      OPC=movq_m64_r64     
  movq 0x20(%rsp), %rax               #  71    0x10734e  5      OPC=movq_r64_m64     
  movq %rax, 0xa0(%rsp)               #  72    0x107353  8      OPC=movq_m64_r64     
  callq .xdr_replymsg_GLIBC_2_2_5     #  73    0x10735b  5      OPC=callq_label      
  testl %eax, %eax                    #  74    0x107360  2      OPC=testl_r32_r32    
  je .L_107400                        #  75    0x107362  6      OPC=je_label_1       
  movq 0x30(%rsp), %rsi               #  76    0x107368  5      OPC=movq_r64_m64     
  movq %r13, %rdi                     #  77    0x10736d  3      OPC=movq_r64_r64     
  callq ._seterr_reply_GLIBC_2_2_5    #  78    0x107370  5      OPC=callq_label      
  movl 0x40(%rsp), %r15d              #  79    0x107375  5      OPC=movl_r32_m32     
  movq (%r12), %rdi                   #  80    0x10737a  4      OPC=movq_r64_m64     
  testl %r15d, %r15d                  #  81    0x10737e  3      OPC=testl_r32_r32    
  movq 0x38(%rdi), %rax               #  82    0x107381  4      OPC=movq_r64_m64     
  je .L_1073e0                        #  83    0x107385  2      OPC=je_label         
  callq 0x18(%rax)                    #  84    0x107387  3      OPC=callq_m64        
  testl %eax, %eax                    #  85    0x10738a  2      OPC=testl_r32_r32    
  je .L_1073f4                        #  86    0x10738c  2      OPC=je_label         
.L_10738e:                            #        0x10738e  0      OPC=<label>          
  movq 0x20(%rbx), %rax               #  87    0x10738e  4      OPC=movq_r64_m64     
  xorl %esi, %esi                     #  88    0x107392  2      OPC=xorl_r32_r32     
  movq %rbp, %rdi                     #  89    0x107394  3      OPC=movq_r64_r64     
  movl $0x0, 0x18(%rbx)               #  90    0x107397  7      OPC=movl_m32_imm32   
  callq 0x28(%rax)                    #  91    0x10739e  3      OPC=callq_m64        
  movq 0x20(%rbx), %rax               #  92    0x1073a1  4      OPC=movq_r64_m64     
  addq $0x1, 0x22a8(%rbx)             #  93    0x1073a5  8      OPC=addq_m64_imm8    
  movq %rbp, %rdi                     #  94    0x1073ad  3      OPC=movq_r64_r64     
  movl 0x22c0(%rbx), %edx             #  95    0x1073b0  6      OPC=movl_r32_m32     
  movq 0x8(%rsp), %rsi                #  96    0x1073b6  5      OPC=movq_r64_m64     
  callq 0x18(%rax)                    #  97    0x1073bb  3      OPC=callq_m64        
  testl %eax, %eax                    #  98    0x1073be  2      OPC=testl_r32_r32    
  jne .L_1072a8                       #  99    0x1073c0  6      OPC=jne_label_1      
.L_1073c6:                            #        0x1073c6  0      OPC=<label>          
  movl $0x1, %edx                     #  100   0x1073c6  5      OPC=movl_r32_imm32   
.L_1073cb:                            #        0x1073cb  0      OPC=<label>          
  addq $0xc8, %rsp                    #  101   0x1073cb  7      OPC=addq_r64_imm32   
  movl %edx, %eax                     #  102   0x1073d2  2      OPC=movl_r32_r32     
  popq %rbx                           #  103   0x1073d4  1      OPC=popq_r64_1       
  popq %rbp                           #  104   0x1073d5  1      OPC=popq_r64_1       
  popq %r12                           #  105   0x1073d6  2      OPC=popq_r64_1       
  popq %r13                           #  106   0x1073d8  2      OPC=popq_r64_1       
  popq %r14                           #  107   0x1073da  2      OPC=popq_r64_1       
  popq %r15                           #  108   0x1073dc  2      OPC=popq_r64_1       
  retq                                #  109   0x1073de  1      OPC=retq             
  nop                                 #  110   0x1073df  1      OPC=nop              
.L_1073e0:                            #        0x1073e0  0      OPC=<label>          
  addq $0x18, %r13                    #  111   0x1073e0  4      OPC=addq_r64_imm8    
  movq %r13, %rsi                     #  112   0x1073e4  3      OPC=movq_r64_r64     
  callq 0x10(%rax)                    #  113   0x1073e7  3      OPC=callq_m64        
  testl %eax, %eax                    #  114   0x1073ea  2      OPC=testl_r32_r32    
  jne .L_107407                       #  115   0x1073ec  2      OPC=jne_label        
  movl $0x7, %r15d                    #  116   0x1073ee  6      OPC=movl_r32_imm32   
.L_1073f4:                            #        0x1073f4  0      OPC=<label>          
  movl %r15d, %edx                    #  117   0x1073f4  3      OPC=movl_r32_r32     
  jmpq .L_1073cb                      #  118   0x1073f7  2      OPC=jmpq_label       
  nop                                 #  119   0x1073f9  1      OPC=nop              
  nop                                 #  120   0x1073fa  1      OPC=nop              
  nop                                 #  121   0x1073fb  1      OPC=nop              
  nop                                 #  122   0x1073fc  1      OPC=nop              
  nop                                 #  123   0x1073fd  1      OPC=nop              
  nop                                 #  124   0x1073fe  1      OPC=nop              
  nop                                 #  125   0x1073ff  1      OPC=nop              
.L_107400:                            #        0x107400  0      OPC=<label>          
  movl $0x2, %edx                     #  126   0x107400  5      OPC=movl_r32_imm32   
  jmpq .L_1073cb                      #  127   0x107405  2      OPC=jmpq_label       
.L_107407:                            #        0x107407  0      OPC=<label>          
  movq (%r12), %rdi                   #  128   0x107407  4      OPC=movq_r64_m64     
  movq %r13, %rsi                     #  129   0x10740b  3      OPC=movq_r64_r64     
  movq 0x38(%rdi), %rax               #  130   0x10740e  4      OPC=movq_r64_m64     
  callq 0x10(%rax)                    #  131   0x107412  3      OPC=callq_m64        
  testl %eax, %eax                    #  132   0x107415  2      OPC=testl_r32_r32    
  movl $0x7, %eax                     #  133   0x107417  5      OPC=movl_r32_imm32   
  cmovnel %r15d, %eax                 #  134   0x10741c  4      OPC=cmovnel_r32_r32  
  cmpq $0x0, 0x80(%rsp)               #  135   0x107420  9      OPC=cmpq_m64_imm8    
  movl %eax, %edx                     #  136   0x107429  2      OPC=movl_r32_r32     
  je .L_1073cb                        #  137   0x10742b  2      OPC=je_label         
  movl $0x2, 0x18(%rbx)               #  138   0x10742d  7      OPC=movl_m32_imm32   
  movq %r13, %rsi                     #  139   0x107434  3      OPC=movq_r64_r64     
  movq %rbp, %rdi                     #  140   0x107437  3      OPC=movq_r64_r64     
  movl %edx, 0x8(%rsp)                #  141   0x10743a  4      OPC=movl_m32_r32     
  callq .xdr_opaque_auth_GLIBC_2_2_5  #  142   0x10743e  5      OPC=callq_label      
  movl 0x8(%rsp), %edx                #  143   0x107443  4      OPC=movl_r32_m32     
  jmpq .L_1073cb                      #  144   0x107447  2      OPC=jmpq_label       
  nop                                 #  145   0x107449  1      OPC=nop              
  nop                                 #  146   0x10744a  1      OPC=nop              
  nop                                 #  147   0x10744b  1      OPC=nop              
  nop                                 #  148   0x10744c  1      OPC=nop              
  nop                                 #  149   0x10744d  1      OPC=nop              
  nop                                 #  150   0x10744e  1      OPC=nop              
  nop                                 #  151   0x10744f  1      OPC=nop              
                                                                                     
.size clntraw_call, .-clntraw_call

