  .text
  .globl re_acquire_state
  .type re_acquire_state, @function

#! file-offset 0xc23e0
#! rip-offset  0xc23e0
#! capacity    608 bytes

# Text                               #  Line  RIP      Bytes  Opcode               
.re_acquire_state:                   #        0xc23e0  0      OPC=<label>          
  pushq %r15                         #  1     0xc23e0  2      OPC=pushq_r64_1      
  pushq %r14                         #  2     0xc23e2  2      OPC=pushq_r64_1      
  pushq %r13                         #  3     0xc23e4  2      OPC=pushq_r64_1      
  pushq %r12                         #  4     0xc23e6  2      OPC=pushq_r64_1      
  pushq %rbp                         #  5     0xc23e8  1      OPC=pushq_r64_1      
  pushq %rbx                         #  6     0xc23e9  1      OPC=pushq_r64_1      
  subq $0x18, %rsp                   #  7     0xc23ea  4      OPC=subq_r64_imm8    
  movl 0x4(%rdx), %r13d              #  8     0xc23ee  4      OPC=movl_r32_m32     
  testl %r13d, %r13d                 #  9     0xc23f2  3      OPC=testl_r32_r32    
  je .L_c2627                        #  10    0xc23f5  6      OPC=je_label_1       
  testl %r13d, %r13d                 #  11    0xc23fb  3      OPC=testl_r32_r32    
  jle .L_c2424                       #  12    0xc23fe  2      OPC=jle_label        
  leal -0x1(%r13), %ecx              #  13    0xc2400  4      OPC=leal_r32_m16     
  movq 0x8(%rdx), %rax               #  14    0xc2404  4      OPC=movq_r64_m64     
  leaq 0x4(,%rcx,4), %rcx            #  15    0xc2408  8      OPC=leaq_r64_m16     
  addq %rax, %rcx                    #  16    0xc2410  3      OPC=addq_r64_r64     
  nop                                #  17    0xc2413  1      OPC=nop              
  nop                                #  18    0xc2414  1      OPC=nop              
  nop                                #  19    0xc2415  1      OPC=nop              
  nop                                #  20    0xc2416  1      OPC=nop              
  nop                                #  21    0xc2417  1      OPC=nop              
.L_c2418:                            #        0xc2418  0      OPC=<label>          
  addl (%rax), %r13d                 #  22    0xc2418  3      OPC=addl_r32_m32     
  addq $0x4, %rax                    #  23    0xc241b  4      OPC=addq_r64_imm8    
  cmpq %rcx, %rax                    #  24    0xc241f  3      OPC=cmpq_r64_r64     
  jne .L_c2418                       #  25    0xc2422  2      OPC=jne_label        
.L_c2424:                            #        0xc2424  0      OPC=<label>          
  movl %r13d, %eax                   #  26    0xc2424  3      OPC=movl_r32_r32     
  andl 0x84(%rsi), %eax              #  27    0xc2427  6      OPC=andl_r32_m32     
  movq %rdx, %r14                    #  28    0xc242d  3      OPC=movq_r64_r64     
  movq %rsi, %rbx                    #  29    0xc2430  3      OPC=movq_r64_r64     
  movq %rdi, 0x8(%rsp)               #  30    0xc2433  5      OPC=movq_m64_r64     
  shlq $0x4, %rax                    #  31    0xc2438  4      OPC=shlq_r64_imm8    
  addq 0x40(%rsi), %rax              #  32    0xc243c  4      OPC=addq_r64_m64     
  movl (%rax), %edx                  #  33    0xc2440  2      OPC=movl_r32_m32     
  testl %edx, %edx                   #  34    0xc2442  2      OPC=testl_r32_r32    
  jle .L_c2498                       #  35    0xc2444  2      OPC=jle_label        
  movq 0x8(%rax), %r12               #  36    0xc2446  4      OPC=movq_r64_m64     
  leal -0x1(%rdx), %eax              #  37    0xc244a  3      OPC=leal_r32_m16     
  leaq 0x8(,%rax,8), %rdx            #  38    0xc244d  8      OPC=leaq_r64_m16     
  leaq (%r12,%rdx,1), %rbp           #  39    0xc2455  4      OPC=leaq_r64_m16     
  jmpq .L_c2469                      #  40    0xc2459  2      OPC=jmpq_label       
  nop                                #  41    0xc245b  1      OPC=nop              
  nop                                #  42    0xc245c  1      OPC=nop              
  nop                                #  43    0xc245d  1      OPC=nop              
  nop                                #  44    0xc245e  1      OPC=nop              
  nop                                #  45    0xc245f  1      OPC=nop              
.L_c2460:                            #        0xc2460  0      OPC=<label>          
  addq $0x8, %r12                    #  46    0xc2460  4      OPC=addq_r64_imm8    
  cmpq %rbp, %r12                    #  47    0xc2464  3      OPC=cmpq_r64_r64     
  je .L_c2498                        #  48    0xc2467  2      OPC=je_label         
.L_c2469:                            #        0xc2469  0      OPC=<label>          
  movq (%r12), %r15                  #  49    0xc2469  4      OPC=movq_r64_m64     
  cmpl %r13d, (%r15)                 #  50    0xc246d  3      OPC=cmpl_m32_r32     
  jne .L_c2460                       #  51    0xc2470  2      OPC=jne_label        
  leaq 0x8(%r15), %rdi               #  52    0xc2472  4      OPC=leaq_r64_m16     
  movq %r14, %rsi                    #  53    0xc2476  3      OPC=movq_r64_r64     
  callq .re_node_set_compare_part_2  #  54    0xc2479  5      OPC=callq_label      
  testl %eax, %eax                   #  55    0xc247e  2      OPC=testl_r32_r32    
  je .L_c2460                        #  56    0xc2480  2      OPC=je_label         
  addq $0x18, %rsp                   #  57    0xc2482  4      OPC=addq_r64_imm8    
  movq %r15, %rax                    #  58    0xc2486  3      OPC=movq_r64_r64     
  popq %rbx                          #  59    0xc2489  1      OPC=popq_r64_1       
  popq %rbp                          #  60    0xc248a  1      OPC=popq_r64_1       
  popq %r12                          #  61    0xc248b  2      OPC=popq_r64_1       
  popq %r13                          #  62    0xc248d  2      OPC=popq_r64_1       
  popq %r14                          #  63    0xc248f  2      OPC=popq_r64_1       
  popq %r15                          #  64    0xc2491  2      OPC=popq_r64_1       
  retq                               #  65    0xc2493  1      OPC=retq             
  nop                                #  66    0xc2494  1      OPC=nop              
  nop                                #  67    0xc2495  1      OPC=nop              
  nop                                #  68    0xc2496  1      OPC=nop              
  nop                                #  69    0xc2497  1      OPC=nop              
.L_c2498:                            #        0xc2498  0      OPC=<label>          
  movl $0x1, %esi                    #  70    0xc2498  5      OPC=movl_r32_imm32   
  movl $0x58, %edi                   #  71    0xc249d  5      OPC=movl_r32_imm32   
  callq .L_1f8b0                     #  72    0xc24a2  5      OPC=callq_label      
  testq %rax, %rax                   #  73    0xc24a7  3      OPC=testq_r64_r64    
  movq %rax, %r12                    #  74    0xc24aa  3      OPC=movq_r64_r64     
  je .L_c25ed                        #  75    0xc24ad  6      OPC=je_label_1       
  leaq 0x8(%rax), %r15               #  76    0xc24b3  4      OPC=leaq_r64_m16     
  movq %r14, %rsi                    #  77    0xc24b7  3      OPC=movq_r64_r64     
  movq %r15, %rdi                    #  78    0xc24ba  3      OPC=movq_r64_r64     
  callq .re_node_set_init_copy       #  79    0xc24bd  5      OPC=callq_label      
  testl %eax, %eax                   #  80    0xc24c2  2      OPC=testl_r32_r32    
  jne .L_c25e5                       #  81    0xc24c4  6      OPC=jne_label_1      
  movl 0x4(%r14), %edx               #  82    0xc24ca  4      OPC=movl_r32_m32     
  movq %r15, 0x38(%r12)              #  83    0xc24ce  5      OPC=movq_m64_r64     
  testl %edx, %edx                   #  84    0xc24d3  2      OPC=testl_r32_r32    
  jle .L_c25b0                       #  85    0xc24d5  6      OPC=jle_label_1      
  movq (%rbx), %rsi                  #  86    0xc24db  3      OPC=movq_r64_m64     
  movq 0x8(%r14), %rdi               #  87    0xc24de  4      OPC=movq_r64_m64     
  xorl %eax, %eax                    #  88    0xc24e2  2      OPC=xorl_r32_r32     
  jmpq .L_c254a                      #  89    0xc24e4  2      OPC=jmpq_label       
  nop                                #  90    0xc24e6  1      OPC=nop              
  nop                                #  91    0xc24e7  1      OPC=nop              
  nop                                #  92    0xc24e8  1      OPC=nop              
  nop                                #  93    0xc24e9  1      OPC=nop              
  nop                                #  94    0xc24ea  1      OPC=nop              
  nop                                #  95    0xc24eb  1      OPC=nop              
  nop                                #  96    0xc24ec  1      OPC=nop              
  nop                                #  97    0xc24ed  1      OPC=nop              
  nop                                #  98    0xc24ee  1      OPC=nop              
  nop                                #  99    0xc24ef  1      OPC=nop              
.L_c24f0:                            #        0xc24f0  0      OPC=<label>          
  movzbl 0x50(%r12), %ecx            #  100   0xc24f0  6      OPC=movzbl_r32_m8    
  movzbl 0xa(%r9), %r8d              #  101   0xc24f6  5      OPC=movzbl_r32_m8    
  movl %ecx, %r11d                   #  102   0xc24fb  3      OPC=movl_r32_r32     
  shrb $0x4, %r8b                    #  103   0xc24fe  4      OPC=shrb_r8_imm8     
  andl $0xffffffdf, %ecx             #  104   0xc2502  6      OPC=andl_r32_imm32   
  nop                                #  105   0xc2508  1      OPC=nop              
  nop                                #  106   0xc2509  1      OPC=nop              
  nop                                #  107   0xc250a  1      OPC=nop              
  shrb $0x5, %r11b                   #  108   0xc250b  4      OPC=shrb_r8_imm8     
  orl %r11d, %r8d                    #  109   0xc250f  3      OPC=orl_r32_r32      
  andl $0x1, %r8d                    #  110   0xc2512  4      OPC=andl_r32_imm8    
  shll $0x5, %r8d                    #  111   0xc2516  4      OPC=shll_r32_imm8    
  orl %r8d, %ecx                     #  112   0xc251a  3      OPC=orl_r32_r32      
  cmpl $0x2, %r10d                   #  113   0xc251d  4      OPC=cmpl_r32_imm8    
  movb %cl, 0x50(%r12)               #  114   0xc2521  5      OPC=movb_m8_r8       
  je .L_c25a0                        #  115   0xc2526  2      OPC=je_label         
  cmpl $0x4, %r10d                   #  116   0xc2528  4      OPC=cmpl_r32_imm8    
  je .L_c25d8                        #  117   0xc252c  6      OPC=je_label_1       
  cmpl $0xc, %r10d                   #  118   0xc2532  4      OPC=cmpl_r32_imm8    
  je .L_c253c                        #  119   0xc2536  2      OPC=je_label         
.L_c2532:                            #        0xc2538  0      OPC=<label>          
  testl $0x3ff00, 0x8(%r9)           #  120   0xc2538  8      OPC=testl_m32_imm32  
  je .L_c2542                        #  121   0xc2540  2      OPC=je_label         
.L_c253c:                            #        0xc2542  0      OPC=<label>          
  orb $0x80, 0x50(%r12)              #  122   0xc2542  6      OPC=orb_m8_imm8      
.L_c2542:                            #        0xc2548  0      OPC=<label>          
  addq $0x1, %rax                    #  123   0xc2548  4      OPC=addq_r64_imm8    
  cmpl %eax, %edx                    #  124   0xc254c  2      OPC=cmpl_r32_r32     
  jle .L_c25b0                       #  125   0xc254e  2      OPC=jle_label        
.L_c254a:                            #        0xc2550  0      OPC=<label>          
  movslq (%rdi,%rax,4), %r9          #  126   0xc2550  4      OPC=movslq_r64_m32   
  shlq $0x4, %r9                     #  127   0xc2554  4      OPC=shlq_r64_imm8    
  addq %rsi, %r9                     #  128   0xc2558  3      OPC=addq_r64_r64     
  movzbl 0x8(%r9), %r10d             #  129   0xc255b  5      OPC=movzbl_r32_m8    
  cmpl $0x1, %r10d                   #  130   0xc2560  4      OPC=cmpl_r32_imm8    
  jne .L_c24f0                       #  131   0xc2564  2      OPC=jne_label        
  testl $0x3ff00, 0x8(%r9)           #  132   0xc2566  8      OPC=testl_m32_imm32  
  je .L_c2542                        #  133   0xc256e  2      OPC=je_label         
  movzbl 0x50(%r12), %ecx            #  134   0xc2570  6      OPC=movzbl_r32_m8    
  movzbl 0xa(%r9), %r8d              #  135   0xc2576  5      OPC=movzbl_r32_m8    
  movl %ecx, %r10d                   #  136   0xc257b  3      OPC=movl_r32_r32     
  shrb $0x4, %r8b                    #  137   0xc257e  4      OPC=shrb_r8_imm8     
  andl $0xffffffdf, %ecx             #  138   0xc2582  6      OPC=andl_r32_imm32   
  nop                                #  139   0xc2588  1      OPC=nop              
  nop                                #  140   0xc2589  1      OPC=nop              
  nop                                #  141   0xc258a  1      OPC=nop              
  shrb $0x5, %r10b                   #  142   0xc258b  4      OPC=shrb_r8_imm8     
  orl %r10d, %r8d                    #  143   0xc258f  3      OPC=orl_r32_r32      
  andl $0x1, %r8d                    #  144   0xc2592  4      OPC=andl_r32_imm8    
  shll $0x5, %r8d                    #  145   0xc2596  4      OPC=shll_r32_imm8    
  orl %r8d, %ecx                     #  146   0xc259a  3      OPC=orl_r32_r32      
  movb %cl, 0x50(%r12)               #  147   0xc259d  5      OPC=movb_m8_r8       
  jmpq .L_c2532                      #  148   0xc25a2  2      OPC=jmpq_label       
  nop                                #  149   0xc25a4  1      OPC=nop              
  nop                                #  150   0xc25a5  1      OPC=nop              
  nop                                #  151   0xc25a6  1      OPC=nop              
  nop                                #  152   0xc25a7  1      OPC=nop              
  nop                                #  153   0xc25a8  1      OPC=nop              
  nop                                #  154   0xc25a9  1      OPC=nop              
  nop                                #  155   0xc25aa  1      OPC=nop              
  nop                                #  156   0xc25ab  1      OPC=nop              
.L_c25a0:                            #        0xc25ac  0      OPC=<label>          
  addq $0x1, %rax                    #  157   0xc25ac  4      OPC=addq_r64_imm8    
  orl $0x10, %ecx                    #  158   0xc25b0  3      OPC=orl_r32_imm8     
  cmpl %eax, %edx                    #  159   0xc25b3  2      OPC=cmpl_r32_r32     
  movb %cl, 0x50(%r12)               #  160   0xc25b5  5      OPC=movb_m8_r8       
  jg .L_c254a                        #  161   0xc25ba  2      OPC=jg_label         
.L_c25b0:                            #        0xc25bc  0      OPC=<label>          
  movl %r13d, %edx                   #  162   0xc25bc  3      OPC=movl_r32_r32     
  movq %r12, %rsi                    #  163   0xc25bf  3      OPC=movq_r64_r64     
  movq %rbx, %rdi                    #  164   0xc25c2  3      OPC=movq_r64_r64     
  callq .register_state              #  165   0xc25c5  5      OPC=callq_label      
  testl %eax, %eax                   #  166   0xc25ca  2      OPC=testl_r32_r32    
  jne .L_c2610                       #  167   0xc25cc  2      OPC=jne_label        
  addq $0x18, %rsp                   #  168   0xc25ce  4      OPC=addq_r64_imm8    
  movq %r12, %rax                    #  169   0xc25d2  3      OPC=movq_r64_r64     
  popq %rbx                          #  170   0xc25d5  1      OPC=popq_r64_1       
  popq %rbp                          #  171   0xc25d6  1      OPC=popq_r64_1       
  popq %r12                          #  172   0xc25d7  2      OPC=popq_r64_1       
  popq %r13                          #  173   0xc25d9  2      OPC=popq_r64_1       
  popq %r14                          #  174   0xc25db  2      OPC=popq_r64_1       
  popq %r15                          #  175   0xc25dd  2      OPC=popq_r64_1       
  retq                               #  176   0xc25df  1      OPC=retq             
  nop                                #  177   0xc25e0  1      OPC=nop              
  nop                                #  178   0xc25e1  1      OPC=nop              
  nop                                #  179   0xc25e2  1      OPC=nop              
  nop                                #  180   0xc25e3  1      OPC=nop              
.L_c25d8:                            #        0xc25e4  0      OPC=<label>          
  orl $0x40, %ecx                    #  181   0xc25e4  3      OPC=orl_r32_imm8     
  movb %cl, 0x50(%r12)               #  182   0xc25e7  5      OPC=movb_m8_r8       
  jmpq .L_c2542                      #  183   0xc25ec  5      OPC=jmpq_label_1     
.L_c25e5:                            #        0xc25f1  0      OPC=<label>          
  movq %r12, %rdi                    #  184   0xc25f1  3      OPC=movq_r64_r64     
  callq .L_1f8c0                     #  185   0xc25f4  5      OPC=callq_label      
.L_c25ed:                            #        0xc25f9  0      OPC=<label>          
  movq 0x8(%rsp), %rax               #  186   0xc25f9  5      OPC=movq_r64_m64     
  movl $0xc, (%rax)                  #  187   0xc25fe  6      OPC=movl_m32_imm32   
  xorl %eax, %eax                    #  188   0xc2604  2      OPC=xorl_r32_r32     
.L_c25fa:                            #        0xc2606  0      OPC=<label>          
  addq $0x18, %rsp                   #  189   0xc2606  4      OPC=addq_r64_imm8    
  popq %rbx                          #  190   0xc260a  1      OPC=popq_r64_1       
  popq %rbp                          #  191   0xc260b  1      OPC=popq_r64_1       
  popq %r12                          #  192   0xc260c  2      OPC=popq_r64_1       
  popq %r13                          #  193   0xc260e  2      OPC=popq_r64_1       
  popq %r14                          #  194   0xc2610  2      OPC=popq_r64_1       
  popq %r15                          #  195   0xc2612  2      OPC=popq_r64_1       
  retq                               #  196   0xc2614  1      OPC=retq             
  nop                                #  197   0xc2615  1      OPC=nop              
  nop                                #  198   0xc2616  1      OPC=nop              
  nop                                #  199   0xc2617  1      OPC=nop              
  nop                                #  200   0xc2618  1      OPC=nop              
  nop                                #  201   0xc2619  1      OPC=nop              
  nop                                #  202   0xc261a  1      OPC=nop              
  nop                                #  203   0xc261b  1      OPC=nop              
.L_c2610:                            #        0xc261c  0      OPC=<label>          
  movq %r12, %rdi                    #  204   0xc261c  3      OPC=movq_r64_r64     
  callq .free_state                  #  205   0xc261f  5      OPC=callq_label      
  movq 0x8(%rsp), %rax               #  206   0xc2624  5      OPC=movq_r64_m64     
  movl $0xc, (%rax)                  #  207   0xc2629  6      OPC=movl_m32_imm32   
  xorl %eax, %eax                    #  208   0xc262f  2      OPC=xorl_r32_r32     
  jmpq .L_c25fa                      #  209   0xc2631  2      OPC=jmpq_label       
.L_c2627:                            #        0xc2633  0      OPC=<label>          
  movl $0x0, (%rdi)                  #  210   0xc2633  6      OPC=movl_m32_imm32   
  addq $0x18, %rsp                   #  211   0xc2639  4      OPC=addq_r64_imm8    
  xorl %eax, %eax                    #  212   0xc263d  2      OPC=xorl_r32_r32     
  popq %rbx                          #  213   0xc263f  1      OPC=popq_r64_1       
  popq %rbp                          #  214   0xc2640  1      OPC=popq_r64_1       
  popq %r12                          #  215   0xc2641  2      OPC=popq_r64_1       
  popq %r13                          #  216   0xc2643  2      OPC=popq_r64_1       
  popq %r14                          #  217   0xc2645  2      OPC=popq_r64_1       
  popq %r15                          #  218   0xc2647  2      OPC=popq_r64_1       
  retq                               #  219   0xc2649  1      OPC=retq             
  xchgw %ax, %ax                     #  220   0xc264a  2      OPC=xchgw_ax_r16     
                                                                                   
.size re_acquire_state, .-re_acquire_state

