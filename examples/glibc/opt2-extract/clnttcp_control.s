  .text
  .globl clnttcp_control
  .type clnttcp_control, @function

#! file-offset 0x10f4a0
#! rip-offset  0x10f4a0
#! capacity    288 bytes

# Text                        #  Line  RIP       Bytes  Opcode              
.clnttcp_control:             #        0x10f4a0  0      OPC=<label>         
  cmpl $0xf, %esi             #  1     0x10f4a0  3      OPC=cmpl_r32_imm8   
  movq 0x10(%rdi), %rcx       #  2     0x10f4a3  4      OPC=movq_r64_m64    
  ja .L_10f5b0                #  3     0x10f4a7  6      OPC=ja_label_1      
  leaq 0x53c90(%rip), %rax    #  4     0x10f4ad  7      OPC=leaq_r64_m16    
  movl %esi, %esi             #  5     0x10f4b4  2      OPC=movl_r32_r32    
  movslq (%rax,%rsi,4), %rsi  #  6     0x10f4b6  4      OPC=movslq_r64_m32  
  addq %rsi, %rax             #  7     0x10f4ba  3      OPC=addq_r64_r64    
  jmpq %rax                   #  8     0x10f4bd  2      OPC=jmpq_r64        
  nop                         #  9     0x10f4bf  1      OPC=nop             
  movq (%rdx), %rax           #  10    0x10f4c0  3      OPC=movq_r64_m64    
  bswap %eax                  #  11    0x10f4c3  2      OPC=bswap_r32       
  movl %eax, 0x54(%rcx)       #  12    0x10f4c5  3      OPC=movl_m32_r32    
  movl $0x1, %eax             #  13    0x10f4c8  5      OPC=movl_r32_imm32  
  retq                        #  14    0x10f4cd  1      OPC=retq            
  xchgw %ax, %ax              #  15    0x10f4ce  2      OPC=xchgw_ax_r16    
  movq (%rdx), %rax           #  16    0x10f4d0  3      OPC=movq_r64_m64    
  movq 0x8(%rdx), %rdx        #  17    0x10f4d3  4      OPC=movq_r64_m64    
  movl $0x1, 0x18(%rcx)       #  18    0x10f4d7  7      OPC=movl_m32_imm32  
  movq %rax, 0x8(%rcx)        #  19    0x10f4de  4      OPC=movq_m64_r64    
  movq %rdx, 0x10(%rcx)       #  20    0x10f4e2  4      OPC=movq_m64_r64    
  movl $0x1, %eax             #  21    0x10f4e6  5      OPC=movl_r32_imm32  
  retq                        #  22    0x10f4eb  1      OPC=retq            
  nop                         #  23    0x10f4ec  1      OPC=nop             
  nop                         #  24    0x10f4ed  1      OPC=nop             
  nop                         #  25    0x10f4ee  1      OPC=nop             
  nop                         #  26    0x10f4ef  1      OPC=nop             
  movq 0x8(%rcx), %rsi        #  27    0x10f4f0  4      OPC=movq_r64_m64    
  movq 0x10(%rcx), %rdi       #  28    0x10f4f4  4      OPC=movq_r64_m64    
  movl $0x1, %eax             #  29    0x10f4f8  5      OPC=movl_r32_imm32  
  movq %rsi, (%rdx)           #  30    0x10f4fd  3      OPC=movq_m64_r64    
  movq %rdi, 0x8(%rdx)        #  31    0x10f500  4      OPC=movq_m64_r64    
  retq                        #  32    0x10f504  1      OPC=retq            
  nop                         #  33    0x10f505  1      OPC=nop             
  nop                         #  34    0x10f506  1      OPC=nop             
  nop                         #  35    0x10f507  1      OPC=nop             
  movq 0x1c(%rcx), %rsi       #  36    0x10f508  4      OPC=movq_r64_m64    
  movq 0x24(%rcx), %rdi       #  37    0x10f50c  4      OPC=movq_r64_m64    
  movl $0x1, %eax             #  38    0x10f510  5      OPC=movl_r32_imm32  
  movq %rsi, (%rdx)           #  39    0x10f515  3      OPC=movq_m64_r64    
  movq %rdi, 0x8(%rdx)        #  40    0x10f518  4      OPC=movq_m64_r64    
  retq                        #  41    0x10f51c  1      OPC=retq            
  nop                         #  42    0x10f51d  1      OPC=nop             
  nop                         #  43    0x10f51e  1      OPC=nop             
  nop                         #  44    0x10f51f  1      OPC=nop             
  movl (%rcx), %eax           #  45    0x10f520  2      OPC=movl_r32_m32    
  movl %eax, (%rdx)           #  46    0x10f522  2      OPC=movl_m32_r32    
  movl $0x1, %eax             #  47    0x10f524  5      OPC=movl_r32_imm32  
  retq                        #  48    0x10f529  1      OPC=retq            
  nop                         #  49    0x10f52a  1      OPC=nop             
  nop                         #  50    0x10f52b  1      OPC=nop             
  nop                         #  51    0x10f52c  1      OPC=nop             
  nop                         #  52    0x10f52d  1      OPC=nop             
  nop                         #  53    0x10f52e  1      OPC=nop             
  nop                         #  54    0x10f52f  1      OPC=nop             
  movl $0x1, 0x4(%rcx)        #  55    0x10f530  7      OPC=movl_m32_imm32  
  movl $0x1, %eax             #  56    0x10f537  5      OPC=movl_r32_imm32  
  retq                        #  57    0x10f53c  1      OPC=retq            
  nop                         #  58    0x10f53d  1      OPC=nop             
  nop                         #  59    0x10f53e  1      OPC=nop             
  nop                         #  60    0x10f53f  1      OPC=nop             
  movl $0x0, 0x4(%rcx)        #  61    0x10f540  7      OPC=movl_m32_imm32  
  movl $0x1, %eax             #  62    0x10f547  5      OPC=movl_r32_imm32  
  retq                        #  63    0x10f54c  1      OPC=retq            
  nop                         #  64    0x10f54d  1      OPC=nop             
  nop                         #  65    0x10f54e  1      OPC=nop             
  nop                         #  66    0x10f54f  1      OPC=nop             
  movl 0x48(%rcx), %eax       #  67    0x10f550  3      OPC=movl_r32_m32    
  bswap %eax                  #  68    0x10f553  2      OPC=bswap_r32       
  movl %eax, %eax             #  69    0x10f555  2      OPC=movl_r32_r32    
  movq %rax, (%rdx)           #  70    0x10f557  3      OPC=movq_m64_r64    
  movl $0x1, %eax             #  71    0x10f55a  5      OPC=movl_r32_imm32  
  retq                        #  72    0x10f55f  1      OPC=retq            
  movq (%rdx), %rax           #  73    0x10f560  3      OPC=movq_r64_m64    
  subl $0x1, %eax             #  74    0x10f563  3      OPC=subl_r32_imm8   
  bswap %eax                  #  75    0x10f566  2      OPC=bswap_r32       
  movl %eax, 0x48(%rcx)       #  76    0x10f568  3      OPC=movl_m32_r32    
  movl $0x1, %eax             #  77    0x10f56b  5      OPC=movl_r32_imm32  
  retq                        #  78    0x10f570  1      OPC=retq            
  nop                         #  79    0x10f571  1      OPC=nop             
  nop                         #  80    0x10f572  1      OPC=nop             
  nop                         #  81    0x10f573  1      OPC=nop             
  nop                         #  82    0x10f574  1      OPC=nop             
  nop                         #  83    0x10f575  1      OPC=nop             
  nop                         #  84    0x10f576  1      OPC=nop             
  nop                         #  85    0x10f577  1      OPC=nop             
  movl 0x58(%rcx), %eax       #  86    0x10f578  3      OPC=movl_r32_m32    
  bswap %eax                  #  87    0x10f57b  2      OPC=bswap_r32       
  movl %eax, %eax             #  88    0x10f57d  2      OPC=movl_r32_r32    
  movq %rax, (%rdx)           #  89    0x10f57f  3      OPC=movq_m64_r64    
  movl $0x1, %eax             #  90    0x10f582  5      OPC=movl_r32_imm32  
  retq                        #  91    0x10f587  1      OPC=retq            
  nop                         #  92    0x10f588  1      OPC=nop             
  nop                         #  93    0x10f589  1      OPC=nop             
  nop                         #  94    0x10f58a  1      OPC=nop             
  nop                         #  95    0x10f58b  1      OPC=nop             
  nop                         #  96    0x10f58c  1      OPC=nop             
  nop                         #  97    0x10f58d  1      OPC=nop             
  nop                         #  98    0x10f58e  1      OPC=nop             
  nop                         #  99    0x10f58f  1      OPC=nop             
  movq (%rdx), %rax           #  100   0x10f590  3      OPC=movq_r64_m64    
  bswap %eax                  #  101   0x10f593  2      OPC=bswap_r32       
  movl %eax, 0x58(%rcx)       #  102   0x10f595  3      OPC=movl_m32_r32    
  movl $0x1, %eax             #  103   0x10f598  5      OPC=movl_r32_imm32  
  retq                        #  104   0x10f59d  1      OPC=retq            
  xchgw %ax, %ax              #  105   0x10f59e  2      OPC=xchgw_ax_r16    
  movl 0x54(%rcx), %eax       #  106   0x10f5a0  3      OPC=movl_r32_m32    
  bswap %eax                  #  107   0x10f5a3  2      OPC=bswap_r32       
  movl %eax, %eax             #  108   0x10f5a5  2      OPC=movl_r32_r32    
  movq %rax, (%rdx)           #  109   0x10f5a7  3      OPC=movq_m64_r64    
  movl $0x1, %eax             #  110   0x10f5aa  5      OPC=movl_r32_imm32  
  retq                        #  111   0x10f5af  1      OPC=retq            
.L_10f5b0:                    #        0x10f5b0  0      OPC=<label>         
  xorl %eax, %eax             #  112   0x10f5b0  2      OPC=xorl_r32_r32    
  retq                        #  113   0x10f5b2  1      OPC=retq            
  nop                         #  114   0x10f5b3  1      OPC=nop             
  nop                         #  115   0x10f5b4  1      OPC=nop             
  nop                         #  116   0x10f5b5  1      OPC=nop             
  nop                         #  117   0x10f5b6  1      OPC=nop             
  nop                         #  118   0x10f5b7  1      OPC=nop             
  nop                         #  119   0x10f5b8  1      OPC=nop             
  nop                         #  120   0x10f5b9  1      OPC=nop             
  nop                         #  121   0x10f5ba  1      OPC=nop             
  nop                         #  122   0x10f5bb  1      OPC=nop             
  nop                         #  123   0x10f5bc  1      OPC=nop             
  nop                         #  124   0x10f5bd  1      OPC=nop             
  nop                         #  125   0x10f5be  1      OPC=nop             
  nop                         #  126   0x10f5bf  1      OPC=nop             
                                                                            
.size clnttcp_control, .-clnttcp_control

