  .text
  .globl rtime_GLIBC_2_2_5
  .type rtime_GLIBC_2_2_5, @function

#! file-offset 0x10b640
#! rip-offset  0x10b640
#! capacity    496 bytes

# Text                        #  Line  RIP       Bytes  Opcode                   
.rtime_GLIBC_2_2_5:           #        0x10b640  0      OPC=<label>              
  pushq %r15                  #  1     0x10b640  2      OPC=pushq_r64_1          
  pushq %r14                  #  2     0x10b642  2      OPC=pushq_r64_1          
  pushq %r13                  #  3     0x10b644  2      OPC=pushq_r64_1          
  pushq %r12                  #  4     0x10b646  2      OPC=pushq_r64_1          
  movq %rsi, %r13             #  5     0x10b648  3      OPC=movq_r64_r64         
  pushq %rbp                  #  6     0x10b64b  1      OPC=pushq_r64_1          
  pushq %rbx                  #  7     0x10b64c  1      OPC=pushq_r64_1          
  movq %rdi, %rbp             #  8     0x10b64d  3      OPC=movq_r64_r64         
  movq %rdx, %rbx             #  9     0x10b650  3      OPC=movq_r64_r64         
  subq $0x38, %rsp            #  10    0x10b653  4      OPC=subq_r64_imm8        
  testq %rdx, %rdx            #  11    0x10b657  3      OPC=testq_r64_r64        
  je .L_10b780                #  12    0x10b65a  6      OPC=je_label_1           
  xorl %edx, %edx             #  13    0x10b660  2      OPC=xorl_r32_r32         
  movl $0x2, %esi             #  14    0x10b662  5      OPC=movl_r32_imm32       
  movl $0x2, %edi             #  15    0x10b667  5      OPC=movl_r32_imm32       
  callq .__socket             #  16    0x10b66c  5      OPC=callq_label          
  testl %eax, %eax            #  17    0x10b671  2      OPC=testl_r32_r32        
  movl %eax, %r14d            #  18    0x10b673  3      OPC=movl_r32_r32         
  js .L_10b7e7                #  19    0x10b676  6      OPC=js_label_1           
  leaq 0x8(%rsp), %r15        #  20    0x10b67c  5      OPC=leaq_r64_m16         
  xorl %ecx, %ecx             #  21    0x10b681  2      OPC=xorl_r32_r32         
  movw $0x2, (%rbp)           #  22    0x10b683  6      OPC=movw_m16_imm16       
  movw $0x2500, 0x2(%rbp)     #  23    0x10b689  6      OPC=movw_m16_imm16       
  movl $0x10, %r9d            #  24    0x10b68f  6      OPC=movl_r32_imm32       
  movq %rbp, %r8              #  25    0x10b695  3      OPC=movq_r64_r64         
  movl $0x4, %edx             #  26    0x10b698  5      OPC=movl_r32_imm32       
  movq %r15, %rsi             #  27    0x10b69d  3      OPC=movq_r64_r64         
  movl %r14d, %edi            #  28    0x10b6a0  3      OPC=movl_r32_r32         
  callq .sendto               #  29    0x10b6a3  5      OPC=callq_label          
  testl %eax, %eax            #  30    0x10b6a8  2      OPC=testl_r32_r32        
  js .L_10b7fb                #  31    0x10b6aa  6      OPC=js_label_1           
  movl $0x10624dd3, %edx      #  32    0x10b6b0  5      OPC=movl_r32_imm32       
  movl %r14d, 0x10(%rsp)      #  33    0x10b6b5  5      OPC=movl_m32_r32         
  leaq 0x10(%rsp), %r12       #  34    0x10b6ba  5      OPC=leaq_r64_m16         
  movl %edx, %eax             #  35    0x10b6bf  2      OPC=movl_r32_r32         
  mull 0x4(%rbx)              #  36    0x10b6c1  3      OPC=mull_m32             
  imull $0x3e8, (%rbx), %ebp  #  37    0x10b6c4  6      OPC=imull_r32_m32_imm32  
  movl $0x1, %eax             #  38    0x10b6ca  5      OPC=movl_r32_imm32       
  movq 0x28f7aa(%rip), %rbx   #  39    0x10b6cf  7      OPC=movq_r64_m64         
  movw %ax, 0x14(%rsp)        #  40    0x10b6d6  5      OPC=movw_m16_r16         
  shrl $0x6, %edx             #  41    0x10b6db  3      OPC=shrl_r32_imm8        
  addl %edx, %ebp             #  42    0x10b6de  2      OPC=addl_r32_r32         
  jmpq .L_10b6f2              #  43    0x10b6e0  2      OPC=jmpq_label           
  nop                         #  44    0x10b6e2  1      OPC=nop                  
  nop                         #  45    0x10b6e3  1      OPC=nop                  
  nop                         #  46    0x10b6e4  1      OPC=nop                  
  nop                         #  47    0x10b6e5  1      OPC=nop                  
  nop                         #  48    0x10b6e6  1      OPC=nop                  
  nop                         #  49    0x10b6e7  1      OPC=nop                  
.L_10b6e8:                    #        0x10b6e8  0      OPC=<label>              
  cmpl $0x4, (%rbx)           #  50    0x10b6e8  3      OPC=cmpl_m32_imm8        
  nop                         #  51    0x10b6eb  1      OPC=nop                  
  jne .L_10b808               #  52    0x10b6ec  6      OPC=jne_label_1          
.L_10b6f2:                    #        0x10b6f2  0      OPC=<label>              
  movl %ebp, %edx             #  53    0x10b6f2  2      OPC=movl_r32_r32         
  movl $0x1, %esi             #  54    0x10b6f4  5      OPC=movl_r32_imm32       
  movq %r12, %rdi             #  55    0x10b6f9  3      OPC=movq_r64_r64         
  callq .__poll               #  56    0x10b6fc  5      OPC=callq_label          
  testl %eax, %eax            #  57    0x10b701  2      OPC=testl_r32_r32        
  js .L_10b6e8                #  58    0x10b703  2      OPC=js_label             
  je .L_10b820                #  59    0x10b705  6      OPC=je_label_1           
  leaq 0xc(%rsp), %r9         #  60    0x10b70b  5      OPC=leaq_r64_m16         
  leaq 0x20(%rsp), %r8        #  61    0x10b710  5      OPC=leaq_r64_m16         
  xorl %ecx, %ecx             #  62    0x10b715  2      OPC=xorl_r32_r32         
  movl $0x4, %edx             #  63    0x10b717  5      OPC=movl_r32_imm32       
  movq %r15, %rsi             #  64    0x10b71c  3      OPC=movq_r64_r64         
  movl %r14d, %edi            #  65    0x10b71f  3      OPC=movl_r32_r32         
  movl $0x10, 0xc(%rsp)       #  66    0x10b722  8      OPC=movl_m32_imm32       
  callq .recvfrom             #  67    0x10b72a  5      OPC=callq_label          
  movq %rax, %rbp             #  68    0x10b72f  3      OPC=movq_r64_r64         
  movl %eax, %r12d            #  69    0x10b732  3      OPC=movl_r32_r32         
.L_10b735:                    #        0x10b735  0      OPC=<label>              
  movl (%rbx), %r15d          #  70    0x10b735  3      OPC=movl_r32_m32         
  nop                         #  71    0x10b738  1      OPC=nop                  
  movl %r14d, %edi            #  72    0x10b739  3      OPC=movl_r32_r32         
  callq .__close              #  73    0x10b73c  5      OPC=callq_label          
  testl %ebp, %ebp            #  74    0x10b741  2      OPC=testl_r32_r32        
  movl %r15d, (%rbx)          #  75    0x10b743  3      OPC=movl_m32_r32         
  nop                         #  76    0x10b746  1      OPC=nop                  
  js .L_10b7e7                #  77    0x10b747  6      OPC=js_label_1           
  cmpl $0x4, %r12d            #  78    0x10b74d  4      OPC=cmpl_r32_imm8        
  jne .L_10b7e0               #  79    0x10b751  6      OPC=jne_label_1          
  movl 0x8(%rsp), %eax        #  80    0x10b757  4      OPC=movl_r32_m32         
  movl $0x0, 0x4(%r13)        #  81    0x10b75b  8      OPC=movl_m32_imm32       
  bswap %eax                  #  82    0x10b763  2      OPC=bswap_r32            
  addl $0x7c558180, %eax      #  83    0x10b765  5      OPC=addl_eax_imm32       
  movl %eax, (%r13)           #  84    0x10b76a  4      OPC=movl_m32_r32         
  xorl %eax, %eax             #  85    0x10b76e  2      OPC=xorl_r32_r32         
.L_10b770:                    #        0x10b770  0      OPC=<label>              
  addq $0x38, %rsp            #  86    0x10b770  4      OPC=addq_r64_imm8        
  popq %rbx                   #  87    0x10b774  1      OPC=popq_r64_1           
  popq %rbp                   #  88    0x10b775  1      OPC=popq_r64_1           
  popq %r12                   #  89    0x10b776  2      OPC=popq_r64_1           
  popq %r13                   #  90    0x10b778  2      OPC=popq_r64_1           
  popq %r14                   #  91    0x10b77a  2      OPC=popq_r64_1           
  popq %r15                   #  92    0x10b77c  2      OPC=popq_r64_1           
  retq                        #  93    0x10b77e  1      OPC=retq                 
  nop                         #  94    0x10b77f  1      OPC=nop                  
.L_10b780:                    #        0x10b780  0      OPC=<label>              
  xorl %edx, %edx             #  95    0x10b780  2      OPC=xorl_r32_r32         
  movl $0x1, %esi             #  96    0x10b782  5      OPC=movl_r32_imm32       
  movl $0x2, %edi             #  97    0x10b787  5      OPC=movl_r32_imm32       
  callq .__socket             #  98    0x10b78c  5      OPC=callq_label          
  testl %eax, %eax            #  99    0x10b791  2      OPC=testl_r32_r32        
  movl %eax, %r14d            #  100   0x10b793  3      OPC=movl_r32_r32         
  js .L_10b7e7                #  101   0x10b796  2      OPC=js_label             
  movw $0x2, (%rbp)           #  102   0x10b798  6      OPC=movw_m16_imm16       
  movw $0x2500, 0x2(%rbp)     #  103   0x10b79e  6      OPC=movw_m16_imm16       
  movl $0x10, %edx            #  104   0x10b7a4  5      OPC=movl_r32_imm32       
  movq %rbp, %rsi             #  105   0x10b7a9  3      OPC=movq_r64_r64         
  movl %r14d, %edi            #  106   0x10b7ac  3      OPC=movl_r32_r32         
  callq .__connect            #  107   0x10b7af  5      OPC=callq_label          
  testl %eax, %eax            #  108   0x10b7b4  2      OPC=testl_r32_r32        
  js .L_10b7fb                #  109   0x10b7b6  2      OPC=js_label             
  leaq 0x8(%rsp), %rsi        #  110   0x10b7b8  5      OPC=leaq_r64_m16         
  movl $0x4, %edx             #  111   0x10b7bd  5      OPC=movl_r32_imm32       
  movl %r14d, %edi            #  112   0x10b7c2  3      OPC=movl_r32_r32         
  callq .__read               #  113   0x10b7c5  5      OPC=callq_label          
  movq 0x28f6af(%rip), %rbx   #  114   0x10b7ca  7      OPC=movq_r64_m64         
  movq %rax, %rbp             #  115   0x10b7d1  3      OPC=movq_r64_r64         
  movl %eax, %r12d            #  116   0x10b7d4  3      OPC=movl_r32_r32         
  jmpq .L_10b735              #  117   0x10b7d7  5      OPC=jmpq_label_1         
  nop                         #  118   0x10b7dc  1      OPC=nop                  
  nop                         #  119   0x10b7dd  1      OPC=nop                  
  nop                         #  120   0x10b7de  1      OPC=nop                  
  nop                         #  121   0x10b7df  1      OPC=nop                  
.L_10b7e0:                    #        0x10b7e0  0      OPC=<label>              
  movl $0x5, (%rbx)           #  122   0x10b7e0  6      OPC=movl_m32_imm32       
  nop                         #  123   0x10b7e6  1      OPC=nop                  
.L_10b7e7:                    #        0x10b7e7  0      OPC=<label>              
  addq $0x38, %rsp            #  124   0x10b7e7  4      OPC=addq_r64_imm8        
  movl $0xffffffff, %eax      #  125   0x10b7eb  6      OPC=movl_r32_imm32_1     
  popq %rbx                   #  126   0x10b7f1  1      OPC=popq_r64_1           
  popq %rbp                   #  127   0x10b7f2  1      OPC=popq_r64_1           
  popq %r12                   #  128   0x10b7f3  2      OPC=popq_r64_1           
  popq %r13                   #  129   0x10b7f5  2      OPC=popq_r64_1           
  popq %r14                   #  130   0x10b7f7  2      OPC=popq_r64_1           
  popq %r15                   #  131   0x10b7f9  2      OPC=popq_r64_1           
  retq                        #  132   0x10b7fb  1      OPC=retq                 
.L_10b7fb:                    #        0x10b7fc  0      OPC=<label>              
  movq 0x28f67e(%rip), %rbx   #  133   0x10b7fc  7      OPC=movq_r64_m64         
  nop                         #  134   0x10b803  1      OPC=nop                  
  nop                         #  135   0x10b804  1      OPC=nop                  
  nop                         #  136   0x10b805  1      OPC=nop                  
  nop                         #  137   0x10b806  1      OPC=nop                  
  nop                         #  138   0x10b807  1      OPC=nop                  
  nop                         #  139   0x10b808  1      OPC=nop                  
.L_10b808:                    #        0x10b809  0      OPC=<label>              
  movl (%rbx), %ebp           #  140   0x10b809  2      OPC=movl_r32_m32         
  nop                         #  141   0x10b80b  1      OPC=nop                  
.L_10b80b:                    #        0x10b80c  0      OPC=<label>              
  movl %r14d, %edi            #  142   0x10b80c  3      OPC=movl_r32_r32         
  callq .__close              #  143   0x10b80f  5      OPC=callq_label          
  movl %ebp, (%rbx)           #  144   0x10b814  2      OPC=movl_m32_r32         
  nop                         #  145   0x10b816  1      OPC=nop                  
  movl $0xffffffff, %eax      #  146   0x10b817  6      OPC=movl_r32_imm32_1     
  jmpq .L_10b770              #  147   0x10b81d  5      OPC=jmpq_label_1         
.L_10b820:                    #        0x10b822  0      OPC=<label>              
  movl $0x6e, (%rbx)          #  148   0x10b822  6      OPC=movl_m32_imm32       
  nop                         #  149   0x10b828  1      OPC=nop                  
  movl $0x6e, %ebp            #  150   0x10b829  5      OPC=movl_r32_imm32       
  jmpq .L_10b80b              #  151   0x10b82e  2      OPC=jmpq_label           
  xchgw %ax, %ax              #  152   0x10b830  2      OPC=xchgw_ax_r16         
                                                                                 
.size rtime_GLIBC_2_2_5, .-rtime_GLIBC_2_2_5

