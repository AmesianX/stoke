  .text
  .globl _IO_wstr_overflow
  .type _IO_wstr_overflow, @function

#! file-offset 0x6a8c0
#! rip-offset  0x6a8c0
#! capacity    512 bytes

# Text                            #  Line  RIP      Bytes  Opcode                
._IO_wstr_overflow:               #        0x6a8c0  0      OPC=<label>           
  pushq %r15                      #  1     0x6a8c0  2      OPC=pushq_r64_1       
  pushq %r14                      #  2     0x6a8c2  2      OPC=pushq_r64_1       
  pushq %r13                      #  3     0x6a8c4  2      OPC=pushq_r64_1       
  pushq %r12                      #  4     0x6a8c6  2      OPC=pushq_r64_1       
  pushq %rbp                      #  5     0x6a8c8  1      OPC=pushq_r64_1       
  pushq %rbx                      #  6     0x6a8c9  1      OPC=pushq_r64_1       
  subq $0x28, %rsp                #  7     0x6a8ca  4      OPC=subq_r64_imm8     
  movl (%rdi), %edx               #  8     0x6a8ce  2      OPC=movl_r32_m32      
  cmpl $0xffffffff, %esi          #  9     0x6a8d0  6      OPC=cmpl_r32_imm32    
  nop                             #  10    0x6a8d6  1      OPC=nop               
  nop                             #  11    0x6a8d7  1      OPC=nop               
  nop                             #  12    0x6a8d8  1      OPC=nop               
  sete %bpl                       #  13    0x6a8d9  4      OPC=sete_r8           
  testb $0x8, %dl                 #  14    0x6a8dd  3      OPC=testb_r8_imm8     
  je .L_6a8f8                     #  15    0x6a8e0  2      OPC=je_label          
  movl %ebp, %eax                 #  16    0x6a8e2  2      OPC=movl_r32_r32      
  xorl $0x1, %eax                 #  17    0x6a8e4  3      OPC=xorl_r32_imm8     
  movzbl %al, %eax                #  18    0x6a8e7  3      OPC=movzbl_r32_r8     
  negl %eax                       #  19    0x6a8ea  2      OPC=negl_r32          
.L_6a8e6:                         #        0x6a8ec  0      OPC=<label>           
  addq $0x28, %rsp                #  20    0x6a8ec  4      OPC=addq_r64_imm8     
  popq %rbx                       #  21    0x6a8f0  1      OPC=popq_r64_1        
  popq %rbp                       #  22    0x6a8f1  1      OPC=popq_r64_1        
  popq %r12                       #  23    0x6a8f2  2      OPC=popq_r64_1        
  popq %r13                       #  24    0x6a8f4  2      OPC=popq_r64_1        
  popq %r14                       #  25    0x6a8f6  2      OPC=popq_r64_1        
  popq %r15                       #  26    0x6a8f8  2      OPC=popq_r64_1        
  retq                            #  27    0x6a8fa  1      OPC=retq              
  nop                             #  28    0x6a8fb  1      OPC=nop               
  nop                             #  29    0x6a8fc  1      OPC=nop               
  nop                             #  30    0x6a8fd  1      OPC=nop               
.L_6a8f8:                         #        0x6a8fe  0      OPC=<label>           
  movl %edx, %eax                 #  31    0x6a8fe  2      OPC=movl_r32_r32      
  andl $0xc00, %eax               #  32    0x6a900  5      OPC=andl_eax_imm32    
  cmpl $0x400, %eax               #  33    0x6a905  5      OPC=cmpl_eax_imm32    
  je .L_6aa98                     #  34    0x6a90a  6      OPC=je_label_1        
  movq 0xa0(%rdi), %rcx           #  35    0x6a910  7      OPC=movq_r64_m64      
  movq 0x20(%rcx), %r8            #  36    0x6a917  4      OPC=movq_r64_m64      
.L_6a915:                         #        0x6a91b  0      OPC=<label>           
  movq 0x30(%rcx), %r14           #  37    0x6a91b  4      OPC=movq_r64_m64      
  movq 0x38(%rcx), %r13           #  38    0x6a91f  4      OPC=movq_r64_m64      
  movzbl %bpl, %eax               #  39    0x6a923  4      OPC=movzbl_r32_r8     
  subq 0x18(%rcx), %r8            #  40    0x6a927  4      OPC=subq_r64_m64      
  movl %esi, %r12d                #  41    0x6a92b  3      OPC=movl_r32_r32      
  movq %rdi, %rbx                 #  42    0x6a92e  3      OPC=movq_r64_r64      
  subq %r14, %r13                 #  43    0x6a931  3      OPC=subq_r64_r64      
  movq %r13, %r9                  #  44    0x6a934  3      OPC=movq_r64_r64      
  sarq $0x2, %r9                  #  45    0x6a937  4      OPC=sarq_r64_imm8     
  sarq $0x2, %r8                  #  46    0x6a93b  4      OPC=sarq_r64_imm8     
  addq %r9, %rax                  #  47    0x6a93f  3      OPC=addq_r64_r64      
  cmpq %rax, %r8                  #  48    0x6a942  3      OPC=cmpq_r64_r64      
  jb .L_6aa50                     #  49    0x6a945  6      OPC=jb_label_1        
  testb $0x8, 0x74(%rdi)          #  50    0x6a94b  4      OPC=testb_m8_imm8     
  je .L_6a960                     #  51    0x6a94f  2      OPC=je_label          
.L_6a94b:                         #        0x6a951  0      OPC=<label>           
  addq $0x28, %rsp                #  52    0x6a951  4      OPC=addq_r64_imm8     
  movl $0xffffffff, %eax          #  53    0x6a955  6      OPC=movl_r32_imm32_1  
  popq %rbx                       #  54    0x6a95b  1      OPC=popq_r64_1        
  popq %rbp                       #  55    0x6a95c  1      OPC=popq_r64_1        
  popq %r12                       #  56    0x6a95d  2      OPC=popq_r64_1        
  popq %r13                       #  57    0x6a95f  2      OPC=popq_r64_1        
  popq %r14                       #  58    0x6a961  2      OPC=popq_r64_1        
  popq %r15                       #  59    0x6a963  2      OPC=popq_r64_1        
  retq                            #  60    0x6a965  1      OPC=retq              
  nop                             #  61    0x6a966  1      OPC=nop               
.L_6a960:                         #        0x6a967  0      OPC=<label>           
  leaq 0x32(%r9), %r15            #  62    0x6a967  4      OPC=leaq_r64_m16      
  movq %r9, 0x8(%rsp)             #  63    0x6a96b  5      OPC=movq_m64_r64      
  leaq (%r15,%r15,1), %rcx        #  64    0x6a970  4      OPC=leaq_r64_m16      
  cmpq %rcx, %r9                  #  65    0x6a974  3      OPC=cmpq_r64_r64      
  ja .L_6a94b                     #  66    0x6a977  2      OPC=ja_label          
  movq $0x3fffffffffffffff, %rax  #  67    0x6a979  10     OPC=movq_r64_imm64    
  movq %rcx, 0x10(%rsp)           #  68    0x6a983  5      OPC=movq_m64_r64      
  cmpq %rax, %rcx                 #  69    0x6a988  3      OPC=cmpq_r64_r64      
  ja .L_6a94b                     #  70    0x6a98b  2      OPC=ja_label          
  leaq (,%r15,8), %rax            #  71    0x6a98d  8      OPC=leaq_r64_m16      
  movq %rax, 0x18(%rsp)           #  72    0x6a995  5      OPC=movq_m64_r64      
  movq %rax, %rdi                 #  73    0x6a99a  3      OPC=movq_r64_r64      
  callq 0xe0(%rbx)                #  74    0x6a99d  6      OPC=callq_m64         
  testq %rax, %rax                #  75    0x6a9a3  3      OPC=testq_r64_r64     
  movq %rax, %r15                 #  76    0x6a9a6  3      OPC=movq_r64_r64      
  je .L_6a94b                     #  77    0x6a9a9  2      OPC=je_label          
  testq %r14, %r14                #  78    0x6a9ab  3      OPC=testq_r64_r64     
  movq 0x10(%rsp), %rcx           #  79    0x6a9ae  5      OPC=movq_r64_m64      
  movq 0x8(%rsp), %r9             #  80    0x6a9b3  5      OPC=movq_r64_m64      
  je .L_6a9e3                     #  81    0x6a9b8  2      OPC=je_label          
  movq %r9, %rdx                  #  82    0x6a9ba  3      OPC=movq_r64_r64      
  movq %r14, %rsi                 #  83    0x6a9bd  3      OPC=movq_r64_r64      
  movq %rax, %rdi                 #  84    0x6a9c0  3      OPC=movq_r64_r64      
  callq .wmemcpy                  #  85    0x6a9c3  5      OPC=callq_label       
  movq %r14, %rdi                 #  86    0x6a9c8  3      OPC=movq_r64_r64      
  callq 0xe8(%rbx)                #  87    0x6a9cb  6      OPC=callq_m64         
  movq 0xa0(%rbx), %rax           #  88    0x6a9d1  7      OPC=movq_r64_m64      
  movq 0x10(%rsp), %rcx           #  89    0x6a9d8  5      OPC=movq_r64_m64      
  movq 0x8(%rsp), %r9             #  90    0x6a9dd  5      OPC=movq_r64_m64      
  movq $0x0, 0x30(%rax)           #  91    0x6a9e2  8      OPC=movq_m64_imm32    
.L_6a9e3:                         #        0x6a9ea  0      OPC=<label>           
  movq %rcx, %rdx                 #  92    0x6a9ea  3      OPC=movq_r64_r64      
  leaq (%r15,%r13,1), %rdi        #  93    0x6a9ed  4      OPC=leaq_r64_m16      
  xorl %esi, %esi                 #  94    0x6a9f1  2      OPC=xorl_r32_r32      
  subq %r9, %rdx                  #  95    0x6a9f3  3      OPC=subq_r64_r64      
  callq .wmemset                  #  96    0x6a9f6  5      OPC=callq_label       
  movq 0x18(%rsp), %rdx           #  97    0x6a9fb  5      OPC=movq_r64_m64      
  movl $0x1, %ecx                 #  98    0x6aa00  5      OPC=movl_r32_imm32    
  movq %r15, %rsi                 #  99    0x6aa05  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                 #  100   0x6aa08  3      OPC=movq_r64_r64      
  addq %r15, %rdx                 #  101   0x6aa0b  3      OPC=addq_r64_r64      
  callq ._IO_wsetb                #  102   0x6aa0e  5      OPC=callq_label       
  movq 0xa0(%rbx), %rcx           #  103   0x6aa13  7      OPC=movq_r64_m64      
  movq %r15, %rax                 #  104   0x6aa1a  3      OPC=movq_r64_r64      
  subq %r14, %rax                 #  105   0x6aa1d  3      OPC=subq_r64_r64      
  addq %rax, 0x10(%rcx)           #  106   0x6aa20  4      OPC=addq_m64_r64      
  movq %r15, %rax                 #  107   0x6aa24  3      OPC=movq_r64_r64      
  movq %r15, 0x18(%rcx)           #  108   0x6aa27  4      OPC=movq_m64_r64      
  subq %r14, %rax                 #  109   0x6aa2b  3      OPC=subq_r64_r64      
  addq %rax, (%rcx)               #  110   0x6aa2e  3      OPC=addq_m64_r64      
  movq %r15, %rax                 #  111   0x6aa31  3      OPC=movq_r64_r64      
  subq %r14, %rax                 #  112   0x6aa34  3      OPC=subq_r64_r64      
  addq %rax, 0x8(%rcx)            #  113   0x6aa37  4      OPC=addq_m64_r64      
  movq %r15, %rax                 #  114   0x6aa3b  3      OPC=movq_r64_r64      
  subq %r14, %rax                 #  115   0x6aa3e  3      OPC=subq_r64_r64      
  addq %rax, 0x20(%rcx)           #  116   0x6aa41  4      OPC=addq_m64_r64      
  movq 0x38(%rcx), %rax           #  117   0x6aa45  4      OPC=movq_r64_m64      
  movq %rax, 0x28(%rcx)           #  118   0x6aa49  4      OPC=movq_m64_r64      
  nop                             #  119   0x6aa4d  1      OPC=nop               
  nop                             #  120   0x6aa4e  1      OPC=nop               
  nop                             #  121   0x6aa4f  1      OPC=nop               
  nop                             #  122   0x6aa50  1      OPC=nop               
  nop                             #  123   0x6aa51  1      OPC=nop               
  nop                             #  124   0x6aa52  1      OPC=nop               
  nop                             #  125   0x6aa53  1      OPC=nop               
  nop                             #  126   0x6aa54  1      OPC=nop               
  nop                             #  127   0x6aa55  1      OPC=nop               
  nop                             #  128   0x6aa56  1      OPC=nop               
.L_6aa50:                         #        0x6aa57  0      OPC=<label>           
  testb %bpl, %bpl                #  129   0x6aa57  3      OPC=testb_r8_r8       
  je .L_6aa80                     #  130   0x6aa5a  2      OPC=je_label          
  movq 0x20(%rcx), %rdx           #  131   0x6aa5c  4      OPC=movq_r64_m64      
.L_6aa59:                         #        0x6aa60  0      OPC=<label>           
  cmpq %rdx, 0x8(%rcx)            #  132   0x6aa60  4      OPC=cmpq_m64_r64      
  movl %r12d, %eax                #  133   0x6aa64  3      OPC=movl_r32_r32      
  jae .L_6a8e6                    #  134   0x6aa67  6      OPC=jae_label_1       
  movq %rdx, 0x8(%rcx)            #  135   0x6aa6d  4      OPC=movq_m64_r64      
  addq $0x28, %rsp                #  136   0x6aa71  4      OPC=addq_r64_imm8     
  popq %rbx                       #  137   0x6aa75  1      OPC=popq_r64_1        
  popq %rbp                       #  138   0x6aa76  1      OPC=popq_r64_1        
  popq %r12                       #  139   0x6aa77  2      OPC=popq_r64_1        
  popq %r13                       #  140   0x6aa79  2      OPC=popq_r64_1        
  popq %r14                       #  141   0x6aa7b  2      OPC=popq_r64_1        
  popq %r15                       #  142   0x6aa7d  2      OPC=popq_r64_1        
  retq                            #  143   0x6aa7f  1      OPC=retq              
  nop                             #  144   0x6aa80  1      OPC=nop               
  nop                             #  145   0x6aa81  1      OPC=nop               
  nop                             #  146   0x6aa82  1      OPC=nop               
  nop                             #  147   0x6aa83  1      OPC=nop               
  nop                             #  148   0x6aa84  1      OPC=nop               
  nop                             #  149   0x6aa85  1      OPC=nop               
  nop                             #  150   0x6aa86  1      OPC=nop               
.L_6aa80:                         #        0x6aa87  0      OPC=<label>           
  movq 0x20(%rcx), %rax           #  151   0x6aa87  4      OPC=movq_r64_m64      
  leaq 0x4(%rax), %rdx            #  152   0x6aa8b  4      OPC=leaq_r64_m16      
  movq %rdx, 0x20(%rcx)           #  153   0x6aa8f  4      OPC=movq_m64_r64      
  movl %r12d, (%rax)              #  154   0x6aa93  3      OPC=movl_m32_r32      
  jmpq .L_6aa59                   #  155   0x6aa96  2      OPC=jmpq_label        
  nop                             #  156   0x6aa98  1      OPC=nop               
  nop                             #  157   0x6aa99  1      OPC=nop               
  nop                             #  158   0x6aa9a  1      OPC=nop               
  nop                             #  159   0x6aa9b  1      OPC=nop               
  nop                             #  160   0x6aa9c  1      OPC=nop               
  nop                             #  161   0x6aa9d  1      OPC=nop               
  nop                             #  162   0x6aa9e  1      OPC=nop               
.L_6aa98:                         #        0x6aa9f  0      OPC=<label>           
  movq 0xa0(%rdi), %rcx           #  163   0x6aa9f  7      OPC=movq_r64_m64      
  orb $0x8, %dh                   #  164   0x6aaa6  3      OPC=orb_rh_imm8       
  movl %edx, (%rdi)               #  165   0x6aaa9  2      OPC=movl_m32_r32      
  movq (%rcx), %r8                #  166   0x6aaab  3      OPC=movq_r64_m64      
  movq 0x8(%rcx), %rax            #  167   0x6aaae  4      OPC=movq_r64_m64      
  movq %r8, 0x20(%rcx)            #  168   0x6aab2  4      OPC=movq_m64_r64      
  movq %rax, (%rcx)               #  169   0x6aab6  3      OPC=movq_m64_r64      
  jmpq .L_6a915                   #  170   0x6aab9  5      OPC=jmpq_label_1      
  nop                             #  171   0x6aabe  1      OPC=nop               
  nop                             #  172   0x6aabf  1      OPC=nop               
  nop                             #  173   0x6aac0  1      OPC=nop               
  nop                             #  174   0x6aac1  1      OPC=nop               
  nop                             #  175   0x6aac2  1      OPC=nop               
  nop                             #  176   0x6aac3  1      OPC=nop               
  nop                             #  177   0x6aac4  1      OPC=nop               
  nop                             #  178   0x6aac5  1      OPC=nop               
  nop                             #  179   0x6aac6  1      OPC=nop               
                                                                                 
.size _IO_wstr_overflow, .-_IO_wstr_overflow

