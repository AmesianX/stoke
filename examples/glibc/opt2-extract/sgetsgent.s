  .text
  .globl sgetsgent
  .type sgetsgent, @function

#! file-offset 0xec3f0
#! rip-offset  0xec3f0
#! capacity    416 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
.sgetsgent:                         #        0xec3f0  0      OPC=<label>           
  pushq %r14                        #  1     0xec3f0  2      OPC=pushq_r64_1       
  pushq %r13                        #  2     0xec3f2  2      OPC=pushq_r64_1       
  movl $0x1, %esi                   #  3     0xec3f4  5      OPC=movl_r32_imm32    
  pushq %r12                        #  4     0xec3f9  2      OPC=pushq_r64_1       
  pushq %rbp                        #  5     0xec3fb  1      OPC=pushq_r64_1       
  movq %rdi, %r12                   #  6     0xec3fc  3      OPC=movq_r64_r64      
  pushq %rbx                        #  7     0xec3ff  1      OPC=pushq_r64_1       
  xorl %eax, %eax                   #  8     0xec400  2      OPC=xorl_r32_r32      
  subq $0x10, %rsp                  #  9     0xec402  4      OPC=subq_r64_imm8     
  cmpl $0x0, 0x2b47f3(%rip)         #  10    0xec406  7      OPC=cmpl_m32_imm8     
  je .L_ec41b                       #  11    0xec40d  2      OPC=je_label          
  lock                              #  12    0xec40f  1      OPC=lock              
  cmpxchgl %esi, 0x2b2759(%rip)     #  13    0xec410  7      OPC=cmpxchgl_m32_r32  
  nop                               #  14    0xec417  1      OPC=nop               
  jne .L_ec424                      #  15    0xec418  2      OPC=jne_label         
  jmpq .L_ec43e                     #  16    0xec41a  2      OPC=jmpq_label        
.L_ec41b:                           #        0xec41c  0      OPC=<label>           
  cmpxchgl %esi, 0x2b274e(%rip)     #  17    0xec41c  7      OPC=cmpxchgl_m32_r32  
  je .L_ec43e                       #  18    0xec423  2      OPC=je_label          
.L_ec424:                           #        0xec425  0      OPC=<label>           
  leaq 0x2b2745(%rip), %rdi         #  19    0xec425  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  20    0xec42c  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  21    0xec433  5      OPC=callq_label       
  addq $0x80, %rsp                  #  22    0xec438  7      OPC=addq_r64_imm32    
.L_ec43e:                           #        0xec43f  0      OPC=<label>           
  movq 0x2b2723(%rip), %rdx         #  23    0xec43f  7      OPC=movq_r64_m64      
  movq 0x2b2714(%rip), %rbx         #  24    0xec446  7      OPC=movq_r64_m64      
  testq %rdx, %rdx                  #  25    0xec44d  3      OPC=testq_r64_r64     
  je .L_ec550                       #  26    0xec450  6      OPC=je_label_1        
.L_ec455:                           #        0xec456  0      OPC=<label>           
  leaq 0x8(%rsp), %r13              #  27    0xec456  5      OPC=leaq_r64_m16      
  movq 0x2aea1f(%rip), %rbp         #  28    0xec45b  7      OPC=movq_r64_m64      
  jmpq .L_ec472                     #  29    0xec462  2      OPC=jmpq_label        
  nop                               #  30    0xec464  1      OPC=nop               
  nop                               #  31    0xec465  1      OPC=nop               
  nop                               #  32    0xec466  1      OPC=nop               
  nop                               #  33    0xec467  1      OPC=nop               
  nop                               #  34    0xec468  1      OPC=nop               
.L_ec468:                           #        0xec469  0      OPC=<label>           
  movq %rax, 0x2b26f9(%rip)         #  35    0xec469  7      OPC=movq_m64_r64      
  movq %rax, %rdx                   #  36    0xec470  3      OPC=movq_r64_r64      
.L_ec472:                           #        0xec473  0      OPC=<label>           
  leaq 0x2b26c7(%rip), %rsi         #  37    0xec473  7      OPC=leaq_r64_m16      
  movq %r13, %r8                    #  38    0xec47a  3      OPC=movq_r64_r64      
  movq %rbx, %rcx                   #  39    0xec47d  3      OPC=movq_r64_r64      
  movq %r12, %rdi                   #  40    0xec480  3      OPC=movq_r64_r64      
  callq .sgetsgent_r                #  41    0xec483  5      OPC=callq_label       
  testl %eax, %eax                  #  42    0xec488  2      OPC=testl_r32_r32     
  movl (%rbp), %edx                 #  43    0xec48a  3      OPC=movl_r32_m32      
  nop                               #  44    0xec48d  1      OPC=nop               
  je .L_ec540                       #  45    0xec48e  6      OPC=je_label_1        
  cmpl $0x22, %edx                  #  46    0xec494  3      OPC=cmpl_r32_imm8     
  jne .L_ec540                      #  47    0xec497  6      OPC=jne_label_1       
  movq 0x2b26bd(%rip), %rax         #  48    0xec49d  7      OPC=movq_r64_m64      
  movq 0x2b26be(%rip), %r14         #  49    0xec4a4  7      OPC=movq_r64_m64      
  leaq 0x400(%rax), %rbx            #  50    0xec4ab  7      OPC=leaq_r64_m16      
  movq %r14, %rdi                   #  51    0xec4b2  3      OPC=movq_r64_r64      
  movq %rbx, %rsi                   #  52    0xec4b5  3      OPC=movq_r64_r64      
  movq %rbx, 0x2b26a2(%rip)         #  53    0xec4b8  7      OPC=movq_m64_r64      
  callq .__tls_get_addr_plt         #  54    0xec4bf  5      OPC=callq_label       
  testq %rax, %rax                  #  55    0xec4c4  3      OPC=testq_r64_r64     
  jne .L_ec468                      #  56    0xec4c7  2      OPC=jne_label         
  movl (%rbp), %ebx                 #  57    0xec4c9  3      OPC=movl_r32_m32      
  nop                               #  58    0xec4cc  1      OPC=nop               
  movq %r14, %rdi                   #  59    0xec4cd  3      OPC=movq_r64_r64      
  callq .L_1f8c0                    #  60    0xec4d0  5      OPC=callq_label       
  movq $0x0, 0x2b2689(%rip)         #  61    0xec4d5  11     OPC=movq_m64_imm32    
  movl %ebx, (%rbp)                 #  62    0xec4e0  3      OPC=movl_m32_r32      
  nop                               #  63    0xec4e3  1      OPC=nop               
  movl %ebx, %edx                   #  64    0xec4e4  2      OPC=movl_r32_r32      
.L_ec4e5:                           #        0xec4e6  0      OPC=<label>           
  movq $0x0, 0x8(%rsp)              #  65    0xec4e6  9      OPC=movq_m64_imm32    
.L_ec4ee:                           #        0xec4ef  0      OPC=<label>           
  cmpl $0x0, 0x2b470b(%rip)         #  66    0xec4ef  7      OPC=cmpl_m32_imm8     
  je .L_ec502                       #  67    0xec4f6  2      OPC=je_label          
  lock                              #  68    0xec4f8  1      OPC=lock              
  decl 0x2b2672(%rip)               #  69    0xec4f9  6      OPC=decl_m32          
  nop                               #  70    0xec4ff  1      OPC=nop               
  jne .L_ec50a                      #  71    0xec500  2      OPC=jne_label         
  jmpq .L_ec524                     #  72    0xec502  2      OPC=jmpq_label        
.L_ec502:                           #        0xec504  0      OPC=<label>           
  decl 0x2b2668(%rip)               #  73    0xec504  6      OPC=decl_m32          
  je .L_ec524                       #  74    0xec50a  2      OPC=je_label          
.L_ec50a:                           #        0xec50c  0      OPC=<label>           
  leaq 0x2b265f(%rip), %rdi         #  75    0xec50c  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  76    0xec513  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  77    0xec51a  5      OPC=callq_label       
  addq $0x80, %rsp                  #  78    0xec51f  7      OPC=addq_r64_imm32    
.L_ec524:                           #        0xec526  0      OPC=<label>           
  movl %edx, (%rbp)                 #  79    0xec526  3      OPC=movl_m32_r32      
  nop                               #  80    0xec529  1      OPC=nop               
  movq 0x8(%rsp), %rax              #  81    0xec52a  5      OPC=movq_r64_m64      
  addq $0x10, %rsp                  #  82    0xec52f  4      OPC=addq_r64_imm8     
  popq %rbx                         #  83    0xec533  1      OPC=popq_r64_1        
  popq %rbp                         #  84    0xec534  1      OPC=popq_r64_1        
  popq %r12                         #  85    0xec535  2      OPC=popq_r64_1        
  popq %r13                         #  86    0xec537  2      OPC=popq_r64_1        
  popq %r14                         #  87    0xec539  2      OPC=popq_r64_1        
  retq                              #  88    0xec53b  1      OPC=retq              
  nop                               #  89    0xec53c  1      OPC=nop               
  nop                               #  90    0xec53d  1      OPC=nop               
  nop                               #  91    0xec53e  1      OPC=nop               
  nop                               #  92    0xec53f  1      OPC=nop               
  nop                               #  93    0xec540  1      OPC=nop               
  nop                               #  94    0xec541  1      OPC=nop               
.L_ec540:                           #        0xec542  0      OPC=<label>           
  cmpq $0x0, 0x2b2620(%rip)         #  95    0xec542  8      OPC=cmpq_m64_imm8     
  jne .L_ec4ee                      #  96    0xec54a  2      OPC=jne_label         
  jmpq .L_ec4e5                     #  97    0xec54c  2      OPC=jmpq_label        
  nop                               #  98    0xec54e  1      OPC=nop               
  nop                               #  99    0xec54f  1      OPC=nop               
  nop                               #  100   0xec550  1      OPC=nop               
  nop                               #  101   0xec551  1      OPC=nop               
.L_ec550:                           #        0xec552  0      OPC=<label>           
  movl $0x400, %edi                 #  102   0xec552  5      OPC=movl_r32_imm32    
  movq $0x400, 0x2b2600(%rip)       #  103   0xec557  11     OPC=movq_m64_imm32    
  movl $0x400, %ebx                 #  104   0xec562  5      OPC=movl_r32_imm32    
  callq .memalign_plt               #  105   0xec567  5      OPC=callq_label       
  testq %rax, %rax                  #  106   0xec56c  3      OPC=testq_r64_r64     
  movq %rax, 0x2b25f4(%rip)         #  107   0xec56f  7      OPC=movq_m64_r64      
  movq %rax, %rdx                   #  108   0xec576  3      OPC=movq_r64_r64      
  jne .L_ec455                      #  109   0xec579  6      OPC=jne_label_1       
  movq 0x2ae8fc(%rip), %rbp         #  110   0xec57f  7      OPC=movq_r64_m64      
  movl (%rbp), %edx                 #  111   0xec586  3      OPC=movl_r32_m32      
  nop                               #  112   0xec589  1      OPC=nop               
  jmpq .L_ec4e5                     #  113   0xec58a  5      OPC=jmpq_label_1      
  nop                               #  114   0xec58f  1      OPC=nop               
  nop                               #  115   0xec590  1      OPC=nop               
  nop                               #  116   0xec591  1      OPC=nop               
                                                                                   
.size sgetsgent, .-sgetsgent

