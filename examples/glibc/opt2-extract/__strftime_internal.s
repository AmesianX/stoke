  .text
  .globl __strftime_internal
  .type __strftime_internal, @function

#! file-offset 0xaf280
#! rip-offset  0xaf280
#! capacity    9152 bytes

# Text                            #  Line  RIP      Bytes  Opcode                   
.__strftime_internal:             #        0xaf280  0      OPC=<label>              
  pushq %rbp                      #  1     0xaf280  1      OPC=pushq_r64_1          
  movq %rdx, %r10                 #  2     0xaf281  3      OPC=movq_r64_r64         
  movq %rsp, %rbp                 #  3     0xaf284  3      OPC=movq_r64_r64         
  pushq %r15                      #  4     0xaf287  2      OPC=pushq_r64_1          
  pushq %r14                      #  5     0xaf289  2      OPC=pushq_r64_1          
  pushq %r13                      #  6     0xaf28b  2      OPC=pushq_r64_1          
  pushq %r12                      #  7     0xaf28d  2      OPC=pushq_r64_1          
  movq %rdi, %r12                 #  8     0xaf28f  3      OPC=movq_r64_r64         
  pushq %rbx                      #  9     0xaf292  1      OPC=pushq_r64_1          
  subq $0x118, %rsp               #  10    0xaf293  7      OPC=subq_r64_imm32       
  movq %rsi, -0xd8(%rbp)          #  11    0xaf29a  7      OPC=movq_m64_r64         
  movl 0x8(%rcx), %esi            #  12    0xaf2a1  3      OPC=movl_r32_m32         
  movq 0x10(%r9), %rdi            #  13    0xaf2a4  4      OPC=movq_r64_m64         
  movq 0x30(%rcx), %rax           #  14    0xaf2a8  4      OPC=movq_r64_m64         
  movq %rcx, -0xf0(%rbp)          #  15    0xaf2ac  7      OPC=movq_m64_r64         
  movq %r8, -0x110(%rbp)          #  16    0xaf2b3  7      OPC=movq_m64_r64         
  cmpl $0xc, %esi                 #  17    0xaf2ba  3      OPC=cmpl_r32_imm8        
  movq %r9, -0xf8(%rbp)           #  18    0xaf2bd  7      OPC=movq_m64_r64         
  movl %esi, -0xe4(%rbp)          #  19    0xaf2c4  6      OPC=movl_m32_r32         
  movq %rdi, -0x108(%rbp)         #  20    0xaf2ca  7      OPC=movq_m64_r64         
  movq %rax, -0x120(%rbp)         #  21    0xaf2d1  7      OPC=movq_m64_r64         
  jle .L_af4c0                    #  22    0xaf2d8  6      OPC=jle_label_1          
  subl $0xc, -0xe4(%rbp)          #  23    0xaf2de  7      OPC=subl_m32_imm8        
.L_af2e5:                         #        0xaf2e5  0      OPC=<label>              
  movl (%r10), %eax               #  24    0xaf2e5  3      OPC=movl_r32_m32         
  xorl %r13d, %r13d               #  25    0xaf2e8  3      OPC=xorl_r32_r32         
  testl %eax, %eax                #  26    0xaf2eb  2      OPC=testl_r32_r32        
  je .L_af5c7                     #  27    0xaf2ed  6      OPC=je_label_1           
  leaq -0xd0(%rbp), %rdi          #  28    0xaf2f3  7      OPC=leaq_r64_m16         
  leaq -0x90(%rbp), %rbx          #  29    0xaf2fa  7      OPC=leaq_r64_m16         
  movq %r13, %r11                 #  30    0xaf301  3      OPC=movq_r64_r64         
  movq %r10, %r14                 #  31    0xaf304  3      OPC=movq_r64_r64         
  movq %rdi, -0x118(%rbp)         #  32    0xaf307  7      OPC=movq_m64_r64         
  movq %rbx, -0x100(%rbp)         #  33    0xaf30e  7      OPC=movq_m64_r64         
  jmpq .L_af357                   #  34    0xaf315  2      OPC=jmpq_label           
  nop                             #  35    0xaf317  1      OPC=nop                  
  nop                             #  36    0xaf318  1      OPC=nop                  
  nop                             #  37    0xaf319  1      OPC=nop                  
  nop                             #  38    0xaf31a  1      OPC=nop                  
  nop                             #  39    0xaf31b  1      OPC=nop                  
  nop                             #  40    0xaf31c  1      OPC=nop                  
  nop                             #  41    0xaf31d  1      OPC=nop                  
  nop                             #  42    0xaf31e  1      OPC=nop                  
  nop                             #  43    0xaf31f  1      OPC=nop                  
.L_af320:                         #        0xaf320  0      OPC=<label>              
  movq -0xd8(%rbp), %rdx          #  44    0xaf320  7      OPC=movq_r64_m64         
  subq %r11, %rdx                 #  45    0xaf327  3      OPC=subq_r64_r64         
  cmpq $0x1, %rdx                 #  46    0xaf32a  4      OPC=cmpq_r64_imm8        
  jbe .L_af480                    #  47    0xaf32e  6      OPC=jbe_label_1          
  testq %r12, %r12                #  48    0xaf334  3      OPC=testq_r64_r64        
  je .L_af341                     #  49    0xaf337  2      OPC=je_label             
  movl %eax, (%r12)               #  50    0xaf339  4      OPC=movl_m32_r32         
  addq $0x4, %r12                 #  51    0xaf33d  4      OPC=addq_r64_imm8        
.L_af341:                         #        0xaf341  0      OPC=<label>              
  addq $0x1, %r11                 #  52    0xaf341  4      OPC=addq_r64_imm8        
  movq %r14, %rbx                 #  53    0xaf345  3      OPC=movq_r64_r64         
.L_af348:                         #        0xaf348  0      OPC=<label>              
  movl 0x4(%rbx), %eax            #  54    0xaf348  3      OPC=movl_r32_m32         
  leaq 0x4(%rbx), %r14            #  55    0xaf34b  4      OPC=leaq_r64_m16         
  testl %eax, %eax                #  56    0xaf34f  2      OPC=testl_r32_r32        
  je .L_af5c4                     #  57    0xaf351  6      OPC=je_label_1           
.L_af357:                         #        0xaf357  0      OPC=<label>              
  cmpl $0x25, %eax                #  58    0xaf357  3      OPC=cmpl_r32_imm8        
  jne .L_af320                    #  59    0xaf35a  2      OPC=jne_label            
  xorl %edx, %edx                 #  60    0xaf35c  2      OPC=xorl_r32_r32         
  movl $0x0, -0xe0(%rbp)          #  61    0xaf35e  10     OPC=movl_m32_imm32       
  xorl %r10d, %r10d               #  62    0xaf368  3      OPC=xorl_r32_r32         
.L_af36b:                         #        0xaf36b  0      OPC=<label>              
  addq $0x4, %r14                 #  63    0xaf36b  4      OPC=addq_r64_imm8        
  movl (%r14), %r15d              #  64    0xaf36f  3      OPC=movl_r32_m32         
  cmpl $0x30, %r15d               #  65    0xaf372  4      OPC=cmpl_r32_imm8        
  je .L_af398                     #  66    0xaf376  2      OPC=je_label             
.L_af378:                         #        0xaf378  0      OPC=<label>              
  jg .L_af3a0                     #  67    0xaf378  2      OPC=jg_label             
  cmpl $0x23, %r15d               #  68    0xaf37a  4      OPC=cmpl_r32_imm8        
  jne .L_af3c0                    #  69    0xaf37e  2      OPC=jne_label            
  addq $0x4, %r14                 #  70    0xaf380  4      OPC=addq_r64_imm8        
  movl (%r14), %r15d              #  71    0xaf384  3      OPC=movl_r32_m32         
  movl $0x1, %edx                 #  72    0xaf387  5      OPC=movl_r32_imm32       
  cmpl $0x30, %r15d               #  73    0xaf38c  4      OPC=cmpl_r32_imm8        
  jne .L_af378                    #  74    0xaf390  2      OPC=jne_label            
  nop                             #  75    0xaf392  1      OPC=nop                  
  nop                             #  76    0xaf393  1      OPC=nop                  
  nop                             #  77    0xaf394  1      OPC=nop                  
  nop                             #  78    0xaf395  1      OPC=nop                  
  nop                             #  79    0xaf396  1      OPC=nop                  
  nop                             #  80    0xaf397  1      OPC=nop                  
.L_af398:                         #        0xaf398  0      OPC=<label>              
  movl %r15d, %r10d               #  81    0xaf398  3      OPC=movl_r32_r32         
  jmpq .L_af36b                   #  82    0xaf39b  2      OPC=jmpq_label           
  nop                             #  83    0xaf39d  1      OPC=nop                  
  nop                             #  84    0xaf39e  1      OPC=nop                  
  nop                             #  85    0xaf39f  1      OPC=nop                  
.L_af3a0:                         #        0xaf3a0  0      OPC=<label>              
  cmpl $0x5e, %r15d               #  86    0xaf3a0  4      OPC=cmpl_r32_imm8        
  jne .L_af450                    #  87    0xaf3a4  6      OPC=jne_label_1          
  movl $0x1, -0xe0(%rbp)          #  88    0xaf3aa  10     OPC=movl_m32_imm32       
  jmpq .L_af36b                   #  89    0xaf3b4  2      OPC=jmpq_label           
  nop                             #  90    0xaf3b6  1      OPC=nop                  
  nop                             #  91    0xaf3b7  1      OPC=nop                  
  nop                             #  92    0xaf3b8  1      OPC=nop                  
  nop                             #  93    0xaf3b9  1      OPC=nop                  
  nop                             #  94    0xaf3ba  1      OPC=nop                  
  nop                             #  95    0xaf3bb  1      OPC=nop                  
  nop                             #  96    0xaf3bc  1      OPC=nop                  
  nop                             #  97    0xaf3bd  1      OPC=nop                  
  nop                             #  98    0xaf3be  1      OPC=nop                  
  nop                             #  99    0xaf3bf  1      OPC=nop                  
.L_af3c0:                         #        0xaf3c0  0      OPC=<label>              
  cmpl $0x2d, %r15d               #  100   0xaf3c0  4      OPC=cmpl_r32_imm8        
  je .L_af398                     #  101   0xaf3c4  2      OPC=je_label             
.L_af3c6:                         #        0xaf3c6  0      OPC=<label>              
  leal -0x30(%r15), %eax          #  102   0xaf3c6  4      OPC=leal_r32_m16         
  movl $0xffffffff, %r13d         #  103   0xaf3ca  7      OPC=movl_r32_imm32_1     
  cmpl $0x9, %eax                 #  104   0xaf3d1  3      OPC=cmpl_r32_imm8        
  ja .L_af422                     #  105   0xaf3d4  2      OPC=ja_label             
  xorl %r13d, %r13d               #  106   0xaf3d6  3      OPC=xorl_r32_r32         
  jmpq .L_af403                   #  107   0xaf3d9  2      OPC=jmpq_label           
  nop                             #  108   0xaf3db  1      OPC=nop                  
  nop                             #  109   0xaf3dc  1      OPC=nop                  
  nop                             #  110   0xaf3dd  1      OPC=nop                  
  nop                             #  111   0xaf3de  1      OPC=nop                  
  nop                             #  112   0xaf3df  1      OPC=nop                  
  nop                             #  113   0xaf3e0  1      OPC=nop                  
.L_af3e0:                         #        0xaf3e1  0      OPC=<label>              
  movl (%r14), %eax               #  114   0xaf3e1  3      OPC=movl_r32_m32         
  je .L_af468                     #  115   0xaf3e4  6      OPC=je_label_1           
.L_af3e9:                         #        0xaf3ea  0      OPC=<label>              
  addq $0x4, %r14                 #  116   0xaf3ea  4      OPC=addq_r64_imm8        
  movl (%r14), %r15d              #  117   0xaf3ee  3      OPC=movl_r32_m32         
  leal (%r13,%r13,4), %ecx        #  118   0xaf3f1  5      OPC=leal_r32_m16         
  leal -0x30(%rax,%rcx,2), %r13d  #  119   0xaf3f6  5      OPC=leal_r32_m16         
  leal -0x30(%r15), %eax          #  120   0xaf3fb  4      OPC=leal_r32_m16         
  cmpl $0x9, %eax                 #  121   0xaf3ff  3      OPC=cmpl_r32_imm8        
  ja .L_af422                     #  122   0xaf402  2      OPC=ja_label             
.L_af403:                         #        0xaf404  0      OPC=<label>              
  cmpl $0xccccccc, %r13d          #  123   0xaf404  7      OPC=cmpl_r32_imm32       
  jle .L_af3e0                    #  124   0xaf40b  2      OPC=jle_label            
  movl $0x7fffffff, %r13d         #  125   0xaf40d  6      OPC=movl_r32_imm32       
.L_af412:                         #        0xaf413  0      OPC=<label>              
  addq $0x4, %r14                 #  126   0xaf413  4      OPC=addq_r64_imm8        
  movl (%r14), %r15d              #  127   0xaf417  3      OPC=movl_r32_m32         
  leal -0x30(%r15), %eax          #  128   0xaf41a  4      OPC=leal_r32_m16         
  cmpl $0x9, %eax                 #  129   0xaf41e  3      OPC=cmpl_r32_imm8        
  jbe .L_af403                    #  130   0xaf421  2      OPC=jbe_label            
.L_af422:                         #        0xaf423  0      OPC=<label>              
  cmpl $0x45, %r15d               #  131   0xaf423  4      OPC=cmpl_r32_imm8        
  je .L_af498                     #  132   0xaf427  2      OPC=je_label             
  cmpl $0x4f, %r15d               #  133   0xaf429  4      OPC=cmpl_r32_imm8        
  je .L_af498                     #  134   0xaf42d  2      OPC=je_label             
  cmpl $0x7a, %r15d               #  135   0xaf42f  4      OPC=cmpl_r32_imm8        
  ja .L_b0e2c                     #  136   0xaf433  6      OPC=ja_label_1           
  leaq 0xb0719(%rip), %rax        #  137   0xaf439  7      OPC=leaq_r64_m16         
  movl %r15d, %ecx                #  138   0xaf440  3      OPC=movl_r32_r32         
  movslq (%rax,%rcx,4), %rcx      #  139   0xaf443  4      OPC=movslq_r64_m32       
  addq %rcx, %rax                 #  140   0xaf447  3      OPC=addq_r64_r64         
  jmpq %rax                       #  141   0xaf44a  2      OPC=jmpq_r64             
  nop                             #  142   0xaf44c  1      OPC=nop                  
  nop                             #  143   0xaf44d  1      OPC=nop                  
  nop                             #  144   0xaf44e  1      OPC=nop                  
  nop                             #  145   0xaf44f  1      OPC=nop                  
  nop                             #  146   0xaf450  1      OPC=nop                  
.L_af450:                         #        0xaf451  0      OPC=<label>              
  cmpl $0x5f, %r15d               #  147   0xaf451  4      OPC=cmpl_r32_imm8        
  jne .L_af3c6                    #  148   0xaf455  6      OPC=jne_label_1          
  movl %r15d, %r10d               #  149   0xaf45b  3      OPC=movl_r32_r32         
  jmpq .L_af36b                   #  150   0xaf45e  5      OPC=jmpq_label_1         
  nop                             #  151   0xaf463  1      OPC=nop                  
  nop                             #  152   0xaf464  1      OPC=nop                  
  nop                             #  153   0xaf465  1      OPC=nop                  
  nop                             #  154   0xaf466  1      OPC=nop                  
  nop                             #  155   0xaf467  1      OPC=nop                  
  nop                             #  156   0xaf468  1      OPC=nop                  
.L_af468:                         #        0xaf469  0      OPC=<label>              
  cmpl $0x37, %eax                #  157   0xaf469  3      OPC=cmpl_r32_imm8        
  jle .L_af3e9                    #  158   0xaf46c  6      OPC=jle_label_1          
  movl $0x7fffffff, %r13d         #  159   0xaf472  6      OPC=movl_r32_imm32       
  jmpq .L_af412                   #  160   0xaf478  2      OPC=jmpq_label           
  nop                             #  161   0xaf47a  1      OPC=nop                  
  nop                             #  162   0xaf47b  1      OPC=nop                  
  nop                             #  163   0xaf47c  1      OPC=nop                  
  nop                             #  164   0xaf47d  1      OPC=nop                  
  nop                             #  165   0xaf47e  1      OPC=nop                  
  nop                             #  166   0xaf47f  1      OPC=nop                  
  nop                             #  167   0xaf480  1      OPC=nop                  
.L_af480:                         #        0xaf481  0      OPC=<label>              
  leaq -0x28(%rbp), %rsp          #  168   0xaf481  4      OPC=leaq_r64_m16         
  xorl %eax, %eax                 #  169   0xaf485  2      OPC=xorl_r32_r32         
  popq %rbx                       #  170   0xaf487  1      OPC=popq_r64_1           
  popq %r12                       #  171   0xaf488  2      OPC=popq_r64_1           
  popq %r13                       #  172   0xaf48a  2      OPC=popq_r64_1           
  popq %r14                       #  173   0xaf48c  2      OPC=popq_r64_1           
  popq %r15                       #  174   0xaf48e  2      OPC=popq_r64_1           
  popq %rbp                       #  175   0xaf490  1      OPC=popq_r64_1           
  retq                            #  176   0xaf491  1      OPC=retq                 
  nop                             #  177   0xaf492  1      OPC=nop                  
  nop                             #  178   0xaf493  1      OPC=nop                  
  nop                             #  179   0xaf494  1      OPC=nop                  
  nop                             #  180   0xaf495  1      OPC=nop                  
  nop                             #  181   0xaf496  1      OPC=nop                  
  nop                             #  182   0xaf497  1      OPC=nop                  
  nop                             #  183   0xaf498  1      OPC=nop                  
.L_af498:                         #        0xaf499  0      OPC=<label>              
  movl 0x4(%r14), %ecx            #  184   0xaf499  4      OPC=movl_r32_m32         
  leaq 0x4(%r14), %rbx            #  185   0xaf49d  4      OPC=leaq_r64_m16         
  cmpl $0x7a, %ecx                #  186   0xaf4a1  3      OPC=cmpl_r32_imm8        
  ja .L_b0099                     #  187   0xaf4a4  6      OPC=ja_label_1           
  leaq 0xb0894(%rip), %rax        #  188   0xaf4aa  7      OPC=leaq_r64_m16         
  movl %ecx, %esi                 #  189   0xaf4b1  2      OPC=movl_r32_r32         
  movslq (%rax,%rsi,4), %rsi      #  190   0xaf4b3  4      OPC=movslq_r64_m32       
  addq %rsi, %rax                 #  191   0xaf4b7  3      OPC=addq_r64_r64         
  jmpq %rax                       #  192   0xaf4ba  2      OPC=jmpq_r64             
  nop                             #  193   0xaf4bc  1      OPC=nop                  
  nop                             #  194   0xaf4bd  1      OPC=nop                  
  nop                             #  195   0xaf4be  1      OPC=nop                  
  nop                             #  196   0xaf4bf  1      OPC=nop                  
  nop                             #  197   0xaf4c0  1      OPC=nop                  
.L_af4c0:                         #        0xaf4c1  0      OPC=<label>              
  movl -0xe4(%rbp), %edi          #  198   0xaf4c1  6      OPC=movl_r32_m32         
  movl $0xc, %eax                 #  199   0xaf4c7  5      OPC=movl_r32_imm32       
  testl %edi, %edi                #  200   0xaf4cc  2      OPC=testl_r32_r32        
  cmovnel %edi, %eax              #  201   0xaf4ce  3      OPC=cmovnel_r32_r32      
  movl %eax, -0xe4(%rbp)          #  202   0xaf4d1  6      OPC=movl_m32_r32         
  jmpq .L_af2e5                   #  203   0xaf4d7  5      OPC=jmpq_label_1         
  testl %edx, %edx                #  204   0xaf4dc  2      OPC=testl_r32_r32        
  je .L_b1070                     #  205   0xaf4de  6      OPC=je_label_1           
  movl $0x1, -0xe0(%rbp)          #  206   0xaf4e4  10     OPC=movl_m32_imm32       
  nop                             #  207   0xaf4ee  1      OPC=nop                  
  nop                             #  208   0xaf4ef  1      OPC=nop                  
  nop                             #  209   0xaf4f0  1      OPC=nop                  
.L_af4f0:                         #        0xaf4f1  0      OPC=<label>              
  movl (%rbx), %r15d              #  210   0xaf4f1  3      OPC=movl_r32_m32         
.L_af4f3:                         #        0xaf4f4  0      OPC=<label>              
  cmpl $0x25, %r15d               #  211   0xaf4f4  4      OPC=cmpl_r32_imm8        
  je .L_af638                     #  212   0xaf4f8  6      OPC=je_label_1           
  leaq -0x4(%rbx), %rax           #  213   0xaf4fe  4      OPC=leaq_r64_m16         
  movl $0x1, %r15d                #  214   0xaf502  6      OPC=movl_r32_imm32       
.L_af507:                         #        0xaf508  0      OPC=<label>              
  movq %rax, %r8                  #  215   0xaf508  3      OPC=movq_r64_r64         
  subq $0x4, %rax                 #  216   0xaf50b  4      OPC=subq_r64_imm8        
  addl $0x1, %r15d                #  217   0xaf50f  4      OPC=addl_r32_imm8        
  cmpl $0x25, 0x4(%rax)           #  218   0xaf513  4      OPC=cmpl_m32_imm8        
  jne .L_af507                    #  219   0xaf517  2      OPC=jne_label            
.L_af518:                         #        0xaf519  0      OPC=<label>              
  subl %r15d, %r13d               #  220   0xaf519  3      OPC=subl_r32_r32         
  movl $0x0, %r14d                #  221   0xaf51c  6      OPC=movl_r32_imm32       
  movq -0xd8(%rbp), %rax          #  222   0xaf522  7      OPC=movq_r64_m64         
  cmovnsl %r13d, %r14d            #  223   0xaf529  4      OPC=cmovnsl_r32_r32      
  addl %r15d, %r14d               #  224   0xaf52d  3      OPC=addl_r32_r32         
  movslq %r14d, %r14              #  225   0xaf530  3      OPC=movslq_r64_r32       
  subq %r11, %rax                 #  226   0xaf533  3      OPC=subq_r64_r64         
  cmpq %rax, %r14                 #  227   0xaf536  3      OPC=cmpq_r64_r64         
  jae .L_af480                    #  228   0xaf539  6      OPC=jae_label_1          
  testq %r12, %r12                #  229   0xaf53f  3      OPC=testq_r64_r64        
  je .L_af5b2                     #  230   0xaf542  2      OPC=je_label             
  testl %r13d, %r13d              #  231   0xaf544  3      OPC=testl_r32_r32        
  jle .L_af585                    #  232   0xaf547  2      OPC=jle_label            
  movslq %r13d, %r13              #  233   0xaf549  3      OPC=movslq_r64_r32       
  cmpl $0x30, %r10d               #  234   0xaf54c  4      OPC=cmpl_r32_imm8        
  movq %r11, -0x130(%rbp)         #  235   0xaf550  7      OPC=movq_m64_r64         
  movq %r8, -0x128(%rbp)          #  236   0xaf557  7      OPC=movq_m64_r64         
  movq %r13, %rdx                 #  237   0xaf55e  3      OPC=movq_r64_r64         
  je .L_af60e                     #  238   0xaf561  6      OPC=je_label_1           
  movq %r12, %rdi                 #  239   0xaf567  3      OPC=movq_r64_r64         
  movl $0x20, %esi                #  240   0xaf56a  5      OPC=movl_r32_imm32       
  leaq (%r12,%r13,4), %r12        #  241   0xaf56f  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  242   0xaf573  5      OPC=callq_label          
  movq -0x130(%rbp), %r11         #  243   0xaf578  7      OPC=movq_r64_m64         
  movq -0x128(%rbp), %r8          #  244   0xaf57f  7      OPC=movq_r64_m64         
.L_af585:                         #        0xaf586  0      OPC=<label>              
  movl -0xe0(%rbp), %ecx          #  245   0xaf586  6      OPC=movl_r32_m32         
  movslq %r15d, %r15              #  246   0xaf58c  3      OPC=movslq_r64_r32       
  movq %r11, -0xe0(%rbp)          #  247   0xaf58f  7      OPC=movq_m64_r64         
  testl %ecx, %ecx                #  248   0xaf596  2      OPC=testl_r32_r32        
  jne .L_af5f0                    #  249   0xaf598  2      OPC=jne_label            
  movq %r15, %rdx                 #  250   0xaf59a  3      OPC=movq_r64_r64         
  movq %r8, %rsi                  #  251   0xaf59d  3      OPC=movq_r64_r64         
  movq %r12, %rdi                 #  252   0xaf5a0  3      OPC=movq_r64_r64         
  callq .wmemcpy                  #  253   0xaf5a3  5      OPC=callq_label          
  movq -0xe0(%rbp), %r11          #  254   0xaf5a8  7      OPC=movq_r64_m64         
.L_af5ae:                         #        0xaf5af  0      OPC=<label>              
  leaq (%r12,%r15,4), %r12        #  255   0xaf5af  4      OPC=leaq_r64_m16         
.L_af5b2:                         #        0xaf5b3  0      OPC=<label>              
  addq %r14, %r11                 #  256   0xaf5b3  3      OPC=addq_r64_r64         
.L_af5b5:                         #        0xaf5b6  0      OPC=<label>              
  movl 0x4(%rbx), %eax            #  257   0xaf5b6  3      OPC=movl_r32_m32         
  leaq 0x4(%rbx), %r14            #  258   0xaf5b9  4      OPC=leaq_r64_m16         
  testl %eax, %eax                #  259   0xaf5bd  2      OPC=testl_r32_r32        
  jne .L_af357                    #  260   0xaf5bf  6      OPC=jne_label_1          
.L_af5c4:                         #        0xaf5c5  0      OPC=<label>              
  movq %r11, %r13                 #  261   0xaf5c5  3      OPC=movq_r64_r64         
.L_af5c7:                         #        0xaf5c8  0      OPC=<label>              
  testq %r12, %r12                #  262   0xaf5c8  3      OPC=testq_r64_r64        
  je .L_af5de                     #  263   0xaf5cb  2      OPC=je_label             
  cmpq $0x0, -0xd8(%rbp)          #  264   0xaf5cd  8      OPC=cmpq_m64_imm8        
  je .L_af5de                     #  265   0xaf5d5  2      OPC=je_label             
  movl $0x0, (%r12)               #  266   0xaf5d7  8      OPC=movl_m32_imm32       
.L_af5de:                         #        0xaf5df  0      OPC=<label>              
  leaq -0x28(%rbp), %rsp          #  267   0xaf5df  4      OPC=leaq_r64_m16         
  movq %r13, %rax                 #  268   0xaf5e3  3      OPC=movq_r64_r64         
  popq %rbx                       #  269   0xaf5e6  1      OPC=popq_r64_1           
  popq %r12                       #  270   0xaf5e7  2      OPC=popq_r64_1           
  popq %r13                       #  271   0xaf5e9  2      OPC=popq_r64_1           
  popq %r14                       #  272   0xaf5eb  2      OPC=popq_r64_1           
  popq %r15                       #  273   0xaf5ed  2      OPC=popq_r64_1           
  popq %rbp                       #  274   0xaf5ef  1      OPC=popq_r64_1           
  retq                            #  275   0xaf5f0  1      OPC=retq                 
.L_af5f0:                         #        0xaf5f1  0      OPC=<label>              
  movq -0xf8(%rbp), %rcx          #  276   0xaf5f1  7      OPC=movq_r64_m64         
  movq %r15, %rdx                 #  277   0xaf5f8  3      OPC=movq_r64_r64         
  movq %r8, %rsi                  #  278   0xaf5fb  3      OPC=movq_r64_r64         
  movq %r12, %rdi                 #  279   0xaf5fe  3      OPC=movq_r64_r64         
  callq .memcpy_uppcase           #  280   0xaf601  5      OPC=callq_label          
  movq -0xe0(%rbp), %r11          #  281   0xaf606  7      OPC=movq_r64_m64         
  jmpq .L_af5ae                   #  282   0xaf60d  2      OPC=jmpq_label           
.L_af60e:                         #        0xaf60f  0      OPC=<label>              
  movq %r12, %rdi                 #  283   0xaf60f  3      OPC=movq_r64_r64         
  movl $0x30, %esi                #  284   0xaf612  5      OPC=movl_r32_imm32       
  leaq (%r12,%r13,4), %r12        #  285   0xaf617  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  286   0xaf61b  5      OPC=callq_label          
  movq -0x128(%rbp), %r8          #  287   0xaf620  7      OPC=movq_r64_m64         
  movq -0x130(%rbp), %r11         #  288   0xaf627  7      OPC=movq_r64_m64         
  jmpq .L_af585                   #  289   0xaf62e  5      OPC=jmpq_label_1         
  nop                             #  290   0xaf633  1      OPC=nop                  
  nop                             #  291   0xaf634  1      OPC=nop                  
  nop                             #  292   0xaf635  1      OPC=nop                  
  nop                             #  293   0xaf636  1      OPC=nop                  
  nop                             #  294   0xaf637  1      OPC=nop                  
  nop                             #  295   0xaf638  1      OPC=nop                  
.L_af638:                         #        0xaf639  0      OPC=<label>              
  movq %rbx, %r8                  #  296   0xaf639  3      OPC=movq_r64_r64         
  movl $0x1, %r15d                #  297   0xaf63c  6      OPC=movl_r32_imm32       
  jmpq .L_af518                   #  298   0xaf642  5      OPC=jmpq_label_1         
  movq %r14, %rbx                 #  299   0xaf647  3      OPC=movq_r64_r64         
  leaq 0xbb8b4(%rip), %r15        #  300   0xaf64a  7      OPC=leaq_r64_m16         
.L_af650:                         #        0xaf651  0      OPC=<label>              
  movq -0xf8(%rbp), %r9           #  301   0xaf651  7      OPC=movq_r64_m64         
  movq -0x110(%rbp), %r8          #  302   0xaf658  7      OPC=movq_r64_m64         
  xorl %edi, %edi                 #  303   0xaf65f  2      OPC=xorl_r32_r32         
  movq -0xf0(%rbp), %rcx          #  304   0xaf661  7      OPC=movq_r64_m64         
  movq %r15, %rdx                 #  305   0xaf668  3      OPC=movq_r64_r64         
  movq $0xffffffff, %rsi          #  306   0xaf66b  7      OPC=movq_r64_imm32       
  movq %r11, -0x128(%rbp)         #  307   0xaf672  7      OPC=movq_m64_r64         
  movl %r10d, -0x138(%rbp)        #  308   0xaf679  7      OPC=movl_m32_r32         
  callq .__strftime_internal      #  309   0xaf680  5      OPC=callq_label          
  movl %r13d, %edx                #  310   0xaf685  3      OPC=movl_r32_r32         
  movq %rax, %r14                 #  311   0xaf688  3      OPC=movq_r64_r64         
  movq -0x128(%rbp), %r11         #  312   0xaf68b  7      OPC=movq_r64_m64         
  subl %eax, %edx                 #  313   0xaf692  2      OPC=subl_r32_r32         
  movl $0x0, %eax                 #  314   0xaf694  5      OPC=movl_r32_imm32       
  cmovnsl %edx, %eax              #  315   0xaf699  3      OPC=cmovnsl_r32_r32      
  addl %r14d, %eax                #  316   0xaf69c  3      OPC=addl_r32_r32         
  cltq                            #  317   0xaf69f  2      OPC=cltq                 
  movq %rax, %rdi                 #  318   0xaf6a1  3      OPC=movq_r64_r64         
  movq %rax, -0x130(%rbp)         #  319   0xaf6a4  7      OPC=movq_m64_r64         
  movq -0xd8(%rbp), %rax          #  320   0xaf6ab  7      OPC=movq_r64_m64         
  subq %r11, %rax                 #  321   0xaf6b2  3      OPC=subq_r64_r64         
  cmpq %rax, %rdi                 #  322   0xaf6b5  3      OPC=cmpq_r64_r64         
  movq %rax, -0x128(%rbp)         #  323   0xaf6b8  7      OPC=movq_m64_r64         
  jae .L_af480                    #  324   0xaf6bf  6      OPC=jae_label_1          
  testq %r12, %r12                #  325   0xaf6c5  3      OPC=testq_r64_r64        
  je .L_b107e                     #  326   0xaf6c8  6      OPC=je_label_1           
  testl %edx, %edx                #  327   0xaf6ce  2      OPC=testl_r32_r32        
  movq %r12, %r13                 #  328   0xaf6d0  3      OPC=movq_r64_r64         
  jle .L_af70a                    #  329   0xaf6d3  2      OPC=jle_label            
  movl -0x138(%rbp), %r10d        #  330   0xaf6d5  7      OPC=movl_r32_m32         
  movslq %edx, %r13               #  331   0xaf6dc  3      OPC=movslq_r64_r32       
  movq %r11, -0x138(%rbp)         #  332   0xaf6df  7      OPC=movq_m64_r64         
  movq %r13, %rdx                 #  333   0xaf6e6  3      OPC=movq_r64_r64         
  cmpl $0x30, %r10d               #  334   0xaf6e9  4      OPC=cmpl_r32_imm8        
  je .L_b1053                     #  335   0xaf6ed  6      OPC=je_label_1           
  movl $0x20, %esi                #  336   0xaf6f3  5      OPC=movl_r32_imm32       
  movq %r12, %rdi                 #  337   0xaf6f8  3      OPC=movq_r64_r64         
  leaq (%r12,%r13,4), %r13        #  338   0xaf6fb  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  339   0xaf6ff  5      OPC=callq_label          
  movq -0x138(%rbp), %r11         #  340   0xaf704  7      OPC=movq_r64_m64         
.L_af70a:                         #        0xaf70b  0      OPC=<label>              
  movq -0xf8(%rbp), %r9           #  341   0xaf70b  7      OPC=movq_r64_m64         
  movq -0x110(%rbp), %r8          #  342   0xaf712  7      OPC=movq_r64_m64         
  movq %r15, %rdx                 #  343   0xaf719  3      OPC=movq_r64_r64         
  movq -0xf0(%rbp), %rcx          #  344   0xaf71c  7      OPC=movq_r64_m64         
  movq -0x128(%rbp), %rsi         #  345   0xaf723  7      OPC=movq_r64_m64         
  movq %r13, %rdi                 #  346   0xaf72a  3      OPC=movq_r64_r64         
  movq %r11, -0x138(%rbp)         #  347   0xaf72d  7      OPC=movq_m64_r64         
  movslq %r14d, %r14              #  348   0xaf734  3      OPC=movslq_r64_r32       
  leaq (%r13,%r14,4), %r14        #  349   0xaf737  5      OPC=leaq_r64_m16         
  callq .__strftime_internal      #  350   0xaf73c  5      OPC=callq_label          
  movl -0xe0(%rbp), %eax          #  351   0xaf741  6      OPC=movl_r32_m32         
  movq -0x138(%rbp), %r11         #  352   0xaf747  7      OPC=movq_r64_m64         
  addq -0x130(%rbp), %r11         #  353   0xaf74e  7      OPC=addq_r64_m64         
  testl %eax, %eax                #  354   0xaf755  2      OPC=testl_r32_r32        
  je .L_b0fa0                     #  355   0xaf757  6      OPC=je_label_1           
  cmpq %r12, %r14                 #  356   0xaf75d  3      OPC=cmpq_r64_r64         
  jbe .L_b0fa0                    #  357   0xaf760  6      OPC=jbe_label_1          
  movq -0xf8(%rbp), %r13          #  358   0xaf766  7      OPC=movq_r64_m64         
  movq %r11, %r15                 #  359   0xaf76d  3      OPC=movq_r64_r64         
  nop                             #  360   0xaf770  1      OPC=nop                  
.L_af770:                         #        0xaf771  0      OPC=<label>              
  movl (%r12), %edi               #  361   0xaf771  4      OPC=movl_r32_m32         
  movq %r13, %rsi                 #  362   0xaf775  3      OPC=movq_r64_r64         
  addq $0x4, %r12                 #  363   0xaf778  4      OPC=addq_r64_imm8        
  callq .__towupper_l             #  364   0xaf77c  5      OPC=callq_label          
  movl %eax, -0x4(%r12)           #  365   0xaf781  5      OPC=movl_m32_r32         
  cmpq %r12, %r14                 #  366   0xaf786  3      OPC=cmpq_r64_r64         
  ja .L_af770                     #  367   0xaf789  2      OPC=ja_label             
  movq %r15, %r11                 #  368   0xaf78b  3      OPC=movq_r64_r64         
  movq %r14, %r12                 #  369   0xaf78e  3      OPC=movq_r64_r64         
  jmpq .L_af348                   #  370   0xaf791  5      OPC=jmpq_label_1         
  movq %r14, %rbx                 #  371   0xaf796  3      OPC=movq_r64_r64         
  xorl %r15d, %r15d               #  372   0xaf799  3      OPC=xorl_r32_r32         
.L_af79b:                         #        0xaf79c  0      OPC=<label>              
  movl -0xe0(%rbp), %eax          #  373   0xaf79c  6      OPC=movl_r32_m32         
  xorl %r14d, %r14d               #  374   0xaf7a2  3      OPC=xorl_r32_r32         
  testl %edx, %edx                #  375   0xaf7a5  2      OPC=testl_r32_r32        
  movq -0x108(%rbp), %rdi         #  376   0xaf7a7  7      OPC=movq_r64_m64         
  movq %r11, -0x128(%rbp)         #  377   0xaf7ae  7      OPC=movq_m64_r64         
  movl %r10d, -0x138(%rbp)        #  378   0xaf7b5  7      OPC=movl_m32_r32         
  cmovnel %r14d, %eax             #  379   0xaf7bc  4      OPC=cmovnel_r32_r32      
  movl %eax, -0xe0(%rbp)          #  380   0xaf7c0  6      OPC=movl_m32_r32         
  movl $0x1, %eax                 #  381   0xaf7c6  5      OPC=movl_r32_imm32       
  cmovnel %eax, %r15d             #  382   0xaf7cb  4      OPC=cmovnel_r32_r32      
  movq -0xf0(%rbp), %rax          #  383   0xaf7cf  7      OPC=movq_r64_m64         
  movl 0x8(%rax), %edx            #  384   0xaf7d6  3      OPC=movl_r32_m32         
  cmpl $0xc, %edx                 #  385   0xaf7d9  3      OPC=cmpl_r32_imm8        
  movl %edx, -0x130(%rbp)         #  386   0xaf7dc  6      OPC=movl_m32_r32         
  setge %al                       #  387   0xaf7e2  3      OPC=setge_r8             
  movzbl %al, %eax                #  388   0xaf7e5  3      OPC=movzbl_r32_r8        
  addl $0x5a, %eax                #  389   0xaf7e8  3      OPC=addl_r32_imm8        
  cltq                            #  390   0xaf7eb  2      OPC=cltq                 
  addq $0x8, %rax                 #  391   0xaf7ed  4      OPC=addq_r64_imm8        
  movq (%rdi,%rax,8), %rdi        #  392   0xaf7f1  4      OPC=movq_r64_m64         
  callq .wcslen                   #  393   0xaf7f5  5      OPC=callq_label          
  subl %eax, %r13d                #  394   0xaf7fa  3      OPC=subl_r32_r32         
  movq %rax, %rcx                 #  395   0xaf7fd  3      OPC=movq_r64_r64         
  movq -0x128(%rbp), %r11         #  396   0xaf800  7      OPC=movq_r64_m64         
  cmovnsl %r13d, %r14d            #  397   0xaf807  4      OPC=cmovnsl_r32_r32      
  addl %eax, %r14d                #  398   0xaf80b  3      OPC=addl_r32_r32         
  movq -0xd8(%rbp), %rax          #  399   0xaf80e  7      OPC=movq_r64_m64         
  movslq %r14d, %r14              #  400   0xaf815  3      OPC=movslq_r64_r32       
  subq %r11, %rax                 #  401   0xaf818  3      OPC=subq_r64_r64         
  cmpq %rax, %r14                 #  402   0xaf81b  3      OPC=cmpq_r64_r64         
  jae .L_af480                    #  403   0xaf81e  6      OPC=jae_label_1          
  testq %r12, %r12                #  404   0xaf824  3      OPC=testq_r64_r64        
  je .L_af5b2                     #  405   0xaf827  6      OPC=je_label_1           
  testl %r13d, %r13d              #  406   0xaf82d  3      OPC=testl_r32_r32        
  movl -0x130(%rbp), %edx         #  407   0xaf830  6      OPC=movl_r32_m32         
  jle .L_af885                    #  408   0xaf836  2      OPC=jle_label            
  movl -0x138(%rbp), %r10d        #  409   0xaf838  7      OPC=movl_r32_m32         
  movslq %r13d, %r13              #  410   0xaf83f  3      OPC=movslq_r64_r32       
  movq %r11, -0x130(%rbp)         #  411   0xaf842  7      OPC=movq_m64_r64         
  movq %rcx, -0x128(%rbp)         #  412   0xaf849  7      OPC=movq_m64_r64         
  movq %r13, %rdx                 #  413   0xaf850  3      OPC=movq_r64_r64         
  cmpl $0x30, %r10d               #  414   0xaf853  4      OPC=cmpl_r32_imm8        
  je .L_b10fd                     #  415   0xaf857  6      OPC=je_label_1           
  movq %r12, %rdi                 #  416   0xaf85d  3      OPC=movq_r64_r64         
  movl $0x20, %esi                #  417   0xaf860  5      OPC=movl_r32_imm32       
  leaq (%r12,%r13,4), %r12        #  418   0xaf865  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  419   0xaf869  5      OPC=callq_label          
  movq -0xf0(%rbp), %rax          #  420   0xaf86e  7      OPC=movq_r64_m64         
  movq -0x130(%rbp), %r11         #  421   0xaf875  7      OPC=movq_r64_m64         
  movq -0x128(%rbp), %rcx         #  422   0xaf87c  7      OPC=movq_r64_m64         
  movl 0x8(%rax), %edx            #  423   0xaf883  3      OPC=movl_r32_m32         
.L_af885:                         #        0xaf886  0      OPC=<label>              
  testl %r15d, %r15d              #  424   0xaf886  3      OPC=testl_r32_r32        
  je .L_b108a                     #  425   0xaf889  6      OPC=je_label_1           
  movslq %ecx, %rax               #  426   0xaf88f  3      OPC=movslq_r64_r32       
  movq -0x108(%rbp), %rdi         #  427   0xaf892  7      OPC=movq_r64_m64         
  movq %rax, %rsi                 #  428   0xaf899  3      OPC=movq_r64_r64         
  movq %rax, -0xe0(%rbp)          #  429   0xaf89c  7      OPC=movq_m64_r64         
  xorl %eax, %eax                 #  430   0xaf8a3  2      OPC=xorl_r32_r32         
  cmpl $0xb, %edx                 #  431   0xaf8a5  3      OPC=cmpl_r32_imm8        
  setg %al                        #  432   0xaf8a8  3      OPC=setg_r8              
  addl $0x5a, %eax                #  433   0xaf8ab  3      OPC=addl_r32_imm8        
  cltq                            #  434   0xaf8ae  2      OPC=cltq                 
  addq $0x8, %rax                 #  435   0xaf8b0  4      OPC=addq_r64_imm8        
  testq %rsi, %rsi                #  436   0xaf8b4  3      OPC=testq_r64_r64        
  movq (%rdi,%rax,8), %r13        #  437   0xaf8b7  4      OPC=movq_r64_m64         
  je .L_b15c0                     #  438   0xaf8bb  6      OPC=je_label_1           
  movq %rbx, -0x130(%rbp)         #  439   0xaf8c1  7      OPC=movq_m64_r64         
  movq %r13, %rbx                 #  440   0xaf8c8  3      OPC=movq_r64_r64         
  movq -0xf8(%rbp), %r13          #  441   0xaf8cb  7      OPC=movq_r64_m64         
  movq %r14, -0x128(%rbp)         #  442   0xaf8d2  7      OPC=movq_m64_r64         
  movq %r11, %r15                 #  443   0xaf8d9  3      OPC=movq_r64_r64         
  movq %rsi, %r14                 #  444   0xaf8dc  3      OPC=movq_r64_r64         
  xchgw %ax, %ax                  #  445   0xaf8df  2      OPC=xchgw_ax_r16         
.L_af8e0:                         #        0xaf8e1  0      OPC=<label>              
  movl -0x4(%rbx,%r14,4), %edi    #  446   0xaf8e1  5      OPC=movl_r32_m32         
  movq %r13, %rsi                 #  447   0xaf8e6  3      OPC=movq_r64_r64         
  callq .__towlower_l             #  448   0xaf8e9  5      OPC=callq_label          
  movl %eax, -0x4(%r12,%r14,4)    #  449   0xaf8ee  5      OPC=movl_m32_r32         
  subq $0x1, %r14                 #  450   0xaf8f3  4      OPC=subq_r64_imm8        
  jne .L_af8e0                    #  451   0xaf8f7  2      OPC=jne_label            
  movq -0x128(%rbp), %r14         #  452   0xaf8f9  7      OPC=movq_r64_m64         
  movq -0x130(%rbp), %rbx         #  453   0xaf900  7      OPC=movq_r64_m64         
  movq %r15, %r11                 #  454   0xaf907  3      OPC=movq_r64_r64         
  movq -0xe0(%rbp), %r13          #  455   0xaf90a  7      OPC=movq_r64_m64         
.L_af910:                         #        0xaf911  0      OPC=<label>              
  leaq (%r12,%r13,4), %r12        #  456   0xaf911  4      OPC=leaq_r64_m16         
  addq %r14, %r11                 #  457   0xaf915  3      OPC=addq_r64_r64         
  jmpq .L_af5b5                   #  458   0xaf918  5      OPC=jmpq_label_1         
  movq %rbx, %r14                 #  459   0xaf91d  3      OPC=movq_r64_r64         
  testl %edx, %edx                #  460   0xaf920  2      OPC=testl_r32_r32        
  movl $0x0, %eax                 #  461   0xaf922  5      OPC=movl_r32_imm32       
  cmovel -0xe0(%rbp), %eax        #  462   0xaf927  7      OPC=cmovel_r32_m32       
  cmpl $0x1, %edx                 #  463   0xaf92e  3      OPC=cmpl_r32_imm8        
  movl %eax, -0xe0(%rbp)          #  464   0xaf931  6      OPC=movl_m32_r32         
  sbbl %eax, %eax                 #  465   0xaf937  2      OPC=sbbl_r32_r32         
  addl $0x1, %eax                 #  466   0xaf939  3      OPC=addl_r32_imm8        
  movl %eax, -0x130(%rbp)         #  467   0xaf93c  6      OPC=movl_m32_r32         
  movq -0x120(%rbp), %rax         #  468   0xaf942  7      OPC=movq_r64_m64         
  testq %rax, %rax                #  469   0xaf949  3      OPC=testq_r64_r64        
  je .L_b1412                     #  470   0xaf94c  6      OPC=je_label_1           
  cmpb $0x0, (%rax)               #  471   0xaf952  3      OPC=cmpb_m8_imm8         
  jne .L_af996                    #  472   0xaf955  2      OPC=jne_label            
  movq -0xf0(%rbp), %rax          #  473   0xaf957  7      OPC=movq_r64_m64         
  movl 0x20(%rax), %edx           #  474   0xaf95e  3      OPC=movl_r32_m32         
  testl %edx, %edx                #  475   0xaf961  2      OPC=testl_r32_r32        
  js .L_af996                     #  476   0xaf963  2      OPC=js_label             
.L_af964:                         #        0xaf965  0      OPC=<label>              
  movq -0x110(%rbp), %rax         #  477   0xaf965  7      OPC=movq_r64_m64         
  cmpb $0x0, (%rax)               #  478   0xaf96c  3      OPC=cmpb_m8_imm8         
  je .L_b149c                     #  479   0xaf96f  6      OPC=je_label_1           
.L_af974:                         #        0xaf975  0      OPC=<label>              
  movq -0xf0(%rbp), %rax          #  480   0xaf975  7      OPC=movq_r64_m64         
  leaq 0xb54c9(%rip), %rbx        #  481   0xaf97c  7      OPC=leaq_r64_m16         
  movq %rbx, -0x120(%rbp)         #  482   0xaf983  7      OPC=movq_m64_r64         
  movslq 0x20(%rax), %rax         #  483   0xaf98a  4      OPC=movslq_r64_m32       
  cmpl $0x1, %eax                 #  484   0xaf98e  3      OPC=cmpl_r32_imm8        
  jle .L_b1480                    #  485   0xaf991  6      OPC=jle_label_1          
.L_af996:                         #        0xaf997  0      OPC=<label>              
  movq -0x120(%rbp), %rax         #  486   0xaf997  7      OPC=movq_r64_m64         
  movq -0xf8(%rbp), %r8           #  487   0xaf99e  7      OPC=movq_r64_m64         
  xorl %edx, %edx                 #  488   0xaf9a5  2      OPC=xorl_r32_r32         
  movq -0x100(%rbp), %rsi         #  489   0xaf9a7  7      OPC=movq_r64_m64         
  xorl %edi, %edi                 #  490   0xaf9ae  2      OPC=xorl_r32_r32         
  movq %r11, -0x128(%rbp)         #  491   0xaf9b0  7      OPC=movq_m64_r64         
  movl %r10d, -0x138(%rbp)        #  492   0xaf9b7  7      OPC=movl_m32_r32         
  movq %rax, -0x90(%rbp)          #  493   0xaf9be  7      OPC=movq_m64_r64         
  movq -0x118(%rbp), %rax         #  494   0xaf9c5  7      OPC=movq_r64_m64         
  movq %rax, %rcx                 #  495   0xaf9cc  3      OPC=movq_r64_r64         
  movq $0x0, (%rax)               #  496   0xaf9cf  7      OPC=movq_m64_imm32       
  callq .__mbsrtowcs_l            #  497   0xaf9d6  5      OPC=callq_label          
  movq %rax, %r15                 #  498   0xaf9db  3      OPC=movq_r64_r64         
  leaq 0x22(,%rax,4), %rax        #  499   0xaf9de  8      OPC=leaq_r64_m16         
  movq -0xf8(%rbp), %r8           #  500   0xaf9e6  7      OPC=movq_r64_m64         
  movq -0x118(%rbp), %rcx         #  501   0xaf9ed  7      OPC=movq_r64_m64         
  movq -0x100(%rbp), %rsi         #  502   0xaf9f4  7      OPC=movq_r64_m64         
  movq %r15, %rdx                 #  503   0xaf9fb  3      OPC=movq_r64_r64         
  andq $0xf0, %rax                #  504   0xaf9fe  4      OPC=andq_r64_imm8        
  subq %rax, %rsp                 #  505   0xafa02  3      OPC=subq_r64_r64         
  leaq 0xf(%rsp), %rbx            #  506   0xafa05  5      OPC=leaq_r64_m16         
  andq $0xf0, %rbx                #  507   0xafa0a  4      OPC=andq_r64_imm8        
  movq %rbx, %rdi                 #  508   0xafa0e  3      OPC=movq_r64_r64         
  callq .__mbsrtowcs_l            #  509   0xafa11  5      OPC=callq_label          
  movl %r13d, %edx                #  510   0xafa16  3      OPC=movl_r32_r32         
  movl $0x0, %eax                 #  511   0xafa19  5      OPC=movl_r32_imm32       
  movq -0x128(%rbp), %r11         #  512   0xafa1e  7      OPC=movq_r64_m64         
  subl %r15d, %edx                #  513   0xafa25  3      OPC=subl_r32_r32         
  cmovnsl %edx, %eax              #  514   0xafa28  3      OPC=cmovnsl_r32_r32      
  addl %r15d, %eax                #  515   0xafa2b  3      OPC=addl_r32_r32         
  movslq %eax, %r13               #  516   0xafa2e  3      OPC=movslq_r64_r32       
  movq -0xd8(%rbp), %rax          #  517   0xafa31  7      OPC=movq_r64_m64         
  subq %r11, %rax                 #  518   0xafa38  3      OPC=subq_r64_r64         
  cmpq %rax, %r13                 #  519   0xafa3b  3      OPC=cmpq_r64_r64         
  jae .L_af480                    #  520   0xafa3e  6      OPC=jae_label_1          
  testq %r12, %r12                #  521   0xafa44  3      OPC=testq_r64_r64        
  je .L_afadd                     #  522   0xafa47  6      OPC=je_label_1           
  testl %edx, %edx                #  523   0xafa4d  2      OPC=testl_r32_r32        
  jle .L_afa95                    #  524   0xafa4f  2      OPC=jle_label            
  movl -0x138(%rbp), %r10d        #  525   0xafa51  7      OPC=movl_r32_m32         
  movslq %edx, %rcx               #  526   0xafa58  3      OPC=movslq_r64_r32       
  movq %r11, -0x138(%rbp)         #  527   0xafa5b  7      OPC=movq_m64_r64         
  movq %rcx, %rdx                 #  528   0xafa62  3      OPC=movq_r64_r64         
  movq %rcx, -0x128(%rbp)         #  529   0xafa65  7      OPC=movq_m64_r64         
  movl $0x30, %esi                #  530   0xafa6c  5      OPC=movl_r32_imm32       
  cmpl $0x30, %r10d               #  531   0xafa71  4      OPC=cmpl_r32_imm8        
  je .L_afa7b                     #  532   0xafa75  2      OPC=je_label             
  movl $0x20, %esi                #  533   0xafa77  5      OPC=movl_r32_imm32       
.L_afa7b:                         #        0xafa7c  0      OPC=<label>              
  movq %r12, %rdi                 #  534   0xafa7c  3      OPC=movq_r64_r64         
  callq .wmemset                  #  535   0xafa7f  5      OPC=callq_label          
  movq -0x128(%rbp), %rcx         #  536   0xafa84  7      OPC=movq_r64_m64         
  movq -0x138(%rbp), %r11         #  537   0xafa8b  7      OPC=movq_r64_m64         
  leaq (%r12,%rcx,4), %r12        #  538   0xafa92  4      OPC=leaq_r64_m16         
.L_afa95:                         #        0xafa96  0      OPC=<label>              
  movl -0x130(%rbp), %r8d         #  539   0xafa96  7      OPC=movl_r32_m32         
  testl %r8d, %r8d                #  540   0xafa9d  3      OPC=testl_r32_r32        
  jne .L_b114d                    #  541   0xafaa0  6      OPC=jne_label_1          
  movl -0xe0(%rbp), %edi          #  542   0xafaa6  6      OPC=movl_r32_m32         
  movslq %r15d, %r15              #  543   0xafaac  3      OPC=movslq_r64_r32       
  movq %r11, -0xe0(%rbp)          #  544   0xafaaf  7      OPC=movq_m64_r64         
  testl %edi, %edi                #  545   0xafab6  2      OPC=testl_r32_r32        
  je .L_b112b                     #  546   0xafab8  6      OPC=je_label_1           
  movq -0xf8(%rbp), %rcx          #  547   0xafabe  7      OPC=movq_r64_m64         
  movq %r15, %rdx                 #  548   0xafac5  3      OPC=movq_r64_r64         
  movq %rbx, %rsi                 #  549   0xafac8  3      OPC=movq_r64_r64         
  movq %r12, %rdi                 #  550   0xafacb  3      OPC=movq_r64_r64         
  callq .memcpy_uppcase           #  551   0xaface  5      OPC=callq_label          
  movq -0xe0(%rbp), %r11          #  552   0xafad3  7      OPC=movq_r64_m64         
.L_afad9:                         #        0xafada  0      OPC=<label>              
  leaq (%r12,%r15,4), %r12        #  553   0xafada  4      OPC=leaq_r64_m16         
.L_afadd:                         #        0xafade  0      OPC=<label>              
  addq %r13, %r11                 #  554   0xafade  3      OPC=addq_r64_r64         
  movq %r14, %rbx                 #  555   0xafae1  3      OPC=movq_r64_r64         
  jmpq .L_af348                   #  556   0xafae4  5      OPC=jmpq_label_1         
  movl -0x4(%r14), %r15d          #  557   0xafae9  4      OPC=movl_r32_m32         
  movq %r14, %rbx                 #  558   0xafaed  3      OPC=movq_r64_r64         
  subq $0x4, %rbx                 #  559   0xafaf0  4      OPC=subq_r64_imm8        
  jmpq .L_af4f3                   #  560   0xafaf4  5      OPC=jmpq_label_1         
  movq %r14, %rbx                 #  561   0xafaf9  3      OPC=movq_r64_r64         
  movq -0x108(%rbp), %rax         #  562   0xafafc  7      OPC=movq_r64_m64         
  movq 0x338(%rax), %r15          #  563   0xafb03  7      OPC=movq_r64_m64         
  leaq 0xbb660(%rip), %rax        #  564   0xafb0a  7      OPC=leaq_r64_m16         
  movl (%r15), %r14d              #  565   0xafb11  3      OPC=movl_r32_m32         
  testl %r14d, %r14d              #  566   0xafb14  3      OPC=testl_r32_r32        
  cmoveq %rax, %r15               #  567   0xafb17  4      OPC=cmoveq_r64_r64       
  jmpq .L_af650                   #  568   0xafb1b  5      OPC=jmpq_label_1         
  movq %rbx, %r14                 #  569   0xafb20  3      OPC=movq_r64_r64         
  movq %r14, %rbx                 #  570   0xafb23  3      OPC=movq_r64_r64         
  movl $0x1, %r15d                #  571   0xafb26  6      OPC=movl_r32_imm32       
  jmpq .L_af79b                   #  572   0xafb2c  5      OPC=jmpq_label_1         
  movq %rbx, %r14                 #  573   0xafb31  3      OPC=movq_r64_r64         
  subl $0x1, %r13d                #  574   0xafb34  4      OPC=subl_r32_imm8        
  movl $0x0, %ebx                 #  575   0xafb38  5      OPC=movl_r32_imm32       
  movq -0xd8(%rbp), %rax          #  576   0xafb3d  7      OPC=movq_r64_m64         
  cmovnsl %r13d, %ebx             #  577   0xafb44  4      OPC=cmovnsl_r32_r32      
  addl $0x1, %ebx                 #  578   0xafb48  3      OPC=addl_r32_imm8        
  movslq %ebx, %rbx               #  579   0xafb4b  3      OPC=movslq_r64_r32       
  subq %r11, %rax                 #  580   0xafb4e  3      OPC=subq_r64_r64         
  cmpq %rax, %rbx                 #  581   0xafb51  3      OPC=cmpq_r64_r64         
  jae .L_af480                    #  582   0xafb54  6      OPC=jae_label_1          
  testq %r12, %r12                #  583   0xafb5a  3      OPC=testq_r64_r64        
  je .L_afb9e                     #  584   0xafb5d  2      OPC=je_label             
  testl %r13d, %r13d              #  585   0xafb5f  3      OPC=testl_r32_r32        
  jle .L_afb92                    #  586   0xafb62  2      OPC=jle_label            
  movslq %r13d, %r13              #  587   0xafb64  3      OPC=movslq_r64_r32       
  cmpl $0x30, %r10d               #  588   0xafb67  4      OPC=cmpl_r32_imm8        
  movq %r11, -0xe0(%rbp)          #  589   0xafb6b  7      OPC=movq_m64_r64         
  movq %r13, %rdx                 #  590   0xafb72  3      OPC=movq_r64_r64         
  je .L_b13d8                     #  591   0xafb75  6      OPC=je_label_1           
  movq %r12, %rdi                 #  592   0xafb7b  3      OPC=movq_r64_r64         
  movl $0x20, %esi                #  593   0xafb7e  5      OPC=movl_r32_imm32       
  leaq (%r12,%r13,4), %r12        #  594   0xafb83  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  595   0xafb87  5      OPC=callq_label          
  movq -0xe0(%rbp), %r11          #  596   0xafb8c  7      OPC=movq_r64_m64         
.L_afb92:                         #        0xafb93  0      OPC=<label>              
  movl $0x9, (%r12)               #  597   0xafb93  8      OPC=movl_m32_imm32       
  addq $0x4, %r12                 #  598   0xafb9b  4      OPC=addq_r64_imm8        
.L_afb9e:                         #        0xafb9f  0      OPC=<label>              
  addq %rbx, %r11                 #  599   0xafb9f  3      OPC=addq_r64_r64         
  movq %r14, %rbx                 #  600   0xafba2  3      OPC=movq_r64_r64         
  jmpq .L_af348                   #  601   0xafba5  5      OPC=jmpq_label_1         
  movq %rbx, %r14                 #  602   0xafbaa  3      OPC=movq_r64_r64         
  movq -0xf0(%rbp), %rbx          #  603   0xafbad  7      OPC=movq_r64_m64         
  movq -0x118(%rbp), %rdi         #  604   0xafbb4  7      OPC=movq_r64_m64         
  movq %r11, -0x130(%rbp)         #  605   0xafbbb  7      OPC=movq_m64_r64         
  movl %r10d, -0x128(%rbp)        #  606   0xafbc2  7      OPC=movl_m32_r32         
  movq (%rbx), %rax               #  607   0xafbc9  3      OPC=movq_r64_m64         
  movq %rax, -0xd0(%rbp)          #  608   0xafbcc  7      OPC=movq_m64_r64         
  movq 0x8(%rbx), %rax            #  609   0xafbd3  4      OPC=movq_r64_m64         
  movq %rax, -0xc8(%rbp)          #  610   0xafbd7  7      OPC=movq_m64_r64         
  movq 0x10(%rbx), %rax           #  611   0xafbde  4      OPC=movq_r64_m64         
  movq %rax, -0xc0(%rbp)          #  612   0xafbe2  7      OPC=movq_m64_r64         
  movq 0x18(%rbx), %rax           #  613   0xafbe9  4      OPC=movq_r64_m64         
  movq %rax, -0xb8(%rbp)          #  614   0xafbed  7      OPC=movq_m64_r64         
  movq 0x20(%rbx), %rax           #  615   0xafbf4  4      OPC=movq_r64_m64         
  movq %rax, -0xb0(%rbp)          #  616   0xafbf8  7      OPC=movq_m64_r64         
  movq 0x28(%rbx), %rax           #  617   0xafbff  4      OPC=movq_r64_m64         
  movq %rax, -0xa8(%rbp)          #  618   0xafc03  7      OPC=movq_m64_r64         
  movq 0x30(%rbx), %rax           #  619   0xafc0a  4      OPC=movq_r64_m64         
  movq %rax, -0xa0(%rbp)          #  620   0xafc0e  7      OPC=movq_m64_r64         
  callq .mktime                   #  621   0xafc15  5      OPC=callq_label          
  movq %rax, %rdi                 #  622   0xafc1a  3      OPC=movq_r64_r64         
  movq %rax, %rcx                 #  623   0xafc1d  3      OPC=movq_r64_r64         
  movq -0x100(%rbp), %rax         #  624   0xafc20  7      OPC=movq_r64_m64         
  movq -0x130(%rbp), %r11         #  625   0xafc27  7      OPC=movq_r64_m64         
  movl -0x128(%rbp), %r10d        #  626   0xafc2e  7      OPC=movl_r32_m32         
  shrq $0x3f, %rdi                #  627   0xafc35  4      OPC=shrq_r64_imm8        
  movl %edi, %esi                 #  628   0xafc39  2      OPC=movl_r32_r32         
  negl %edi                       #  629   0xafc3b  2      OPC=negl_r32             
  leaq 0x58(%rax), %r15           #  630   0xafc3d  4      OPC=leaq_r64_m16         
.L_afc40:                         #        0xafc41  0      OPC=<label>              
  movq $0x6666666666666667, %rax  #  631   0xafc41  10     OPC=movq_r64_imm64       
  subq $0x4, %r15                 #  632   0xafc4b  4      OPC=subq_r64_imm8        
  imulq %rcx                      #  633   0xafc4f  3      OPC=imulq_r64            
  movq %rcx, %rax                 #  634   0xafc52  3      OPC=movq_r64_r64         
  sarq $0x3f, %rax                #  635   0xafc55  4      OPC=sarq_r64_imm8        
  sarq $0x2, %rdx                 #  636   0xafc59  4      OPC=sarq_r64_imm8        
  subq %rax, %rdx                 #  637   0xafc5d  3      OPC=subq_r64_r64         
  leaq (%rdx,%rdx,4), %rax        #  638   0xafc60  4      OPC=leaq_r64_m16         
  addq %rax, %rax                 #  639   0xafc64  3      OPC=addq_r64_r64         
  subq %rax, %rcx                 #  640   0xafc67  3      OPC=subq_r64_r64         
  movq %rcx, %rax                 #  641   0xafc6a  3      OPC=movq_r64_r64         
  movq %rdx, %rcx                 #  642   0xafc6d  3      OPC=movq_r64_r64         
  xorl %edi, %eax                 #  643   0xafc70  2      OPC=xorl_r32_r32         
  testq %rdx, %rdx                #  644   0xafc72  3      OPC=testq_r64_r64        
  leal 0x30(%rsi,%rax,1), %eax    #  645   0xafc75  4      OPC=leal_r32_m16         
  movl %eax, (%r15)               #  646   0xafc79  3      OPC=movl_m32_r32         
  jne .L_afc40                    #  647   0xafc7c  2      OPC=jne_label            
  movq %r14, %rbx                 #  648   0xafc7e  3      OPC=movq_r64_r64         
  movl $0x1, %r8d                 #  649   0xafc81  6      OPC=movl_r32_imm32       
  nop                             #  650   0xafc87  1      OPC=nop                  
  nop                             #  651   0xafc88  1      OPC=nop                  
  nop                             #  652   0xafc89  1      OPC=nop                  
  nop                             #  653   0xafc8a  1      OPC=nop                  
  nop                             #  654   0xafc8b  1      OPC=nop                  
  nop                             #  655   0xafc8c  1      OPC=nop                  
  nop                             #  656   0xafc8d  1      OPC=nop                  
  nop                             #  657   0xafc8e  1      OPC=nop                  
  nop                             #  658   0xafc8f  1      OPC=nop                  
  nop                             #  659   0xafc90  1      OPC=nop                  
.L_afc90:                         #        0xafc91  0      OPC=<label>              
  testl %esi, %esi                #  660   0xafc91  2      OPC=testl_r32_r32        
  je .L_afca0                     #  661   0xafc93  2      OPC=je_label             
  movl $0x2d, -0x4(%r15)          #  662   0xafc95  8      OPC=movl_m32_imm32       
  subq $0x4, %r15                 #  663   0xafc9d  4      OPC=subq_r64_imm8        
.L_afca0:                         #        0xafca1  0      OPC=<label>              
  movq -0x100(%rbp), %rax         #  664   0xafca1  7      OPC=movq_r64_m64         
  leaq 0x58(%rax), %r14           #  665   0xafca8  4      OPC=leaq_r64_m16         
  subq %r15, %r14                 #  666   0xafcac  3      OPC=subq_r64_r64         
  cmpl $0x2d, %r10d               #  667   0xafcaf  4      OPC=cmpl_r32_imm8        
  je .L_afd5a                     #  668   0xafcb3  6      OPC=je_label_1           
  addq $0x58, %rax                #  669   0xafcb9  4      OPC=addq_r64_imm8        
  movl %r8d, %ecx                 #  670   0xafcbd  3      OPC=movl_r32_r32         
  movq %rax, %r14                 #  671   0xafcc0  3      OPC=movq_r64_r64         
  subq %r15, %r14                 #  672   0xafcc3  3      OPC=subq_r64_r64         
  movq %r14, %rdx                 #  673   0xafcc6  3      OPC=movq_r64_r64         
  sarq $0x2, %rdx                 #  674   0xafcc9  4      OPC=sarq_r64_imm8        
  subl %edx, %ecx                 #  675   0xafccd  2      OPC=subl_r32_r32         
  testl %ecx, %ecx                #  676   0xafccf  2      OPC=testl_r32_r32        
  jle .L_afd5a                    #  677   0xafcd1  6      OPC=jle_label_1          
  cmpl $0x5f, %r10d               #  678   0xafcd7  4      OPC=cmpl_r32_imm8        
  je .L_b0fd4                     #  679   0xafcdb  6      OPC=je_label_1           
  movq -0xd8(%rbp), %rdx          #  680   0xafce1  7      OPC=movq_r64_m64         
  movslq %r8d, %r8                #  681   0xafce8  3      OPC=movslq_r64_r32       
  subq %r11, %rdx                 #  682   0xafceb  3      OPC=subq_r64_r64         
  cmpq %rdx, %r8                  #  683   0xafcee  3      OPC=cmpq_r64_r64         
  jae .L_af480                    #  684   0xafcf1  6      OPC=jae_label_1          
  testl %esi, %esi                #  685   0xafcf7  2      OPC=testl_r32_r32        
  je .L_afd19                     #  686   0xafcf9  2      OPC=je_label             
  addq $0x4, %r15                 #  687   0xafcfb  4      OPC=addq_r64_imm8        
  testq %r12, %r12                #  688   0xafcff  3      OPC=testq_r64_r64        
  je .L_afd0f                     #  689   0xafd02  2      OPC=je_label             
  movl $0x2d, (%r12)              #  690   0xafd04  8      OPC=movl_m32_imm32       
  addq $0x4, %r12                 #  691   0xafd0c  4      OPC=addq_r64_imm8        
.L_afd0f:                         #        0xafd10  0      OPC=<label>              
  subq %r15, %rax                 #  692   0xafd10  3      OPC=subq_r64_r64         
  addq $0x1, %r11                 #  693   0xafd13  4      OPC=addq_r64_imm8        
  movq %rax, %r14                 #  694   0xafd17  3      OPC=movq_r64_r64         
.L_afd19:                         #        0xafd1a  0      OPC=<label>              
  testq %r12, %r12                #  695   0xafd1a  3      OPC=testq_r64_r64        
  movslq %ecx, %r13               #  696   0xafd1d  3      OPC=movslq_r64_r32       
  je .L_afd54                     #  697   0xafd20  2      OPC=je_label             
  movslq %ecx, %r13               #  698   0xafd22  3      OPC=movslq_r64_r32       
  movq %r12, %rdi                 #  699   0xafd25  3      OPC=movq_r64_r64         
  movl $0x30, %esi                #  700   0xafd28  5      OPC=movl_r32_imm32       
  movq %r13, %rdx                 #  701   0xafd2d  3      OPC=movq_r64_r64         
  movq %r11, -0x130(%rbp)         #  702   0xafd30  7      OPC=movq_m64_r64         
  movl %r10d, -0x128(%rbp)        #  703   0xafd37  7      OPC=movl_m32_r32         
  callq .wmemset                  #  704   0xafd3e  5      OPC=callq_label          
  movq -0x130(%rbp), %r11         #  705   0xafd43  7      OPC=movq_r64_m64         
  movl -0x128(%rbp), %r10d        #  706   0xafd4a  7      OPC=movl_r32_m32         
  leaq (%r12,%r13,4), %r12        #  707   0xafd51  4      OPC=leaq_r64_m16         
.L_afd54:                         #        0xafd55  0      OPC=<label>              
  addq %r13, %r11                 #  708   0xafd55  3      OPC=addq_r64_r64         
  xorl %r13d, %r13d               #  709   0xafd58  3      OPC=xorl_r32_r32         
.L_afd5a:                         #        0xafd5b  0      OPC=<label>              
  movq %r14, %rcx                 #  710   0xafd5b  3      OPC=movq_r64_r64         
  movq -0xd8(%rbp), %rax          #  711   0xafd5e  7      OPC=movq_r64_m64         
  movl $0x0, %r14d                #  712   0xafd65  6      OPC=movl_r32_imm32       
  sarq $0x2, %rcx                 #  713   0xafd6b  4      OPC=sarq_r64_imm8        
  subl %ecx, %r13d                #  714   0xafd6f  3      OPC=subl_r32_r32         
  cmovnsl %r13d, %r14d            #  715   0xafd72  4      OPC=cmovnsl_r32_r32      
  subq %r11, %rax                 #  716   0xafd76  3      OPC=subq_r64_r64         
  addl %ecx, %r14d                #  717   0xafd79  3      OPC=addl_r32_r32         
  movslq %r14d, %r14              #  718   0xafd7c  3      OPC=movslq_r64_r32       
  cmpq %rax, %r14                 #  719   0xafd7f  3      OPC=cmpq_r64_r64         
  jae .L_af480                    #  720   0xafd82  6      OPC=jae_label_1          
  testq %r12, %r12                #  721   0xafd88  3      OPC=testq_r64_r64        
  je .L_af5b2                     #  722   0xafd8b  6      OPC=je_label_1           
  testl %r13d, %r13d              #  723   0xafd91  3      OPC=testl_r32_r32        
  jle .L_afdd2                    #  724   0xafd94  2      OPC=jle_label            
  movslq %r13d, %r13              #  725   0xafd96  3      OPC=movslq_r64_r32       
  cmpl $0x30, %r10d               #  726   0xafd99  4      OPC=cmpl_r32_imm8        
  movq %r11, -0x130(%rbp)         #  727   0xafd9d  7      OPC=movq_m64_r64         
  movq %rcx, -0x128(%rbp)         #  728   0xafda4  7      OPC=movq_m64_r64         
  movq %r13, %rdx                 #  729   0xafdab  3      OPC=movq_r64_r64         
  je .L_b0fb0                     #  730   0xafdae  6      OPC=je_label_1           
  movq %r12, %rdi                 #  731   0xafdb4  3      OPC=movq_r64_r64         
  movl $0x20, %esi                #  732   0xafdb7  5      OPC=movl_r32_imm32       
  leaq (%r12,%r13,4), %r12        #  733   0xafdbc  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  734   0xafdc0  5      OPC=callq_label          
  movq -0x130(%rbp), %r11         #  735   0xafdc5  7      OPC=movq_r64_m64         
  movq -0x128(%rbp), %rcx         #  736   0xafdcc  7      OPC=movq_r64_m64         
.L_afdd2:                         #        0xafdd3  0      OPC=<label>              
  movl -0xe0(%rbp), %eax          #  737   0xafdd3  6      OPC=movl_r32_m32         
  movslq %ecx, %r13               #  738   0xafdd9  3      OPC=movslq_r64_r32       
  movq %r11, -0xe0(%rbp)          #  739   0xafddc  7      OPC=movq_m64_r64         
  testl %eax, %eax                #  740   0xafde3  2      OPC=testl_r32_r32        
  je .L_b0e38                     #  741   0xafde5  6      OPC=je_label_1           
  movq -0xf8(%rbp), %rcx          #  742   0xafdeb  7      OPC=movq_r64_m64         
  movq %r13, %rdx                 #  743   0xafdf2  3      OPC=movq_r64_r64         
  movq %r15, %rsi                 #  744   0xafdf5  3      OPC=movq_r64_r64         
  movq %r12, %rdi                 #  745   0xafdf8  3      OPC=movq_r64_r64         
  callq .memcpy_uppcase           #  746   0xafdfb  5      OPC=callq_label          
  movq -0xe0(%rbp), %r11          #  747   0xafe00  7      OPC=movq_r64_m64         
  jmpq .L_af910                   #  748   0xafe07  5      OPC=jmpq_label_1         
  movq %rbx, %r14                 #  749   0xafe0c  3      OPC=movq_r64_r64         
  subl $0x1, %r13d                #  750   0xafe0f  4      OPC=subl_r32_imm8        
  movl $0x0, %ebx                 #  751   0xafe13  5      OPC=movl_r32_imm32       
  movq -0xd8(%rbp), %rax          #  752   0xafe18  7      OPC=movq_r64_m64         
  cmovnsl %r13d, %ebx             #  753   0xafe1f  4      OPC=cmovnsl_r32_r32      
  addl $0x1, %ebx                 #  754   0xafe23  3      OPC=addl_r32_imm8        
  movslq %ebx, %rbx               #  755   0xafe26  3      OPC=movslq_r64_r32       
  subq %r11, %rax                 #  756   0xafe29  3      OPC=subq_r64_r64         
  cmpq %rax, %rbx                 #  757   0xafe2c  3      OPC=cmpq_r64_r64         
  jae .L_af480                    #  758   0xafe2f  6      OPC=jae_label_1          
  testq %r12, %r12                #  759   0xafe35  3      OPC=testq_r64_r64        
  je .L_afb9e                     #  760   0xafe38  6      OPC=je_label_1           
  testl %r13d, %r13d              #  761   0xafe3e  3      OPC=testl_r32_r32        
  jle .L_afe71                    #  762   0xafe41  2      OPC=jle_label            
  movslq %r13d, %r13              #  763   0xafe43  3      OPC=movslq_r64_r32       
  cmpl $0x30, %r10d               #  764   0xafe46  4      OPC=cmpl_r32_imm8        
  movq %r11, -0xe0(%rbp)          #  765   0xafe4a  7      OPC=movq_m64_r64         
  movq %r13, %rdx                 #  766   0xafe51  3      OPC=movq_r64_r64         
  je .L_b13f5                     #  767   0xafe54  6      OPC=je_label_1           
  movq %r12, %rdi                 #  768   0xafe5a  3      OPC=movq_r64_r64         
  movl $0x20, %esi                #  769   0xafe5d  5      OPC=movl_r32_imm32       
  leaq (%r12,%r13,4), %r12        #  770   0xafe62  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  771   0xafe66  5      OPC=callq_label          
  movq -0xe0(%rbp), %r11          #  772   0xafe6b  7      OPC=movq_r64_m64         
.L_afe71:                         #        0xafe72  0      OPC=<label>              
  movl $0xa, (%r12)               #  773   0xafe72  8      OPC=movl_m32_imm32       
  addq $0x4, %r12                 #  774   0xafe7a  4      OPC=addq_r64_imm8        
  jmpq .L_afb9e                   #  775   0xafe7e  5      OPC=jmpq_label_1         
  movq %rbx, %r14                 #  776   0xafe83  3      OPC=movq_r64_r64         
  movq %r14, %rbx                 #  777   0xafe86  3      OPC=movq_r64_r64         
  leaq 0xbb2b9(%rip), %r15        #  778   0xafe89  7      OPC=leaq_r64_m16         
  jmpq .L_af650                   #  779   0xafe90  5      OPC=jmpq_label_1         
  xorl %r15d, %r15d               #  780   0xafe95  3      OPC=xorl_r32_r32         
.L_afe97:                         #        0xafe98  0      OPC=<label>              
  movq -0xf0(%rbp), %rax          #  781   0xafe98  7      OPC=movq_r64_m64         
  movl 0x20(%rax), %esi           #  782   0xafe9f  3      OPC=movl_r32_m32         
  testl %esi, %esi                #  783   0xafea2  2      OPC=testl_r32_r32        
  js .L_b1145                     #  784   0xafea4  6      OPC=js_label_1           
  movq 0x28(%rax), %r8            #  785   0xafeaa  4      OPC=movq_r64_m64         
  movl %r13d, %ebx                #  786   0xafeae  3      OPC=movl_r32_r32         
  testl %r8d, %r8d                #  787   0xafeb1  3      OPC=testl_r32_r32        
  movl %r8d, %ecx                 #  788   0xafeb4  3      OPC=movl_r32_r32         
  js .L_b1283                     #  789   0xafeb7  6      OPC=js_label_1           
  subl $0x1, %ebx                 #  790   0xafebd  3      OPC=subl_r32_imm8        
  movl $0x0, %r8d                 #  791   0xafec0  6      OPC=movl_r32_imm32       
  movq -0xd8(%rbp), %rax          #  792   0xafec6  7      OPC=movq_r64_m64         
  cmovnsl %ebx, %r8d              #  793   0xafecd  4      OPC=cmovnsl_r32_r32      
  addl $0x1, %r8d                 #  794   0xafed1  4      OPC=addl_r32_imm8        
  movslq %r8d, %r8                #  795   0xafed5  3      OPC=movslq_r64_r32       
  subq %r11, %rax                 #  796   0xafed8  3      OPC=subq_r64_r64         
  cmpq %rax, %r8                  #  797   0xafedb  3      OPC=cmpq_r64_r64         
  jae .L_af480                    #  798   0xafede  6      OPC=jae_label_1          
  testq %r12, %r12                #  799   0xafee4  3      OPC=testq_r64_r64        
  je .L_aff4f                     #  800   0xafee7  2      OPC=je_label             
  testl %ebx, %ebx                #  801   0xafee9  2      OPC=testl_r32_r32        
  jle .L_aff43                    #  802   0xafeeb  2      OPC=jle_label            
  movslq %ebx, %rbx               #  803   0xafeed  3      OPC=movslq_r64_r32       
  cmpl $0x30, %r10d               #  804   0xafef0  4      OPC=cmpl_r32_imm8        
  movq %r11, -0x140(%rbp)         #  805   0xafef4  7      OPC=movq_m64_r64         
  movq %r8, -0x138(%rbp)          #  806   0xafefb  7      OPC=movq_m64_r64         
  movl %ecx, -0x130(%rbp)         #  807   0xaff02  6      OPC=movl_m32_r32         
  movq %rbx, %rdx                 #  808   0xaff08  3      OPC=movq_r64_r64         
  movl %r10d, -0x128(%rbp)        #  809   0xaff0b  7      OPC=movl_m32_r32         
  je .L_b14cc                     #  810   0xaff12  6      OPC=je_label_1           
  movq %r12, %rdi                 #  811   0xaff18  3      OPC=movq_r64_r64         
  movl $0x20, %esi                #  812   0xaff1b  5      OPC=movl_r32_imm32       
  leaq (%r12,%rbx,4), %r12        #  813   0xaff20  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  814   0xaff24  5      OPC=callq_label          
  movq -0x140(%rbp), %r11         #  815   0xaff29  7      OPC=movq_r64_m64         
  movq -0x138(%rbp), %r8          #  816   0xaff30  7      OPC=movq_r64_m64         
  movl -0x130(%rbp), %ecx         #  817   0xaff37  6      OPC=movl_r32_m32         
  movl -0x128(%rbp), %r10d        #  818   0xaff3d  7      OPC=movl_r32_m32         
.L_aff43:                         #        0xaff44  0      OPC=<label>              
  movl $0x2b, (%r12)              #  819   0xaff44  8      OPC=movl_m32_imm32       
  addq $0x4, %r12                 #  820   0xaff4c  4      OPC=addq_r64_imm8        
.L_aff4f:                         #        0xaff50  0      OPC=<label>              
  addq %r8, %r11                  #  821   0xaff50  3      OPC=addq_r64_r64         
.L_aff52:                         #        0xaff53  0      OPC=<label>              
  movl $0x88888889, %esi          #  822   0xaff53  6      OPC=movl_r32_imm32_1     
  movl %ecx, %eax                 #  823   0xaff59  2      OPC=movl_r32_r32         
  movl $0x4, %r8d                 #  824   0xaff5b  6      OPC=movl_r32_imm32       
  imull %esi                      #  825   0xaff61  2      OPC=imull_r32            
  movl %ecx, %eax                 #  826   0xaff63  2      OPC=movl_r32_r32         
  movq %r14, %rbx                 #  827   0xaff65  3      OPC=movq_r64_r64         
  sarl $0x1f, %eax                #  828   0xaff68  3      OPC=sarl_r32_imm8        
  addl %ecx, %edx                 #  829   0xaff6b  2      OPC=addl_r32_r32         
  sarl $0x5, %edx                 #  830   0xaff6d  3      OPC=sarl_r32_imm8        
  subl %eax, %edx                 #  831   0xaff70  2      OPC=subl_r32_r32         
  cmpl $0x4, %r13d                #  832   0xaff72  4      OPC=cmpl_r32_imm8        
  movl %edx, %eax                 #  833   0xaff76  2      OPC=movl_r32_r32         
  cmovgel %r13d, %r8d             #  834   0xaff78  4      OPC=cmovgel_r32_r32      
  movl %edx, %ecx                 #  835   0xaff7c  2      OPC=movl_r32_r32         
  imull %esi                      #  836   0xaff7e  2      OPC=imull_r32            
  leal (%rdx,%rcx,1), %eax        #  837   0xaff80  3      OPC=leal_r32_m16         
  movl %ecx, %edx                 #  838   0xaff83  2      OPC=movl_r32_r32         
  sarl $0x1f, %edx                #  839   0xaff85  3      OPC=sarl_r32_imm8        
  sarl $0x5, %eax                 #  840   0xaff88  3      OPC=sarl_r32_imm8        
  subl %edx, %eax                 #  841   0xaff8b  2      OPC=subl_r32_r32         
  imull $0x28, %eax, %eax         #  842   0xaff8d  3      OPC=imull_r32_r32_imm8   
  addl %eax, %ecx                 #  843   0xaff90  2      OPC=addl_r32_r32         
  cmpl $0x4f, %r15d               #  844   0xaff92  4      OPC=cmpl_r32_imm8        
  sete %sil                       #  845   0xaff96  4      OPC=sete_r8              
  nop                             #  846   0xaff9a  1      OPC=nop                  
  nop                             #  847   0xaff9b  1      OPC=nop                  
  nop                             #  848   0xaff9c  1      OPC=nop                  
  nop                             #  849   0xaff9d  1      OPC=nop                  
  nop                             #  850   0xaff9e  1      OPC=nop                  
  nop                             #  851   0xaff9f  1      OPC=nop                  
  nop                             #  852   0xaffa0  1      OPC=nop                  
  nop                             #  853   0xaffa1  1      OPC=nop                  
.L_affa0:                         #        0xaffa2  0      OPC=<label>              
  testl %ecx, %ecx                #  854   0xaffa2  2      OPC=testl_r32_r32        
  js .L_affad                     #  855   0xaffa4  2      OPC=js_label             
  testb %sil, %sil                #  856   0xaffa6  3      OPC=testb_r8_r8          
  jne .L_b0e58                    #  857   0xaffa9  6      OPC=jne_label_1          
.L_affad:                         #        0xaffaf  0      OPC=<label>              
  movl %ecx, %esi                 #  858   0xaffaf  2      OPC=movl_r32_r32         
  movl $0xcccccccd, %edi          #  859   0xaffb1  6      OPC=movl_r32_imm32_1     
  shrl $0x1f, %esi                #  860   0xaffb7  3      OPC=shrl_r32_imm8        
  movl %esi, %eax                 #  861   0xaffba  2      OPC=movl_r32_r32         
  negl %eax                       #  862   0xaffbc  2      OPC=negl_r32             
  xorl %eax, %ecx                 #  863   0xaffbe  2      OPC=xorl_r32_r32         
  movq -0x100(%rbp), %rax         #  864   0xaffc0  7      OPC=movq_r64_m64         
  addl %esi, %ecx                 #  865   0xaffc7  2      OPC=addl_r32_r32         
  leaq 0x58(%rax), %r15           #  866   0xaffc9  4      OPC=leaq_r64_m16         
  nop                             #  867   0xaffcd  1      OPC=nop                  
  nop                             #  868   0xaffce  1      OPC=nop                  
  nop                             #  869   0xaffcf  1      OPC=nop                  
  nop                             #  870   0xaffd0  1      OPC=nop                  
  nop                             #  871   0xaffd1  1      OPC=nop                  
  nop                             #  872   0xaffd2  1      OPC=nop                  
.L_affd0:                         #        0xaffd3  0      OPC=<label>              
  movl %ecx, %eax                 #  873   0xaffd3  2      OPC=movl_r32_r32         
  subq $0x4, %r15                 #  874   0xaffd5  4      OPC=subq_r64_imm8        
  mull %edi                       #  875   0xaffd9  2      OPC=mull_r32             
  shrl $0x3, %edx                 #  876   0xaffdb  3      OPC=shrl_r32_imm8        
  leal (%rdx,%rdx,4), %eax        #  877   0xaffde  3      OPC=leal_r32_m16         
  addl %eax, %eax                 #  878   0xaffe1  2      OPC=addl_r32_r32         
  subl %eax, %ecx                 #  879   0xaffe3  2      OPC=subl_r32_r32         
  addl $0x30, %ecx                #  880   0xaffe5  3      OPC=addl_r32_imm8        
  testl %edx, %edx                #  881   0xaffe8  2      OPC=testl_r32_r32        
  movl %ecx, (%r15)               #  882   0xaffea  3      OPC=movl_m32_r32         
  movl %edx, %ecx                 #  883   0xaffed  2      OPC=movl_r32_r32         
  jne .L_affd0                    #  884   0xaffef  2      OPC=jne_label            
  jmpq .L_afc90                   #  885   0xafff1  5      OPC=jmpq_label_1         
  xorl %r15d, %r15d               #  886   0xafff6  3      OPC=xorl_r32_r32         
  movq %r14, %rbx                 #  887   0xafff9  3      OPC=movq_r64_r64         
.L_afff9:                         #        0xafffc  0      OPC=<label>              
  movq -0xf0(%rbp), %rax          #  888   0xafffc  7      OPC=movq_r64_m64         
  testl %r13d, %r13d              #  889   0xb0003  3      OPC=testl_r32_r32        
  movl $0x1, %r8d                 #  890   0xb0006  6      OPC=movl_r32_imm32       
  cmovgl %r13d, %r8d              #  891   0xb000c  4      OPC=cmovgl_r32_r32       
  cmpl $0x4f, %r15d               #  892   0xb0010  4      OPC=cmpl_r32_imm8        
  sete %sil                       #  893   0xb0014  4      OPC=sete_r8              
  movl 0x14(%rax), %eax           #  894   0xb0018  3      OPC=movl_r32_m32         
  movl %eax, -0x128(%rbp)         #  895   0xb001b  6      OPC=movl_m32_r32         
  leal 0x76c(%rax), %ecx          #  896   0xb0021  6      OPC=leal_r32_m16         
  jmpq .L_affa0                   #  897   0xb0027  5      OPC=jmpq_label_1         
  xorl %r15d, %r15d               #  898   0xb002c  3      OPC=xorl_r32_r32         
  movq %r14, %rbx                 #  899   0xb002f  3      OPC=movq_r64_r64         
.L_b002f:                         #        0xb0032  0      OPC=<label>              
  movq -0xf0(%rbp), %rax          #  900   0xb0032  7      OPC=movq_r64_m64         
  cmpl $0x2, %r13d                #  901   0xb0039  4      OPC=cmpl_r32_imm8        
  movl $0x2, %r8d                 #  902   0xb003d  6      OPC=movl_r32_imm32       
  cmovgel %r13d, %r8d             #  903   0xb0043  4      OPC=cmovgel_r32_r32      
  movl $0x92492493, %edx          #  904   0xb0047  6      OPC=movl_r32_imm32_1     
  movl 0x1c(%rax), %esi           #  905   0xb004d  3      OPC=movl_r32_m32         
  subl 0x18(%rax), %esi           #  906   0xb0050  3      OPC=subl_r32_m32         
  addl $0x7, %esi                 #  907   0xb0053  3      OPC=addl_r32_imm8        
  movl %esi, %eax                 #  908   0xb0056  2      OPC=movl_r32_r32         
  imull %edx                      #  909   0xb0058  2      OPC=imull_r32            
.L_b0056:                         #        0xb005a  0      OPC=<label>              
  leal (%rdx,%rsi,1), %ecx        #  910   0xb005a  3      OPC=leal_r32_m16         
  sarl $0x1f, %esi                #  911   0xb005d  3      OPC=sarl_r32_imm8        
  sarl $0x2, %ecx                 #  912   0xb0060  3      OPC=sarl_r32_imm8        
  subl %esi, %ecx                 #  913   0xb0063  2      OPC=subl_r32_r32         
  cmpl $0x4f, %r15d               #  914   0xb0065  4      OPC=cmpl_r32_imm8        
  sete %sil                       #  915   0xb0069  4      OPC=sete_r8              
  jmpq .L_affa0                   #  916   0xb006d  5      OPC=jmpq_label_1         
  xorl %r15d, %r15d               #  917   0xb0072  3      OPC=xorl_r32_r32         
  movq %r14, %rbx                 #  918   0xb0075  3      OPC=movq_r64_r64         
.L_b0074:                         #        0xb0078  0      OPC=<label>              
  movq -0xf0(%rbp), %rax          #  919   0xb0078  7      OPC=movq_r64_m64         
  cmpl $0x2, %r13d                #  920   0xb007f  4      OPC=cmpl_r32_imm8        
  movl $0x2, %r8d                 #  921   0xb0083  6      OPC=movl_r32_imm32       
  cmovgel %r13d, %r8d             #  922   0xb0089  4      OPC=cmovgel_r32_r32      
  cmpl $0x4f, %r15d               #  923   0xb008d  4      OPC=cmpl_r32_imm8        
  sete %sil                       #  924   0xb0091  4      OPC=sete_r8              
  movl 0x4(%rax), %ecx            #  925   0xb0095  3      OPC=movl_r32_m32         
  jmpq .L_affa0                   #  926   0xb0098  5      OPC=jmpq_label_1         
.L_b0099:                         #        0xb009d  0      OPC=<label>              
  movl %ecx, %r15d                #  927   0xb009d  3      OPC=movl_r32_r32         
  jmpq .L_af4f3                   #  928   0xb00a0  5      OPC=jmpq_label_1         
  xorl %r15d, %r15d               #  929   0xb00a5  3      OPC=xorl_r32_r32         
  movq %r14, %rbx                 #  930   0xb00a8  3      OPC=movq_r64_r64         
.L_b00a7:                         #        0xb00ab  0      OPC=<label>              
  movq -0xf0(%rbp), %rax          #  931   0xb00ab  7      OPC=movq_r64_m64         
  cmpl $0x2, %r13d                #  932   0xb00b2  4      OPC=cmpl_r32_imm8        
  movl $0x2, %r8d                 #  933   0xb00b6  6      OPC=movl_r32_imm32       
  cmovgel %r13d, %r8d             #  934   0xb00bc  4      OPC=cmovgel_r32_r32      
  cmpl $0x4f, %r15d               #  935   0xb00c0  4      OPC=cmpl_r32_imm8        
  sete %sil                       #  936   0xb00c4  4      OPC=sete_r8              
  movl (%rax), %ecx               #  937   0xb00c8  2      OPC=movl_r32_m32         
  jmpq .L_affa0                   #  938   0xb00ca  5      OPC=jmpq_label_1         
  xorl %r15d, %r15d               #  939   0xb00cf  3      OPC=xorl_r32_r32         
  movq %r14, %rbx                 #  940   0xb00d2  3      OPC=movq_r64_r64         
.L_b00d1:                         #        0xb00d5  0      OPC=<label>              
  movl -0xe4(%rbp), %ecx          #  941   0xb00d5  6      OPC=movl_r32_m32         
  cmpl $0x2, %r13d                #  942   0xb00db  4      OPC=cmpl_r32_imm8        
  movl $0x2, %r8d                 #  943   0xb00df  6      OPC=movl_r32_imm32       
  cmovgel %r13d, %r8d             #  944   0xb00e5  4      OPC=cmovgel_r32_r32      
.L_b00e5:                         #        0xb00e9  0      OPC=<label>              
  cmpl $0x4f, %r15d               #  945   0xb00e9  4      OPC=cmpl_r32_imm8        
  sete %sil                       #  946   0xb00ed  4      OPC=sete_r8              
  cmpl $0x2d, %r10d               #  947   0xb00f1  4      OPC=cmpl_r32_imm8        
  je .L_affa0                     #  948   0xb00f5  6      OPC=je_label_1           
  cmpl $0x30, %r10d               #  949   0xb00fb  4      OPC=cmpl_r32_imm8        
  je .L_affa0                     #  950   0xb00ff  6      OPC=je_label_1           
  movl $0x5f, %r10d               #  951   0xb0105  6      OPC=movl_r32_imm32       
  jmpq .L_affa0                   #  952   0xb010b  5      OPC=jmpq_label_1         
  xorl %r15d, %r15d               #  953   0xb0110  3      OPC=xorl_r32_r32         
  movq %r14, %rbx                 #  954   0xb0113  3      OPC=movq_r64_r64         
.L_b0112:                         #        0xb0116  0      OPC=<label>              
  movq -0xf0(%rbp), %rax          #  955   0xb0116  7      OPC=movq_r64_m64         
  cmpl $0x2, %r13d                #  956   0xb011d  4      OPC=cmpl_r32_imm8        
  movl $0x2, %r8d                 #  957   0xb0121  6      OPC=movl_r32_imm32       
  cmovgel %r13d, %r8d             #  958   0xb0127  4      OPC=cmovgel_r32_r32      
  movl 0x8(%rax), %ecx            #  959   0xb012b  3      OPC=movl_r32_m32         
  jmpq .L_b00e5                   #  960   0xb012e  2      OPC=jmpq_label           
  movq %r14, %rbx                 #  961   0xb0130  3      OPC=movq_r64_r64         
.L_b012f:                         #        0xb0133  0      OPC=<label>              
  movq -0x108(%rbp), %rax         #  962   0xb0133  7      OPC=movq_r64_m64         
  movq 0x330(%rax), %r15          #  963   0xb013a  7      OPC=movq_r64_m64         
  jmpq .L_af650                   #  964   0xb0141  5      OPC=jmpq_label_1         
  xorl %r15d, %r15d               #  965   0xb0146  3      OPC=xorl_r32_r32         
  movq %r14, %rbx                 #  966   0xb0149  3      OPC=movq_r64_r64         
.L_b0148:                         #        0xb014c  0      OPC=<label>              
  movq -0xf0(%rbp), %rdi          #  967   0xb014c  7      OPC=movq_r64_m64         
  cmpl $0x2, %r13d                #  968   0xb0153  4      OPC=cmpl_r32_imm8        
  movl $0x92492493, %ecx          #  969   0xb0157  6      OPC=movl_r32_imm32_1     
  movl $0x2, %r8d                 #  970   0xb015d  6      OPC=movl_r32_imm32       
  cmovgel %r13d, %r8d             #  971   0xb0163  4      OPC=cmovgel_r32_r32      
  movl 0x18(%rdi), %eax           #  972   0xb0167  3      OPC=movl_r32_m32         
  leal 0x6(%rax), %esi            #  973   0xb016a  3      OPC=leal_r32_m16         
  movl %eax, -0x128(%rbp)         #  974   0xb016d  6      OPC=movl_m32_r32         
  movl %esi, %eax                 #  975   0xb0173  2      OPC=movl_r32_r32         
  imull %ecx                      #  976   0xb0175  2      OPC=imull_r32            
  movl %esi, %eax                 #  977   0xb0177  2      OPC=movl_r32_r32         
  sarl $0x1f, %eax                #  978   0xb0179  3      OPC=sarl_r32_imm8        
  addl %esi, %edx                 #  979   0xb017c  2      OPC=addl_r32_r32         
  sarl $0x2, %edx                 #  980   0xb017e  3      OPC=sarl_r32_imm8        
  subl %eax, %edx                 #  981   0xb0181  2      OPC=subl_r32_r32         
  leal (,%rdx,8), %eax            #  982   0xb0183  7      OPC=leal_r32_m16         
  subl %edx, %eax                 #  983   0xb018a  2      OPC=subl_r32_r32         
  movl 0x1c(%rdi), %edx           #  984   0xb018c  3      OPC=movl_r32_m32         
  subl %esi, %eax                 #  985   0xb018f  2      OPC=subl_r32_r32         
  leal 0x7(%rax,%rdx,1), %esi     #  986   0xb0191  4      OPC=leal_r32_m16         
  movl %esi, %eax                 #  987   0xb0195  2      OPC=movl_r32_r32         
  imull %ecx                      #  988   0xb0197  2      OPC=imull_r32            
  jmpq .L_b0056                   #  989   0xb0199  5      OPC=jmpq_label_1         
  xorl %r15d, %r15d               #  990   0xb019e  3      OPC=xorl_r32_r32         
  movq %r14, %rbx                 #  991   0xb01a1  3      OPC=movq_r64_r64         
.L_b019f:                         #        0xb01a4  0      OPC=<label>              
  cmpl $0x2, %r13d                #  992   0xb01a4  4      OPC=cmpl_r32_imm8        
  movl $0x2, %r8d                 #  993   0xb01a8  6      OPC=movl_r32_imm32       
  movl -0xe4(%rbp), %ecx          #  994   0xb01ae  6      OPC=movl_r32_m32         
  cmovgel %r13d, %r8d             #  995   0xb01b4  4      OPC=cmovgel_r32_r32      
  cmpl $0x4f, %r15d               #  996   0xb01b8  4      OPC=cmpl_r32_imm8        
  sete %sil                       #  997   0xb01bc  4      OPC=sete_r8              
  jmpq .L_affa0                   #  998   0xb01c0  5      OPC=jmpq_label_1         
  xorl %r15d, %r15d               #  999   0xb01c5  3      OPC=xorl_r32_r32         
  movq %r14, %rbx                 #  1000  0xb01c8  3      OPC=movq_r64_r64         
.L_b01c6:                         #        0xb01cb  0      OPC=<label>              
  movq -0xf0(%rbp), %rax          #  1001  0xb01cb  7      OPC=movq_r64_m64         
  cmpl $0x2, %r13d                #  1002  0xb01d2  4      OPC=cmpl_r32_imm8        
  movl $0x2, %r8d                 #  1003  0xb01d6  6      OPC=movl_r32_imm32       
  cmovgel %r13d, %r8d             #  1004  0xb01dc  4      OPC=cmovgel_r32_r32      
  cmpl $0x4f, %r15d               #  1005  0xb01e0  4      OPC=cmpl_r32_imm8        
  sete %sil                       #  1006  0xb01e4  4      OPC=sete_r8              
  movl 0x8(%rax), %ecx            #  1007  0xb01e8  3      OPC=movl_r32_m32         
  jmpq .L_affa0                   #  1008  0xb01eb  5      OPC=jmpq_label_1         
  movl $0x0, -0x128(%rbp)         #  1009  0xb01f0  10     OPC=movl_m32_imm32       
  movq %r14, %rbx                 #  1010  0xb01fa  3      OPC=movq_r64_r64         
.L_b01f8:                         #        0xb01fd  0      OPC=<label>              
  movq -0xf0(%rbp), %rax          #  1011  0xb01fd  7      OPC=movq_r64_m64         
  movl $0x92492493, %edx          #  1012  0xb0204  6      OPC=movl_r32_imm32_1     
  movl 0x1c(%rax), %edi           #  1013  0xb020a  3      OPC=movl_r32_m32         
  movl 0x18(%rax), %r8d           #  1014  0xb020d  4      OPC=movl_r32_m32         
  movl 0x14(%rax), %r9d           #  1015  0xb0211  4      OPC=movl_r32_m32         
  movl %edi, %esi                 #  1016  0xb0215  2      OPC=movl_r32_r32         
  subl %r8d, %esi                 #  1017  0xb0217  3      OPC=subl_r32_r32         
  leal 0x76c(%r9), %ecx           #  1018  0xb021a  7      OPC=leal_r32_m16         
  addl $0x17e, %esi               #  1019  0xb0221  6      OPC=addl_r32_imm32       
  movl %esi, %eax                 #  1020  0xb0227  2      OPC=movl_r32_r32         
  imull %edx                      #  1021  0xb0229  2      OPC=imull_r32            
  leal (%rdx,%rsi,1), %eax        #  1022  0xb022b  3      OPC=leal_r32_m16         
  movl %esi, %edx                 #  1023  0xb022e  2      OPC=movl_r32_r32         
  sarl $0x1f, %edx                #  1024  0xb0230  3      OPC=sarl_r32_imm8        
  sarl $0x2, %eax                 #  1025  0xb0233  3      OPC=sarl_r32_imm8        
  subl %edx, %eax                 #  1026  0xb0236  2      OPC=subl_r32_r32         
  leal (,%rax,8), %edx            #  1027  0xb0238  7      OPC=leal_r32_m16         
  subl %eax, %edx                 #  1028  0xb023f  2      OPC=subl_r32_r32         
  movl %edx, %eax                 #  1029  0xb0241  2      OPC=movl_r32_r32         
  movl %edi, %edx                 #  1030  0xb0243  2      OPC=movl_r32_r32         
  subl %esi, %edx                 #  1031  0xb0245  2      OPC=subl_r32_r32         
  leal 0x3(%rdx,%rax,1), %r14d    #  1032  0xb0247  5      OPC=leal_r32_m16         
  testl %r14d, %r14d              #  1033  0xb024c  3      OPC=testl_r32_r32        
  js .L_b11f9                     #  1034  0xb024f  6      OPC=js_label_1           
  testb $0x3, %cl                 #  1035  0xb0255  3      OPC=testb_r8_imm8        
  movl $0xfffffe93, %eax          #  1036  0xb0258  6      OPC=movl_r32_imm32_1     
  jne .L_b029d                    #  1037  0xb025e  2      OPC=jne_label            
  movl $0x51eb851f, %esi          #  1038  0xb0260  5      OPC=movl_r32_imm32       
  movl %ecx, %eax                 #  1039  0xb0265  2      OPC=movl_r32_r32         
  imull %esi                      #  1040  0xb0267  2      OPC=imull_r32            
  movl %ecx, %esi                 #  1041  0xb0269  2      OPC=movl_r32_r32         
  movl $0xfffffe92, %eax          #  1042  0xb026b  6      OPC=movl_r32_imm32_1     
  sarl $0x1f, %esi                #  1043  0xb0271  3      OPC=sarl_r32_imm8        
  movl %edx, -0x130(%rbp)         #  1044  0xb0274  6      OPC=movl_m32_r32         
  sarl $0x5, %edx                 #  1045  0xb027a  3      OPC=sarl_r32_imm8        
  subl %esi, %edx                 #  1046  0xb027d  2      OPC=subl_r32_r32         
  imull $0x64, %edx, %edx         #  1047  0xb027f  3      OPC=imull_r32_r32_imm8   
  cmpl %edx, %ecx                 #  1048  0xb0282  2      OPC=cmpl_r32_r32         
  jne .L_b029d                    #  1049  0xb0284  2      OPC=jne_label            
  movl -0x130(%rbp), %eax         #  1050  0xb0286  6      OPC=movl_r32_m32         
  sarl $0x7, %eax                 #  1051  0xb028c  3      OPC=sarl_r32_imm8        
  subl %esi, %eax                 #  1052  0xb028f  2      OPC=subl_r32_r32         
  movl %ecx, %esi                 #  1053  0xb0291  2      OPC=movl_r32_r32         
  imull $0x190, %eax, %eax        #  1054  0xb0293  6      OPC=imull_r32_r32_imm32  
  subl %eax, %esi                 #  1055  0xb0299  2      OPC=subl_r32_r32         
  cmpl $0x1, %esi                 #  1056  0xb029b  3      OPC=cmpl_r32_imm8        
  sbbl %eax, %eax                 #  1057  0xb029e  2      OPC=sbbl_r32_r32         
  subl $0x16d, %eax               #  1058  0xb02a0  5      OPC=subl_eax_imm32       
.L_b029d:                         #        0xb02a5  0      OPC=<label>              
  addl %eax, %edi                 #  1059  0xb02a5  2      OPC=addl_r32_r32         
  movl $0x92492493, %edx          #  1060  0xb02a7  6      OPC=movl_r32_imm32_1     
  movl %edi, %esi                 #  1061  0xb02ad  2      OPC=movl_r32_r32         
  subl %r8d, %esi                 #  1062  0xb02af  3      OPC=subl_r32_r32         
  addl $0x17e, %esi               #  1063  0xb02b2  6      OPC=addl_r32_imm32       
  movl %esi, %eax                 #  1064  0xb02b8  2      OPC=movl_r32_r32         
  subl %esi, %edi                 #  1065  0xb02ba  2      OPC=subl_r32_r32         
  imull %edx                      #  1066  0xb02bc  2      OPC=imull_r32            
  leal (%rdx,%rsi,1), %eax        #  1067  0xb02be  3      OPC=leal_r32_m16         
  movl %esi, %edx                 #  1068  0xb02c1  2      OPC=movl_r32_r32         
  sarl $0x1f, %edx                #  1069  0xb02c3  3      OPC=sarl_r32_imm8        
  sarl $0x2, %eax                 #  1070  0xb02c6  3      OPC=sarl_r32_imm8        
  subl %edx, %eax                 #  1071  0xb02c9  2      OPC=subl_r32_r32         
  leal (,%rax,8), %edx            #  1072  0xb02cb  7      OPC=leal_r32_m16         
  subl %eax, %edx                 #  1073  0xb02d2  2      OPC=subl_r32_r32         
  leal 0x3(%rdi,%rdx,1), %esi     #  1074  0xb02d4  4      OPC=leal_r32_m16         
  testl %esi, %esi                #  1075  0xb02d8  2      OPC=testl_r32_r32        
  js .L_b1437                     #  1076  0xb02da  6      OPC=js_label_1           
  leal 0x76d(%r9), %ecx           #  1077  0xb02e0  7      OPC=leal_r32_m16         
.L_b02de:                         #        0xb02e7  0      OPC=<label>              
  cmpl $0x47, %r15d               #  1078  0xb02e7  4      OPC=cmpl_r32_imm8        
  je .L_b11b5                     #  1079  0xb02eb  6      OPC=je_label_1           
  cmpl $0x2, %r13d                #  1080  0xb02f1  4      OPC=cmpl_r32_imm8        
  movl $0x2, %r8d                 #  1081  0xb02f5  6      OPC=movl_r32_imm32       
  cmovgel %r13d, %r8d             #  1082  0xb02fb  4      OPC=cmovgel_r32_r32      
  cmpl $0x67, %r15d               #  1083  0xb02ff  4      OPC=cmpl_r32_imm8        
  jne .L_b11d2                    #  1084  0xb0303  6      OPC=jne_label_1          
  movl $0x51eb851f, %esi          #  1085  0xb0309  5      OPC=movl_r32_imm32       
  movl %ecx, %eax                 #  1086  0xb030e  2      OPC=movl_r32_r32         
  imull %esi                      #  1087  0xb0310  2      OPC=imull_r32            
  movl %edx, %eax                 #  1088  0xb0312  2      OPC=movl_r32_r32         
  movl %ecx, %edx                 #  1089  0xb0314  2      OPC=movl_r32_r32         
  sarl $0x1f, %edx                #  1090  0xb0316  3      OPC=sarl_r32_imm8        
  sarl $0x5, %eax                 #  1091  0xb0319  3      OPC=sarl_r32_imm8        
  subl %edx, %eax                 #  1092  0xb031c  2      OPC=subl_r32_r32         
  imull $0x64, %eax, %eax         #  1093  0xb031e  3      OPC=imull_r32_r32_imm8   
  subl %eax, %ecx                 #  1094  0xb0321  2      OPC=subl_r32_r32         
  leal 0x64(%rcx), %edi           #  1095  0xb0323  3      OPC=leal_r32_m16         
  movl %edi, %eax                 #  1096  0xb0326  2      OPC=movl_r32_r32         
  imull %esi                      #  1097  0xb0328  2      OPC=imull_r32            
  movl %edi, %eax                 #  1098  0xb032a  2      OPC=movl_r32_r32         
  sarl $0x1f, %eax                #  1099  0xb032c  3      OPC=sarl_r32_imm8        
  sarl $0x5, %edx                 #  1100  0xb032f  3      OPC=sarl_r32_imm8        
  subl %eax, %edx                 #  1101  0xb0332  2      OPC=subl_r32_r32         
  imull $0x64, %edx, %ecx         #  1102  0xb0334  3      OPC=imull_r32_r32_imm8   
  subl %ecx, %edi                 #  1103  0xb0337  2      OPC=subl_r32_r32         
  cmpl $0x4f, -0x128(%rbp)        #  1104  0xb0339  7      OPC=cmpl_m32_imm8        
  movl %edi, %ecx                 #  1105  0xb0340  2      OPC=movl_r32_r32         
  sete %sil                       #  1106  0xb0342  4      OPC=sete_r8              
  jmpq .L_affa0                   #  1107  0xb0346  5      OPC=jmpq_label_1         
  movq %r14, %rbx                 #  1108  0xb034b  3      OPC=movq_r64_r64         
  leaq 0xbaeb4(%rip), %r15        #  1109  0xb034e  7      OPC=leaq_r64_m16         
  jmpq .L_af650                   #  1110  0xb0355  5      OPC=jmpq_label_1         
  movq %r14, %rbx                 #  1111  0xb035a  3      OPC=movq_r64_r64         
  leaq 0xbadc5(%rip), %r15        #  1112  0xb035d  7      OPC=leaq_r64_m16         
  jmpq .L_af650                   #  1113  0xb0364  5      OPC=jmpq_label_1         
  xorl %r15d, %r15d               #  1114  0xb0369  3      OPC=xorl_r32_r32         
  movq %r14, %rbx                 #  1115  0xb036c  3      OPC=movq_r64_r64         
.L_b0366:                         #        0xb036f  0      OPC=<label>              
  movq -0xf0(%rbp), %rax          #  1116  0xb036f  7      OPC=movq_r64_m64         
  testl %r13d, %r13d              #  1117  0xb0376  3      OPC=testl_r32_r32        
  movl $0x1, %r8d                 #  1118  0xb0379  6      OPC=movl_r32_imm32       
  movl $0x51eb851f, %edx          #  1119  0xb037f  5      OPC=movl_r32_imm32       
  cmovgl %r13d, %r8d              #  1120  0xb0384  4      OPC=cmovgl_r32_r32       
  movl 0x14(%rax), %eax           #  1121  0xb0388  3      OPC=movl_r32_m32         
  leal 0x76c(%rax), %esi          #  1122  0xb038b  6      OPC=leal_r32_m16         
  movl %eax, -0x128(%rbp)         #  1123  0xb0391  6      OPC=movl_m32_r32         
  movl %esi, %eax                 #  1124  0xb0397  2      OPC=movl_r32_r32         
  imull %edx                      #  1125  0xb0399  2      OPC=imull_r32            
  movl %esi, %eax                 #  1126  0xb039b  2      OPC=movl_r32_r32         
  sarl $0x1f, %eax                #  1127  0xb039d  3      OPC=sarl_r32_imm8        
  sarl $0x5, %edx                 #  1128  0xb03a0  3      OPC=sarl_r32_imm8        
  movl %edx, %ecx                 #  1129  0xb03a3  2      OPC=movl_r32_r32         
  subl %eax, %ecx                 #  1130  0xb03a5  2      OPC=subl_r32_r32         
  imull $0x64, %ecx, %eax         #  1131  0xb03a7  3      OPC=imull_r32_r32_imm8   
  subl %eax, %esi                 #  1132  0xb03aa  2      OPC=subl_r32_r32         
  shrl $0x1f, %esi                #  1133  0xb03ac  3      OPC=shrl_r32_imm8        
  subl %esi, %ecx                 #  1134  0xb03af  2      OPC=subl_r32_r32         
  cmpl $0x4f, %r15d               #  1135  0xb03b1  4      OPC=cmpl_r32_imm8        
  sete %sil                       #  1136  0xb03b5  4      OPC=sete_r8              
  jmpq .L_affa0                   #  1137  0xb03b9  5      OPC=jmpq_label_1         
  testl %edx, %edx                #  1138  0xb03be  2      OPC=testl_r32_r32        
  movl $0x1, %eax                 #  1139  0xb03c0  5      OPC=movl_r32_imm32       
  cmovel -0xe0(%rbp), %eax        #  1140  0xb03c5  7      OPC=cmovel_r32_m32       
  leaq 0xb4a81(%rip), %rdi        #  1141  0xb03cc  7      OPC=leaq_r64_m16         
  movl %eax, -0xe0(%rbp)          #  1142  0xb03d3  6      OPC=movl_m32_r32         
  movq -0xf0(%rbp), %rax          #  1143  0xb03d9  7      OPC=movq_r64_m64         
  movl 0x10(%rax), %r15d          #  1144  0xb03e0  4      OPC=movl_r32_m32         
  cmpl $0xb, %r15d                #  1145  0xb03e4  4      OPC=cmpl_r32_imm8        
  movl %r15d, %edx                #  1146  0xb03e8  3      OPC=movl_r32_r32         
  ja .L_b03fd                     #  1147  0xb03eb  2      OPC=ja_label             
  leal 0x2004e(%r15), %eax        #  1148  0xb03ed  7      OPC=leal_r32_m16         
  movq -0x108(%rbp), %rbx         #  1149  0xb03f4  7      OPC=movq_r64_m64         
  movzwl %ax, %eax                #  1150  0xb03fb  3      OPC=movzwl_r32_r16       
  addq $0x8, %rax                 #  1151  0xb03fe  4      OPC=addq_r64_imm8        
  movq (%rbx,%rax,8), %rdi        #  1152  0xb0402  4      OPC=movq_r64_m64         
.L_b03fd:                         #        0xb0406  0      OPC=<label>              
  movq %r11, -0x128(%rbp)         #  1153  0xb0406  7      OPC=movq_m64_r64         
  movl %edx, -0x138(%rbp)         #  1154  0xb040d  6      OPC=movl_m32_r32         
  movl $0x0, %ebx                 #  1155  0xb0413  5      OPC=movl_r32_imm32       
  movl %r10d, -0x130(%rbp)        #  1156  0xb0418  7      OPC=movl_m32_r32         
  callq .wcslen                   #  1157  0xb041f  5      OPC=callq_label          
  subl %eax, %r13d                #  1158  0xb0424  3      OPC=subl_r32_r32         
  movq %rax, %rcx                 #  1159  0xb0427  3      OPC=movq_r64_r64         
  movq -0x128(%rbp), %r11         #  1160  0xb042a  7      OPC=movq_r64_m64         
  cmovnsl %r13d, %ebx             #  1161  0xb0431  4      OPC=cmovnsl_r32_r32      
  addl %eax, %ebx                 #  1162  0xb0435  2      OPC=addl_r32_r32         
  movq -0xd8(%rbp), %rax          #  1163  0xb0437  7      OPC=movq_r64_m64         
  movslq %ebx, %rbx               #  1164  0xb043e  3      OPC=movslq_r64_r32       
  subq %r11, %rax                 #  1165  0xb0441  3      OPC=subq_r64_r64         
  cmpq %rax, %rbx                 #  1166  0xb0444  3      OPC=cmpq_r64_r64         
  jae .L_af480                    #  1167  0xb0447  6      OPC=jae_label_1          
  testq %r12, %r12                #  1168  0xb044d  3      OPC=testq_r64_r64        
  je .L_afb9e                     #  1169  0xb0450  6      OPC=je_label_1           
  testl %r13d, %r13d              #  1170  0xb0456  3      OPC=testl_r32_r32        
  movl -0x138(%rbp), %edx         #  1171  0xb0459  6      OPC=movl_r32_m32         
  jle .L_b04a9                    #  1172  0xb045f  2      OPC=jle_label            
  movl -0x130(%rbp), %r10d        #  1173  0xb0461  7      OPC=movl_r32_m32         
  movslq %r13d, %r13              #  1174  0xb0468  3      OPC=movslq_r64_r32       
  movq %r11, -0x130(%rbp)         #  1175  0xb046b  7      OPC=movq_m64_r64         
  movq %rcx, -0x128(%rbp)         #  1176  0xb0472  7      OPC=movq_m64_r64         
  movq %r13, %rdx                 #  1177  0xb0479  3      OPC=movq_r64_r64         
  cmpl $0x30, %r10d               #  1178  0xb047c  4      OPC=cmpl_r32_imm8        
  je .L_b152d                     #  1179  0xb0480  6      OPC=je_label_1           
  movq %r12, %rdi                 #  1180  0xb0486  3      OPC=movq_r64_r64         
  movl $0x20, %esi                #  1181  0xb0489  5      OPC=movl_r32_imm32       
  leaq (%r12,%r13,4), %r12        #  1182  0xb048e  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  1183  0xb0492  5      OPC=callq_label          
  movq -0xf0(%rbp), %rax          #  1184  0xb0497  7      OPC=movq_r64_m64         
  movq -0x130(%rbp), %r11         #  1185  0xb049e  7      OPC=movq_r64_m64         
  movq -0x128(%rbp), %rcx         #  1186  0xb04a5  7      OPC=movq_r64_m64         
  movl 0x10(%rax), %edx           #  1187  0xb04ac  3      OPC=movl_r32_m32         
  movl %edx, %r15d                #  1188  0xb04af  3      OPC=movl_r32_r32         
.L_b04a9:                         #        0xb04b2  0      OPC=<label>              
  movslq %ecx, %r13               #  1189  0xb04b2  3      OPC=movslq_r64_r32       
  movl -0xe0(%rbp), %ecx          #  1190  0xb04b5  6      OPC=movl_r32_m32         
  leaq 0xb4992(%rip), %rsi        #  1191  0xb04bb  7      OPC=leaq_r64_m16         
  testl %ecx, %ecx                #  1192  0xb04c2  2      OPC=testl_r32_r32        
  je .L_b1321                     #  1193  0xb04c4  6      OPC=je_label_1           
  cmpl $0xb, %edx                 #  1194  0xb04ca  3      OPC=cmpl_r32_imm8        
  ja .L_b04df                     #  1195  0xb04cd  2      OPC=ja_label             
  leal 0x2004e(%r15), %eax        #  1196  0xb04cf  7      OPC=leal_r32_m16         
  movq -0x108(%rbp), %rsi         #  1197  0xb04d6  7      OPC=movq_r64_m64         
  movzwl %ax, %eax                #  1198  0xb04dd  3      OPC=movzwl_r32_r16       
  addq $0x8, %rax                 #  1199  0xb04e0  4      OPC=addq_r64_imm8        
  movq (%rsi,%rax,8), %rsi        #  1200  0xb04e4  4      OPC=movq_r64_m64         
.L_b04df:                         #        0xb04e8  0      OPC=<label>              
  movq -0xf8(%rbp), %rcx          #  1201  0xb04e8  7      OPC=movq_r64_m64         
  movq %r13, %rdx                 #  1202  0xb04ef  3      OPC=movq_r64_r64         
  movq %r12, %rdi                 #  1203  0xb04f2  3      OPC=movq_r64_r64         
  movq %r11, -0xe0(%rbp)          #  1204  0xb04f5  7      OPC=movq_m64_r64         
  callq .memcpy_uppcase           #  1205  0xb04fc  5      OPC=callq_label          
  movq -0xe0(%rbp), %r11          #  1206  0xb0501  7      OPC=movq_r64_m64         
.L_b04ff:                         #        0xb0508  0      OPC=<label>              
  leaq (%r12,%r13,4), %r12        #  1207  0xb0508  4      OPC=leaq_r64_m16         
  jmpq .L_afb9e                   #  1208  0xb050c  5      OPC=jmpq_label_1         
  testl %edx, %edx                #  1209  0xb0511  2      OPC=testl_r32_r32        
  movl $0x1, %eax                 #  1210  0xb0513  5      OPC=movl_r32_imm32       
  cmovel -0xe0(%rbp), %eax        #  1211  0xb0518  7      OPC=cmovel_r32_m32       
  leaq 0xb492e(%rip), %rdi        #  1212  0xb051f  7      OPC=leaq_r64_m16         
  movl %eax, -0xe0(%rbp)          #  1213  0xb0526  6      OPC=movl_m32_r32         
  movq -0xf0(%rbp), %rax          #  1214  0xb052c  7      OPC=movq_r64_m64         
  movl 0x18(%rax), %r15d          #  1215  0xb0533  4      OPC=movl_r32_m32         
  cmpl $0x6, %r15d                #  1216  0xb0537  4      OPC=cmpl_r32_imm8        
  movl %r15d, %edx                #  1217  0xb053b  3      OPC=movl_r32_r32         
  ja .L_b0550                     #  1218  0xb053e  2      OPC=ja_label             
  leal 0x2003b(%r15), %eax        #  1219  0xb0540  7      OPC=leal_r32_m16         
  movq -0x108(%rbp), %rbx         #  1220  0xb0547  7      OPC=movq_r64_m64         
  movzwl %ax, %eax                #  1221  0xb054e  3      OPC=movzwl_r32_r16       
  addq $0x8, %rax                 #  1222  0xb0551  4      OPC=addq_r64_imm8        
  movq (%rbx,%rax,8), %rdi        #  1223  0xb0555  4      OPC=movq_r64_m64         
.L_b0550:                         #        0xb0559  0      OPC=<label>              
  movq %r11, -0x128(%rbp)         #  1224  0xb0559  7      OPC=movq_m64_r64         
  movl %edx, -0x138(%rbp)         #  1225  0xb0560  6      OPC=movl_m32_r32         
  movl $0x0, %ebx                 #  1226  0xb0566  5      OPC=movl_r32_imm32       
  movl %r10d, -0x130(%rbp)        #  1227  0xb056b  7      OPC=movl_m32_r32         
  callq .wcslen                   #  1228  0xb0572  5      OPC=callq_label          
  subl %eax, %r13d                #  1229  0xb0577  3      OPC=subl_r32_r32         
  movq %rax, %rcx                 #  1230  0xb057a  3      OPC=movq_r64_r64         
  movq -0x128(%rbp), %r11         #  1231  0xb057d  7      OPC=movq_r64_m64         
  cmovnsl %r13d, %ebx             #  1232  0xb0584  4      OPC=cmovnsl_r32_r32      
  addl %eax, %ebx                 #  1233  0xb0588  2      OPC=addl_r32_r32         
  movq -0xd8(%rbp), %rax          #  1234  0xb058a  7      OPC=movq_r64_m64         
  movslq %ebx, %rbx               #  1235  0xb0591  3      OPC=movslq_r64_r32       
  subq %r11, %rax                 #  1236  0xb0594  3      OPC=subq_r64_r64         
  cmpq %rax, %rbx                 #  1237  0xb0597  3      OPC=cmpq_r64_r64         
  jae .L_af480                    #  1238  0xb059a  6      OPC=jae_label_1          
  testq %r12, %r12                #  1239  0xb05a0  3      OPC=testq_r64_r64        
  je .L_afb9e                     #  1240  0xb05a3  6      OPC=je_label_1           
  testl %r13d, %r13d              #  1241  0xb05a9  3      OPC=testl_r32_r32        
  movl -0x138(%rbp), %edx         #  1242  0xb05ac  6      OPC=movl_r32_m32         
  jle .L_b05fc                    #  1243  0xb05b2  2      OPC=jle_label            
  movl -0x130(%rbp), %r10d        #  1244  0xb05b4  7      OPC=movl_r32_m32         
  movslq %r13d, %r13              #  1245  0xb05bb  3      OPC=movslq_r64_r32       
  movq %r11, -0x130(%rbp)         #  1246  0xb05be  7      OPC=movq_m64_r64         
  movq %rcx, -0x128(%rbp)         #  1247  0xb05c5  7      OPC=movq_m64_r64         
  movq %r13, %rdx                 #  1248  0xb05cc  3      OPC=movq_r64_r64         
  cmpl $0x30, %r10d               #  1249  0xb05cf  4      OPC=cmpl_r32_imm8        
  je .L_b155e                     #  1250  0xb05d3  6      OPC=je_label_1           
  movq %r12, %rdi                 #  1251  0xb05d9  3      OPC=movq_r64_r64         
  movl $0x20, %esi                #  1252  0xb05dc  5      OPC=movl_r32_imm32       
  leaq (%r12,%r13,4), %r12        #  1253  0xb05e1  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  1254  0xb05e5  5      OPC=callq_label          
  movq -0xf0(%rbp), %rax          #  1255  0xb05ea  7      OPC=movq_r64_m64         
  movq -0x130(%rbp), %r11         #  1256  0xb05f1  7      OPC=movq_r64_m64         
  movq -0x128(%rbp), %rcx         #  1257  0xb05f8  7      OPC=movq_r64_m64         
  movl 0x18(%rax), %edx           #  1258  0xb05ff  3      OPC=movl_r32_m32         
  movl %edx, %r15d                #  1259  0xb0602  3      OPC=movl_r32_r32         
.L_b05fc:                         #        0xb0605  0      OPC=<label>              
  movl -0xe0(%rbp), %r8d          #  1260  0xb0605  7      OPC=movl_r32_m32         
  movslq %ecx, %r13               #  1261  0xb060c  3      OPC=movslq_r64_r32       
  leaq 0xb483e(%rip), %rsi        #  1262  0xb060f  7      OPC=leaq_r64_m16         
  testl %r8d, %r8d                #  1263  0xb0616  3      OPC=testl_r32_r32        
  je .L_b135d                     #  1264  0xb0619  6      OPC=je_label_1           
  cmpl $0x6, %edx                 #  1265  0xb061f  3      OPC=cmpl_r32_imm8        
  ja .L_b04df                     #  1266  0xb0622  6      OPC=ja_label_1           
  leal 0x2003b(%r15), %eax        #  1267  0xb0628  7      OPC=leal_r32_m16         
  movq -0x108(%rbp), %rdi         #  1268  0xb062f  7      OPC=movq_r64_m64         
  movzwl %ax, %eax                #  1269  0xb0636  3      OPC=movzwl_r32_r16       
  addq $0x8, %rax                 #  1270  0xb0639  4      OPC=addq_r64_imm8        
  movq (%rdi,%rax,8), %rsi        #  1271  0xb063d  4      OPC=movq_r64_m64         
  jmpq .L_b04df                   #  1272  0xb0641  5      OPC=jmpq_label_1         
  xorl %r15d, %r15d               #  1273  0xb0646  3      OPC=xorl_r32_r32         
  movq %r14, %rbx                 #  1274  0xb0649  3      OPC=movq_r64_r64         
.L_b0643:                         #        0xb064c  0      OPC=<label>              
  movq -0xf0(%rbp), %rax          #  1275  0xb064c  7      OPC=movq_r64_m64         
  cmpl $0x2, %r13d                #  1276  0xb0653  4      OPC=cmpl_r32_imm8        
  movl $0x2, %r8d                 #  1277  0xb0657  6      OPC=movl_r32_imm32       
  cmovgel %r13d, %r8d             #  1278  0xb065d  4      OPC=cmovgel_r32_r32      
  cmpl $0x4f, %r15d               #  1279  0xb0661  4      OPC=cmpl_r32_imm8        
  sete %sil                       #  1280  0xb0665  4      OPC=sete_r8              
  movl 0x10(%rax), %eax           #  1281  0xb0669  3      OPC=movl_r32_m32         
  movl %eax, -0x128(%rbp)         #  1282  0xb066c  6      OPC=movl_m32_r32         
  leal 0x1(%rax), %ecx            #  1283  0xb0672  3      OPC=leal_r32_m16         
  jmpq .L_affa0                   #  1284  0xb0675  5      OPC=jmpq_label_1         
  testl %edx, %edx                #  1285  0xb067a  2      OPC=testl_r32_r32        
  movl $0x1, %eax                 #  1286  0xb067c  5      OPC=movl_r32_imm32       
  cmovel -0xe0(%rbp), %eax        #  1287  0xb0681  7      OPC=cmovel_r32_m32       
  movq %r14, %rbx                 #  1288  0xb0688  3      OPC=movq_r64_r64         
  movl %eax, -0xe0(%rbp)          #  1289  0xb068b  6      OPC=movl_m32_r32         
.L_b0688:                         #        0xb0691  0      OPC=<label>              
  movq -0xf0(%rbp), %rax          #  1290  0xb0691  7      OPC=movq_r64_m64         
  leaq 0xb47b5(%rip), %rdi        #  1291  0xb0698  7      OPC=leaq_r64_m16         
  movl 0x10(%rax), %r15d          #  1292  0xb069f  4      OPC=movl_r32_m32         
  cmpl $0xb, %r15d                #  1293  0xb06a3  4      OPC=cmpl_r32_imm8        
  movl %r15d, %edx                #  1294  0xb06a7  3      OPC=movl_r32_r32         
  ja .L_b06bc                     #  1295  0xb06aa  2      OPC=ja_label             
  leal 0x20042(%r15), %eax        #  1296  0xb06ac  7      OPC=leal_r32_m16         
  movq -0x108(%rbp), %rdi         #  1297  0xb06b3  7      OPC=movq_r64_m64         
  movzwl %ax, %eax                #  1298  0xb06ba  3      OPC=movzwl_r32_r16       
  addq $0x8, %rax                 #  1299  0xb06bd  4      OPC=addq_r64_imm8        
  movq (%rdi,%rax,8), %rdi        #  1300  0xb06c1  4      OPC=movq_r64_m64         
.L_b06bc:                         #        0xb06c5  0      OPC=<label>              
  movq %r11, -0x128(%rbp)         #  1301  0xb06c5  7      OPC=movq_m64_r64         
  movl %edx, -0x138(%rbp)         #  1302  0xb06cc  6      OPC=movl_m32_r32         
  movl $0x0, %r14d                #  1303  0xb06d2  6      OPC=movl_r32_imm32       
  movl %r10d, -0x130(%rbp)        #  1304  0xb06d8  7      OPC=movl_m32_r32         
  callq .wcslen                   #  1305  0xb06df  5      OPC=callq_label          
  subl %eax, %r13d                #  1306  0xb06e4  3      OPC=subl_r32_r32         
  movq %rax, %r8                  #  1307  0xb06e7  3      OPC=movq_r64_r64         
  movq -0x128(%rbp), %r11         #  1308  0xb06ea  7      OPC=movq_r64_m64         
  cmovnsl %r13d, %r14d            #  1309  0xb06f1  4      OPC=cmovnsl_r32_r32      
  addl %eax, %r14d                #  1310  0xb06f5  3      OPC=addl_r32_r32         
  movq -0xd8(%rbp), %rax          #  1311  0xb06f8  7      OPC=movq_r64_m64         
  movslq %r14d, %r14              #  1312  0xb06ff  3      OPC=movslq_r64_r32       
  subq %r11, %rax                 #  1313  0xb0702  3      OPC=subq_r64_r64         
  cmpq %rax, %r14                 #  1314  0xb0705  3      OPC=cmpq_r64_r64         
  jae .L_af480                    #  1315  0xb0708  6      OPC=jae_label_1          
  testq %r12, %r12                #  1316  0xb070e  3      OPC=testq_r64_r64        
  je .L_af5b2                     #  1317  0xb0711  6      OPC=je_label_1           
  testl %r13d, %r13d              #  1318  0xb0717  3      OPC=testl_r32_r32        
  movl %r15d, %ecx                #  1319  0xb071a  3      OPC=movl_r32_r32         
  movl -0x138(%rbp), %edx         #  1320  0xb071d  6      OPC=movl_r32_m32         
  jle .L_b076c                    #  1321  0xb0723  2      OPC=jle_label            
  movl -0x130(%rbp), %r10d        #  1322  0xb0725  7      OPC=movl_r32_m32         
  movslq %r13d, %r13              #  1323  0xb072c  3      OPC=movslq_r64_r32       
  movq %r11, -0x130(%rbp)         #  1324  0xb072f  7      OPC=movq_m64_r64         
  movq %r8, -0x128(%rbp)          #  1325  0xb0736  7      OPC=movq_m64_r64         
  movq %r13, %rdx                 #  1326  0xb073d  3      OPC=movq_r64_r64         
  cmpl $0x30, %r10d               #  1327  0xb0740  4      OPC=cmpl_r32_imm8        
  je .L_b14fd                     #  1328  0xb0744  6      OPC=je_label_1           
  movq %r12, %rdi                 #  1329  0xb074a  3      OPC=movq_r64_r64         
  movl $0x20, %esi                #  1330  0xb074d  5      OPC=movl_r32_imm32       
  leaq (%r12,%r13,4), %r12        #  1331  0xb0752  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  1332  0xb0756  5      OPC=callq_label          
  movq -0xf0(%rbp), %rax          #  1333  0xb075b  7      OPC=movq_r64_m64         
  movq -0x130(%rbp), %r11         #  1334  0xb0762  7      OPC=movq_r64_m64         
  movq -0x128(%rbp), %r8          #  1335  0xb0769  7      OPC=movq_r64_m64         
  movl 0x10(%rax), %edx           #  1336  0xb0770  3      OPC=movl_r32_m32         
  movl %edx, %ecx                 #  1337  0xb0773  2      OPC=movl_r32_r32         
.L_b076c:                         #        0xb0775  0      OPC=<label>              
  movl -0xe0(%rbp), %edi          #  1338  0xb0775  6      OPC=movl_r32_m32         
  movslq %r8d, %r13               #  1339  0xb077b  3      OPC=movslq_r64_r32       
  leaq 0xb46cf(%rip), %rsi        #  1340  0xb077e  7      OPC=leaq_r64_m16         
  testl %edi, %edi                #  1341  0xb0785  2      OPC=testl_r32_r32        
  je .L_b139d                     #  1342  0xb0787  6      OPC=je_label_1           
  cmpl $0xb, %edx                 #  1343  0xb078d  3      OPC=cmpl_r32_imm8        
  ja .L_b07a1                     #  1344  0xb0790  2      OPC=ja_label             
  leal 0x20042(%rcx), %eax        #  1345  0xb0792  6      OPC=leal_r32_m16         
  movq -0x108(%rbp), %rsi         #  1346  0xb0798  7      OPC=movq_r64_m64         
  movzwl %ax, %eax                #  1347  0xb079f  3      OPC=movzwl_r32_r16       
  addq $0x8, %rax                 #  1348  0xb07a2  4      OPC=addq_r64_imm8        
  movq (%rsi,%rax,8), %rsi        #  1349  0xb07a6  4      OPC=movq_r64_m64         
.L_b07a1:                         #        0xb07aa  0      OPC=<label>              
  movq %r11, -0xe0(%rbp)          #  1350  0xb07aa  7      OPC=movq_m64_r64         
.L_b07a8:                         #        0xb07b1  0      OPC=<label>              
  movq -0xf8(%rbp), %rcx          #  1351  0xb07b1  7      OPC=movq_r64_m64         
  movq %r13, %rdx                 #  1352  0xb07b8  3      OPC=movq_r64_r64         
  movq %r12, %rdi                 #  1353  0xb07bb  3      OPC=movq_r64_r64         
  callq .memcpy_uppcase           #  1354  0xb07be  5      OPC=callq_label          
  movq -0xe0(%rbp), %r11          #  1355  0xb07c3  7      OPC=movq_r64_m64         
  jmpq .L_af910                   #  1356  0xb07ca  5      OPC=jmpq_label_1         
  testl %edx, %edx                #  1357  0xb07cf  2      OPC=testl_r32_r32        
  movl $0x1, %eax                 #  1358  0xb07d1  5      OPC=movl_r32_imm32       
  cmovel -0xe0(%rbp), %eax        #  1359  0xb07d6  7      OPC=cmovel_r32_m32       
  leaq 0xb4670(%rip), %rdi        #  1360  0xb07dd  7      OPC=leaq_r64_m16         
  movl %eax, -0xe0(%rbp)          #  1361  0xb07e4  6      OPC=movl_m32_r32         
  movq -0xf0(%rbp), %rax          #  1362  0xb07ea  7      OPC=movq_r64_m64         
  movl 0x18(%rax), %r15d          #  1363  0xb07f1  4      OPC=movl_r32_m32         
  cmpl $0x6, %r15d                #  1364  0xb07f5  4      OPC=cmpl_r32_imm8        
  movl %r15d, %edx                #  1365  0xb07f9  3      OPC=movl_r32_r32         
  ja .L_b080e                     #  1366  0xb07fc  2      OPC=ja_label             
  leal 0x20034(%r15), %eax        #  1367  0xb07fe  7      OPC=leal_r32_m16         
  movq -0x108(%rbp), %rbx         #  1368  0xb0805  7      OPC=movq_r64_m64         
  movzwl %ax, %eax                #  1369  0xb080c  3      OPC=movzwl_r32_r16       
  addq $0x8, %rax                 #  1370  0xb080f  4      OPC=addq_r64_imm8        
  movq (%rbx,%rax,8), %rdi        #  1371  0xb0813  4      OPC=movq_r64_m64         
.L_b080e:                         #        0xb0817  0      OPC=<label>              
  movq %r11, -0x128(%rbp)         #  1372  0xb0817  7      OPC=movq_m64_r64         
  movl %edx, -0x138(%rbp)         #  1373  0xb081e  6      OPC=movl_m32_r32         
  movl $0x0, %ebx                 #  1374  0xb0824  5      OPC=movl_r32_imm32       
  movl %r10d, -0x130(%rbp)        #  1375  0xb0829  7      OPC=movl_m32_r32         
  callq .wcslen                   #  1376  0xb0830  5      OPC=callq_label          
  subl %eax, %r13d                #  1377  0xb0835  3      OPC=subl_r32_r32         
  movq %rax, %rcx                 #  1378  0xb0838  3      OPC=movq_r64_r64         
  movq -0x128(%rbp), %r11         #  1379  0xb083b  7      OPC=movq_r64_m64         
  cmovnsl %r13d, %ebx             #  1380  0xb0842  4      OPC=cmovnsl_r32_r32      
  addl %eax, %ebx                 #  1381  0xb0846  2      OPC=addl_r32_r32         
  movq -0xd8(%rbp), %rax          #  1382  0xb0848  7      OPC=movq_r64_m64         
  movslq %ebx, %rbx               #  1383  0xb084f  3      OPC=movslq_r64_r32       
  subq %r11, %rax                 #  1384  0xb0852  3      OPC=subq_r64_r64         
  cmpq %rax, %rbx                 #  1385  0xb0855  3      OPC=cmpq_r64_r64         
  jae .L_af480                    #  1386  0xb0858  6      OPC=jae_label_1          
  testq %r12, %r12                #  1387  0xb085e  3      OPC=testq_r64_r64        
  je .L_afb9e                     #  1388  0xb0861  6      OPC=je_label_1           
  testl %r13d, %r13d              #  1389  0xb0867  3      OPC=testl_r32_r32        
  movl -0x138(%rbp), %edx         #  1390  0xb086a  6      OPC=movl_r32_m32         
  jle .L_b08ba                    #  1391  0xb0870  2      OPC=jle_label            
  movl -0x130(%rbp), %r10d        #  1392  0xb0872  7      OPC=movl_r32_m32         
  movslq %r13d, %r13              #  1393  0xb0879  3      OPC=movslq_r64_r32       
  movq %r11, -0x130(%rbp)         #  1394  0xb087c  7      OPC=movq_m64_r64         
  movq %rcx, -0x128(%rbp)         #  1395  0xb0883  7      OPC=movq_m64_r64         
  movq %r13, %rdx                 #  1396  0xb088a  3      OPC=movq_r64_r64         
  cmpl $0x30, %r10d               #  1397  0xb088d  4      OPC=cmpl_r32_imm8        
  je .L_b158f                     #  1398  0xb0891  6      OPC=je_label_1           
  movq %r12, %rdi                 #  1399  0xb0897  3      OPC=movq_r64_r64         
  movl $0x20, %esi                #  1400  0xb089a  5      OPC=movl_r32_imm32       
  leaq (%r12,%r13,4), %r12        #  1401  0xb089f  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  1402  0xb08a3  5      OPC=callq_label          
  movq -0xf0(%rbp), %rax          #  1403  0xb08a8  7      OPC=movq_r64_m64         
  movq -0x130(%rbp), %r11         #  1404  0xb08af  7      OPC=movq_r64_m64         
  movq -0x128(%rbp), %rcx         #  1405  0xb08b6  7      OPC=movq_r64_m64         
  movl 0x18(%rax), %edx           #  1406  0xb08bd  3      OPC=movl_r32_m32         
  movl %edx, %r15d                #  1407  0xb08c0  3      OPC=movl_r32_r32         
.L_b08ba:                         #        0xb08c3  0      OPC=<label>              
  movl -0xe0(%rbp), %r9d          #  1408  0xb08c3  7      OPC=movl_r32_m32         
  movslq %ecx, %r13               #  1409  0xb08ca  3      OPC=movslq_r64_r32       
  leaq 0xb4580(%rip), %rsi        #  1410  0xb08cd  7      OPC=leaq_r64_m16         
  testl %r9d, %r9d                #  1411  0xb08d4  3      OPC=testl_r32_r32        
  je .L_b137d                     #  1412  0xb08d7  6      OPC=je_label_1           
  cmpl $0x6, %edx                 #  1413  0xb08dd  3      OPC=cmpl_r32_imm8        
  ja .L_b04df                     #  1414  0xb08e0  6      OPC=ja_label_1           
  leal 0x20034(%r15), %eax        #  1415  0xb08e6  7      OPC=leal_r32_m16         
  movq -0x108(%rbp), %rdi         #  1416  0xb08ed  7      OPC=movq_r64_m64         
  movzwl %ax, %eax                #  1417  0xb08f4  3      OPC=movzwl_r32_r16       
  addq $0x8, %rax                 #  1418  0xb08f7  4      OPC=addq_r64_imm8        
  movq (%rdi,%rax,8), %rsi        #  1419  0xb08fb  4      OPC=movq_r64_m64         
  jmpq .L_b04df                   #  1420  0xb08ff  5      OPC=jmpq_label_1         
  xorl %r15d, %r15d               #  1421  0xb0904  3      OPC=xorl_r32_r32         
  movq %r14, %rbx                 #  1422  0xb0907  3      OPC=movq_r64_r64         
.L_b0901:                         #        0xb090a  0      OPC=<label>              
  movq -0xf0(%rbp), %rax          #  1423  0xb090a  7      OPC=movq_r64_m64         
  cmpl $0x3, %r13d                #  1424  0xb0911  4      OPC=cmpl_r32_imm8        
  movl $0x3, %r8d                 #  1425  0xb0915  6      OPC=movl_r32_imm32       
  cmovgel %r13d, %r8d             #  1426  0xb091b  4      OPC=cmovgel_r32_r32      
  cmpl $0x4f, %r15d               #  1427  0xb091f  4      OPC=cmpl_r32_imm8        
  sete %sil                       #  1428  0xb0923  4      OPC=sete_r8              
  movl 0x1c(%rax), %eax           #  1429  0xb0927  3      OPC=movl_r32_m32         
  movl %eax, -0x128(%rbp)         #  1430  0xb092a  6      OPC=movl_m32_r32         
  leal 0x1(%rax), %ecx            #  1431  0xb0930  3      OPC=leal_r32_m16         
  jmpq .L_affa0                   #  1432  0xb0933  5      OPC=jmpq_label_1         
  xorl %r15d, %r15d               #  1433  0xb0938  3      OPC=xorl_r32_r32         
  movq %r14, %rbx                 #  1434  0xb093b  3      OPC=movq_r64_r64         
.L_b0935:                         #        0xb093e  0      OPC=<label>              
  movq -0xf0(%rbp), %rax          #  1435  0xb093e  7      OPC=movq_r64_m64         
  cmpl $0x2, %r13d                #  1436  0xb0945  4      OPC=cmpl_r32_imm8        
  movl $0x2, %r8d                 #  1437  0xb0949  6      OPC=movl_r32_imm32       
  cmovgel %r13d, %r8d             #  1438  0xb094f  4      OPC=cmovgel_r32_r32      
  cmpl $0x4f, %r15d               #  1439  0xb0953  4      OPC=cmpl_r32_imm8        
  sete %sil                       #  1440  0xb0957  4      OPC=sete_r8              
  movl 0xc(%rax), %ecx            #  1441  0xb095b  3      OPC=movl_r32_m32         
  jmpq .L_affa0                   #  1442  0xb095e  5      OPC=jmpq_label_1         
  movq %r14, %rbx                 #  1443  0xb0963  3      OPC=movq_r64_r64         
.L_b095d:                         #        0xb0966  0      OPC=<label>              
  movq -0x108(%rbp), %rax         #  1444  0xb0966  7      OPC=movq_r64_m64         
  movq 0x320(%rax), %r15          #  1445  0xb096d  7      OPC=movq_r64_m64         
  jmpq .L_af650                   #  1446  0xb0974  5      OPC=jmpq_label_1         
  xorl %r15d, %r15d               #  1447  0xb0979  3      OPC=xorl_r32_r32         
  movq %r14, %rbx                 #  1448  0xb097c  3      OPC=movq_r64_r64         
.L_b0976:                         #        0xb097f  0      OPC=<label>              
  movq -0xf0(%rbp), %rax          #  1449  0xb097f  7      OPC=movq_r64_m64         
  cmpl $0x2, %r13d                #  1450  0xb0986  4      OPC=cmpl_r32_imm8        
  movl $0x51eb851f, %ecx          #  1451  0xb098a  5      OPC=movl_r32_imm32       
  movl $0x2, %r8d                 #  1452  0xb098f  6      OPC=movl_r32_imm32       
  cmovgel %r13d, %r8d             #  1453  0xb0995  4      OPC=cmovgel_r32_r32      
  movl 0x14(%rax), %esi           #  1454  0xb0999  3      OPC=movl_r32_m32         
  movl %esi, %eax                 #  1455  0xb099c  2      OPC=movl_r32_r32         
  imull %ecx                      #  1456  0xb099e  2      OPC=imull_r32            
  movl %esi, %eax                 #  1457  0xb09a0  2      OPC=movl_r32_r32         
  sarl $0x1f, %eax                #  1458  0xb09a2  3      OPC=sarl_r32_imm8        
  sarl $0x5, %edx                 #  1459  0xb09a5  3      OPC=sarl_r32_imm8        
  subl %eax, %edx                 #  1460  0xb09a8  2      OPC=subl_r32_r32         
  imull $0x64, %edx, %eax         #  1461  0xb09aa  3      OPC=imull_r32_r32_imm8   
  subl %eax, %esi                 #  1462  0xb09ad  2      OPC=subl_r32_r32         
  addl $0x64, %esi                #  1463  0xb09af  3      OPC=addl_r32_imm8        
  movl %esi, %eax                 #  1464  0xb09b2  2      OPC=movl_r32_r32         
  imull %ecx                      #  1465  0xb09b4  2      OPC=imull_r32            
  movl %esi, %eax                 #  1466  0xb09b6  2      OPC=movl_r32_r32         
  sarl $0x1f, %eax                #  1467  0xb09b8  3      OPC=sarl_r32_imm8        
  sarl $0x5, %edx                 #  1468  0xb09bb  3      OPC=sarl_r32_imm8        
  movl %edx, %ecx                 #  1469  0xb09be  2      OPC=movl_r32_r32         
  subl %eax, %ecx                 #  1470  0xb09c0  2      OPC=subl_r32_r32         
  imull $0x64, %ecx, %ecx         #  1471  0xb09c2  3      OPC=imull_r32_r32_imm8   
  subl %ecx, %esi                 #  1472  0xb09c5  2      OPC=subl_r32_r32         
  cmpl $0x4f, %r15d               #  1473  0xb09c7  4      OPC=cmpl_r32_imm8        
  movl %esi, %ecx                 #  1474  0xb09cb  2      OPC=movl_r32_r32         
  sete %sil                       #  1475  0xb09cd  4      OPC=sete_r8              
  jmpq .L_affa0                   #  1476  0xb09d1  5      OPC=jmpq_label_1         
  movq %r14, %rbx                 #  1477  0xb09d6  3      OPC=movq_r64_r64         
.L_b09d0:                         #        0xb09d9  0      OPC=<label>              
  movq -0x108(%rbp), %rax         #  1478  0xb09d9  7      OPC=movq_r64_m64         
  movq 0x328(%rax), %r15          #  1479  0xb09e0  7      OPC=movq_r64_m64         
  jmpq .L_af650                   #  1480  0xb09e7  5      OPC=jmpq_label_1         
  xorl %r15d, %r15d               #  1481  0xb09ec  3      OPC=xorl_r32_r32         
  movq %r14, %rbx                 #  1482  0xb09ef  3      OPC=movq_r64_r64         
.L_b09e9:                         #        0xb09f2  0      OPC=<label>              
  movq -0xf0(%rbp), %rax          #  1483  0xb09f2  7      OPC=movq_r64_m64         
  testl %r13d, %r13d              #  1484  0xb09f9  3      OPC=testl_r32_r32        
  movl $0x1, %r8d                 #  1485  0xb09fc  6      OPC=movl_r32_imm32       
  cmovgl %r13d, %r8d              #  1486  0xb0a02  4      OPC=cmovgl_r32_r32       
  cmpl $0x4f, %r15d               #  1487  0xb0a06  4      OPC=cmpl_r32_imm8        
  sete %sil                       #  1488  0xb0a0a  4      OPC=sete_r8              
  movl 0x18(%rax), %ecx           #  1489  0xb0a0e  3      OPC=movl_r32_m32         
  jmpq .L_affa0                   #  1490  0xb0a11  5      OPC=jmpq_label_1         
  xorl %esi, %esi                 #  1491  0xb0a16  2      OPC=xorl_r32_r32         
.L_b0a0f:                         #        0xb0a18  0      OPC=<label>              
  movq -0xf0(%rbp), %rax          #  1492  0xb0a18  7      OPC=movq_r64_m64         
  testl %r13d, %r13d              #  1493  0xb0a1f  3      OPC=testl_r32_r32        
  movl $0x1, %r8d                 #  1494  0xb0a22  6      OPC=movl_r32_imm32       
  movl $0x92492493, %edx          #  1495  0xb0a28  6      OPC=movl_r32_imm32_1     
  cmovgl %r13d, %r8d              #  1496  0xb0a2e  4      OPC=cmovgl_r32_r32       
  movq %r14, %rbx                 #  1497  0xb0a32  3      OPC=movq_r64_r64         
  movl 0x18(%rax), %eax           #  1498  0xb0a35  3      OPC=movl_r32_m32         
  leal 0x6(%rax), %ecx            #  1499  0xb0a38  3      OPC=leal_r32_m16         
  movl %eax, -0x128(%rbp)         #  1500  0xb0a3b  6      OPC=movl_m32_r32         
  movl %ecx, %eax                 #  1501  0xb0a41  2      OPC=movl_r32_r32         
  imull %edx                      #  1502  0xb0a43  2      OPC=imull_r32            
  movl %ecx, %eax                 #  1503  0xb0a45  2      OPC=movl_r32_r32         
  sarl $0x1f, %eax                #  1504  0xb0a47  3      OPC=sarl_r32_imm8        
  addl %ecx, %edx                 #  1505  0xb0a4a  2      OPC=addl_r32_r32         
  sarl $0x2, %edx                 #  1506  0xb0a4c  3      OPC=sarl_r32_imm8        
  subl %eax, %edx                 #  1507  0xb0a4f  2      OPC=subl_r32_r32         
  leal (,%rdx,8), %eax            #  1508  0xb0a51  7      OPC=leal_r32_m16         
  subl %edx, %eax                 #  1509  0xb0a58  2      OPC=subl_r32_r32         
  subl %eax, %ecx                 #  1510  0xb0a5a  2      OPC=subl_r32_r32         
  addl $0x1, %ecx                 #  1511  0xb0a5c  3      OPC=addl_r32_imm8        
  jmpq .L_affa0                   #  1512  0xb0a5f  5      OPC=jmpq_label_1         
  movq %rbx, %r14                 #  1513  0xb0a64  3      OPC=movq_r64_r64         
  jmpq .L_afe97                   #  1514  0xb0a67  5      OPC=jmpq_label_1         
  subl $0x1, %r13d                #  1515  0xb0a6c  4      OPC=subl_r32_imm8        
  movl $0x0, %ebx                 #  1516  0xb0a70  5      OPC=movl_r32_imm32       
  movq -0xd8(%rbp), %rax          #  1517  0xb0a75  7      OPC=movq_r64_m64         
  cmovnsl %r13d, %ebx             #  1518  0xb0a7c  4      OPC=cmovnsl_r32_r32      
  addl $0x1, %ebx                 #  1519  0xb0a80  3      OPC=addl_r32_imm8        
  movslq %ebx, %rbx               #  1520  0xb0a83  3      OPC=movslq_r64_r32       
  subq %r11, %rax                 #  1521  0xb0a86  3      OPC=subq_r64_r64         
  cmpq %rax, %rbx                 #  1522  0xb0a89  3      OPC=cmpq_r64_r64         
  jae .L_af480                    #  1523  0xb0a8c  6      OPC=jae_label_1          
  testq %r12, %r12                #  1524  0xb0a92  3      OPC=testq_r64_r64        
  je .L_afb9e                     #  1525  0xb0a95  6      OPC=je_label_1           
  testl %r13d, %r13d              #  1526  0xb0a9b  3      OPC=testl_r32_r32        
  movl $0x25, %eax                #  1527  0xb0a9e  5      OPC=movl_r32_imm32       
  jle .L_b0ace                    #  1528  0xb0aa3  2      OPC=jle_label            
  movslq %r13d, %r13              #  1529  0xb0aa5  3      OPC=movslq_r64_r32       
  cmpl $0x30, %r10d               #  1530  0xb0aa8  4      OPC=cmpl_r32_imm8        
  movq %r11, -0xe0(%rbp)          #  1531  0xb0aac  7      OPC=movq_m64_r64         
  movq %r13, %rdx                 #  1532  0xb0ab3  3      OPC=movq_r64_r64         
  movl $0x30, %esi                #  1533  0xb0ab6  5      OPC=movl_r32_imm32       
  je .L_b0ab8                     #  1534  0xb0abb  2      OPC=je_label             
  movl $0x20, %esi                #  1535  0xb0abd  5      OPC=movl_r32_imm32       
.L_b0ab8:                         #        0xb0ac2  0      OPC=<label>              
  movq %r12, %rdi                 #  1536  0xb0ac2  3      OPC=movq_r64_r64         
  leaq (%r12,%r13,4), %r12        #  1537  0xb0ac5  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  1538  0xb0ac9  5      OPC=callq_label          
  movl (%r14), %eax               #  1539  0xb0ace  3      OPC=movl_r32_m32         
  movq -0xe0(%rbp), %r11          #  1540  0xb0ad1  7      OPC=movq_r64_m64         
.L_b0ace:                         #        0xb0ad8  0      OPC=<label>              
  movl %eax, (%r12)               #  1541  0xb0ad8  4      OPC=movl_m32_r32         
  addq $0x4, %r12                 #  1542  0xb0adc  4      OPC=addq_r64_imm8        
  jmpq .L_afb9e                   #  1543  0xb0ae0  5      OPC=jmpq_label_1         
  cmpl $0x4f, %r15d               #  1544  0xb0ae5  4      OPC=cmpl_r32_imm8        
  movq %rbx, %r14                 #  1545  0xb0ae9  3      OPC=movq_r64_r64         
  sete %sil                       #  1546  0xb0aec  4      OPC=sete_r8              
  jmpq .L_b0a0f                   #  1547  0xb0af0  5      OPC=jmpq_label_1         
  xorl %r15d, %r15d               #  1548  0xb0af5  3      OPC=xorl_r32_r32         
  movq %r14, %rbx                 #  1549  0xb0af8  3      OPC=movq_r64_r64         
.L_b0af1:                         #        0xb0afb  0      OPC=<label>              
  movq -0xf0(%rbp), %rax          #  1550  0xb0afb  7      OPC=movq_r64_m64         
  cmpl $0x2, %r13d                #  1551  0xb0b02  4      OPC=cmpl_r32_imm8        
  movl $0x2, %r8d                 #  1552  0xb0b06  6      OPC=movl_r32_imm32       
  cmovgel %r13d, %r8d             #  1553  0xb0b0c  4      OPC=cmovgel_r32_r32      
  movl 0xc(%rax), %ecx            #  1554  0xb0b10  3      OPC=movl_r32_m32         
  jmpq .L_b00e5                   #  1555  0xb0b13  5      OPC=jmpq_label_1         
  cmpl $0x45, %r15d               #  1556  0xb0b18  4      OPC=cmpl_r32_imm8        
  je .L_af4f0                     #  1557  0xb0b1c  6      OPC=je_label_1           
  jmpq .L_b00a7                   #  1558  0xb0b22  5      OPC=jmpq_label_1         
  cmpl $0x45, %r15d               #  1559  0xb0b27  4      OPC=cmpl_r32_imm8        
  je .L_af4f0                     #  1560  0xb0b2b  6      OPC=je_label_1           
  jmpq .L_b0074                   #  1561  0xb0b31  5      OPC=jmpq_label_1         
  cmpl $0x45, %r15d               #  1562  0xb0b36  4      OPC=cmpl_r32_imm8        
  je .L_af4f0                     #  1563  0xb0b3a  6      OPC=je_label_1           
  jmpq .L_b019f                   #  1564  0xb0b40  5      OPC=jmpq_label_1         
  cmpl $0x45, %r15d               #  1565  0xb0b45  4      OPC=cmpl_r32_imm8        
  je .L_af4f0                     #  1566  0xb0b49  6      OPC=je_label_1           
  jmpq .L_b01c6                   #  1567  0xb0b4f  5      OPC=jmpq_label_1         
  cmpl $0x45, %r15d               #  1568  0xb0b54  4      OPC=cmpl_r32_imm8        
  je .L_af4f0                     #  1569  0xb0b58  6      OPC=je_label_1           
  jmpq .L_b0112                   #  1570  0xb0b5e  5      OPC=jmpq_label_1         
  cmpl $0x45, %r15d               #  1571  0xb0b63  4      OPC=cmpl_r32_imm8        
  je .L_af4f0                     #  1572  0xb0b67  6      OPC=je_label_1           
  jmpq .L_b0901                   #  1573  0xb0b6d  5      OPC=jmpq_label_1         
  cmpl $0x4f, %r15d               #  1574  0xb0b72  4      OPC=cmpl_r32_imm8        
  je .L_af4f0                     #  1575  0xb0b76  6      OPC=je_label_1           
  cmpl $0x45, %r15d               #  1576  0xb0b7c  4      OPC=cmpl_r32_imm8        
  jne .L_b095d                    #  1577  0xb0b80  6      OPC=jne_label_1          
  movq -0x108(%rbp), %rax         #  1578  0xb0b86  7      OPC=movq_r64_m64         
  movq 0x358(%rax), %r15          #  1579  0xb0b8d  7      OPC=movq_r64_m64         
  movl (%r15), %eax               #  1580  0xb0b94  3      OPC=movl_r32_m32         
  testl %eax, %eax                #  1581  0xb0b97  2      OPC=testl_r32_r32        
  jne .L_af650                    #  1582  0xb0b99  6      OPC=jne_label_1          
  jmpq .L_b095d                   #  1583  0xb0b9f  5      OPC=jmpq_label_1         
  cmpl $0x45, %r15d               #  1584  0xb0ba4  4      OPC=cmpl_r32_imm8        
  je .L_af4f0                     #  1585  0xb0ba8  6      OPC=je_label_1           
  movl %r15d, -0x128(%rbp)        #  1586  0xb0bae  7      OPC=movl_m32_r32         
  movl %ecx, %r15d                #  1587  0xb0bb5  3      OPC=movl_r32_r32         
  jmpq .L_b01f8                   #  1588  0xb0bb8  5      OPC=jmpq_label_1         
  cmpl $0x45, %r15d               #  1589  0xb0bbd  4      OPC=cmpl_r32_imm8        
  je .L_b143f                     #  1590  0xb0bc1  6      OPC=je_label_1           
  cmpl $0x4f, %r15d               #  1591  0xb0bc7  4      OPC=cmpl_r32_imm8        
  jne .L_afff9                    #  1592  0xb0bcb  6      OPC=jne_label_1          
  jmpq .L_af4f0                   #  1593  0xb0bd1  5      OPC=jmpq_label_1         
  cmpl $0x4f, %r15d               #  1594  0xb0bd6  4      OPC=cmpl_r32_imm8        
  je .L_af4f0                     #  1595  0xb0bda  6      OPC=je_label_1           
  cmpl $0x45, %r15d               #  1596  0xb0be0  4      OPC=cmpl_r32_imm8        
  jne .L_b012f                    #  1597  0xb0be4  6      OPC=jne_label_1          
  movq -0x108(%rbp), %rax         #  1598  0xb0bea  7      OPC=movq_r64_m64         
  movq 0x360(%rax), %r15          #  1599  0xb0bf1  7      OPC=movq_r64_m64         
  movl (%r15), %r9d               #  1600  0xb0bf8  3      OPC=movl_r32_m32         
  testl %r9d, %r9d                #  1601  0xb0bfb  3      OPC=testl_r32_r32        
  jne .L_af650                    #  1602  0xb0bfe  6      OPC=jne_label_1          
  jmpq .L_b012f                   #  1603  0xb0c04  5      OPC=jmpq_label_1         
  cmpl $0x45, %r15d               #  1604  0xb0c09  4      OPC=cmpl_r32_imm8        
  je .L_af4f0                     #  1605  0xb0c0d  6      OPC=je_label_1           
  jmpq .L_b0148                   #  1606  0xb0c13  5      OPC=jmpq_label_1         
  cmpl $0x45, %r15d               #  1607  0xb0c18  4      OPC=cmpl_r32_imm8        
  je .L_af4f0                     #  1608  0xb0c1c  6      OPC=je_label_1           
  jmpq .L_b002f                   #  1609  0xb0c22  5      OPC=jmpq_label_1         
  cmpl $0x45, %r15d               #  1610  0xb0c27  4      OPC=cmpl_r32_imm8        
  je .L_af4f0                     #  1611  0xb0c2b  6      OPC=je_label_1           
  jmpq .L_b0af1                   #  1612  0xb0c31  5      OPC=jmpq_label_1         
  cmpl $0x45, %r15d               #  1613  0xb0c36  4      OPC=cmpl_r32_imm8        
  je .L_af4f0                     #  1614  0xb0c3a  6      OPC=je_label_1           
  jmpq .L_b0935                   #  1615  0xb0c40  5      OPC=jmpq_label_1         
  cmpl $0x45, %r15d               #  1616  0xb0c45  4      OPC=cmpl_r32_imm8        
  je .L_af4f0                     #  1617  0xb0c49  6      OPC=je_label_1           
  jmpq .L_b0643                   #  1618  0xb0c4f  5      OPC=jmpq_label_1         
  cmpl $0x45, %r15d               #  1619  0xb0c54  4      OPC=cmpl_r32_imm8        
  je .L_af4f0                     #  1620  0xb0c58  6      OPC=je_label_1           
  jmpq .L_b00d1                   #  1621  0xb0c5e  5      OPC=jmpq_label_1         
  cmpl $0x45, %r15d               #  1622  0xb0c63  4      OPC=cmpl_r32_imm8        
  je .L_af4f0                     #  1623  0xb0c67  6      OPC=je_label_1           
  jmpq .L_b09e9                   #  1624  0xb0c6d  5      OPC=jmpq_label_1         
  cmpl $0x45, %r15d               #  1625  0xb0c72  4      OPC=cmpl_r32_imm8        
  jne .L_b0366                    #  1626  0xb0c76  6      OPC=jne_label_1          
  movq -0x108(%rbp), %rsi         #  1627  0xb0c7c  7      OPC=movq_r64_m64         
  movq -0xf0(%rbp), %rdi          #  1628  0xb0c83  7      OPC=movq_r64_m64         
  movq %r11, -0x130(%rbp)         #  1629  0xb0c8a  7      OPC=movq_m64_r64         
  movl %r10d, -0x128(%rbp)        #  1630  0xb0c91  7      OPC=movl_m32_r32         
  callq ._nl_get_era_entry        #  1631  0xb0c98  5      OPC=callq_label          
  testq %rax, %rax                #  1632  0xb0c9d  3      OPC=testq_r64_r64        
  movq %rax, %r14                 #  1633  0xb0ca0  3      OPC=movq_r64_r64         
  movl -0x128(%rbp), %r10d        #  1634  0xb0ca3  7      OPC=movl_r32_m32         
  movq -0x130(%rbp), %r11         #  1635  0xb0caa  7      OPC=movq_r64_m64         
  je .L_b0366                     #  1636  0xb0cb1  6      OPC=je_label_1           
  movq 0x30(%rax), %rsi           #  1637  0xb0cb7  4      OPC=movq_r64_m64         
  movq %r11, -0x138(%rbp)         #  1638  0xb0cbb  7      OPC=movq_m64_r64         
  movb $0x0, %r15b                #  1639  0xb0cc2  3      OPC=movb_r8_imm8         
  movl %r10d, -0x130(%rbp)        #  1640  0xb0cc5  7      OPC=movl_m32_r32         
  movq %rsi, %rdi                 #  1641  0xb0ccc  3      OPC=movq_r64_r64         
  movq %rsi, -0x128(%rbp)         #  1642  0xb0ccf  7      OPC=movq_m64_r64         
  callq .wcslen                   #  1643  0xb0cd6  5      OPC=callq_label          
  subl %eax, %r13d                #  1644  0xb0cdb  3      OPC=subl_r32_r32         
  movq %rax, %rcx                 #  1645  0xb0cde  3      OPC=movq_r64_r64         
  movq -0x138(%rbp), %r11         #  1646  0xb0ce1  7      OPC=movq_r64_m64         
  cmovnsl %r13d, %r15d            #  1647  0xb0ce8  4      OPC=cmovnsl_r32_r32      
  addl %eax, %r15d                #  1648  0xb0cec  3      OPC=addl_r32_r32         
  movq -0xd8(%rbp), %rax          #  1649  0xb0cef  7      OPC=movq_r64_m64         
  movslq %r15d, %r15              #  1650  0xb0cf6  3      OPC=movslq_r64_r32       
  subq %r11, %rax                 #  1651  0xb0cf9  3      OPC=subq_r64_r64         
  cmpq %rax, %r15                 #  1652  0xb0cfc  3      OPC=cmpq_r64_r64         
  jae .L_af480                    #  1653  0xb0cff  6      OPC=jae_label_1          
  testq %r12, %r12                #  1654  0xb0d05  3      OPC=testq_r64_r64        
  je .L_b0d8d                     #  1655  0xb0d08  6      OPC=je_label_1           
  testl %r13d, %r13d              #  1656  0xb0d0e  3      OPC=testl_r32_r32        
  movq -0x128(%rbp), %rsi         #  1657  0xb0d11  7      OPC=movq_r64_m64         
  jle .L_b0d58                    #  1658  0xb0d18  2      OPC=jle_label            
  movl -0x130(%rbp), %r10d        #  1659  0xb0d1a  7      OPC=movl_r32_m32         
  movslq %r13d, %r13              #  1660  0xb0d21  3      OPC=movslq_r64_r32       
  movq %r11, -0x130(%rbp)         #  1661  0xb0d24  7      OPC=movq_m64_r64         
  movq %rcx, -0x128(%rbp)         #  1662  0xb0d2b  7      OPC=movq_m64_r64         
  movq %r13, %rdx                 #  1663  0xb0d32  3      OPC=movq_r64_r64         
  cmpl $0x30, %r10d               #  1664  0xb0d35  4      OPC=cmpl_r32_imm8        
  je .L_b160a                     #  1665  0xb0d39  6      OPC=je_label_1           
  movl $0x20, %esi                #  1666  0xb0d3f  5      OPC=movl_r32_imm32       
  movq %r12, %rdi                 #  1667  0xb0d44  3      OPC=movq_r64_r64         
  leaq (%r12,%r13,4), %r12        #  1668  0xb0d47  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  1669  0xb0d4b  5      OPC=callq_label          
  movq 0x30(%r14), %rsi           #  1670  0xb0d50  4      OPC=movq_r64_m64         
  movq -0x130(%rbp), %r11         #  1671  0xb0d54  7      OPC=movq_r64_m64         
  movq -0x128(%rbp), %rcx         #  1672  0xb0d5b  7      OPC=movq_r64_m64         
.L_b0d58:                         #        0xb0d62  0      OPC=<label>              
  movl -0xe0(%rbp), %eax          #  1673  0xb0d62  6      OPC=movl_r32_m32         
  movslq %ecx, %r13               #  1674  0xb0d68  3      OPC=movslq_r64_r32       
  movq %r11, -0xe0(%rbp)          #  1675  0xb0d6b  7      OPC=movq_m64_r64         
  testl %eax, %eax                #  1676  0xb0d72  2      OPC=testl_r32_r32        
  je .L_b15f3                     #  1677  0xb0d74  6      OPC=je_label_1           
  movq -0xf8(%rbp), %rcx          #  1678  0xb0d7a  7      OPC=movq_r64_m64         
  movq %r13, %rdx                 #  1679  0xb0d81  3      OPC=movq_r64_r64         
  movq %r12, %rdi                 #  1680  0xb0d84  3      OPC=movq_r64_r64         
  callq .memcpy_uppcase           #  1681  0xb0d87  5      OPC=callq_label          
  movq -0xe0(%rbp), %r11          #  1682  0xb0d8c  7      OPC=movq_r64_m64         
.L_b0d89:                         #        0xb0d93  0      OPC=<label>              
  leaq (%r12,%r13,4), %r12        #  1683  0xb0d93  4      OPC=leaq_r64_m16         
.L_b0d8d:                         #        0xb0d97  0      OPC=<label>              
  addq %r15, %r11                 #  1684  0xb0d97  3      OPC=addq_r64_r64         
  jmpq .L_af348                   #  1685  0xb0d9a  5      OPC=jmpq_label_1         
  cmpl $0x4f, %r15d               #  1686  0xb0d9f  4      OPC=cmpl_r32_imm8        
  je .L_af4f0                     #  1687  0xb0da3  6      OPC=je_label_1           
  cmpl $0x45, %r15d               #  1688  0xb0da9  4      OPC=cmpl_r32_imm8        
  jne .L_b09d0                    #  1689  0xb0dad  6      OPC=jne_label_1          
  movq -0x108(%rbp), %rax         #  1690  0xb0db3  7      OPC=movq_r64_m64         
  movq 0x348(%rax), %r15          #  1691  0xb0dba  7      OPC=movq_r64_m64         
  movl (%r15), %eax               #  1692  0xb0dc1  3      OPC=movl_r32_m32         
  testl %eax, %eax                #  1693  0xb0dc4  2      OPC=testl_r32_r32        
  jne .L_af650                    #  1694  0xb0dc6  6      OPC=jne_label_1          
  jmpq .L_b09d0                   #  1695  0xb0dcc  5      OPC=jmpq_label_1         
  cmpl $0x45, %r15d               #  1696  0xb0dd1  4      OPC=cmpl_r32_imm8        
  jne .L_b0976                    #  1697  0xb0dd5  6      OPC=jne_label_1          
  movq -0xf0(%rbp), %r14          #  1698  0xb0ddb  7      OPC=movq_r64_m64         
  movq -0x108(%rbp), %rsi         #  1699  0xb0de2  7      OPC=movq_r64_m64         
  movq %r11, -0x130(%rbp)         #  1700  0xb0de9  7      OPC=movq_m64_r64         
  movl %r10d, -0x128(%rbp)        #  1701  0xb0df0  7      OPC=movl_m32_r32         
  movq %r14, %rdi                 #  1702  0xb0df7  3      OPC=movq_r64_r64         
  callq ._nl_get_era_entry        #  1703  0xb0dfa  5      OPC=callq_label          
  testq %rax, %rax                #  1704  0xb0dff  3      OPC=testq_r64_r64        
  movl -0x128(%rbp), %r10d        #  1705  0xb0e02  7      OPC=movl_r32_m32         
  movq -0x130(%rbp), %r11         #  1706  0xb0e09  7      OPC=movq_r64_m64         
  je .L_b0976                     #  1707  0xb0e10  6      OPC=je_label_1           
  testl %r13d, %r13d              #  1708  0xb0e16  3      OPC=testl_r32_r32        
  movl $0x1, %r8d                 #  1709  0xb0e19  6      OPC=movl_r32_imm32       
  movl 0x14(%r14), %ecx           #  1710  0xb0e1f  4      OPC=movl_r32_m32         
  cmovgl %r13d, %r8d              #  1711  0xb0e23  4      OPC=cmovgl_r32_r32       
  subl 0x8(%rax), %ecx            #  1712  0xb0e27  3      OPC=subl_r32_m32         
  imull 0x40(%rax), %ecx          #  1713  0xb0e2a  4      OPC=imull_r32_m32        
  addl 0x4(%rax), %ecx            #  1714  0xb0e2e  3      OPC=addl_r32_m32         
  jmpq .L_affad                   #  1715  0xb0e31  5      OPC=jmpq_label_1         
.L_b0e2c:                         #        0xb0e36  0      OPC=<label>              
  movq %r14, %rbx                 #  1716  0xb0e36  3      OPC=movq_r64_r64         
  jmpq .L_af4f3                   #  1717  0xb0e39  5      OPC=jmpq_label_1         
  nop                             #  1718  0xb0e3e  1      OPC=nop                  
  nop                             #  1719  0xb0e3f  1      OPC=nop                  
  nop                             #  1720  0xb0e40  1      OPC=nop                  
  nop                             #  1721  0xb0e41  1      OPC=nop                  
.L_b0e38:                         #        0xb0e42  0      OPC=<label>              
  movq %r13, %rdx                 #  1722  0xb0e42  3      OPC=movq_r64_r64         
  movq %r15, %rsi                 #  1723  0xb0e45  3      OPC=movq_r64_r64         
  movq %r12, %rdi                 #  1724  0xb0e48  3      OPC=movq_r64_r64         
  callq .wmemcpy                  #  1725  0xb0e4b  5      OPC=callq_label          
  movq -0xe0(%rbp), %r11          #  1726  0xb0e50  7      OPC=movq_r64_m64         
  jmpq .L_af910                   #  1727  0xb0e57  5      OPC=jmpq_label_1         
  nop                             #  1728  0xb0e5c  1      OPC=nop                  
  nop                             #  1729  0xb0e5d  1      OPC=nop                  
  nop                             #  1730  0xb0e5e  1      OPC=nop                  
  nop                             #  1731  0xb0e5f  1      OPC=nop                  
  nop                             #  1732  0xb0e60  1      OPC=nop                  
  nop                             #  1733  0xb0e61  1      OPC=nop                  
.L_b0e58:                         #        0xb0e62  0      OPC=<label>              
  movq -0x108(%rbp), %rsi         #  1734  0xb0e62  7      OPC=movq_r64_m64         
  movl %ecx, %edi                 #  1735  0xb0e69  2      OPC=movl_r32_r32         
  movq %r11, -0x140(%rbp)         #  1736  0xb0e6b  7      OPC=movq_m64_r64         
  movl %r8d, -0x138(%rbp)         #  1737  0xb0e72  7      OPC=movl_m32_r32         
  movl %r10d, -0x130(%rbp)        #  1738  0xb0e79  7      OPC=movl_m32_r32         
  movl %ecx, -0x128(%rbp)         #  1739  0xb0e80  6      OPC=movl_m32_r32         
  callq ._nl_get_walt_digit       #  1740  0xb0e86  5      OPC=callq_label          
  testq %rax, %rax                #  1741  0xb0e8b  3      OPC=testq_r64_r64        
  movq %rax, %r14                 #  1742  0xb0e8e  3      OPC=movq_r64_r64         
  movl -0x128(%rbp), %ecx         #  1743  0xb0e91  6      OPC=movl_r32_m32         
  movl -0x130(%rbp), %r10d        #  1744  0xb0e97  7      OPC=movl_r32_m32         
  movl -0x138(%rbp), %r8d         #  1745  0xb0e9e  7      OPC=movl_r32_m32         
  movq -0x140(%rbp), %r11         #  1746  0xb0ea5  7      OPC=movq_r64_m64         
  je .L_affad                     #  1747  0xb0eac  6      OPC=je_label_1           
  movq %rax, %rdi                 #  1748  0xb0eb2  3      OPC=movq_r64_r64         
  movl %ecx, -0x138(%rbp)         #  1749  0xb0eb5  6      OPC=movl_m32_r32         
  movl %r8d, -0x130(%rbp)         #  1750  0xb0ebb  7      OPC=movl_m32_r32         
  movl %r10d, -0x128(%rbp)        #  1751  0xb0ec2  7      OPC=movl_m32_r32         
  callq .wcslen                   #  1752  0xb0ec9  5      OPC=callq_label          
  testq %rax, %rax                #  1753  0xb0ece  3      OPC=testq_r64_r64        
  movq %rax, %r15                 #  1754  0xb0ed1  3      OPC=movq_r64_r64         
  movl -0x128(%rbp), %r10d        #  1755  0xb0ed4  7      OPC=movl_r32_m32         
  movl -0x130(%rbp), %r8d         #  1756  0xb0edb  7      OPC=movl_r32_m32         
  movl -0x138(%rbp), %ecx         #  1757  0xb0ee2  6      OPC=movl_r32_m32         
  movq -0x140(%rbp), %r11         #  1758  0xb0ee8  7      OPC=movq_r64_m64         
  je .L_affad                     #  1759  0xb0eef  6      OPC=je_label_1           
  movl %r13d, %edx                #  1760  0xb0ef5  3      OPC=movl_r32_r32         
  subl %eax, %edx                 #  1761  0xb0ef8  2      OPC=subl_r32_r32         
  movl $0x0, %eax                 #  1762  0xb0efa  5      OPC=movl_r32_imm32       
  cmovnsl %edx, %eax              #  1763  0xb0eff  3      OPC=cmovnsl_r32_r32      
  addl %r15d, %eax                #  1764  0xb0f02  3      OPC=addl_r32_r32         
  movslq %eax, %r13               #  1765  0xb0f05  3      OPC=movslq_r64_r32       
  movq -0xd8(%rbp), %rax          #  1766  0xb0f08  7      OPC=movq_r64_m64         
  subq %r11, %rax                 #  1767  0xb0f0f  3      OPC=subq_r64_r64         
  cmpq %rax, %r13                 #  1768  0xb0f12  3      OPC=cmpq_r64_r64         
  jae .L_af480                    #  1769  0xb0f15  6      OPC=jae_label_1          
  testq %r12, %r12                #  1770  0xb0f1b  3      OPC=testq_r64_r64        
  je .L_b0f90                     #  1771  0xb0f1e  2      OPC=je_label             
  testl %edx, %edx                #  1772  0xb0f20  2      OPC=testl_r32_r32        
  jle .L_b0f58                    #  1773  0xb0f22  2      OPC=jle_label            
  movslq %edx, %rcx               #  1774  0xb0f24  3      OPC=movslq_r64_r32       
  cmpl $0x30, %r10d               #  1775  0xb0f27  4      OPC=cmpl_r32_imm8        
  movq %r11, -0x130(%rbp)         #  1776  0xb0f2b  7      OPC=movq_m64_r64         
  movq %rcx, %rdx                 #  1777  0xb0f32  3      OPC=movq_r64_r64         
  movq %rcx, -0x128(%rbp)         #  1778  0xb0f35  7      OPC=movq_m64_r64         
  movl $0x30, %esi                #  1779  0xb0f3c  5      OPC=movl_r32_imm32       
  je .L_b0f3e                     #  1780  0xb0f41  2      OPC=je_label             
  movl $0x20, %esi                #  1781  0xb0f43  5      OPC=movl_r32_imm32       
.L_b0f3e:                         #        0xb0f48  0      OPC=<label>              
  movq %r12, %rdi                 #  1782  0xb0f48  3      OPC=movq_r64_r64         
  callq .wmemset                  #  1783  0xb0f4b  5      OPC=callq_label          
  movq -0x128(%rbp), %rcx         #  1784  0xb0f50  7      OPC=movq_r64_m64         
  movq -0x130(%rbp), %r11         #  1785  0xb0f57  7      OPC=movq_r64_m64         
  leaq (%r12,%rcx,4), %r12        #  1786  0xb0f5e  4      OPC=leaq_r64_m16         
.L_b0f58:                         #        0xb0f62  0      OPC=<label>              
  movl -0xe0(%rbp), %eax          #  1787  0xb0f62  6      OPC=movl_r32_m32         
  movslq %r15d, %r15              #  1788  0xb0f68  3      OPC=movslq_r64_r32       
  movq %r11, -0xe0(%rbp)          #  1789  0xb0f6b  7      OPC=movq_m64_r64         
  testl %eax, %eax                #  1790  0xb0f72  2      OPC=testl_r32_r32        
  je .L_b10c1                     #  1791  0xb0f74  6      OPC=je_label_1           
  movq -0xf8(%rbp), %rcx          #  1792  0xb0f7a  7      OPC=movq_r64_m64         
  movq %r15, %rdx                 #  1793  0xb0f81  3      OPC=movq_r64_r64         
  movq %r14, %rsi                 #  1794  0xb0f84  3      OPC=movq_r64_r64         
  movq %r12, %rdi                 #  1795  0xb0f87  3      OPC=movq_r64_r64         
  callq .memcpy_uppcase           #  1796  0xb0f8a  5      OPC=callq_label          
  movq -0xe0(%rbp), %r11          #  1797  0xb0f8f  7      OPC=movq_r64_m64         
.L_b0f8c:                         #        0xb0f96  0      OPC=<label>              
  leaq (%r12,%r15,4), %r12        #  1798  0xb0f96  4      OPC=leaq_r64_m16         
.L_b0f90:                         #        0xb0f9a  0      OPC=<label>              
  addq %r13, %r11                 #  1799  0xb0f9a  3      OPC=addq_r64_r64         
  jmpq .L_af348                   #  1800  0xb0f9d  5      OPC=jmpq_label_1         
  nop                             #  1801  0xb0fa2  1      OPC=nop                  
  nop                             #  1802  0xb0fa3  1      OPC=nop                  
  nop                             #  1803  0xb0fa4  1      OPC=nop                  
  nop                             #  1804  0xb0fa5  1      OPC=nop                  
  nop                             #  1805  0xb0fa6  1      OPC=nop                  
  nop                             #  1806  0xb0fa7  1      OPC=nop                  
  nop                             #  1807  0xb0fa8  1      OPC=nop                  
  nop                             #  1808  0xb0fa9  1      OPC=nop                  
.L_b0fa0:                         #        0xb0faa  0      OPC=<label>              
  movq %r14, %r12                 #  1809  0xb0faa  3      OPC=movq_r64_r64         
  jmpq .L_af348                   #  1810  0xb0fad  5      OPC=jmpq_label_1         
  nop                             #  1811  0xb0fb2  1      OPC=nop                  
  nop                             #  1812  0xb0fb3  1      OPC=nop                  
  nop                             #  1813  0xb0fb4  1      OPC=nop                  
  nop                             #  1814  0xb0fb5  1      OPC=nop                  
  nop                             #  1815  0xb0fb6  1      OPC=nop                  
  nop                             #  1816  0xb0fb7  1      OPC=nop                  
  nop                             #  1817  0xb0fb8  1      OPC=nop                  
  nop                             #  1818  0xb0fb9  1      OPC=nop                  
.L_b0fb0:                         #        0xb0fba  0      OPC=<label>              
  movq %r12, %rdi                 #  1819  0xb0fba  3      OPC=movq_r64_r64         
  movl $0x30, %esi                #  1820  0xb0fbd  5      OPC=movl_r32_imm32       
  leaq (%r12,%r13,4), %r12        #  1821  0xb0fc2  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  1822  0xb0fc6  5      OPC=callq_label          
  movq -0x128(%rbp), %rcx         #  1823  0xb0fcb  7      OPC=movq_r64_m64         
  movq -0x130(%rbp), %r11         #  1824  0xb0fd2  7      OPC=movq_r64_m64         
  jmpq .L_afdd2                   #  1825  0xb0fd9  5      OPC=jmpq_label_1         
.L_b0fd4:                         #        0xb0fde  0      OPC=<label>              
  movq -0xd8(%rbp), %rax          #  1826  0xb0fde  7      OPC=movq_r64_m64         
  movslq %ecx, %r8                #  1827  0xb0fe5  3      OPC=movslq_r64_r32       
  subq %r11, %rax                 #  1828  0xb0fe8  3      OPC=subq_r64_r64         
  cmpq %rax, %r8                  #  1829  0xb0feb  3      OPC=cmpq_r64_r64         
  jae .L_af480                    #  1830  0xb0fee  6      OPC=jae_label_1          
  testq %r12, %r12                #  1831  0xb0ff4  3      OPC=testq_r64_r64        
  je .L_b1039                     #  1832  0xb0ff7  2      OPC=je_label             
  movq %r8, %rdx                  #  1833  0xb0ff9  3      OPC=movq_r64_r64         
  movq %r12, %rdi                 #  1834  0xb0ffc  3      OPC=movq_r64_r64         
  movl $0x20, %esi                #  1835  0xb0fff  5      OPC=movl_r32_imm32       
  movq %r11, -0x140(%rbp)         #  1836  0xb1004  7      OPC=movq_m64_r64         
  movl %ecx, -0x138(%rbp)         #  1837  0xb100b  6      OPC=movl_m32_r32         
  movl %r10d, -0x130(%rbp)        #  1838  0xb1011  7      OPC=movl_m32_r32         
  movq %r8, -0x128(%rbp)          #  1839  0xb1018  7      OPC=movq_m64_r64         
  callq .wmemset                  #  1840  0xb101f  5      OPC=callq_label          
  movq -0x128(%rbp), %r8          #  1841  0xb1024  7      OPC=movq_r64_m64         
  movq -0x140(%rbp), %r11         #  1842  0xb102b  7      OPC=movq_r64_m64         
  movl -0x138(%rbp), %ecx         #  1843  0xb1032  6      OPC=movl_r32_m32         
  movl -0x130(%rbp), %r10d        #  1844  0xb1038  7      OPC=movl_r32_m32         
  leaq (%r12,%r8,4), %r12         #  1845  0xb103f  4      OPC=leaq_r64_m16         
.L_b1039:                         #        0xb1043  0      OPC=<label>              
  movl %r13d, %eax                #  1846  0xb1043  3      OPC=movl_r32_r32         
  addq %r8, %r11                  #  1847  0xb1046  3      OPC=addq_r64_r64         
  subl %ecx, %eax                 #  1848  0xb1049  2      OPC=subl_r32_r32         
  cmpl %ecx, %r13d                #  1849  0xb104b  3      OPC=cmpl_r32_r32         
  movl $0x0, %r13d                #  1850  0xb104e  6      OPC=movl_r32_imm32       
  cmovgl %eax, %r13d              #  1851  0xb1054  4      OPC=cmovgl_r32_r32       
  jmpq .L_afd5a                   #  1852  0xb1058  5      OPC=jmpq_label_1         
.L_b1053:                         #        0xb105d  0      OPC=<label>              
  movl $0x30, %esi                #  1853  0xb105d  5      OPC=movl_r32_imm32       
  movq %r12, %rdi                 #  1854  0xb1062  3      OPC=movq_r64_r64         
  leaq (%r12,%r13,4), %r13        #  1855  0xb1065  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  1856  0xb1069  5      OPC=callq_label          
  movq -0x138(%rbp), %r11         #  1857  0xb106e  7      OPC=movq_r64_m64         
  jmpq .L_af70a                   #  1858  0xb1075  5      OPC=jmpq_label_1         
.L_b1070:                         #        0xb107a  0      OPC=<label>              
  testl %r15d, %r15d              #  1859  0xb107a  3      OPC=testl_r32_r32        
  jne .L_af4f0                    #  1860  0xb107d  6      OPC=jne_label_1          
  jmpq .L_b0688                   #  1861  0xb1083  5      OPC=jmpq_label_1         
.L_b107e:                         #        0xb1088  0      OPC=<label>              
  addq -0x130(%rbp), %r11         #  1862  0xb1088  7      OPC=addq_r64_m64         
  jmpq .L_af348                   #  1863  0xb108f  5      OPC=jmpq_label_1         
.L_b108a:                         #        0xb1094  0      OPC=<label>              
  xorl %eax, %eax                 #  1864  0xb1094  2      OPC=xorl_r32_r32         
  cmpl $0xb, %edx                 #  1865  0xb1096  3      OPC=cmpl_r32_imm8        
  movl -0xe0(%rbp), %r15d         #  1866  0xb1099  7      OPC=movl_r32_m32         
  setg %al                        #  1867  0xb10a0  3      OPC=setg_r8              
  movq %r11, -0xe0(%rbp)          #  1868  0xb10a3  7      OPC=movq_m64_r64         
  movslq %ecx, %r13               #  1869  0xb10aa  3      OPC=movslq_r64_r32       
  addl $0x5a, %eax                #  1870  0xb10ad  3      OPC=addl_r32_imm8        
  cltq                            #  1871  0xb10b0  2      OPC=cltq                 
  addq $0x8, %rax                 #  1872  0xb10b2  4      OPC=addq_r64_imm8        
  testl %r15d, %r15d              #  1873  0xb10b6  3      OPC=testl_r32_r32        
  je .L_b10db                     #  1874  0xb10b9  2      OPC=je_label             
  movq -0x108(%rbp), %rsi         #  1875  0xb10bb  7      OPC=movq_r64_m64         
  movq (%rsi,%rax,8), %rsi        #  1876  0xb10c2  4      OPC=movq_r64_m64         
  jmpq .L_b07a8                   #  1877  0xb10c6  5      OPC=jmpq_label_1         
.L_b10c1:                         #        0xb10cb  0      OPC=<label>              
  movq %r15, %rdx                 #  1878  0xb10cb  3      OPC=movq_r64_r64         
  movq %r14, %rsi                 #  1879  0xb10ce  3      OPC=movq_r64_r64         
  movq %r12, %rdi                 #  1880  0xb10d1  3      OPC=movq_r64_r64         
  callq .wmemcpy                  #  1881  0xb10d4  5      OPC=callq_label          
  movq -0xe0(%rbp), %r11          #  1882  0xb10d9  7      OPC=movq_r64_m64         
  jmpq .L_b0f8c                   #  1883  0xb10e0  5      OPC=jmpq_label_1         
.L_b10db:                         #        0xb10e5  0      OPC=<label>              
  movq -0x108(%rbp), %rdi         #  1884  0xb10e5  7      OPC=movq_r64_m64         
  movq %r13, %rdx                 #  1885  0xb10ec  3      OPC=movq_r64_r64         
  movq (%rdi,%rax,8), %rsi        #  1886  0xb10ef  4      OPC=movq_r64_m64         
  movq %r12, %rdi                 #  1887  0xb10f3  3      OPC=movq_r64_r64         
  callq .wmemcpy                  #  1888  0xb10f6  5      OPC=callq_label          
  movq -0xe0(%rbp), %r11          #  1889  0xb10fb  7      OPC=movq_r64_m64         
  jmpq .L_af910                   #  1890  0xb1102  5      OPC=jmpq_label_1         
.L_b10fd:                         #        0xb1107  0      OPC=<label>              
  movq %r12, %rdi                 #  1891  0xb1107  3      OPC=movq_r64_r64         
  movl $0x30, %esi                #  1892  0xb110a  5      OPC=movl_r32_imm32       
  leaq (%r12,%r13,4), %r12        #  1893  0xb110f  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  1894  0xb1113  5      OPC=callq_label          
  movq -0xf0(%rbp), %rax          #  1895  0xb1118  7      OPC=movq_r64_m64         
  movq -0x128(%rbp), %rcx         #  1896  0xb111f  7      OPC=movq_r64_m64         
  movq -0x130(%rbp), %r11         #  1897  0xb1126  7      OPC=movq_r64_m64         
  movl 0x8(%rax), %edx            #  1898  0xb112d  3      OPC=movl_r32_m32         
  jmpq .L_af885                   #  1899  0xb1130  5      OPC=jmpq_label_1         
.L_b112b:                         #        0xb1135  0      OPC=<label>              
  movq %r15, %rdx                 #  1900  0xb1135  3      OPC=movq_r64_r64         
  movq %rbx, %rsi                 #  1901  0xb1138  3      OPC=movq_r64_r64         
  movq %r12, %rdi                 #  1902  0xb113b  3      OPC=movq_r64_r64         
  callq .wmemcpy                  #  1903  0xb113e  5      OPC=callq_label          
  movq -0xe0(%rbp), %r11          #  1904  0xb1143  7      OPC=movq_r64_m64         
  jmpq .L_afad9                   #  1905  0xb114a  5      OPC=jmpq_label_1         
.L_b1145:                         #        0xb114f  0      OPC=<label>              
  movq %r14, %rbx                 #  1906  0xb114f  3      OPC=movq_r64_r64         
  jmpq .L_af348                   #  1907  0xb1152  5      OPC=jmpq_label_1         
.L_b114d:                         #        0xb1157  0      OPC=<label>              
  movslq %r15d, %rax              #  1908  0xb1157  3      OPC=movslq_r64_r32       
  testq %rax, %rax                #  1909  0xb115a  3      OPC=testq_r64_r64        
  movq %rax, -0xe0(%rbp)          #  1910  0xb115d  7      OPC=movq_m64_r64         
  je .L_b1632                     #  1911  0xb1164  6      OPC=je_label_1           
  movq %r14, %r15                 #  1912  0xb116a  3      OPC=movq_r64_r64         
  movq %rbx, %r14                 #  1913  0xb116d  3      OPC=movq_r64_r64         
  movq -0xf8(%rbp), %rbx          #  1914  0xb1170  7      OPC=movq_r64_m64         
  movq %r13, -0x130(%rbp)         #  1915  0xb1177  7      OPC=movq_m64_r64         
  movq %r11, -0x128(%rbp)         #  1916  0xb117e  7      OPC=movq_m64_r64         
  movq %rax, %r13                 #  1917  0xb1185  3      OPC=movq_r64_r64         
  xchgw %ax, %ax                  #  1918  0xb1188  2      OPC=xchgw_ax_r16         
.L_b1180:                         #        0xb118a  0      OPC=<label>              
  movl -0x4(%r14,%r13,4), %edi    #  1919  0xb118a  5      OPC=movl_r32_m32         
  movq %rbx, %rsi                 #  1920  0xb118f  3      OPC=movq_r64_r64         
  callq .__towlower_l             #  1921  0xb1192  5      OPC=callq_label          
  movl %eax, -0x4(%r12,%r13,4)    #  1922  0xb1197  5      OPC=movl_m32_r32         
  subq $0x1, %r13                 #  1923  0xb119c  4      OPC=subq_r64_imm8        
  jne .L_b1180                    #  1924  0xb11a0  2      OPC=jne_label            
  movq %r15, %r14                 #  1925  0xb11a2  3      OPC=movq_r64_r64         
  movq -0x128(%rbp), %r11         #  1926  0xb11a5  7      OPC=movq_r64_m64         
  movq -0x130(%rbp), %r13         #  1927  0xb11ac  7      OPC=movq_r64_m64         
  movq -0xe0(%rbp), %r15          #  1928  0xb11b3  7      OPC=movq_r64_m64         
  jmpq .L_afad9                   #  1929  0xb11ba  5      OPC=jmpq_label_1         
.L_b11b5:                         #        0xb11bf  0      OPC=<label>              
  testl %r13d, %r13d              #  1930  0xb11bf  3      OPC=testl_r32_r32        
  movl $0x1, %r8d                 #  1931  0xb11c2  6      OPC=movl_r32_imm32       
  cmovgl %r13d, %r8d              #  1932  0xb11c8  4      OPC=cmovgl_r32_r32       
  cmpl $0x4f, -0x128(%rbp)        #  1933  0xb11cc  7      OPC=cmpl_m32_imm8        
  sete %sil                       #  1934  0xb11d3  4      OPC=sete_r8              
  jmpq .L_affa0                   #  1935  0xb11d7  5      OPC=jmpq_label_1         
.L_b11d2:                         #        0xb11dc  0      OPC=<label>              
  movl %esi, %eax                 #  1936  0xb11dc  2      OPC=movl_r32_r32         
  movl $0x92492493, %edx          #  1937  0xb11de  6      OPC=movl_r32_imm32_1     
  imull %edx                      #  1938  0xb11e4  2      OPC=imull_r32            
  leal (%rdx,%rsi,1), %ecx        #  1939  0xb11e6  3      OPC=leal_r32_m16         
  sarl $0x1f, %esi                #  1940  0xb11e9  3      OPC=sarl_r32_imm8        
  sarl $0x2, %ecx                 #  1941  0xb11ec  3      OPC=sarl_r32_imm8        
  subl %esi, %ecx                 #  1942  0xb11ef  2      OPC=subl_r32_r32         
  addl $0x1, %ecx                 #  1943  0xb11f1  3      OPC=addl_r32_imm8        
  cmpl $0x4f, -0x128(%rbp)        #  1944  0xb11f4  7      OPC=cmpl_m32_imm8        
  sete %sil                       #  1945  0xb11fb  4      OPC=sete_r8              
  jmpq .L_affa0                   #  1946  0xb11ff  5      OPC=jmpq_label_1         
.L_b11f9:                         #        0xb1204  0      OPC=<label>              
  leal 0x76b(%r9), %ecx           #  1947  0xb1204  7      OPC=leal_r32_m16         
  movl $0x16d, %eax               #  1948  0xb120b  5      OPC=movl_r32_imm32       
  testb $0x3, %cl                 #  1949  0xb1210  3      OPC=testb_r8_imm8        
  jne .L_b124c                    #  1950  0xb1213  2      OPC=jne_label            
  movl $0x51eb851f, %esi          #  1951  0xb1215  5      OPC=movl_r32_imm32       
  movl %ecx, %eax                 #  1952  0xb121a  2      OPC=movl_r32_r32         
  movl %ecx, %r9d                 #  1953  0xb121c  3      OPC=movl_r32_r32         
  imull %esi                      #  1954  0xb121f  2      OPC=imull_r32            
  sarl $0x1f, %r9d                #  1955  0xb1221  4      OPC=sarl_r32_imm8        
  movl $0x16e, %eax               #  1956  0xb1225  5      OPC=movl_r32_imm32       
  movl %edx, %esi                 #  1957  0xb122a  2      OPC=movl_r32_r32         
  sarl $0x5, %edx                 #  1958  0xb122c  3      OPC=sarl_r32_imm8        
  subl %r9d, %edx                 #  1959  0xb122f  3      OPC=subl_r32_r32         
  imull $0x64, %edx, %edx         #  1960  0xb1232  3      OPC=imull_r32_r32_imm8   
  cmpl %edx, %ecx                 #  1961  0xb1235  2      OPC=cmpl_r32_r32         
  jne .L_b124c                    #  1962  0xb1237  2      OPC=jne_label            
  movl %esi, %eax                 #  1963  0xb1239  2      OPC=movl_r32_r32         
  movl %ecx, %esi                 #  1964  0xb123b  2      OPC=movl_r32_r32         
  sarl $0x7, %eax                 #  1965  0xb123d  3      OPC=sarl_r32_imm8        
  subl %r9d, %eax                 #  1966  0xb1240  3      OPC=subl_r32_r32         
  imull $0x190, %eax, %eax        #  1967  0xb1243  6      OPC=imull_r32_r32_imm32  
  subl %eax, %esi                 #  1968  0xb1249  2      OPC=subl_r32_r32         
  cmpl $0x1, %esi                 #  1969  0xb124b  3      OPC=cmpl_r32_imm8        
  sbbl %eax, %eax                 #  1970  0xb124e  2      OPC=sbbl_r32_r32         
  notl %eax                       #  1971  0xb1250  2      OPC=notl_r32             
  addl $0x16e, %eax               #  1972  0xb1252  5      OPC=addl_eax_imm32       
.L_b124c:                         #        0xb1257  0      OPC=<label>              
  addl %eax, %edi                 #  1973  0xb1257  2      OPC=addl_r32_r32         
  movl $0x92492493, %edx          #  1974  0xb1259  6      OPC=movl_r32_imm32_1     
  movl %edi, %esi                 #  1975  0xb125f  2      OPC=movl_r32_r32         
  subl %r8d, %esi                 #  1976  0xb1261  3      OPC=subl_r32_r32         
  addl $0x17e, %esi               #  1977  0xb1264  6      OPC=addl_r32_imm32       
  movl %esi, %eax                 #  1978  0xb126a  2      OPC=movl_r32_r32         
  subl %esi, %edi                 #  1979  0xb126c  2      OPC=subl_r32_r32         
  imull %edx                      #  1980  0xb126e  2      OPC=imull_r32            
  leal (%rdx,%rsi,1), %eax        #  1981  0xb1270  3      OPC=leal_r32_m16         
  movl %esi, %edx                 #  1982  0xb1273  2      OPC=movl_r32_r32         
  sarl $0x1f, %edx                #  1983  0xb1275  3      OPC=sarl_r32_imm8        
  sarl $0x2, %eax                 #  1984  0xb1278  3      OPC=sarl_r32_imm8        
  subl %edx, %eax                 #  1985  0xb127b  2      OPC=subl_r32_r32         
  leal (,%rax,8), %edx            #  1986  0xb127d  7      OPC=leal_r32_m16         
  subl %eax, %edx                 #  1987  0xb1284  2      OPC=subl_r32_r32         
  leal 0x3(%rdi,%rdx,1), %esi     #  1988  0xb1286  4      OPC=leal_r32_m16         
  jmpq .L_b02de                   #  1989  0xb128a  5      OPC=jmpq_label_1         
.L_b1283:                         #        0xb128f  0      OPC=<label>              
  subl $0x1, %ebx                 #  1990  0xb128f  3      OPC=subl_r32_imm8        
  movl $0x0, %eax                 #  1991  0xb1292  5      OPC=movl_r32_imm32       
  cmovnsl %ebx, %eax              #  1992  0xb1297  3      OPC=cmovnsl_r32_r32      
  addl $0x1, %eax                 #  1993  0xb129a  3      OPC=addl_r32_imm8        
  cltq                            #  1994  0xb129d  2      OPC=cltq                 
  movq %rax, %rdi                 #  1995  0xb129f  3      OPC=movq_r64_r64         
  movq %rax, -0x128(%rbp)         #  1996  0xb12a2  7      OPC=movq_m64_r64         
  movq -0xd8(%rbp), %rax          #  1997  0xb12a9  7      OPC=movq_r64_m64         
  subq %r11, %rax                 #  1998  0xb12b0  3      OPC=subq_r64_r64         
  cmpq %rax, %rdi                 #  1999  0xb12b3  3      OPC=cmpq_r64_r64         
  jae .L_af480                    #  2000  0xb12b6  6      OPC=jae_label_1          
  testq %r12, %r12                #  2001  0xb12bc  3      OPC=testq_r64_r64        
  je .L_b1310                     #  2002  0xb12bf  2      OPC=je_label             
  testl %ebx, %ebx                #  2003  0xb12c1  2      OPC=testl_r32_r32        
  jle .L_b1304                    #  2004  0xb12c3  2      OPC=jle_label            
  movslq %ebx, %rbx               #  2005  0xb12c5  3      OPC=movslq_r64_r32       
  cmpl $0x30, %r10d               #  2006  0xb12c8  4      OPC=cmpl_r32_imm8        
  movq %r11, -0x140(%rbp)         #  2007  0xb12cc  7      OPC=movq_m64_r64         
  movq %r8, -0x138(%rbp)          #  2008  0xb12d3  7      OPC=movq_m64_r64         
  movl %r10d, -0x130(%rbp)        #  2009  0xb12da  7      OPC=movl_m32_r32         
  movq %rbx, %rdx                 #  2010  0xb12e1  3      OPC=movq_r64_r64         
  je .L_b15c8                     #  2011  0xb12e4  6      OPC=je_label_1           
  movq %r12, %rdi                 #  2012  0xb12ea  3      OPC=movq_r64_r64         
  movl $0x20, %esi                #  2013  0xb12ed  5      OPC=movl_r32_imm32       
  leaq (%r12,%rbx,4), %r12        #  2014  0xb12f2  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  2015  0xb12f6  5      OPC=callq_label          
  movq -0x140(%rbp), %r11         #  2016  0xb12fb  7      OPC=movq_r64_m64         
  movq -0x138(%rbp), %r8          #  2017  0xb1302  7      OPC=movq_r64_m64         
  movl -0x130(%rbp), %r10d        #  2018  0xb1309  7      OPC=movl_r32_m32         
.L_b1304:                         #        0xb1310  0      OPC=<label>              
  movl $0x2d, (%r12)              #  2019  0xb1310  8      OPC=movl_m32_imm32       
  addq $0x4, %r12                 #  2020  0xb1318  4      OPC=addq_r64_imm8        
.L_b1310:                         #        0xb131c  0      OPC=<label>              
  movl %r8d, %ecx                 #  2021  0xb131c  3      OPC=movl_r32_r32         
  addq -0x128(%rbp), %r11         #  2022  0xb131f  7      OPC=addq_r64_m64         
  negl %ecx                       #  2023  0xb1326  2      OPC=negl_r32             
  jmpq .L_aff52                   #  2024  0xb1328  5      OPC=jmpq_label_1         
.L_b1321:                         #        0xb132d  0      OPC=<label>              
  cmpl $0xb, %edx                 #  2025  0xb132d  3      OPC=cmpl_r32_imm8        
  ja .L_b133f                     #  2026  0xb1330  2      OPC=ja_label             
  leal 0x2004e(%r15), %eax        #  2027  0xb1332  7      OPC=leal_r32_m16         
  movq -0x108(%rbp), %rdi         #  2028  0xb1339  7      OPC=movq_r64_m64         
  movzwl %ax, %eax                #  2029  0xb1340  3      OPC=movzwl_r32_r16       
  addq $0x8, %rax                 #  2030  0xb1343  4      OPC=addq_r64_imm8        
  movq (%rdi,%rax,8), %rsi        #  2031  0xb1347  4      OPC=movq_r64_m64         
.L_b133f:                         #        0xb134b  0      OPC=<label>              
  movq %r13, %rdx                 #  2032  0xb134b  3      OPC=movq_r64_r64         
  movq %r12, %rdi                 #  2033  0xb134e  3      OPC=movq_r64_r64         
  movq %r11, -0xe0(%rbp)          #  2034  0xb1351  7      OPC=movq_m64_r64         
  callq .wmemcpy                  #  2035  0xb1358  5      OPC=callq_label          
  movq -0xe0(%rbp), %r11          #  2036  0xb135d  7      OPC=movq_r64_m64         
  jmpq .L_b04ff                   #  2037  0xb1364  5      OPC=jmpq_label_1         
.L_b135d:                         #        0xb1369  0      OPC=<label>              
  cmpl $0x6, %edx                 #  2038  0xb1369  3      OPC=cmpl_r32_imm8        
  ja .L_b133f                     #  2039  0xb136c  2      OPC=ja_label             
  leal 0x2003b(%r15), %eax        #  2040  0xb136e  7      OPC=leal_r32_m16         
  movq -0x108(%rbp), %rsi         #  2041  0xb1375  7      OPC=movq_r64_m64         
  movzwl %ax, %eax                #  2042  0xb137c  3      OPC=movzwl_r32_r16       
  addq $0x8, %rax                 #  2043  0xb137f  4      OPC=addq_r64_imm8        
  movq (%rsi,%rax,8), %rsi        #  2044  0xb1383  4      OPC=movq_r64_m64         
  jmpq .L_b133f                   #  2045  0xb1387  2      OPC=jmpq_label           
.L_b137d:                         #        0xb1389  0      OPC=<label>              
  cmpl $0x6, %edx                 #  2046  0xb1389  3      OPC=cmpl_r32_imm8        
  ja .L_b133f                     #  2047  0xb138c  2      OPC=ja_label             
  leal 0x20034(%r15), %eax        #  2048  0xb138e  7      OPC=leal_r32_m16         
  movq -0x108(%rbp), %rdi         #  2049  0xb1395  7      OPC=movq_r64_m64         
  movzwl %ax, %eax                #  2050  0xb139c  3      OPC=movzwl_r32_r16       
  addq $0x8, %rax                 #  2051  0xb139f  4      OPC=addq_r64_imm8        
  movq (%rdi,%rax,8), %rsi        #  2052  0xb13a3  4      OPC=movq_r64_m64         
  jmpq .L_b133f                   #  2053  0xb13a7  2      OPC=jmpq_label           
.L_b139d:                         #        0xb13a9  0      OPC=<label>              
  cmpl $0xb, %edx                 #  2054  0xb13a9  3      OPC=cmpl_r32_imm8        
  ja .L_b13ba                     #  2055  0xb13ac  2      OPC=ja_label             
  leal 0x20042(%rcx), %eax        #  2056  0xb13ae  6      OPC=leal_r32_m16         
  movq -0x108(%rbp), %rdi         #  2057  0xb13b4  7      OPC=movq_r64_m64         
  movzwl %ax, %eax                #  2058  0xb13bb  3      OPC=movzwl_r32_r16       
  addq $0x8, %rax                 #  2059  0xb13be  4      OPC=addq_r64_imm8        
  movq (%rdi,%rax,8), %rsi        #  2060  0xb13c2  4      OPC=movq_r64_m64         
.L_b13ba:                         #        0xb13c6  0      OPC=<label>              
  movq %r13, %rdx                 #  2061  0xb13c6  3      OPC=movq_r64_r64         
  movq %r12, %rdi                 #  2062  0xb13c9  3      OPC=movq_r64_r64         
  movq %r11, -0xe0(%rbp)          #  2063  0xb13cc  7      OPC=movq_m64_r64         
  callq .wmemcpy                  #  2064  0xb13d3  5      OPC=callq_label          
  movq -0xe0(%rbp), %r11          #  2065  0xb13d8  7      OPC=movq_r64_m64         
  jmpq .L_af910                   #  2066  0xb13df  5      OPC=jmpq_label_1         
.L_b13d8:                         #        0xb13e4  0      OPC=<label>              
  movq %r12, %rdi                 #  2067  0xb13e4  3      OPC=movq_r64_r64         
  movl $0x30, %esi                #  2068  0xb13e7  5      OPC=movl_r32_imm32       
  leaq (%r12,%r13,4), %r12        #  2069  0xb13ec  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  2070  0xb13f0  5      OPC=callq_label          
  movq -0xe0(%rbp), %r11          #  2071  0xb13f5  7      OPC=movq_r64_m64         
  jmpq .L_afb92                   #  2072  0xb13fc  5      OPC=jmpq_label_1         
.L_b13f5:                         #        0xb1401  0      OPC=<label>              
  movq %r12, %rdi                 #  2073  0xb1401  3      OPC=movq_r64_r64         
  movl $0x30, %esi                #  2074  0xb1404  5      OPC=movl_r32_imm32       
  leaq (%r12,%r13,4), %r12        #  2075  0xb1409  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  2076  0xb140d  5      OPC=callq_label          
  movq -0xe0(%rbp), %r11          #  2077  0xb1412  7      OPC=movq_r64_m64         
  jmpq .L_afe71                   #  2078  0xb1419  5      OPC=jmpq_label_1         
.L_b1412:                         #        0xb141e  0      OPC=<label>              
  movq -0xf0(%rbp), %rax          #  2079  0xb141e  7      OPC=movq_r64_m64         
  movl 0x20(%rax), %eax           #  2080  0xb1425  3      OPC=movl_r32_m32         
  testl %eax, %eax                #  2081  0xb1428  2      OPC=testl_r32_r32        
  jns .L_af964                    #  2082  0xb142a  6      OPC=jns_label_1          
.L_b1424:                         #        0xb1430  0      OPC=<label>              
  leaq 0xb22d6(%rip), %rax        #  2083  0xb1430  7      OPC=leaq_r64_m16         
  movq %rax, -0x120(%rbp)         #  2084  0xb1437  7      OPC=movq_m64_r64         
  jmpq .L_af996                   #  2085  0xb143e  5      OPC=jmpq_label_1         
.L_b1437:                         #        0xb1443  0      OPC=<label>              
  movl %r14d, %esi                #  2086  0xb1443  3      OPC=movl_r32_r32         
  jmpq .L_b02de                   #  2087  0xb1446  5      OPC=jmpq_label_1         
.L_b143f:                         #        0xb144b  0      OPC=<label>              
  movq -0x108(%rbp), %rsi         #  2088  0xb144b  7      OPC=movq_r64_m64         
  movq -0xf0(%rbp), %rdi          #  2089  0xb1452  7      OPC=movq_r64_m64         
  movq %r11, -0x130(%rbp)         #  2090  0xb1459  7      OPC=movq_m64_r64         
  movl %r10d, -0x128(%rbp)        #  2091  0xb1460  7      OPC=movl_m32_r32         
  callq ._nl_get_era_entry        #  2092  0xb1467  5      OPC=callq_label          
  testq %rax, %rax                #  2093  0xb146c  3      OPC=testq_r64_r64        
  movl -0x128(%rbp), %r10d        #  2094  0xb146f  7      OPC=movl_r32_m32         
  movq -0x130(%rbp), %r11         #  2095  0xb1476  7      OPC=movq_r64_m64         
  je .L_afff9                     #  2096  0xb147d  6      OPC=je_label_1           
  movq 0x38(%rax), %r15           #  2097  0xb1483  4      OPC=movq_r64_m64         
  jmpq .L_af650                   #  2098  0xb1487  5      OPC=jmpq_label_1         
.L_b1480:                         #        0xb148c  0      OPC=<label>              
  movq 0x2e99d9(%rip), %rdx       #  2099  0xb148c  7      OPC=movq_r64_m64         
  movq (%rdx,%rax,8), %rax        #  2100  0xb1493  4      OPC=movq_r64_m64         
  testq %rax, %rax                #  2101  0xb1497  3      OPC=testq_r64_r64        
  movq %rax, -0x120(%rbp)         #  2102  0xb149a  7      OPC=movq_m64_r64         
  je .L_b1424                     #  2103  0xb14a1  2      OPC=je_label             
  jmpq .L_af996                   #  2104  0xb14a3  5      OPC=jmpq_label_1         
.L_b149c:                         #        0xb14a8  0      OPC=<label>              
  movq %r11, -0x128(%rbp)         #  2105  0xb14a8  7      OPC=movq_m64_r64         
  movl %r10d, -0x120(%rbp)        #  2106  0xb14af  7      OPC=movl_m32_r32         
  callq .tzset                    #  2107  0xb14b6  5      OPC=callq_label          
  movq -0x110(%rbp), %rax         #  2108  0xb14bb  7      OPC=movq_r64_m64         
  movq -0x128(%rbp), %r11         #  2109  0xb14c2  7      OPC=movq_r64_m64         
  movl -0x120(%rbp), %r10d        #  2110  0xb14c9  7      OPC=movl_r32_m32         
  movb $0x1, (%rax)               #  2111  0xb14d0  3      OPC=movb_m8_imm8         
  jmpq .L_af974                   #  2112  0xb14d3  5      OPC=jmpq_label_1         
.L_b14cc:                         #        0xb14d8  0      OPC=<label>              
  movq %r12, %rdi                 #  2113  0xb14d8  3      OPC=movq_r64_r64         
  movl $0x30, %esi                #  2114  0xb14db  5      OPC=movl_r32_imm32       
  leaq (%r12,%rbx,4), %r12        #  2115  0xb14e0  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  2116  0xb14e4  5      OPC=callq_label          
  movl -0x128(%rbp), %r10d        #  2117  0xb14e9  7      OPC=movl_r32_m32         
  movl -0x130(%rbp), %ecx         #  2118  0xb14f0  6      OPC=movl_r32_m32         
  movq -0x138(%rbp), %r8          #  2119  0xb14f6  7      OPC=movq_r64_m64         
  movq -0x140(%rbp), %r11         #  2120  0xb14fd  7      OPC=movq_r64_m64         
  jmpq .L_aff43                   #  2121  0xb1504  5      OPC=jmpq_label_1         
.L_b14fd:                         #        0xb1509  0      OPC=<label>              
  movq %r12, %rdi                 #  2122  0xb1509  3      OPC=movq_r64_r64         
  movl $0x30, %esi                #  2123  0xb150c  5      OPC=movl_r32_imm32       
  leaq (%r12,%r13,4), %r12        #  2124  0xb1511  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  2125  0xb1515  5      OPC=callq_label          
  movq -0xf0(%rbp), %rax          #  2126  0xb151a  7      OPC=movq_r64_m64         
  movq -0x128(%rbp), %r8          #  2127  0xb1521  7      OPC=movq_r64_m64         
  movq -0x130(%rbp), %r11         #  2128  0xb1528  7      OPC=movq_r64_m64         
  movl 0x10(%rax), %edx           #  2129  0xb152f  3      OPC=movl_r32_m32         
  movl %edx, %ecx                 #  2130  0xb1532  2      OPC=movl_r32_r32         
  jmpq .L_b076c                   #  2131  0xb1534  5      OPC=jmpq_label_1         
.L_b152d:                         #        0xb1539  0      OPC=<label>              
  movq %r12, %rdi                 #  2132  0xb1539  3      OPC=movq_r64_r64         
  movl $0x30, %esi                #  2133  0xb153c  5      OPC=movl_r32_imm32       
  leaq (%r12,%r13,4), %r12        #  2134  0xb1541  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  2135  0xb1545  5      OPC=callq_label          
  movq -0xf0(%rbp), %rax          #  2136  0xb154a  7      OPC=movq_r64_m64         
  movq -0x128(%rbp), %rcx         #  2137  0xb1551  7      OPC=movq_r64_m64         
  movq -0x130(%rbp), %r11         #  2138  0xb1558  7      OPC=movq_r64_m64         
  movl 0x10(%rax), %edx           #  2139  0xb155f  3      OPC=movl_r32_m32         
  movl %edx, %r15d                #  2140  0xb1562  3      OPC=movl_r32_r32         
  jmpq .L_b04a9                   #  2141  0xb1565  5      OPC=jmpq_label_1         
.L_b155e:                         #        0xb156a  0      OPC=<label>              
  movq %r12, %rdi                 #  2142  0xb156a  3      OPC=movq_r64_r64         
  movl $0x30, %esi                #  2143  0xb156d  5      OPC=movl_r32_imm32       
  leaq (%r12,%r13,4), %r12        #  2144  0xb1572  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  2145  0xb1576  5      OPC=callq_label          
  movq -0xf0(%rbp), %rax          #  2146  0xb157b  7      OPC=movq_r64_m64         
  movq -0x128(%rbp), %rcx         #  2147  0xb1582  7      OPC=movq_r64_m64         
  movq -0x130(%rbp), %r11         #  2148  0xb1589  7      OPC=movq_r64_m64         
  movl 0x18(%rax), %edx           #  2149  0xb1590  3      OPC=movl_r32_m32         
  movl %edx, %r15d                #  2150  0xb1593  3      OPC=movl_r32_r32         
  jmpq .L_b05fc                   #  2151  0xb1596  5      OPC=jmpq_label_1         
.L_b158f:                         #        0xb159b  0      OPC=<label>              
  movq %r12, %rdi                 #  2152  0xb159b  3      OPC=movq_r64_r64         
  movl $0x30, %esi                #  2153  0xb159e  5      OPC=movl_r32_imm32       
  leaq (%r12,%r13,4), %r12        #  2154  0xb15a3  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  2155  0xb15a7  5      OPC=callq_label          
  movq -0xf0(%rbp), %rax          #  2156  0xb15ac  7      OPC=movq_r64_m64         
  movq -0x128(%rbp), %rcx         #  2157  0xb15b3  7      OPC=movq_r64_m64         
  movq -0x130(%rbp), %r11         #  2158  0xb15ba  7      OPC=movq_r64_m64         
  movl 0x18(%rax), %edx           #  2159  0xb15c1  3      OPC=movl_r32_m32         
  movl %edx, %r15d                #  2160  0xb15c4  3      OPC=movl_r32_r32         
  jmpq .L_b08ba                   #  2161  0xb15c7  5      OPC=jmpq_label_1         
.L_b15c0:                         #        0xb15cc  0      OPC=<label>              
  xorl %r13d, %r13d               #  2162  0xb15cc  3      OPC=xorl_r32_r32         
  jmpq .L_af910                   #  2163  0xb15cf  5      OPC=jmpq_label_1         
.L_b15c8:                         #        0xb15d4  0      OPC=<label>              
  movq %r12, %rdi                 #  2164  0xb15d4  3      OPC=movq_r64_r64         
  movl $0x30, %esi                #  2165  0xb15d7  5      OPC=movl_r32_imm32       
  leaq (%r12,%rbx,4), %r12        #  2166  0xb15dc  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  2167  0xb15e0  5      OPC=callq_label          
  movl -0x130(%rbp), %r10d        #  2168  0xb15e5  7      OPC=movl_r32_m32         
  movq -0x138(%rbp), %r8          #  2169  0xb15ec  7      OPC=movq_r64_m64         
  movq -0x140(%rbp), %r11         #  2170  0xb15f3  7      OPC=movq_r64_m64         
  jmpq .L_b1304                   #  2171  0xb15fa  5      OPC=jmpq_label_1         
.L_b15f3:                         #        0xb15ff  0      OPC=<label>              
  movq %r13, %rdx                 #  2172  0xb15ff  3      OPC=movq_r64_r64         
  movq %r12, %rdi                 #  2173  0xb1602  3      OPC=movq_r64_r64         
  callq .wmemcpy                  #  2174  0xb1605  5      OPC=callq_label          
  movq -0xe0(%rbp), %r11          #  2175  0xb160a  7      OPC=movq_r64_m64         
  jmpq .L_b0d89                   #  2176  0xb1611  5      OPC=jmpq_label_1         
.L_b160a:                         #        0xb1616  0      OPC=<label>              
  movl $0x30, %esi                #  2177  0xb1616  5      OPC=movl_r32_imm32       
  movq %r12, %rdi                 #  2178  0xb161b  3      OPC=movq_r64_r64         
  leaq (%r12,%r13,4), %r12        #  2179  0xb161e  4      OPC=leaq_r64_m16         
  callq .wmemset                  #  2180  0xb1622  5      OPC=callq_label          
  movq 0x30(%r14), %rsi           #  2181  0xb1627  4      OPC=movq_r64_m64         
  movq -0x128(%rbp), %rcx         #  2182  0xb162b  7      OPC=movq_r64_m64         
  movq -0x130(%rbp), %r11         #  2183  0xb1632  7      OPC=movq_r64_m64         
  jmpq .L_b0d58                   #  2184  0xb1639  5      OPC=jmpq_label_1         
.L_b1632:                         #        0xb163e  0      OPC=<label>              
  xorl %r15d, %r15d               #  2185  0xb163e  3      OPC=xorl_r32_r32         
  jmpq .L_afad9                   #  2186  0xb1641  5      OPC=jmpq_label_1         
  nop                             #  2187  0xb1646  1      OPC=nop                  
  nop                             #  2188  0xb1647  1      OPC=nop                  
  nop                             #  2189  0xb1648  1      OPC=nop                  
  nop                             #  2190  0xb1649  1      OPC=nop                  
  nop                             #  2191  0xb164a  1      OPC=nop                  
  nop                             #  2192  0xb164b  1      OPC=nop                  
                                                                                    
.size __strftime_internal, .-__strftime_internal

