  .text
  .globl __mktime_internal
  .type __mktime_internal, @function

#! file-offset 0xa6b90
#! rip-offset  0xa6b90
#! capacity    1232 bytes

# Text                            #  Line  RIP      Bytes  Opcode               
.__mktime_internal:               #        0xa6b90  0      OPC=<label>          
  pushq %r15                      #  1     0xa6b90  2      OPC=pushq_r64_1      
  pushq %r14                      #  2     0xa6b92  2      OPC=pushq_r64_1      
  pushq %r13                      #  3     0xa6b94  2      OPC=pushq_r64_1      
  pushq %r12                      #  4     0xa6b96  2      OPC=pushq_r64_1      
  movq %rdi, %r13                 #  5     0xa6b98  3      OPC=movq_r64_r64     
  pushq %rbp                      #  6     0xa6b9b  1      OPC=pushq_r64_1      
  pushq %rbx                      #  7     0xa6b9c  1      OPC=pushq_r64_1      
  subq $0x118, %rsp               #  8     0xa6b9d  7      OPC=subq_r64_imm32   
  movl (%rdi), %eax               #  9     0xa6ba4  2      OPC=movl_r32_m32     
  movq %rsi, 0x8(%rsp)            #  10    0xa6ba6  5      OPC=movq_m64_r64     
  movslq 0xc(%rdi), %rsi          #  11    0xa6bab  4      OPC=movslq_r64_m32   
  movq %rdx, 0x40(%rsp)           #  12    0xa6baf  5      OPC=movq_m64_r64     
  movl $0x2aaaaaab, %edx          #  13    0xa6bb4  5      OPC=movl_r32_imm32   
  movl %eax, 0x34(%rsp)           #  14    0xa6bb9  4      OPC=movl_m32_r32     
  movl 0x4(%rdi), %eax            #  15    0xa6bbd  3      OPC=movl_r32_m32     
  movl %eax, 0x14(%rsp)           #  16    0xa6bc0  4      OPC=movl_m32_r32     
  movl 0x8(%rdi), %eax            #  17    0xa6bc4  3      OPC=movl_r32_m32     
  movl 0x10(%rdi), %edi           #  18    0xa6bc7  3      OPC=movl_r32_m32     
  movl %eax, 0x30(%rsp)           #  19    0xa6bca  4      OPC=movl_m32_r32     
  movl 0x20(%r13), %eax           #  20    0xa6bce  4      OPC=movl_r32_m32     
  movl %eax, 0x48(%rsp)           #  21    0xa6bd2  4      OPC=movl_m32_r32     
  movl %edi, %eax                 #  22    0xa6bd6  2      OPC=movl_r32_r32     
  imull %edx                      #  23    0xa6bd8  2      OPC=imull_r32        
  movl %edi, %eax                 #  24    0xa6bda  2      OPC=movl_r32_r32     
  sarl $0x1f, %eax                #  25    0xa6bdc  3      OPC=sarl_r32_imm8    
  sarl $0x1, %edx                 #  26    0xa6bdf  2      OPC=sarl_r32_one     
  movl %edx, %ecx                 #  27    0xa6be1  2      OPC=movl_r32_r32     
  subl %eax, %ecx                 #  28    0xa6be3  2      OPC=subl_r32_r32     
  leal (%rcx,%rcx,2), %eax        #  29    0xa6be5  3      OPC=leal_r32_m16     
  movl %ecx, %ebp                 #  30    0xa6be8  2      OPC=movl_r32_r32     
  movl %edi, %ecx                 #  31    0xa6bea  2      OPC=movl_r32_r32     
  shll $0x2, %eax                 #  32    0xa6bec  3      OPC=shll_r32_imm8    
  subl %eax, %ecx                 #  33    0xa6bef  2      OPC=subl_r32_r32     
  movslq 0x14(%r13), %rax         #  34    0xa6bf1  4      OPC=movslq_r64_m32   
  movl %ecx, %edi                 #  35    0xa6bf5  2      OPC=movl_r32_r32     
  shrl $0x1f, %edi                #  36    0xa6bf7  3      OPC=shrl_r32_imm8    
  subl %edi, %ebp                 #  37    0xa6bfa  2      OPC=subl_r32_r32     
  movslq %ebp, %rbp               #  38    0xa6bfc  3      OPC=movslq_r64_r32   
  addq %rax, %rbp                 #  39    0xa6bff  3      OPC=addq_r64_r64     
  xorl %eax, %eax                 #  40    0xa6c02  2      OPC=xorl_r32_r32     
  testb $0x3, %bpl                #  41    0xa6c04  4      OPC=testb_r8_imm8    
  jne .L_a6c45                    #  42    0xa6c08  2      OPC=jne_label        
  movq %rbp, %rax                 #  43    0xa6c0a  3      OPC=movq_r64_r64     
  movq $0xa3d70a3d70a3d70b, %rdx  #  44    0xa6c0d  10     OPC=movq_r64_imm64   
  imulq %rdx                      #  45    0xa6c17  3      OPC=imulq_r64        
  movq %rbp, %rax                 #  46    0xa6c1a  3      OPC=movq_r64_r64     
  sarq $0x3f, %rax                #  47    0xa6c1d  4      OPC=sarq_r64_imm8    
  addq %rbp, %rdx                 #  48    0xa6c21  3      OPC=addq_r64_r64     
  sarq $0x6, %rdx                 #  49    0xa6c24  4      OPC=sarq_r64_imm8    
  subq %rax, %rdx                 #  50    0xa6c28  3      OPC=subq_r64_r64     
  leaq (%rdx,%rdx,4), %rax        #  51    0xa6c2b  4      OPC=leaq_r64_m16     
  leaq (%rax,%rax,4), %r8         #  52    0xa6c2f  4      OPC=leaq_r64_m16     
  movl $0x1, %eax                 #  53    0xa6c33  5      OPC=movl_r32_imm32   
  shlq $0x2, %r8                  #  54    0xa6c38  4      OPC=shlq_r64_imm8    
  cmpq %r8, %rbp                  #  55    0xa6c3c  3      OPC=cmpq_r64_r64     
  je .L_a6df0                     #  56    0xa6c3f  6      OPC=je_label_1       
.L_a6c45:                         #        0xa6c45  0      OPC=<label>          
  leal (%rdi,%rdi,1), %edx        #  57    0xa6c45  3      OPC=leal_r32_m16     
  xorl %r12d, %r12d               #  58    0xa6c48  3      OPC=xorl_r32_r32     
  addl %edx, %edi                 #  59    0xa6c4b  2      OPC=addl_r32_r32     
  leal (%rcx,%rdi,4), %edx        #  60    0xa6c4d  3      OPC=leal_r32_m16     
  leaq (%rax,%rax,1), %rcx        #  61    0xa6c50  4      OPC=leaq_r64_m16     
  addq %rax, %rcx                 #  62    0xa6c54  3      OPC=addq_r64_r64     
  movslq %edx, %rdx               #  63    0xa6c57  3      OPC=movslq_r64_r32   
  leaq (%rax,%rcx,4), %rax        #  64    0xa6c5a  4      OPC=leaq_r64_m16     
  addq %rdx, %rax                 #  65    0xa6c5e  3      OPC=addq_r64_r64     
  leaq 0xb8798(%rip), %rdx        #  66    0xa6c61  7      OPC=leaq_r64_m16     
  movzwl (%rdx,%rax,2), %eax      #  67    0xa6c68  4      OPC=movzwl_r32_m16   
  subl $0x1, %eax                 #  68    0xa6c6c  3      OPC=subl_r32_imm8    
  cltq                            #  69    0xa6c6f  2      OPC=cltq             
  addq %rsi, %rax                 #  70    0xa6c71  3      OPC=addq_r64_r64     
  movq %rax, 0x18(%rsp)           #  71    0xa6c74  5      OPC=movq_m64_r64     
  movq 0x40(%rsp), %rax           #  72    0xa6c79  5      OPC=movq_r64_m64     
  movq (%rax), %rax               #  73    0xa6c7e  3      OPC=movq_r64_m64     
  movq %rax, 0x38(%rsp)           #  74    0xa6c81  5      OPC=movq_m64_r64     
  movl 0x34(%rsp), %eax           #  75    0xa6c86  4      OPC=movl_r32_m32     
  testl %eax, %eax                #  76    0xa6c8a  2      OPC=testl_r32_r32    
  js .L_a6c98                     #  77    0xa6c8c  2      OPC=js_label         
  cmpl $0x3b, %eax                #  78    0xa6c8e  3      OPC=cmpl_r32_imm8    
  movb $0x3b, %r12b               #  79    0xa6c91  3      OPC=movb_r8_imm8     
  cmovlel %eax, %r12d             #  80    0xa6c94  4      OPC=cmovlel_r32_r32  
.L_a6c98:                         #        0xa6c98  0      OPC=<label>          
  movl 0x38(%rsp), %eax           #  81    0xa6c98  4      OPC=movl_r32_m32     
  movl $0x46, %r9d                #  82    0xa6c9c  6      OPC=movl_r32_imm32   
  movl %r12d, %r8d                #  83    0xa6ca2  3      OPC=movl_r32_r32     
  movq %rbp, %rdi                 #  84    0xa6ca5  3      OPC=movq_r64_r64     
  movl $0x6, %ebx                 #  85    0xa6ca8  5      OPC=movl_r32_imm32   
  negl %eax                       #  86    0xa6cad  2      OPC=negl_r32         
  pushq %rax                      #  87    0xa6caf  1      OPC=pushq_r64_1      
  pushq $0x0                      #  88    0xa6cb0  2      OPC=pushq_imm8       
  pushq $0x0                      #  89    0xa6cb2  2      OPC=pushq_imm8       
  pushq $0x0                      #  90    0xa6cb4  2      OPC=pushq_imm8       
  movq 0x38(%rsp), %rsi           #  91    0xa6cb6  5      OPC=movq_r64_m64     
  movl 0x34(%rsp), %ecx           #  92    0xa6cbb  4      OPC=movl_r32_m32     
  movl 0x50(%rsp), %edx           #  93    0xa6cbf  4      OPC=movl_r32_m32     
  callq .ydhms_diff               #  94    0xa6cc3  5      OPC=callq_label      
  addq $0x20, %rsp                #  95    0xa6cc8  4      OPC=addq_r64_imm8    
  movq %rax, %r15                 #  96    0xa6ccc  3      OPC=movq_r64_r64     
  movq %rax, 0x58(%rsp)           #  97    0xa6ccf  5      OPC=movq_m64_r64     
  movq %rax, 0x80(%rsp)           #  98    0xa6cd4  8      OPC=movq_m64_r64     
  movq %rax, 0x78(%rsp)           #  99    0xa6cdc  5      OPC=movq_m64_r64     
  leaq 0x90(%rsp), %rax           #  100   0xa6ce1  8      OPC=leaq_r64_m16     
  xorl %esi, %esi                 #  101   0xa6ce9  2      OPC=xorl_r32_r32     
  movq %r13, 0x50(%rsp)           #  102   0xa6ceb  5      OPC=movq_m64_r64     
  movq %r15, %r13                 #  103   0xa6cf0  3      OPC=movq_r64_r64     
  movq %rax, 0x20(%rsp)           #  104   0xa6cf3  5      OPC=movq_m64_r64     
  leaq 0x78(%rsp), %rax           #  105   0xa6cf8  5      OPC=leaq_r64_m16     
  movl %esi, %r15d                #  106   0xa6cfd  3      OPC=movl_r32_r32     
  movq %rax, 0x28(%rsp)           #  107   0xa6d00  5      OPC=movq_m64_r64     
  jmpq .L_a6d40                   #  108   0xa6d05  2      OPC=jmpq_label       
  nop                             #  109   0xa6d07  1      OPC=nop              
  nop                             #  110   0xa6d08  1      OPC=nop              
  nop                             #  111   0xa6d09  1      OPC=nop              
  nop                             #  112   0xa6d0a  1      OPC=nop              
  nop                             #  113   0xa6d0b  1      OPC=nop              
  nop                             #  114   0xa6d0c  1      OPC=nop              
  nop                             #  115   0xa6d0d  1      OPC=nop              
  nop                             #  116   0xa6d0e  1      OPC=nop              
  nop                             #  117   0xa6d0f  1      OPC=nop              
.L_a6d10:                         #        0xa6d10  0      OPC=<label>          
  subl $0x1, %ebx                 #  118   0xa6d10  3      OPC=subl_r32_imm8    
  je .L_a6dd0                     #  119   0xa6d13  6      OPC=je_label_1       
  movl 0xb0(%rsp), %r8d           #  120   0xa6d19  8      OPC=movl_r32_m32     
  xorl %r15d, %r15d               #  121   0xa6d21  3      OPC=xorl_r32_r32     
  movq 0x80(%rsp), %r13           #  122   0xa6d24  8      OPC=movq_r64_m64     
  movq %rax, 0x78(%rsp)           #  123   0xa6d2c  5      OPC=movq_m64_r64     
  movq %r14, 0x80(%rsp)           #  124   0xa6d31  8      OPC=movq_m64_r64     
  testl %r8d, %r8d                #  125   0xa6d39  3      OPC=testl_r32_r32    
  setne %r15b                     #  126   0xa6d3c  4      OPC=setne_r8         
.L_a6d40:                         #        0xa6d40  0      OPC=<label>          
  movq 0x8(%rsp), %rdi            #  127   0xa6d40  5      OPC=movq_r64_m64     
  movq 0x20(%rsp), %rdx           #  128   0xa6d45  5      OPC=movq_r64_m64     
  movq 0x28(%rsp), %rsi           #  129   0xa6d4a  5      OPC=movq_r64_m64     
  callq .ranged_convert           #  130   0xa6d4f  5      OPC=callq_label      
  movq 0x78(%rsp), %r14           #  131   0xa6d54  5      OPC=movq_r64_m64     
  subq $0x8, %rsp                 #  132   0xa6d59  4      OPC=subq_r64_imm8    
  movq %rbp, %rdi                 #  133   0xa6d5d  3      OPC=movq_r64_r64     
  pushq %rax                      #  134   0xa6d60  1      OPC=pushq_r64_1      
  movl 0x24(%rsp), %ecx           #  135   0xa6d61  4      OPC=movl_r32_m32     
  movl %r12d, %r8d                #  136   0xa6d65  3      OPC=movl_r32_r32     
  movl 0x40(%rsp), %edx           #  137   0xa6d68  4      OPC=movl_r32_m32     
  movq 0x28(%rsp), %rsi           #  138   0xa6d6c  5      OPC=movq_r64_m64     
  movq %r14, %r9                  #  139   0xa6d71  3      OPC=movq_r64_r64     
  callq .guess_time_tm_isra_0     #  140   0xa6d74  5      OPC=callq_label      
  cmpq %rax, %r14                 #  141   0xa6d79  3      OPC=cmpq_r64_r64     
  popq %rsi                       #  142   0xa6d7c  1      OPC=popq_r64_1       
  popq %rdi                       #  143   0xa6d7d  1      OPC=popq_r64_1       
  je .L_a6e20                     #  144   0xa6d7e  6      OPC=je_label_1       
  cmpq %r14, %r13                 #  145   0xa6d84  3      OPC=cmpq_r64_r64     
  jne .L_a6d10                    #  146   0xa6d87  2      OPC=jne_label        
  cmpq 0x80(%rsp), %r13           #  147   0xa6d89  8      OPC=cmpq_r64_m64     
  je .L_a6d10                     #  148   0xa6d91  6      OPC=je_label_1       
  movl 0xb0(%rsp), %edx           #  149   0xa6d97  7      OPC=movl_r32_m32     
  testl %edx, %edx                #  150   0xa6d9e  2      OPC=testl_r32_r32    
  js .L_a6dbc                     #  151   0xa6da0  2      OPC=js_label         
  movl 0x48(%rsp), %r9d           #  152   0xa6da2  5      OPC=movl_r32_m32     
  testl %r9d, %r9d                #  153   0xa6da7  3      OPC=testl_r32_r32    
  js .L_a6e08                     #  154   0xa6daa  2      OPC=js_label         
  setne %cl                       #  155   0xa6dac  3      OPC=setne_r8         
  testl %edx, %edx                #  156   0xa6daf  2      OPC=testl_r32_r32    
  setne %dl                       #  157   0xa6db1  3      OPC=setne_r8         
  cmpb %dl, %cl                   #  158   0xa6db4  2      OPC=cmpb_r8_r8       
  je .L_a6d10                     #  159   0xa6db6  6      OPC=je_label_1       
.L_a6dbc:                         #        0xa6dbc  0      OPC=<label>          
  movq %r13, %r15                 #  160   0xa6dbc  3      OPC=movq_r64_r64     
  movq 0x50(%rsp), %r13           #  161   0xa6dbf  5      OPC=movq_r64_m64     
  movq %r15, %r10                 #  162   0xa6dc4  3      OPC=movq_r64_r64     
  jmpq .L_a6f5d                   #  163   0xa6dc7  5      OPC=jmpq_label_1     
  nop                             #  164   0xa6dcc  1      OPC=nop              
  nop                             #  165   0xa6dcd  1      OPC=nop              
  nop                             #  166   0xa6dce  1      OPC=nop              
  nop                             #  167   0xa6dcf  1      OPC=nop              
.L_a6dd0:                         #        0xa6dd0  0      OPC=<label>          
  movq $0xffffffff, %r10          #  168   0xa6dd0  7      OPC=movq_r64_imm32   
.L_a6dd7:                         #        0xa6dd7  0      OPC=<label>          
  addq $0x118, %rsp               #  169   0xa6dd7  7      OPC=addq_r64_imm32   
  movq %r10, %rax                 #  170   0xa6dde  3      OPC=movq_r64_r64     
  popq %rbx                       #  171   0xa6de1  1      OPC=popq_r64_1       
  popq %rbp                       #  172   0xa6de2  1      OPC=popq_r64_1       
  popq %r12                       #  173   0xa6de3  2      OPC=popq_r64_1       
  popq %r13                       #  174   0xa6de5  2      OPC=popq_r64_1       
  popq %r14                       #  175   0xa6de7  2      OPC=popq_r64_1       
  popq %r15                       #  176   0xa6de9  2      OPC=popq_r64_1       
  retq                            #  177   0xa6deb  1      OPC=retq             
  nop                             #  178   0xa6dec  1      OPC=nop              
  nop                             #  179   0xa6ded  1      OPC=nop              
  nop                             #  180   0xa6dee  1      OPC=nop              
  nop                             #  181   0xa6def  1      OPC=nop              
.L_a6df0:                         #        0xa6df0  0      OPC=<label>          
  andl $0x3, %edx                 #  182   0xa6df0  3      OPC=andl_r32_imm8    
  xorl %eax, %eax                 #  183   0xa6df3  2      OPC=xorl_r32_r32     
  cmpq $0x1, %rdx                 #  184   0xa6df5  4      OPC=cmpq_r64_imm8    
  sete %al                        #  185   0xa6df9  3      OPC=sete_r8          
  jmpq .L_a6c45                   #  186   0xa6dfc  5      OPC=jmpq_label_1     
  nop                             #  187   0xa6e01  1      OPC=nop              
  nop                             #  188   0xa6e02  1      OPC=nop              
  nop                             #  189   0xa6e03  1      OPC=nop              
  nop                             #  190   0xa6e04  1      OPC=nop              
  nop                             #  191   0xa6e05  1      OPC=nop              
  nop                             #  192   0xa6e06  1      OPC=nop              
  nop                             #  193   0xa6e07  1      OPC=nop              
.L_a6e08:                         #        0xa6e08  0      OPC=<label>          
  testl %edx, %edx                #  194   0xa6e08  2      OPC=testl_r32_r32    
  setne %dl                       #  195   0xa6e0a  3      OPC=setne_r8         
  movzbl %dl, %edx                #  196   0xa6e0d  3      OPC=movzbl_r32_r8    
  cmpl %edx, %r15d                #  197   0xa6e10  3      OPC=cmpl_r32_r32     
  jg .L_a6d10                     #  198   0xa6e13  6      OPC=jg_label_1       
  jmpq .L_a6dbc                   #  199   0xa6e19  2      OPC=jmpq_label       
  nop                             #  200   0xa6e1b  1      OPC=nop              
  nop                             #  201   0xa6e1c  1      OPC=nop              
  nop                             #  202   0xa6e1d  1      OPC=nop              
  nop                             #  203   0xa6e1e  1      OPC=nop              
  nop                             #  204   0xa6e1f  1      OPC=nop              
.L_a6e20:                         #        0xa6e20  0      OPC=<label>          
  movl 0x48(%rsp), %esi           #  205   0xa6e20  4      OPC=movl_r32_m32     
  movl 0xb0(%rsp), %edx           #  206   0xa6e24  7      OPC=movl_r32_m32     
  movq %r14, %r10                 #  207   0xa6e2b  3      OPC=movq_r64_r64     
  movq 0x50(%rsp), %r13           #  208   0xa6e2e  5      OPC=movq_r64_m64     
  testl %esi, %esi                #  209   0xa6e33  2      OPC=testl_r32_r32    
  sete 0x50(%rsp)                 #  210   0xa6e35  5      OPC=sete_m8          
  movzbl 0x50(%rsp), %ebx         #  211   0xa6e3a  5      OPC=movzbl_r32_m8    
  testl %edx, %edx                #  212   0xa6e3f  2      OPC=testl_r32_r32    
  sete %cl                        #  213   0xa6e41  3      OPC=sete_r8          
  cmpb %cl, %bl                   #  214   0xa6e44  2      OPC=cmpb_r8_r8       
  je .L_a6f5d                     #  215   0xa6e46  6      OPC=je_label_1       
  testl %edx, %edx                #  216   0xa6e4c  2      OPC=testl_r32_r32    
  js .L_a704d                     #  217   0xa6e4e  6      OPC=js_label_1       
  testl %esi, %esi                #  218   0xa6e54  2      OPC=testl_r32_r32    
  movl $0x92c70, %r15d            #  219   0xa6e56  6      OPC=movl_r32_imm32   
  js .L_a704d                     #  220   0xa6e5c  6      OPC=js_label_1       
  leaq 0xd0(%rsp), %rax           #  221   0xa6e62  8      OPC=leaq_r64_m16     
  movq %rbp, 0x68(%rsp)           #  222   0xa6e6a  5      OPC=movq_m64_r64     
  movl %r15d, %r14d               #  223   0xa6e6f  3      OPC=movl_r32_r32     
  movq %rax, 0x48(%rsp)           #  224   0xa6e72  5      OPC=movq_m64_r64     
  leaq 0x88(%rsp), %rax           #  225   0xa6e77  8      OPC=leaq_r64_m16     
  movq %rax, 0x60(%rsp)           #  226   0xa6e7f  5      OPC=movq_m64_r64     
  jmpq .L_a6ea4                   #  227   0xa6e84  2      OPC=jmpq_label       
  nop                             #  228   0xa6e86  1      OPC=nop              
  nop                             #  229   0xa6e87  1      OPC=nop              
  nop                             #  230   0xa6e88  1      OPC=nop              
  nop                             #  231   0xa6e89  1      OPC=nop              
  nop                             #  232   0xa6e8a  1      OPC=nop              
  nop                             #  233   0xa6e8b  1      OPC=nop              
  nop                             #  234   0xa6e8c  1      OPC=nop              
  nop                             #  235   0xa6e8d  1      OPC=nop              
  nop                             #  236   0xa6e8e  1      OPC=nop              
  nop                             #  237   0xa6e8f  1      OPC=nop              
.L_a6e90:                         #        0xa6e90  0      OPC=<label>          
  addl $0x92c70, %r14d            #  238   0xa6e90  7      OPC=addl_r32_imm32   
  cmpl $0x100dc400, %r14d         #  239   0xa6e97  7      OPC=cmpl_r32_imm32   
  je .L_a6f5d                     #  240   0xa6e9e  6      OPC=je_label_1       
.L_a6ea4:                         #        0xa6ea4  0      OPC=<label>          
  movl %r14d, %r15d               #  241   0xa6ea4  3      OPC=movl_r32_r32     
  leal (%r14,%r14,1), %ebp        #  242   0xa6ea7  4      OPC=leal_r32_m16     
  movl $0x2, %ebx                 #  243   0xa6eab  5      OPC=movl_r32_imm32   
  negl %r15d                      #  244   0xa6eb0  3      OPC=negl_r32         
.L_a6eb3:                         #        0xa6eb3  0      OPC=<label>          
  movslq %r15d, %rax              #  245   0xa6eb3  3      OPC=movslq_r64_r32   
  movl %r15d, %edx                #  246   0xa6eb6  3      OPC=movl_r32_r32     
  addq %r10, %rax                 #  247   0xa6eb9  3      OPC=addq_r64_r64     
  cmpq %r10, %rax                 #  248   0xa6ebc  3      OPC=cmpq_r64_r64     
  setge %cl                       #  249   0xa6ebf  3      OPC=setge_r8         
  shrl $0x1f, %edx                #  250   0xa6ec2  3      OPC=shrl_r32_imm8    
  cmpb %dl, %cl                   #  251   0xa6ec5  2      OPC=cmpb_r8_r8       
  je .L_a6f00                     #  252   0xa6ec7  2      OPC=je_label         
  movq 0x48(%rsp), %rdx           #  253   0xa6ec9  5      OPC=movq_r64_m64     
  movq 0x60(%rsp), %rsi           #  254   0xa6ece  5      OPC=movq_r64_m64     
  movq 0x8(%rsp), %rdi            #  255   0xa6ed3  5      OPC=movq_r64_m64     
  movq %rax, 0x88(%rsp)           #  256   0xa6ed8  8      OPC=movq_m64_r64     
  callq .ranged_convert           #  257   0xa6ee0  5      OPC=callq_label      
  movl 0xf0(%rsp), %eax           #  258   0xa6ee5  7      OPC=movl_r32_m32     
  testl %eax, %eax                #  259   0xa6eec  2      OPC=testl_r32_r32    
  sete %dl                        #  260   0xa6eee  3      OPC=sete_r8          
  cmpb %dl, 0x50(%rsp)            #  261   0xa6ef1  4      OPC=cmpb_m8_r8       
  je .L_a6f10                     #  262   0xa6ef5  2      OPC=je_label         
  testl %eax, %eax                #  263   0xa6ef7  2      OPC=testl_r32_r32    
  js .L_a6f10                     #  264   0xa6ef9  2      OPC=js_label         
  movq 0x78(%rsp), %r10           #  265   0xa6efb  5      OPC=movq_r64_m64     
.L_a6f00:                         #        0xa6f00  0      OPC=<label>          
  addl %ebp, %r15d                #  266   0xa6f00  3      OPC=addl_r32_r32     
  cmpl $0x1, %ebx                 #  267   0xa6f03  3      OPC=cmpl_r32_imm8    
  je .L_a6e90                     #  268   0xa6f06  2      OPC=je_label         
  movl $0x1, %ebx                 #  269   0xa6f08  5      OPC=movl_r32_imm32   
  jmpq .L_a6eb3                   #  270   0xa6f0d  2      OPC=jmpq_label       
  nop                             #  271   0xa6f0f  1      OPC=nop              
.L_a6f10:                         #        0xa6f10  0      OPC=<label>          
  movq 0x68(%rsp), %rbp           #  272   0xa6f10  5      OPC=movq_r64_m64     
  subq $0x8, %rsp                 #  273   0xa6f15  4      OPC=subq_r64_imm8    
  movl %r12d, %r8d                #  274   0xa6f19  3      OPC=movl_r32_r32     
  pushq 0x50(%rsp)                #  275   0xa6f1c  4      OPC=pushq_m64        
  movq 0x28(%rsp), %rsi           #  276   0xa6f20  5      OPC=movq_r64_m64     
  movq 0x98(%rsp), %r9            #  277   0xa6f25  8      OPC=movq_r64_m64     
  movl 0x24(%rsp), %ecx           #  278   0xa6f2d  4      OPC=movl_r32_m32     
  movl 0x40(%rsp), %edx           #  279   0xa6f31  4      OPC=movl_r32_m32     
  movq %rbp, %rdi                 #  280   0xa6f35  3      OPC=movq_r64_r64     
  callq .guess_time_tm_isra_0     #  281   0xa6f38  5      OPC=callq_label      
  popq %rdx                       #  282   0xa6f3d  1      OPC=popq_r64_1       
  popq %rcx                       #  283   0xa6f3e  1      OPC=popq_r64_1       
  movq 0x20(%rsp), %rdx           #  284   0xa6f3f  5      OPC=movq_r64_m64     
  movq 0x28(%rsp), %rsi           #  285   0xa6f44  5      OPC=movq_r64_m64     
  movq 0x8(%rsp), %rdi            #  286   0xa6f49  5      OPC=movq_r64_m64     
  movq %rax, 0x78(%rsp)           #  287   0xa6f4e  5      OPC=movq_m64_r64     
  callq .ranged_convert           #  288   0xa6f53  5      OPC=callq_label      
  movq 0x78(%rsp), %r10           #  289   0xa6f58  5      OPC=movq_r64_m64     
.L_a6f5d:                         #        0xa6f5d  0      OPC=<label>          
  movq 0x38(%rsp), %rax           #  290   0xa6f5d  5      OPC=movq_r64_m64     
  subq 0x58(%rsp), %rax           #  291   0xa6f62  5      OPC=subq_r64_m64     
  movq 0x40(%rsp), %rbx           #  292   0xa6f67  5      OPC=movq_r64_m64     
  movl 0x90(%rsp), %edx           #  293   0xa6f6c  7      OPC=movl_r32_m32     
  addq %r10, %rax                 #  294   0xa6f73  3      OPC=addq_r64_r64     
  movq %rax, (%rbx)               #  295   0xa6f76  3      OPC=movq_m64_r64     
  movl 0x34(%rsp), %ebx           #  296   0xa6f79  4      OPC=movl_r32_m32     
  cmpl %edx, %ebx                 #  297   0xa6f7d  2      OPC=cmpl_r32_r32     
  je .L_a6ff4                     #  298   0xa6f7f  2      OPC=je_label         
  testl %r12d, %r12d              #  299   0xa6f81  3      OPC=testl_r32_r32    
  movslq %ebx, %rcx               #  300   0xa6f84  3      OPC=movslq_r64_r32   
  sete %al                        #  301   0xa6f87  3      OPC=sete_r8          
  cmpl $0x3c, %edx                #  302   0xa6f8a  3      OPC=cmpl_r32_imm8    
  sete %dl                        #  303   0xa6f8d  3      OPC=sete_r8          
  addq %r10, %rcx                 #  304   0xa6f90  3      OPC=addq_r64_r64     
  movzbl %dl, %edx                #  305   0xa6f93  3      OPC=movzbl_r32_r8    
  andl %edx, %eax                 #  306   0xa6f96  2      OPC=andl_r32_r32     
  movl %ebx, %edx                 #  307   0xa6f98  2      OPC=movl_r32_r32     
  subl %r12d, %eax                #  308   0xa6f9a  3      OPC=subl_r32_r32     
  cmpq %r10, %rcx                 #  309   0xa6f9d  3      OPC=cmpq_r64_r64     
  setge %sil                      #  310   0xa6fa0  4      OPC=setge_r8         
  shrl $0x1f, %edx                #  311   0xa6fa4  3      OPC=shrl_r32_imm8    
  cmpb %dl, %sil                  #  312   0xa6fa7  3      OPC=cmpb_r8_r8       
  je .L_a6dd0                     #  313   0xa6faa  6      OPC=je_label_1       
  movslq %eax, %rdx               #  314   0xa6fb0  3      OPC=movslq_r64_r32   
  addq %rcx, %rdx                 #  315   0xa6fb3  3      OPC=addq_r64_r64     
  cmpq %rdx, %rcx                 #  316   0xa6fb6  3      OPC=cmpq_r64_r64     
  setle %cl                       #  317   0xa6fb9  3      OPC=setle_r8         
  shrl $0x1f, %eax                #  318   0xa6fbc  3      OPC=shrl_r32_imm8    
  cmpb %al, %cl                   #  319   0xa6fbf  2      OPC=cmpb_r8_r8       
  je .L_a6dd0                     #  320   0xa6fc1  6      OPC=je_label_1       
  movq %rdx, 0x80(%rsp)           #  321   0xa6fc7  8      OPC=movq_m64_r64     
  leaq 0x80(%rsp), %rdi           #  322   0xa6fcf  8      OPC=leaq_r64_m16     
  movq 0x20(%rsp), %rsi           #  323   0xa6fd7  5      OPC=movq_r64_m64     
  movq 0x8(%rsp), %rax            #  324   0xa6fdc  5      OPC=movq_r64_m64     
  callq %rax                      #  325   0xa6fe1  2      OPC=callq_r64        
  testq %rax, %rax                #  326   0xa6fe3  3      OPC=testq_r64_r64    
  je .L_a6dd0                     #  327   0xa6fe6  6      OPC=je_label_1       
  movq 0x80(%rsp), %r10           #  328   0xa6fec  8      OPC=movq_r64_m64     
.L_a6ff4:                         #        0xa6ff4  0      OPC=<label>          
  movq 0x90(%rsp), %rax           #  329   0xa6ff4  8      OPC=movq_r64_m64     
  movq %rax, (%r13)               #  330   0xa6ffc  4      OPC=movq_m64_r64     
  movq 0x98(%rsp), %rax           #  331   0xa7000  8      OPC=movq_r64_m64     
  movq %rax, 0x8(%r13)            #  332   0xa7008  4      OPC=movq_m64_r64     
  movq 0xa0(%rsp), %rax           #  333   0xa700c  8      OPC=movq_r64_m64     
  movq %rax, 0x10(%r13)           #  334   0xa7014  4      OPC=movq_m64_r64     
  movq 0xa8(%rsp), %rax           #  335   0xa7018  8      OPC=movq_r64_m64     
  movq %rax, 0x18(%r13)           #  336   0xa7020  4      OPC=movq_m64_r64     
  movq 0xb0(%rsp), %rax           #  337   0xa7024  8      OPC=movq_r64_m64     
  movq %rax, 0x20(%r13)           #  338   0xa702c  4      OPC=movq_m64_r64     
  movq 0xb8(%rsp), %rax           #  339   0xa7030  8      OPC=movq_r64_m64     
  movq %rax, 0x28(%r13)           #  340   0xa7038  4      OPC=movq_m64_r64     
  movq 0xc0(%rsp), %rax           #  341   0xa703c  8      OPC=movq_r64_m64     
  movq %rax, 0x30(%r13)           #  342   0xa7044  4      OPC=movq_m64_r64     
  jmpq .L_a6dd7                   #  343   0xa7048  5      OPC=jmpq_label_1     
.L_a704d:                         #        0xa704d  0      OPC=<label>          
  movq %rax, %r10                 #  344   0xa704d  3      OPC=movq_r64_r64     
  jmpq .L_a6f5d                   #  345   0xa7050  5      OPC=jmpq_label_1     
  nop                             #  346   0xa7055  1      OPC=nop              
  nop                             #  347   0xa7056  1      OPC=nop              
  nop                             #  348   0xa7057  1      OPC=nop              
  nop                             #  349   0xa7058  1      OPC=nop              
  nop                             #  350   0xa7059  1      OPC=nop              
  nop                             #  351   0xa705a  1      OPC=nop              
  nop                             #  352   0xa705b  1      OPC=nop              
  nop                             #  353   0xa705c  1      OPC=nop              
  nop                             #  354   0xa705d  1      OPC=nop              
  nop                             #  355   0xa705e  1      OPC=nop              
  nop                             #  356   0xa705f  1      OPC=nop              
                                                                                
.size __mktime_internal, .-__mktime_internal

