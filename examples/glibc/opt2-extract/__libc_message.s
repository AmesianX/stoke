  .text
  .globl __libc_message
  .type __libc_message, @function

#! file-offset 0x6ec90
#! rip-offset  0x6ec90
#! capacity    768 bytes

# Text                          #  Line  RIP      Bytes  Opcode                
.__libc_message:                #        0x6ec90  0      OPC=<label>           
  pushq %rbp                    #  1     0x6ec90  1      OPC=pushq_r64_1       
  movq %rsp, %rbp               #  2     0x6ec91  3      OPC=movq_r64_r64      
  pushq %r15                    #  3     0x6ec94  2      OPC=pushq_r64_1       
  pushq %r14                    #  4     0x6ec96  2      OPC=pushq_r64_1       
  leaq 0x10(%rbp), %rax         #  5     0x6ec98  4      OPC=leaq_r64_m16      
  pushq %r13                    #  6     0x6ec9c  2      OPC=pushq_r64_1       
  pushq %r12                    #  7     0x6ec9e  2      OPC=pushq_r64_1       
  pushq %rbx                    #  8     0x6eca0  1      OPC=pushq_r64_1       
  movl %edi, %r15d              #  9     0x6eca1  3      OPC=movl_r32_r32      
  leaq 0xf5b0d(%rip), %rdi      #  10    0x6eca4  7      OPC=leaq_r64_m16      
  movq %rsi, %rbx               #  11    0x6ecab  3      OPC=movq_r64_r64      
  subq $0x78, %rsp              #  12    0x6ecae  4      OPC=subq_r64_imm8     
  movq %rax, -0x70(%rbp)        #  13    0x6ecb2  4      OPC=movq_m64_r64      
  leaq -0x60(%rbp), %rax        #  14    0x6ecb6  4      OPC=leaq_r64_m16      
  movq %rdx, -0x50(%rbp)        #  15    0x6ecba  4      OPC=movq_m64_r64      
  movq %rcx, -0x48(%rbp)        #  16    0x6ecbe  4      OPC=movq_m64_r64      
  movq %r8, -0x40(%rbp)         #  17    0x6ecc2  4      OPC=movq_m64_r64      
  movq %r9, -0x38(%rbp)         #  18    0x6ecc6  4      OPC=movq_m64_r64      
  movl $0x10, -0x78(%rbp)       #  19    0x6ecca  7      OPC=movl_m32_imm32    
  movq %rax, -0x68(%rbp)        #  20    0x6ecd1  4      OPC=movq_m64_r64      
  callq .__libc_secure_getenv   #  21    0x6ecd5  5      OPC=callq_label       
  testq %rax, %rax              #  22    0x6ecda  3      OPC=testq_r64_r64     
  je .L_6ece8                   #  23    0x6ecdd  2      OPC=je_label          
  cmpb $0x0, (%rax)             #  24    0x6ecdf  3      OPC=cmpb_m8_imm8      
  jne .L_6ee87                  #  25    0x6ece2  6      OPC=jne_label_1       
.L_6ece8:                       #        0x6ece8  0      OPC=<label>           
  movl $0x902, %esi             #  26    0x6ece8  5      OPC=movl_r32_imm32    
  leaq 0xf4cab(%rip), %rdi      #  27    0x6eced  7      OPC=leaq_r64_m16      
  movl $0x2, %eax               #  28    0x6ecf4  5      OPC=movl_r32_imm32    
  syscall                       #  29    0x6ecf9  2      OPC=syscall           
  cmpq $0xfffff000, %rax        #  30    0x6ecfb  6      OPC=cmpq_rax_imm32    
  ja .L_6ee7b                   #  31    0x6ed01  6      OPC=ja_label_1        
  cmpl $0xffffffff, %eax        #  32    0x6ed07  6      OPC=cmpl_r32_imm32    
  nop                           #  33    0x6ed0d  1      OPC=nop               
  nop                           #  34    0x6ed0e  1      OPC=nop               
  nop                           #  35    0x6ed0f  1      OPC=nop               
  movl %eax, -0x84(%rbp)        #  36    0x6ed10  6      OPC=movl_m32_r32      
  je .L_6ee87                   #  37    0x6ed16  6      OPC=je_label_1        
  movzbl (%rbx), %r12d          #  38    0x6ed1c  4      OPC=movzbl_r32_m8     
  xorl %r14d, %r14d             #  39    0x6ed20  3      OPC=xorl_r32_r32      
  xorl %r13d, %r13d             #  40    0x6ed23  3      OPC=xorl_r32_r32      
  testb %r12b, %r12b            #  41    0x6ed26  3      OPC=testb_r8_r8       
  je .L_6eea4                   #  42    0x6ed29  6      OPC=je_label_1        
  nop                           #  43    0x6ed2f  1      OPC=nop               
  nop                           #  44    0x6ed30  1      OPC=nop               
  nop                           #  45    0x6ed31  1      OPC=nop               
  nop                           #  46    0x6ed32  1      OPC=nop               
  nop                           #  47    0x6ed33  1      OPC=nop               
  nop                           #  48    0x6ed34  1      OPC=nop               
  nop                           #  49    0x6ed35  1      OPC=nop               
.L_6ed30:                       #        0x6ed36  0      OPC=<label>           
  movl %r12d, %edx              #  50    0x6ed36  3      OPC=movl_r32_r32      
  movq %rbx, %rax               #  51    0x6ed39  3      OPC=movq_r64_r64      
  jmpq .L_6ed55                 #  52    0x6ed3c  2      OPC=jmpq_label        
  nop                           #  53    0x6ed3e  1      OPC=nop               
  nop                           #  54    0x6ed3f  1      OPC=nop               
  nop                           #  55    0x6ed40  1      OPC=nop               
  nop                           #  56    0x6ed41  1      OPC=nop               
  nop                           #  57    0x6ed42  1      OPC=nop               
  nop                           #  58    0x6ed43  1      OPC=nop               
  nop                           #  59    0x6ed44  1      OPC=nop               
  nop                           #  60    0x6ed45  1      OPC=nop               
.L_6ed40:                       #        0x6ed46  0      OPC=<label>           
  leaq 0x1(%rax), %rdi          #  61    0x6ed46  4      OPC=leaq_r64_m16      
  movl $0x25, %esi              #  62    0x6ed4a  5      OPC=movl_r32_imm32    
  callq .strchrnul              #  63    0x6ed4f  5      OPC=callq_label       
  movzbl (%rax), %edx           #  64    0x6ed54  3      OPC=movzbl_r32_m8     
  testb %dl, %dl                #  65    0x6ed57  2      OPC=testb_r8_r8       
  je .L_6ed60                   #  66    0x6ed59  2      OPC=je_label          
.L_6ed55:                       #        0x6ed5b  0      OPC=<label>           
  cmpb $0x25, %dl               #  67    0x6ed5b  3      OPC=cmpb_r8_imm8      
  jne .L_6ed40                  #  68    0x6ed5e  2      OPC=jne_label         
  cmpb $0x73, 0x1(%rax)         #  69    0x6ed60  4      OPC=cmpb_m8_imm8      
  jne .L_6ed40                  #  70    0x6ed64  2      OPC=jne_label         
.L_6ed60:                       #        0x6ed66  0      OPC=<label>           
  cmpb $0x25, %r12b             #  71    0x6ed66  4      OPC=cmpb_r8_imm8      
  je .L_6eda8                   #  72    0x6ed6a  2      OPC=je_label          
.L_6ed66:                       #        0x6ed6c  0      OPC=<label>           
  movq %rax, %rsi               #  73    0x6ed6c  3      OPC=movq_r64_r64      
  movq %rbx, %rcx               #  74    0x6ed6f  3      OPC=movq_r64_r64      
  subq %rbx, %rsi               #  75    0x6ed72  3      OPC=subq_r64_r64      
  movq %rax, %rbx               #  76    0x6ed75  3      OPC=movq_r64_r64      
.L_6ed72:                       #        0x6ed78  0      OPC=<label>           
  subq $0x30, %rsp              #  77    0x6ed78  4      OPC=subq_r64_imm8     
  movl $0x10, %edi              #  78    0x6ed7c  5      OPC=movl_r32_imm32    
  leal 0x1(%r14), %r10d         #  79    0x6ed81  4      OPC=leal_r32_m16      
  leaq 0xf(%rsp), %rdx          #  80    0x6ed85  5      OPC=leaq_r64_m16      
  andq $0xf0, %rdx              #  81    0x6ed8a  4      OPC=andq_r64_imm8     
  movq %rcx, (%rdx)             #  82    0x6ed8e  3      OPC=movq_m64_r64      
  movq %rsi, 0x8(%rdx)          #  83    0x6ed91  4      OPC=movq_m64_r64      
  movq %r13, 0x10(%rdx)         #  84    0x6ed95  4      OPC=movq_m64_r64      
  movzbl (%rbx), %r12d          #  85    0x6ed99  4      OPC=movzbl_r32_m8     
  testb %r12b, %r12b            #  86    0x6ed9d  3      OPC=testb_r8_r8       
  je .L_6ede8                   #  87    0x6eda0  2      OPC=je_label          
  movslq %r10d, %r14            #  88    0x6eda2  3      OPC=movslq_r64_r32    
  movq %rdx, %r13               #  89    0x6eda5  3      OPC=movq_r64_r64      
  jmpq .L_6ed30                 #  90    0x6eda8  2      OPC=jmpq_label        
  nop                           #  91    0x6edaa  1      OPC=nop               
  nop                           #  92    0x6edab  1      OPC=nop               
  nop                           #  93    0x6edac  1      OPC=nop               
  nop                           #  94    0x6edad  1      OPC=nop               
.L_6eda8:                       #        0x6edae  0      OPC=<label>           
  cmpb $0x73, 0x1(%rbx)         #  95    0x6edae  4      OPC=cmpb_m8_imm8      
  jne .L_6ed66                  #  96    0x6edb2  2      OPC=jne_label         
  movl -0x78(%rbp), %eax        #  97    0x6edb4  3      OPC=movl_r32_m32      
  cmpl $0x30, %eax              #  98    0x6edb7  3      OPC=cmpl_r32_imm8     
  jae .L_6eeb0                  #  99    0x6edba  6      OPC=jae_label_1       
  movl %eax, %edx               #  100   0x6edc0  2      OPC=movl_r32_r32      
  addq -0x68(%rbp), %rdx        #  101   0x6edc2  4      OPC=addq_r64_m64      
  addl $0x8, %eax               #  102   0x6edc6  3      OPC=addl_r32_imm8     
  movl %eax, -0x78(%rbp)        #  103   0x6edc9  3      OPC=movl_m32_r32      
.L_6edc6:                       #        0x6edcc  0      OPC=<label>           
  movq (%rdx), %rcx             #  104   0x6edcc  3      OPC=movq_r64_m64      
  addq $0x2, %rbx               #  105   0x6edcf  4      OPC=addq_r64_imm8     
  movq %rcx, %rdi               #  106   0x6edd3  3      OPC=movq_r64_r64      
  movq %rcx, -0x90(%rbp)        #  107   0x6edd6  7      OPC=movq_m64_r64      
  callq .strlen                 #  108   0x6eddd  5      OPC=callq_label       
  movq -0x90(%rbp), %rcx        #  109   0x6ede2  7      OPC=movq_r64_m64      
  movq %rax, %rsi               #  110   0x6ede9  3      OPC=movq_r64_r64      
  jmpq .L_6ed72                 #  111   0x6edec  2      OPC=jmpq_label        
.L_6ede8:                       #        0x6edee  0      OPC=<label>           
  movslq %r10d, %r8             #  112   0x6edee  3      OPC=movslq_r64_r32    
  xorl %edx, %edx               #  113   0x6edf1  2      OPC=xorl_r32_r32      
  shlq $0x4, %r14               #  114   0x6edf3  4      OPC=shlq_r64_imm8     
  movq %r8, %rax                #  115   0x6edf7  3      OPC=movq_r64_r64      
  shlq $0x4, %rax               #  116   0x6edfa  4      OPC=shlq_r64_imm8     
  addq $0x1e, %rax              #  117   0x6edfe  4      OPC=addq_r64_imm8     
  divq %rdi                     #  118   0x6ee02  3      OPC=divq_r64          
  xorb %dil, %dil               #  119   0x6ee05  3      OPC=xorb_r8_r8        
  shlq $0x4, %rax               #  120   0x6ee08  4      OPC=shlq_r64_imm8     
  subq %rax, %rsp               #  121   0x6ee0c  3      OPC=subq_r64_r64      
  leaq 0xf(%rsp), %r12          #  122   0x6ee0f  5      OPC=leaq_r64_m16      
  andq $0xf0, %r12              #  123   0x6ee14  4      OPC=andq_r64_imm8     
  leaq 0x8(%r12,%r14,1), %rax   #  124   0x6ee18  5      OPC=leaq_r64_m16      
  leaq -0x8(%r12), %rdx         #  125   0x6ee1d  5      OPC=leaq_r64_m16      
  jmpq .L_6ee2c                 #  126   0x6ee22  2      OPC=jmpq_label        
  xchgw %ax, %ax                #  127   0x6ee24  2      OPC=xchgw_ax_r16      
.L_6ee20:                       #        0x6ee26  0      OPC=<label>           
  movq (%r13), %rcx             #  128   0x6ee26  4      OPC=movq_r64_m64      
  movq 0x8(%r13), %rsi          #  129   0x6ee2a  4      OPC=movq_r64_m64      
  movq 0x10(%r13), %r13         #  130   0x6ee2e  4      OPC=movq_r64_m64      
.L_6ee2c:                       #        0x6ee32  0      OPC=<label>           
  movq %rcx, -0x8(%rax)         #  131   0x6ee32  4      OPC=movq_m64_r64      
  movq %rsi, (%rax)             #  132   0x6ee36  3      OPC=movq_m64_r64      
  leaq (%rsi,%rdi,1), %rbx      #  133   0x6ee39  4      OPC=leaq_r64_m16      
  subq $0x10, %rax              #  134   0x6ee3d  4      OPC=subq_r64_imm8     
  cmpq %rdx, %rax               #  135   0x6ee41  3      OPC=cmpq_r64_r64      
  movq %rbx, %rdi               #  136   0x6ee44  3      OPC=movq_r64_r64      
  jne .L_6ee20                  #  137   0x6ee47  2      OPC=jne_label         
  movslq -0x84(%rbp), %r14      #  138   0x6ee49  7      OPC=movslq_r64_m32    
  movl $0x14, %r9d              #  139   0x6ee50  6      OPC=movl_r32_imm32    
.L_6ee50:                       #        0x6ee56  0      OPC=<label>           
  movq %r8, %rdx                #  140   0x6ee56  3      OPC=movq_r64_r64      
  movq %r12, %rsi               #  141   0x6ee59  3      OPC=movq_r64_r64      
  movq %r14, %rdi               #  142   0x6ee5c  3      OPC=movq_r64_r64      
  movl %r9d, %eax               #  143   0x6ee5f  3      OPC=movl_r32_r32      
  syscall                       #  144   0x6ee62  2      OPC=syscall           
  cmpq $0xfc, %rax              #  145   0x6ee64  4      OPC=cmpq_r64_imm8     
  movq %rax, %r13               #  146   0x6ee68  3      OPC=movq_r64_r64      
  je .L_6ee50                   #  147   0x6ee6b  2      OPC=je_label          
  testl %r15d, %r15d            #  148   0x6ee6d  3      OPC=testl_r32_r32     
  jne .L_6eec1                  #  149   0x6ee70  2      OPC=jne_label         
.L_6ee6c:                       #        0x6ee72  0      OPC=<label>           
  leaq -0x28(%rbp), %rsp        #  150   0x6ee72  4      OPC=leaq_r64_m16      
  popq %rbx                     #  151   0x6ee76  1      OPC=popq_r64_1        
  popq %r12                     #  152   0x6ee77  2      OPC=popq_r64_1        
  popq %r13                     #  153   0x6ee79  2      OPC=popq_r64_1        
  popq %r14                     #  154   0x6ee7b  2      OPC=popq_r64_1        
  popq %r15                     #  155   0x6ee7d  2      OPC=popq_r64_1        
  popq %rbp                     #  156   0x6ee7f  1      OPC=popq_r64_1        
  retq                          #  157   0x6ee80  1      OPC=retq              
.L_6ee7b:                       #        0x6ee81  0      OPC=<label>           
  movq 0x32bffe(%rip), %rdx     #  158   0x6ee81  7      OPC=movq_r64_m64      
  negl %eax                     #  159   0x6ee88  2      OPC=negl_r32          
  movl %eax, (%rdx)             #  160   0x6ee8a  2      OPC=movl_m32_r32      
  nop                           #  161   0x6ee8c  1      OPC=nop               
.L_6ee87:                       #        0x6ee8d  0      OPC=<label>           
  movzbl (%rbx), %r12d          #  162   0x6ee8d  4      OPC=movzbl_r32_m8     
  xorl %r14d, %r14d             #  163   0x6ee91  3      OPC=xorl_r32_r32      
  xorl %r13d, %r13d             #  164   0x6ee94  3      OPC=xorl_r32_r32      
  movl $0x2, -0x84(%rbp)        #  165   0x6ee97  10     OPC=movl_m32_imm32    
  testb %r12b, %r12b            #  166   0x6eea1  3      OPC=testb_r8_r8       
  jne .L_6ed30                  #  167   0x6eea4  6      OPC=jne_label_1       
.L_6eea4:                       #        0x6eeaa  0      OPC=<label>           
  testl %r15d, %r15d            #  168   0x6eeaa  3      OPC=testl_r32_r32     
  je .L_6ee6c                   #  169   0x6eead  2      OPC=je_label          
  xorl %esi, %esi               #  170   0x6eeaf  2      OPC=xorl_r32_r32      
  jmpq .L_6ef77                 #  171   0x6eeb1  5      OPC=jmpq_label_1      
.L_6eeb0:                       #        0x6eeb6  0      OPC=<label>           
  movq -0x70(%rbp), %rdx        #  172   0x6eeb6  4      OPC=movq_r64_m64      
  leaq 0x8(%rdx), %rax          #  173   0x6eeba  4      OPC=leaq_r64_m16      
  movq %rax, -0x70(%rbp)        #  174   0x6eebe  4      OPC=movq_m64_r64      
  jmpq .L_6edc6                 #  175   0x6eec2  5      OPC=jmpq_label_1      
.L_6eec1:                       #        0x6eec7  0      OPC=<label>           
  movq 0x32bfb0(%rip), %rax     #  176   0x6eec7  7      OPC=movq_r64_m64      
  xorl %r9d, %r9d               #  177   0x6eece  3      OPC=xorl_r32_r32      
  xorl %edi, %edi               #  178   0x6eed1  2      OPC=xorl_r32_r32      
  movl $0xffffffff, %r8d        #  179   0x6eed3  7      OPC=movl_r32_imm32_1  
  movl $0x22, %ecx              #  180   0x6eeda  5      OPC=movl_r32_imm32    
  movl $0x3, %edx               #  181   0x6eedf  5      OPC=movl_r32_imm32    
  movl %r10d, -0x90(%rbp)       #  182   0x6eee4  7      OPC=movl_m32_r32      
  movq 0x18(%rax), %rax         #  183   0x6eeeb  4      OPC=movq_r64_m64      
  leaq (%rbx,%rax,1), %r11      #  184   0x6eeef  4      OPC=leaq_r64_m16      
  negq %rax                     #  185   0x6eef3  3      OPC=negq_r64          
  andq %rax, %r11               #  186   0x6eef6  3      OPC=andq_r64_r64      
  movq %r11, %rsi               #  187   0x6eef9  3      OPC=movq_r64_r64      
  movq %r11, %r14               #  188   0x6eefc  3      OPC=movq_r64_r64      
  callq .mmap                   #  189   0x6eeff  5      OPC=callq_label       
  cmpq $0xff, %rax              #  190   0x6ef04  4      OPC=cmpq_r64_imm8     
  movq %rax, -0x98(%rbp)        #  191   0x6ef08  7      OPC=movq_m64_r64      
  je .L_6ef6e                   #  192   0x6ef0f  2      OPC=je_label          
  movl -0x90(%rbp), %r10d       #  193   0x6ef11  7      OPC=movl_r32_m32      
  movl %r14d, (%rax)            #  194   0x6ef18  3      OPC=movl_m32_r32      
  leaq 0x4(%rax), %rdi          #  195   0x6ef1b  4      OPC=leaq_r64_m16      
  leaq 0x8(%r12), %r14          #  196   0x6ef1f  5      OPC=leaq_r64_m16      
  leal -0x1(%r10), %eax         #  197   0x6ef24  4      OPC=leal_r32_m16      
  shlq $0x4, %rax               #  198   0x6ef28  4      OPC=shlq_r64_imm8     
  leaq 0x18(%r12,%rax,1), %rax  #  199   0x6ef2c  5      OPC=leaq_r64_m16      
  movq %rax, -0x90(%rbp)        #  200   0x6ef31  7      OPC=movq_m64_r64      
.L_6ef31:                       #        0x6ef38  0      OPC=<label>           
  movq (%r14), %r12             #  201   0x6ef38  3      OPC=movq_r64_m64      
  movq -0x8(%r14), %rsi         #  202   0x6ef3b  4      OPC=movq_r64_m64      
  addq $0x10, %r14              #  203   0x6ef3f  4      OPC=addq_r64_imm8     
  movq %r12, %rdx               #  204   0x6ef43  3      OPC=movq_r64_r64      
  callq .__GI_memcpy            #  205   0x6ef46  5      OPC=callq_label       
  cmpq -0x90(%rbp), %r14        #  206   0x6ef4b  7      OPC=cmpq_r64_m64      
  leaq (%rax,%r12,1), %rdi      #  207   0x6ef52  4      OPC=leaq_r64_m16      
  jne .L_6ef31                  #  208   0x6ef56  2      OPC=jne_label         
  movb $0x0, (%rdi)             #  209   0x6ef58  3      OPC=movb_m8_imm8      
  movq -0x98(%rbp), %rdi        #  210   0x6ef5b  7      OPC=movq_r64_m64      
  xchgq %rdi, 0x32de3e(%rip)    #  211   0x6ef62  7      OPC=xchgq_m64_r64     
  testq %rdi, %rdi              #  212   0x6ef69  3      OPC=testq_r64_r64     
  je .L_6ef6e                   #  213   0x6ef6c  2      OPC=je_label          
  movl (%rdi), %esi             #  214   0x6ef6e  2      OPC=movl_r32_m32      
  callq .munmap                 #  215   0x6ef70  5      OPC=callq_label       
.L_6ef6e:                       #        0x6ef75  0      OPC=<label>           
  xorl %esi, %esi               #  216   0x6ef75  2      OPC=xorl_r32_r32      
  cmpq %rbx, %r13               #  217   0x6ef77  3      OPC=cmpq_r64_r64      
  sete %sil                     #  218   0x6ef7a  4      OPC=sete_r8           
.L_6ef77:                       #        0x6ef7e  0      OPC=<label>           
  movl -0x84(%rbp), %edx        #  219   0x6ef7e  6      OPC=movl_r32_m32      
  movl %r15d, %edi              #  220   0x6ef84  3      OPC=movl_r32_r32      
  callq .backtrace_and_maps     #  221   0x6ef87  5      OPC=callq_label       
  callq .abort                  #  222   0x6ef8c  5      OPC=callq_label       
  nop                           #  223   0x6ef91  1      OPC=nop               
  nop                           #  224   0x6ef92  1      OPC=nop               
  nop                           #  225   0x6ef93  1      OPC=nop               
  nop                           #  226   0x6ef94  1      OPC=nop               
  nop                           #  227   0x6ef95  1      OPC=nop               
  nop                           #  228   0x6ef96  1      OPC=nop               
                                                                               
.size __libc_message, .-__libc_message

