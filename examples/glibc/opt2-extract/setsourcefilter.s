  .text
  .globl setsourcefilter
  .type setsourcefilter, @function

#! file-offset 0x100f90
#! rip-offset  0x100f90
#! capacity    384 bytes

# Text                         #  Line  RIP       Bytes  Opcode              
.setsourcefilter:              #        0x100f90  0      OPC=<label>         
  pushq %rbp                   #  1     0x100f90  1      OPC=pushq_r64_1     
  movq %rsp, %rbp              #  2     0x100f91  3      OPC=movq_r64_r64    
  pushq %r15                   #  3     0x100f94  2      OPC=pushq_r64_1     
  pushq %r14                   #  4     0x100f96  2      OPC=pushq_r64_1     
  pushq %r13                   #  5     0x100f98  2      OPC=pushq_r64_1     
  pushq %r12                   #  6     0x100f9a  2      OPC=pushq_r64_1     
  movl %r9d, %r12d             #  7     0x100f9c  3      OPC=movl_r32_r32    
  shlq $0x7, %r12              #  8     0x100f9f  4      OPC=shlq_r64_imm8   
  pushq %rbx                   #  9     0x100fa3  1      OPC=pushq_r64_1     
  movq %rdx, %r14              #  10    0x100fa4  3      OPC=movq_r64_r64    
  leaq 0x90(%r12), %r15        #  11    0x100fa7  8      OPC=leaq_r64_m16    
  subq $0x28, %rsp             #  12    0x100faf  4      OPC=subq_r64_imm8   
  movl %edi, -0x40(%rbp)       #  13    0x100fb3  3      OPC=movl_m32_r32    
  cmpq $0x1000, %r15           #  14    0x100fb6  7      OPC=cmpq_r64_imm32  
  ja .L_1010a0                 #  15    0x100fbd  6      OPC=ja_label_1      
.L_100fc3:                     #        0x100fc3  0      OPC=<label>         
  leaq 0x1e(%r15), %rax        #  16    0x100fc3  4      OPC=leaq_r64_m16    
  movl $0x1, %r13d             #  17    0x100fc7  6      OPC=movl_r32_imm32  
  shrq $0x4, %rax              #  18    0x100fcd  4      OPC=shrq_r64_imm8   
  shlq $0x4, %rax              #  19    0x100fd1  4      OPC=shlq_r64_imm8   
  subq %rax, %rsp              #  20    0x100fd5  3      OPC=subq_r64_r64    
  leaq 0xf(%rsp), %rbx         #  21    0x100fd8  5      OPC=leaq_r64_m16    
  andq $0xf0, %rbx             #  22    0x100fdd  4      OPC=andq_r64_imm8   
.L_100fe1:                     #        0x100fe1  0      OPC=<label>         
  leaq 0x8(%rbx), %rdi         #  23    0x100fe1  4      OPC=leaq_r64_m16    
  movl %ecx, %edx              #  24    0x100fe5  2      OPC=movl_r32_r32    
  movl %esi, (%rbx)            #  25    0x100fe7  2      OPC=movl_m32_r32    
  movq %r14, %rsi              #  26    0x100fe9  3      OPC=movq_r64_r64    
  movl %ecx, -0x34(%rbp)       #  27    0x100fec  3      OPC=movl_m32_r32    
  movl %r9d, -0x3c(%rbp)       #  28    0x100fef  4      OPC=movl_m32_r32    
  movl %r8d, -0x38(%rbp)       #  29    0x100ff3  4      OPC=movl_m32_r32    
  callq .__GI_memcpy           #  30    0x100ff7  5      OPC=callq_label     
  movl -0x38(%rbp), %r8d       #  31    0x100ffc  4      OPC=movl_r32_m32    
  movl -0x3c(%rbp), %r9d       #  32    0x101000  4      OPC=movl_r32_m32    
  leaq 0x90(%rbx), %rdi        #  33    0x101004  7      OPC=leaq_r64_m16    
  movq 0x10(%rbp), %rsi        #  34    0x10100b  4      OPC=movq_r64_m64    
  movq %r12, %rdx              #  35    0x10100f  3      OPC=movq_r64_r64    
  movl %r8d, 0x88(%rbx)        #  36    0x101012  7      OPC=movl_m32_r32    
  movl %r9d, 0x8c(%rbx)        #  37    0x101019  7      OPC=movl_m32_r32    
  callq .__GI_memcpy           #  38    0x101020  5      OPC=callq_label     
  movl -0x34(%rbp), %ecx       #  39    0x101025  3      OPC=movl_r32_m32    
  movzwl (%r14), %edi          #  40    0x101028  4      OPC=movzwl_r32_m16  
  movl %ecx, %esi              #  41    0x10102c  2      OPC=movl_r32_r32    
  callq .__get_sol             #  42    0x10102e  5      OPC=callq_label     
  cmpl $0xffffffff, %eax       #  43    0x101033  6      OPC=cmpl_r32_imm32  
  nop                          #  44    0x101039  1      OPC=nop             
  nop                          #  45    0x10103a  1      OPC=nop             
  nop                          #  46    0x10103b  1      OPC=nop             
  je .L_101068                 #  47    0x10103c  2      OPC=je_label        
  movl -0x40(%rbp), %edi       #  48    0x10103e  3      OPC=movl_r32_m32    
  movl %r15d, %r8d             #  49    0x101041  3      OPC=movl_r32_r32    
  movq %rbx, %rcx              #  50    0x101044  3      OPC=movq_r64_r64    
  movl $0x30, %edx             #  51    0x101047  5      OPC=movl_r32_imm32  
  movl %eax, %esi              #  52    0x10104c  2      OPC=movl_r32_r32    
  callq .setsockopt            #  53    0x10104e  5      OPC=callq_label     
  testl %r13d, %r13d           #  54    0x101053  3      OPC=testl_r32_r32   
  je .L_10107b                 #  55    0x101056  2      OPC=je_label        
.L_101052:                     #        0x101058  0      OPC=<label>         
  leaq -0x28(%rbp), %rsp       #  56    0x101058  4      OPC=leaq_r64_m16    
  popq %rbx                    #  57    0x10105c  1      OPC=popq_r64_1      
  popq %r12                    #  58    0x10105d  2      OPC=popq_r64_1      
  popq %r13                    #  59    0x10105f  2      OPC=popq_r64_1      
  popq %r14                    #  60    0x101061  2      OPC=popq_r64_1      
  popq %r15                    #  61    0x101063  2      OPC=popq_r64_1      
  popq %rbp                    #  62    0x101065  1      OPC=popq_r64_1      
  retq                         #  63    0x101066  1      OPC=retq            
  nop                          #  64    0x101067  1      OPC=nop             
  nop                          #  65    0x101068  1      OPC=nop             
  nop                          #  66    0x101069  1      OPC=nop             
  nop                          #  67    0x10106a  1      OPC=nop             
  nop                          #  68    0x10106b  1      OPC=nop             
  nop                          #  69    0x10106c  1      OPC=nop             
  nop                          #  70    0x10106d  1      OPC=nop             
.L_101068:                     #        0x10106e  0      OPC=<label>         
  movq 0x299e11(%rip), %rdx    #  71    0x10106e  7      OPC=movq_r64_m64    
  testl %r13d, %r13d           #  72    0x101075  3      OPC=testl_r32_r32   
  movl $0x16, (%rdx)           #  73    0x101078  6      OPC=movl_m32_imm32  
  nop                          #  74    0x10107e  1      OPC=nop             
  jne .L_101052                #  75    0x10107f  2      OPC=jne_label       
.L_10107b:                     #        0x101081  0      OPC=<label>         
  movq %rbx, %rdi              #  76    0x101081  3      OPC=movq_r64_r64    
  movl %eax, -0x34(%rbp)       #  77    0x101084  3      OPC=movl_m32_r32    
  callq .L_1f8c0               #  78    0x101087  5      OPC=callq_label     
  movl -0x34(%rbp), %eax       #  79    0x10108c  3      OPC=movl_r32_m32    
  leaq -0x28(%rbp), %rsp       #  80    0x10108f  4      OPC=leaq_r64_m16    
  popq %rbx                    #  81    0x101093  1      OPC=popq_r64_1      
  popq %r12                    #  82    0x101094  2      OPC=popq_r64_1      
  popq %r13                    #  83    0x101096  2      OPC=popq_r64_1      
  popq %r14                    #  84    0x101098  2      OPC=popq_r64_1      
  popq %r15                    #  85    0x10109a  2      OPC=popq_r64_1      
  popq %rbp                    #  86    0x10109c  1      OPC=popq_r64_1      
  retq                         #  87    0x10109d  1      OPC=retq            
  nop                          #  88    0x10109e  1      OPC=nop             
  nop                          #  89    0x10109f  1      OPC=nop             
  nop                          #  90    0x1010a0  1      OPC=nop             
  nop                          #  91    0x1010a1  1      OPC=nop             
  nop                          #  92    0x1010a2  1      OPC=nop             
  nop                          #  93    0x1010a3  1      OPC=nop             
  nop                          #  94    0x1010a4  1      OPC=nop             
  nop                          #  95    0x1010a5  1      OPC=nop             
.L_1010a0:                     #        0x1010a6  0      OPC=<label>         
  movq %r15, %rdi              #  96    0x1010a6  3      OPC=movq_r64_r64    
  movl %r9d, -0x44(%rbp)       #  97    0x1010a9  4      OPC=movl_m32_r32    
  movl %r8d, -0x3c(%rbp)       #  98    0x1010ad  4      OPC=movl_m32_r32    
  movl %ecx, -0x38(%rbp)       #  99    0x1010b1  3      OPC=movl_m32_r32    
  movl %esi, -0x34(%rbp)       #  100   0x1010b4  3      OPC=movl_m32_r32    
  callq .__libc_alloca_cutoff  #  101   0x1010b7  5      OPC=callq_label     
  testl %eax, %eax             #  102   0x1010bc  2      OPC=testl_r32_r32   
  movl %eax, %r13d             #  103   0x1010be  3      OPC=movl_r32_r32    
  movl -0x34(%rbp), %esi       #  104   0x1010c1  3      OPC=movl_r32_m32    
  movl -0x38(%rbp), %ecx       #  105   0x1010c4  3      OPC=movl_r32_m32    
  movl -0x3c(%rbp), %r8d       #  106   0x1010c7  4      OPC=movl_r32_m32    
  movl -0x44(%rbp), %r9d       #  107   0x1010cb  4      OPC=movl_r32_m32    
  jne .L_100fc3                #  108   0x1010cf  6      OPC=jne_label_1     
  movq %r15, %rdi              #  109   0x1010d5  3      OPC=movq_r64_r64    
  movl %r9d, -0x44(%rbp)       #  110   0x1010d8  4      OPC=movl_m32_r32    
  movl %r8d, -0x3c(%rbp)       #  111   0x1010dc  4      OPC=movl_m32_r32    
  movl %ecx, -0x38(%rbp)       #  112   0x1010e0  3      OPC=movl_m32_r32    
  movl %esi, -0x34(%rbp)       #  113   0x1010e3  3      OPC=movl_m32_r32    
  callq .memalign_plt          #  114   0x1010e6  5      OPC=callq_label     
  testq %rax, %rax             #  115   0x1010eb  3      OPC=testq_r64_r64   
  movq %rax, %rbx              #  116   0x1010ee  3      OPC=movq_r64_r64    
  movl -0x34(%rbp), %esi       #  117   0x1010f1  3      OPC=movl_r32_m32    
  movl -0x38(%rbp), %ecx       #  118   0x1010f4  3      OPC=movl_r32_m32    
  movl -0x3c(%rbp), %r8d       #  119   0x1010f7  4      OPC=movl_r32_m32    
  movl -0x44(%rbp), %r9d       #  120   0x1010fb  4      OPC=movl_r32_m32    
  jne .L_100fe1                #  121   0x1010ff  6      OPC=jne_label_1     
  orl $0xffffffff, %eax        #  122   0x101105  6      OPC=orl_r32_imm32   
  nop                          #  123   0x10110b  1      OPC=nop             
  nop                          #  124   0x10110c  1      OPC=nop             
  nop                          #  125   0x10110d  1      OPC=nop             
  jmpq .L_101052               #  126   0x10110e  5      OPC=jmpq_label_1    
  nop                          #  127   0x101113  1      OPC=nop             
  nop                          #  128   0x101114  1      OPC=nop             
  nop                          #  129   0x101115  1      OPC=nop             
  nop                          #  130   0x101116  1      OPC=nop             
  nop                          #  131   0x101117  1      OPC=nop             
  nop                          #  132   0x101118  1      OPC=nop             
  nop                          #  133   0x101119  1      OPC=nop             
  nop                          #  134   0x10111a  1      OPC=nop             
  nop                          #  135   0x10111b  1      OPC=nop             
                                                                             
.size setsourcefilter, .-setsourcefilter

