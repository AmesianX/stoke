  .text
  .globl fnmatch__GLIBC_2_2_5
  .type fnmatch__GLIBC_2_2_5, @function

#! file-offset 0xbece0
#! rip-offset  0xbece0
#! capacity    944 bytes

# Text                            #  Line  RIP      Bytes  Opcode                
.fnmatch__GLIBC_2_2_5:            #        0xbece0  0      OPC=<label>           
  pushq %rbp                      #  1     0xbece0  1      OPC=pushq_r64_1       
  movq %rsp, %rbp                 #  2     0xbece1  3      OPC=movq_r64_r64      
  pushq %r15                      #  3     0xbece4  2      OPC=pushq_r64_1       
  pushq %r14                      #  4     0xbece6  2      OPC=pushq_r64_1       
  pushq %r13                      #  5     0xbece8  2      OPC=pushq_r64_1       
  pushq %r12                      #  6     0xbecea  2      OPC=pushq_r64_1       
  movl %edx, %r14d                #  7     0xbecec  3      OPC=movl_r32_r32      
  pushq %rbx                      #  8     0xbecef  1      OPC=pushq_r64_1       
  subq $0x48, %rsp                #  9     0xbecf0  4      OPC=subq_r64_imm8     
  movq 0x2dc0e5(%rip), %rax       #  10    0xbecf4  7      OPC=movq_r64_m64      
  movq %rdi, -0x48(%rbp)          #  11    0xbecfb  4      OPC=movq_m64_r64      
  movq %rsi, -0x50(%rbp)          #  12    0xbecff  4      OPC=movq_m64_r64      
  movq (%rax), %rax               #  13    0xbed03  3      OPC=movq_r64_m64      
  nop                             #  14    0xbed06  1      OPC=nop               
  movq (%rax), %rax               #  15    0xbed07  3      OPC=movq_r64_m64      
  cmpl $0x1, 0xa8(%rax)           #  16    0xbed0a  7      OPC=cmpl_m32_imm8     
  je .L_bede0                     #  17    0xbed11  6      OPC=je_label_1        
  movl $0x400, %esi               #  18    0xbed17  5      OPC=movl_r32_imm32    
  movq $0x0, -0x40(%rbp)          #  19    0xbed1c  8      OPC=movq_m64_imm32    
  movq %rdi, -0x38(%rbp)          #  20    0xbed24  4      OPC=movq_m64_r64      
  callq .strnlen                  #  21    0xbed28  5      OPC=callq_label       
  cmpq $0x3ff, %rax               #  22    0xbed2d  6      OPC=cmpq_rax_imm32    
  leaq -0x40(%rbp), %r13          #  23    0xbed33  4      OPC=leaq_r64_m16      
  jbe .L_bed90                    #  24    0xbed37  2      OPC=jbe_label         
  xorl %ebx, %ebx                 #  25    0xbed39  2      OPC=xorl_r32_r32      
.L_bed3b:                         #        0xbed3b  0      OPC=<label>           
  leaq -0x48(%rbp), %r12          #  26    0xbed3b  4      OPC=leaq_r64_m16      
  xorl %edx, %edx                 #  27    0xbed3f  2      OPC=xorl_r32_r32      
  xorl %edi, %edi                 #  28    0xbed41  2      OPC=xorl_r32_r32      
  movq %r13, %rcx                 #  29    0xbed43  3      OPC=movq_r64_r64      
  movq %r12, %rsi                 #  30    0xbed46  3      OPC=movq_r64_r64      
  callq .mbsrtowcs                #  31    0xbed49  5      OPC=callq_label       
  cmpq $0xff, %rax                #  32    0xbed4e  4      OPC=cmpq_r64_imm8     
  je .L_bee28                     #  33    0xbed52  6      OPC=je_label_1        
  movq $0x3ffffffffffffffe, %rdx  #  34    0xbed58  10     OPC=movq_r64_imm64    
  cmpq %rdx, %rax                 #  35    0xbed62  3      OPC=cmpq_r64_r64      
  jbe .L_bee40                    #  36    0xbed65  6      OPC=jbe_label_1       
.L_bed6b:                         #        0xbed6b  0      OPC=<label>           
  movq 0x2dc10e(%rip), %rax       #  37    0xbed6b  7      OPC=movq_r64_m64      
  movl $0xc, (%rax)               #  38    0xbed72  6      OPC=movl_m32_imm32    
  nop                             #  39    0xbed78  1      OPC=nop               
.L_bed79:                         #        0xbed79  0      OPC=<label>           
  movl $0xfffffffe, %eax          #  40    0xbed79  6      OPC=movl_r32_imm32_1  
.L_bed7e:                         #        0xbed7f  0      OPC=<label>           
  leaq -0x28(%rbp), %rsp          #  41    0xbed7f  4      OPC=leaq_r64_m16      
  popq %rbx                       #  42    0xbed83  1      OPC=popq_r64_1        
  popq %r12                       #  43    0xbed84  2      OPC=popq_r64_1        
  popq %r13                       #  44    0xbed86  2      OPC=popq_r64_1        
  popq %r14                       #  45    0xbed88  2      OPC=popq_r64_1        
  popq %r15                       #  46    0xbed8a  2      OPC=popq_r64_1        
  popq %rbp                       #  47    0xbed8c  1      OPC=popq_r64_1        
  retq                            #  48    0xbed8d  1      OPC=retq              
  nop                             #  49    0xbed8e  1      OPC=nop               
  nop                             #  50    0xbed8f  1      OPC=nop               
  nop                             #  51    0xbed90  1      OPC=nop               
.L_bed90:                         #        0xbed91  0      OPC=<label>           
  movq %rsp, %rbx                 #  52    0xbed91  3      OPC=movq_r64_r64      
  leaq 0x1(%rax), %rdx            #  53    0xbed94  4      OPC=leaq_r64_m16      
  leaq 0x1e(,%rdx,4), %rax        #  54    0xbed98  8      OPC=leaq_r64_m16      
  andq $0xf0, %rax                #  55    0xbeda0  4      OPC=andq_r64_imm8     
  subq %rax, %rsp                 #  56    0xbeda4  3      OPC=subq_r64_r64      
  leaq 0xf(%rsp), %r12            #  57    0xbeda7  5      OPC=leaq_r64_m16      
  andq $0xf0, %r12                #  58    0xbedac  4      OPC=andq_r64_imm8     
  subq %rsp, %rbx                 #  59    0xbedb0  3      OPC=subq_r64_r64      
  leaq -0x38(%rbp), %rsi          #  60    0xbedb3  4      OPC=leaq_r64_m16      
  movq %r13, %rcx                 #  61    0xbedb7  3      OPC=movq_r64_r64      
  movq %r12, %rdi                 #  62    0xbedba  3      OPC=movq_r64_r64      
  callq .mbsrtowcs                #  63    0xbedbd  5      OPC=callq_label       
  cmpq $0xff, %rax                #  64    0xbedc2  4      OPC=cmpq_r64_imm8     
  je .L_bee28                     #  65    0xbedc6  2      OPC=je_label          
  cmpq $0x0, -0x38(%rbp)          #  66    0xbedc8  5      OPC=cmpq_m64_imm8     
  je .L_bef60                     #  67    0xbedcd  6      OPC=je_label_1        
  movq $0x0, (%r13)               #  68    0xbedd3  8      OPC=movq_m64_imm32    
  jmpq .L_bed3b                   #  69    0xbeddb  5      OPC=jmpq_label_1      
  nop                             #  70    0xbede0  1      OPC=nop               
.L_bede0:                         #        0xbede1  0      OPC=<label>           
  movq -0x50(%rbp), %rbx          #  71    0xbede1  4      OPC=movq_r64_m64      
  movq %rbx, %rdi                 #  72    0xbede5  3      OPC=movq_r64_r64      
  callq .strlen                   #  73    0xbede8  5      OPC=callq_label       
  subq $0x8, %rsp                 #  74    0xbeded  4      OPC=subq_r64_imm8     
  movq -0x48(%rbp), %rdi          #  75    0xbedf1  4      OPC=movq_r64_m64      
  leaq (%rbx,%rax,1), %rdx        #  76    0xbedf5  4      OPC=leaq_r64_m16      
  pushq $0x0                      #  77    0xbedf9  2      OPC=pushq_imm8        
  movl %r14d, %ecx                #  78    0xbedfb  3      OPC=movl_r32_r32      
  movl %r14d, %r8d                #  79    0xbedfe  3      OPC=movl_r32_r32      
  andl $0x4, %ecx                 #  80    0xbee01  3      OPC=andl_r32_imm8     
  movq %rbx, %rsi                 #  81    0xbee04  3      OPC=movq_r64_r64      
  xorl %r9d, %r9d                 #  82    0xbee07  3      OPC=xorl_r32_r32      
  callq .internal_fnmatch         #  83    0xbee0a  5      OPC=callq_label       
  popq %rdx                       #  84    0xbee0f  1      OPC=popq_r64_1        
  popq %rcx                       #  85    0xbee10  1      OPC=popq_r64_1        
  leaq -0x28(%rbp), %rsp          #  86    0xbee11  4      OPC=leaq_r64_m16      
  popq %rbx                       #  87    0xbee15  1      OPC=popq_r64_1        
  popq %r12                       #  88    0xbee16  2      OPC=popq_r64_1        
  popq %r13                       #  89    0xbee18  2      OPC=popq_r64_1        
  popq %r14                       #  90    0xbee1a  2      OPC=popq_r64_1        
  popq %r15                       #  91    0xbee1c  2      OPC=popq_r64_1        
  popq %rbp                       #  92    0xbee1e  1      OPC=popq_r64_1        
  retq                            #  93    0xbee1f  1      OPC=retq              
  nop                             #  94    0xbee20  1      OPC=nop               
.L_bee20:                         #        0xbee21  0      OPC=<label>           
  movq %r15, %rdi                 #  95    0xbee21  3      OPC=movq_r64_r64      
  callq .L_1f8c0                  #  96    0xbee24  5      OPC=callq_label       
.L_bee28:                         #        0xbee29  0      OPC=<label>           
  leaq -0x28(%rbp), %rsp          #  97    0xbee29  4      OPC=leaq_r64_m16      
  movl $0xffffffff, %eax          #  98    0xbee2d  6      OPC=movl_r32_imm32_1  
  popq %rbx                       #  99    0xbee33  1      OPC=popq_r64_1        
  popq %r12                       #  100   0xbee34  2      OPC=popq_r64_1        
  popq %r13                       #  101   0xbee36  2      OPC=popq_r64_1        
  popq %r14                       #  102   0xbee38  2      OPC=popq_r64_1        
  popq %r15                       #  103   0xbee3a  2      OPC=popq_r64_1        
  popq %rbp                       #  104   0xbee3c  1      OPC=popq_r64_1        
  retq                            #  105   0xbee3d  1      OPC=retq              
  nop                             #  106   0xbee3e  1      OPC=nop               
  nop                             #  107   0xbee3f  1      OPC=nop               
  nop                             #  108   0xbee40  1      OPC=nop               
  nop                             #  109   0xbee41  1      OPC=nop               
.L_bee40:                         #        0xbee42  0      OPC=<label>           
  leaq 0x1(%rax), %rdx            #  110   0xbee42  4      OPC=leaq_r64_m16      
  leaq (,%rdx,4), %rdi            #  111   0xbee46  8      OPC=leaq_r64_m16      
  movq %rdx, -0x58(%rbp)          #  112   0xbee4e  4      OPC=movq_m64_r64      
  callq .memalign_plt             #  113   0xbee52  5      OPC=callq_label       
  movl -0x40(%rbp), %r11d         #  114   0xbee57  4      OPC=movl_r32_m32      
  movq %rax, %r15                 #  115   0xbee5b  3      OPC=movq_r64_r64      
  movq -0x58(%rbp), %rdx          #  116   0xbee5e  4      OPC=movq_r64_m64      
  testl %r11d, %r11d              #  117   0xbee62  3      OPC=testl_r32_r32     
  jne .L_bf046                    #  118   0xbee65  6      OPC=jne_label_1       
  testq %rax, %rax                #  119   0xbee6b  3      OPC=testq_r64_r64     
  je .L_bed79                     #  120   0xbee6e  6      OPC=je_label_1        
  movq %r12, %rsi                 #  121   0xbee74  3      OPC=movq_r64_r64      
  movq %r13, %rcx                 #  122   0xbee77  3      OPC=movq_r64_r64      
  movq %rax, %rdi                 #  123   0xbee7a  3      OPC=movq_r64_r64      
  movq %r15, %r12                 #  124   0xbee7d  3      OPC=movq_r64_r64      
  callq .mbsrtowcs                #  125   0xbee80  5      OPC=callq_label       
.L_bee83:                         #        0xbee85  0      OPC=<label>           
  movl -0x40(%rbp), %r10d         #  126   0xbee85  4      OPC=movl_r32_m32      
  testl %r10d, %r10d              #  127   0xbee89  3      OPC=testl_r32_r32     
  jne .L_bf027                    #  128   0xbee8c  6      OPC=jne_label_1       
  movq -0x50(%rbp), %rcx          #  129   0xbee92  4      OPC=movq_r64_m64      
  movl $0x400, %esi               #  130   0xbee96  5      OPC=movl_r32_imm32    
  movq %rcx, %rdi                 #  131   0xbee9b  3      OPC=movq_r64_r64      
  movq %rcx, -0x58(%rbp)          #  132   0xbee9e  4      OPC=movq_m64_r64      
  callq .strnlen                  #  133   0xbeea2  5      OPC=callq_label       
  movq -0x58(%rbp), %rcx          #  134   0xbeea7  4      OPC=movq_r64_m64      
  cmpq $0x3ff, %rax               #  135   0xbeeab  6      OPC=cmpq_rax_imm32    
  movq %rcx, -0x38(%rbp)          #  136   0xbeeb1  4      OPC=movq_m64_r64      
  ja .L_bef19                     #  137   0xbeeb5  2      OPC=ja_label          
  movq %rsp, %r9                  #  138   0xbeeb7  3      OPC=movq_r64_r64      
  leaq 0x1(%rax), %rdx            #  139   0xbeeba  4      OPC=leaq_r64_m16      
  leaq 0x1e(,%rdx,4), %rax        #  140   0xbeebe  8      OPC=leaq_r64_m16      
  andq $0xf0, %rax                #  141   0xbeec6  4      OPC=andq_r64_imm8     
  subq %rax, %rsp                 #  142   0xbeeca  3      OPC=subq_r64_r64      
  leaq 0xf(%rsp), %r11            #  143   0xbeecd  5      OPC=leaq_r64_m16      
  andq $0xf0, %r11                #  144   0xbeed2  4      OPC=andq_r64_imm8     
  subq %rsp, %r9                  #  145   0xbeed6  3      OPC=subq_r64_r64      
  leaq -0x38(%rbp), %rsi          #  146   0xbeed9  4      OPC=leaq_r64_m16      
  movq %r11, %rdi                 #  147   0xbeedd  3      OPC=movq_r64_r64      
  movq %r13, %rcx                 #  148   0xbeee0  3      OPC=movq_r64_r64      
  movq %r9, -0x60(%rbp)           #  149   0xbeee3  4      OPC=movq_m64_r64      
  movq %r11, -0x58(%rbp)          #  150   0xbeee7  4      OPC=movq_m64_r64      
  callq .mbsrtowcs                #  151   0xbeeeb  5      OPC=callq_label       
  cmpq $0xff, %rax                #  152   0xbeef0  4      OPC=cmpq_r64_imm8     
  movq %rax, %r8                  #  153   0xbeef4  3      OPC=movq_r64_r64      
  movq -0x58(%rbp), %r11          #  154   0xbeef7  4      OPC=movq_r64_m64      
  movq -0x60(%rbp), %r9           #  155   0xbeefb  4      OPC=movq_r64_m64      
  je .L_bee20                     #  156   0xbeeff  6      OPC=je_label_1        
  addq %r9, %rbx                  #  157   0xbef05  3      OPC=addq_r64_r64      
  cmpq $0x0, -0x38(%rbp)          #  158   0xbef08  5      OPC=cmpq_m64_imm8     
  je .L_bf010                     #  159   0xbef0d  6      OPC=je_label_1        
  movq $0x0, (%r13)               #  160   0xbef13  8      OPC=movq_m64_imm32    
.L_bef19:                         #        0xbef1b  0      OPC=<label>           
  leaq -0x50(%rbp), %rax          #  161   0xbef1b  4      OPC=leaq_r64_m16      
  xorl %edx, %edx                 #  162   0xbef1f  2      OPC=xorl_r32_r32      
  xorl %edi, %edi                 #  163   0xbef21  2      OPC=xorl_r32_r32      
  movq %r13, %rcx                 #  164   0xbef23  3      OPC=movq_r64_r64      
  movq %rax, %rsi                 #  165   0xbef26  3      OPC=movq_r64_r64      
  movq %rax, -0x58(%rbp)          #  166   0xbef29  4      OPC=movq_m64_r64      
  callq .mbsrtowcs                #  167   0xbef2d  5      OPC=callq_label       
  cmpq $0xff, %rax                #  168   0xbef32  4      OPC=cmpq_r64_imm8     
  movq %rax, %r8                  #  169   0xbef36  3      OPC=movq_r64_r64      
  je .L_bee20                     #  170   0xbef39  6      OPC=je_label_1        
  movq $0x3ffffffffffffffe, %rax  #  171   0xbef3f  10     OPC=movq_r64_imm64    
  cmpq %rax, %r8                  #  172   0xbef49  3      OPC=cmpq_r64_r64      
  jbe .L_bef70                    #  173   0xbef4c  2      OPC=jbe_label         
  movq %r15, %rdi                 #  174   0xbef4e  3      OPC=movq_r64_r64      
  callq .L_1f8c0                  #  175   0xbef51  5      OPC=callq_label       
  jmpq .L_bed6b                   #  176   0xbef56  5      OPC=jmpq_label_1      
  nop                             #  177   0xbef5b  1      OPC=nop               
  nop                             #  178   0xbef5c  1      OPC=nop               
  nop                             #  179   0xbef5d  1      OPC=nop               
  nop                             #  180   0xbef5e  1      OPC=nop               
  nop                             #  181   0xbef5f  1      OPC=nop               
  nop                             #  182   0xbef60  1      OPC=nop               
  nop                             #  183   0xbef61  1      OPC=nop               
.L_bef60:                         #        0xbef62  0      OPC=<label>           
  xorl %r15d, %r15d               #  184   0xbef62  3      OPC=xorl_r32_r32      
  jmpq .L_bee83                   #  185   0xbef65  5      OPC=jmpq_label_1      
  nop                             #  186   0xbef6a  1      OPC=nop               
  nop                             #  187   0xbef6b  1      OPC=nop               
  nop                             #  188   0xbef6c  1      OPC=nop               
  nop                             #  189   0xbef6d  1      OPC=nop               
  nop                             #  190   0xbef6e  1      OPC=nop               
  nop                             #  191   0xbef6f  1      OPC=nop               
  nop                             #  192   0xbef70  1      OPC=nop               
  nop                             #  193   0xbef71  1      OPC=nop               
.L_bef70:                         #        0xbef72  0      OPC=<label>           
  leaq 0x1(%r8), %rdx             #  194   0xbef72  4      OPC=leaq_r64_m16      
  movq %r8, -0x68(%rbp)           #  195   0xbef76  4      OPC=movq_m64_r64      
  leaq (,%rdx,4), %rdi            #  196   0xbef7a  8      OPC=leaq_r64_m16      
  movq %rdx, -0x60(%rbp)          #  197   0xbef82  4      OPC=movq_m64_r64      
  callq .memalign_plt             #  198   0xbef86  5      OPC=callq_label       
  testq %rax, %rax                #  199   0xbef8b  3      OPC=testq_r64_r64     
  movq -0x60(%rbp), %rdx          #  200   0xbef8e  4      OPC=movq_r64_m64      
  movq -0x68(%rbp), %r8           #  201   0xbef92  4      OPC=movq_r64_m64      
  je .L_bf015                     #  202   0xbef96  2      OPC=je_label          
  movl -0x40(%rbp), %r9d          #  203   0xbef98  4      OPC=movl_r32_m32      
  testl %r9d, %r9d                #  204   0xbef9c  3      OPC=testl_r32_r32     
  jne .L_bf065                    #  205   0xbef9f  6      OPC=jne_label_1       
  movq -0x58(%rbp), %rsi          #  206   0xbefa5  4      OPC=movq_r64_m64      
  movq %r13, %rcx                 #  207   0xbefa9  3      OPC=movq_r64_r64      
  movq %rax, %rdi                 #  208   0xbefac  3      OPC=movq_r64_r64      
  movq %r8, -0x60(%rbp)           #  209   0xbefaf  4      OPC=movq_m64_r64      
  movq %rax, -0x58(%rbp)          #  210   0xbefb3  4      OPC=movq_m64_r64      
  callq .mbsrtowcs                #  211   0xbefb7  5      OPC=callq_label       
  movq -0x58(%rbp), %r10          #  212   0xbefbc  4      OPC=movq_r64_m64      
  movq -0x60(%rbp), %r8           #  213   0xbefc0  4      OPC=movq_r64_m64      
  movq %r10, %r11                 #  214   0xbefc4  3      OPC=movq_r64_r64      
.L_befc5:                         #        0xbefc7  0      OPC=<label>           
  subq $0x8, %rsp                 #  215   0xbefc7  4      OPC=subq_r64_imm8     
  leaq (%r11,%r8,4), %rdx         #  216   0xbefcb  4      OPC=leaq_r64_m16      
  movl %r14d, %ecx                #  217   0xbefcf  3      OPC=movl_r32_r32      
  pushq %rbx                      #  218   0xbefd2  1      OPC=pushq_r64_1       
  movq %r11, %rsi                 #  219   0xbefd3  3      OPC=movq_r64_r64      
  andl $0x4, %ecx                 #  220   0xbefd6  3      OPC=andl_r32_imm8     
  xorl %r9d, %r9d                 #  221   0xbefd9  3      OPC=xorl_r32_r32      
  movl %r14d, %r8d                #  222   0xbefdc  3      OPC=movl_r32_r32      
  movq %r12, %rdi                 #  223   0xbefdf  3      OPC=movq_r64_r64      
  movq %r10, -0x58(%rbp)          #  224   0xbefe2  4      OPC=movq_m64_r64      
  callq .internal_fnwmatch        #  225   0xbefe6  5      OPC=callq_label       
  movq -0x58(%rbp), %r10          #  226   0xbefeb  4      OPC=movq_r64_m64      
  movl %eax, %ebx                 #  227   0xbefef  2      OPC=movl_r32_r32      
  movq %r10, %rdi                 #  228   0xbeff1  3      OPC=movq_r64_r64      
  callq .L_1f8c0                  #  229   0xbeff4  5      OPC=callq_label       
  movq %r15, %rdi                 #  230   0xbeff9  3      OPC=movq_r64_r64      
  callq .L_1f8c0                  #  231   0xbeffc  5      OPC=callq_label       
  popq %rsi                       #  232   0xbf001  1      OPC=popq_r64_1        
  movl %ebx, %eax                 #  233   0xbf002  2      OPC=movl_r32_r32      
  popq %rdi                       #  234   0xbf004  1      OPC=popq_r64_1        
  jmpq .L_bed7e                   #  235   0xbf005  5      OPC=jmpq_label_1      
  nop                             #  236   0xbf00a  1      OPC=nop               
  nop                             #  237   0xbf00b  1      OPC=nop               
  nop                             #  238   0xbf00c  1      OPC=nop               
  nop                             #  239   0xbf00d  1      OPC=nop               
  nop                             #  240   0xbf00e  1      OPC=nop               
  nop                             #  241   0xbf00f  1      OPC=nop               
  nop                             #  242   0xbf010  1      OPC=nop               
  nop                             #  243   0xbf011  1      OPC=nop               
.L_bf010:                         #        0xbf012  0      OPC=<label>           
  xorl %r10d, %r10d               #  244   0xbf012  3      OPC=xorl_r32_r32      
  jmpq .L_befc5                   #  245   0xbf015  2      OPC=jmpq_label        
.L_bf015:                         #        0xbf017  0      OPC=<label>           
  movq %r15, %rdi                 #  246   0xbf017  3      OPC=movq_r64_r64      
  callq .L_1f8c0                  #  247   0xbf01a  5      OPC=callq_label       
  movl $0xfffffffe, %eax          #  248   0xbf01f  6      OPC=movl_r32_imm32_1  
  jmpq .L_bed7e                   #  249   0xbf025  5      OPC=jmpq_label_1      
.L_bf027:                         #        0xbf02a  0      OPC=<label>           
  leaq 0xa618f(%rip), %rcx        #  250   0xbf02a  7      OPC=leaq_r64_m16      
  leaq 0xa615b(%rip), %rsi        #  251   0xbf031  7      OPC=leaq_r64_m16      
  leaq 0xa615e(%rip), %rdi        #  252   0xbf038  7      OPC=leaq_r64_m16      
  movl $0x182, %edx               #  253   0xbf03f  5      OPC=movl_r32_imm32    
  callq .__assert_fail            #  254   0xbf044  5      OPC=callq_label       
.L_bf046:                         #        0xbf049  0      OPC=<label>           
  leaq 0xa6170(%rip), %rcx        #  255   0xbf049  7      OPC=leaq_r64_m16      
  leaq 0xa613c(%rip), %rsi        #  256   0xbf050  7      OPC=leaq_r64_m16      
  leaq 0xa613f(%rip), %rdi        #  257   0xbf057  7      OPC=leaq_r64_m16      
  movl $0x17c, %edx               #  258   0xbf05e  5      OPC=movl_r32_imm32    
  callq .__assert_fail            #  259   0xbf063  5      OPC=callq_label       
.L_bf065:                         #        0xbf068  0      OPC=<label>           
  leaq 0xa6151(%rip), %rcx        #  260   0xbf068  7      OPC=leaq_r64_m16      
  leaq 0xa611d(%rip), %rsi        #  261   0xbf06f  7      OPC=leaq_r64_m16      
  leaq 0xa6120(%rip), %rdi        #  262   0xbf076  7      OPC=leaq_r64_m16      
  movl $0x1b4, %edx               #  263   0xbf07d  5      OPC=movl_r32_imm32    
  callq .__assert_fail            #  264   0xbf082  5      OPC=callq_label       
  nop                             #  265   0xbf087  1      OPC=nop               
  nop                             #  266   0xbf088  1      OPC=nop               
  nop                             #  267   0xbf089  1      OPC=nop               
  nop                             #  268   0xbf08a  1      OPC=nop               
  nop                             #  269   0xbf08b  1      OPC=nop               
  nop                             #  270   0xbf08c  1      OPC=nop               
  nop                             #  271   0xbf08d  1      OPC=nop               
  nop                             #  272   0xbf08e  1      OPC=nop               
  nop                             #  273   0xbf08f  1      OPC=nop               
  nop                             #  274   0xbf090  1      OPC=nop               
  xchgw %ax, %ax                  #  275   0xbf091  2      OPC=xchgw_ax_r16      
                                                                                 
.size fnmatch__GLIBC_2_2_5, .-fnmatch__GLIBC_2_2_5

