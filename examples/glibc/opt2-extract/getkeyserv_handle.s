  .text
  .globl getkeyserv_handle
  .type getkeyserv_handle, @function

#! file-offset 0x110a00
#! rip-offset  0x110a00
#! capacity    544 bytes

# Text                                #  Line  RIP       Bytes  Opcode              
.getkeyserv_handle:                   #        0x110a00  0      OPC=<label>         
  pushq %rbp                          #  1     0x110a00  1      OPC=pushq_r64_1     
  pushq %rbx                          #  2     0x110a01  1      OPC=pushq_r64_1     
  subq $0xa8, %rsp                    #  3     0x110a02  7      OPC=subq_r64_imm32  
  movl %edi, 0xc(%rsp)                #  4     0x110a09  4      OPC=movl_m32_r32    
  callq .__rpc_thread_variables       #  5     0x110a0d  5      OPC=callq_label     
  movq 0xc8(%rax), %rbx               #  6     0x110a12  7      OPC=movq_r64_m64    
  movq %rax, %rbp                     #  7     0x110a19  3      OPC=movq_r64_r64    
  movl $0x6e, 0x1c(%rsp)              #  8     0x110a1c  8      OPC=movl_m32_imm32  
  testq %rbx, %rbx                    #  9     0x110a24  3      OPC=testq_r64_r64   
  je .L_110be8                        #  10    0x110a27  6      OPC=je_label_1      
  cmpq $0x0, (%rbx)                   #  11    0x110a2d  4      OPC=cmpq_m64_imm8   
  je .L_110a61                        #  12    0x110a31  2      OPC=je_label        
  movl 0x8(%rbx), %ebp                #  13    0x110a33  3      OPC=movl_r32_m32    
  callq .__getpid                     #  14    0x110a36  5      OPC=callq_label     
  cmpl %eax, %ebp                     #  15    0x110a3b  2      OPC=cmpl_r32_r32    
  je .L_110b10                        #  16    0x110a3d  6      OPC=je_label_1      
.L_110a43:                            #        0x110a43  0      OPC=<label>         
  movq (%rbx), %rax                   #  17    0x110a43  3      OPC=movq_r64_m64    
  movq (%rax), %rdi                   #  18    0x110a46  3      OPC=movq_r64_m64    
  movq 0x38(%rdi), %rax               #  19    0x110a49  4      OPC=movq_r64_m64    
  callq 0x20(%rax)                    #  20    0x110a4d  3      OPC=callq_m64       
  movq (%rbx), %rdi                   #  21    0x110a50  3      OPC=movq_r64_m64    
  movq 0x8(%rdi), %rax                #  22    0x110a53  4      OPC=movq_r64_m64    
  callq 0x20(%rax)                    #  23    0x110a57  3      OPC=callq_m64       
  movq $0x0, (%rbx)                   #  24    0x110a5a  7      OPC=movq_m64_imm32  
.L_110a61:                            #        0x110a61  0      OPC=<label>         
  movslq 0xc(%rsp), %rdx              #  25    0x110a61  5      OPC=movslq_r64_m32  
  leaq 0x56077(%rip), %rcx            #  26    0x110a66  7      OPC=leaq_r64_m16    
  leaq 0x560fe(%rip), %rdi            #  27    0x110a6d  7      OPC=leaq_r64_m16    
  movl $0x186bd, %esi                 #  28    0x110a74  5      OPC=movl_r32_imm32  
  callq .clnt_create_GLIBC_2_2_5      #  29    0x110a79  5      OPC=callq_label     
  testq %rax, %rax                    #  30    0x110a7e  3      OPC=testq_r64_r64   
  movq %rax, (%rbx)                   #  31    0x110a81  3      OPC=movq_m64_r64    
  je .L_110c1b                        #  32    0x110a84  6      OPC=je_label_1      
  callq .geteuid                      #  33    0x110a8a  5      OPC=callq_label     
  movl %eax, 0xc(%rbx)                #  34    0x110a8f  3      OPC=movl_m32_r32    
  callq .__getpid                     #  35    0x110a92  5      OPC=callq_label     
  movl 0xc(%rbx), %esi                #  36    0x110a97  3      OPC=movl_r32_m32    
  leaq 0x52c60(%rip), %rdi            #  37    0x110a9a  7      OPC=leaq_r64_m16    
  xorl %r8d, %r8d                     #  38    0x110aa1  3      OPC=xorl_r32_r32    
  xorl %ecx, %ecx                     #  39    0x110aa4  2      OPC=xorl_r32_r32    
  xorl %edx, %edx                     #  40    0x110aa6  2      OPC=xorl_r32_r32    
  movl %eax, 0x8(%rbx)                #  41    0x110aa8  3      OPC=movl_m32_r32    
  movq (%rbx), %rbp                   #  42    0x110aab  3      OPC=movq_r64_m64    
  callq .authunix_create_GLIBC_2_2_5  #  43    0x110aae  5      OPC=callq_label     
  movq (%rbx), %rdi                   #  44    0x110ab3  3      OPC=movq_r64_m64    
  movq %rax, (%rbp)                   #  45    0x110ab6  4      OPC=movq_m64_r64    
  cmpq $0x0, (%rdi)                   #  46    0x110aba  4      OPC=cmpq_m64_imm8   
  je .L_110c0d                        #  47    0x110abe  6      OPC=je_label_1      
  movq 0x8(%rdi), %rax                #  48    0x110ac4  4      OPC=movq_r64_m64    
  leaq 0x20(%rsp), %rdx               #  49    0x110ac8  5      OPC=leaq_r64_m16    
  movl $0x4, %esi                     #  50    0x110acd  5      OPC=movl_r32_imm32  
  movq $0x6, 0x20(%rsp)               #  51    0x110ad2  9      OPC=movq_m64_imm32  
  movq $0x0, 0x28(%rsp)               #  52    0x110adb  9      OPC=movq_m64_imm32  
  callq 0x28(%rax)                    #  53    0x110ae4  3      OPC=callq_m64       
  movq (%rbx), %rdi                   #  54    0x110ae7  3      OPC=movq_r64_m64    
  leaq 0x18(%rsp), %rdx               #  55    0x110aea  5      OPC=leaq_r64_m16    
  movl $0x6, %esi                     #  56    0x110aef  5      OPC=movl_r32_imm32  
  movq 0x8(%rdi), %rax                #  57    0x110af4  4      OPC=movq_r64_m64    
  callq 0x28(%rax)                    #  58    0x110af8  3      OPC=callq_m64       
  testl %eax, %eax                    #  59    0x110afb  2      OPC=testl_r32_r32   
  jne .L_110bc8                       #  60    0x110afd  6      OPC=jne_label_1     
.L_110b03:                            #        0x110b03  0      OPC=<label>         
  movq (%rbx), %rax                   #  61    0x110b03  3      OPC=movq_r64_m64    
  addq $0xa8, %rsp                    #  62    0x110b06  7      OPC=addq_r64_imm32  
  popq %rbx                           #  63    0x110b0d  1      OPC=popq_r64_1      
  popq %rbp                           #  64    0x110b0e  1      OPC=popq_r64_1      
  retq                                #  65    0x110b0f  1      OPC=retq            
.L_110b10:                            #        0x110b10  0      OPC=<label>         
  movq (%rbx), %rdi                   #  66    0x110b10  3      OPC=movq_r64_m64    
  testq %rdi, %rdi                    #  67    0x110b13  3      OPC=testq_r64_r64   
  je .L_110a61                        #  68    0x110b16  6      OPC=je_label_1      
  movq 0x8(%rdi), %rax                #  69    0x110b1c  4      OPC=movq_r64_m64    
  leaq 0x18(%rsp), %rdx               #  70    0x110b20  5      OPC=leaq_r64_m16    
  movl $0x6, %esi                     #  71    0x110b25  5      OPC=movl_r32_imm32  
  callq 0x28(%rax)                    #  72    0x110b2a  3      OPC=callq_m64       
  movl 0x18(%rsp), %edi               #  73    0x110b2d  4      OPC=movl_r32_m32    
  leaq 0x30(%rsp), %rsi               #  74    0x110b31  5      OPC=leaq_r64_m16    
  leaq 0x1c(%rsp), %rdx               #  75    0x110b36  5      OPC=leaq_r64_m16    
  callq .getpeername                  #  76    0x110b3b  5      OPC=callq_label     
  cmpl $0xffffffff, %eax              #  77    0x110b40  6      OPC=cmpl_r32_imm32  
  nop                                 #  78    0x110b46  1      OPC=nop             
  nop                                 #  79    0x110b47  1      OPC=nop             
  nop                                 #  80    0x110b48  1      OPC=nop             
  je .L_110a43                        #  81    0x110b49  6      OPC=je_label_1      
  cmpq $0x0, (%rbx)                   #  82    0x110b4f  4      OPC=cmpq_m64_imm8   
  je .L_110a61                        #  83    0x110b53  6      OPC=je_label_1      
  movl 0xc(%rbx), %ebp                #  84    0x110b59  3      OPC=movl_r32_m32    
  callq .geteuid                      #  85    0x110b5c  5      OPC=callq_label     
  cmpl %eax, %ebp                     #  86    0x110b61  2      OPC=cmpl_r32_r32    
  je .L_110bc0                        #  87    0x110b63  2      OPC=je_label        
  callq .geteuid                      #  88    0x110b65  5      OPC=callq_label     
  movl %eax, 0xc(%rbx)                #  89    0x110b6a  3      OPC=movl_m32_r32    
  movq (%rbx), %rax                   #  90    0x110b6d  3      OPC=movq_r64_m64    
  movq (%rax), %rdi                   #  91    0x110b70  3      OPC=movq_r64_m64    
  movq 0x38(%rdi), %rax               #  92    0x110b73  4      OPC=movq_r64_m64    
  callq 0x20(%rax)                    #  93    0x110b77  3      OPC=callq_m64       
  movl 0xc(%rbx), %esi                #  94    0x110b7a  3      OPC=movl_r32_m32    
  leaq 0x52b83(%rip), %rdi            #  95    0x110b7d  7      OPC=leaq_r64_m16    
  xorl %r8d, %r8d                     #  96    0x110b84  3      OPC=xorl_r32_r32    
  xorl %ecx, %ecx                     #  97    0x110b87  2      OPC=xorl_r32_r32    
  xorl %edx, %edx                     #  98    0x110b89  2      OPC=xorl_r32_r32    
  movq (%rbx), %rbp                   #  99    0x110b8b  3      OPC=movq_r64_m64    
  callq .authunix_create_GLIBC_2_2_5  #  100   0x110b8e  5      OPC=callq_label     
  movq (%rbx), %rdi                   #  101   0x110b93  3      OPC=movq_r64_m64    
  movq %rax, (%rbp)                   #  102   0x110b96  4      OPC=movq_m64_r64    
  cmpq $0x0, (%rdi)                   #  103   0x110b9a  4      OPC=cmpq_m64_imm8   
  je .L_110c0d                        #  104   0x110b9e  2      OPC=je_label        
.L_110b9a:                            #        0x110ba0  0      OPC=<label>         
  movq 0x8(%rdi), %rax                #  105   0x110ba0  4      OPC=movq_r64_m64    
  leaq 0xc(%rsp), %rdx                #  106   0x110ba4  5      OPC=leaq_r64_m16    
  movl $0xd, %esi                     #  107   0x110ba9  5      OPC=movl_r32_imm32  
  callq 0x28(%rax)                    #  108   0x110bae  3      OPC=callq_m64       
  movq (%rbx), %rax                   #  109   0x110bb1  3      OPC=movq_r64_m64    
.L_110bae:                            #        0x110bb4  0      OPC=<label>         
  addq $0xa8, %rsp                    #  110   0x110bb4  7      OPC=addq_r64_imm32  
  popq %rbx                           #  111   0x110bbb  1      OPC=popq_r64_1      
  popq %rbp                           #  112   0x110bbc  1      OPC=popq_r64_1      
  retq                                #  113   0x110bbd  1      OPC=retq            
  nop                                 #  114   0x110bbe  1      OPC=nop             
  nop                                 #  115   0x110bbf  1      OPC=nop             
  nop                                 #  116   0x110bc0  1      OPC=nop             
  nop                                 #  117   0x110bc1  1      OPC=nop             
  nop                                 #  118   0x110bc2  1      OPC=nop             
  nop                                 #  119   0x110bc3  1      OPC=nop             
  nop                                 #  120   0x110bc4  1      OPC=nop             
  nop                                 #  121   0x110bc5  1      OPC=nop             
.L_110bc0:                            #        0x110bc6  0      OPC=<label>         
  movq (%rbx), %rdi                   #  122   0x110bc6  3      OPC=movq_r64_m64    
  jmpq .L_110b9a                      #  123   0x110bc9  2      OPC=jmpq_label      
  nop                                 #  124   0x110bcb  1      OPC=nop             
  nop                                 #  125   0x110bcc  1      OPC=nop             
  nop                                 #  126   0x110bcd  1      OPC=nop             
.L_110bc8:                            #        0x110bce  0      OPC=<label>         
  movl 0x18(%rsp), %edi               #  127   0x110bce  4      OPC=movl_r32_m32    
  movl $0x1, %edx                     #  128   0x110bd2  5      OPC=movl_r32_imm32  
  movl $0x2, %esi                     #  129   0x110bd7  5      OPC=movl_r32_imm32  
  xorl %eax, %eax                     #  130   0x110bdc  2      OPC=xorl_r32_r32    
  callq .__fcntl                      #  131   0x110bde  5      OPC=callq_label     
  jmpq .L_110b03                      #  132   0x110be3  5      OPC=jmpq_label_1    
  nop                                 #  133   0x110be8  1      OPC=nop             
  nop                                 #  134   0x110be9  1      OPC=nop             
  nop                                 #  135   0x110bea  1      OPC=nop             
  nop                                 #  136   0x110beb  1      OPC=nop             
  nop                                 #  137   0x110bec  1      OPC=nop             
  nop                                 #  138   0x110bed  1      OPC=nop             
.L_110be8:                            #        0x110bee  0      OPC=<label>         
  movl $0x10, %edi                    #  139   0x110bee  5      OPC=movl_r32_imm32  
  callq .memalign_plt                 #  140   0x110bf3  5      OPC=callq_label     
  testq %rax, %rax                    #  141   0x110bf8  3      OPC=testq_r64_r64   
  movq %rax, %rbx                     #  142   0x110bfb  3      OPC=movq_r64_r64    
  je .L_110c1b                        #  143   0x110bfe  2      OPC=je_label        
  movq %rax, 0xc8(%rbp)               #  144   0x110c00  7      OPC=movq_m64_r64    
  movq $0x0, (%rax)                   #  145   0x110c07  7      OPC=movq_m64_imm32  
  jmpq .L_110a61                      #  146   0x110c0e  5      OPC=jmpq_label_1    
.L_110c0d:                            #        0x110c13  0      OPC=<label>         
  movq 0x8(%rdi), %rax                #  147   0x110c13  4      OPC=movq_r64_m64    
  callq 0x20(%rax)                    #  148   0x110c17  3      OPC=callq_m64       
  movq $0x0, (%rbx)                   #  149   0x110c1a  7      OPC=movq_m64_imm32  
.L_110c1b:                            #        0x110c21  0      OPC=<label>         
  xorl %eax, %eax                     #  150   0x110c21  2      OPC=xorl_r32_r32    
  jmpq .L_110bae                      #  151   0x110c23  2      OPC=jmpq_label      
  nop                                 #  152   0x110c25  1      OPC=nop             
                                                                                    
.size getkeyserv_handle, .-getkeyserv_handle

