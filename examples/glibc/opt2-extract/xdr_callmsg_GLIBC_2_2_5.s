  .text
  .globl xdr_callmsg_GLIBC_2_2_5
  .type xdr_callmsg_GLIBC_2_2_5, @function

#! file-offset 0x108bd0
#! rip-offset  0x108bd0
#! capacity    912 bytes

# Text                                #  Line  RIP       Bytes  Opcode              
.xdr_callmsg_GLIBC_2_2_5:             #        0x108bd0  0      OPC=<label>         
  pushq %r12                          #  1     0x108bd0  2      OPC=pushq_r64_1     
  pushq %rbp                          #  2     0x108bd2  1      OPC=pushq_r64_1     
  movq %rdi, %rbp                     #  3     0x108bd3  3      OPC=movq_r64_r64    
  pushq %rbx                          #  4     0x108bd6  1      OPC=pushq_r64_1     
  movl (%rdi), %eax                   #  5     0x108bd7  2      OPC=movl_r32_m32    
  movq %rsi, %rbx                     #  6     0x108bd9  3      OPC=movq_r64_r64    
  testl %eax, %eax                    #  7     0x108bdc  2      OPC=testl_r32_r32   
  jne .L_108c18                       #  8     0x108bde  2      OPC=jne_label       
  movl 0x40(%rsi), %eax               #  9     0x108be0  3      OPC=movl_r32_m32    
  cmpl $0x190, %eax                   #  10    0x108be3  5      OPC=cmpl_eax_imm32  
  ja .L_108c00                        #  11    0x108be8  2      OPC=ja_label        
  movl 0x58(%rsi), %edx               #  12    0x108bea  3      OPC=movl_r32_m32    
  cmpl $0x190, %edx                   #  13    0x108bed  6      OPC=cmpl_r32_imm32  
  jbe .L_108e00                       #  14    0x108bf3  6      OPC=jbe_label_1     
  nop                                 #  15    0x108bf9  1      OPC=nop             
  nop                                 #  16    0x108bfa  1      OPC=nop             
  nop                                 #  17    0x108bfb  1      OPC=nop             
  nop                                 #  18    0x108bfc  1      OPC=nop             
  nop                                 #  19    0x108bfd  1      OPC=nop             
  nop                                 #  20    0x108bfe  1      OPC=nop             
  nop                                 #  21    0x108bff  1      OPC=nop             
.L_108c00:                            #        0x108c00  0      OPC=<label>         
  xorl %eax, %eax                     #  22    0x108c00  2      OPC=xorl_r32_r32    
.L_108c02:                            #        0x108c02  0      OPC=<label>         
  popq %rbx                           #  23    0x108c02  1      OPC=popq_r64_1      
  popq %rbp                           #  24    0x108c03  1      OPC=popq_r64_1      
  popq %r12                           #  25    0x108c04  2      OPC=popq_r64_1      
  retq                                #  26    0x108c06  1      OPC=retq            
  nop                                 #  27    0x108c07  1      OPC=nop             
  nop                                 #  28    0x108c08  1      OPC=nop             
  nop                                 #  29    0x108c09  1      OPC=nop             
  nop                                 #  30    0x108c0a  1      OPC=nop             
  nop                                 #  31    0x108c0b  1      OPC=nop             
  nop                                 #  32    0x108c0c  1      OPC=nop             
  nop                                 #  33    0x108c0d  1      OPC=nop             
  nop                                 #  34    0x108c0e  1      OPC=nop             
  nop                                 #  35    0x108c0f  1      OPC=nop             
.L_108c10:                            #        0x108c10  0      OPC=<label>         
  movl (%rbp), %eax                   #  36    0x108c10  3      OPC=movl_r32_m32    
  nop                                 #  37    0x108c13  1      OPC=nop             
  nop                                 #  38    0x108c14  1      OPC=nop             
  nop                                 #  39    0x108c15  1      OPC=nop             
  nop                                 #  40    0x108c16  1      OPC=nop             
  nop                                 #  41    0x108c17  1      OPC=nop             
.L_108c18:                            #        0x108c18  0      OPC=<label>         
  cmpl $0x1, %eax                     #  42    0x108c18  3      OPC=cmpl_r32_imm8   
  je .L_108cc0                        #  43    0x108c1b  6      OPC=je_label_1      
.L_108c21:                            #        0x108c21  0      OPC=<label>         
  movq %rbx, %rsi                     #  44    0x108c21  3      OPC=movq_r64_r64    
  movq %rbp, %rdi                     #  45    0x108c24  3      OPC=movq_r64_r64    
  callq .xdr_u_long_GLIBC_2_2_5       #  46    0x108c27  5      OPC=callq_label     
  testl %eax, %eax                    #  47    0x108c2c  2      OPC=testl_r32_r32   
  je .L_108c00                        #  48    0x108c2e  2      OPC=je_label        
  leaq 0x8(%rbx), %rsi                #  49    0x108c30  4      OPC=leaq_r64_m16    
  movq %rbp, %rdi                     #  50    0x108c34  3      OPC=movq_r64_r64    
  callq .xdr_enum_GLIBC_2_2_5         #  51    0x108c37  5      OPC=callq_label     
  testl %eax, %eax                    #  52    0x108c3c  2      OPC=testl_r32_r32   
  je .L_108c00                        #  53    0x108c3e  2      OPC=je_label        
  movl 0x8(%rbx), %eax                #  54    0x108c40  3      OPC=movl_r32_m32    
  testl %eax, %eax                    #  55    0x108c43  2      OPC=testl_r32_r32   
  jne .L_108c00                       #  56    0x108c45  2      OPC=jne_label       
  leaq 0x10(%rbx), %rsi               #  57    0x108c47  4      OPC=leaq_r64_m16    
  movq %rbp, %rdi                     #  58    0x108c4b  3      OPC=movq_r64_r64    
  callq .xdr_u_long_GLIBC_2_2_5       #  59    0x108c4e  5      OPC=callq_label     
  testl %eax, %eax                    #  60    0x108c53  2      OPC=testl_r32_r32   
  je .L_108c00                        #  61    0x108c55  2      OPC=je_label        
  cmpq $0x2, 0x10(%rbx)               #  62    0x108c57  5      OPC=cmpq_m64_imm8   
  jne .L_108c00                       #  63    0x108c5c  2      OPC=jne_label       
  leaq 0x18(%rbx), %rsi               #  64    0x108c5e  4      OPC=leaq_r64_m16    
  movq %rbp, %rdi                     #  65    0x108c62  3      OPC=movq_r64_r64    
  callq .xdr_u_long_GLIBC_2_2_5       #  66    0x108c65  5      OPC=callq_label     
  testl %eax, %eax                    #  67    0x108c6a  2      OPC=testl_r32_r32   
  je .L_108c00                        #  68    0x108c6c  2      OPC=je_label        
  leaq 0x20(%rbx), %rsi               #  69    0x108c6e  4      OPC=leaq_r64_m16    
  movq %rbp, %rdi                     #  70    0x108c72  3      OPC=movq_r64_r64    
  callq .xdr_u_long_GLIBC_2_2_5       #  71    0x108c75  5      OPC=callq_label     
  testl %eax, %eax                    #  72    0x108c7a  2      OPC=testl_r32_r32   
  je .L_108c00                        #  73    0x108c7c  2      OPC=je_label        
  leaq 0x28(%rbx), %rsi               #  74    0x108c7e  4      OPC=leaq_r64_m16    
  movq %rbp, %rdi                     #  75    0x108c82  3      OPC=movq_r64_r64    
  callq .xdr_u_long_GLIBC_2_2_5       #  76    0x108c85  5      OPC=callq_label     
  testl %eax, %eax                    #  77    0x108c8a  2      OPC=testl_r32_r32   
  je .L_108c00                        #  78    0x108c8c  6      OPC=je_label_1      
  leaq 0x30(%rbx), %rsi               #  79    0x108c92  4      OPC=leaq_r64_m16    
  movq %rbp, %rdi                     #  80    0x108c96  3      OPC=movq_r64_r64    
  callq .xdr_opaque_auth_GLIBC_2_2_5  #  81    0x108c99  5      OPC=callq_label     
  testl %eax, %eax                    #  82    0x108c9e  2      OPC=testl_r32_r32   
  je .L_108c00                        #  83    0x108ca0  6      OPC=je_label_1      
  leaq 0x48(%rbx), %rsi               #  84    0x108ca6  4      OPC=leaq_r64_m16    
  movq %rbp, %rdi                     #  85    0x108caa  3      OPC=movq_r64_r64    
  popq %rbx                           #  86    0x108cad  1      OPC=popq_r64_1      
  popq %rbp                           #  87    0x108cae  1      OPC=popq_r64_1      
  popq %r12                           #  88    0x108caf  2      OPC=popq_r64_1      
  jmpq .xdr_opaque_auth_GLIBC_2_2_5   #  89    0x108cb1  5      OPC=jmpq_label_1    
  nop                                 #  90    0x108cb6  1      OPC=nop             
  nop                                 #  91    0x108cb7  1      OPC=nop             
  nop                                 #  92    0x108cb8  1      OPC=nop             
  nop                                 #  93    0x108cb9  1      OPC=nop             
  nop                                 #  94    0x108cba  1      OPC=nop             
  nop                                 #  95    0x108cbb  1      OPC=nop             
  nop                                 #  96    0x108cbc  1      OPC=nop             
  nop                                 #  97    0x108cbd  1      OPC=nop             
  nop                                 #  98    0x108cbe  1      OPC=nop             
  nop                                 #  99    0x108cbf  1      OPC=nop             
.L_108cc0:                            #        0x108cc0  0      OPC=<label>         
  movq 0x8(%rbp), %rax                #  100   0x108cc0  4      OPC=movq_r64_m64    
  movl $0x20, %esi                    #  101   0x108cc4  5      OPC=movl_r32_imm32  
  movq %rbp, %rdi                     #  102   0x108cc9  3      OPC=movq_r64_r64    
  callq 0x30(%rax)                    #  103   0x108ccc  3      OPC=callq_m64       
  testq %rax, %rax                    #  104   0x108ccf  3      OPC=testq_r64_r64   
  je .L_108c21                        #  105   0x108cd2  6      OPC=je_label_1      
  movl (%rax), %edx                   #  106   0x108cd8  2      OPC=movl_r32_m32    
  bswap %edx                          #  107   0x108cda  2      OPC=bswap_r32       
  movl %edx, %ecx                     #  108   0x108cdc  2      OPC=movl_r32_r32    
  movl 0x4(%rax), %edx                #  109   0x108cde  3      OPC=movl_r32_m32    
  movq %rcx, (%rbx)                   #  110   0x108ce1  3      OPC=movq_m64_r64    
  bswap %edx                          #  111   0x108ce4  2      OPC=bswap_r32       
  testl %edx, %edx                    #  112   0x108ce6  2      OPC=testl_r32_r32   
  movl %edx, 0x8(%rbx)                #  113   0x108ce8  3      OPC=movl_m32_r32    
  jne .L_108c00                       #  114   0x108ceb  6      OPC=jne_label_1     
  movl 0x8(%rax), %edx                #  115   0x108cf1  3      OPC=movl_r32_m32    
  bswap %edx                          #  116   0x108cf4  2      OPC=bswap_r32       
  movl %edx, %ecx                     #  117   0x108cf6  2      OPC=movl_r32_r32    
  cmpl $0x2, %edx                     #  118   0x108cf8  3      OPC=cmpl_r32_imm8   
  movq %rcx, 0x10(%rbx)               #  119   0x108cfb  4      OPC=movq_m64_r64    
  jne .L_108c00                       #  120   0x108cff  6      OPC=jne_label_1     
  movl 0xc(%rax), %edx                #  121   0x108d05  3      OPC=movl_r32_m32    
  bswap %edx                          #  122   0x108d08  2      OPC=bswap_r32       
  movl %edx, %ecx                     #  123   0x108d0a  2      OPC=movl_r32_r32    
  movq %rcx, 0x18(%rbx)               #  124   0x108d0c  4      OPC=movq_m64_r64    
  movl 0x10(%rax), %edx               #  125   0x108d10  3      OPC=movl_r32_m32    
  bswap %edx                          #  126   0x108d13  2      OPC=bswap_r32       
  movl %edx, %ecx                     #  127   0x108d15  2      OPC=movl_r32_r32    
  movq %rcx, 0x20(%rbx)               #  128   0x108d17  4      OPC=movq_m64_r64    
  movl 0x14(%rax), %edx               #  129   0x108d1b  3      OPC=movl_r32_m32    
  bswap %edx                          #  130   0x108d1e  2      OPC=bswap_r32       
  movl %edx, %ecx                     #  131   0x108d20  2      OPC=movl_r32_r32    
  movq %rcx, 0x28(%rbx)               #  132   0x108d22  4      OPC=movq_m64_r64    
  movl 0x18(%rax), %edx               #  133   0x108d26  3      OPC=movl_r32_m32    
  bswap %edx                          #  134   0x108d29  2      OPC=bswap_r32       
  movl %edx, 0x30(%rbx)               #  135   0x108d2b  3      OPC=movl_m32_r32    
  movl 0x1c(%rax), %r12d              #  136   0x108d2e  4      OPC=movl_r32_m32    
  bswap %r12d                         #  137   0x108d32  3      OPC=bswap_r32       
  testl %r12d, %r12d                  #  138   0x108d35  3      OPC=testl_r32_r32   
  movl %r12d, 0x40(%rbx)              #  139   0x108d38  4      OPC=movl_m32_r32    
  je .L_108d80                        #  140   0x108d3c  2      OPC=je_label        
  cmpl $0x190, %r12d                  #  141   0x108d3e  7      OPC=cmpl_r32_imm32  
  ja .L_108c00                        #  142   0x108d45  6      OPC=ja_label_1      
  cmpq $0x0, 0x38(%rbx)               #  143   0x108d4b  5      OPC=cmpq_m64_imm8   
  je .L_108f3c                        #  144   0x108d50  6      OPC=je_label_1      
.L_108d56:                            #        0x108d56  0      OPC=<label>         
  movq 0x8(%rbp), %rax                #  145   0x108d56  4      OPC=movq_r64_m64    
  leal 0x3(%r12), %esi                #  146   0x108d5a  5      OPC=leal_r32_m16    
  movq %rbp, %rdi                     #  147   0x108d5f  3      OPC=movq_r64_r64    
  andl $0xfffffffc, %esi              #  148   0x108d62  6      OPC=andl_r32_imm32  
  nop                                 #  149   0x108d68  1      OPC=nop             
  nop                                 #  150   0x108d69  1      OPC=nop             
  nop                                 #  151   0x108d6a  1      OPC=nop             
  callq 0x30(%rax)                    #  152   0x108d6b  3      OPC=callq_m64       
  testq %rax, %rax                    #  153   0x108d6e  3      OPC=testq_r64_r64   
  je .L_108ed3                        #  154   0x108d71  6      OPC=je_label_1      
  movl 0x40(%rbx), %edx               #  155   0x108d77  3      OPC=movl_r32_m32    
  movq 0x38(%rbx), %rdi               #  156   0x108d7a  4      OPC=movq_r64_m64    
  movq %rax, %rsi                     #  157   0x108d7e  3      OPC=movq_r64_r64    
  callq .__GI_memcpy                  #  158   0x108d81  5      OPC=callq_label     
.L_108d80:                            #        0x108d86  0      OPC=<label>         
  movq 0x8(%rbp), %rax                #  159   0x108d86  4      OPC=movq_r64_m64    
  movl $0x8, %esi                     #  160   0x108d8a  5      OPC=movl_r32_imm32  
  movq %rbp, %rdi                     #  161   0x108d8f  3      OPC=movq_r64_r64    
  callq 0x30(%rax)                    #  162   0x108d92  3      OPC=callq_m64       
  testq %rax, %rax                    #  163   0x108d95  3      OPC=testq_r64_r64   
  je .L_108f0b                        #  164   0x108d98  6      OPC=je_label_1      
  movl (%rax), %edx                   #  165   0x108d9e  2      OPC=movl_r32_m32    
  bswap %edx                          #  166   0x108da0  2      OPC=bswap_r32       
  movl %edx, 0x48(%rbx)               #  167   0x108da2  3      OPC=movl_m32_r32    
  movl 0x4(%rax), %r12d               #  168   0x108da5  4      OPC=movl_r32_m32    
  bswap %r12d                         #  169   0x108da9  3      OPC=bswap_r32       
  movl %r12d, 0x58(%rbx)              #  170   0x108dac  4      OPC=movl_m32_r32    
.L_108daa:                            #        0x108db0  0      OPC=<label>         
  testl %r12d, %r12d                  #  171   0x108db0  3      OPC=testl_r32_r32   
  je .L_108e99                        #  172   0x108db3  6      OPC=je_label_1      
  cmpl $0x190, %r12d                  #  173   0x108db9  7      OPC=cmpl_r32_imm32  
  ja .L_108c00                        #  174   0x108dc0  6      OPC=ja_label_1      
  cmpq $0x0, 0x50(%rbx)               #  175   0x108dc6  5      OPC=cmpq_m64_imm8   
  je .L_108f4d                        #  176   0x108dcb  6      OPC=je_label_1      
.L_108dcb:                            #        0x108dd1  0      OPC=<label>         
  movq 0x8(%rbp), %rax                #  177   0x108dd1  4      OPC=movq_r64_m64    
  leal 0x3(%r12), %esi                #  178   0x108dd5  5      OPC=leal_r32_m16    
  movq %rbp, %rdi                     #  179   0x108dda  3      OPC=movq_r64_r64    
  andl $0xfffffffc, %esi              #  180   0x108ddd  6      OPC=andl_r32_imm32  
  nop                                 #  181   0x108de3  1      OPC=nop             
  nop                                 #  182   0x108de4  1      OPC=nop             
  nop                                 #  183   0x108de5  1      OPC=nop             
  callq 0x30(%rax)                    #  184   0x108de6  3      OPC=callq_m64       
  testq %rax, %rax                    #  185   0x108de9  3      OPC=testq_r64_r64   
  je .L_108eef                        #  186   0x108dec  6      OPC=je_label_1      
  movl 0x58(%rbx), %edx               #  187   0x108df2  3      OPC=movl_r32_m32    
  movq 0x50(%rbx), %rdi               #  188   0x108df5  4      OPC=movq_r64_m64    
  movq %rax, %rsi                     #  189   0x108df9  3      OPC=movq_r64_r64    
  callq .__GI_memcpy                  #  190   0x108dfc  5      OPC=callq_label     
  movl $0x1, %eax                     #  191   0x108e01  5      OPC=movl_r32_imm32  
  jmpq .L_108c02                      #  192   0x108e06  5      OPC=jmpq_label_1    
  nop                                 #  193   0x108e0b  1      OPC=nop             
.L_108e00:                            #        0x108e0c  0      OPC=<label>         
  movq 0x8(%rdi), %rcx                #  194   0x108e0c  4      OPC=movq_r64_m64    
  addl $0x3, %eax                     #  195   0x108e10  3      OPC=addl_r32_imm8   
  addl $0x3, %edx                     #  196   0x108e13  3      OPC=addl_r32_imm8   
  andl $0xfffffffc, %eax              #  197   0x108e16  6      OPC=andl_r32_imm32  
  nop                                 #  198   0x108e1c  1      OPC=nop             
  nop                                 #  199   0x108e1d  1      OPC=nop             
  nop                                 #  200   0x108e1e  1      OPC=nop             
  andl $0xfffffffc, %edx              #  201   0x108e1f  6      OPC=andl_r32_imm32  
  nop                                 #  202   0x108e25  1      OPC=nop             
  nop                                 #  203   0x108e26  1      OPC=nop             
  nop                                 #  204   0x108e27  1      OPC=nop             
  leal 0x28(%rax,%rdx,1), %esi        #  205   0x108e28  4      OPC=leal_r32_m16    
  callq 0x30(%rcx)                    #  206   0x108e2c  3      OPC=callq_m64       
  testq %rax, %rax                    #  207   0x108e2f  3      OPC=testq_r64_r64   
  je .L_108c10                        #  208   0x108e32  6      OPC=je_label_1      
  movq (%rbx), %rdx                   #  209   0x108e38  3      OPC=movq_r64_m64    
  bswap %edx                          #  210   0x108e3b  2      OPC=bswap_r32       
  movl %edx, (%rax)                   #  211   0x108e3d  2      OPC=movl_m32_r32    
  movl 0x8(%rbx), %edx                #  212   0x108e3f  3      OPC=movl_r32_m32    
  movl %edx, %ecx                     #  213   0x108e42  2      OPC=movl_r32_r32    
  testl %edx, %edx                    #  214   0x108e44  2      OPC=testl_r32_r32   
  bswap %ecx                          #  215   0x108e46  2      OPC=bswap_r32       
  movl %ecx, 0x4(%rax)                #  216   0x108e48  3      OPC=movl_m32_r32    
  jne .L_108c00                       #  217   0x108e4b  6      OPC=jne_label_1     
  movq 0x10(%rbx), %rdx               #  218   0x108e51  4      OPC=movq_r64_m64    
  bswap %edx                          #  219   0x108e55  2      OPC=bswap_r32       
  movl %edx, 0x8(%rax)                #  220   0x108e57  3      OPC=movl_m32_r32    
  cmpq $0x2, 0x10(%rbx)               #  221   0x108e5a  5      OPC=cmpq_m64_imm8   
  jne .L_108c00                       #  222   0x108e5f  6      OPC=jne_label_1     
  movq 0x18(%rbx), %rdx               #  223   0x108e65  4      OPC=movq_r64_m64    
  leaq 0x20(%rax), %rcx               #  224   0x108e69  4      OPC=leaq_r64_m16    
  bswap %edx                          #  225   0x108e6d  2      OPC=bswap_r32       
  movl %edx, 0xc(%rax)                #  226   0x108e6f  3      OPC=movl_m32_r32    
  movq 0x20(%rbx), %rdx               #  227   0x108e72  4      OPC=movq_r64_m64    
  bswap %edx                          #  228   0x108e76  2      OPC=bswap_r32       
  movl %edx, 0x10(%rax)               #  229   0x108e78  3      OPC=movl_m32_r32    
  movq 0x28(%rbx), %rdx               #  230   0x108e7b  4      OPC=movq_r64_m64    
  bswap %edx                          #  231   0x108e7f  2      OPC=bswap_r32       
  movl %edx, 0x14(%rax)               #  232   0x108e81  3      OPC=movl_m32_r32    
  movl 0x30(%rbx), %edx               #  233   0x108e84  3      OPC=movl_r32_m32    
  bswap %edx                          #  234   0x108e87  2      OPC=bswap_r32       
  movl %edx, 0x18(%rax)               #  235   0x108e89  3      OPC=movl_m32_r32    
  movl 0x40(%rbx), %edx               #  236   0x108e8c  3      OPC=movl_r32_m32    
  bswap %edx                          #  237   0x108e8f  2      OPC=bswap_r32       
  movl %edx, 0x1c(%rax)               #  238   0x108e91  3      OPC=movl_m32_r32    
  movl 0x40(%rbx), %eax               #  239   0x108e94  3      OPC=movl_r32_m32    
  testl %eax, %eax                    #  240   0x108e97  2      OPC=testl_r32_r32   
  jne .L_108eb4                       #  241   0x108e99  2      OPC=jne_label       
.L_108e83:                            #        0x108e9b  0      OPC=<label>         
  movl 0x48(%rbx), %eax               #  242   0x108e9b  3      OPC=movl_r32_m32    
  bswap %eax                          #  243   0x108e9e  2      OPC=bswap_r32       
  movl %eax, (%rcx)                   #  244   0x108ea0  2      OPC=movl_m32_r32    
  movl 0x58(%rbx), %eax               #  245   0x108ea2  3      OPC=movl_r32_m32    
  bswap %eax                          #  246   0x108ea5  2      OPC=bswap_r32       
  movl %eax, 0x4(%rcx)                #  247   0x108ea7  3      OPC=movl_m32_r32    
  movl 0x58(%rbx), %eax               #  248   0x108eaa  3      OPC=movl_r32_m32    
  testl %eax, %eax                    #  249   0x108ead  2      OPC=testl_r32_r32   
  jne .L_108ea3                       #  250   0x108eaf  2      OPC=jne_label       
.L_108e99:                            #        0x108eb1  0      OPC=<label>         
  movl $0x1, %eax                     #  251   0x108eb1  5      OPC=movl_r32_imm32  
  jmpq .L_108c02                      #  252   0x108eb6  5      OPC=jmpq_label_1    
.L_108ea3:                            #        0x108ebb  0      OPC=<label>         
  movq 0x50(%rbx), %rsi               #  253   0x108ebb  4      OPC=movq_r64_m64    
  leaq 0x8(%rcx), %rdi                #  254   0x108ebf  4      OPC=leaq_r64_m16    
  movl %eax, %edx                     #  255   0x108ec3  2      OPC=movl_r32_r32    
  callq .__GI_memcpy                  #  256   0x108ec5  5      OPC=callq_label     
  jmpq .L_108e99                      #  257   0x108eca  2      OPC=jmpq_label      
.L_108eb4:                            #        0x108ecc  0      OPC=<label>         
  movq 0x38(%rbx), %rsi               #  258   0x108ecc  4      OPC=movq_r64_m64    
  movq %rcx, %rdi                     #  259   0x108ed0  3      OPC=movq_r64_r64    
  movl %eax, %edx                     #  260   0x108ed3  2      OPC=movl_r32_r32    
  callq .__GI_memcpy                  #  261   0x108ed5  5      OPC=callq_label     
  movq %rax, %rcx                     #  262   0x108eda  3      OPC=movq_r64_r64    
  movl 0x40(%rbx), %eax               #  263   0x108edd  3      OPC=movl_r32_m32    
  addl $0x3, %eax                     #  264   0x108ee0  3      OPC=addl_r32_imm8   
  andl $0xfffffffc, %eax              #  265   0x108ee3  6      OPC=andl_r32_imm32  
  nop                                 #  266   0x108ee9  1      OPC=nop             
  nop                                 #  267   0x108eea  1      OPC=nop             
  nop                                 #  268   0x108eeb  1      OPC=nop             
  addq %rax, %rcx                     #  269   0x108eec  3      OPC=addq_r64_r64    
  jmpq .L_108e83                      #  270   0x108eef  2      OPC=jmpq_label      
.L_108ed3:                            #        0x108ef1  0      OPC=<label>         
  movl 0x40(%rbx), %edx               #  271   0x108ef1  3      OPC=movl_r32_m32    
  movq 0x38(%rbx), %rsi               #  272   0x108ef4  4      OPC=movq_r64_m64    
  movq %rbp, %rdi                     #  273   0x108ef8  3      OPC=movq_r64_r64    
  callq .xdr_opaque_GLIBC_2_2_5       #  274   0x108efb  5      OPC=callq_label     
  testl %eax, %eax                    #  275   0x108f00  2      OPC=testl_r32_r32   
  jne .L_108d80                       #  276   0x108f02  6      OPC=jne_label_1     
  jmpq .L_108c00                      #  277   0x108f08  5      OPC=jmpq_label_1    
.L_108eef:                            #        0x108f0d  0      OPC=<label>         
  movl 0x58(%rbx), %edx               #  278   0x108f0d  3      OPC=movl_r32_m32    
  movq 0x50(%rbx), %rsi               #  279   0x108f10  4      OPC=movq_r64_m64    
  movq %rbp, %rdi                     #  280   0x108f14  3      OPC=movq_r64_r64    
  callq .xdr_opaque_GLIBC_2_2_5       #  281   0x108f17  5      OPC=callq_label     
  testl %eax, %eax                    #  282   0x108f1c  2      OPC=testl_r32_r32   
  setne %al                           #  283   0x108f1e  3      OPC=setne_r8        
  movzbl %al, %eax                    #  284   0x108f21  3      OPC=movzbl_r32_r8   
  jmpq .L_108c02                      #  285   0x108f24  5      OPC=jmpq_label_1    
.L_108f0b:                            #        0x108f29  0      OPC=<label>         
  leaq 0x48(%rbx), %rsi               #  286   0x108f29  4      OPC=leaq_r64_m16    
  movq %rbp, %rdi                     #  287   0x108f2d  3      OPC=movq_r64_r64    
  callq .xdr_enum_GLIBC_2_2_5         #  288   0x108f30  5      OPC=callq_label     
  testl %eax, %eax                    #  289   0x108f35  2      OPC=testl_r32_r32   
  je .L_108c00                        #  290   0x108f37  6      OPC=je_label_1      
  leaq 0x58(%rbx), %rsi               #  291   0x108f3d  4      OPC=leaq_r64_m16    
  movq %rbp, %rdi                     #  292   0x108f41  3      OPC=movq_r64_r64    
  callq .xdr_u_int_GLIBC_2_2_5        #  293   0x108f44  5      OPC=callq_label     
  testl %eax, %eax                    #  294   0x108f49  2      OPC=testl_r32_r32   
  je .L_108c00                        #  295   0x108f4b  6      OPC=je_label_1      
  movl 0x58(%rbx), %r12d              #  296   0x108f51  4      OPC=movl_r32_m32    
  jmpq .L_108daa                      #  297   0x108f55  5      OPC=jmpq_label_1    
.L_108f3c:                            #        0x108f5a  0      OPC=<label>         
  movl %r12d, %edi                    #  298   0x108f5a  3      OPC=movl_r32_r32    
  callq .memalign_plt                 #  299   0x108f5d  5      OPC=callq_label     
  movq %rax, 0x38(%rbx)               #  300   0x108f62  4      OPC=movq_m64_r64    
  jmpq .L_108d56                      #  301   0x108f66  5      OPC=jmpq_label_1    
.L_108f4d:                            #        0x108f6b  0      OPC=<label>         
  movl %r12d, %edi                    #  302   0x108f6b  3      OPC=movl_r32_r32    
  callq .memalign_plt                 #  303   0x108f6e  5      OPC=callq_label     
  movq %rax, 0x50(%rbx)               #  304   0x108f73  4      OPC=movq_m64_r64    
  jmpq .L_108dcb                      #  305   0x108f77  5      OPC=jmpq_label_1    
  xchgw %ax, %ax                      #  306   0x108f7c  2      OPC=xchgw_ax_r16    
                                                                                    
.size xdr_callmsg_GLIBC_2_2_5, .-xdr_callmsg_GLIBC_2_2_5

