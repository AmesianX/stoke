  .text
  .globl fgetsgent
  .type fgetsgent, @function

#! file-offset 0xec590
#! rip-offset  0xec590
#! capacity    480 bytes

# Text                               #  Line  RIP      Bytes  Opcode                
.fgetsgent:                          #        0xec590  0      OPC=<label>           
  pushq %r15                         #  1     0xec590  2      OPC=pushq_r64_1       
  pushq %r14                         #  2     0xec592  2      OPC=pushq_r64_1       
  pushq %r13                         #  3     0xec594  2      OPC=pushq_r64_1       
  pushq %r12                         #  4     0xec596  2      OPC=pushq_r64_1       
  pushq %rbp                         #  5     0xec598  1      OPC=pushq_r64_1       
  pushq %rbx                         #  6     0xec599  1      OPC=pushq_r64_1       
  movq %rdi, %rbx                    #  7     0xec59a  3      OPC=movq_r64_r64      
  subq $0x38, %rsp                   #  8     0xec59d  4      OPC=subq_r64_imm8     
  leaq 0x20(%rsp), %rbp              #  9     0xec5a1  5      OPC=leaq_r64_m16      
  movq %rbp, %rsi                    #  10    0xec5a6  3      OPC=movq_r64_r64      
  callq ._IO_fgetpos64__GLIBC_2_2_5  #  11    0xec5a9  5      OPC=callq_label       
  testl %eax, %eax                   #  12    0xec5ae  2      OPC=testl_r32_r32     
  jne .L_ec732                       #  13    0xec5b0  6      OPC=jne_label_1       
  movl $0x1, %esi                    #  14    0xec5b6  5      OPC=movl_r32_imm32    
  cmpl $0x0, 0x2b463e(%rip)          #  15    0xec5bb  7      OPC=cmpl_m32_imm8     
  je .L_ec5d0                        #  16    0xec5c2  2      OPC=je_label          
  lock                               #  17    0xec5c4  1      OPC=lock              
  cmpxchgl %esi, 0x2b25dc(%rip)      #  18    0xec5c5  7      OPC=cmpxchgl_m32_r32  
  nop                                #  19    0xec5cc  1      OPC=nop               
  jne .L_ec5d9                       #  20    0xec5cd  2      OPC=jne_label         
  jmpq .L_ec5f3                      #  21    0xec5cf  2      OPC=jmpq_label        
.L_ec5d0:                            #        0xec5d1  0      OPC=<label>           
  cmpxchgl %esi, 0x2b25d1(%rip)      #  22    0xec5d1  7      OPC=cmpxchgl_m32_r32  
  je .L_ec5f3                        #  23    0xec5d8  2      OPC=je_label          
.L_ec5d9:                            #        0xec5da  0      OPC=<label>           
  leaq 0x2b25c8(%rip), %rdi          #  24    0xec5da  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                   #  25    0xec5e1  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private     #  26    0xec5e8  5      OPC=callq_label       
  addq $0x80, %rsp                   #  27    0xec5ed  7      OPC=addq_r64_imm32    
.L_ec5f3:                            #        0xec5f4  0      OPC=<label>           
  movq 0x2b0346(%rip), %rdx          #  28    0xec5f4  7      OPC=movq_r64_m64      
  testq %rdx, %rdx                   #  29    0xec5fb  3      OPC=testq_r64_r64     
  je .L_ec743                        #  30    0xec5fe  6      OPC=je_label_1        
.L_ec603:                            #        0xec604  0      OPC=<label>           
  movq 0x2ae876(%rip), %r13          #  31    0xec604  7      OPC=movq_r64_m64      
  leaq 0x18(%rsp), %r12              #  32    0xec60b  5      OPC=leaq_r64_m16      
  jmpq .L_ec639                      #  33    0xec610  2      OPC=jmpq_label        
  nop                                #  34    0xec612  1      OPC=nop               
  nop                                #  35    0xec613  1      OPC=nop               
  nop                                #  36    0xec614  1      OPC=nop               
  nop                                #  37    0xec615  1      OPC=nop               
  nop                                #  38    0xec616  1      OPC=nop               
  nop                                #  39    0xec617  1      OPC=nop               
  nop                                #  40    0xec618  1      OPC=nop               
.L_ec618:                            #        0xec619  0      OPC=<label>           
  movq %rbp, %rsi                    #  41    0xec619  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                    #  42    0xec61c  3      OPC=movq_r64_r64      
  movq %rax, 0x2b031b(%rip)          #  43    0xec61f  7      OPC=movq_m64_r64      
  callq ._IO_fsetpos64__GLIBC_2_2_5  #  44    0xec626  5      OPC=callq_label       
  testl %eax, %eax                   #  45    0xec62b  2      OPC=testl_r32_r32     
  jne .L_ec720                       #  46    0xec62d  6      OPC=jne_label_1       
  movq 0x2b0307(%rip), %rdx          #  47    0xec633  7      OPC=movq_r64_m64      
.L_ec639:                            #        0xec63a  0      OPC=<label>           
  testq %rdx, %rdx                   #  48    0xec63a  3      OPC=testq_r64_r64     
  je .L_ec6c0                        #  49    0xec63d  6      OPC=je_label_1        
  movq 0x2b2557(%rip), %rcx          #  50    0xec643  7      OPC=movq_r64_m64      
  leaq 0x2b2530(%rip), %rsi          #  51    0xec64a  7      OPC=leaq_r64_m16      
  movq %r12, %r8                     #  52    0xec651  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                    #  53    0xec654  3      OPC=movq_r64_r64      
  callq .fgetsgent_r                 #  54    0xec657  5      OPC=callq_label       
  cmpl $0x22, %eax                   #  55    0xec65c  3      OPC=cmpl_r32_imm8     
  jne .L_ec6b0                       #  56    0xec65f  2      OPC=jne_label         
  movq 0x2b2539(%rip), %rax          #  57    0xec661  7      OPC=movq_r64_m64      
  movq 0x2b02d2(%rip), %r14          #  58    0xec668  7      OPC=movq_r64_m64      
  leaq 0x400(%rax), %rsi             #  59    0xec66f  7      OPC=leaq_r64_m16      
  movq %r14, %rdi                    #  60    0xec676  3      OPC=movq_r64_r64      
  movq %rsi, 0x2b2521(%rip)          #  61    0xec679  7      OPC=movq_m64_r64      
  callq .__tls_get_addr_plt          #  62    0xec680  5      OPC=callq_label       
  testq %rax, %rax                   #  63    0xec685  3      OPC=testq_r64_r64     
  jne .L_ec618                       #  64    0xec688  2      OPC=jne_label         
  movl (%r13), %r15d                 #  65    0xec68a  4      OPC=movl_r32_m32      
  nop                                #  66    0xec68e  1      OPC=nop               
  movq %r14, %rdi                    #  67    0xec68f  3      OPC=movq_r64_r64      
  movq %rax, 0x8(%rsp)               #  68    0xec692  5      OPC=movq_m64_r64      
  callq .L_1f8c0                     #  69    0xec697  5      OPC=callq_label       
  movq 0x8(%rsp), %rax               #  70    0xec69c  5      OPC=movq_r64_m64      
  movl %r15d, (%r13)                 #  71    0xec6a1  4      OPC=movl_m32_r32      
  nop                                #  72    0xec6a5  1      OPC=nop               
  jmpq .L_ec618                      #  73    0xec6a6  5      OPC=jmpq_label_1      
  nop                                #  74    0xec6ab  1      OPC=nop               
  nop                                #  75    0xec6ac  1      OPC=nop               
  nop                                #  76    0xec6ad  1      OPC=nop               
  nop                                #  77    0xec6ae  1      OPC=nop               
  nop                                #  78    0xec6af  1      OPC=nop               
  nop                                #  79    0xec6b0  1      OPC=nop               
.L_ec6b0:                            #        0xec6b1  0      OPC=<label>           
  cmpq $0x0, 0x2b0288(%rip)          #  80    0xec6b1  8      OPC=cmpq_m64_imm8     
  jne .L_ec6c9                       #  81    0xec6b9  2      OPC=jne_label         
  nop                                #  82    0xec6bb  1      OPC=nop               
  nop                                #  83    0xec6bc  1      OPC=nop               
  nop                                #  84    0xec6bd  1      OPC=nop               
  nop                                #  85    0xec6be  1      OPC=nop               
  nop                                #  86    0xec6bf  1      OPC=nop               
  nop                                #  87    0xec6c0  1      OPC=nop               
.L_ec6c0:                            #        0xec6c1  0      OPC=<label>           
  movq $0x0, 0x18(%rsp)              #  88    0xec6c1  9      OPC=movq_m64_imm32    
.L_ec6c9:                            #        0xec6ca  0      OPC=<label>           
  movl (%r13), %edx                  #  89    0xec6ca  4      OPC=movl_r32_m32      
  nop                                #  90    0xec6ce  1      OPC=nop               
  cmpl $0x0, 0x2b452b(%rip)          #  91    0xec6cf  7      OPC=cmpl_m32_imm8     
  je .L_ec6e2                        #  92    0xec6d6  2      OPC=je_label          
  lock                               #  93    0xec6d8  1      OPC=lock              
  decl 0x2b24ca(%rip)                #  94    0xec6d9  6      OPC=decl_m32          
  nop                                #  95    0xec6df  1      OPC=nop               
  jne .L_ec6ea                       #  96    0xec6e0  2      OPC=jne_label         
  jmpq .L_ec704                      #  97    0xec6e2  2      OPC=jmpq_label        
.L_ec6e2:                            #        0xec6e4  0      OPC=<label>           
  decl 0x2b24c0(%rip)                #  98    0xec6e4  6      OPC=decl_m32          
  je .L_ec704                        #  99    0xec6ea  2      OPC=je_label          
.L_ec6ea:                            #        0xec6ec  0      OPC=<label>           
  leaq 0x2b24b7(%rip), %rdi          #  100   0xec6ec  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                   #  101   0xec6f3  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private   #  102   0xec6fa  5      OPC=callq_label       
  addq $0x80, %rsp                   #  103   0xec6ff  7      OPC=addq_r64_imm32    
.L_ec704:                            #        0xec706  0      OPC=<label>           
  movl %edx, (%r13)                  #  104   0xec706  4      OPC=movl_m32_r32      
  nop                                #  105   0xec70a  1      OPC=nop               
  movq 0x18(%rsp), %rax              #  106   0xec70b  5      OPC=movq_r64_m64      
  addq $0x38, %rsp                   #  107   0xec710  4      OPC=addq_r64_imm8     
  popq %rbx                          #  108   0xec714  1      OPC=popq_r64_1        
  popq %rbp                          #  109   0xec715  1      OPC=popq_r64_1        
  popq %r12                          #  110   0xec716  2      OPC=popq_r64_1        
  popq %r13                          #  111   0xec718  2      OPC=popq_r64_1        
  popq %r14                          #  112   0xec71a  2      OPC=popq_r64_1        
  popq %r15                          #  113   0xec71c  2      OPC=popq_r64_1        
  retq                               #  114   0xec71e  1      OPC=retq              
  nop                                #  115   0xec71f  1      OPC=nop               
  nop                                #  116   0xec720  1      OPC=nop               
  nop                                #  117   0xec721  1      OPC=nop               
.L_ec720:                            #        0xec722  0      OPC=<label>           
  movq $0x0, 0x2b0215(%rip)          #  118   0xec722  11     OPC=movq_m64_imm32    
  xorl %edx, %edx                    #  119   0xec72d  2      OPC=xorl_r32_r32      
  jmpq .L_ec639                      #  120   0xec72f  5      OPC=jmpq_label_1      
.L_ec732:                            #        0xec734  0      OPC=<label>           
  addq $0x38, %rsp                   #  121   0xec734  4      OPC=addq_r64_imm8     
  xorl %eax, %eax                    #  122   0xec738  2      OPC=xorl_r32_r32      
  popq %rbx                          #  123   0xec73a  1      OPC=popq_r64_1        
  popq %rbp                          #  124   0xec73b  1      OPC=popq_r64_1        
  popq %r12                          #  125   0xec73c  2      OPC=popq_r64_1        
  popq %r13                          #  126   0xec73e  2      OPC=popq_r64_1        
  popq %r14                          #  127   0xec740  2      OPC=popq_r64_1        
  popq %r15                          #  128   0xec742  2      OPC=popq_r64_1        
  retq                               #  129   0xec744  1      OPC=retq              
.L_ec743:                            #        0xec745  0      OPC=<label>           
  movl $0x400, %edi                  #  130   0xec745  5      OPC=movl_r32_imm32    
  movq $0x400, 0x2b244d(%rip)        #  131   0xec74a  11     OPC=movq_m64_imm32    
  callq .memalign_plt                #  132   0xec755  5      OPC=callq_label       
  movq %rax, 0x2b01e1(%rip)          #  133   0xec75a  7      OPC=movq_m64_r64      
  movq %rax, %rdx                    #  134   0xec761  3      OPC=movq_r64_r64      
  jmpq .L_ec603                      #  135   0xec764  5      OPC=jmpq_label_1      
  nop                                #  136   0xec769  1      OPC=nop               
  nop                                #  137   0xec76a  1      OPC=nop               
  nop                                #  138   0xec76b  1      OPC=nop               
  nop                                #  139   0xec76c  1      OPC=nop               
  nop                                #  140   0xec76d  1      OPC=nop               
  nop                                #  141   0xec76e  1      OPC=nop               
  nop                                #  142   0xec76f  1      OPC=nop               
  nop                                #  143   0xec770  1      OPC=nop               
  nop                                #  144   0xec771  1      OPC=nop               
                                                                                    
.size fgetsgent, .-fgetsgent

