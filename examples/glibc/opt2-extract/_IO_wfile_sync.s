  .text
  .globl _IO_wfile_sync
  .type _IO_wfile_sync, @function

#! file-offset 0x6c3a0
#! rip-offset  0x6c3a0
#! capacity    352 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
._IO_wfile_sync:                    #        0x6c3a0  0      OPC=<label>           
  pushq %r12                        #  1     0x6c3a0  2      OPC=pushq_r64_1       
  pushq %rbp                        #  2     0x6c3a2  1      OPC=pushq_r64_1       
  pushq %rbx                        #  3     0x6c3a3  1      OPC=pushq_r64_1       
  movq 0xa0(%rdi), %rax             #  4     0x6c3a4  7      OPC=movq_r64_m64      
  movq %rdi, %rbx                   #  5     0x6c3ab  3      OPC=movq_r64_r64      
  movq 0x20(%rax), %rdx             #  6     0x6c3ae  4      OPC=movq_r64_m64      
  movq 0x18(%rax), %rsi             #  7     0x6c3b2  4      OPC=movq_r64_m64      
  cmpq %rsi, %rdx                   #  8     0x6c3b6  3      OPC=cmpq_r64_r64      
  jbe .L_6c3f7                      #  9     0x6c3b9  2      OPC=jbe_label         
  movl 0xc0(%rdi), %eax             #  10    0x6c3bb  6      OPC=movl_r32_m32      
  testl %eax, %eax                  #  11    0x6c3c1  2      OPC=testl_r32_r32     
  jle .L_6c470                      #  12    0x6c3c3  6      OPC=jle_label_1       
  subq %rsi, %rdx                   #  13    0x6c3c9  3      OPC=subq_r64_r64      
  sarq $0x2, %rdx                   #  14    0x6c3cc  4      OPC=sarq_r64_imm8     
  callq ._IO_wdo_write              #  15    0x6c3d0  5      OPC=callq_label       
  testl %eax, %eax                  #  16    0x6c3d5  2      OPC=testl_r32_r32     
  setne %al                         #  17    0x6c3d7  3      OPC=setne_r8          
.L_6c3da:                           #        0x6c3da  0      OPC=<label>           
  testb %al, %al                    #  18    0x6c3da  2      OPC=testb_r8_r8       
  je .L_6c3f0                       #  19    0x6c3dc  2      OPC=je_label          
.L_6c3de:                           #        0x6c3de  0      OPC=<label>           
  popq %rbx                         #  20    0x6c3de  1      OPC=popq_r64_1        
  movl $0xffffffff, %eax            #  21    0x6c3df  6      OPC=movl_r32_imm32_1  
  popq %rbp                         #  22    0x6c3e5  1      OPC=popq_r64_1        
  popq %r12                         #  23    0x6c3e6  2      OPC=popq_r64_1        
  retq                              #  24    0x6c3e8  1      OPC=retq              
  nop                               #  25    0x6c3e9  1      OPC=nop               
  nop                               #  26    0x6c3ea  1      OPC=nop               
  nop                               #  27    0x6c3eb  1      OPC=nop               
  nop                               #  28    0x6c3ec  1      OPC=nop               
  nop                               #  29    0x6c3ed  1      OPC=nop               
  nop                               #  30    0x6c3ee  1      OPC=nop               
  nop                               #  31    0x6c3ef  1      OPC=nop               
  nop                               #  32    0x6c3f0  1      OPC=nop               
.L_6c3f0:                           #        0x6c3f1  0      OPC=<label>           
  movq 0xa0(%rbx), %rax             #  33    0x6c3f1  7      OPC=movq_r64_m64      
.L_6c3f7:                           #        0x6c3f8  0      OPC=<label>           
  movq (%rax), %rbp                 #  34    0x6c3f8  3      OPC=movq_r64_m64      
  subq 0x8(%rax), %rbp              #  35    0x6c3fb  4      OPC=subq_r64_m64      
  sarq $0x2, %rbp                   #  36    0x6c3ff  4      OPC=sarq_r64_imm8     
  testq %rbp, %rbp                  #  37    0x6c403  3      OPC=testq_r64_r64     
  jne .L_6c420                      #  38    0x6c406  2      OPC=jne_label         
.L_6c407:                           #        0x6c408  0      OPC=<label>           
  movq $0xffffffff, 0x90(%rbx)      #  39    0x6c408  11     OPC=movq_m64_imm32    
  xorl %eax, %eax                   #  40    0x6c413  2      OPC=xorl_r32_r32      
  popq %rbx                         #  41    0x6c415  1      OPC=popq_r64_1        
  popq %rbp                         #  42    0x6c416  1      OPC=popq_r64_1        
  popq %r12                         #  43    0x6c417  2      OPC=popq_r64_1        
  retq                              #  44    0x6c419  1      OPC=retq              
  nop                               #  45    0x6c41a  1      OPC=nop               
  nop                               #  46    0x6c41b  1      OPC=nop               
  nop                               #  47    0x6c41c  1      OPC=nop               
  nop                               #  48    0x6c41d  1      OPC=nop               
  nop                               #  49    0x6c41e  1      OPC=nop               
  nop                               #  50    0x6c41f  1      OPC=nop               
  nop                               #  51    0x6c420  1      OPC=nop               
.L_6c420:                           #        0x6c421  0      OPC=<label>           
  movq 0x98(%rbx), %r12             #  52    0x6c421  7      OPC=movq_r64_m64      
  movq %r12, %rdi                   #  53    0x6c428  3      OPC=movq_r64_r64      
  callq 0x20(%r12)                  #  54    0x6c42b  5      OPC=callq_m64         
  testl %eax, %eax                  #  55    0x6c430  2      OPC=testl_r32_r32     
  jle .L_6c4b0                      #  56    0x6c432  2      OPC=jle_label         
  cltq                              #  57    0x6c434  2      OPC=cltq              
  movq %rbp, %rsi                   #  58    0x6c436  3      OPC=movq_r64_r64      
  imulq %rax, %rsi                  #  59    0x6c439  4      OPC=imulq_r64_r64     
.L_6c43c:                           #        0x6c43d  0      OPC=<label>           
  movq 0xd8(%rbx), %rax             #  60    0x6c43d  7      OPC=movq_r64_m64      
  movl $0x1, %edx                   #  61    0x6c444  5      OPC=movl_r32_imm32    
  movq %rbx, %rdi                   #  62    0x6c449  3      OPC=movq_r64_r64      
  callq 0x80(%rax)                  #  63    0x6c44c  6      OPC=callq_m64         
  cmpq $0xff, %rax                  #  64    0x6c452  4      OPC=cmpq_r64_imm8     
  je .L_6c490                       #  65    0x6c456  2      OPC=je_label          
  movq 0xa0(%rbx), %rax             #  66    0x6c458  7      OPC=movq_r64_m64      
  movq (%rax), %rdx                 #  67    0x6c45f  3      OPC=movq_r64_m64      
  movq %rdx, 0x8(%rax)              #  68    0x6c462  4      OPC=movq_m64_r64      
  movq 0x8(%rbx), %rax              #  69    0x6c466  4      OPC=movq_r64_m64      
  movq %rax, 0x10(%rbx)             #  70    0x6c46a  4      OPC=movq_m64_r64      
  jmpq .L_6c407                     #  71    0x6c46e  2      OPC=jmpq_label        
  nop                               #  72    0x6c470  1      OPC=nop               
.L_6c470:                           #        0x6c471  0      OPC=<label>           
  movq 0x20(%rdi), %rsi             #  73    0x6c471  4      OPC=movq_r64_m64      
  movq 0x28(%rdi), %rdx             #  74    0x6c475  4      OPC=movq_r64_m64      
  subq %rsi, %rdx                   #  75    0x6c479  3      OPC=subq_r64_r64      
  callq ._IO_do_write__GLIBC_2_2_5  #  76    0x6c47c  5      OPC=callq_label       
  testl %eax, %eax                  #  77    0x6c481  2      OPC=testl_r32_r32     
  setne %al                         #  78    0x6c483  3      OPC=setne_r8          
  jmpq .L_6c3da                     #  79    0x6c486  5      OPC=jmpq_label_1      
  nop                               #  80    0x6c48b  1      OPC=nop               
  nop                               #  81    0x6c48c  1      OPC=nop               
  nop                               #  82    0x6c48d  1      OPC=nop               
  nop                               #  83    0x6c48e  1      OPC=nop               
  nop                               #  84    0x6c48f  1      OPC=nop               
  nop                               #  85    0x6c490  1      OPC=nop               
.L_6c490:                           #        0x6c491  0      OPC=<label>           
  movq 0x32e9e9(%rip), %rax         #  86    0x6c491  7      OPC=movq_r64_m64      
  cmpl $0x1d, (%rax)                #  87    0x6c498  3      OPC=cmpl_m32_imm8     
  nop                               #  88    0x6c49b  1      OPC=nop               
  jne .L_6c3de                      #  89    0x6c49c  6      OPC=jne_label_1       
  jmpq .L_6c407                     #  90    0x6c4a2  5      OPC=jmpq_label_1      
  nop                               #  91    0x6c4a7  1      OPC=nop               
  nop                               #  92    0x6c4a8  1      OPC=nop               
  nop                               #  93    0x6c4a9  1      OPC=nop               
  nop                               #  94    0x6c4aa  1      OPC=nop               
  nop                               #  95    0x6c4ab  1      OPC=nop               
  nop                               #  96    0x6c4ac  1      OPC=nop               
  nop                               #  97    0x6c4ad  1      OPC=nop               
  nop                               #  98    0x6c4ae  1      OPC=nop               
  nop                               #  99    0x6c4af  1      OPC=nop               
  nop                               #  100   0x6c4b0  1      OPC=nop               
.L_6c4b0:                           #        0x6c4b1  0      OPC=<label>           
  movq 0xa0(%rbx), %rax             #  101   0x6c4b1  7      OPC=movq_r64_m64      
  movq %rbp, %r8                    #  102   0x6c4b8  3      OPC=movq_r64_r64      
  movq %r12, %rdi                   #  103   0x6c4bb  3      OPC=movq_r64_r64      
  movq 0x60(%rax), %rdx             #  104   0x6c4be  4      OPC=movq_r64_m64      
  movq %rdx, 0x58(%rax)             #  105   0x6c4c2  4      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rax             #  106   0x6c4c6  7      OPC=movq_r64_m64      
  movq 0x10(%rbx), %rcx             #  107   0x6c4cd  4      OPC=movq_r64_m64      
  movq 0x18(%rbx), %rdx             #  108   0x6c4d1  4      OPC=movq_r64_m64      
  leaq 0x58(%rax), %rsi             #  109   0x6c4d5  4      OPC=leaq_r64_m16      
  callq 0x30(%r12)                  #  110   0x6c4d9  5      OPC=callq_m64         
  movq 0x18(%rbx), %rsi             #  111   0x6c4de  4      OPC=movq_r64_m64      
  movslq %eax, %rbp                 #  112   0x6c4e2  3      OPC=movslq_r64_r32    
  leaq (%rsi,%rbp,1), %rax          #  113   0x6c4e5  4      OPC=leaq_r64_m16      
  subq 0x10(%rbx), %rsi             #  114   0x6c4e9  4      OPC=subq_r64_m64      
  movq %rax, 0x8(%rbx)              #  115   0x6c4ed  4      OPC=movq_m64_r64      
  addq %rbp, %rsi                   #  116   0x6c4f1  3      OPC=addq_r64_r64      
  jmpq .L_6c43c                     #  117   0x6c4f4  5      OPC=jmpq_label_1      
  nop                               #  118   0x6c4f9  1      OPC=nop               
  nop                               #  119   0x6c4fa  1      OPC=nop               
  nop                               #  120   0x6c4fb  1      OPC=nop               
  nop                               #  121   0x6c4fc  1      OPC=nop               
  nop                               #  122   0x6c4fd  1      OPC=nop               
  nop                               #  123   0x6c4fe  1      OPC=nop               
  nop                               #  124   0x6c4ff  1      OPC=nop               
  nop                               #  125   0x6c500  1      OPC=nop               
                                                                                   
.size _IO_wfile_sync, .-_IO_wfile_sync

