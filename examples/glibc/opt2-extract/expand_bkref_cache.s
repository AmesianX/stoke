  .text
  .globl expand_bkref_cache
  .type expand_bkref_cache, @function

#! file-offset 0xc2710
#! rip-offset  0xc2710
#! capacity    816 bytes

# Text                                   #  Line  RIP      Bytes  Opcode               
.expand_bkref_cache:                     #        0xc2710  0      OPC=<label>          
  pushq %r15                             #  1     0xc2710  2      OPC=pushq_r64_1      
  pushq %r14                             #  2     0xc2712  2      OPC=pushq_r64_1      
  pushq %r13                             #  3     0xc2714  2      OPC=pushq_r64_1      
  pushq %r12                             #  4     0xc2716  2      OPC=pushq_r64_1      
  movl %edx, %r12d                       #  5     0xc2718  3      OPC=movl_r32_r32     
  pushq %rbp                             #  6     0xc271b  1      OPC=pushq_r64_1      
  pushq %rbx                             #  7     0xc271c  1      OPC=pushq_r64_1      
  movq %rsi, %rbp                        #  8     0xc271d  3      OPC=movq_r64_r64     
  leaq 0xa0(%rdi), %rsi                  #  9     0xc2720  7      OPC=leaq_r64_m16     
  subq $0x68, %rsp                       #  10    0xc2727  4      OPC=subq_r64_imm8    
  movq %rdi, 0x18(%rsp)                  #  11    0xc272b  5      OPC=movq_m64_r64     
  movl %ecx, 0x38(%rsp)                  #  12    0xc2730  4      OPC=movl_m32_r32     
  movq 0x70(%rdi), %rcx                  #  13    0xc2734  4      OPC=movq_r64_m64     
  movl 0x94(%rdi), %edi                  #  14    0xc2738  6      OPC=movl_r32_m32     
  movl %r8d, 0x3c(%rsp)                  #  15    0xc273e  5      OPC=movl_m32_r32     
  movq %rcx, %rbx                        #  16    0xc2743  3      OPC=movq_r64_r64     
  callq .search_cur_bkref_entry_isra_12  #  17    0xc2746  5      OPC=callq_label      
  cmpl $0xffffffff, %eax                 #  18    0xc274b  6      OPC=cmpl_r32_imm32   
  nop                                    #  19    0xc2751  1      OPC=nop              
  nop                                    #  20    0xc2752  1      OPC=nop              
  nop                                    #  21    0xc2753  1      OPC=nop              
  je .L_c2990                            #  22    0xc2754  6      OPC=je_label_1       
  cltq                                   #  23    0xc275a  2      OPC=cltq             
  movq %rbx, %r15                        #  24    0xc275c  3      OPC=movq_r64_r64     
  movl %r12d, 0x24(%rsp)                 #  25    0xc275f  5      OPC=movl_m32_r32     
  leaq (%rax,%rax,4), %rax               #  26    0xc2764  4      OPC=leaq_r64_m16     
  shlq $0x2, %rax                        #  27    0xc2768  4      OPC=shlq_r64_imm8    
  movq %rax, 0x30(%rsp)                  #  28    0xc276c  5      OPC=movq_m64_r64     
  leaq 0x8(%rbp), %rax                   #  29    0xc2771  4      OPC=leaq_r64_m16     
  movq %rax, 0x8(%rsp)                   #  30    0xc2775  5      OPC=movq_m64_r64     
  leaq 0x4c(%rsp), %rax                  #  31    0xc277a  5      OPC=leaq_r64_m16     
  movq %rax, 0x28(%rsp)                  #  32    0xc277f  5      OPC=movq_m64_r64     
.L_c277e:                                #        0xc2784  0      OPC=<label>          
  movq 0x18(%rsp), %rax                  #  33    0xc2784  5      OPC=movq_r64_m64     
  movq 0x30(%rsp), %r12                  #  34    0xc2789  5      OPC=movq_r64_m64     
  addq 0xa0(%rax), %r12                  #  35    0xc278e  7      OPC=addq_r64_m64     
  movq %r12, %r13                        #  36    0xc2795  3      OPC=movq_r64_r64     
  jmpq .L_c27f7                          #  37    0xc2798  2      OPC=jmpq_label       
  nop                                    #  38    0xc279a  1      OPC=nop              
  nop                                    #  39    0xc279b  1      OPC=nop              
  nop                                    #  40    0xc279c  1      OPC=nop              
  nop                                    #  41    0xc279d  1      OPC=nop              
.L_c2798:                                #        0xc279e  0      OPC=<label>          
  movq 0x18(%r15), %rax                  #  42    0xc279e  4      OPC=movq_r64_m64     
  movslq %ebx, %rbx                      #  43    0xc27a2  3      OPC=movslq_r64_r32   
  leaq (,%rbx,8), %r14                   #  44    0xc27a5  8      OPC=leaq_r64_m16     
  movl (%rax,%r12,4), %r12d              #  45    0xc27ad  4      OPC=movl_r32_m32     
  movq 0x18(%rsp), %rax                  #  46    0xc27b1  5      OPC=movq_r64_m64     
  movq %r14, %r9                         #  47    0xc27b6  3      OPC=movq_r64_r64     
  addq 0x88(%rax), %r9                   #  48    0xc27b9  7      OPC=addq_r64_m64     
  movq (%r9), %r8                        #  49    0xc27c0  3      OPC=movq_r64_m64     
  testq %r8, %r8                         #  50    0xc27c3  3      OPC=testq_r64_r64    
  je .L_c29a8                            #  51    0xc27c6  6      OPC=je_label_1       
  movl 0xc(%r8), %edi                    #  52    0xc27cc  4      OPC=movl_r32_m32     
  leaq 0x10(%r8), %rsi                   #  53    0xc27d0  4      OPC=leaq_r64_m16     
  movl %r12d, %edx                       #  54    0xc27d4  3      OPC=movl_r32_r32     
  movq %r8, 0x10(%rsp)                   #  55    0xc27d7  5      OPC=movq_m64_r64     
  callq .re_node_set_contains_isra_3     #  56    0xc27dc  5      OPC=callq_label      
  testl %eax, %eax                       #  57    0xc27e1  2      OPC=testl_r32_r32    
  movq 0x10(%rsp), %r8                   #  58    0xc27e3  5      OPC=movq_r64_m64     
  je .L_c28e0                            #  59    0xc27e8  6      OPC=je_label_1       
.L_c27e8:                                #        0xc27ee  0      OPC=<label>          
  addq $0x14, %r13                       #  60    0xc27ee  4      OPC=addq_r64_imm8    
  cmpb $0x0, -0x4(%r13)                  #  61    0xc27f2  5      OPC=cmpb_m8_imm8     
  je .L_c2990                            #  62    0xc27f7  6      OPC=je_label_1       
.L_c27f7:                                #        0xc27fd  0      OPC=<label>          
  movslq (%r13), %r12                    #  63    0xc27fd  4      OPC=movslq_r64_m32   
  movl 0x4(%rbp), %r14d                  #  64    0xc2801  4      OPC=movl_r32_m32     
  movq 0x8(%rsp), %rsi                   #  65    0xc2805  5      OPC=movq_r64_m64     
  movl %r14d, %edi                       #  66    0xc280a  3      OPC=movl_r32_r32     
  movl %r12d, %edx                       #  67    0xc280d  3      OPC=movl_r32_r32     
  callq .re_node_set_contains_isra_3     #  68    0xc2810  5      OPC=callq_label      
  testl %eax, %eax                       #  69    0xc2815  2      OPC=testl_r32_r32    
  je .L_c27e8                            #  70    0xc2817  2      OPC=je_label         
  movl 0x24(%rsp), %eax                  #  71    0xc2819  4      OPC=movl_r32_m32     
  movl 0xc(%r13), %ebx                   #  72    0xc281d  4      OPC=movl_r32_m32     
  addl %eax, %ebx                        #  73    0xc2821  2      OPC=addl_r32_r32     
  subl 0x8(%r13), %ebx                   #  74    0xc2823  4      OPC=subl_r32_m32     
  cmpl %eax, %ebx                        #  75    0xc2827  2      OPC=cmpl_r32_r32     
  jne .L_c2798                           #  76    0xc2829  6      OPC=jne_label_1      
  shlq $0x4, %r12                        #  77    0xc282f  4      OPC=shlq_r64_imm8    
  addq 0x28(%r15), %r12                  #  78    0xc2833  4      OPC=addq_r64_m64     
  movq 0x8(%rsp), %rsi                   #  79    0xc2837  5      OPC=movq_r64_m64     
  movl %r14d, %edi                       #  80    0xc283c  3      OPC=movl_r32_r32     
  movq 0x8(%r12), %rax                   #  81    0xc283f  5      OPC=movq_r64_m64     
  movl (%rax), %ebx                      #  82    0xc2844  2      OPC=movl_r32_m32     
  movl %ebx, %edx                        #  83    0xc2846  2      OPC=movl_r32_r32     
  callq .re_node_set_contains_isra_3     #  84    0xc2848  5      OPC=callq_label      
  testl %eax, %eax                       #  85    0xc284d  2      OPC=testl_r32_r32    
  jne .L_c27e8                           #  86    0xc284f  2      OPC=jne_label        
  movl $0x4, %edi                        #  87    0xc2851  5      OPC=movl_r32_imm32   
  movl $0x1, 0x50(%rsp)                  #  88    0xc2856  8      OPC=movl_m32_imm32   
  movl $0x1, 0x54(%rsp)                  #  89    0xc285e  8      OPC=movl_m32_imm32   
  callq .memalign_plt                    #  90    0xc2866  5      OPC=callq_label      
  testq %rax, %rax                       #  91    0xc286b  3      OPC=testq_r64_r64    
  movq %rax, 0x58(%rsp)                  #  92    0xc286e  5      OPC=movq_m64_r64     
  je .L_c29eb                            #  93    0xc2873  6      OPC=je_label_1       
  movl %ebx, (%rax)                      #  94    0xc2879  2      OPC=movl_m32_r32     
  xorl %eax, %eax                        #  95    0xc287b  2      OPC=xorl_r32_r32     
.L_c2877:                                #        0xc287d  0      OPC=<label>          
  movl 0x38(%rsp), %edx                  #  96    0xc287d  4      OPC=movl_r32_m32     
  leaq 0x50(%rsp), %r13                  #  97    0xc2881  5      OPC=leaq_r64_m16     
  movl 0x3c(%rsp), %ecx                  #  98    0xc2886  4      OPC=movl_r32_m32     
  movq %r15, %rdi                        #  99    0xc288a  3      OPC=movq_r64_r64     
  movl %eax, 0x4c(%rsp)                  #  100   0xc288d  4      OPC=movl_m32_r32     
  movq %r13, %rsi                        #  101   0xc2891  3      OPC=movq_r64_r64     
  callq .check_arrival_expand_ecl        #  102   0xc2894  5      OPC=callq_label      
  movq %r13, %rsi                        #  103   0xc2899  3      OPC=movq_r64_r64     
  movq %rbp, %rdi                        #  104   0xc289c  3      OPC=movq_r64_r64     
  movl %eax, %ebx                        #  105   0xc289f  2      OPC=movl_r32_r32     
  callq .re_node_set_merge               #  106   0xc28a1  5      OPC=callq_label      
  movq 0x58(%rsp), %rdi                  #  107   0xc28a6  5      OPC=movq_r64_m64     
  movl %eax, %r13d                       #  108   0xc28ab  3      OPC=movl_r32_r32     
  callq .L_1f8c0                         #  109   0xc28ae  5      OPC=callq_label      
  movl 0x4c(%rsp), %eax                  #  110   0xc28b3  4      OPC=movl_r32_m32     
  movl %ebx, %edx                        #  111   0xc28b7  2      OPC=movl_r32_r32     
  orl %r13d, %edx                        #  112   0xc28b9  3      OPC=orl_r32_r32      
  orl %eax, %edx                         #  113   0xc28bc  2      OPC=orl_r32_r32      
  je .L_c277e                            #  114   0xc28be  6      OPC=je_label_1       
  testl %eax, %eax                       #  115   0xc28c4  2      OPC=testl_r32_r32    
  jne .L_c28ca                           #  116   0xc28c6  2      OPC=jne_label        
  testl %ebx, %ebx                       #  117   0xc28c8  2      OPC=testl_r32_r32    
  movl %r13d, %eax                       #  118   0xc28ca  3      OPC=movl_r32_r32     
  cmovnel %ebx, %eax                     #  119   0xc28cd  3      OPC=cmovnel_r32_r32  
.L_c28ca:                                #        0xc28d0  0      OPC=<label>          
  addq $0x68, %rsp                       #  120   0xc28d0  4      OPC=addq_r64_imm8    
  popq %rbx                              #  121   0xc28d4  1      OPC=popq_r64_1       
  popq %rbp                              #  122   0xc28d5  1      OPC=popq_r64_1       
  popq %r12                              #  123   0xc28d6  2      OPC=popq_r64_1       
  popq %r13                              #  124   0xc28d8  2      OPC=popq_r64_1       
  popq %r14                              #  125   0xc28da  2      OPC=popq_r64_1       
  popq %r15                              #  126   0xc28dc  2      OPC=popq_r64_1       
  retq                                   #  127   0xc28de  1      OPC=retq             
  nop                                    #  128   0xc28df  1      OPC=nop              
  nop                                    #  129   0xc28e0  1      OPC=nop              
  nop                                    #  130   0xc28e1  1      OPC=nop              
  nop                                    #  131   0xc28e2  1      OPC=nop              
  nop                                    #  132   0xc28e3  1      OPC=nop              
  nop                                    #  133   0xc28e4  1      OPC=nop              
  nop                                    #  134   0xc28e5  1      OPC=nop              
.L_c28e0:                                #        0xc28e6  0      OPC=<label>          
  leaq 0x50(%rsp), %rdx                  #  135   0xc28e6  5      OPC=leaq_r64_m16     
  leaq 0x8(%r8), %rsi                    #  136   0xc28eb  4      OPC=leaq_r64_m16     
  movq %rdx, %rdi                        #  137   0xc28ef  3      OPC=movq_r64_r64     
  movq %rdx, 0x10(%rsp)                  #  138   0xc28f2  5      OPC=movq_m64_r64     
  callq .re_node_set_init_copy           #  139   0xc28f7  5      OPC=callq_label      
  movq 0x10(%rsp), %rdx                  #  140   0xc28fc  5      OPC=movq_r64_m64     
  movl %r12d, %esi                       #  141   0xc2901  3      OPC=movl_r32_r32     
  movl %eax, 0x4c(%rsp)                  #  142   0xc2904  4      OPC=movl_m32_r32     
  movq %rdx, %rdi                        #  143   0xc2908  3      OPC=movq_r64_r64     
  callq .re_node_set_insert              #  144   0xc290b  5      OPC=callq_label      
  shrl $0x1f, %eax                       #  145   0xc2910  3      OPC=shrl_r32_imm8    
  testb %al, %al                         #  146   0xc2913  2      OPC=testb_r8_r8      
  jne .L_c2a16                           #  147   0xc2915  6      OPC=jne_label_1      
  movl 0x4c(%rsp), %eax                  #  148   0xc291b  4      OPC=movl_r32_m32     
  testl %eax, %eax                       #  149   0xc291f  2      OPC=testl_r32_r32    
  jne .L_c2a16                           #  150   0xc2921  6      OPC=jne_label_1      
  movq 0x18(%rsp), %rax                  #  151   0xc2927  5      OPC=movq_r64_m64     
  movq %r14, %r9                         #  152   0xc292c  3      OPC=movq_r64_r64     
  movq 0x10(%rsp), %rdx                  #  153   0xc292f  5      OPC=movq_r64_m64     
  addq 0x88(%rax), %r9                   #  154   0xc2934  7      OPC=addq_r64_m64     
.L_c2935:                                #        0xc293b  0      OPC=<label>          
  movq 0x28(%rsp), %rdi                  #  155   0xc293b  5      OPC=movq_r64_m64     
  movq %r15, %rsi                        #  156   0xc2940  3      OPC=movq_r64_r64     
  movq %r9, 0x10(%rsp)                   #  157   0xc2943  5      OPC=movq_m64_r64     
  callq .re_acquire_state                #  158   0xc2948  5      OPC=callq_label      
  movq 0x10(%rsp), %r9                   #  159   0xc294d  5      OPC=movq_r64_m64     
  movq %rax, (%r9)                       #  160   0xc2952  3      OPC=movq_m64_r64     
  movq 0x58(%rsp), %rdi                  #  161   0xc2955  5      OPC=movq_r64_m64     
  callq .L_1f8c0                         #  162   0xc295a  5      OPC=callq_label      
  movq 0x18(%rsp), %rax                  #  163   0xc295f  5      OPC=movq_r64_m64     
  movq 0x88(%rax), %rax                  #  164   0xc2964  7      OPC=movq_r64_m64     
  cmpq $0x0, (%rax,%rbx,8)               #  165   0xc296b  5      OPC=cmpq_m64_imm8    
  jne .L_c27e8                           #  166   0xc2970  6      OPC=jne_label_1      
  movl 0x4c(%rsp), %eax                  #  167   0xc2976  4      OPC=movl_r32_m32     
  testl %eax, %eax                       #  168   0xc297a  2      OPC=testl_r32_r32    
  jne .L_c28ca                           #  169   0xc297c  6      OPC=jne_label_1      
  addq $0x14, %r13                       #  170   0xc2982  4      OPC=addq_r64_imm8    
  cmpb $0x0, -0x4(%r13)                  #  171   0xc2986  5      OPC=cmpb_m8_imm8     
  jne .L_c27f7                           #  172   0xc298b  6      OPC=jne_label_1      
  nop                                    #  173   0xc2991  1      OPC=nop              
  nop                                    #  174   0xc2992  1      OPC=nop              
  nop                                    #  175   0xc2993  1      OPC=nop              
  nop                                    #  176   0xc2994  1      OPC=nop              
  nop                                    #  177   0xc2995  1      OPC=nop              
.L_c2990:                                #        0xc2996  0      OPC=<label>          
  addq $0x68, %rsp                       #  178   0xc2996  4      OPC=addq_r64_imm8    
  xorl %eax, %eax                        #  179   0xc299a  2      OPC=xorl_r32_r32     
  popq %rbx                              #  180   0xc299c  1      OPC=popq_r64_1       
  popq %rbp                              #  181   0xc299d  1      OPC=popq_r64_1       
  popq %r12                              #  182   0xc299e  2      OPC=popq_r64_1       
  popq %r13                              #  183   0xc29a0  2      OPC=popq_r64_1       
  popq %r14                              #  184   0xc29a2  2      OPC=popq_r64_1       
  popq %r15                              #  185   0xc29a4  2      OPC=popq_r64_1       
  retq                                   #  186   0xc29a6  1      OPC=retq             
  nop                                    #  187   0xc29a7  1      OPC=nop              
  nop                                    #  188   0xc29a8  1      OPC=nop              
  nop                                    #  189   0xc29a9  1      OPC=nop              
  nop                                    #  190   0xc29aa  1      OPC=nop              
  nop                                    #  191   0xc29ab  1      OPC=nop              
  nop                                    #  192   0xc29ac  1      OPC=nop              
  nop                                    #  193   0xc29ad  1      OPC=nop              
.L_c29a8:                                #        0xc29ae  0      OPC=<label>          
  movl $0x4, %edi                        #  194   0xc29ae  5      OPC=movl_r32_imm32   
  movq %r9, 0x10(%rsp)                   #  195   0xc29b3  5      OPC=movq_m64_r64     
  movl $0x1, 0x50(%rsp)                  #  196   0xc29b8  8      OPC=movl_m32_imm32   
  movl $0x1, 0x54(%rsp)                  #  197   0xc29c0  8      OPC=movl_m32_imm32   
  callq .memalign_plt                    #  198   0xc29c8  5      OPC=callq_label      
  testq %rax, %rax                       #  199   0xc29cd  3      OPC=testq_r64_r64    
  movq %rax, 0x58(%rsp)                  #  200   0xc29d0  5      OPC=movq_m64_r64     
  je .L_c2a02                            #  201   0xc29d5  2      OPC=je_label         
  movl %r12d, (%rax)                     #  202   0xc29d7  3      OPC=movl_m32_r32     
  movl $0x0, 0x4c(%rsp)                  #  203   0xc29da  8      OPC=movl_m32_imm32   
  leaq 0x50(%rsp), %rdx                  #  204   0xc29e2  5      OPC=leaq_r64_m16     
  movq 0x10(%rsp), %r9                   #  205   0xc29e7  5      OPC=movq_r64_m64     
  jmpq .L_c2935                          #  206   0xc29ec  5      OPC=jmpq_label_1     
.L_c29eb:                                #        0xc29f1  0      OPC=<label>          
  movl $0x0, 0x54(%rsp)                  #  207   0xc29f1  8      OPC=movl_m32_imm32   
  movl $0x0, 0x50(%rsp)                  #  208   0xc29f9  8      OPC=movl_m32_imm32   
  movb $0xc, %al                         #  209   0xc2a01  2      OPC=movb_r8_imm8     
  jmpq .L_c2877                          #  210   0xc2a03  5      OPC=jmpq_label_1     
.L_c2a02:                                #        0xc2a08  0      OPC=<label>          
  addq $0x68, %rsp                       #  211   0xc2a08  4      OPC=addq_r64_imm8    
  movl $0xc, %eax                        #  212   0xc2a0c  5      OPC=movl_r32_imm32   
  popq %rbx                              #  213   0xc2a11  1      OPC=popq_r64_1       
  popq %rbp                              #  214   0xc2a12  1      OPC=popq_r64_1       
  popq %r12                              #  215   0xc2a13  2      OPC=popq_r64_1       
  popq %r13                              #  216   0xc2a15  2      OPC=popq_r64_1       
  popq %r14                              #  217   0xc2a17  2      OPC=popq_r64_1       
  popq %r15                              #  218   0xc2a19  2      OPC=popq_r64_1       
  retq                                   #  219   0xc2a1b  1      OPC=retq             
.L_c2a16:                                #        0xc2a1c  0      OPC=<label>          
  movq 0x58(%rsp), %rdi                  #  220   0xc2a1c  5      OPC=movq_r64_m64     
  callq .L_1f8c0                         #  221   0xc2a21  5      OPC=callq_label      
  movl 0x4c(%rsp), %eax                  #  222   0xc2a26  4      OPC=movl_r32_m32     
  movl $0xc, %edx                        #  223   0xc2a2a  5      OPC=movl_r32_imm32   
  testl %eax, %eax                       #  224   0xc2a2f  2      OPC=testl_r32_r32    
  cmovel %edx, %eax                      #  225   0xc2a31  3      OPC=cmovel_r32_r32   
  jmpq .L_c28ca                          #  226   0xc2a34  5      OPC=jmpq_label_1     
  nop                                    #  227   0xc2a39  1      OPC=nop              
  nop                                    #  228   0xc2a3a  1      OPC=nop              
  nop                                    #  229   0xc2a3b  1      OPC=nop              
  nop                                    #  230   0xc2a3c  1      OPC=nop              
  nop                                    #  231   0xc2a3d  1      OPC=nop              
  nop                                    #  232   0xc2a3e  1      OPC=nop              
  nop                                    #  233   0xc2a3f  1      OPC=nop              
  nop                                    #  234   0xc2a40  1      OPC=nop              
  nop                                    #  235   0xc2a41  1      OPC=nop              
  nop                                    #  236   0xc2a42  1      OPC=nop              
  nop                                    #  237   0xc2a43  1      OPC=nop              
  nop                                    #  238   0xc2a44  1      OPC=nop              
  nop                                    #  239   0xc2a45  1      OPC=nop              
                                                                                       
.size expand_bkref_cache, .-expand_bkref_cache

