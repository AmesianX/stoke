  .text
  .globl parse_reg_exp
  .type parse_reg_exp, @function

#! file-offset 0xcc090
#! rip-offset  0xcc090
#! capacity    352 bytes

# Text                              #  Line  RIP      Bytes  Opcode              
.parse_reg_exp:                     #        0xcc090  0      OPC=<label>         
  pushq %r15                        #  1     0xcc090  2      OPC=pushq_r64_1     
  pushq %r14                        #  2     0xcc092  2      OPC=pushq_r64_1     
  movq %r9, %r15                    #  3     0xcc094  3      OPC=movq_r64_r64    
  pushq %r13                        #  4     0xcc097  2      OPC=pushq_r64_1     
  pushq %r12                        #  5     0xcc099  2      OPC=pushq_r64_1     
  movl %r8d, %r13d                  #  6     0xcc09b  3      OPC=movl_r32_r32    
  pushq %rbp                        #  7     0xcc09e  1      OPC=pushq_r64_1     
  pushq %rbx                        #  8     0xcc09f  1      OPC=pushq_r64_1     
  movq %rdi, %rbp                   #  9     0xcc0a0  3      OPC=movq_r64_r64    
  movq %rdx, %rbx                   #  10    0xcc0a3  3      OPC=movq_r64_r64    
  subq $0x48, %rsp                  #  11    0xcc0a6  4      OPC=subq_r64_imm8   
  movq (%rsi), %r10                 #  12    0xcc0aa  3      OPC=movq_r64_m64    
  movq %rsi, 0x28(%rsp)             #  13    0xcc0ad  5      OPC=movq_m64_r64    
  movq %rcx, 0x20(%rsp)             #  14    0xcc0b2  5      OPC=movq_m64_r64    
  movq %r10, 0x8(%rsp)              #  15    0xcc0b7  5      OPC=movq_m64_r64    
  callq .parse_branch               #  16    0xcc0bc  5      OPC=callq_label     
  testq %rax, %rax                  #  17    0xcc0c1  3      OPC=testq_r64_r64   
  movq %rax, %r12                   #  18    0xcc0c4  3      OPC=movq_r64_r64    
  movq 0x8(%rsp), %r10              #  19    0xcc0c7  5      OPC=movq_r64_m64    
  jne .L_cc0d9                      #  20    0xcc0cc  2      OPC=jne_label       
  movl (%r15), %edx                 #  21    0xcc0ce  3      OPC=movl_r32_m32    
  testl %edx, %edx                  #  22    0xcc0d1  2      OPC=testl_r32_r32   
  jne .L_cc1d6                      #  23    0xcc0d3  6      OPC=jne_label_1     
.L_cc0d9:                           #        0xcc0d9  0      OPC=<label>         
  leaq 0x30(%rsp), %rax             #  24    0xcc0d9  5      OPC=leaq_r64_m16    
  movq 0x20(%rsp), %r14             #  25    0xcc0de  5      OPC=movq_r64_m64    
  movq %rax, 0x8(%rsp)              #  26    0xcc0e3  5      OPC=movq_m64_r64    
  leaq 0x80(%r10), %rax             #  27    0xcc0e8  7      OPC=leaq_r64_m16    
  orq $0x800000, %r14               #  28    0xcc0ef  7      OPC=orq_r64_imm32   
  movq %rax, 0x10(%rsp)             #  29    0xcc0f6  5      OPC=movq_m64_r64    
  leaq 0x70(%r10), %rax             #  30    0xcc0fb  4      OPC=leaq_r64_m16    
  movq %rax, 0x18(%rsp)             #  31    0xcc0ff  5      OPC=movq_m64_r64    
  jmpq .L_cc167                     #  32    0xcc104  2      OPC=jmpq_label      
  nop                               #  33    0xcc106  1      OPC=nop             
  nop                               #  34    0xcc107  1      OPC=nop             
  nop                               #  35    0xcc108  1      OPC=nop             
  nop                               #  36    0xcc109  1      OPC=nop             
  nop                               #  37    0xcc10a  1      OPC=nop             
  nop                               #  38    0xcc10b  1      OPC=nop             
  nop                               #  39    0xcc10c  1      OPC=nop             
  nop                               #  40    0xcc10d  1      OPC=nop             
  nop                               #  41    0xcc10e  1      OPC=nop             
  nop                               #  42    0xcc10f  1      OPC=nop             
.L_cc110:                           #        0xcc110  0      OPC=<label>         
  testl %r13d, %r13d                #  43    0xcc110  3      OPC=testl_r32_r32   
  je .L_cc119                       #  44    0xcc113  2      OPC=je_label        
  cmpb $0x9, %al                    #  45    0xcc115  2      OPC=cmpb_al_imm8    
  je .L_cc18c                       #  46    0xcc117  2      OPC=je_label        
.L_cc119:                           #        0xcc119  0      OPC=<label>         
  movq 0x20(%rsp), %rcx             #  47    0xcc119  5      OPC=movq_r64_m64    
  movq 0x28(%rsp), %rsi             #  48    0xcc11e  5      OPC=movq_r64_m64    
  movq %r15, %r9                    #  49    0xcc123  3      OPC=movq_r64_r64    
  movl %r13d, %r8d                  #  50    0xcc126  3      OPC=movl_r32_r32    
  movq %rbx, %rdx                   #  51    0xcc129  3      OPC=movq_r64_r64    
  movq %rbp, %rdi                   #  52    0xcc12c  3      OPC=movq_r64_r64    
  callq .parse_branch               #  53    0xcc12f  5      OPC=callq_label     
  testq %rax, %rax                  #  54    0xcc134  3      OPC=testq_r64_r64   
  movq %rax, %rcx                   #  55    0xcc137  3      OPC=movq_r64_r64    
  jne .L_cc143                      #  56    0xcc13a  2      OPC=jne_label       
  movl (%r15), %eax                 #  57    0xcc13c  3      OPC=movl_r32_m32    
  testl %eax, %eax                  #  58    0xcc13f  2      OPC=testl_r32_r32   
  jne .L_cc1c0                      #  59    0xcc141  2      OPC=jne_label       
.L_cc143:                           #        0xcc143  0      OPC=<label>         
  movq 0x8(%rsp), %r8               #  60    0xcc143  5      OPC=movq_r64_m64    
  movq 0x10(%rsp), %rsi             #  61    0xcc148  5      OPC=movq_r64_m64    
  movq %r12, %rdx                   #  62    0xcc14d  3      OPC=movq_r64_r64    
  movq 0x18(%rsp), %rdi             #  63    0xcc150  5      OPC=movq_r64_m64    
  movb $0xa, 0x38(%rsp)             #  64    0xcc155  5      OPC=movb_m8_imm8    
  callq .create_token_tree_isra_15  #  65    0xcc15a  5      OPC=callq_label     
  testq %rax, %rax                  #  66    0xcc15f  3      OPC=testq_r64_r64   
  movq %rax, %r12                   #  67    0xcc162  3      OPC=movq_r64_r64    
  je .L_cc1a8                       #  68    0xcc165  2      OPC=je_label        
.L_cc167:                           #        0xcc167  0      OPC=<label>         
  cmpb $0xa, 0x8(%rbx)              #  69    0xcc167  4      OPC=cmpb_m8_imm8    
  jne .L_cc190                      #  70    0xcc16b  2      OPC=jne_label       
  movq %r14, %rdx                   #  71    0xcc16d  3      OPC=movq_r64_r64    
  movq %rbp, %rsi                   #  72    0xcc170  3      OPC=movq_r64_r64    
  movq %rbx, %rdi                   #  73    0xcc173  3      OPC=movq_r64_r64    
  callq .peek_token                 #  74    0xcc176  5      OPC=callq_label     
  addl %eax, 0x38(%rbp)             #  75    0xcc17b  3      OPC=addl_m32_r32    
  movzbl 0x8(%rbx), %eax            #  76    0xcc17e  4      OPC=movzbl_r32_m8   
  movl %eax, %edx                   #  77    0xcc182  2      OPC=movl_r32_r32    
  andl $0xfffffff7, %edx            #  78    0xcc184  6      OPC=andl_r32_imm32  
  nop                               #  79    0xcc18a  1      OPC=nop             
  nop                               #  80    0xcc18b  1      OPC=nop             
  nop                               #  81    0xcc18c  1      OPC=nop             
  cmpb $0x2, %dl                    #  82    0xcc18d  3      OPC=cmpb_r8_imm8    
  jne .L_cc110                      #  83    0xcc190  2      OPC=jne_label       
.L_cc18c:                           #        0xcc192  0      OPC=<label>         
  xorl %ecx, %ecx                   #  84    0xcc192  2      OPC=xorl_r32_r32    
  jmpq .L_cc143                     #  85    0xcc194  2      OPC=jmpq_label      
.L_cc190:                           #        0xcc196  0      OPC=<label>         
  addq $0x48, %rsp                  #  86    0xcc196  4      OPC=addq_r64_imm8   
  movq %r12, %rax                   #  87    0xcc19a  3      OPC=movq_r64_r64    
  popq %rbx                         #  88    0xcc19d  1      OPC=popq_r64_1      
  popq %rbp                         #  89    0xcc19e  1      OPC=popq_r64_1      
  popq %r12                         #  90    0xcc19f  2      OPC=popq_r64_1      
  popq %r13                         #  91    0xcc1a1  2      OPC=popq_r64_1      
  popq %r14                         #  92    0xcc1a3  2      OPC=popq_r64_1      
  popq %r15                         #  93    0xcc1a5  2      OPC=popq_r64_1      
  retq                              #  94    0xcc1a7  1      OPC=retq            
  nop                               #  95    0xcc1a8  1      OPC=nop             
  nop                               #  96    0xcc1a9  1      OPC=nop             
  nop                               #  97    0xcc1aa  1      OPC=nop             
  nop                               #  98    0xcc1ab  1      OPC=nop             
  nop                               #  99    0xcc1ac  1      OPC=nop             
  nop                               #  100   0xcc1ad  1      OPC=nop             
.L_cc1a8:                           #        0xcc1ae  0      OPC=<label>         
  movl $0xc, (%r15)                 #  101   0xcc1ae  7      OPC=movl_m32_imm32  
  addq $0x48, %rsp                  #  102   0xcc1b5  4      OPC=addq_r64_imm8   
  xorl %eax, %eax                   #  103   0xcc1b9  2      OPC=xorl_r32_r32    
  popq %rbx                         #  104   0xcc1bb  1      OPC=popq_r64_1      
  popq %rbp                         #  105   0xcc1bc  1      OPC=popq_r64_1      
  popq %r12                         #  106   0xcc1bd  2      OPC=popq_r64_1      
  popq %r13                         #  107   0xcc1bf  2      OPC=popq_r64_1      
  popq %r14                         #  108   0xcc1c1  2      OPC=popq_r64_1      
  popq %r15                         #  109   0xcc1c3  2      OPC=popq_r64_1      
  retq                              #  110   0xcc1c5  1      OPC=retq            
.L_cc1c0:                           #        0xcc1c6  0      OPC=<label>         
  testq %r12, %r12                  #  111   0xcc1c6  3      OPC=testq_r64_r64   
  je .L_cc1d6                       #  112   0xcc1c9  2      OPC=je_label        
  leaq -0xb87c(%rip), %rsi          #  113   0xcc1cb  7      OPC=leaq_r64_m16    
  xorl %edx, %edx                   #  114   0xcc1d2  2      OPC=xorl_r32_r32    
  movq %r12, %rdi                   #  115   0xcc1d4  3      OPC=movq_r64_r64    
  callq .postorder                  #  116   0xcc1d7  5      OPC=callq_label     
.L_cc1d6:                           #        0xcc1dc  0      OPC=<label>         
  addq $0x48, %rsp                  #  117   0xcc1dc  4      OPC=addq_r64_imm8   
  xorl %eax, %eax                   #  118   0xcc1e0  2      OPC=xorl_r32_r32    
  popq %rbx                         #  119   0xcc1e2  1      OPC=popq_r64_1      
  popq %rbp                         #  120   0xcc1e3  1      OPC=popq_r64_1      
  popq %r12                         #  121   0xcc1e4  2      OPC=popq_r64_1      
  popq %r13                         #  122   0xcc1e6  2      OPC=popq_r64_1      
  popq %r14                         #  123   0xcc1e8  2      OPC=popq_r64_1      
  popq %r15                         #  124   0xcc1ea  2      OPC=popq_r64_1      
  retq                              #  125   0xcc1ec  1      OPC=retq            
  nop                               #  126   0xcc1ed  1      OPC=nop             
  nop                               #  127   0xcc1ee  1      OPC=nop             
  nop                               #  128   0xcc1ef  1      OPC=nop             
  nop                               #  129   0xcc1f0  1      OPC=nop             
  nop                               #  130   0xcc1f1  1      OPC=nop             
  nop                               #  131   0xcc1f2  1      OPC=nop             
  nop                               #  132   0xcc1f3  1      OPC=nop             
  nop                               #  133   0xcc1f4  1      OPC=nop             
  nop                               #  134   0xcc1f5  1      OPC=nop             
                                                                                 
.size parse_reg_exp, .-parse_reg_exp

