  .text
  .globl __libc_malloc
  .type __libc_malloc, @function

#! file-offset 0x78530
#! rip-offset  0x78530
#! capacity    400 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
.__libc_malloc:                     #        0x78530  0      OPC=<label>           
  pushq %rbp                        #  1     0x78530  1      OPC=pushq_r64_1       
  pushq %rbx                        #  2     0x78531  1      OPC=pushq_r64_1       
  subq $0x8, %rsp                   #  3     0x78532  4      OPC=subq_r64_imm8     
  movq 0x3229bb(%rip), %rax         #  4     0x78536  7      OPC=movq_r64_m64      
  movq (%rax), %rax                 #  5     0x7853d  3      OPC=movq_r64_m64      
  testq %rax, %rax                  #  6     0x78540  3      OPC=testq_r64_r64     
  jne .L_78680                      #  7     0x78543  6      OPC=jne_label_1       
  movq 0x322848(%rip), %rax         #  8     0x78549  7      OPC=movq_r64_m64      
  movq %rdi, %rbp                   #  9     0x78550  3      OPC=movq_r64_r64      
  movq (%rax), %rbx                 #  10    0x78553  3      OPC=movq_r64_m64      
  nop                               #  11    0x78556  1      OPC=nop               
  testq %rbx, %rbx                  #  12    0x78557  3      OPC=testq_r64_r64     
  je .L_78620                       #  13    0x7855a  6      OPC=je_label_1        
  movl 0x4(%rbx), %eax              #  14    0x78560  3      OPC=movl_r32_m32      
  andl $0x4, %eax                   #  15    0x78563  3      OPC=andl_r32_imm8     
  jne .L_78620                      #  16    0x78566  6      OPC=jne_label_1       
  movl $0x1, %esi                   #  17    0x7856c  5      OPC=movl_r32_imm32    
  cmpl $0x0, 0x328688(%rip)         #  18    0x78571  7      OPC=cmpl_m32_imm8     
  je .L_78582                       #  19    0x78578  2      OPC=je_label          
  lock                              #  20    0x7857a  1      OPC=lock              
  cmpxchgl %esi, (%rbx)             #  21    0x7857b  3      OPC=cmpxchgl_m32_r32  
  nop                               #  22    0x7857e  1      OPC=nop               
  jne .L_78587                      #  23    0x7857f  2      OPC=jne_label         
  jmpq .L_7859d                     #  24    0x78581  2      OPC=jmpq_label        
.L_78582:                           #        0x78583  0      OPC=<label>           
  cmpxchgl %esi, (%rbx)             #  25    0x78583  3      OPC=cmpxchgl_m32_r32  
  je .L_7859d                       #  26    0x78586  2      OPC=je_label          
.L_78587:                           #        0x78588  0      OPC=<label>           
  leaq (%rbx), %rdi                 #  27    0x78588  3      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  28    0x7858b  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  29    0x78592  5      OPC=callq_label       
  addq $0x80, %rsp                  #  30    0x78597  7      OPC=addq_r64_imm32    
.L_7859d:                           #        0x7859e  0      OPC=<label>           
  movq %rbp, %rsi                   #  31    0x7859e  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                   #  32    0x785a1  3      OPC=movq_r64_r64      
  callq ._int_malloc                #  33    0x785a4  5      OPC=callq_label       
  testq %rax, %rax                  #  34    0x785a9  3      OPC=testq_r64_r64     
  movq %rax, %rdx                   #  35    0x785ac  3      OPC=movq_r64_r64      
  je .L_78650                       #  36    0x785af  6      OPC=je_label_1        
.L_785b4:                           #        0x785b5  0      OPC=<label>           
  cmpl $0x0, 0x328645(%rip)         #  37    0x785b5  7      OPC=cmpl_m32_imm8     
  je .L_785c4                       #  38    0x785bc  2      OPC=je_label          
  lock                              #  39    0x785be  1      OPC=lock              
  decl (%rbx)                       #  40    0x785bf  2      OPC=decl_m32          
  nop                               #  41    0x785c1  1      OPC=nop               
  jne .L_785c8                      #  42    0x785c2  2      OPC=jne_label         
  jmpq .L_785de                     #  43    0x785c4  2      OPC=jmpq_label        
.L_785c4:                           #        0x785c6  0      OPC=<label>           
  decl (%rbx)                       #  44    0x785c6  2      OPC=decl_m32          
  je .L_785de                       #  45    0x785c8  2      OPC=je_label          
.L_785c8:                           #        0x785ca  0      OPC=<label>           
  leaq (%rbx), %rdi                 #  46    0x785ca  3      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  47    0x785cd  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  48    0x785d4  5      OPC=callq_label       
  addq $0x80, %rsp                  #  49    0x785d9  7      OPC=addq_r64_imm32    
.L_785de:                           #        0x785e0  0      OPC=<label>           
  testq %rdx, %rdx                  #  50    0x785e0  3      OPC=testq_r64_r64     
  je .L_78690                       #  51    0x785e3  6      OPC=je_label_1        
  movq -0x8(%rdx), %rax             #  52    0x785e9  4      OPC=movq_r64_m64      
  testb $0x2, %al                   #  53    0x785ed  2      OPC=testb_al_imm8     
  jne .L_78610                      #  54    0x785ef  2      OPC=jne_label         
  testb $0x4, %al                   #  55    0x785f1  2      OPC=testb_al_imm8     
  leaq 0x323648(%rip), %rcx         #  56    0x785f3  7      OPC=leaq_r64_m16      
  je .L_78607                       #  57    0x785fa  2      OPC=je_label          
  leaq -0x10(%rdx), %rax            #  58    0x785fc  4      OPC=leaq_r64_m16      
  andq $0xfc000000, %rax            #  59    0x78600  6      OPC=andq_rax_imm32    
  movq (%rax), %rcx                 #  60    0x78606  3      OPC=movq_r64_m64      
.L_78607:                           #        0x78609  0      OPC=<label>           
  cmpq %rbx, %rcx                   #  61    0x78609  3      OPC=cmpq_r64_r64      
  jne .L_78697                      #  62    0x7860c  6      OPC=jne_label_1       
.L_78610:                           #        0x78612  0      OPC=<label>           
  movq %rdx, %rax                   #  63    0x78612  3      OPC=movq_r64_r64      
.L_78613:                           #        0x78615  0      OPC=<label>           
  addq $0x8, %rsp                   #  64    0x78615  4      OPC=addq_r64_imm8     
  popq %rbx                         #  65    0x78619  1      OPC=popq_r64_1        
  popq %rbp                         #  66    0x7861a  1      OPC=popq_r64_1        
  retq                              #  67    0x7861b  1      OPC=retq              
  nop                               #  68    0x7861c  1      OPC=nop               
  nop                               #  69    0x7861d  1      OPC=nop               
  nop                               #  70    0x7861e  1      OPC=nop               
  nop                               #  71    0x7861f  1      OPC=nop               
  nop                               #  72    0x78620  1      OPC=nop               
  nop                               #  73    0x78621  1      OPC=nop               
.L_78620:                           #        0x78622  0      OPC=<label>           
  xorl %esi, %esi                   #  74    0x78622  2      OPC=xorl_r32_r32      
  movq %rbp, %rdi                   #  75    0x78624  3      OPC=movq_r64_r64      
  callq .arena_get2                 #  76    0x78627  5      OPC=callq_label       
  movq %rbp, %rsi                   #  77    0x7862c  3      OPC=movq_r64_r64      
  movq %rax, %rbx                   #  78    0x7862f  3      OPC=movq_r64_r64      
  movq %rax, %rdi                   #  79    0x78632  3      OPC=movq_r64_r64      
  callq ._int_malloc                #  80    0x78635  5      OPC=callq_label       
  testq %rbx, %rbx                  #  81    0x7863a  3      OPC=testq_r64_r64     
  movq %rax, %rdx                   #  82    0x7863d  3      OPC=movq_r64_r64      
  je .L_78645                       #  83    0x78640  2      OPC=je_label          
  testq %rax, %rax                  #  84    0x78642  3      OPC=testq_r64_r64     
  je .L_78650                       #  85    0x78645  2      OPC=je_label          
.L_78645:                           #        0x78647  0      OPC=<label>           
  testq %rbx, %rbx                  #  86    0x78647  3      OPC=testq_r64_r64     
  jne .L_785b4                      #  87    0x7864a  6      OPC=jne_label_1       
  jmpq .L_785de                     #  88    0x78650  2      OPC=jmpq_label        
.L_78650:                           #        0x78652  0      OPC=<label>           
  movq %rbx, %rdi                   #  89    0x78652  3      OPC=movq_r64_r64      
  movq %rbp, %rsi                   #  90    0x78655  3      OPC=movq_r64_r64      
  callq .arena_get_retry            #  91    0x78658  5      OPC=callq_label       
  movq %rbp, %rsi                   #  92    0x7865d  3      OPC=movq_r64_r64      
  movq %rax, %rbx                   #  93    0x78660  3      OPC=movq_r64_r64      
  movq %rax, %rdi                   #  94    0x78663  3      OPC=movq_r64_r64      
  callq ._int_malloc                #  95    0x78666  5      OPC=callq_label       
  testq %rbx, %rbx                  #  96    0x7866b  3      OPC=testq_r64_r64     
  movq %rax, %rdx                   #  97    0x7866e  3      OPC=movq_r64_r64      
  jne .L_785b4                      #  98    0x78671  6      OPC=jne_label_1       
  jmpq .L_785de                     #  99    0x78677  5      OPC=jmpq_label_1      
  nop                               #  100   0x7867c  1      OPC=nop               
  nop                               #  101   0x7867d  1      OPC=nop               
  nop                               #  102   0x7867e  1      OPC=nop               
  nop                               #  103   0x7867f  1      OPC=nop               
  nop                               #  104   0x78680  1      OPC=nop               
  nop                               #  105   0x78681  1      OPC=nop               
.L_78680:                           #        0x78682  0      OPC=<label>           
  movq 0x18(%rsp), %rsi             #  106   0x78682  5      OPC=movq_r64_m64      
  addq $0x8, %rsp                   #  107   0x78687  4      OPC=addq_r64_imm8     
  popq %rbx                         #  108   0x7868b  1      OPC=popq_r64_1        
  popq %rbp                         #  109   0x7868c  1      OPC=popq_r64_1        
  jmpq %rax                         #  110   0x7868d  2      OPC=jmpq_r64          
  nop                               #  111   0x7868f  1      OPC=nop               
  nop                               #  112   0x78690  1      OPC=nop               
  nop                               #  113   0x78691  1      OPC=nop               
.L_78690:                           #        0x78692  0      OPC=<label>           
  xorl %eax, %eax                   #  114   0x78692  2      OPC=xorl_r32_r32      
  jmpq .L_78613                     #  115   0x78694  5      OPC=jmpq_label_1      
.L_78697:                           #        0x78699  0      OPC=<label>           
  leaq 0xec496(%rip), %rcx          #  116   0x78699  7      OPC=leaq_r64_m16      
  leaq 0xec14c(%rip), %rsi          #  117   0x786a0  7      OPC=leaq_r64_m16      
  leaq 0xefcdc(%rip), %rdi          #  118   0x786a7  7      OPC=leaq_r64_m16      
  movl $0xb70, %edx                 #  119   0x786ae  5      OPC=movl_r32_imm32    
  callq .__malloc_assert            #  120   0x786b3  5      OPC=callq_label       
  nop                               #  121   0x786b8  1      OPC=nop               
  nop                               #  122   0x786b9  1      OPC=nop               
  nop                               #  123   0x786ba  1      OPC=nop               
  nop                               #  124   0x786bb  1      OPC=nop               
  nop                               #  125   0x786bc  1      OPC=nop               
  nop                               #  126   0x786bd  1      OPC=nop               
  nop                               #  127   0x786be  1      OPC=nop               
  nop                               #  128   0x786bf  1      OPC=nop               
  nop                               #  129   0x786c0  1      OPC=nop               
  nop                               #  130   0x786c1  1      OPC=nop               
                                                                                   
.size __libc_malloc, .-__libc_malloc

