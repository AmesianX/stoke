  .text
  .globl parse_branch
  .type parse_branch, @function

#! file-offset 0xcbf10
#! rip-offset  0xcbf10
#! capacity    384 bytes

# Text                              #  Line  RIP      Bytes  Opcode              
.parse_branch:                      #        0xcbf10  0      OPC=<label>         
  pushq %r15                        #  1     0xcbf10  2      OPC=pushq_r64_1     
  pushq %r14                        #  2     0xcbf12  2      OPC=pushq_r64_1     
  movq %rcx, %r15                   #  3     0xcbf14  3      OPC=movq_r64_r64    
  pushq %r13                        #  4     0xcbf17  2      OPC=pushq_r64_1     
  pushq %r12                        #  5     0xcbf19  2      OPC=pushq_r64_1     
  movq %rsi, %r13                   #  6     0xcbf1b  3      OPC=movq_r64_r64    
  pushq %rbp                        #  7     0xcbf1e  1      OPC=pushq_r64_1     
  pushq %rbx                        #  8     0xcbf1f  1      OPC=pushq_r64_1     
  movl %r8d, %ebp                   #  9     0xcbf20  3      OPC=movl_r32_r32    
  movq %rdx, %rbx                   #  10    0xcbf23  3      OPC=movq_r64_r64    
  movq %r9, %r12                    #  11    0xcbf26  3      OPC=movq_r64_r64    
  subq $0x48, %rsp                  #  12    0xcbf29  4      OPC=subq_r64_imm8   
  movq (%rsi), %r11                 #  13    0xcbf2d  3      OPC=movq_r64_m64    
  movq %rdi, 0x8(%rsp)              #  14    0xcbf30  5      OPC=movq_m64_r64    
  movq %r11, 0x10(%rsp)             #  15    0xcbf35  5      OPC=movq_m64_r64    
  callq .parse_expression           #  16    0xcbf3a  5      OPC=callq_label     
  testq %rax, %rax                  #  17    0xcbf3f  3      OPC=testq_r64_r64   
  movq %rax, %r14                   #  18    0xcbf42  3      OPC=movq_r64_r64    
  movq 0x10(%rsp), %r11             #  19    0xcbf45  5      OPC=movq_r64_m64    
  jne .L_cbf58                      #  20    0xcbf4a  2      OPC=jne_label       
  movl (%r12), %edx                 #  21    0xcbf4c  4      OPC=movl_r32_m32    
  testl %edx, %edx                  #  22    0xcbf50  2      OPC=testl_r32_r32   
  jne .L_cc079                      #  23    0xcbf52  6      OPC=jne_label_1     
.L_cbf58:                           #        0xcbf58  0      OPC=<label>         
  leaq 0x30(%rsp), %rax             #  24    0xcbf58  5      OPC=leaq_r64_m16    
  movq %r13, 0x10(%rsp)             #  25    0xcbf5d  5      OPC=movq_m64_r64    
  movq %rbx, %r13                   #  26    0xcbf62  3      OPC=movq_r64_r64    
  movq %rax, 0x18(%rsp)             #  27    0xcbf65  5      OPC=movq_m64_r64    
  leaq 0x80(%r11), %rax             #  28    0xcbf6a  7      OPC=leaq_r64_m16    
  movq %rax, 0x20(%rsp)             #  29    0xcbf71  5      OPC=movq_m64_r64    
  leaq 0x70(%r11), %rax             #  30    0xcbf76  4      OPC=leaq_r64_m16    
  movq %rax, 0x28(%rsp)             #  31    0xcbf7a  5      OPC=movq_m64_r64    
  nop                               #  32    0xcbf7f  1      OPC=nop             
.L_cbf80:                           #        0xcbf80  0      OPC=<label>         
  movzbl 0x8(%r13), %eax            #  33    0xcbf80  5      OPC=movzbl_r32_m8   
  movl %eax, %edx                   #  34    0xcbf85  2      OPC=movl_r32_r32    
  andl $0xfffffff7, %edx            #  35    0xcbf87  6      OPC=andl_r32_imm32  
  nop                               #  36    0xcbf8d  1      OPC=nop             
  nop                               #  37    0xcbf8e  1      OPC=nop             
  nop                               #  38    0xcbf8f  1      OPC=nop             
  cmpb $0x2, %dl                    #  39    0xcbf90  3      OPC=cmpb_r8_imm8    
  je .L_cbfe2                       #  40    0xcbf93  2      OPC=je_label        
.L_cbf8f:                           #        0xcbf95  0      OPC=<label>         
  testl %ebp, %ebp                  #  41    0xcbf95  2      OPC=testl_r32_r32   
  je .L_cbf97                       #  42    0xcbf97  2      OPC=je_label        
  cmpb $0x9, %al                    #  43    0xcbf99  2      OPC=cmpb_al_imm8    
  je .L_cbfe2                       #  44    0xcbf9b  2      OPC=je_label        
.L_cbf97:                           #        0xcbf9d  0      OPC=<label>         
  movq 0x10(%rsp), %rsi             #  45    0xcbf9d  5      OPC=movq_r64_m64    
  movq 0x8(%rsp), %rdi              #  46    0xcbfa2  5      OPC=movq_r64_m64    
  movq %r12, %r9                    #  47    0xcbfa7  3      OPC=movq_r64_r64    
  movl %ebp, %r8d                   #  48    0xcbfaa  3      OPC=movl_r32_r32    
  movq %r15, %rcx                   #  49    0xcbfad  3      OPC=movq_r64_r64    
  movq %r13, %rdx                   #  50    0xcbfb0  3      OPC=movq_r64_r64    
  callq .parse_expression           #  51    0xcbfb3  5      OPC=callq_label     
  testq %rax, %rax                  #  52    0xcbfb8  3      OPC=testq_r64_r64   
  movq %rax, %rbx                   #  53    0xcbfbb  3      OPC=movq_r64_r64    
  jne .L_cbfc2                      #  54    0xcbfbe  2      OPC=jne_label       
  movl (%r12), %eax                 #  55    0xcbfc0  4      OPC=movl_r32_m32    
  testl %eax, %eax                  #  56    0xcbfc4  2      OPC=testl_r32_r32   
  jne .L_cc028                      #  57    0xcbfc6  2      OPC=jne_label       
.L_cbfc2:                           #        0xcbfc8  0      OPC=<label>         
  testq %rbx, %rbx                  #  58    0xcbfc8  3      OPC=testq_r64_r64   
  je .L_cbfcc                       #  59    0xcbfcb  2      OPC=je_label        
  testq %r14, %r14                  #  60    0xcbfcd  3      OPC=testq_r64_r64   
  jne .L_cbff8                      #  61    0xcbfd0  2      OPC=jne_label       
.L_cbfcc:                           #        0xcbfd2  0      OPC=<label>         
  movzbl 0x8(%r13), %eax            #  62    0xcbfd2  5      OPC=movzbl_r32_m8   
  testq %r14, %r14                  #  63    0xcbfd7  3      OPC=testq_r64_r64   
  cmoveq %rbx, %r14                 #  64    0xcbfda  4      OPC=cmoveq_r64_r64  
  movl %eax, %edx                   #  65    0xcbfde  2      OPC=movl_r32_r32    
  andl $0xfffffff7, %edx            #  66    0xcbfe0  6      OPC=andl_r32_imm32  
  nop                               #  67    0xcbfe6  1      OPC=nop             
  nop                               #  68    0xcbfe7  1      OPC=nop             
  nop                               #  69    0xcbfe8  1      OPC=nop             
  cmpb $0x2, %dl                    #  70    0xcbfe9  3      OPC=cmpb_r8_imm8    
  jne .L_cbf8f                      #  71    0xcbfec  2      OPC=jne_label       
.L_cbfe2:                           #        0xcbfee  0      OPC=<label>         
  addq $0x48, %rsp                  #  72    0xcbfee  4      OPC=addq_r64_imm8   
  movq %r14, %rax                   #  73    0xcbff2  3      OPC=movq_r64_r64    
  popq %rbx                         #  74    0xcbff5  1      OPC=popq_r64_1      
  popq %rbp                         #  75    0xcbff6  1      OPC=popq_r64_1      
  popq %r12                         #  76    0xcbff7  2      OPC=popq_r64_1      
  popq %r13                         #  77    0xcbff9  2      OPC=popq_r64_1      
  popq %r14                         #  78    0xcbffb  2      OPC=popq_r64_1      
  popq %r15                         #  79    0xcbffd  2      OPC=popq_r64_1      
  retq                              #  80    0xcbfff  1      OPC=retq            
  nop                               #  81    0xcc000  1      OPC=nop             
  nop                               #  82    0xcc001  1      OPC=nop             
  nop                               #  83    0xcc002  1      OPC=nop             
  nop                               #  84    0xcc003  1      OPC=nop             
.L_cbff8:                           #        0xcc004  0      OPC=<label>         
  movq 0x18(%rsp), %r8              #  85    0xcc004  5      OPC=movq_r64_m64    
  movq 0x20(%rsp), %rsi             #  86    0xcc009  5      OPC=movq_r64_m64    
  movq %rbx, %rcx                   #  87    0xcc00e  3      OPC=movq_r64_r64    
  movq 0x28(%rsp), %rdi             #  88    0xcc011  5      OPC=movq_r64_m64    
  movq %r14, %rdx                   #  89    0xcc016  3      OPC=movq_r64_r64    
  movb $0x10, 0x38(%rsp)            #  90    0xcc019  5      OPC=movb_m8_imm8    
  callq .create_token_tree_isra_15  #  91    0xcc01e  5      OPC=callq_label     
  testq %rax, %rax                  #  92    0xcc023  3      OPC=testq_r64_r64   
  je .L_cc04f                       #  93    0xcc026  2      OPC=je_label        
  movq %rax, %r14                   #  94    0xcc028  3      OPC=movq_r64_r64    
  jmpq .L_cbf80                     #  95    0xcc02b  5      OPC=jmpq_label_1    
  nop                               #  96    0xcc030  1      OPC=nop             
  nop                               #  97    0xcc031  1      OPC=nop             
  nop                               #  98    0xcc032  1      OPC=nop             
  nop                               #  99    0xcc033  1      OPC=nop             
.L_cc028:                           #        0xcc034  0      OPC=<label>         
  testq %r14, %r14                  #  100   0xcc034  3      OPC=testq_r64_r64   
  je .L_cc079                       #  101   0xcc037  2      OPC=je_label        
  leaq -0xb6e4(%rip), %rsi          #  102   0xcc039  7      OPC=leaq_r64_m16    
  movq %r14, %rdi                   #  103   0xcc040  3      OPC=movq_r64_r64    
  xorl %edx, %edx                   #  104   0xcc043  2      OPC=xorl_r32_r32    
  callq .postorder                  #  105   0xcc045  5      OPC=callq_label     
  addq $0x48, %rsp                  #  106   0xcc04a  4      OPC=addq_r64_imm8   
  xorl %eax, %eax                   #  107   0xcc04e  2      OPC=xorl_r32_r32    
  popq %rbx                         #  108   0xcc050  1      OPC=popq_r64_1      
  popq %rbp                         #  109   0xcc051  1      OPC=popq_r64_1      
  popq %r12                         #  110   0xcc052  2      OPC=popq_r64_1      
  popq %r13                         #  111   0xcc054  2      OPC=popq_r64_1      
  popq %r14                         #  112   0xcc056  2      OPC=popq_r64_1      
  popq %r15                         #  113   0xcc058  2      OPC=popq_r64_1      
  retq                              #  114   0xcc05a  1      OPC=retq            
.L_cc04f:                           #        0xcc05b  0      OPC=<label>         
  leaq -0xb706(%rip), %rsi          #  115   0xcc05b  7      OPC=leaq_r64_m16    
  xorl %edx, %edx                   #  116   0xcc062  2      OPC=xorl_r32_r32    
  movq %rbx, %rdi                   #  117   0xcc064  3      OPC=movq_r64_r64    
  callq .postorder                  #  118   0xcc067  5      OPC=callq_label     
  leaq -0xb717(%rip), %rsi          #  119   0xcc06c  7      OPC=leaq_r64_m16    
  xorl %edx, %edx                   #  120   0xcc073  2      OPC=xorl_r32_r32    
  movq %r14, %rdi                   #  121   0xcc075  3      OPC=movq_r64_r64    
  callq .postorder                  #  122   0xcc078  5      OPC=callq_label     
  movl $0xc, (%r12)                 #  123   0xcc07d  8      OPC=movl_m32_imm32  
.L_cc079:                           #        0xcc085  0      OPC=<label>         
  addq $0x48, %rsp                  #  124   0xcc085  4      OPC=addq_r64_imm8   
  xorl %eax, %eax                   #  125   0xcc089  2      OPC=xorl_r32_r32    
  popq %rbx                         #  126   0xcc08b  1      OPC=popq_r64_1      
  popq %rbp                         #  127   0xcc08c  1      OPC=popq_r64_1      
  popq %r12                         #  128   0xcc08d  2      OPC=popq_r64_1      
  popq %r13                         #  129   0xcc08f  2      OPC=popq_r64_1      
  popq %r14                         #  130   0xcc091  2      OPC=popq_r64_1      
  popq %r15                         #  131   0xcc093  2      OPC=popq_r64_1      
  retq                              #  132   0xcc095  1      OPC=retq            
  nop                               #  133   0xcc096  1      OPC=nop             
  nop                               #  134   0xcc097  1      OPC=nop             
  nop                               #  135   0xcc098  1      OPC=nop             
  nop                               #  136   0xcc099  1      OPC=nop             
  nop                               #  137   0xcc09a  1      OPC=nop             
  nop                               #  138   0xcc09b  1      OPC=nop             
                                                                                 
.size parse_branch, .-parse_branch

