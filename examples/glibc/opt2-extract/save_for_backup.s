  .text
  .globl save_for_backup
  .type save_for_backup, @function

#! file-offset 0x71fe0
#! rip-offset  0x71fe0
#! capacity    448 bytes

# Text                      #  Line  RIP      Bytes  Opcode                
.save_for_backup:           #        0x71fe0  0      OPC=<label>           
  pushq %r15                #  1     0x71fe0  2      OPC=pushq_r64_1       
  pushq %r14                #  2     0x71fe2  2      OPC=pushq_r64_1       
  pushq %r13                #  3     0x71fe4  2      OPC=pushq_r64_1       
  pushq %r12                #  4     0x71fe6  2      OPC=pushq_r64_1       
  movq %rsi, %r13           #  5     0x71fe8  3      OPC=movq_r64_r64      
  pushq %rbp                #  6     0x71feb  1      OPC=pushq_r64_1       
  pushq %rbx                #  7     0x71fec  1      OPC=pushq_r64_1       
  movq %rdi, %rbp           #  8     0x71fed  3      OPC=movq_r64_r64      
  movq %r13, %rbx           #  9     0x71ff0  3      OPC=movq_r64_r64      
  subq $0x28, %rsp          #  10    0x71ff3  4      OPC=subq_r64_imm8     
  callq ._IO_least_marker   #  11    0x71ff7  5      OPC=callq_label       
  movq 0x18(%rbp), %r8      #  12    0x71ffc  4      OPC=movq_r64_m64      
  movq 0x58(%rbp), %rsi     #  13    0x72000  4      OPC=movq_r64_m64      
  movq %rax, %r15           #  14    0x72004  3      OPC=movq_r64_r64      
  movq 0x48(%rbp), %rcx     #  15    0x72007  4      OPC=movq_r64_m64      
  subq %r8, %rbx            #  16    0x7200b  3      OPC=subq_r64_r64      
  movq %rsi, %rdx           #  17    0x7200e  3      OPC=movq_r64_r64      
  movq %rbx, %r12           #  18    0x72011  3      OPC=movq_r64_r64      
  subq %rcx, %rdx           #  19    0x72014  3      OPC=subq_r64_r64      
  subq %rax, %r12           #  20    0x72017  3      OPC=subq_r64_r64      
  cmpq %rdx, %r12           #  21    0x7201a  3      OPC=cmpq_r64_r64      
  ja .L_72070               #  22    0x7201d  2      OPC=ja_label          
  subq %r12, %rdx           #  23    0x7201f  3      OPC=subq_r64_r64      
  testq %rax, %rax          #  24    0x72022  3      OPC=testq_r64_r64     
  movq %rdx, %r14           #  25    0x72025  3      OPC=movq_r64_r64      
  js .L_72123               #  26    0x72028  6      OPC=js_label_1        
  testq %r12, %r12          #  27    0x7202e  3      OPC=testq_r64_r64     
  leaq (%rcx,%rdx,1), %r9   #  28    0x72031  4      OPC=leaq_r64_m16      
  jne .L_72100              #  29    0x72035  6      OPC=jne_label_1       
.L_7203b:                   #        0x7203b  0      OPC=<label>           
  movq 0x60(%rbp), %rax     #  30    0x7203b  4      OPC=movq_r64_m64      
  movq %r9, 0x50(%rbp)      #  31    0x7203f  4      OPC=movq_m64_r64      
  movl %ebx, %edx           #  32    0x72043  2      OPC=movl_r32_r32      
  testq %rax, %rax          #  33    0x72045  3      OPC=testq_r64_r64     
  je .L_7205b               #  34    0x72048  2      OPC=je_label          
  nop                       #  35    0x7204a  1      OPC=nop               
  nop                       #  36    0x7204b  1      OPC=nop               
  nop                       #  37    0x7204c  1      OPC=nop               
  nop                       #  38    0x7204d  1      OPC=nop               
  nop                       #  39    0x7204e  1      OPC=nop               
  nop                       #  40    0x7204f  1      OPC=nop               
.L_72050:                   #        0x72050  0      OPC=<label>           
  subl %edx, 0x10(%rax)     #  41    0x72050  3      OPC=subl_m32_r32      
  movq (%rax), %rax         #  42    0x72053  3      OPC=movq_r64_m64      
  testq %rax, %rax          #  43    0x72056  3      OPC=testq_r64_r64     
  jne .L_72050              #  44    0x72059  2      OPC=jne_label         
.L_7205b:                   #        0x7205b  0      OPC=<label>           
  xorl %eax, %eax           #  45    0x7205b  2      OPC=xorl_r32_r32      
.L_7205d:                   #        0x7205d  0      OPC=<label>           
  addq $0x28, %rsp          #  46    0x7205d  4      OPC=addq_r64_imm8     
  popq %rbx                 #  47    0x72061  1      OPC=popq_r64_1        
  popq %rbp                 #  48    0x72062  1      OPC=popq_r64_1        
  popq %r12                 #  49    0x72063  2      OPC=popq_r64_1        
  popq %r13                 #  50    0x72065  2      OPC=popq_r64_1        
  popq %r14                 #  51    0x72067  2      OPC=popq_r64_1        
  popq %r15                 #  52    0x72069  2      OPC=popq_r64_1        
  retq                      #  53    0x7206b  1      OPC=retq              
  nop                       #  54    0x7206c  1      OPC=nop               
  nop                       #  55    0x7206d  1      OPC=nop               
  nop                       #  56    0x7206e  1      OPC=nop               
  nop                       #  57    0x7206f  1      OPC=nop               
.L_72070:                   #        0x72070  0      OPC=<label>           
  leaq 0x64(%r12), %rax     #  58    0x72070  5      OPC=leaq_r64_m16      
  movq %rcx, 0x18(%rsp)     #  59    0x72075  5      OPC=movq_m64_r64      
  movq %rsi, 0x10(%rsp)     #  60    0x7207a  5      OPC=movq_m64_r64      
  movq %r8, 0x8(%rsp)       #  61    0x7207f  5      OPC=movq_m64_r64      
  movq %rax, %rdi           #  62    0x72084  3      OPC=movq_r64_r64      
  movq %rax, (%rsp)         #  63    0x72087  4      OPC=movq_m64_r64      
  callq .memalign_plt       #  64    0x7208b  5      OPC=callq_label       
  testq %rax, %rax          #  65    0x72090  3      OPC=testq_r64_r64     
  movq %rax, %r14           #  66    0x72093  3      OPC=movq_r64_r64      
  je .L_72190               #  67    0x72096  6      OPC=je_label_1        
  testq %r15, %r15          #  68    0x7209c  3      OPC=testq_r64_r64     
  movq 0x8(%rsp), %r8       #  69    0x7209f  5      OPC=movq_r64_m64      
  movq 0x10(%rsp), %rsi     #  70    0x720a4  5      OPC=movq_r64_m64      
  movq 0x18(%rsp), %rcx     #  71    0x720a9  5      OPC=movq_r64_m64      
  js .L_7214b               #  72    0x720ae  6      OPC=js_label_1        
  leaq 0x64(%rax), %r9      #  73    0x720b4  4      OPC=leaq_r64_m16      
  leaq (%r8,%r15,1), %rsi   #  74    0x720b8  4      OPC=leaq_r64_m16      
  movq %r12, %rdx           #  75    0x720bc  3      OPC=movq_r64_r64      
  movq %rcx, 0x8(%rsp)      #  76    0x720bf  5      OPC=movq_m64_r64      
  movq %r9, %rdi            #  77    0x720c4  3      OPC=movq_r64_r64      
  callq .__GI_memcpy        #  78    0x720c7  5      OPC=callq_label       
  movq 0x8(%rsp), %rcx      #  79    0x720cc  5      OPC=movq_r64_m64      
  movq %rax, %r9            #  80    0x720d1  3      OPC=movq_r64_r64      
.L_720d4:                   #        0x720d4  0      OPC=<label>           
  movq %rcx, %rdi           #  81    0x720d4  3      OPC=movq_r64_r64      
  movq %r9, 0x8(%rsp)       #  82    0x720d7  5      OPC=movq_m64_r64      
  movq %r13, %rbx           #  83    0x720dc  3      OPC=movq_r64_r64      
  callq .L_1f8c0            #  84    0x720df  5      OPC=callq_label       
  movq %r14, 0x48(%rbp)     #  85    0x720e4  4      OPC=movq_m64_r64      
  addq (%rsp), %r14         #  86    0x720e8  4      OPC=addq_r64_m64      
  subq 0x18(%rbp), %rbx     #  87    0x720ec  4      OPC=subq_r64_m64      
  movq 0x8(%rsp), %r9       #  88    0x720f0  5      OPC=movq_r64_m64      
  movq %r14, 0x58(%rbp)     #  89    0x720f5  4      OPC=movq_m64_r64      
  jmpq .L_7203b             #  90    0x720f9  5      OPC=jmpq_label_1      
  xchgw %ax, %ax            #  91    0x720fe  2      OPC=xchgw_ax_r16      
.L_72100:                   #        0x72100  0      OPC=<label>           
  leaq (%r8,%rax,1), %rsi   #  92    0x72100  4      OPC=leaq_r64_m16      
  leaq (%rcx,%rdx,1), %rdi  #  93    0x72104  4      OPC=leaq_r64_m16      
  movq %r12, %rdx           #  94    0x72108  3      OPC=movq_r64_r64      
.L_7210b:                   #        0x7210b  0      OPC=<label>           
  callq .__GI_memcpy        #  95    0x7210b  5      OPC=callq_label       
  movq %r13, %rbx           #  96    0x72110  3      OPC=movq_r64_r64      
  movq %r14, %r9            #  97    0x72113  3      OPC=movq_r64_r64      
  subq 0x18(%rbp), %rbx     #  98    0x72116  4      OPC=subq_r64_m64      
  addq 0x48(%rbp), %r9      #  99    0x7211a  4      OPC=addq_r64_m64      
  jmpq .L_7203b             #  100   0x7211e  5      OPC=jmpq_label_1      
.L_72123:                   #        0x72123  0      OPC=<label>           
  movq %rax, %rdx           #  101   0x72123  3      OPC=movq_r64_r64      
  leaq (%rcx,%r14,1), %rdi  #  102   0x72126  4      OPC=leaq_r64_m16      
  addq %rax, %rsi           #  103   0x7212a  3      OPC=addq_r64_r64      
  negq %rdx                 #  104   0x7212d  3      OPC=negq_r64          
  callq .__GI_memmove       #  105   0x72130  5      OPC=callq_label       
  movq 0x18(%rbp), %rsi     #  106   0x72135  4      OPC=movq_r64_m64      
  movq %r14, %rdi           #  107   0x72139  3      OPC=movq_r64_r64      
  movq %r13, %rdx           #  108   0x7213c  3      OPC=movq_r64_r64      
  subq %r15, %rdi           #  109   0x7213f  3      OPC=subq_r64_r64      
  addq 0x48(%rbp), %rdi     #  110   0x72142  4      OPC=addq_r64_m64      
  subq %rsi, %rdx           #  111   0x72146  3      OPC=subq_r64_r64      
  jmpq .L_7210b             #  112   0x72149  2      OPC=jmpq_label        
.L_7214b:                   #        0x7214b  0      OPC=<label>           
  leaq 0x64(%rax), %r9      #  113   0x7214b  4      OPC=leaq_r64_m16      
  movq %r15, %r12           #  114   0x7214f  3      OPC=movq_r64_r64      
  addq %r15, %rsi           #  115   0x72152  3      OPC=addq_r64_r64      
  negq %r12                 #  116   0x72155  3      OPC=negq_r64          
  movq %r8, 0x10(%rsp)      #  117   0x72158  5      OPC=movq_m64_r64      
  movq %r9, %rdi            #  118   0x7215d  3      OPC=movq_r64_r64      
  movq %r12, %rdx           #  119   0x72160  3      OPC=movq_r64_r64      
  movq %r9, 0x8(%rsp)       #  120   0x72163  5      OPC=movq_m64_r64      
  callq .__GI_memcpy        #  121   0x72168  5      OPC=callq_label       
  movq 0x10(%rsp), %r8      #  122   0x7216d  5      OPC=movq_r64_m64      
  leaq (%rax,%r12,1), %rdi  #  123   0x72172  4      OPC=leaq_r64_m16      
  movq %rbx, %rdx           #  124   0x72176  3      OPC=movq_r64_r64      
  movq %r8, %rsi            #  125   0x72179  3      OPC=movq_r64_r64      
  callq .__GI_memcpy        #  126   0x7217c  5      OPC=callq_label       
  movq 0x8(%rsp), %r9       #  127   0x72181  5      OPC=movq_r64_m64      
  movq 0x18(%rsp), %rcx     #  128   0x72186  5      OPC=movq_r64_m64      
  jmpq .L_720d4             #  129   0x7218b  5      OPC=jmpq_label_1      
.L_72190:                   #        0x72190  0      OPC=<label>           
  movl $0xffffffff, %eax    #  130   0x72190  6      OPC=movl_r32_imm32_1  
  jmpq .L_7205d             #  131   0x72196  5      OPC=jmpq_label_1      
  nop                       #  132   0x7219b  1      OPC=nop               
  nop                       #  133   0x7219c  1      OPC=nop               
  nop                       #  134   0x7219d  1      OPC=nop               
  nop                       #  135   0x7219e  1      OPC=nop               
  nop                       #  136   0x7219f  1      OPC=nop               
  nop                       #  137   0x721a0  1      OPC=nop               
                                                                           
.size save_for_backup, .-save_for_backup

