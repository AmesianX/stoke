  .text
  .globl ruserok2_sa
  .type ruserok2_sa, @function

#! file-offset 0xfb630
#! rip-offset  0xfb630
#! capacity    480 bytes

# Text                            #  Line  RIP      Bytes  Opcode                
.ruserok2_sa:                     #        0xfb630  0      OPC=<label>           
  pushq %rbp                      #  1     0xfb630  1      OPC=pushq_r64_1       
  movq %rsp, %rbp                 #  2     0xfb631  3      OPC=movq_r64_r64      
  pushq %r15                      #  3     0xfb634  2      OPC=pushq_r64_1       
  pushq %r14                      #  4     0xfb636  2      OPC=pushq_r64_1       
  pushq %r13                      #  5     0xfb638  2      OPC=pushq_r64_1       
  pushq %r12                      #  6     0xfb63a  2      OPC=pushq_r64_1       
  movl %edx, %r13d                #  7     0xfb63c  3      OPC=movl_r32_r32      
  pushq %rbx                      #  8     0xfb63f  1      OPC=pushq_r64_1       
  movq %rcx, %r14                 #  9     0xfb640  3      OPC=movq_r64_r64      
  movq %r8, %rbx                  #  10    0xfb643  3      OPC=movq_r64_r64      
  movq %r9, %r15                  #  11    0xfb646  3      OPC=movq_r64_r64      
  subq $0x68, %rsp                #  12    0xfb649  4      OPC=subq_r64_imm8     
  testl %edx, %edx                #  13    0xfb64d  2      OPC=testl_r32_r32     
  movq %rdi, -0x78(%rbp)          #  14    0xfb64f  4      OPC=movq_m64_r64      
  movq %rsi, -0x80(%rbp)          #  15    0xfb653  4      OPC=movq_m64_r64      
  je .L_fb7b8                     #  16    0xfb657  6      OPC=je_label_1        
.L_fb65d:                         #        0xfb65d  0      OPC=<label>           
  movl $0xffffffff, %r12d         #  17    0xfb65d  7      OPC=movl_r32_imm32_1  
.L_fb663:                         #        0xfb664  0      OPC=<label>           
  movq 0x29f956(%rip), %rax       #  18    0xfb664  7      OPC=movq_r64_m64      
  movl $0xffffffff, %r9d          #  19    0xfb66b  7      OPC=movl_r32_imm32_1  
  orl (%rax), %r13d               #  20    0xfb672  3      OPC=orl_r32_m32       
  je .L_fb7a2                     #  21    0xfb675  6      OPC=je_label_1        
  movl $0x46, %edi                #  22    0xfb67b  5      OPC=movl_r32_imm32    
  movl %r9d, -0x88(%rbp)          #  23    0xfb680  7      OPC=movl_m32_r32      
  callq .__sysconf                #  24    0xfb687  5      OPC=callq_label       
  leaq 0x1e(%rax), %rdx           #  25    0xfb68c  4      OPC=leaq_r64_m16      
  leaq -0x60(%rbp), %rsi          #  26    0xfb690  4      OPC=leaq_r64_m16      
  leaq -0x68(%rbp), %r8           #  27    0xfb694  4      OPC=leaq_r64_m16      
  movq %rax, %rcx                 #  28    0xfb698  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                 #  29    0xfb69b  3      OPC=movq_r64_r64      
  andq $0xf0, %rdx                #  30    0xfb69e  4      OPC=andq_r64_imm8     
  subq %rdx, %rsp                 #  31    0xfb6a2  3      OPC=subq_r64_r64      
  leaq 0xf(%rsp), %rdx            #  32    0xfb6a5  5      OPC=leaq_r64_m16      
  andq $0xf0, %rdx                #  33    0xfb6aa  4      OPC=andq_r64_imm8     
  callq .getpwnam_r__GLIBC_2_2_5  #  34    0xfb6ae  5      OPC=callq_label       
  testl %eax, %eax                #  35    0xfb6b3  2      OPC=testl_r32_r32     
  movl -0x88(%rbp), %r9d          #  36    0xfb6b5  7      OPC=movl_r32_m32      
  jne .L_fb7a2                    #  37    0xfb6bc  6      OPC=jne_label_1       
  movq -0x68(%rbp), %rax          #  38    0xfb6c2  4      OPC=movq_r64_m64      
  testq %rax, %rax                #  39    0xfb6c6  3      OPC=testq_r64_r64     
  je .L_fb7a2                     #  40    0xfb6c9  6      OPC=je_label_1        
  movq 0x20(%rax), %rsi           #  41    0xfb6cf  4      OPC=movq_r64_m64      
  movq %rsi, %rdi                 #  42    0xfb6d3  3      OPC=movq_r64_r64      
  movq %rsi, -0x88(%rbp)          #  43    0xfb6d6  7      OPC=movq_m64_r64      
  callq .strlen                   #  44    0xfb6dd  5      OPC=callq_label       
  movq %rax, %rcx                 #  45    0xfb6e2  3      OPC=movq_r64_r64      
  leaq 0x27(%rax), %rax           #  46    0xfb6e5  4      OPC=leaq_r64_m16      
  movl $0x10, %edi                #  47    0xfb6e9  5      OPC=movl_r32_imm32    
  xorl %edx, %edx                 #  48    0xfb6ee  2      OPC=xorl_r32_r32      
  movq -0x88(%rbp), %rsi          #  49    0xfb6f0  7      OPC=movq_r64_m64      
  movq %rcx, -0x90(%rbp)          #  50    0xfb6f7  7      OPC=movq_m64_r64      
  divq %rdi                       #  51    0xfb6fe  3      OPC=divq_r64          
  movq %rcx, %rdx                 #  52    0xfb701  3      OPC=movq_r64_r64      
  shlq $0x4, %rax                 #  53    0xfb704  4      OPC=shlq_r64_imm8     
  subq %rax, %rsp                 #  54    0xfb708  3      OPC=subq_r64_r64      
  leaq 0xf(%rsp), %r8             #  55    0xfb70b  5      OPC=leaq_r64_m16      
  andq $0xf0, %r8                 #  56    0xfb710  4      OPC=andq_r64_imm8     
  movq %r8, %rdi                  #  57    0xfb714  3      OPC=movq_r64_r64      
  movq %r8, -0x88(%rbp)           #  58    0xfb717  7      OPC=movq_m64_r64      
  callq .__GI_memcpy              #  59    0xfb71e  5      OPC=callq_label       
  movq -0x90(%rbp), %rcx          #  60    0xfb723  7      OPC=movq_r64_m64      
  addq %rax, %rcx                 #  61    0xfb72a  3      OPC=addq_r64_r64      
  movq $0x7374736f68722e2f, %rax  #  62    0xfb72d  10     OPC=movq_r64_imm64    
  movq %rax, (%rcx)               #  63    0xfb737  3      OPC=movq_m64_r64      
  movb $0x0, 0x8(%rcx)            #  64    0xfb73a  4      OPC=movb_m8_imm8      
  callq .geteuid                  #  65    0xfb73e  5      OPC=callq_label       
  movl %eax, %r13d                #  66    0xfb743  3      OPC=movl_r32_r32      
  movq -0x68(%rbp), %rax          #  67    0xfb746  4      OPC=movq_r64_m64      
  movl 0x10(%rax), %edi           #  68    0xfb74a  3      OPC=movl_r32_m32      
  callq .seteuid                  #  69    0xfb74d  5      OPC=callq_label       
  movq -0x68(%rbp), %rax          #  70    0xfb752  4      OPC=movq_r64_m64      
  movq -0x88(%rbp), %r8           #  71    0xfb756  7      OPC=movq_r64_m64      
  movl 0x10(%rax), %esi           #  72    0xfb75d  3      OPC=movl_r32_m32      
  movq %r8, %rdi                  #  73    0xfb760  3      OPC=movq_r64_r64      
  callq .iruserfopen              #  74    0xfb763  5      OPC=callq_label       
  testq %rax, %rax                #  75    0xfb768  3      OPC=testq_r64_r64     
  je .L_fb797                     #  76    0xfb76b  2      OPC=je_label          
  movq -0x78(%rbp), %rsi          #  77    0xfb76d  4      OPC=movq_r64_m64      
  movq -0x80(%rbp), %rdx          #  78    0xfb771  4      OPC=movq_r64_m64      
  movq %rax, %rdi                 #  79    0xfb775  3      OPC=movq_r64_r64      
  movq %r15, %r9                  #  80    0xfb778  3      OPC=movq_r64_r64      
  movq %r14, %r8                  #  81    0xfb77b  3      OPC=movq_r64_r64      
  movq %rbx, %rcx                 #  82    0xfb77e  3      OPC=movq_r64_r64      
  movq %rax, -0x78(%rbp)          #  83    0xfb781  4      OPC=movq_m64_r64      
  callq .__validuser2_sa          #  84    0xfb785  5      OPC=callq_label       
  movq -0x78(%rbp), %r10          #  85    0xfb78a  4      OPC=movq_r64_m64      
  movl %eax, %r12d                #  86    0xfb78e  3      OPC=movl_r32_r32      
  movq %r10, %rdi                 #  87    0xfb791  3      OPC=movq_r64_r64      
  callq ._IO_fclose__GLIBC_2_2_5  #  88    0xfb794  5      OPC=callq_label       
.L_fb797:                         #        0xfb799  0      OPC=<label>           
  movl %r13d, %edi                #  89    0xfb799  3      OPC=movl_r32_r32      
  callq .seteuid                  #  90    0xfb79c  5      OPC=callq_label       
  movl %r12d, %r9d                #  91    0xfb7a1  3      OPC=movl_r32_r32      
.L_fb7a2:                         #        0xfb7a4  0      OPC=<label>           
  leaq -0x28(%rbp), %rsp          #  92    0xfb7a4  4      OPC=leaq_r64_m16      
  movl %r9d, %eax                 #  93    0xfb7a8  3      OPC=movl_r32_r32      
  popq %rbx                       #  94    0xfb7ab  1      OPC=popq_r64_1        
  popq %r12                       #  95    0xfb7ac  2      OPC=popq_r64_1        
  popq %r13                       #  96    0xfb7ae  2      OPC=popq_r64_1        
  popq %r14                       #  97    0xfb7b0  2      OPC=popq_r64_1        
  popq %r15                       #  98    0xfb7b2  2      OPC=popq_r64_1        
  popq %rbp                       #  99    0xfb7b4  1      OPC=popq_r64_1        
  retq                            #  100   0xfb7b5  1      OPC=retq              
  nop                             #  101   0xfb7b6  1      OPC=nop               
  nop                             #  102   0xfb7b7  1      OPC=nop               
  nop                             #  103   0xfb7b8  1      OPC=nop               
  nop                             #  104   0xfb7b9  1      OPC=nop               
.L_fb7b8:                         #        0xfb7ba  0      OPC=<label>           
  leaq 0x6ad0e(%rip), %rdi        #  105   0xfb7ba  7      OPC=leaq_r64_m16      
  xorl %esi, %esi                 #  106   0xfb7c1  2      OPC=xorl_r32_r32      
  callq .iruserfopen              #  107   0xfb7c3  5      OPC=callq_label       
  testq %rax, %rax                #  108   0xfb7c8  3      OPC=testq_r64_r64     
  je .L_fb65d                     #  109   0xfb7cb  6      OPC=je_label_1        
  movq -0x80(%rbp), %rdx          #  110   0xfb7d1  4      OPC=movq_r64_m64      
  movq -0x78(%rbp), %rsi          #  111   0xfb7d5  4      OPC=movq_r64_m64      
  movq %r15, %r9                  #  112   0xfb7d9  3      OPC=movq_r64_r64      
  movq %r14, %r8                  #  113   0xfb7dc  3      OPC=movq_r64_r64      
  movq %rbx, %rcx                 #  114   0xfb7df  3      OPC=movq_r64_r64      
  movq %rax, %rdi                 #  115   0xfb7e2  3      OPC=movq_r64_r64      
  movq %rax, -0x88(%rbp)          #  116   0xfb7e5  7      OPC=movq_m64_r64      
  callq .__validuser2_sa          #  117   0xfb7ec  5      OPC=callq_label       
  movq -0x88(%rbp), %r11          #  118   0xfb7f1  7      OPC=movq_r64_m64      
  movl %eax, %r12d                #  119   0xfb7f8  3      OPC=movl_r32_r32      
  movq %r11, %rdi                 #  120   0xfb7fb  3      OPC=movq_r64_r64      
  callq ._IO_fclose__GLIBC_2_2_5  #  121   0xfb7fe  5      OPC=callq_label       
  xorl %r9d, %r9d                 #  122   0xfb803  3      OPC=xorl_r32_r32      
  testl %r12d, %r12d              #  123   0xfb806  3      OPC=testl_r32_r32     
  jne .L_fb663                    #  124   0xfb809  6      OPC=jne_label_1       
  jmpq .L_fb7a2                   #  125   0xfb80f  2      OPC=jmpq_label        
  nop                             #  126   0xfb811  1      OPC=nop               
                                                                                 
.size ruserok2_sa, .-ruserok2_sa

