  .text
  .globl build_charclass_op
  .type build_charclass_op, @function

#! file-offset 0xc4fb0
#! rip-offset  0xc4fb0
#! capacity    576 bytes

# Text                              #  Line  RIP      Bytes  Opcode              
.build_charclass_op:                #        0xc4fb0  0      OPC=<label>         
  pushq %r15                        #  1     0xc4fb0  2      OPC=pushq_r64_1     
  pushq %r14                        #  2     0xc4fb2  2      OPC=pushq_r64_1     
  movq %rsi, %r15                   #  3     0xc4fb4  3      OPC=movq_r64_r64    
  pushq %r13                        #  4     0xc4fb7  2      OPC=pushq_r64_1     
  pushq %r12                        #  5     0xc4fb9  2      OPC=pushq_r64_1     
  movl $0x1, %esi                   #  6     0xc4fbb  5      OPC=movl_r32_imm32  
  pushq %rbp                        #  7     0xc4fc0  1      OPC=pushq_r64_1     
  pushq %rbx                        #  8     0xc4fc1  1      OPC=pushq_r64_1     
  movq %rdi, %r12                   #  9     0xc4fc2  3      OPC=movq_r64_r64    
  movl $0x20, %edi                  #  10    0xc4fc5  5      OPC=movl_r32_imm32  
  movq %rcx, %rbx                   #  11    0xc4fca  3      OPC=movq_r64_r64    
  movl %r8d, %r13d                  #  12    0xc4fcd  3      OPC=movl_r32_r32    
  subq $0x48, %rsp                  #  13    0xc4fd0  4      OPC=subq_r64_imm8   
  movq %rdx, (%rsp)                 #  14    0xc4fd4  4      OPC=movq_m64_r64    
  movq %r9, 0x8(%rsp)               #  15    0xc4fd8  5      OPC=movq_m64_r64    
  movl $0x0, 0x1c(%rsp)             #  16    0xc4fdd  8      OPC=movl_m32_imm32  
  callq .L_1f8b0                    #  17    0xc4fe5  5      OPC=callq_label     
  movl $0x1, %esi                   #  18    0xc4fea  5      OPC=movl_r32_imm32  
  movl $0x48, %edi                  #  19    0xc4fef  5      OPC=movl_r32_imm32  
  movq %rax, %rbp                   #  20    0xc4ff4  3      OPC=movq_r64_r64    
  callq .L_1f8b0                    #  21    0xc4ff7  5      OPC=callq_label     
  testq %rax, %rax                  #  22    0xc4ffc  3      OPC=testq_r64_r64   
  movq %rax, %r14                   #  23    0xc4fff  3      OPC=movq_r64_r64    
  je .L_c51aa                       #  24    0xc5002  6      OPC=je_label_1      
  testq %rbp, %rbp                  #  25    0xc5008  3      OPC=testq_r64_r64   
  je .L_c51aa                       #  26    0xc500b  6      OPC=je_label_1      
  testl %r13d, %r13d                #  27    0xc5011  3      OPC=testl_r32_r32   
  jne .L_c5150                      #  28    0xc5014  6      OPC=jne_label_1     
.L_c501a:                           #        0xc501a  0      OPC=<label>         
  subq $0x8, %rsp                   #  29    0xc501a  4      OPC=subq_r64_imm8   
  leaq 0x44(%r14), %rcx             #  30    0xc501e  4      OPC=leaq_r64_m16    
  leaq 0x28(%r14), %rdx             #  31    0xc5022  4      OPC=leaq_r64_m16    
  pushq $0x0                        #  32    0xc5026  2      OPC=pushq_imm8      
  movq 0x10(%rsp), %r9              #  33    0xc5028  5      OPC=movq_r64_m64    
  movq %rbp, %rsi                   #  34    0xc502d  3      OPC=movq_r64_r64    
  movq %r15, %rdi                   #  35    0xc5030  3      OPC=movq_r64_r64    
  leaq 0x2c(%rsp), %r8              #  36    0xc5033  5      OPC=leaq_r64_m16    
  callq .build_charclass_isra_26    #  37    0xc5038  5      OPC=callq_label     
  testl %eax, %eax                  #  38    0xc503d  2      OPC=testl_r32_r32   
  popq %rdx                         #  39    0xc503f  1      OPC=popq_r64_1      
  popq %rcx                         #  40    0xc5040  1      OPC=popq_r64_1      
  jne .L_c51c6                      #  41    0xc5041  6      OPC=jne_label_1     
  movzbl (%rbx), %edx               #  42    0xc5047  3      OPC=movzbl_r32_m8   
  movl $0x1, %esi                   #  43    0xc504a  5      OPC=movl_r32_imm32  
  testb %dl, %dl                    #  44    0xc504f  2      OPC=testb_r8_r8     
  je .L_c507b                       #  45    0xc5051  2      OPC=je_label        
  nop                               #  46    0xc5053  1      OPC=nop             
  nop                               #  47    0xc5054  1      OPC=nop             
  nop                               #  48    0xc5055  1      OPC=nop             
  nop                               #  49    0xc5056  1      OPC=nop             
  nop                               #  50    0xc5057  1      OPC=nop             
.L_c5058:                           #        0xc5058  0      OPC=<label>         
  movl %edx, %eax                   #  51    0xc5058  2      OPC=movl_r32_r32    
  movl %edx, %ecx                   #  52    0xc505a  2      OPC=movl_r32_r32    
  addq $0x1, %rbx                   #  53    0xc505c  4      OPC=addq_r64_imm8   
  shrb $0x6, %al                    #  54    0xc5060  3      OPC=shrb_r8_imm8    
  andl $0x3f, %ecx                  #  55    0xc5063  3      OPC=andl_r32_imm8   
  movq %rsi, %rdx                   #  56    0xc5066  3      OPC=movq_r64_r64    
  movzbl %al, %eax                  #  57    0xc5069  3      OPC=movzbl_r32_r8   
  shlq %cl, %rdx                    #  58    0xc506c  3      OPC=shlq_r64_cl     
  orq %rdx, (%rbp,%rax,8)           #  59    0xc506f  5      OPC=orq_m64_r64     
  movzbl (%rbx), %edx               #  60    0xc5074  3      OPC=movzbl_r32_m8   
  testb %dl, %dl                    #  61    0xc5077  2      OPC=testb_r8_r8     
  jne .L_c5058                      #  62    0xc5079  2      OPC=jne_label       
.L_c507b:                           #        0xc507b  0      OPC=<label>         
  testl %r13d, %r13d                #  63    0xc507b  3      OPC=testl_r32_r32   
  jne .L_c5160                      #  64    0xc507e  6      OPC=jne_label_1     
.L_c5084:                           #        0xc5084  0      OPC=<label>         
  cmpl $0x1, 0xa4(%r12)             #  65    0xc5084  9      OPC=cmpl_m32_imm8   
  jle .L_c50a9                      #  66    0xc508d  2      OPC=jle_label       
  movq 0x78(%r12), %rcx             #  67    0xc508f  5      OPC=movq_r64_m64    
  xorl %eax, %eax                   #  68    0xc5094  2      OPC=xorl_r32_r32    
.L_c5096:                           #        0xc5096  0      OPC=<label>         
  movq (%rcx,%rax,1), %rdx          #  69    0xc5096  4      OPC=movq_r64_m64    
  andq %rdx, (%rbp,%rax,1)          #  70    0xc509a  5      OPC=andq_m64_r64    
  addq $0x8, %rax                   #  71    0xc509f  4      OPC=addq_r64_imm8   
  cmpq $0x20, %rax                  #  72    0xc50a3  4      OPC=cmpq_r64_imm8   
  jne .L_c5096                      #  73    0xc50a7  2      OPC=jne_label       
.L_c50a9:                           #        0xc50a9  0      OPC=<label>         
  leaq 0x20(%rsp), %r9              #  74    0xc50a9  5      OPC=leaq_r64_m16    
  leaq 0x70(%r12), %rbx             #  75    0xc50ae  5      OPC=leaq_r64_m16    
  leaq 0x80(%r12), %r13             #  76    0xc50b3  8      OPC=leaq_r64_m16    
  xorl %ecx, %ecx                   #  77    0xc50bb  2      OPC=xorl_r32_r32    
  xorl %edx, %edx                   #  78    0xc50bd  2      OPC=xorl_r32_r32    
  movb $0x3, 0x28(%rsp)             #  79    0xc50bf  5      OPC=movb_m8_imm8    
  movq %r9, %r8                     #  80    0xc50c4  3      OPC=movq_r64_r64    
  movq %r13, %rsi                   #  81    0xc50c7  3      OPC=movq_r64_r64    
  movq %rbx, %rdi                   #  82    0xc50ca  3      OPC=movq_r64_r64    
  movq %r9, (%rsp)                  #  83    0xc50cd  4      OPC=movq_m64_r64    
  movq %rbp, 0x20(%rsp)             #  84    0xc50d1  5      OPC=movq_m64_r64    
  callq .create_token_tree_isra_15  #  85    0xc50d6  5      OPC=callq_label     
  testq %rax, %rax                  #  86    0xc50db  3      OPC=testq_r64_r64   
  movq %rax, %r15                   #  87    0xc50de  3      OPC=movq_r64_r64    
  movq (%rsp), %r9                  #  88    0xc50e1  4      OPC=movq_r64_m64    
  je .L_c519a                       #  89    0xc50e5  6      OPC=je_label_1      
  cmpl $0x1, 0xa4(%r12)             #  90    0xc50eb  9      OPC=cmpl_m32_imm8   
  jle .L_c5180                      #  91    0xc50f4  6      OPC=jle_label_1     
  orb $0x2, 0xa0(%r12)              #  92    0xc50fa  9      OPC=orb_m8_imm8     
  xorl %ecx, %ecx                   #  93    0xc5103  2      OPC=xorl_r32_r32    
  xorl %edx, %edx                   #  94    0xc5105  2      OPC=xorl_r32_r32    
  movq %r9, %r8                     #  95    0xc5107  3      OPC=movq_r64_r64    
  movq %r13, %rsi                   #  96    0xc510a  3      OPC=movq_r64_r64    
  movq %rbx, %rdi                   #  97    0xc510d  3      OPC=movq_r64_r64    
  movb $0x6, 0x28(%rsp)             #  98    0xc5110  5      OPC=movb_m8_imm8    
  movq %r14, 0x20(%rsp)             #  99    0xc5115  5      OPC=movq_m64_r64    
  callq .create_token_tree_isra_15  #  100   0xc511a  5      OPC=callq_label     
  testq %rax, %rax                  #  101   0xc511f  3      OPC=testq_r64_r64   
  je .L_c519a                       #  102   0xc5122  2      OPC=je_label        
  leaq 0x30(%rsp), %r8              #  103   0xc5124  5      OPC=leaq_r64_m16    
  movq %rax, %rcx                   #  104   0xc5129  3      OPC=movq_r64_r64    
  movq %r15, %rdx                   #  105   0xc512c  3      OPC=movq_r64_r64    
  movq %r13, %rsi                   #  106   0xc512f  3      OPC=movq_r64_r64    
  movq %rbx, %rdi                   #  107   0xc5132  3      OPC=movq_r64_r64    
  movb $0xa, 0x38(%rsp)             #  108   0xc5135  5      OPC=movb_m8_imm8    
  callq .create_token_tree_isra_15  #  109   0xc513a  5      OPC=callq_label     
.L_c513f:                           #        0xc513f  0      OPC=<label>         
  addq $0x48, %rsp                  #  110   0xc513f  4      OPC=addq_r64_imm8   
  popq %rbx                         #  111   0xc5143  1      OPC=popq_r64_1      
  popq %rbp                         #  112   0xc5144  1      OPC=popq_r64_1      
  popq %r12                         #  113   0xc5145  2      OPC=popq_r64_1      
  popq %r13                         #  114   0xc5147  2      OPC=popq_r64_1      
  popq %r14                         #  115   0xc5149  2      OPC=popq_r64_1      
  popq %r15                         #  116   0xc514b  2      OPC=popq_r64_1      
  retq                              #  117   0xc514d  1      OPC=retq            
  xchgw %ax, %ax                    #  118   0xc514e  2      OPC=xchgw_ax_r16    
.L_c5150:                           #        0xc5150  0      OPC=<label>         
  orb $0x1, 0x30(%rax)              #  119   0xc5150  4      OPC=orb_m8_imm8     
  jmpq .L_c501a                     #  120   0xc5154  5      OPC=jmpq_label_1    
  nop                               #  121   0xc5159  1      OPC=nop             
  nop                               #  122   0xc515a  1      OPC=nop             
  nop                               #  123   0xc515b  1      OPC=nop             
  nop                               #  124   0xc515c  1      OPC=nop             
  nop                               #  125   0xc515d  1      OPC=nop             
  nop                               #  126   0xc515e  1      OPC=nop             
  nop                               #  127   0xc515f  1      OPC=nop             
.L_c5160:                           #        0xc5160  0      OPC=<label>         
  leaq 0x20(%rbp), %rdx             #  128   0xc5160  4      OPC=leaq_r64_m16    
  movq %rbp, %rax                   #  129   0xc5164  3      OPC=movq_r64_r64    
.L_c5167:                           #        0xc5167  0      OPC=<label>         
  notq (%rax)                       #  130   0xc5167  3      OPC=notq_m64        
  addq $0x8, %rax                   #  131   0xc516a  4      OPC=addq_r64_imm8   
  cmpq %rdx, %rax                   #  132   0xc516e  3      OPC=cmpq_r64_r64    
  jne .L_c5167                      #  133   0xc5171  2      OPC=jne_label       
  jmpq .L_c5084                     #  134   0xc5173  5      OPC=jmpq_label_1    
  nop                               #  135   0xc5178  1      OPC=nop             
  nop                               #  136   0xc5179  1      OPC=nop             
  nop                               #  137   0xc517a  1      OPC=nop             
  nop                               #  138   0xc517b  1      OPC=nop             
  nop                               #  139   0xc517c  1      OPC=nop             
  nop                               #  140   0xc517d  1      OPC=nop             
  nop                               #  141   0xc517e  1      OPC=nop             
  nop                               #  142   0xc517f  1      OPC=nop             
.L_c5180:                           #        0xc5180  0      OPC=<label>         
  movq %r14, %rdi                   #  143   0xc5180  3      OPC=movq_r64_r64    
  callq .free_charset               #  144   0xc5183  5      OPC=callq_label     
  addq $0x48, %rsp                  #  145   0xc5188  4      OPC=addq_r64_imm8   
  movq %r15, %rax                   #  146   0xc518c  3      OPC=movq_r64_r64    
  popq %rbx                         #  147   0xc518f  1      OPC=popq_r64_1      
  popq %rbp                         #  148   0xc5190  1      OPC=popq_r64_1      
  popq %r12                         #  149   0xc5191  2      OPC=popq_r64_1      
  popq %r13                         #  150   0xc5193  2      OPC=popq_r64_1      
  popq %r14                         #  151   0xc5195  2      OPC=popq_r64_1      
  popq %r15                         #  152   0xc5197  2      OPC=popq_r64_1      
  retq                              #  153   0xc5199  1      OPC=retq            
.L_c519a:                           #        0xc519a  0      OPC=<label>         
  movq %rbp, %rdi                   #  154   0xc519a  3      OPC=movq_r64_r64    
  callq .L_1f8c0                    #  155   0xc519d  5      OPC=callq_label     
  movq %r14, %rdi                   #  156   0xc51a2  3      OPC=movq_r64_r64    
  callq .free_charset               #  157   0xc51a5  5      OPC=callq_label     
.L_c51aa:                           #        0xc51aa  0      OPC=<label>         
  movq 0x8(%rsp), %rax              #  158   0xc51aa  5      OPC=movq_r64_m64    
  movl $0xc, (%rax)                 #  159   0xc51af  6      OPC=movl_m32_imm32  
  addq $0x48, %rsp                  #  160   0xc51b5  4      OPC=addq_r64_imm8   
  xorl %eax, %eax                   #  161   0xc51b9  2      OPC=xorl_r32_r32    
  popq %rbx                         #  162   0xc51bb  1      OPC=popq_r64_1      
  popq %rbp                         #  163   0xc51bc  1      OPC=popq_r64_1      
  popq %r12                         #  164   0xc51bd  2      OPC=popq_r64_1      
  popq %r13                         #  165   0xc51bf  2      OPC=popq_r64_1      
  popq %r14                         #  166   0xc51c1  2      OPC=popq_r64_1      
  popq %r15                         #  167   0xc51c3  2      OPC=popq_r64_1      
  retq                              #  168   0xc51c5  1      OPC=retq            
.L_c51c6:                           #        0xc51c6  0      OPC=<label>         
  movq %rbp, %rdi                   #  169   0xc51c6  3      OPC=movq_r64_r64    
  movl %eax, (%rsp)                 #  170   0xc51c9  3      OPC=movl_m32_r32    
  callq .L_1f8c0                    #  171   0xc51cc  5      OPC=callq_label     
  movq %r14, %rdi                   #  172   0xc51d1  3      OPC=movq_r64_r64    
  callq .free_charset               #  173   0xc51d4  5      OPC=callq_label     
  movl (%rsp), %eax                 #  174   0xc51d9  3      OPC=movl_r32_m32    
  movq 0x8(%rsp), %rdi              #  175   0xc51dc  5      OPC=movq_r64_m64    
  movl %eax, (%rdi)                 #  176   0xc51e1  2      OPC=movl_m32_r32    
  xorl %eax, %eax                   #  177   0xc51e3  2      OPC=xorl_r32_r32    
  jmpq .L_c513f                     #  178   0xc51e5  5      OPC=jmpq_label_1    
  nop                               #  179   0xc51ea  1      OPC=nop             
  nop                               #  180   0xc51eb  1      OPC=nop             
  nop                               #  181   0xc51ec  1      OPC=nop             
  nop                               #  182   0xc51ed  1      OPC=nop             
  nop                               #  183   0xc51ee  1      OPC=nop             
  nop                               #  184   0xc51ef  1      OPC=nop             
                                                                                 
.size build_charclass_op, .-build_charclass_op

