  .text
  .globl check_arrival_expand_ecl
  .type check_arrival_expand_ecl, @function

#! file-offset 0xc1d00
#! rip-offset  0xc1d00
#! capacity    352 bytes

# Text                                 #  Line  RIP      Bytes  Opcode              
.check_arrival_expand_ecl:             #        0xc1d00  0      OPC=<label>         
  pushq %r15                           #  1     0xc1d00  2      OPC=pushq_r64_1     
  pushq %r14                           #  2     0xc1d02  2      OPC=pushq_r64_1     
  movq %rdi, %r15                      #  3     0xc1d04  3      OPC=movq_r64_r64    
  pushq %r13                           #  4     0xc1d07  2      OPC=pushq_r64_1     
  pushq %r12                           #  5     0xc1d09  2      OPC=pushq_r64_1     
  movq %rsi, %r13                      #  6     0xc1d0b  3      OPC=movq_r64_r64    
  pushq %rbp                           #  7     0xc1d0e  1      OPC=pushq_r64_1     
  pushq %rbx                           #  8     0xc1d0f  1      OPC=pushq_r64_1     
  movl %edx, %ebp                      #  9     0xc1d10  2      OPC=movl_r32_r32    
  movl %ecx, %ebx                      #  10    0xc1d12  2      OPC=movl_r32_r32    
  subq $0x28, %rsp                     #  11    0xc1d14  4      OPC=subq_r64_imm8   
  movslq 0x4(%rsi), %rdi               #  12    0xc1d18  4      OPC=movslq_r64_m32  
  movl $0x0, 0x14(%rsp)                #  13    0xc1d1c  8      OPC=movl_m32_imm32  
  movl %edi, 0x10(%rsp)                #  14    0xc1d24  4      OPC=movl_m32_r32    
  movq %rdi, %r12                      #  15    0xc1d28  3      OPC=movq_r64_r64    
  shlq $0x2, %rdi                      #  16    0xc1d2b  4      OPC=shlq_r64_imm8   
  callq .memalign_plt                  #  17    0xc1d2f  5      OPC=callq_label     
  testq %rax, %rax                     #  18    0xc1d34  3      OPC=testq_r64_r64   
  movq %rax, 0x18(%rsp)                #  19    0xc1d37  5      OPC=movq_m64_r64    
  je .L_c1e47                          #  20    0xc1d3c  6      OPC=je_label_1      
  testl %r12d, %r12d                   #  21    0xc1d42  3      OPC=testl_r32_r32   
  jle .L_c1de9                         #  22    0xc1d45  6      OPC=jle_label_1     
  leaq 0x10(%rsp), %rax                #  23    0xc1d4b  5      OPC=leaq_r64_m16    
  xorl %r12d, %r12d                    #  24    0xc1d50  3      OPC=xorl_r32_r32    
  xorl %r14d, %r14d                    #  25    0xc1d53  3      OPC=xorl_r32_r32    
  movq %rax, 0x8(%rsp)                 #  26    0xc1d56  5      OPC=movq_m64_r64    
  nop                                  #  27    0xc1d5b  1      OPC=nop             
  nop                                  #  28    0xc1d5c  1      OPC=nop             
  nop                                  #  29    0xc1d5d  1      OPC=nop             
  nop                                  #  30    0xc1d5e  1      OPC=nop             
  nop                                  #  31    0xc1d5f  1      OPC=nop             
.L_c1d60:                              #        0xc1d60  0      OPC=<label>         
  movq 0x8(%r13), %rax                 #  32    0xc1d60  4      OPC=movq_r64_m64    
  movslq (%rax,%r12,1), %rsi           #  33    0xc1d64  4      OPC=movslq_r64_m32  
  movq %rsi, %rdx                      #  34    0xc1d68  3      OPC=movq_r64_r64    
  shlq $0x4, %rsi                      #  35    0xc1d6b  4      OPC=shlq_r64_imm8   
  addq 0x30(%r15), %rsi                #  36    0xc1d6f  4      OPC=addq_r64_m64    
  movl 0x4(%rsi), %eax                 #  37    0xc1d73  3      OPC=movl_r32_m32    
  testl %eax, %eax                     #  38    0xc1d76  2      OPC=testl_r32_r32   
  jle .L_c1e18                         #  39    0xc1d78  6      OPC=jle_label_1     
  movq 0x8(%rsi), %rcx                 #  40    0xc1d7e  4      OPC=movq_r64_m64    
  subl $0x1, %eax                      #  41    0xc1d82  3      OPC=subl_r32_imm8   
  movq (%r15), %r10                    #  42    0xc1d85  3      OPC=movq_r64_m64    
  leaq 0x4(,%rax,4), %r8               #  43    0xc1d88  8      OPC=leaq_r64_m16    
  addq %rcx, %r8                       #  44    0xc1d90  3      OPC=addq_r64_r64    
  jmpq .L_c1da1                        #  45    0xc1d93  2      OPC=jmpq_label      
  nop                                  #  46    0xc1d95  1      OPC=nop             
  nop                                  #  47    0xc1d96  1      OPC=nop             
  nop                                  #  48    0xc1d97  1      OPC=nop             
.L_c1d98:                              #        0xc1d98  0      OPC=<label>         
  addq $0x4, %rcx                      #  49    0xc1d98  4      OPC=addq_r64_imm8   
  cmpq %r8, %rcx                       #  50    0xc1d9c  3      OPC=cmpq_r64_r64    
  je .L_c1e18                          #  51    0xc1d9f  2      OPC=je_label        
.L_c1da1:                              #        0xc1da1  0      OPC=<label>         
  movslq (%rcx), %rax                  #  52    0xc1da1  3      OPC=movslq_r64_m32  
  movq %rax, %rdi                      #  53    0xc1da4  3      OPC=movq_r64_r64    
  shlq $0x4, %rax                      #  54    0xc1da7  4      OPC=shlq_r64_imm8   
  addq %r10, %rax                      #  55    0xc1dab  3      OPC=addq_r64_r64    
  movzbl 0x8(%rax), %r11d              #  56    0xc1dae  5      OPC=movzbl_r32_m8   
  cmpl %r11d, %ebx                     #  57    0xc1db3  3      OPC=cmpl_r32_r32    
  jne .L_c1d98                         #  58    0xc1db6  2      OPC=jne_label       
  cmpl (%rax), %ebp                    #  59    0xc1db8  2      OPC=cmpl_r32_m32    
  jne .L_c1d98                         #  60    0xc1dba  2      OPC=jne_label       
  cmpl $0xffffffff, %edi               #  61    0xc1dbc  6      OPC=cmpl_r32_imm32  
  nop                                  #  62    0xc1dc2  1      OPC=nop             
  nop                                  #  63    0xc1dc3  1      OPC=nop             
  nop                                  #  64    0xc1dc4  1      OPC=nop             
  je .L_c1e18                          #  65    0xc1dc5  2      OPC=je_label        
  movq 0x8(%rsp), %rsi                 #  66    0xc1dc7  5      OPC=movq_r64_m64    
  movl %ebx, %r8d                      #  67    0xc1dcc  3      OPC=movl_r32_r32    
  movl %ebp, %ecx                      #  68    0xc1dcf  2      OPC=movl_r32_r32    
  movq %r15, %rdi                      #  69    0xc1dd1  3      OPC=movq_r64_r64    
  callq .check_arrival_expand_ecl_sub  #  70    0xc1dd4  5      OPC=callq_label     
  testl %eax, %eax                     #  71    0xc1dd9  2      OPC=testl_r32_r32   
  jne .L_c1e26                         #  72    0xc1ddb  2      OPC=jne_label       
.L_c1dd7:                              #        0xc1ddd  0      OPC=<label>         
  addl $0x1, %r14d                     #  73    0xc1ddd  4      OPC=addl_r32_imm8   
  addq $0x4, %r12                      #  74    0xc1de1  4      OPC=addq_r64_imm8   
  cmpl %r14d, 0x4(%r13)                #  75    0xc1de5  4      OPC=cmpl_m32_r32    
  jg .L_c1d60                          #  76    0xc1de9  6      OPC=jg_label_1      
.L_c1de9:                              #        0xc1def  0      OPC=<label>         
  movq 0x8(%r13), %rdi                 #  77    0xc1def  4      OPC=movq_r64_m64    
  callq .L_1f8c0                       #  78    0xc1df3  5      OPC=callq_label     
  movq 0x10(%rsp), %rax                #  79    0xc1df8  5      OPC=movq_r64_m64    
  movq 0x18(%rsp), %rdx                #  80    0xc1dfd  5      OPC=movq_r64_m64    
  movq %rax, (%r13)                    #  81    0xc1e02  4      OPC=movq_m64_r64    
  movq %rdx, 0x8(%r13)                 #  82    0xc1e06  4      OPC=movq_m64_r64    
  addq $0x28, %rsp                     #  83    0xc1e0a  4      OPC=addq_r64_imm8   
  popq %rbx                            #  84    0xc1e0e  1      OPC=popq_r64_1      
  xorl %eax, %eax                      #  85    0xc1e0f  2      OPC=xorl_r32_r32    
  popq %rbp                            #  86    0xc1e11  1      OPC=popq_r64_1      
  popq %r12                            #  87    0xc1e12  2      OPC=popq_r64_1      
  popq %r13                            #  88    0xc1e14  2      OPC=popq_r64_1      
  popq %r14                            #  89    0xc1e16  2      OPC=popq_r64_1      
  popq %r15                            #  90    0xc1e18  2      OPC=popq_r64_1      
  retq                                 #  91    0xc1e1a  1      OPC=retq            
  nop                                  #  92    0xc1e1b  1      OPC=nop             
  nop                                  #  93    0xc1e1c  1      OPC=nop             
  nop                                  #  94    0xc1e1d  1      OPC=nop             
.L_c1e18:                              #        0xc1e1e  0      OPC=<label>         
  movq 0x8(%rsp), %rdi                 #  95    0xc1e1e  5      OPC=movq_r64_m64    
  callq .re_node_set_merge             #  96    0xc1e23  5      OPC=callq_label     
  testl %eax, %eax                     #  97    0xc1e28  2      OPC=testl_r32_r32   
  je .L_c1dd7                          #  98    0xc1e2a  2      OPC=je_label        
.L_c1e26:                              #        0xc1e2c  0      OPC=<label>         
  movq 0x18(%rsp), %rdi                #  99    0xc1e2c  5      OPC=movq_r64_m64    
  movl %eax, 0x8(%rsp)                 #  100   0xc1e31  4      OPC=movl_m32_r32    
  callq .L_1f8c0                       #  101   0xc1e35  5      OPC=callq_label     
  movl 0x8(%rsp), %eax                 #  102   0xc1e3a  4      OPC=movl_r32_m32    
  addq $0x28, %rsp                     #  103   0xc1e3e  4      OPC=addq_r64_imm8   
  popq %rbx                            #  104   0xc1e42  1      OPC=popq_r64_1      
  popq %rbp                            #  105   0xc1e43  1      OPC=popq_r64_1      
  popq %r12                            #  106   0xc1e44  2      OPC=popq_r64_1      
  popq %r13                            #  107   0xc1e46  2      OPC=popq_r64_1      
  popq %r14                            #  108   0xc1e48  2      OPC=popq_r64_1      
  popq %r15                            #  109   0xc1e4a  2      OPC=popq_r64_1      
  retq                                 #  110   0xc1e4c  1      OPC=retq            
.L_c1e47:                              #        0xc1e4d  0      OPC=<label>         
  addq $0x28, %rsp                     #  111   0xc1e4d  4      OPC=addq_r64_imm8   
  movl $0xc, %eax                      #  112   0xc1e51  5      OPC=movl_r32_imm32  
  popq %rbx                            #  113   0xc1e56  1      OPC=popq_r64_1      
  popq %rbp                            #  114   0xc1e57  1      OPC=popq_r64_1      
  popq %r12                            #  115   0xc1e58  2      OPC=popq_r64_1      
  popq %r13                            #  116   0xc1e5a  2      OPC=popq_r64_1      
  popq %r14                            #  117   0xc1e5c  2      OPC=popq_r64_1      
  popq %r15                            #  118   0xc1e5e  2      OPC=popq_r64_1      
  retq                                 #  119   0xc1e60  1      OPC=retq            
  nop                                  #  120   0xc1e61  1      OPC=nop             
  nop                                  #  121   0xc1e62  1      OPC=nop             
  nop                                  #  122   0xc1e63  1      OPC=nop             
  nop                                  #  123   0xc1e64  1      OPC=nop             
  nop                                  #  124   0xc1e65  1      OPC=nop             
                                                                                    
.size check_arrival_expand_ecl, .-check_arrival_expand_ecl

