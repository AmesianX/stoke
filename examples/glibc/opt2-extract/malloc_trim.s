  .text
  .globl malloc_trim
  .type malloc_trim, @function

#! file-offset 0x7a140
#! rip-offset  0x7a140
#! capacity    720 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
.malloc_trim:                       #        0x7a140  0      OPC=<label>           
  pushq %r15                        #  1     0x7a140  2      OPC=pushq_r64_1       
  pushq %r14                        #  2     0x7a142  2      OPC=pushq_r64_1       
  pushq %r13                        #  3     0x7a144  2      OPC=pushq_r64_1       
  pushq %r12                        #  4     0x7a146  2      OPC=pushq_r64_1       
  pushq %rbp                        #  5     0x7a148  1      OPC=pushq_r64_1       
  pushq %rbx                        #  6     0x7a149  1      OPC=pushq_r64_1       
  subq $0x28, %rsp                  #  7     0x7a14a  4      OPC=subq_r64_imm8     
  movl 0x321070(%rip), %eax         #  8     0x7a14e  6      OPC=movl_r32_m32      
  movq %rdi, 0x18(%rsp)             #  9     0x7a154  5      OPC=movq_m64_r64      
  testl %eax, %eax                  #  10    0x7a159  2      OPC=testl_r32_r32     
  js .L_7a3bf                       #  11    0x7a15b  6      OPC=js_label_1        
.L_7a161:                           #        0x7a161  0      OPC=<label>           
  leaq 0x321ad8(%rip), %rax         #  12    0x7a161  7      OPC=leaq_r64_m16      
  movl $0x0, 0x14(%rsp)             #  13    0x7a168  8      OPC=movl_m32_imm32    
  movq %rax, 0x8(%rsp)              #  14    0x7a170  5      OPC=movq_m64_r64      
.L_7a175:                           #        0x7a175  0      OPC=<label>           
  movl $0x1, %esi                   #  15    0x7a175  5      OPC=movl_r32_imm32    
  xorl %eax, %eax                   #  16    0x7a17a  2      OPC=xorl_r32_r32      
  movq 0x8(%rsp), %rbx              #  17    0x7a17c  5      OPC=movq_r64_m64      
  cmpl $0x0, 0x326a78(%rip)         #  18    0x7a181  7      OPC=cmpl_m32_imm8     
  je .L_7a192                       #  19    0x7a188  2      OPC=je_label          
  lock                              #  20    0x7a18a  1      OPC=lock              
  cmpxchgl %esi, (%rbx)             #  21    0x7a18b  3      OPC=cmpxchgl_m32_r32  
  nop                               #  22    0x7a18e  1      OPC=nop               
  jne .L_7a197                      #  23    0x7a18f  2      OPC=jne_label         
  jmpq .L_7a1ad                     #  24    0x7a191  2      OPC=jmpq_label        
.L_7a192:                           #        0x7a193  0      OPC=<label>           
  cmpxchgl %esi, (%rbx)             #  25    0x7a193  3      OPC=cmpxchgl_m32_r32  
  je .L_7a1ad                       #  26    0x7a196  2      OPC=je_label          
.L_7a197:                           #        0x7a198  0      OPC=<label>           
  leaq (%rbx), %rdi                 #  27    0x7a198  3      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  28    0x7a19b  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  29    0x7a1a2  5      OPC=callq_label       
  addq $0x80, %rsp                  #  30    0x7a1a7  7      OPC=addq_r64_imm32    
.L_7a1ad:                           #        0x7a1ae  0      OPC=<label>           
  xorl %r10d, %r10d                 #  31    0x7a1ae  3      OPC=xorl_r32_r32      
  testb $0x4, 0x4(%rbx)             #  32    0x7a1b1  4      OPC=testb_m8_imm8     
  je .L_7a219                       #  33    0x7a1b5  2      OPC=je_label          
.L_7a1b6:                           #        0x7a1b7  0      OPC=<label>           
  orl %r10d, 0x14(%rsp)             #  34    0x7a1b7  5      OPC=orl_m32_r32       
  movq 0x8(%rsp), %rbx              #  35    0x7a1bc  5      OPC=movq_r64_m64      
  cmpl $0x0, 0x326a39(%rip)         #  36    0x7a1c1  7      OPC=cmpl_m32_imm8     
  je .L_7a1d0                       #  37    0x7a1c8  2      OPC=je_label          
  lock                              #  38    0x7a1ca  1      OPC=lock              
  decl (%rbx)                       #  39    0x7a1cb  2      OPC=decl_m32          
  nop                               #  40    0x7a1cd  1      OPC=nop               
  jne .L_7a1d4                      #  41    0x7a1ce  2      OPC=jne_label         
  jmpq .L_7a1ea                     #  42    0x7a1d0  2      OPC=jmpq_label        
.L_7a1d0:                           #        0x7a1d2  0      OPC=<label>           
  decl (%rbx)                       #  43    0x7a1d2  2      OPC=decl_m32          
  je .L_7a1ea                       #  44    0x7a1d4  2      OPC=je_label          
.L_7a1d4:                           #        0x7a1d6  0      OPC=<label>           
  leaq (%rbx), %rdi                 #  45    0x7a1d6  3      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  46    0x7a1d9  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  47    0x7a1e0  5      OPC=callq_label       
  addq $0x80, %rsp                  #  48    0x7a1e5  7      OPC=addq_r64_imm32    
.L_7a1ea:                           #        0x7a1ec  0      OPC=<label>           
  movq 0x868(%rbx), %rax            #  49    0x7a1ec  7      OPC=movq_r64_m64      
  leaq 0x321a48(%rip), %rcx         #  50    0x7a1f3  7      OPC=leaq_r64_m16      
  cmpq %rcx, %rax                   #  51    0x7a1fa  3      OPC=cmpq_r64_r64      
  movq %rax, 0x8(%rsp)              #  52    0x7a1fd  5      OPC=movq_m64_r64      
  jne .L_7a175                      #  53    0x7a202  6      OPC=jne_label_1       
  movl 0x14(%rsp), %eax             #  54    0x7a208  4      OPC=movl_r32_m32      
  addq $0x28, %rsp                  #  55    0x7a20c  4      OPC=addq_r64_imm8     
  popq %rbx                         #  56    0x7a210  1      OPC=popq_r64_1        
  popq %rbp                         #  57    0x7a211  1      OPC=popq_r64_1        
  popq %r12                         #  58    0x7a212  2      OPC=popq_r64_1        
  popq %r13                         #  59    0x7a214  2      OPC=popq_r64_1        
  popq %r14                         #  60    0x7a216  2      OPC=popq_r64_1        
  popq %r15                         #  61    0x7a218  2      OPC=popq_r64_1        
  retq                              #  62    0x7a21a  1      OPC=retq              
.L_7a219:                           #        0x7a21b  0      OPC=<label>           
  movq 0x8(%rsp), %rdi              #  63    0x7a21b  5      OPC=movq_r64_m64      
  callq .malloc_consolidate         #  64    0x7a220  5      OPC=callq_label       
  movq 0x320c4e(%rip), %rax         #  65    0x7a225  7      OPC=movq_r64_m64      
  movq 0x18(%rax), %r15             #  66    0x7a22c  4      OPC=movq_r64_m64      
  cmpq $0x3ff, %r15                 #  67    0x7a230  7      OPC=cmpq_r64_imm32    
  ja .L_7a315                       #  68    0x7a237  6      OPC=ja_label_1        
  movl %r15d, %eax                  #  69    0x7a23d  3      OPC=movl_r32_r32      
  shrl $0x4, %eax                   #  70    0x7a240  3      OPC=shrl_r32_imm8     
  movl %eax, 0x10(%rsp)             #  71    0x7a243  4      OPC=movl_m32_r32      
.L_7a245:                           #        0x7a247  0      OPC=<label>           
  leaq -0x1(%r15), %r12             #  72    0x7a247  4      OPC=leaq_r64_m16      
  movq 0x8(%rsp), %rax              #  73    0x7a24b  5      OPC=movq_r64_m64      
  xorl %ecx, %ecx                   #  74    0x7a250  2      OPC=xorl_r32_r32      
  movl $0x1, %ebp                   #  75    0x7a252  5      OPC=movl_r32_imm32    
  addq $0x2f, %r15                  #  76    0x7a257  4      OPC=addq_r64_imm8     
  movq %r12, %r13                   #  77    0x7a25b  3      OPC=movq_r64_r64      
  movq %r12, %rbx                   #  78    0x7a25e  3      OPC=movq_r64_r64      
  leaq 0x58(%rax), %r14             #  79    0x7a261  4      OPC=leaq_r64_m16      
  notq %r13                         #  80    0x7a265  3      OPC=notq_r64          
  jmpq .L_7a284                     #  81    0x7a268  2      OPC=jmpq_label        
  nop                               #  82    0x7a26a  1      OPC=nop               
  nop                               #  83    0x7a26b  1      OPC=nop               
  nop                               #  84    0x7a26c  1      OPC=nop               
  nop                               #  85    0x7a26d  1      OPC=nop               
  nop                               #  86    0x7a26e  1      OPC=nop               
  nop                               #  87    0x7a26f  1      OPC=nop               
  nop                               #  88    0x7a270  1      OPC=nop               
  nop                               #  89    0x7a271  1      OPC=nop               
.L_7a270:                           #        0x7a272  0      OPC=<label>           
  cmpl $0x1, %ebp                   #  90    0x7a272  3      OPC=cmpl_r32_imm8     
  je .L_7a28a                       #  91    0x7a275  2      OPC=je_label          
.L_7a275:                           #        0x7a277  0      OPC=<label>           
  addl $0x1, %ebp                   #  92    0x7a277  3      OPC=addl_r32_imm8     
  addq $0x10, %r14                  #  93    0x7a27a  4      OPC=addq_r64_imm8     
  cmpl $0x80, %ebp                  #  94    0x7a27e  6      OPC=cmpl_r32_imm32    
  je .L_7a2f7                       #  95    0x7a284  2      OPC=je_label          
.L_7a284:                           #        0x7a286  0      OPC=<label>           
  cmpl 0x10(%rsp), %ebp             #  96    0x7a286  4      OPC=cmpl_r32_m32      
  jl .L_7a270                       #  97    0x7a28a  2      OPC=jl_label          
.L_7a28a:                           #        0x7a28c  0      OPC=<label>           
  movq 0x18(%r14), %r12             #  98    0x7a28c  4      OPC=movq_r64_m64      
  cmpq %r12, %r14                   #  99    0x7a290  3      OPC=cmpq_r64_r64      
  jne .L_7a2a2                      #  100   0x7a293  2      OPC=jne_label         
  jmpq .L_7a275                     #  101   0x7a295  2      OPC=jmpq_label        
  nop                               #  102   0x7a297  1      OPC=nop               
  nop                               #  103   0x7a298  1      OPC=nop               
  nop                               #  104   0x7a299  1      OPC=nop               
.L_7a298:                           #        0x7a29a  0      OPC=<label>           
  movq 0x18(%r12), %r12             #  105   0x7a29a  5      OPC=movq_r64_m64      
  cmpq %r12, %r14                   #  106   0x7a29f  3      OPC=cmpq_r64_r64      
  je .L_7a275                       #  107   0x7a2a2  2      OPC=je_label          
.L_7a2a2:                           #        0x7a2a4  0      OPC=<label>           
  movq 0x8(%r12), %rax              #  108   0x7a2a4  5      OPC=movq_r64_m64      
  andq $0xf8, %rax                  #  109   0x7a2a9  4      OPC=andq_r64_imm8     
  cmpq %r15, %rax                   #  110   0x7a2ad  3      OPC=cmpq_r64_r64      
  jbe .L_7a298                      #  111   0x7a2b0  2      OPC=jbe_label         
  leaq (%r12,%r15,1), %rdi          #  112   0x7a2b2  4      OPC=leaq_r64_m16      
  leaq 0x30(%r12), %rdx             #  113   0x7a2b6  5      OPC=leaq_r64_m16      
  andq %r13, %rdi                   #  114   0x7a2bb  3      OPC=andq_r64_r64      
  cmpq %rdx, %rdi                   #  115   0x7a2be  3      OPC=cmpq_r64_r64      
  jb .L_7a385                       #  116   0x7a2c1  6      OPC=jb_label_1        
  leaq (%r12,%rax,1), %rdx          #  117   0x7a2c7  4      OPC=leaq_r64_m16      
  cmpq %rdx, %rdi                   #  118   0x7a2cb  3      OPC=cmpq_r64_r64      
  jae .L_7a366                      #  119   0x7a2ce  6      OPC=jae_label_1       
  movq %r12, %rsi                   #  120   0x7a2d4  3      OPC=movq_r64_r64      
  subq %rdi, %rsi                   #  121   0x7a2d7  3      OPC=subq_r64_r64      
  addq %rsi, %rax                   #  122   0x7a2da  3      OPC=addq_r64_r64      
  cmpq %rax, %rbx                   #  123   0x7a2dd  3      OPC=cmpq_r64_r64      
  jae .L_7a298                      #  124   0x7a2e0  2      OPC=jae_label         
  andq %r13, %rax                   #  125   0x7a2e2  3      OPC=andq_r64_r64      
  movl $0x4, %edx                   #  126   0x7a2e5  5      OPC=movl_r32_imm32    
  movq %rax, %rsi                   #  127   0x7a2ea  3      OPC=movq_r64_r64      
  callq .__madvise                  #  128   0x7a2ed  5      OPC=callq_label       
  movl $0x1, %ecx                   #  129   0x7a2f2  5      OPC=movl_r32_imm32    
  jmpq .L_7a298                     #  130   0x7a2f7  2      OPC=jmpq_label        
.L_7a2f7:                           #        0x7a2f9  0      OPC=<label>           
  xorl %eax, %eax                   #  131   0x7a2f9  2      OPC=xorl_r32_r32      
  leaq 0x321940(%rip), %rdx         #  132   0x7a2fb  7      OPC=leaq_r64_m16      
  cmpq %rdx, 0x8(%rsp)              #  133   0x7a302  5      OPC=cmpq_m64_r64      
  je .L_7a3ea                       #  134   0x7a307  6      OPC=je_label_1        
.L_7a30b:                           #        0x7a30d  0      OPC=<label>           
  orl %ecx, %eax                    #  135   0x7a30d  2      OPC=orl_r32_r32       
  movl %eax, %r10d                  #  136   0x7a30f  3      OPC=movl_r32_r32      
  jmpq .L_7a1b6                     #  137   0x7a312  5      OPC=jmpq_label_1      
.L_7a315:                           #        0x7a317  0      OPC=<label>           
  movq %r15, %r12                   #  138   0x7a317  3      OPC=movq_r64_r64      
  shrq $0x6, %r12                   #  139   0x7a31a  4      OPC=shrq_r64_imm8     
  cmpq $0x30, %r12                  #  140   0x7a31e  4      OPC=cmpq_r64_imm8     
  ja .L_7a330                       #  141   0x7a322  2      OPC=ja_label          
  leal 0x30(%r12), %eax             #  142   0x7a324  5      OPC=leal_r32_m16      
  movl %eax, 0x10(%rsp)             #  143   0x7a329  4      OPC=movl_m32_r32      
  jmpq .L_7a245                     #  144   0x7a32d  5      OPC=jmpq_label_1      
.L_7a330:                           #        0x7a332  0      OPC=<label>           
  movq %r15, %r12                   #  145   0x7a332  3      OPC=movq_r64_r64      
  shrq $0x9, %r12                   #  146   0x7a335  4      OPC=shrq_r64_imm8     
  cmpq $0x14, %r12                  #  147   0x7a339  4      OPC=cmpq_r64_imm8     
  jbe .L_7a358                      #  148   0x7a33d  2      OPC=jbe_label         
  movq %r15, %r12                   #  149   0x7a33f  3      OPC=movq_r64_r64      
  shrq $0xc, %r12                   #  150   0x7a342  4      OPC=shrq_r64_imm8     
  cmpq $0xa, %r12                   #  151   0x7a346  4      OPC=cmpq_r64_imm8     
  ja .L_7a3a4                       #  152   0x7a34a  2      OPC=ja_label          
  leal 0x6e(%r12), %eax             #  153   0x7a34c  5      OPC=leal_r32_m16      
  movl %eax, 0x10(%rsp)             #  154   0x7a351  4      OPC=movl_m32_r32      
  jmpq .L_7a245                     #  155   0x7a355  5      OPC=jmpq_label_1      
.L_7a358:                           #        0x7a35a  0      OPC=<label>           
  leal 0x5b(%r12), %eax             #  156   0x7a35a  5      OPC=leal_r32_m16      
  movl %eax, 0x10(%rsp)             #  157   0x7a35f  4      OPC=movl_m32_r32      
  jmpq .L_7a245                     #  158   0x7a363  5      OPC=jmpq_label_1      
.L_7a366:                           #        0x7a368  0      OPC=<label>           
  leaq 0xea789(%rip), %rcx          #  159   0x7a368  7      OPC=leaq_r64_m16      
  leaq 0xea47d(%rip), %rsi          #  160   0x7a36f  7      OPC=leaq_r64_m16      
  leaq 0xee1ed(%rip), %rdi          #  161   0x7a376  7      OPC=leaq_r64_m16      
  movl $0x11ab, %edx                #  162   0x7a37d  5      OPC=movl_r32_imm32    
  callq .__malloc_assert            #  163   0x7a382  5      OPC=callq_label       
.L_7a385:                           #        0x7a387  0      OPC=<label>           
  leaq 0xea76a(%rip), %rcx          #  164   0x7a387  7      OPC=leaq_r64_m16      
  leaq 0xea45e(%rip), %rsi          #  165   0x7a38e  7      OPC=leaq_r64_m16      
  leaq 0xee196(%rip), %rdi          #  166   0x7a395  7      OPC=leaq_r64_m16      
  movl $0x11aa, %edx                #  167   0x7a39c  5      OPC=movl_r32_imm32    
  callq .__malloc_assert            #  168   0x7a3a1  5      OPC=callq_label       
.L_7a3a4:                           #        0x7a3a6  0      OPC=<label>           
  movq %r15, %r12                   #  169   0x7a3a6  3      OPC=movq_r64_r64      
  shrq $0xf, %r12                   #  170   0x7a3a9  4      OPC=shrq_r64_imm8     
  cmpq $0x4, %r12                   #  171   0x7a3ad  4      OPC=cmpq_r64_imm8     
  ja .L_7a3c9                       #  172   0x7a3b1  2      OPC=ja_label          
  leal 0x77(%r12), %eax             #  173   0x7a3b3  5      OPC=leal_r32_m16      
  movl %eax, 0x10(%rsp)             #  174   0x7a3b8  4      OPC=movl_m32_r32      
  jmpq .L_7a245                     #  175   0x7a3bc  5      OPC=jmpq_label_1      
.L_7a3bf:                           #        0x7a3c1  0      OPC=<label>           
  callq .ptmalloc_init_part_7       #  176   0x7a3c1  5      OPC=callq_label       
  jmpq .L_7a161                     #  177   0x7a3c6  5      OPC=jmpq_label_1      
.L_7a3c9:                           #        0x7a3cb  0      OPC=<label>           
  movq %r15, %rax                   #  178   0x7a3cb  3      OPC=movq_r64_r64      
  shrq $0x12, %rax                  #  179   0x7a3ce  4      OPC=shrq_r64_imm8     
  leal 0x7c(%rax), %r12d            #  180   0x7a3d2  4      OPC=leal_r32_m16      
  cmpq $0x2, %rax                   #  181   0x7a3d6  4      OPC=cmpq_r64_imm8     
  movl $0x7e, %eax                  #  182   0x7a3da  5      OPC=movl_r32_imm32    
  cmovbel %r12d, %eax               #  183   0x7a3df  4      OPC=cmovbel_r32_r32   
  movl %eax, 0x10(%rsp)             #  184   0x7a3e3  4      OPC=movl_m32_r32      
  jmpq .L_7a245                     #  185   0x7a3e7  5      OPC=jmpq_label_1      
.L_7a3ea:                           #        0x7a3ec  0      OPC=<label>           
  movq 0x18(%rsp), %rdi             #  186   0x7a3ec  5      OPC=movq_r64_m64      
  leaq 0x3220ca(%rip), %rdx         #  187   0x7a3f1  7      OPC=leaq_r64_m16      
  leaq 0x32189b(%rip), %rsi         #  188   0x7a3f8  7      OPC=leaq_r64_m16      
  movl %ecx, 0x10(%rsp)             #  189   0x7a3ff  4      OPC=movl_m32_r32      
  callq .systrim_isra_1             #  190   0x7a403  5      OPC=callq_label       
  movl 0x10(%rsp), %ecx             #  191   0x7a408  4      OPC=movl_r32_m32      
  jmpq .L_7a30b                     #  192   0x7a40c  5      OPC=jmpq_label_1      
  nop                               #  193   0x7a411  1      OPC=nop               
                                                                                   
.size malloc_trim, .-malloc_trim

