  .text
  .globl glob
  .type glob, @function

#! file-offset 0xb9250
#! rip-offset  0xb9250
#! capacity    7520 bytes

# Text                            #  Line  RIP      Bytes  Opcode               
.glob:                            #        0xb9250  0      OPC=<label>          
  pushq %rbp                      #  1     0xb9250  1      OPC=pushq_r64_1      
  movq %rsp, %rbp                 #  2     0xb9251  3      OPC=movq_r64_r64     
  pushq %r15                      #  3     0xb9254  2      OPC=pushq_r64_1      
  pushq %r14                      #  4     0xb9256  2      OPC=pushq_r64_1      
  pushq %r13                      #  5     0xb9258  2      OPC=pushq_r64_1      
  pushq %r12                      #  6     0xb925a  2      OPC=pushq_r64_1      
  movq %rdi, %r14                 #  7     0xb925c  3      OPC=movq_r64_r64     
  pushq %rbx                      #  8     0xb925f  1      OPC=pushq_r64_1      
  movq %rcx, %r15                 #  9     0xb9260  3      OPC=movq_r64_r64     
  subq $0x218, %rsp               #  10    0xb9263  7      OPC=subq_r64_imm32   
  testq %rdi, %rdi                #  11    0xb926a  3      OPC=testq_r64_r64    
  movq %rdx, -0x1a8(%rbp)         #  12    0xb926d  7      OPC=movq_m64_r64     
  sete %dl                        #  13    0xb9274  3      OPC=sete_r8          
  testq %rcx, %rcx                #  14    0xb9277  3      OPC=testq_r64_r64    
  sete %al                        #  15    0xb927a  3      OPC=sete_r8          
  orb %al, %dl                    #  16    0xb927d  2      OPC=orb_r8_r8        
  jne .L_b9b10                    #  17    0xb927f  6      OPC=jne_label_1      
  movl %esi, %eax                 #  18    0xb9285  2      OPC=movl_r32_r32     
  movl %esi, %r13d                #  19    0xb9287  3      OPC=movl_r32_r32     
  andl $0xffff8100, %eax          #  20    0xb928a  6      OPC=andl_r32_imm32   
  movl %eax, -0x1c0(%rbp)         #  21    0xb9290  6      OPC=movl_m32_r32     
  jne .L_b9b10                    #  22    0xb9296  6      OPC=jne_label_1      
  cmpb $0x0, (%rdi)               #  23    0xb929c  3      OPC=cmpb_m8_imm8     
  je .L_b92b5                     #  24    0xb929f  2      OPC=je_label         
  callq .strlen                   #  25    0xb92a1  5      OPC=callq_label      
  movl %r13d, %edx                #  26    0xb92a6  3      OPC=movl_r32_r32     
  orb $0x20, %dh                  #  27    0xb92a9  3      OPC=orb_rh_imm8      
  cmpb $0x2f, -0x1(%r14,%rax,1)   #  28    0xb92ac  6      OPC=cmpb_m8_imm8     
  cmovel %edx, %r13d              #  29    0xb92b2  4      OPC=cmovel_r32_r32   
.L_b92b5:                         #        0xb92b6  0      OPC=<label>          
  movl %r13d, %eax                #  30    0xb92b6  3      OPC=movl_r32_r32     
  andl $0x8, %eax                 #  31    0xb92b9  3      OPC=andl_r32_imm8    
  movl %eax, -0x1f0(%rbp)         #  32    0xb92bc  6      OPC=movl_m32_r32     
  jne .L_b92cb                    #  33    0xb92c2  2      OPC=jne_label        
  movq $0x0, 0x10(%r15)           #  34    0xb92c4  8      OPC=movq_m64_imm32   
.L_b92cb:                         #        0xb92cc  0      OPC=<label>          
  testl $0x400, %r13d             #  35    0xb92cc  7      OPC=testl_r32_imm32  
  je .L_b9340                     #  36    0xb92d3  2      OPC=je_label         
  testb $0x40, %r13b              #  37    0xb92d5  4      OPC=testb_r8_imm8    
  jne .L_b9320                    #  38    0xb92d9  2      OPC=jne_label        
  movzbl (%r14), %edx             #  39    0xb92db  4      OPC=movzbl_r32_m8    
  movq %r14, %r12                 #  40    0xb92df  3      OPC=movq_r64_r64     
  testb %dl, %dl                  #  41    0xb92e2  2      OPC=testb_r8_r8      
  jne .L_b9307                    #  42    0xb92e4  2      OPC=jne_label        
  jmpq .L_b9340                   #  43    0xb92e6  2      OPC=jmpq_label       
  nop                             #  44    0xb92e8  1      OPC=nop              
  nop                             #  45    0xb92e9  1      OPC=nop              
  nop                             #  46    0xb92ea  1      OPC=nop              
  nop                             #  47    0xb92eb  1      OPC=nop              
  nop                             #  48    0xb92ec  1      OPC=nop              
  nop                             #  49    0xb92ed  1      OPC=nop              
  nop                             #  50    0xb92ee  1      OPC=nop              
  nop                             #  51    0xb92ef  1      OPC=nop              
  nop                             #  52    0xb92f0  1      OPC=nop              
.L_b92f0:                         #        0xb92f1  0      OPC=<label>          
  cmpb $0x7b, %dl                 #  53    0xb92f1  3      OPC=cmpb_r8_imm8     
  je .L_b94d0                     #  54    0xb92f4  6      OPC=je_label_1       
  movzbl 0x1(%r12), %edx          #  55    0xb92fa  6      OPC=movzbl_r32_m8    
.L_b92ff:                         #        0xb9300  0      OPC=<label>          
  addq $0x1, %r12                 #  56    0xb9300  4      OPC=addq_r64_imm8    
  testb %dl, %dl                  #  57    0xb9304  2      OPC=testb_r8_r8      
  je .L_b9340                     #  58    0xb9306  2      OPC=je_label         
.L_b9307:                         #        0xb9308  0      OPC=<label>          
  cmpb $0x5c, %dl                 #  59    0xb9308  3      OPC=cmpb_r8_imm8     
  jne .L_b92f0                    #  60    0xb930b  2      OPC=jne_label        
  cmpb $0x0, 0x1(%r12)            #  61    0xb930d  6      OPC=cmpb_m8_imm8     
  je .L_b9340                     #  62    0xb9313  2      OPC=je_label         
  movzbl 0x2(%r12), %edx          #  63    0xb9315  6      OPC=movzbl_r32_m8    
  addq $0x1, %r12                 #  64    0xb931b  4      OPC=addq_r64_imm8    
  jmpq .L_b92ff                   #  65    0xb931f  2      OPC=jmpq_label       
.L_b9320:                         #        0xb9321  0      OPC=<label>          
  movl $0x7b, %esi                #  66    0xb9321  5      OPC=movl_r32_imm32   
  movq %r14, %rdi                 #  67    0xb9326  3      OPC=movq_r64_r64     
  callq .__GI_strchr              #  68    0xb9329  5      OPC=callq_label      
  testq %rax, %rax                #  69    0xb932e  3      OPC=testq_r64_r64    
  movq %rax, %r12                 #  70    0xb9331  3      OPC=movq_r64_r64     
  jne .L_b94d0                    #  71    0xb9334  6      OPC=jne_label_1      
  nop                             #  72    0xb933a  1      OPC=nop              
  nop                             #  73    0xb933b  1      OPC=nop              
  nop                             #  74    0xb933c  1      OPC=nop              
  nop                             #  75    0xb933d  1      OPC=nop              
  nop                             #  76    0xb933e  1      OPC=nop              
  nop                             #  77    0xb933f  1      OPC=nop              
  nop                             #  78    0xb9340  1      OPC=nop              
.L_b9340:                         #        0xb9341  0      OPC=<label>          
  movl %r13d, %eax                #  79    0xb9341  3      OPC=movl_r32_r32     
  movq $0x0, -0x1e0(%rbp)         #  80    0xb9344  11     OPC=movq_m64_imm32   
  andl $0x20, %eax                #  81    0xb934f  3      OPC=andl_r32_imm8    
  movl %eax, -0x1e8(%rbp)         #  82    0xb9352  6      OPC=movl_m32_r32     
.L_b9357:                         #        0xb9358  0      OPC=<label>          
  movl -0x1e8(%rbp), %esi         #  83    0xb9358  6      OPC=movl_r32_m32     
  testl %esi, %esi                #  84    0xb935e  2      OPC=testl_r32_r32    
  je .L_b9490                     #  85    0xb9360  6      OPC=je_label_1       
  movq 0x10(%r15), %rbx           #  86    0xb9366  4      OPC=movq_r64_m64     
  movq (%r15), %rax               #  87    0xb936a  3      OPC=movq_r64_m64     
.L_b936c:                         #        0xb936d  0      OPC=<label>          
  addq %rbx, %rax                 #  88    0xb936d  3      OPC=addq_r64_r64     
  movl $0x2f, %esi                #  89    0xb9370  5      OPC=movl_r32_imm32   
  movq %r14, %rdi                 #  90    0xb9375  3      OPC=movq_r64_r64     
  movq %rax, -0x1d0(%rbp)         #  91    0xb9378  7      OPC=movq_m64_r64     
  callq .strrchr                  #  92    0xb937f  5      OPC=callq_label      
  testq %rax, %rax                #  93    0xb9384  3      OPC=testq_r64_r64    
  movq %rax, %rbx                 #  94    0xb9387  3      OPC=movq_r64_r64     
  je .L_b9b70                     #  95    0xb938a  6      OPC=je_label_1       
  cmpq %r14, %rax                 #  96    0xb9390  3      OPC=cmpq_r64_r64     
  je .L_b9be8                     #  97    0xb9393  6      OPC=je_label_1       
  leaq 0x1(%r14), %rax            #  98    0xb9399  4      OPC=leaq_r64_m16     
  cmpq %rax, %rbx                 #  99    0xb939d  3      OPC=cmpq_r64_r64     
  je .L_b9bd0                     #  100   0xb93a0  6      OPC=je_label_1       
.L_b93a5:                         #        0xb93a6  0      OPC=<label>          
  movq -0x1e0(%rbp), %rax         #  101   0xb93a6  7      OPC=movq_r64_m64     
  movq %rbx, %r12                 #  102   0xb93ad  3      OPC=movq_r64_r64     
  subq %r14, %r12                 #  103   0xb93b0  3      OPC=subq_r64_r64     
  leaq 0x1(%r12,%rax,1), %rdi     #  104   0xb93b3  5      OPC=leaq_r64_m16     
  cmpq $0x1000, %rdi              #  105   0xb93b8  7      OPC=cmpq_r64_imm32   
  ja .L_ba288                     #  106   0xb93bf  6      OPC=ja_label_1       
.L_b93c4:                         #        0xb93c5  0      OPC=<label>          
  movq %rsp, %rax                 #  107   0xb93c5  3      OPC=movq_r64_r64     
  leaq 0x1f(%r12), %rdx           #  108   0xb93c8  5      OPC=leaq_r64_m16     
  andq $0xf0, %rdx                #  109   0xb93cd  4      OPC=andq_r64_imm8    
  subq %rdx, %rsp                 #  110   0xb93d1  3      OPC=subq_r64_r64     
  leaq 0xf(%rsp), %rdx            #  111   0xb93d4  5      OPC=leaq_r64_m16     
  andq $0xf0, %rdx                #  112   0xb93d9  4      OPC=andq_r64_imm8    
  movq %rdx, -0x1b0(%rbp)         #  113   0xb93dd  7      OPC=movq_m64_r64     
  subq %rsp, %rax                 #  114   0xb93e4  3      OPC=subq_r64_r64     
  addq %rax, -0x1e0(%rbp)         #  115   0xb93e7  7      OPC=addq_m64_r64     
  movl $0x0, -0x1c8(%rbp)         #  116   0xb93ee  10     OPC=movl_m32_imm32   
.L_b93f7:                         #        0xb93f8  0      OPC=<label>          
  movq -0x1b0(%rbp), %rdi         #  117   0xb93f8  7      OPC=movq_r64_m64     
  movq %r12, %rdx                 #  118   0xb93ff  3      OPC=movq_r64_r64     
  movq %r14, %rsi                 #  119   0xb9402  3      OPC=movq_r64_r64     
  callq .__GI_memcpy              #  120   0xb9405  5      OPC=callq_label      
  cmpq $0x1, %r12                 #  121   0xb940a  4      OPC=cmpq_r64_imm8    
  movb $0x0, (%rax,%r12,1)        #  122   0xb940e  5      OPC=movb_m8_imm8     
  jbe .L_b9770                    #  123   0xb9413  6      OPC=jbe_label_1      
  cmpb $0x0, 0x1(%rbx)            #  124   0xb9419  4      OPC=cmpb_m8_imm8     
  jne .L_b9770                    #  125   0xb941d  6      OPC=jne_label_1      
  testb $0x40, %r13b              #  126   0xb9423  4      OPC=testb_r8_imm8    
  je .L_b96e8                     #  127   0xb9427  6      OPC=je_label_1       
.L_b942c:                         #        0xb942d  0      OPC=<label>          
  movq -0x1a8(%rbp), %rdx         #  128   0xb942d  7      OPC=movq_r64_m64     
  movq -0x1b0(%rbp), %rdi         #  129   0xb9434  7      OPC=movq_r64_m64     
  movl %r13d, %esi                #  130   0xb943b  3      OPC=movl_r32_r32     
  orl $0x2, %esi                  #  131   0xb943e  3      OPC=orl_r32_imm8     
  movq %r15, %rcx                 #  132   0xb9441  3      OPC=movq_r64_r64     
  callq .glob                     #  133   0xb9444  5      OPC=callq_label      
  testl %eax, %eax                #  134   0xb9449  2      OPC=testl_r32_r32    
  jne .L_b9461                    #  135   0xb944b  2      OPC=jne_label        
.L_b944c:                         #        0xb944d  0      OPC=<label>          
  movl 0x18(%r15), %eax           #  136   0xb944d  4      OPC=movl_r32_m32     
  movl %r13d, %esi                #  137   0xb9451  3      OPC=movl_r32_r32     
  andl $0x2, %esi                 #  138   0xb9454  3      OPC=andl_r32_imm8    
  andl $0xfffffffd, %eax          #  139   0xb9457  6      OPC=andl_r32_imm32   
  nop                             #  140   0xb945d  1      OPC=nop              
  nop                             #  141   0xb945e  1      OPC=nop              
  nop                             #  142   0xb945f  1      OPC=nop              
  orl %eax, %esi                  #  143   0xb9460  2      OPC=orl_r32_r32      
  xorl %eax, %eax                 #  144   0xb9462  2      OPC=xorl_r32_r32     
  movl %esi, 0x18(%r15)           #  145   0xb9464  4      OPC=movl_m32_r32     
.L_b9461:                         #        0xb9468  0      OPC=<label>          
  movl %eax, -0x1c0(%rbp)         #  146   0xb9468  6      OPC=movl_m32_r32     
  movl -0x1c8(%rbp), %eax         #  147   0xb946e  6      OPC=movl_r32_m32     
  testl %eax, %eax                #  148   0xb9474  2      OPC=testl_r32_r32    
  je .L_b96b9                     #  149   0xb9476  6      OPC=je_label_1       
  movq -0x1b0(%rbp), %rdi         #  150   0xb947c  7      OPC=movq_r64_m64     
  callq .L_1f8c0                  #  151   0xb9483  5      OPC=callq_label      
  jmpq .L_b96b9                   #  152   0xb9488  5      OPC=jmpq_label_1     
  nop                             #  153   0xb948d  1      OPC=nop              
  nop                             #  154   0xb948e  1      OPC=nop              
  nop                             #  155   0xb948f  1      OPC=nop              
  nop                             #  156   0xb9490  1      OPC=nop              
  nop                             #  157   0xb9491  1      OPC=nop              
  nop                             #  158   0xb9492  1      OPC=nop              
  nop                             #  159   0xb9493  1      OPC=nop              
  nop                             #  160   0xb9494  1      OPC=nop              
  nop                             #  161   0xb9495  1      OPC=nop              
  nop                             #  162   0xb9496  1      OPC=nop              
.L_b9490:                         #        0xb9497  0      OPC=<label>          
  movl -0x1f0(%rbp), %ecx         #  163   0xb9497  6      OPC=movl_r32_m32     
  movq $0x0, (%r15)               #  164   0xb949d  7      OPC=movq_m64_imm32   
  testl %ecx, %ecx                #  165   0xb94a4  2      OPC=testl_r32_r32    
  je .L_b96d0                     #  166   0xb94a6  6      OPC=je_label_1       
  movq 0x10(%r15), %rbx           #  167   0xb94ac  4      OPC=movq_r64_m64     
  movq $0x1ffffffffffffffe, %rax  #  168   0xb94b0  10     OPC=movq_r64_imm64   
  cmpq %rax, %rbx                 #  169   0xb94ba  3      OPC=cmpq_r64_r64     
  jbe .L_b9dc0                    #  170   0xb94bd  6      OPC=jbe_label_1      
.L_b94bc:                         #        0xb94c3  0      OPC=<label>          
  movl $0x1, -0x1c0(%rbp)         #  171   0xb94c3  10     OPC=movl_m32_imm32   
  jmpq .L_b96b9                   #  172   0xb94cd  5      OPC=jmpq_label_1     
  nop                             #  173   0xb94d2  1      OPC=nop              
  nop                             #  174   0xb94d3  1      OPC=nop              
  nop                             #  175   0xb94d4  1      OPC=nop              
  nop                             #  176   0xb94d5  1      OPC=nop              
  nop                             #  177   0xb94d6  1      OPC=nop              
.L_b94d0:                         #        0xb94d7  0      OPC=<label>          
  movq %r14, %rdi                 #  178   0xb94d7  3      OPC=movq_r64_r64     
  callq .strlen                   #  179   0xb94da  5      OPC=callq_label      
  leaq -0x1(%rax), %rbx           #  180   0xb94df  4      OPC=leaq_r64_m16     
  cmpq $0x1000, %rbx              #  181   0xb94e3  7      OPC=cmpq_r64_imm32   
  ja .L_ba208                     #  182   0xb94ea  6      OPC=ja_label_1       
.L_b94e9:                         #        0xb94f0  0      OPC=<label>          
  movq %rsp, %rax                 #  183   0xb94f0  3      OPC=movq_r64_r64     
  addq $0x1e, %rbx                #  184   0xb94f3  4      OPC=addq_r64_imm8    
  andq $0xf0, %rbx                #  185   0xb94f7  4      OPC=andq_r64_imm8    
  subq %rbx, %rsp                 #  186   0xb94fb  3      OPC=subq_r64_r64     
  leaq 0xf(%rsp), %rdx            #  187   0xb94fe  5      OPC=leaq_r64_m16     
  andq $0xf0, %rdx                #  188   0xb9503  4      OPC=andq_r64_imm8    
  movq %rdx, %rdi                 #  189   0xb9507  3      OPC=movq_r64_r64     
  movq %rdx, -0x1b0(%rbp)         #  190   0xb950a  7      OPC=movq_m64_r64     
  subq %rsp, %rax                 #  191   0xb9511  3      OPC=subq_r64_r64     
  movq %r12, %rbx                 #  192   0xb9514  3      OPC=movq_r64_r64     
  movq %r14, %rsi                 #  193   0xb9517  3      OPC=movq_r64_r64     
  addq $0x1, %r12                 #  194   0xb951a  4      OPC=addq_r64_imm8    
  subq %r14, %rbx                 #  195   0xb951e  3      OPC=subq_r64_r64     
  movq %rax, -0x1e0(%rbp)         #  196   0xb9521  7      OPC=movq_m64_r64     
  movq %rbx, %rdx                 #  197   0xb9528  3      OPC=movq_r64_r64     
  callq .__GI_memcpy              #  198   0xb952b  5      OPC=callq_label      
  movl %r13d, %esi                #  199   0xb9530  3      OPC=movl_r32_r32     
  addq %rbx, %rax                 #  200   0xb9533  3      OPC=addq_r64_r64     
  movq %r12, %rdi                 #  201   0xb9536  3      OPC=movq_r64_r64     
  movq %rax, -0x1b8(%rbp)         #  202   0xb9539  7      OPC=movq_m64_r64     
  callq .next_brace_sub           #  203   0xb9540  5      OPC=callq_label      
  testq %rax, %rax                #  204   0xb9545  3      OPC=testq_r64_r64    
  movq %rax, %rbx                 #  205   0xb9548  3      OPC=movq_r64_r64     
  je .L_b9698                     #  206   0xb954b  6      OPC=je_label_1       
  movl $0x1, -0x1f8(%rbp)         #  207   0xb9551  10     OPC=movl_m32_imm32   
.L_b9554:                         #        0xb955b  0      OPC=<label>          
  movq %rbx, %rax                 #  208   0xb955b  3      OPC=movq_r64_r64     
  jmpq .L_b9575                   #  209   0xb955e  2      OPC=jmpq_label       
  nop                             #  210   0xb9560  1      OPC=nop              
  nop                             #  211   0xb9561  1      OPC=nop              
  nop                             #  212   0xb9562  1      OPC=nop              
  nop                             #  213   0xb9563  1      OPC=nop              
  nop                             #  214   0xb9564  1      OPC=nop              
  nop                             #  215   0xb9565  1      OPC=nop              
  nop                             #  216   0xb9566  1      OPC=nop              
.L_b9560:                         #        0xb9567  0      OPC=<label>          
  leaq 0x1(%rax), %rdi            #  217   0xb9567  4      OPC=leaq_r64_m16     
  movl %r13d, %esi                #  218   0xb956b  3      OPC=movl_r32_r32     
  callq .next_brace_sub           #  219   0xb956e  5      OPC=callq_label      
  testq %rax, %rax                #  220   0xb9573  3      OPC=testq_r64_r64    
  je .L_b9688                     #  221   0xb9576  6      OPC=je_label_1       
.L_b9575:                         #        0xb957c  0      OPC=<label>          
  cmpb $0x7d, (%rax)              #  222   0xb957c  3      OPC=cmpb_m8_imm8     
  jne .L_b9560                    #  223   0xb957f  2      OPC=jne_label        
  addq $0x1, %rax                 #  224   0xb9581  4      OPC=addq_r64_imm8    
  movq %rax, %rdi                 #  225   0xb9585  3      OPC=movq_r64_r64     
  movq %rax, -0x1c8(%rbp)         #  226   0xb9588  7      OPC=movq_m64_r64     
  callq .strlen                   #  227   0xb958f  5      OPC=callq_label      
  addq $0x1, %rax                 #  228   0xb9594  4      OPC=addq_r64_imm8    
  movq %rax, -0x1d0(%rbp)         #  229   0xb9598  7      OPC=movq_m64_r64     
  movl %r13d, %eax                #  230   0xb959f  3      OPC=movl_r32_r32     
  andl $0x20, %eax                #  231   0xb95a2  3      OPC=andl_r32_imm8    
  movl %eax, -0x1e8(%rbp)         #  232   0xb95a5  6      OPC=movl_m32_r32     
  je .L_b9ae8                     #  233   0xb95ab  6      OPC=je_label_1       
  movq (%r15), %rax               #  234   0xb95b1  3      OPC=movq_r64_m64     
  movq %rax, -0x208(%rbp)         #  235   0xb95b4  7      OPC=movq_m64_r64     
.L_b95b4:                         #        0xb95bb  0      OPC=<label>          
  movl %r13d, %eax                #  236   0xb95bb  3      OPC=movl_r32_r32     
  movq %r14, -0x200(%rbp)         #  237   0xb95be  7      OPC=movq_m64_r64     
  andl $0xfffff7cf, %eax          #  238   0xb95c5  6      OPC=andl_r32_imm32   
  orl $0x20, %eax                 #  239   0xb95cb  3      OPC=orl_r32_imm8     
  movl %eax, -0x1d8(%rbp)         #  240   0xb95ce  6      OPC=movl_m32_r32     
  movq %rbx, %rax                 #  241   0xb95d4  3      OPC=movq_r64_r64     
  movq %r12, %rbx                 #  242   0xb95d7  3      OPC=movq_r64_r64     
  movq %rax, %r12                 #  243   0xb95da  3      OPC=movq_r64_r64     
  jmpq .L_b9607                   #  244   0xb95dd  2      OPC=jmpq_label       
  nop                             #  245   0xb95df  1      OPC=nop              
  nop                             #  246   0xb95e0  1      OPC=nop              
  nop                             #  247   0xb95e1  1      OPC=nop              
  nop                             #  248   0xb95e2  1      OPC=nop              
  nop                             #  249   0xb95e3  1      OPC=nop              
  nop                             #  250   0xb95e4  1      OPC=nop              
  nop                             #  251   0xb95e5  1      OPC=nop              
  nop                             #  252   0xb95e6  1      OPC=nop              
  nop                             #  253   0xb95e7  1      OPC=nop              
.L_b95e0:                         #        0xb95e8  0      OPC=<label>          
  cmpb $0x7d, (%r12)              #  254   0xb95e8  5      OPC=cmpb_m8_imm8     
  je .L_b9b30                     #  255   0xb95ed  6      OPC=je_label_1       
  leaq 0x1(%r12), %rbx            #  256   0xb95f3  5      OPC=leaq_r64_m16     
  movl %r13d, %esi                #  257   0xb95f8  3      OPC=movl_r32_r32     
  movq %rbx, %rdi                 #  258   0xb95fb  3      OPC=movq_r64_r64     
  callq .next_brace_sub           #  259   0xb95fe  5      OPC=callq_label      
  testq %rax, %rax                #  260   0xb9603  3      OPC=testq_r64_r64    
  movq %rax, %r12                 #  261   0xb9606  3      OPC=movq_r64_r64     
  je .L_bad28                     #  262   0xb9609  6      OPC=je_label_1       
.L_b9607:                         #        0xb960f  0      OPC=<label>          
  movq -0x1b8(%rbp), %rdi         #  263   0xb960f  7      OPC=movq_r64_m64     
  movq %r12, %r14                 #  264   0xb9616  3      OPC=movq_r64_r64     
  movq %rbx, %rsi                 #  265   0xb9619  3      OPC=movq_r64_r64     
  subq %rbx, %r14                 #  266   0xb961c  3      OPC=subq_r64_r64     
  movq %r14, %rdx                 #  267   0xb961f  3      OPC=movq_r64_r64     
  callq .__GI_memcpy              #  268   0xb9622  5      OPC=callq_label      
  movq -0x1d0(%rbp), %rdx         #  269   0xb9627  7      OPC=movq_r64_m64     
  movq -0x1c8(%rbp), %rsi         #  270   0xb962e  7      OPC=movq_r64_m64     
  leaq (%rax,%r14,1), %rdi        #  271   0xb9635  4      OPC=leaq_r64_m16     
  callq .__GI_memcpy              #  272   0xb9639  5      OPC=callq_label      
  movq -0x1a8(%rbp), %rdx         #  273   0xb963e  7      OPC=movq_r64_m64     
  movl -0x1d8(%rbp), %esi         #  274   0xb9645  6      OPC=movl_r32_m32     
  movq %r15, %rcx                 #  275   0xb964b  3      OPC=movq_r64_r64     
  movq -0x1b0(%rbp), %rdi         #  276   0xb964e  7      OPC=movq_r64_m64     
  callq .glob                     #  277   0xb9655  5      OPC=callq_label      
  cmpl $0x3, %eax                 #  278   0xb965a  3      OPC=cmpl_r32_imm8    
  je .L_b95e0                     #  279   0xb965d  2      OPC=je_label         
  testl %eax, %eax                #  280   0xb965f  2      OPC=testl_r32_r32    
  je .L_b95e0                     #  281   0xb9661  2      OPC=je_label         
  movl -0x1f8(%rbp), %r9d         #  282   0xb9663  7      OPC=movl_r32_m32     
  testl %r9d, %r9d                #  283   0xb966a  3      OPC=testl_r32_r32    
  je .L_ba8f0                     #  284   0xb966d  6      OPC=je_label_1       
.L_b966b:                         #        0xb9673  0      OPC=<label>          
  movl -0x1e8(%rbp), %r8d         #  285   0xb9673  7      OPC=movl_r32_m32     
  testl %r8d, %r8d                #  286   0xb967a  3      OPC=testl_r32_r32    
  je .L_b9f80                     #  287   0xb967d  6      OPC=je_label_1       
.L_b967b:                         #        0xb9683  0      OPC=<label>          
  movl %eax, -0x1c0(%rbp)         #  288   0xb9683  6      OPC=movl_m32_r32     
  jmpq .L_b96b9                   #  289   0xb9689  2      OPC=jmpq_label       
  nop                             #  290   0xb968b  1      OPC=nop              
  nop                             #  291   0xb968c  1      OPC=nop              
  nop                             #  292   0xb968d  1      OPC=nop              
  nop                             #  293   0xb968e  1      OPC=nop              
  nop                             #  294   0xb968f  1      OPC=nop              
.L_b9688:                         #        0xb9690  0      OPC=<label>          
  movl -0x1f8(%rbp), %r10d        #  295   0xb9690  7      OPC=movl_r32_m32     
  testl %r10d, %r10d              #  296   0xb9697  3      OPC=testl_r32_r32    
  je .L_b9fcf                     #  297   0xb969a  6      OPC=je_label_1       
.L_b9698:                         #        0xb96a0  0      OPC=<label>          
  movq -0x1a8(%rbp), %rdx         #  298   0xb96a0  7      OPC=movq_r64_m64     
  movl %r13d, %esi                #  299   0xb96a7  3      OPC=movl_r32_r32     
  movq %r15, %rcx                 #  300   0xb96aa  3      OPC=movq_r64_r64     
  andl $0xfffffbff, %esi          #  301   0xb96ad  6      OPC=andl_r32_imm32   
  movq %r14, %rdi                 #  302   0xb96b3  3      OPC=movq_r64_r64     
  callq .glob                     #  303   0xb96b6  5      OPC=callq_label      
  movl %eax, -0x1c0(%rbp)         #  304   0xb96bb  6      OPC=movl_m32_r32     
.L_b96b9:                         #        0xb96c1  0      OPC=<label>          
  movl -0x1c0(%rbp), %eax         #  305   0xb96c1  6      OPC=movl_r32_m32     
  leaq -0x28(%rbp), %rsp          #  306   0xb96c7  4      OPC=leaq_r64_m16     
  popq %rbx                       #  307   0xb96cb  1      OPC=popq_r64_1       
  popq %r12                       #  308   0xb96cc  2      OPC=popq_r64_1       
  popq %r13                       #  309   0xb96ce  2      OPC=popq_r64_1       
  popq %r14                       #  310   0xb96d0  2      OPC=popq_r64_1       
  popq %r15                       #  311   0xb96d2  2      OPC=popq_r64_1       
  popq %rbp                       #  312   0xb96d4  1      OPC=popq_r64_1       
  retq                            #  313   0xb96d5  1      OPC=retq             
  xchgw %ax, %ax                  #  314   0xb96d6  2      OPC=xchgw_ax_r16     
.L_b96d0:                         #        0xb96d8  0      OPC=<label>          
  movq $0x0, 0x8(%r15)            #  315   0xb96d8  8      OPC=movq_m64_imm32   
  movq 0x10(%r15), %rbx           #  316   0xb96e0  4      OPC=movq_r64_m64     
  xorl %eax, %eax                 #  317   0xb96e4  2      OPC=xorl_r32_r32     
  jmpq .L_b936c                   #  318   0xb96e6  5      OPC=jmpq_label_1     
  nop                             #  319   0xb96eb  1      OPC=nop              
  nop                             #  320   0xb96ec  1      OPC=nop              
  nop                             #  321   0xb96ed  1      OPC=nop              
  nop                             #  322   0xb96ee  1      OPC=nop              
  nop                             #  323   0xb96ef  1      OPC=nop              
.L_b96e8:                         #        0xb96f0  0      OPC=<label>          
  movq -0x1b0(%rbp), %rax         #  324   0xb96f0  7      OPC=movq_r64_m64     
  leaq -0x1(%rax,%r12,1), %rdx    #  325   0xb96f7  5      OPC=leaq_r64_m16     
  cmpb $0x5c, (%rdx)              #  326   0xb96fc  3      OPC=cmpb_m8_imm8     
  jne .L_b942c                    #  327   0xb96ff  6      OPC=jne_label_1      
  cmpq %rdx, %rax                 #  328   0xb9705  3      OPC=cmpq_r64_r64     
  movq %rax, %rcx                 #  329   0xb9708  3      OPC=movq_r64_r64     
  movq %rdx, %rax                 #  330   0xb970b  3      OPC=movq_r64_r64     
  jae .L_b971f                    #  331   0xb970e  2      OPC=jae_label        
  cmpb $0x5c, -0x1(%rdx)          #  332   0xb9710  4      OPC=cmpb_m8_imm8     
  je .L_b9716                     #  333   0xb9714  2      OPC=je_label         
  jmpq .L_b971f                   #  334   0xb9716  2      OPC=jmpq_label       
.L_b9710:                         #        0xb9718  0      OPC=<label>          
  cmpb $0x5c, -0x1(%rax)          #  335   0xb9718  4      OPC=cmpb_m8_imm8     
  jne .L_b971f                    #  336   0xb971c  2      OPC=jne_label        
.L_b9716:                         #        0xb971e  0      OPC=<label>          
  subq $0x1, %rax                 #  337   0xb971e  4      OPC=subq_r64_imm8    
  cmpq %rcx, %rax                 #  338   0xb9722  3      OPC=cmpq_r64_r64     
  jne .L_b9710                    #  339   0xb9725  2      OPC=jne_label        
.L_b971f:                         #        0xb9727  0      OPC=<label>          
  addq -0x1b0(%rbp), %r12         #  340   0xb9727  7      OPC=addq_r64_m64     
  subq %rax, %r12                 #  341   0xb972e  3      OPC=subq_r64_r64     
  andl $0x1, %r12d                #  342   0xb9731  4      OPC=andl_r32_imm8    
  je .L_b942c                     #  343   0xb9735  6      OPC=je_label_1       
  movl %r13d, %ebx                #  344   0xb973b  3      OPC=movl_r32_r32     
  movb $0x0, (%rdx)               #  345   0xb973e  3      OPC=movb_m8_imm8     
  movq -0x1b0(%rbp), %rdi         #  346   0xb9741  7      OPC=movq_r64_m64     
  andl $0xfffff7ef, %ebx          #  347   0xb9748  6      OPC=andl_r32_imm32   
  movq -0x1a8(%rbp), %rdx         #  348   0xb974e  7      OPC=movq_r64_m64     
  movq %r15, %rcx                 #  349   0xb9755  3      OPC=movq_r64_r64     
  movl %ebx, %esi                 #  350   0xb9758  2      OPC=movl_r32_r32     
  orl $0x2, %esi                  #  351   0xb975a  3      OPC=orl_r32_imm8     
  callq .glob                     #  352   0xb975d  5      OPC=callq_label      
  testl %eax, %eax                #  353   0xb9762  2      OPC=testl_r32_r32    
  jne .L_ba057                    #  354   0xb9764  6      OPC=jne_label_1      
  movl %ebx, %r13d                #  355   0xb976a  3      OPC=movl_r32_r32     
  jmpq .L_b944c                   #  356   0xb976d  5      OPC=jmpq_label_1     
  nop                             #  357   0xb9772  1      OPC=nop              
  nop                             #  358   0xb9773  1      OPC=nop              
  nop                             #  359   0xb9774  1      OPC=nop              
  nop                             #  360   0xb9775  1      OPC=nop              
  nop                             #  361   0xb9776  1      OPC=nop              
  nop                             #  362   0xb9777  1      OPC=nop              
.L_b9770:                         #        0xb9778  0      OPC=<label>          
  leaq 0x1(%rbx), %rax            #  363   0xb9778  4      OPC=leaq_r64_m16     
  movq %rax, -0x1b8(%rbp)         #  364   0xb977c  7      OPC=movq_m64_r64     
.L_b977b:                         #        0xb9783  0      OPC=<label>          
  xorl %edx, %edx                 #  365   0xb9783  2      OPC=xorl_r32_r32     
  testl $0x5000, %r13d            #  366   0xb9785  7      OPC=testl_r32_imm32  
  je .L_b9796                     #  367   0xb978c  2      OPC=je_label         
  movq -0x1b0(%rbp), %rax         #  368   0xb978e  7      OPC=movq_r64_m64     
  cmpb $0x7e, (%rax)              #  369   0xb9795  3      OPC=cmpb_m8_imm8     
  je .L_ba0c8                     #  370   0xb9798  6      OPC=je_label_1       
.L_b9796:                         #        0xb979e  0      OPC=<label>          
  cmpq $0x0, -0x1b8(%rbp)         #  371   0xb979e  8      OPC=cmpq_m64_imm8    
  je .L_b99c0                     #  372   0xb97a6  6      OPC=je_label_1       
.L_b97a4:                         #        0xb97ac  0      OPC=<label>          
  movl %r13d, %ebx                #  373   0xb97ac  3      OPC=movl_r32_r32     
  movq -0x1b0(%rbp), %rdi         #  374   0xb97af  7      OPC=movq_r64_m64     
  movl %edx, -0x1c0(%rbp)         #  375   0xb97b6  6      OPC=movl_m32_r32     
  shrl $0x6, %ebx                 #  376   0xb97bc  3      OPC=shrl_r32_imm8    
  xorl $0x1, %ebx                 #  377   0xb97bf  3      OPC=xorl_r32_imm8    
  andl $0x1, %ebx                 #  378   0xb97c2  3      OPC=andl_r32_imm8    
  movzbl %bl, %esi                #  379   0xb97c5  3      OPC=movzbl_r32_r8    
  callq .__glob_pattern_type      #  380   0xb97c8  5      OPC=callq_label      
  testb $0x5, %al                 #  381   0xb97cd  2      OPC=testb_al_imm8    
  movl -0x1c0(%rbp), %edx         #  382   0xb97cf  6      OPC=movl_r32_m32     
  je .L_b9968                     #  383   0xb97d5  6      OPC=je_label_1       
  testq %r12, %r12                #  384   0xb97db  3      OPC=testq_r64_r64    
  je .L_b9828                     #  385   0xb97de  2      OPC=je_label         
  testb %bl, %bl                  #  386   0xb97e0  2      OPC=testb_r8_r8      
  je .L_b9828                     #  387   0xb97e2  2      OPC=je_label         
  movq -0x1b0(%rbp), %rax         #  388   0xb97e4  7      OPC=movq_r64_m64     
  leaq -0x1(%rax,%r12,1), %rdx    #  389   0xb97eb  5      OPC=leaq_r64_m16     
  cmpb $0x5c, (%rdx)              #  390   0xb97f0  3      OPC=cmpb_m8_imm8     
  jne .L_b9828                    #  391   0xb97f3  2      OPC=jne_label        
  cmpq %rdx, %rax                 #  392   0xb97f5  3      OPC=cmpq_r64_r64     
  movq %rax, %rcx                 #  393   0xb97f8  3      OPC=movq_r64_r64     
  movq %rdx, %rax                 #  394   0xb97fb  3      OPC=movq_r64_r64     
  jae .L_b980f                    #  395   0xb97fe  2      OPC=jae_label        
  cmpb $0x5c, -0x1(%rdx)          #  396   0xb9800  4      OPC=cmpb_m8_imm8     
  je .L_b9806                     #  397   0xb9804  2      OPC=je_label         
  jmpq .L_b980f                   #  398   0xb9806  2      OPC=jmpq_label       
.L_b9800:                         #        0xb9808  0      OPC=<label>          
  cmpb $0x5c, -0x1(%rax)          #  399   0xb9808  4      OPC=cmpb_m8_imm8     
  jne .L_b980f                    #  400   0xb980c  2      OPC=jne_label        
.L_b9806:                         #        0xb980e  0      OPC=<label>          
  subq $0x1, %rax                 #  401   0xb980e  4      OPC=subq_r64_imm8    
  cmpq %rcx, %rax                 #  402   0xb9812  3      OPC=cmpq_r64_r64     
  jne .L_b9800                    #  403   0xb9815  2      OPC=jne_label        
.L_b980f:                         #        0xb9817  0      OPC=<label>          
  addq -0x1b0(%rbp), %r12         #  404   0xb9817  7      OPC=addq_r64_m64     
  subq %rax, %r12                 #  405   0xb981e  3      OPC=subq_r64_r64     
  andl $0x1, %r12d                #  406   0xb9821  4      OPC=andl_r32_imm8    
  je .L_b9828                     #  407   0xb9825  2      OPC=je_label         
  movb $0x0, (%rdx)               #  408   0xb9827  3      OPC=movb_m8_imm8     
  nop                             #  409   0xb982a  1      OPC=nop              
  nop                             #  410   0xb982b  1      OPC=nop              
  nop                             #  411   0xb982c  1      OPC=nop              
  nop                             #  412   0xb982d  1      OPC=nop              
  nop                             #  413   0xb982e  1      OPC=nop              
  nop                             #  414   0xb982f  1      OPC=nop              
.L_b9828:                         #        0xb9830  0      OPC=<label>          
  testl $0x200, %r13d             #  415   0xb9830  7      OPC=testl_r32_imm32  
  jne .L_ba639                    #  416   0xb9837  6      OPC=jne_label_1      
.L_b9835:                         #        0xb983d  0      OPC=<label>          
  leaq -0x1a0(%rbp), %rax         #  417   0xb983d  7      OPC=leaq_r64_m16     
  movl %r13d, %esi                #  418   0xb9844  3      OPC=movl_r32_r32     
  movq -0x1a8(%rbp), %rdx         #  419   0xb9847  7      OPC=movq_r64_m64     
  movq -0x1b0(%rbp), %rdi         #  420   0xb984e  7      OPC=movq_r64_m64     
  andl $0x241, %esi               #  421   0xb9855  6      OPC=andl_r32_imm32   
  orl $0x2004, %esi               #  422   0xb985b  6      OPC=orl_r32_imm32    
  movq %rax, %rcx                 #  423   0xb9861  3      OPC=movq_r64_r64     
  movq %rax, -0x1d8(%rbp)         #  424   0xb9864  7      OPC=movq_m64_r64     
  callq .glob                     #  425   0xb986b  5      OPC=callq_label      
  testl %eax, %eax                #  426   0xb9870  2      OPC=testl_r32_r32    
  jne .L_b9e10                    #  427   0xb9872  6      OPC=jne_label_1      
  cmpq $0x0, -0x1a0(%rbp)         #  428   0xb9878  8      OPC=cmpq_m64_imm8    
  je .L_b993f                     #  429   0xb9880  6      OPC=je_label_1       
  movl %r13d, %r12d               #  430   0xb9886  3      OPC=movl_r32_r32     
  movl %r13d, -0x1f0(%rbp)        #  431   0xb9889  7      OPC=movl_m32_r32     
  movq %r15, %r13                 #  432   0xb9890  3      OPC=movq_r64_r64     
  andl $0xfffff7cf, %r12d         #  433   0xb9893  7      OPC=andl_r32_imm32   
  movq -0x1a8(%rbp), %r15         #  434   0xb989a  7      OPC=movq_r64_m64     
  movq %r14, -0x1e8(%rbp)         #  435   0xb98a1  7      OPC=movq_m64_r64     
  orl $0x20, %r12d                #  436   0xb98a8  4      OPC=orl_r32_imm8     
  movl %r12d, -0x1c0(%rbp)        #  437   0xb98ac  7      OPC=movl_m32_r32     
  xorl %r12d, %r12d               #  438   0xb98b3  3      OPC=xorl_r32_r32     
  xchgw %ax, %ax                  #  439   0xb98b6  2      OPC=xchgw_ax_r16     
.L_b98b0:                         #        0xb98b8  0      OPC=<label>          
  movq -0x198(%rbp), %rax         #  440   0xb98b8  7      OPC=movq_r64_m64     
  movq -0x1e0(%rbp), %r9          #  441   0xb98bf  7      OPC=movq_r64_m64     
  movq %r13, %r8                  #  442   0xb98c6  3      OPC=movq_r64_r64     
  movl -0x1c0(%rbp), %edx         #  443   0xb98c9  6      OPC=movl_r32_m32     
  movq -0x1b8(%rbp), %rdi         #  444   0xb98cf  7      OPC=movq_r64_m64     
  movq %r15, %rcx                 #  445   0xb98d6  3      OPC=movq_r64_r64     
  movq (%r13), %r14               #  446   0xb98d9  4      OPC=movq_r64_m64     
  leaq (,%r12,8), %rbx            #  447   0xb98dd  8      OPC=leaq_r64_m16     
  movq (%rax,%r12,8), %rsi        #  448   0xb98e5  4      OPC=movq_r64_m64     
  callq .glob_in_dir              #  449   0xb98e9  5      OPC=callq_label      
  cmpl $0x3, %eax                 #  450   0xb98ee  3      OPC=cmpl_r32_imm8    
  je .L_b9921                     #  451   0xb98f1  2      OPC=je_label         
  testl %eax, %eax                #  452   0xb98f3  2      OPC=testl_r32_r32    
  jne .L_ba550                    #  453   0xb98f5  6      OPC=jne_label_1      
  movq %r14, %r11                 #  454   0xb98fb  3      OPC=movq_r64_r64     
  addq 0x10(%r13), %r11           #  455   0xb98fe  4      OPC=addq_r64_m64     
  movq 0x8(%r13), %rax            #  456   0xb9902  4      OPC=movq_r64_m64     
  movq (%r13), %rdx               #  457   0xb9906  4      OPC=movq_r64_m64     
  leaq (%rax,%r11,8), %rsi        #  458   0xb990a  4      OPC=leaq_r64_m16     
  movq -0x198(%rbp), %rax         #  459   0xb990e  7      OPC=movq_r64_m64     
  subq %r14, %rdx                 #  460   0xb9915  3      OPC=subq_r64_r64     
  movq (%rax,%rbx,1), %rdi        #  461   0xb9918  4      OPC=movq_r64_m64     
  callq .prefix_array             #  462   0xb991c  5      OPC=callq_label      
  testl %eax, %eax                #  463   0xb9921  2      OPC=testl_r32_r32    
  jne .L_ba4f9                    #  464   0xb9923  6      OPC=jne_label_1      
.L_b9921:                         #        0xb9929  0      OPC=<label>          
  addq $0x1, %r12                 #  465   0xb9929  4      OPC=addq_r64_imm8    
  cmpq %r12, -0x1a0(%rbp)         #  466   0xb992d  7      OPC=cmpq_m64_r64     
  ja .L_b98b0                     #  467   0xb9934  2      OPC=ja_label         
  movq %r13, %r15                 #  468   0xb9936  3      OPC=movq_r64_r64     
  movq -0x1e8(%rbp), %r14         #  469   0xb9939  7      OPC=movq_r64_m64     
  movl -0x1f0(%rbp), %r13d        #  470   0xb9940  7      OPC=movl_r32_m32     
.L_b993f:                         #        0xb9947  0      OPC=<label>          
  movl %r13d, %edx                #  471   0xb9947  3      OPC=movl_r32_r32     
  movq (%r15), %rax               #  472   0xb994a  3      OPC=movq_r64_m64     
  addq 0x10(%r15), %rax           #  473   0xb994d  4      OPC=addq_r64_m64     
  orb $0x1, %dh                   #  474   0xb9951  3      OPC=orb_rh_imm8      
  cmpq -0x1d0(%rbp), %rax         #  475   0xb9954  7      OPC=cmpq_r64_m64     
  je .L_ba948                     #  476   0xb995b  6      OPC=je_label_1       
  movl %edx, %r13d                #  477   0xb9961  3      OPC=movl_r32_r32     
  jmpq .L_b9e90                   #  478   0xb9964  5      OPC=jmpq_label_1     
  nop                             #  479   0xb9969  1      OPC=nop              
  nop                             #  480   0xb996a  1      OPC=nop              
  nop                             #  481   0xb996b  1      OPC=nop              
  nop                             #  482   0xb996c  1      OPC=nop              
  nop                             #  483   0xb996d  1      OPC=nop              
  nop                             #  484   0xb996e  1      OPC=nop              
  nop                             #  485   0xb996f  1      OPC=nop              
.L_b9968:                         #        0xb9970  0      OPC=<label>          
  testb $0x2, %al                 #  486   0xb9970  2      OPC=testb_al_imm8    
  movq (%r15), %rbx               #  487   0xb9972  3      OPC=movq_r64_m64     
  je .L_b9c20                     #  488   0xb9975  6      OPC=je_label_1       
  movq -0x1b0(%rbp), %rdi         #  489   0xb997b  7      OPC=movq_r64_m64     
  movl $0x5c, %esi                #  490   0xb9982  5      OPC=movl_r32_imm32   
  callq .__GI_strchr              #  491   0xb9987  5      OPC=callq_label      
  movq %rax, %rdx                 #  492   0xb998c  3      OPC=movq_r64_r64     
  jmpq .L_b99a6                   #  493   0xb998f  2      OPC=jmpq_label       
  nop                             #  494   0xb9991  1      OPC=nop              
  nop                             #  495   0xb9992  1      OPC=nop              
  nop                             #  496   0xb9993  1      OPC=nop              
  nop                             #  497   0xb9994  1      OPC=nop              
  nop                             #  498   0xb9995  1      OPC=nop              
  nop                             #  499   0xb9996  1      OPC=nop              
  nop                             #  500   0xb9997  1      OPC=nop              
.L_b9990:                         #        0xb9998  0      OPC=<label>          
  movb %cl, (%rdx)                #  501   0xb9998  2      OPC=movb_m8_r8       
  movq %rax, %rcx                 #  502   0xb999a  3      OPC=movq_r64_r64     
.L_b9995:                         #        0xb999d  0      OPC=<label>          
  addq $0x1, %rdx                 #  503   0xb999d  4      OPC=addq_r64_imm8    
  cmpb $0x0, (%rcx)               #  504   0xb99a1  3      OPC=cmpb_m8_imm8     
  leaq 0x1(%rcx), %rax            #  505   0xb99a4  4      OPC=leaq_r64_m16     
  je .L_b9ea8                     #  506   0xb99a8  6      OPC=je_label_1       
.L_b99a6:                         #        0xb99ae  0      OPC=<label>          
  movzbl (%rax), %ecx             #  507   0xb99ae  3      OPC=movzbl_r32_m8    
  cmpb $0x5c, %cl                 #  508   0xb99b1  3      OPC=cmpb_r8_imm8     
  jne .L_b9990                    #  509   0xb99b4  2      OPC=jne_label        
  leaq 0x1(%rax), %rcx            #  510   0xb99b6  4      OPC=leaq_r64_m16     
  movzbl 0x1(%rax), %eax          #  511   0xb99ba  4      OPC=movzbl_r32_m8    
  subq $0x1, %r12                 #  512   0xb99be  4      OPC=subq_r64_imm8    
  movb %al, (%rdx)                #  513   0xb99c2  2      OPC=movb_m8_r8       
  jmpq .L_b9995                   #  514   0xb99c4  2      OPC=jmpq_label       
  xchgw %ax, %ax                  #  515   0xb99c6  2      OPC=xchgw_ax_r16     
.L_b99c0:                         #        0xb99c8  0      OPC=<label>          
  testb $0x10, %r13b              #  516   0xb99c8  4      OPC=testb_r8_imm8    
  jne .L_b9a40                    #  517   0xb99cc  2      OPC=jne_label        
  testl $0x200, %r13d             #  518   0xb99ce  7      OPC=testl_r32_imm32  
  jne .L_b9a0f                    #  519   0xb99d5  2      OPC=jne_label        
  movq -0x1b0(%rbp), %rsi         #  520   0xb99d7  7      OPC=movq_r64_m64     
  leaq -0xc0(%rbp), %rdx          #  521   0xb99de  7      OPC=leaq_r64_m16     
  movl $0x1, %edi                 #  522   0xb99e5  5      OPC=movl_r32_imm32   
  callq .__xstat                  #  523   0xb99ea  5      OPC=callq_label      
  testl %eax, %eax                #  524   0xb99ef  2      OPC=testl_r32_r32    
  jne .L_b9a00                    #  525   0xb99f1  2      OPC=jne_label        
  movl -0xa8(%rbp), %eax          #  526   0xb99f3  6      OPC=movl_r32_m32     
  andl $0xf000, %eax              #  527   0xb99f9  5      OPC=andl_eax_imm32   
  cmpl $0x4000, %eax              #  528   0xb99fe  5      OPC=cmpl_eax_imm32   
  je .L_b9a40                     #  529   0xb9a03  2      OPC=je_label         
  nop                             #  530   0xb9a05  1      OPC=nop              
  nop                             #  531   0xb9a06  1      OPC=nop              
  nop                             #  532   0xb9a07  1      OPC=nop              
.L_b9a00:                         #        0xb9a08  0      OPC=<label>          
  movl $0x3, -0x1c0(%rbp)         #  533   0xb9a08  10     OPC=movl_m32_imm32   
  jmpq .L_b96b9                   #  534   0xb9a12  5      OPC=jmpq_label_1     
.L_b9a0f:                         #        0xb9a17  0      OPC=<label>          
  leaq -0x150(%rbp), %rsi         #  535   0xb9a17  7      OPC=leaq_r64_m16     
  movq -0x1b0(%rbp), %rdi         #  536   0xb9a1e  7      OPC=movq_r64_m64     
  callq 0x40(%r15)                #  537   0xb9a25  4      OPC=callq_m64        
  testl %eax, %eax                #  538   0xb9a29  2      OPC=testl_r32_r32    
  jne .L_b9a00                    #  539   0xb9a2b  2      OPC=jne_label        
  movl -0x138(%rbp), %eax         #  540   0xb9a2d  6      OPC=movl_r32_m32     
  andl $0xf000, %eax              #  541   0xb9a33  5      OPC=andl_eax_imm32   
  cmpl $0x4000, %eax              #  542   0xb9a38  5      OPC=cmpl_eax_imm32   
  jne .L_b9a00                    #  543   0xb9a3d  2      OPC=jne_label        
  nop                             #  544   0xb9a3f  1      OPC=nop              
  nop                             #  545   0xb9a40  1      OPC=nop              
  nop                             #  546   0xb9a41  1      OPC=nop              
  nop                             #  547   0xb9a42  1      OPC=nop              
  nop                             #  548   0xb9a43  1      OPC=nop              
  nop                             #  549   0xb9a44  1      OPC=nop              
  nop                             #  550   0xb9a45  1      OPC=nop              
  nop                             #  551   0xb9a46  1      OPC=nop              
  nop                             #  552   0xb9a47  1      OPC=nop              
.L_b9a40:                         #        0xb9a48  0      OPC=<label>          
  movq (%r15), %rax               #  553   0xb9a48  3      OPC=movq_r64_m64     
  addq 0x10(%r15), %rax           #  554   0xb9a4b  4      OPC=addq_r64_m64     
  movq $0x1ffffffffffffffd, %rdx  #  555   0xb9a4f  10     OPC=movq_r64_imm64   
  cmpq %rdx, %rax                 #  556   0xb9a59  3      OPC=cmpq_r64_r64     
  ja .L_b9fa8                     #  557   0xb9a5c  6      OPC=ja_label_1       
  leaq 0x10(,%rax,8), %rbx        #  558   0xb9a62  8      OPC=leaq_r64_m16     
  movq 0x8(%r15), %rdi            #  559   0xb9a6a  4      OPC=movq_r64_m64     
  movq %rbx, %rsi                 #  560   0xb9a6e  3      OPC=movq_r64_r64     
  callq .__tls_get_addr_plt       #  561   0xb9a71  5      OPC=callq_label      
  testq %rax, %rax                #  562   0xb9a76  3      OPC=testq_r64_r64    
  movq %rax, %r14                 #  563   0xb9a79  3      OPC=movq_r64_r64     
  je .L_b9fa8                     #  564   0xb9a7c  6      OPC=je_label_1       
  testb $0x2, %r13b               #  565   0xb9a82  4      OPC=testb_r8_imm8    
  movq %rax, 0x8(%r15)            #  566   0xb9a86  4      OPC=movq_m64_r64     
  je .L_ba526                     #  567   0xb9a8a  6      OPC=je_label_1       
  leaq 0x2(%r12), %rdi            #  568   0xb9a90  5      OPC=leaq_r64_m16     
  callq .memalign_plt             #  569   0xb9a95  5      OPC=callq_label      
  movq %rax, -0x10(%r14,%rbx,1)   #  570   0xb9a9a  5      OPC=movq_m64_r64     
  movq 0x8(%r15), %rdi            #  571   0xb9a9f  4      OPC=movq_r64_m64     
  movq -0x10(%rdi,%rbx,1), %rax   #  572   0xb9aa3  5      OPC=movq_r64_m64     
  testq %rax, %rax                #  573   0xb9aa8  3      OPC=testq_r64_r64    
  je .L_b9fac                     #  574   0xb9aab  6      OPC=je_label_1       
  movq -0x1b0(%rbp), %rsi         #  575   0xb9ab1  7      OPC=movq_r64_m64     
  movq %r12, %rdx                 #  576   0xb9ab8  3      OPC=movq_r64_r64     
  movq %rax, %rdi                 #  577   0xb9abb  3      OPC=movq_r64_r64     
  callq .__GI_memcpy              #  578   0xb9abe  5      OPC=callq_label      
  addq %rax, %r12                 #  579   0xb9ac3  3      OPC=addq_r64_r64     
  movb $0x2f, (%r12)              #  580   0xb9ac6  5      OPC=movb_m8_imm8     
  movb $0x0, 0x1(%r12)            #  581   0xb9acb  6      OPC=movb_m8_imm8     
  movq 0x8(%r15), %rdi            #  582   0xb9ad1  4      OPC=movq_r64_m64     
.L_b9acd:                         #        0xb9ad5  0      OPC=<label>          
  movq $0x0, -0x8(%rdi,%rbx,1)    #  583   0xb9ad5  9      OPC=movq_m64_imm32   
  addq $0x1, (%r15)               #  584   0xb9ade  4      OPC=addq_m64_imm8    
  movl %r13d, 0x18(%r15)          #  585   0xb9ae2  4      OPC=movl_m32_r32     
  jmpq .L_b96b9                   #  586   0xb9ae6  5      OPC=jmpq_label_1     
  nop                             #  587   0xb9aeb  1      OPC=nop              
  nop                             #  588   0xb9aec  1      OPC=nop              
  nop                             #  589   0xb9aed  1      OPC=nop              
  nop                             #  590   0xb9aee  1      OPC=nop              
  nop                             #  591   0xb9aef  1      OPC=nop              
.L_b9ae8:                         #        0xb9af0  0      OPC=<label>          
  movq $0x0, (%r15)               #  592   0xb9af0  7      OPC=movq_m64_imm32   
  movq $0x0, 0x8(%r15)            #  593   0xb9af7  8      OPC=movq_m64_imm32   
  movq $0x0, -0x208(%rbp)         #  594   0xb9aff  11     OPC=movq_m64_imm32   
  jmpq .L_b95b4                   #  595   0xb9b0a  5      OPC=jmpq_label_1     
  nop                             #  596   0xb9b0f  1      OPC=nop              
  nop                             #  597   0xb9b10  1      OPC=nop              
  nop                             #  598   0xb9b11  1      OPC=nop              
  nop                             #  599   0xb9b12  1      OPC=nop              
  nop                             #  600   0xb9b13  1      OPC=nop              
  nop                             #  601   0xb9b14  1      OPC=nop              
  nop                             #  602   0xb9b15  1      OPC=nop              
  nop                             #  603   0xb9b16  1      OPC=nop              
  nop                             #  604   0xb9b17  1      OPC=nop              
.L_b9b10:                         #        0xb9b18  0      OPC=<label>          
  movq 0x2e1369(%rip), %rax       #  605   0xb9b18  7      OPC=movq_r64_m64     
  movl $0xffffffff, -0x1c0(%rbp)  #  606   0xb9b1f  10     OPC=movl_m32_imm32   
  movl $0x16, (%rax)              #  607   0xb9b29  6      OPC=movl_m32_imm32   
  nop                             #  608   0xb9b2f  1      OPC=nop              
  jmpq .L_b96b9                   #  609   0xb9b30  5      OPC=jmpq_label_1     
  nop                             #  610   0xb9b35  1      OPC=nop              
  nop                             #  611   0xb9b36  1      OPC=nop              
  nop                             #  612   0xb9b37  1      OPC=nop              
.L_b9b30:                         #        0xb9b38  0      OPC=<label>          
  movl -0x1f8(%rbp), %edi         #  613   0xb9b38  6      OPC=movl_r32_m32     
  movq -0x200(%rbp), %r14         #  614   0xb9b3e  7      OPC=movq_r64_m64     
  testl %edi, %edi                #  615   0xb9b45  2      OPC=testl_r32_r32    
  je .L_ba90d                     #  616   0xb9b47  6      OPC=je_label_1       
.L_b9b45:                         #        0xb9b4d  0      OPC=<label>          
  movq -0x208(%rbp), %rax         #  617   0xb9b4d  7      OPC=movq_r64_m64     
  cmpq (%r15), %rax               #  618   0xb9b54  3      OPC=cmpq_r64_m64     
  jne .L_b96b9                    #  619   0xb9b57  6      OPC=jne_label_1      
  testl $0x810, %r13d             #  620   0xb9b5d  7      OPC=testl_r32_imm32  
  je .L_b9a00                     #  621   0xb9b64  6      OPC=je_label_1       
  jmpq .L_b9357                   #  622   0xb9b6a  5      OPC=jmpq_label_1     
  nop                             #  623   0xb9b6f  1      OPC=nop              
  nop                             #  624   0xb9b70  1      OPC=nop              
  nop                             #  625   0xb9b71  1      OPC=nop              
  nop                             #  626   0xb9b72  1      OPC=nop              
  nop                             #  627   0xb9b73  1      OPC=nop              
  nop                             #  628   0xb9b74  1      OPC=nop              
  nop                             #  629   0xb9b75  1      OPC=nop              
  nop                             #  630   0xb9b76  1      OPC=nop              
  nop                             #  631   0xb9b77  1      OPC=nop              
.L_b9b70:                         #        0xb9b78  0      OPC=<label>          
  testl $0x5000, %r13d            #  632   0xb9b78  7      OPC=testl_r32_imm32  
  je .L_b9f4d                     #  633   0xb9b7f  6      OPC=je_label_1       
  movzbl (%r14), %eax             #  634   0xb9b85  4      OPC=movzbl_r32_m8    
  cmpb $0x7e, %al                 #  635   0xb9b89  2      OPC=cmpb_al_imm8     
  je .L_ba09b                     #  636   0xb9b8b  6      OPC=je_label_1       
  testb %al, %al                  #  637   0xb9b91  2      OPC=testb_r8_r8      
  jne .L_b9f57                    #  638   0xb9b93  6      OPC=jne_label_1      
.L_b9b91:                         #        0xb9b99  0      OPC=<label>          
  leaq -0x1a0(%rbp), %rcx         #  639   0xb9b99  7      OPC=leaq_r64_m16     
  movl %r13d, %eax                #  640   0xb9ba0  3      OPC=movl_r32_r32     
  movq $0x0, -0x198(%rbp)         #  641   0xb9ba3  11     OPC=movq_m64_imm32   
  andl $0x10, %eax                #  642   0xb9bae  3      OPC=andl_r32_imm8    
  movl $0x0, -0x1c8(%rbp)         #  643   0xb9bb1  10     OPC=movl_m32_imm32   
  movq $0x0, -0x1b0(%rbp)         #  644   0xb9bbb  11     OPC=movq_m64_imm32   
  movq %rcx, -0x1d8(%rbp)         #  645   0xb9bc6  7      OPC=movq_m64_r64     
  jmpq .L_b9f34                   #  646   0xb9bcd  5      OPC=jmpq_label_1     
  nop                             #  647   0xb9bd2  1      OPC=nop              
  nop                             #  648   0xb9bd3  1      OPC=nop              
  nop                             #  649   0xb9bd4  1      OPC=nop              
  nop                             #  650   0xb9bd5  1      OPC=nop              
  nop                             #  651   0xb9bd6  1      OPC=nop              
  nop                             #  652   0xb9bd7  1      OPC=nop              
.L_b9bd0:                         #        0xb9bd8  0      OPC=<label>          
  cmpb $0x5c, (%r14)              #  653   0xb9bd8  4      OPC=cmpb_m8_imm8     
  jne .L_b93a5                    #  654   0xb9bdc  6      OPC=jne_label_1      
  testb $0x40, %r13b              #  655   0xb9be2  4      OPC=testb_r8_imm8    
  jne .L_b93a5                    #  656   0xb9be6  6      OPC=jne_label_1      
  nop                             #  657   0xb9bec  1      OPC=nop              
  nop                             #  658   0xb9bed  1      OPC=nop              
  nop                             #  659   0xb9bee  1      OPC=nop              
  nop                             #  660   0xb9bef  1      OPC=nop              
.L_b9be8:                         #        0xb9bf0  0      OPC=<label>          
  leaq 0x1(%rbx), %rax            #  661   0xb9bf0  4      OPC=leaq_r64_m16     
  movl $0x0, -0x1c8(%rbp)         #  662   0xb9bf4  10     OPC=movl_m32_imm32   
  movl $0x1, %r12d                #  663   0xb9bfe  6      OPC=movl_r32_imm32   
  movq %rax, -0x1b8(%rbp)         #  664   0xb9c04  7      OPC=movq_m64_r64     
  leaq 0xab2cf(%rip), %rax        #  665   0xb9c0b  7      OPC=leaq_r64_m16     
  movq %rax, -0x1b0(%rbp)         #  666   0xb9c12  7      OPC=movq_m64_r64     
  jmpq .L_b977b                   #  667   0xb9c19  5      OPC=jmpq_label_1     
  nop                             #  668   0xb9c1e  1      OPC=nop              
  nop                             #  669   0xb9c1f  1      OPC=nop              
  nop                             #  670   0xb9c20  1      OPC=nop              
  nop                             #  671   0xb9c21  1      OPC=nop              
  nop                             #  672   0xb9c22  1      OPC=nop              
  nop                             #  673   0xb9c23  1      OPC=nop              
  nop                             #  674   0xb9c24  1      OPC=nop              
  nop                             #  675   0xb9c25  1      OPC=nop              
  nop                             #  676   0xb9c26  1      OPC=nop              
  nop                             #  677   0xb9c27  1      OPC=nop              
.L_b9c20:                         #        0xb9c28  0      OPC=<label>          
  testl %edx, %edx                #  678   0xb9c28  2      OPC=testl_r32_r32    
  jne .L_b9ea8                    #  679   0xb9c2a  6      OPC=jne_label_1      
  movq -0x1e0(%rbp), %r9          #  680   0xb9c30  7      OPC=movq_r64_m64     
  movq -0x1a8(%rbp), %rcx         #  681   0xb9c37  7      OPC=movq_r64_m64     
  movq %r15, %r8                  #  682   0xb9c3e  3      OPC=movq_r64_r64     
  movq -0x1b0(%rbp), %rsi         #  683   0xb9c41  7      OPC=movq_r64_m64     
  movq -0x1b8(%rbp), %rdi         #  684   0xb9c48  7      OPC=movq_r64_m64     
  movl %r13d, %edx                #  685   0xb9c4f  3      OPC=movl_r32_r32     
  callq .glob_in_dir              #  686   0xb9c52  5      OPC=callq_label      
  testl %eax, %eax                #  687   0xb9c57  2      OPC=testl_r32_r32    
  movl %eax, -0x1c0(%rbp)         #  688   0xb9c59  6      OPC=movl_m32_r32     
  jne .L_b96b9                    #  689   0xb9c5f  6      OPC=jne_label_1      
.L_b9c5d:                         #        0xb9c65  0      OPC=<label>          
  testq %r12, %r12                #  690   0xb9c65  3      OPC=testq_r64_r64    
  jne .L_b9fe0                    #  691   0xb9c68  6      OPC=jne_label_1      
.L_b9c66:                         #        0xb9c6e  0      OPC=<label>          
  testb $0x2, %r13b               #  692   0xb9c6e  4      OPC=testb_r8_imm8    
  je .L_b9d70                     #  693   0xb9c72  6      OPC=je_label_1       
  movq (%r15), %rax               #  694   0xb9c78  3      OPC=movq_r64_m64     
  addq 0x10(%r15), %rax           #  695   0xb9c7b  4      OPC=addq_r64_m64     
  leaq -0x150(%rbp), %rsi         #  696   0xb9c7f  7      OPC=leaq_r64_m16     
  movq -0x1d0(%rbp), %rcx         #  697   0xb9c86  7      OPC=movq_r64_m64     
  movl %r13d, %r12d               #  698   0xb9c8d  3      OPC=movl_r32_r32     
  andl $0x200, %r12d              #  699   0xb9c90  7      OPC=andl_r32_imm32   
  movq %rsi, -0x1c0(%rbp)         #  700   0xb9c97  7      OPC=movq_m64_r64     
  leaq -0xc0(%rbp), %rsi          #  701   0xb9c9e  7      OPC=leaq_r64_m16     
  cmpq %rax, %rcx                 #  702   0xb9ca5  3      OPC=cmpq_r64_r64     
  leaq (,%rcx,8), %r14            #  703   0xb9ca8  8      OPC=leaq_r64_m16     
  movq %rcx, %rbx                 #  704   0xb9cb0  3      OPC=movq_r64_r64     
  jae .L_b9d70                    #  705   0xb9cb3  6      OPC=jae_label_1      
  movl %r13d, -0x1d8(%rbp)        #  706   0xb9cb9  7      OPC=movl_m32_r32     
  movq %r14, %r13                 #  707   0xb9cc0  3      OPC=movq_r64_r64     
  movq %rsi, %r14                 #  708   0xb9cc3  3      OPC=movq_r64_r64     
  jmpq .L_b9cd8                   #  709   0xb9cc6  2      OPC=jmpq_label       
.L_b9cc0:                         #        0xb9cc8  0      OPC=<label>          
  movq (%r15), %rax               #  710   0xb9cc8  3      OPC=movq_r64_m64     
  addq 0x10(%r15), %rax           #  711   0xb9ccb  4      OPC=addq_r64_m64     
  addq $0x1, %rbx                 #  712   0xb9ccf  4      OPC=addq_r64_imm8    
  addq $0x8, %r13                 #  713   0xb9cd3  4      OPC=addq_r64_imm8    
  cmpq %rbx, %rax                 #  714   0xb9cd7  3      OPC=cmpq_r64_r64     
  jbe .L_b9d69                    #  715   0xb9cda  6      OPC=jbe_label_1      
.L_b9cd8:                         #        0xb9ce0  0      OPC=<label>          
  testl %r12d, %r12d              #  716   0xb9ce0  3      OPC=testl_r32_r32    
  movq 0x8(%r15), %rax            #  717   0xb9ce3  4      OPC=movq_r64_m64     
  jne .L_ba028                    #  718   0xb9ce7  6      OPC=jne_label_1      
  movq (%rax,%r13,1), %rsi        #  719   0xb9ced  4      OPC=movq_r64_m64     
  movq %r14, %rdx                 #  720   0xb9cf1  3      OPC=movq_r64_r64     
  movl $0x1, %edi                 #  721   0xb9cf4  5      OPC=movl_r32_imm32   
  callq .__xstat                  #  722   0xb9cf9  5      OPC=callq_label      
  testl %eax, %eax                #  723   0xb9cfe  2      OPC=testl_r32_r32    
  jne .L_b9cc0                    #  724   0xb9d00  2      OPC=jne_label        
  movl -0xa8(%rbp), %eax          #  725   0xb9d02  6      OPC=movl_r32_m32     
  andl $0xf000, %eax              #  726   0xb9d08  5      OPC=andl_eax_imm32   
  cmpl $0x4000, %eax              #  727   0xb9d0d  5      OPC=cmpl_eax_imm32   
  sete %al                        #  728   0xb9d12  3      OPC=sete_r8          
.L_b9d0d:                         #        0xb9d15  0      OPC=<label>          
  testb %al, %al                  #  729   0xb9d15  2      OPC=testb_r8_r8      
  je .L_b9cc0                     #  730   0xb9d17  2      OPC=je_label         
  movq 0x8(%r15), %rax            #  731   0xb9d19  4      OPC=movq_r64_m64     
  movq (%rax,%r13,1), %rdx        #  732   0xb9d1d  4      OPC=movq_r64_m64     
  movq %rdx, %rdi                 #  733   0xb9d21  3      OPC=movq_r64_r64     
  movq %rdx, -0x1b8(%rbp)         #  734   0xb9d24  7      OPC=movq_m64_r64     
  callq .strlen                   #  735   0xb9d2b  5      OPC=callq_label      
  movq -0x1b8(%rbp), %rdx         #  736   0xb9d30  7      OPC=movq_r64_m64     
  leaq 0x2(%rax), %rsi            #  737   0xb9d37  4      OPC=leaq_r64_m16     
  movq %rax, -0x1a8(%rbp)         #  738   0xb9d3b  7      OPC=movq_m64_r64     
  movq %rdx, %rdi                 #  739   0xb9d42  3      OPC=movq_r64_r64     
  callq .__tls_get_addr_plt       #  740   0xb9d45  5      OPC=callq_label      
  testq %rax, %rax                #  741   0xb9d4a  3      OPC=testq_r64_r64    
  movq -0x1a8(%rbp), %r8          #  742   0xb9d4d  7      OPC=movq_r64_m64     
  je .L_ba006                     #  743   0xb9d54  6      OPC=je_label_1       
  movl $0x2f, %edx                #  744   0xb9d5a  5      OPC=movl_r32_imm32   
  movw %dx, (%rax,%r8,1)          #  745   0xb9d5f  5      OPC=movw_m16_r16     
  movq 0x8(%r15), %rdx            #  746   0xb9d64  4      OPC=movq_r64_m64     
  movq %rax, (%rdx,%r13,1)        #  747   0xb9d68  4      OPC=movq_m64_r64     
  jmpq .L_b9cc0                   #  748   0xb9d6c  5      OPC=jmpq_label_1     
.L_b9d69:                         #        0xb9d71  0      OPC=<label>          
  movl -0x1d8(%rbp), %r13d        #  749   0xb9d71  7      OPC=movl_r32_m32     
.L_b9d70:                         #        0xb9d78  0      OPC=<label>          
  xorl %eax, %eax                 #  750   0xb9d78  2      OPC=xorl_r32_r32     
  andl $0x4, %r13d                #  751   0xb9d7a  4      OPC=andl_r32_imm8    
  jne .L_b9461                    #  752   0xb9d7e  6      OPC=jne_label_1      
  movq 0x8(%r15), %rdx            #  753   0xb9d84  4      OPC=movq_r64_m64     
  movl %eax, -0x1a8(%rbp)         #  754   0xb9d88  6      OPC=movl_m32_r32     
  leaq -0x14dd(%rip), %rcx        #  755   0xb9d8e  7      OPC=leaq_r64_m16     
  movq -0x1d0(%rbp), %rax         #  756   0xb9d95  7      OPC=movq_r64_m64     
  movq (%r15), %rsi               #  757   0xb9d9c  3      OPC=movq_r64_m64     
  addq 0x10(%r15), %rsi           #  758   0xb9d9f  4      OPC=addq_r64_m64     
  leaq (%rdx,%rax,8), %rdi        #  759   0xb9da3  4      OPC=leaq_r64_m16     
  movl $0x8, %edx                 #  760   0xb9da7  5      OPC=movl_r32_imm32   
  subq %rax, %rsi                 #  761   0xb9dac  3      OPC=subq_r64_r64     
  callq .qsort                    #  762   0xb9daf  5      OPC=callq_label      
  movl -0x1a8(%rbp), %eax         #  763   0xb9db4  6      OPC=movl_r32_m32     
  jmpq .L_b9461                   #  764   0xb9dba  5      OPC=jmpq_label_1     
  nop                             #  765   0xb9dbf  1      OPC=nop              
  nop                             #  766   0xb9dc0  1      OPC=nop              
  nop                             #  767   0xb9dc1  1      OPC=nop              
  nop                             #  768   0xb9dc2  1      OPC=nop              
  nop                             #  769   0xb9dc3  1      OPC=nop              
  nop                             #  770   0xb9dc4  1      OPC=nop              
  nop                             #  771   0xb9dc5  1      OPC=nop              
  nop                             #  772   0xb9dc6  1      OPC=nop              
  nop                             #  773   0xb9dc7  1      OPC=nop              
.L_b9dc0:                         #        0xb9dc8  0      OPC=<label>          
  leaq 0x8(,%rbx,8), %r12         #  774   0xb9dc8  8      OPC=leaq_r64_m16     
  movq %r12, %rdi                 #  775   0xb9dd0  3      OPC=movq_r64_r64     
  callq .memalign_plt             #  776   0xb9dd3  5      OPC=callq_label      
  testq %rax, %rax                #  777   0xb9dd8  3      OPC=testq_r64_r64    
  movq %rax, 0x8(%r15)            #  778   0xb9ddb  4      OPC=movq_m64_r64     
  je .L_b94bc                     #  779   0xb9ddf  6      OPC=je_label_1       
  leaq -0x8(%r12), %rcx           #  780   0xb9de5  5      OPC=leaq_r64_m16     
  xorl %edx, %edx                 #  781   0xb9dea  2      OPC=xorl_r32_r32     
  jmpq .L_b9df8                   #  782   0xb9dec  2      OPC=jmpq_label       
  nop                             #  783   0xb9dee  1      OPC=nop              
  nop                             #  784   0xb9def  1      OPC=nop              
  nop                             #  785   0xb9df0  1      OPC=nop              
  nop                             #  786   0xb9df1  1      OPC=nop              
  nop                             #  787   0xb9df2  1      OPC=nop              
  nop                             #  788   0xb9df3  1      OPC=nop              
  nop                             #  789   0xb9df4  1      OPC=nop              
  nop                             #  790   0xb9df5  1      OPC=nop              
  nop                             #  791   0xb9df6  1      OPC=nop              
  nop                             #  792   0xb9df7  1      OPC=nop              
.L_b9df0:                         #        0xb9df8  0      OPC=<label>          
  movq 0x8(%r15), %rax            #  793   0xb9df8  4      OPC=movq_r64_m64     
  addq $0x8, %rdx                 #  794   0xb9dfc  4      OPC=addq_r64_imm8    
.L_b9df8:                         #        0xb9e00  0      OPC=<label>          
  cmpq %rcx, %rdx                 #  795   0xb9e00  3      OPC=cmpq_r64_r64     
  movq $0x0, (%rax,%rdx,1)        #  796   0xb9e03  8      OPC=movq_m64_imm32   
  jne .L_b9df0                    #  797   0xb9e0b  2      OPC=jne_label        
  xorl %eax, %eax                 #  798   0xb9e0d  2      OPC=xorl_r32_r32     
  jmpq .L_b936c                   #  799   0xb9e0f  5      OPC=jmpq_label_1     
  nop                             #  800   0xb9e14  1      OPC=nop              
  nop                             #  801   0xb9e15  1      OPC=nop              
  nop                             #  802   0xb9e16  1      OPC=nop              
  nop                             #  803   0xb9e17  1      OPC=nop              
.L_b9e10:                         #        0xb9e18  0      OPC=<label>          
  cmpl $0x3, %eax                 #  804   0xb9e18  3      OPC=cmpl_r32_imm8    
  jne .L_b967b                    #  805   0xb9e1b  6      OPC=jne_label_1      
  testb $0x10, %r13b              #  806   0xb9e21  4      OPC=testb_r8_imm8    
  je .L_b967b                     #  807   0xb9e25  6      OPC=je_label_1       
.L_b9e23:                         #        0xb9e2b  0      OPC=<label>          
  movq (%r15), %rax               #  808   0xb9e2b  3      OPC=movq_r64_m64     
  addq 0x10(%r15), %rax           #  809   0xb9e2e  4      OPC=addq_r64_m64     
  movq $0x1ffffffffffffffd, %rdx  #  810   0xb9e32  10     OPC=movq_r64_imm64   
  cmpq %rdx, %rax                 #  811   0xb9e3c  3      OPC=cmpq_r64_r64     
  ja .L_ba47d                     #  812   0xb9e3f  6      OPC=ja_label_1       
  leaq 0x10(,%rax,8), %rbx        #  813   0xb9e45  8      OPC=leaq_r64_m16     
  movq 0x8(%r15), %rdi            #  814   0xb9e4d  4      OPC=movq_r64_m64     
  movq %rbx, %rsi                 #  815   0xb9e51  3      OPC=movq_r64_r64     
  callq .__tls_get_addr_plt       #  816   0xb9e54  5      OPC=callq_label      
  testq %rax, %rax                #  817   0xb9e59  3      OPC=testq_r64_r64    
  je .L_ba47d                     #  818   0xb9e5c  6      OPC=je_label_1       
  leaq -0x10(%rax,%rbx,1), %r12   #  819   0xb9e62  5      OPC=leaq_r64_m16     
  movq %rax, 0x8(%r15)            #  820   0xb9e67  4      OPC=movq_m64_r64     
  movq %r14, %rdi                 #  821   0xb9e6b  3      OPC=movq_r64_r64     
  callq .__strdup                 #  822   0xb9e6e  5      OPC=callq_label      
  movq %rax, (%r12)               #  823   0xb9e73  4      OPC=movq_m64_r64     
  movq 0x8(%r15), %rax            #  824   0xb9e77  4      OPC=movq_r64_m64     
  cmpq $0x0, -0x10(%rax,%rbx,1)   #  825   0xb9e7b  6      OPC=cmpq_m64_imm8    
  je .L_ba4fc                     #  826   0xb9e81  6      OPC=je_label_1       
  addq $0x1, (%r15)               #  827   0xb9e87  4      OPC=addq_m64_imm8    
  movq $0x0, -0x8(%rax,%rbx,1)    #  828   0xb9e8b  9      OPC=movq_m64_imm32   
  movl %r13d, 0x18(%r15)          #  829   0xb9e94  4      OPC=movl_m32_r32     
.L_b9e90:                         #        0xb9e98  0      OPC=<label>          
  movq -0x1d8(%rbp), %rdi         #  830   0xb9e98  7      OPC=movq_r64_m64     
  callq .globfree                 #  831   0xb9e9f  5      OPC=callq_label      
  jmpq .L_b9c66                   #  832   0xb9ea4  5      OPC=jmpq_label_1     
  nop                             #  833   0xb9ea9  1      OPC=nop              
  nop                             #  834   0xb9eaa  1      OPC=nop              
  nop                             #  835   0xb9eab  1      OPC=nop              
  nop                             #  836   0xb9eac  1      OPC=nop              
  nop                             #  837   0xb9ead  1      OPC=nop              
  nop                             #  838   0xb9eae  1      OPC=nop              
  nop                             #  839   0xb9eaf  1      OPC=nop              
.L_b9ea8:                         #        0xb9eb0  0      OPC=<label>          
  movq -0x1a8(%rbp), %rcx         #  840   0xb9eb0  7      OPC=movq_r64_m64     
  movl %r13d, %r10d               #  841   0xb9eb7  3      OPC=movl_r32_r32     
  movq -0x1e0(%rbp), %r9          #  842   0xb9eba  7      OPC=movq_r64_m64     
  movq -0x1b0(%rbp), %rsi         #  843   0xb9ec1  7      OPC=movq_r64_m64     
  movq -0x1b8(%rbp), %rdi         #  844   0xb9ec8  7      OPC=movq_r64_m64     
  andl $0xfffff7ef, %r10d         #  845   0xb9ecf  7      OPC=andl_r32_imm32   
  movl %r10d, %edx                #  846   0xb9ed6  3      OPC=movl_r32_r32     
  movq %r15, %r8                  #  847   0xb9ed9  3      OPC=movq_r64_r64     
  movl %r10d, -0x1a8(%rbp)        #  848   0xb9edc  7      OPC=movl_m32_r32     
  callq .glob_in_dir              #  849   0xb9ee3  5      OPC=callq_label      
  testl %eax, %eax                #  850   0xb9ee8  2      OPC=testl_r32_r32    
  movl -0x1a8(%rbp), %r10d        #  851   0xb9eea  7      OPC=movl_r32_m32     
  je .L_b9fa0                     #  852   0xb9ef1  6      OPC=je_label_1       
  cmpl $0x3, %eax                 #  853   0xb9ef7  3      OPC=cmpl_r32_imm8    
  jne .L_b967b                    #  854   0xb9efa  6      OPC=jne_label_1      
  cmpl %r10d, %r13d               #  855   0xb9f00  3      OPC=cmpl_r32_r32     
  je .L_b967b                     #  856   0xb9f03  6      OPC=je_label_1       
  movq (%r15), %rax               #  857   0xb9f09  3      OPC=movq_r64_m64     
  addq 0x10(%r15), %rax           #  858   0xb9f0c  4      OPC=addq_r64_m64     
  cmpq -0x1d0(%rbp), %rax         #  859   0xb9f10  7      OPC=cmpq_r64_m64     
  jne .L_b9a00                    #  860   0xb9f17  6      OPC=jne_label_1      
  leaq -0x1a0(%rbp), %rcx         #  861   0xb9f1d  7      OPC=leaq_r64_m16     
  movl %r13d, %eax                #  862   0xb9f24  3      OPC=movl_r32_r32     
  movq $0x0, -0x198(%rbp)         #  863   0xb9f27  11     OPC=movq_m64_imm32   
  andl $0x10, %eax                #  864   0xb9f32  3      OPC=andl_r32_imm8    
  movq %rcx, -0x1d8(%rbp)         #  865   0xb9f35  7      OPC=movq_m64_r64     
.L_b9f34:                         #        0xb9f3c  0      OPC=<label>          
  testl %eax, %eax                #  866   0xb9f3c  2      OPC=testl_r32_r32    
  jne .L_b9e23                    #  867   0xb9f3e  6      OPC=jne_label_1      
  movq -0x1d8(%rbp), %rdi         #  868   0xb9f44  7      OPC=movq_r64_m64     
  callq .globfree                 #  869   0xb9f4b  5      OPC=callq_label      
  jmpq .L_b9a00                   #  870   0xb9f50  5      OPC=jmpq_label_1     
.L_b9f4d:                         #        0xb9f55  0      OPC=<label>          
  cmpb $0x0, (%r14)               #  871   0xb9f55  4      OPC=cmpb_m8_imm8     
  je .L_b9b91                     #  872   0xb9f59  6      OPC=je_label_1       
.L_b9f57:                         #        0xb9f5f  0      OPC=<label>          
  leaq 0xab5e1(%rip), %rax        #  873   0xb9f5f  7      OPC=leaq_r64_m16     
  movq %r14, -0x1b8(%rbp)         #  874   0xb9f66  7      OPC=movq_m64_r64     
  movl $0x0, -0x1c8(%rbp)         #  875   0xb9f6d  10     OPC=movl_m32_imm32   
  xorl %edx, %edx                 #  876   0xb9f77  2      OPC=xorl_r32_r32     
  xorl %r12d, %r12d               #  877   0xb9f79  3      OPC=xorl_r32_r32     
  movq %rax, -0x1b0(%rbp)         #  878   0xb9f7c  7      OPC=movq_m64_r64     
  jmpq .L_b97a4                   #  879   0xb9f83  5      OPC=jmpq_label_1     
.L_b9f80:                         #        0xb9f88  0      OPC=<label>          
  movq %r15, %rdi                 #  880   0xb9f88  3      OPC=movq_r64_r64     
  movl %eax, -0x1a8(%rbp)         #  881   0xb9f8b  6      OPC=movl_m32_r32     
  callq .globfree                 #  882   0xb9f91  5      OPC=callq_label      
  movq $0x0, (%r15)               #  883   0xb9f96  7      OPC=movq_m64_imm32   
  movl -0x1a8(%rbp), %eax         #  884   0xb9f9d  6      OPC=movl_r32_m32     
  jmpq .L_b967b                   #  885   0xb9fa3  5      OPC=jmpq_label_1     
.L_b9fa0:                         #        0xb9fa8  0      OPC=<label>          
  movl %r10d, %r13d               #  886   0xb9fa8  3      OPC=movl_r32_r32     
  jmpq .L_b9c5d                   #  887   0xb9fab  5      OPC=jmpq_label_1     
.L_b9fa8:                         #        0xb9fb0  0      OPC=<label>          
  movq 0x8(%r15), %rdi            #  888   0xb9fb0  4      OPC=movq_r64_m64     
.L_b9fac:                         #        0xb9fb4  0      OPC=<label>          
  callq .L_1f8c0                  #  889   0xb9fb4  5      OPC=callq_label      
  movq $0x0, 0x8(%r15)            #  890   0xb9fb9  8      OPC=movq_m64_imm32   
  movq $0x0, (%r15)               #  891   0xb9fc1  7      OPC=movq_m64_imm32   
  movl $0x1, -0x1c0(%rbp)         #  892   0xb9fc8  10     OPC=movl_m32_imm32   
  jmpq .L_b96b9                   #  893   0xb9fd2  5      OPC=jmpq_label_1     
.L_b9fcf:                         #        0xb9fd7  0      OPC=<label>          
  movq -0x1b0(%rbp), %rdi         #  894   0xb9fd7  7      OPC=movq_r64_m64     
  callq .L_1f8c0                  #  895   0xb9fde  5      OPC=callq_label      
  jmpq .L_b9698                   #  896   0xb9fe3  5      OPC=jmpq_label_1     
.L_b9fe0:                         #        0xb9fe8  0      OPC=<label>          
  movq (%r15), %rdx               #  897   0xb9fe8  3      OPC=movq_r64_m64     
  movq 0x8(%r15), %rax            #  898   0xb9feb  4      OPC=movq_r64_m64     
  movq -0x1b0(%rbp), %rdi         #  899   0xb9fef  7      OPC=movq_r64_m64     
  subq %rbx, %rdx                 #  900   0xb9ff6  3      OPC=subq_r64_r64     
  addq 0x10(%r15), %rbx           #  901   0xb9ff9  4      OPC=addq_r64_m64     
  leaq (%rax,%rbx,8), %rsi        #  902   0xb9ffd  4      OPC=leaq_r64_m16     
  callq .prefix_array             #  903   0xba001  5      OPC=callq_label      
  testl %eax, %eax                #  904   0xba006  2      OPC=testl_r32_r32    
  je .L_b9c66                     #  905   0xba008  6      OPC=je_label_1       
.L_ba006:                         #        0xba00e  0      OPC=<label>          
  movq %r15, %rdi                 #  906   0xba00e  3      OPC=movq_r64_r64     
  callq .globfree                 #  907   0xba011  5      OPC=callq_label      
  movq $0x0, (%r15)               #  908   0xba016  7      OPC=movq_m64_imm32   
  movl $0x1, -0x1c0(%rbp)         #  909   0xba01d  10     OPC=movl_m32_imm32   
  jmpq .L_b96b9                   #  910   0xba027  5      OPC=jmpq_label_1     
  nop                             #  911   0xba02c  1      OPC=nop              
  nop                             #  912   0xba02d  1      OPC=nop              
  nop                             #  913   0xba02e  1      OPC=nop              
  nop                             #  914   0xba02f  1      OPC=nop              
.L_ba028:                         #        0xba030  0      OPC=<label>          
  movq (%rax,%r13,1), %rdi        #  915   0xba030  4      OPC=movq_r64_m64     
  movq -0x1c0(%rbp), %rsi         #  916   0xba034  7      OPC=movq_r64_m64     
  callq 0x40(%r15)                #  917   0xba03b  4      OPC=callq_m64        
  testl %eax, %eax                #  918   0xba03f  2      OPC=testl_r32_r32    
  jne .L_b9cc0                    #  919   0xba041  6      OPC=jne_label_1      
  movl -0x138(%rbp), %eax         #  920   0xba047  6      OPC=movl_r32_m32     
  andl $0xf000, %eax              #  921   0xba04d  5      OPC=andl_eax_imm32   
  cmpl $0x4000, %eax              #  922   0xba052  5      OPC=cmpl_eax_imm32   
  sete %al                        #  923   0xba057  3      OPC=sete_r8          
  jmpq .L_b9d0d                   #  924   0xba05a  5      OPC=jmpq_label_1     
.L_ba057:                         #        0xba05f  0      OPC=<label>          
  cmpl $0x3, %eax                 #  925   0xba05f  3      OPC=cmpl_r32_imm8    
  jne .L_b9461                    #  926   0xba062  6      OPC=jne_label_1      
  cmpl %ebx, %r13d                #  927   0xba068  3      OPC=cmpl_r32_r32     
  je .L_b9461                     #  928   0xba06b  6      OPC=je_label_1       
  movq (%r15), %rax               #  929   0xba071  3      OPC=movq_r64_m64     
  addq 0x10(%r15), %rax           #  930   0xba074  4      OPC=addq_r64_m64     
  leaq -0x1a0(%rbp), %rcx         #  931   0xba078  7      OPC=leaq_r64_m16     
  movq $0x0, -0x198(%rbp)         #  932   0xba07f  11     OPC=movq_m64_imm32   
  movq %rcx, -0x1d8(%rbp)         #  933   0xba08a  7      OPC=movq_m64_r64     
  movq %rax, -0x1d0(%rbp)         #  934   0xba091  7      OPC=movq_m64_r64     
  movl %r13d, %eax                #  935   0xba098  3      OPC=movl_r32_r32     
  andl $0x10, %eax                #  936   0xba09b  3      OPC=andl_r32_imm8    
  jmpq .L_b9f34                   #  937   0xba09e  5      OPC=jmpq_label_1     
.L_ba09b:                         #        0xba0a3  0      OPC=<label>          
  movq %r14, %rdi                 #  938   0xba0a3  3      OPC=movq_r64_r64     
  callq .strlen                   #  939   0xba0a6  5      OPC=callq_label      
  movq %r14, -0x1b0(%rbp)         #  940   0xba0ab  7      OPC=movq_m64_r64     
  movq %rax, %r12                 #  941   0xba0b2  3      OPC=movq_r64_r64     
  movq $0x0, -0x1b8(%rbp)         #  942   0xba0b5  11     OPC=movq_m64_imm32   
  movl $0x0, -0x1c8(%rbp)         #  943   0xba0c0  10     OPC=movl_m32_imm32   
  nop                             #  944   0xba0ca  1      OPC=nop              
  nop                             #  945   0xba0cb  1      OPC=nop              
  nop                             #  946   0xba0cc  1      OPC=nop              
  nop                             #  947   0xba0cd  1      OPC=nop              
  nop                             #  948   0xba0ce  1      OPC=nop              
  nop                             #  949   0xba0cf  1      OPC=nop              
.L_ba0c8:                         #        0xba0d0  0      OPC=<label>          
  movq -0x1b0(%rbp), %rax         #  950   0xba0d0  7      OPC=movq_r64_m64     
  movzbl 0x1(%rax), %eax          #  951   0xba0d7  4      OPC=movzbl_r32_m8    
  cmpb $0x2f, %al                 #  952   0xba0db  2      OPC=cmpb_al_imm8     
  je .L_ba59a                     #  953   0xba0dd  6      OPC=je_label_1       
  testb %al, %al                  #  954   0xba0e3  2      OPC=testb_r8_r8      
  je .L_ba59a                     #  955   0xba0e5  6      OPC=je_label_1       
  testb $0x40, %r13b              #  956   0xba0eb  4      OPC=testb_r8_imm8    
  jne .L_ba498                    #  957   0xba0ef  6      OPC=jne_label_1      
  cmpb $0x5c, %al                 #  958   0xba0f5  2      OPC=cmpb_al_imm8     
  je .L_ba583                     #  959   0xba0f7  6      OPC=je_label_1       
.L_ba0f5:                         #        0xba0fd  0      OPC=<label>          
  movq -0x1b0(%rbp), %rdi         #  960   0xba0fd  7      OPC=movq_r64_m64     
  movl $0x2f, %esi                #  961   0xba104  5      OPC=movl_r32_imm32   
  callq .__GI_strchr              #  962   0xba109  5      OPC=callq_label      
  testq %rax, %rax                #  963   0xba10e  3      OPC=testq_r64_r64    
  movq %rax, -0x210(%rbp)         #  964   0xba111  7      OPC=movq_m64_r64     
  je .L_bac60                     #  965   0xba118  6      OPC=je_label_1       
  movq -0x1b0(%rbp), %rax         #  966   0xba11e  7      OPC=movq_r64_m64     
  movq -0x210(%rbp), %rbx         #  967   0xba125  7      OPC=movq_r64_m64     
  movl $0x5c, %esi                #  968   0xba12c  5      OPC=movl_r32_imm32   
  subq %rax, %rbx                 #  969   0xba131  3      OPC=subq_r64_r64     
  movq %rax, %rdi                 #  970   0xba134  3      OPC=movq_r64_r64     
  movq %rbx, %rdx                 #  971   0xba137  3      OPC=movq_r64_r64     
  callq .memchr                   #  972   0xba13a  5      OPC=callq_label      
  movq %rax, %r8                  #  973   0xba13f  3      OPC=movq_r64_r64     
.L_ba13a:                         #        0xba142  0      OPC=<label>          
  movq -0x1e0(%rbp), %rax         #  974   0xba142  7      OPC=movq_r64_m64     
  leaq (%rbx,%rax,1), %rdi        #  975   0xba149  4      OPC=leaq_r64_m16     
  cmpq $0x1000, %rdi              #  976   0xba14d  7      OPC=cmpq_r64_imm32   
  ja .L_bac08                     #  977   0xba154  6      OPC=ja_label_1       
.L_ba152:                         #        0xba15a  0      OPC=<label>          
  movq %rsp, %rax                 #  978   0xba15a  3      OPC=movq_r64_r64     
  leaq 0x1e(%rbx), %rcx           #  979   0xba15d  4      OPC=leaq_r64_m16     
  andq $0xf0, %rcx                #  980   0xba161  4      OPC=andq_r64_imm8    
  subq %rcx, %rsp                 #  981   0xba165  3      OPC=subq_r64_r64     
  leaq 0xf(%rsp), %rdx            #  982   0xba168  5      OPC=leaq_r64_m16     
  andq $0xf0, %rdx                #  983   0xba16d  4      OPC=andq_r64_imm8    
  movq %rdx, -0x1d8(%rbp)         #  984   0xba171  7      OPC=movq_m64_r64     
  subq %rsp, %rax                 #  985   0xba178  3      OPC=subq_r64_r64     
  addq %rax, -0x1e0(%rbp)         #  986   0xba17b  7      OPC=addq_m64_r64     
  movl $0x0, -0x220(%rbp)         #  987   0xba182  10     OPC=movl_m32_imm32   
.L_ba184:                         #        0xba18c  0      OPC=<label>          
  testq %r8, %r8                  #  988   0xba18c  3      OPC=testq_r64_r64    
  je .L_baa35                     #  989   0xba18f  6      OPC=je_label_1       
  movq -0x1b0(%rbp), %rax         #  990   0xba195  7      OPC=movq_r64_m64     
  movq %r8, %rdx                  #  991   0xba19c  3      OPC=movq_r64_r64     
  movq -0x1d8(%rbp), %rdi         #  992   0xba19f  7      OPC=movq_r64_m64     
  movq %r8, -0x1e8(%rbp)          #  993   0xba1a6  7      OPC=movq_m64_r64     
  subq %rax, %rdx                 #  994   0xba1ad  3      OPC=subq_r64_r64     
  leaq 0x1(%rax), %rsi            #  995   0xba1b0  4      OPC=leaq_r64_m16     
  leaq -0x1(%rdx), %rbx           #  996   0xba1b4  4      OPC=leaq_r64_m16     
  movq %rbx, %rdx                 #  997   0xba1b8  3      OPC=movq_r64_r64     
  callq .__GI_memcpy              #  998   0xba1bb  5      OPC=callq_label      
  movq -0x1e8(%rbp), %r8          #  999   0xba1c0  7      OPC=movq_r64_m64     
  leaq (%rax,%rbx,1), %rdx        #  1000  0xba1c7  4      OPC=leaq_r64_m16     
  movzbl (%r8), %eax              #  1001  0xba1cb  4      OPC=movzbl_r32_m8    
  testb %al, %al                  #  1002  0xba1cf  2      OPC=testb_r8_r8      
  jne .L_ba1ee                    #  1003  0xba1d1  2      OPC=jne_label        
  jmpq .L_ba2f2                   #  1004  0xba1d3  5      OPC=jmpq_label_1     
.L_ba1d0:                         #        0xba1d8  0      OPC=<label>          
  movzbl (%r8), %ecx              #  1005  0xba1d8  4      OPC=movzbl_r32_m8    
  movq %r8, %rax                  #  1006  0xba1dc  3      OPC=movq_r64_r64     
.L_ba1d7:                         #        0xba1df  0      OPC=<label>          
  leaq 0x1(%rax), %r8             #  1007  0xba1df  4      OPC=leaq_r64_m16     
  movzbl 0x1(%rax), %eax          #  1008  0xba1e3  4      OPC=movzbl_r32_m8    
  addq $0x1, %rdx                 #  1009  0xba1e7  4      OPC=addq_r64_imm8    
  movb %cl, -0x1(%rdx)            #  1010  0xba1eb  3      OPC=movb_m8_r8       
  testb %al, %al                  #  1011  0xba1ee  2      OPC=testb_r8_r8      
  je .L_ba2f2                     #  1012  0xba1f0  6      OPC=je_label_1       
.L_ba1ee:                         #        0xba1f6  0      OPC=<label>          
  cmpb $0x5c, %al                 #  1013  0xba1f6  2      OPC=cmpb_al_imm8     
  jne .L_ba1d0                    #  1014  0xba1f8  2      OPC=jne_label        
  movzbl 0x1(%r8), %ecx           #  1015  0xba1fa  5      OPC=movzbl_r32_m8    
  testb %cl, %cl                  #  1016  0xba1ff  2      OPC=testb_r8_r8      
  je .L_ba2de                     #  1017  0xba201  6      OPC=je_label_1       
  leaq 0x1(%r8), %rax             #  1018  0xba207  4      OPC=leaq_r64_m16     
  jmpq .L_ba1d7                   #  1019  0xba20b  2      OPC=jmpq_label       
  nop                             #  1020  0xba20d  1      OPC=nop              
  nop                             #  1021  0xba20e  1      OPC=nop              
  nop                             #  1022  0xba20f  1      OPC=nop              
.L_ba208:                         #        0xba210  0      OPC=<label>          
  movq %rbx, %rdi                 #  1023  0xba210  3      OPC=movq_r64_r64     
  callq .__libc_alloca_cutoff     #  1024  0xba213  5      OPC=callq_label      
  testl %eax, %eax                #  1025  0xba218  2      OPC=testl_r32_r32    
  movl %eax, -0x1f8(%rbp)         #  1026  0xba21a  6      OPC=movl_m32_r32     
  jne .L_b94e9                    #  1027  0xba220  6      OPC=jne_label_1      
  movq %rbx, %rdi                 #  1028  0xba226  3      OPC=movq_r64_r64     
  callq .memalign_plt             #  1029  0xba229  5      OPC=callq_label      
  testq %rax, %rax                #  1030  0xba22e  3      OPC=testq_r64_r64    
  movq %rax, -0x1b0(%rbp)         #  1031  0xba231  7      OPC=movq_m64_r64     
  je .L_ba2c0                     #  1032  0xba238  6      OPC=je_label_1       
  movq %r12, %rbx                 #  1033  0xba23e  3      OPC=movq_r64_r64     
  movq -0x1b0(%rbp), %rdi         #  1034  0xba241  7      OPC=movq_r64_m64     
  movq %r14, %rsi                 #  1035  0xba248  3      OPC=movq_r64_r64     
  subq %r14, %rbx                 #  1036  0xba24b  3      OPC=subq_r64_r64     
  addq $0x1, %r12                 #  1037  0xba24e  4      OPC=addq_r64_imm8    
  movq %rbx, %rdx                 #  1038  0xba252  3      OPC=movq_r64_r64     
  callq .__GI_memcpy              #  1039  0xba255  5      OPC=callq_label      
  movl %r13d, %esi                #  1040  0xba25a  3      OPC=movl_r32_r32     
  addq %rbx, %rax                 #  1041  0xba25d  3      OPC=addq_r64_r64     
  movq %r12, %rdi                 #  1042  0xba260  3      OPC=movq_r64_r64     
  movq %rax, -0x1b8(%rbp)         #  1043  0xba263  7      OPC=movq_m64_r64     
  callq .next_brace_sub           #  1044  0xba26a  5      OPC=callq_label      
  testq %rax, %rax                #  1045  0xba26f  3      OPC=testq_r64_r64    
  movq %rax, %rbx                 #  1046  0xba272  3      OPC=movq_r64_r64     
  je .L_b9fcf                     #  1047  0xba275  6      OPC=je_label_1       
  movq $0x0, -0x1e0(%rbp)         #  1048  0xba27b  11     OPC=movq_m64_imm32   
  jmpq .L_b9554                   #  1049  0xba286  5      OPC=jmpq_label_1     
  nop                             #  1050  0xba28b  1      OPC=nop              
  nop                             #  1051  0xba28c  1      OPC=nop              
  nop                             #  1052  0xba28d  1      OPC=nop              
  nop                             #  1053  0xba28e  1      OPC=nop              
  nop                             #  1054  0xba28f  1      OPC=nop              
.L_ba288:                         #        0xba290  0      OPC=<label>          
  callq .__libc_alloca_cutoff     #  1055  0xba290  5      OPC=callq_label      
  testl %eax, %eax                #  1056  0xba295  2      OPC=testl_r32_r32    
  jne .L_b93c4                    #  1057  0xba297  6      OPC=jne_label_1      
  leaq 0x1(%r12), %rdi            #  1058  0xba29d  5      OPC=leaq_r64_m16     
  callq .memalign_plt             #  1059  0xba2a2  5      OPC=callq_label      
  testq %rax, %rax                #  1060  0xba2a7  3      OPC=testq_r64_r64    
  movq %rax, -0x1b0(%rbp)         #  1061  0xba2aa  7      OPC=movq_m64_r64     
  je .L_b94bc                     #  1062  0xba2b1  6      OPC=je_label_1       
  movl $0x1, -0x1c8(%rbp)         #  1063  0xba2b7  10     OPC=movl_m32_imm32   
  jmpq .L_b93f7                   #  1064  0xba2c1  5      OPC=jmpq_label_1     
  xchgw %ax, %ax                  #  1065  0xba2c6  2      OPC=xchgw_ax_r16     
.L_ba2c0:                         #        0xba2c8  0      OPC=<label>          
  andl $0x20, %r13d               #  1066  0xba2c8  4      OPC=andl_r32_imm8    
  jne .L_b94bc                    #  1067  0xba2cc  6      OPC=jne_label_1      
  movq $0x0, (%r15)               #  1068  0xba2d2  7      OPC=movq_m64_imm32   
  movq $0x0, 0x8(%r15)            #  1069  0xba2d9  8      OPC=movq_m64_imm32   
  jmpq .L_b94bc                   #  1070  0xba2e1  5      OPC=jmpq_label_1     
.L_ba2de:                         #        0xba2e6  0      OPC=<label>          
  cmpq $0x0, -0x1b8(%rbp)         #  1071  0xba2e6  8      OPC=cmpq_m64_imm8    
  movq %rdx, %rax                 #  1072  0xba2ee  3      OPC=movq_r64_r64     
  jne .L_ba2f2                    #  1073  0xba2f1  2      OPC=jne_label        
  addq $0x1, %rdx                 #  1074  0xba2f3  4      OPC=addq_r64_imm8    
  movb $0x5c, (%rax)              #  1075  0xba2f7  3      OPC=movb_m8_imm8     
.L_ba2f2:                         #        0xba2fa  0      OPC=<label>          
  movb $0x0, (%rdx)               #  1076  0xba2fa  3      OPC=movb_m8_imm8     
.L_ba2f5:                         #        0xba2fd  0      OPC=<label>          
  movl $0x46, %edi                #  1077  0xba2fd  5      OPC=movl_r32_imm32   
  callq .__sysconf                #  1078  0xba302  5      OPC=callq_label      
  movq %rax, %rbx                 #  1079  0xba307  3      OPC=movq_r64_r64     
  movq 0x2e0b77(%rip), %rax       #  1080  0xba30a  7      OPC=movq_r64_m64     
  movq %rax, -0x218(%rbp)         #  1081  0xba311  7      OPC=movq_m64_r64     
  movl (%rax), %eax               #  1082  0xba318  2      OPC=movl_r32_m32     
  nop                             #  1083  0xba31a  1      OPC=nop              
  movl %eax, -0x1f8(%rbp)         #  1084  0xba31b  6      OPC=movl_m32_r32     
  movq -0x1e0(%rbp), %rax         #  1085  0xba321  7      OPC=movq_r64_m64     
  leaq (%rbx,%rax,1), %rdi        #  1086  0xba328  4      OPC=leaq_r64_m16     
  cmpq $0x1000, %rdi              #  1087  0xba32c  7      OPC=cmpq_r64_imm32   
  ja .L_baa58                     #  1088  0xba333  6      OPC=ja_label_1       
.L_ba331:                         #        0xba339  0      OPC=<label>          
  movq %rsp, %rax                 #  1089  0xba339  3      OPC=movq_r64_r64     
  leaq 0x1e(%rbx), %rdx           #  1090  0xba33c  4      OPC=leaq_r64_m16     
  andq $0xf0, %rdx                #  1091  0xba340  4      OPC=andq_r64_imm8    
  subq %rdx, %rsp                 #  1092  0xba344  3      OPC=subq_r64_r64     
  leaq 0xf(%rsp), %rdx            #  1093  0xba347  5      OPC=leaq_r64_m16     
  andq $0xf0, %rdx                #  1094  0xba34c  4      OPC=andq_r64_imm8    
  movq %rdx, -0x208(%rbp)         #  1095  0xba350  7      OPC=movq_m64_r64     
  subq %rsp, %rax                 #  1096  0xba357  3      OPC=subq_r64_r64     
  addq %rax, -0x1e0(%rbp)         #  1097  0xba35a  7      OPC=addq_m64_r64     
  movl $0x0, -0x200(%rbp)         #  1098  0xba361  10     OPC=movl_m32_imm32   
.L_ba363:                         #        0xba36b  0      OPC=<label>          
  leaq -0x150(%rbp), %rax         #  1099  0xba36b  7      OPC=leaq_r64_m16     
  movq %r12, -0x228(%rbp)         #  1100  0xba372  7      OPC=movq_m64_r64     
  movq %r14, -0x230(%rbp)         #  1101  0xba379  7      OPC=movq_m64_r64     
  movl %r13d, -0x234(%rbp)        #  1102  0xba380  7      OPC=movl_m32_r32     
  movq %r15, -0x240(%rbp)         #  1103  0xba387  7      OPC=movq_m64_r64     
  movq %rax, -0x1e8(%rbp)         #  1104  0xba38e  7      OPC=movq_m64_r64     
  leaq -0xc0(%rbp), %rax          #  1105  0xba395  7      OPC=leaq_r64_m16     
  movq -0x208(%rbp), %r12         #  1106  0xba39c  7      OPC=movq_r64_m64     
  movq %rax, -0x1f0(%rbp)         #  1107  0xba3a3  7      OPC=movq_m64_r64     
  movl -0x200(%rbp), %r14d        #  1108  0xba3aa  7      OPC=movl_r32_m32     
  movq -0x1e0(%rbp), %r15         #  1109  0xba3b1  7      OPC=movq_r64_m64     
  movq -0x218(%rbp), %r13         #  1110  0xba3b8  7      OPC=movq_r64_m64     
  jmpq .L_ba423                   #  1111  0xba3bf  2      OPC=jmpq_label       
  nop                             #  1112  0xba3c1  1      OPC=nop              
  nop                             #  1113  0xba3c2  1      OPC=nop              
  nop                             #  1114  0xba3c3  1      OPC=nop              
  nop                             #  1115  0xba3c4  1      OPC=nop              
  nop                             #  1116  0xba3c5  1      OPC=nop              
  nop                             #  1117  0xba3c6  1      OPC=nop              
  nop                             #  1118  0xba3c7  1      OPC=nop              
.L_ba3c0:                         #        0xba3c8  0      OPC=<label>          
  leaq (%rbx,%rbx,1), %rcx        #  1119  0xba3c8  4      OPC=leaq_r64_m16     
  leaq (%rcx,%r15,1), %rdi        #  1120  0xba3cc  4      OPC=leaq_r64_m16     
  cmpq $0x1000, %rdi              #  1121  0xba3d0  7      OPC=cmpq_r64_imm32   
  ja .L_ba60d                     #  1122  0xba3d7  6      OPC=ja_label_1       
.L_ba3d5:                         #        0xba3dd  0      OPC=<label>          
  movq %rsp, %rsi                 #  1123  0xba3dd  3      OPC=movq_r64_r64     
  addq $0xf, %rcx                 #  1124  0xba3e0  4      OPC=addq_r64_imm8    
  movl $0x10, %edi                #  1125  0xba3e4  5      OPC=movl_r32_imm32   
  xorl %edx, %edx                 #  1126  0xba3e9  2      OPC=xorl_r32_r32     
  andq $0xf0, %rcx                #  1127  0xba3eb  4      OPC=andq_r64_imm8    
  leaq 0x1e(%rcx), %rax           #  1128  0xba3ef  4      OPC=leaq_r64_m16     
  addq %rcx, %rbx                 #  1129  0xba3f3  3      OPC=addq_r64_r64     
  divq %rdi                       #  1130  0xba3f6  3      OPC=divq_r64         
  shlq $0x4, %rax                 #  1131  0xba3f9  4      OPC=shlq_r64_imm8    
  subq %rax, %rsp                 #  1132  0xba3fd  3      OPC=subq_r64_r64     
  leaq 0xf(%rsp), %rax            #  1133  0xba400  5      OPC=leaq_r64_m16     
  andq $0xf0, %rax                #  1134  0xba405  4      OPC=andq_r64_imm8    
  leaq (%rax,%rcx,1), %rdx        #  1135  0xba409  4      OPC=leaq_r64_m16     
  cmpq %rdx, %r12                 #  1136  0xba40d  3      OPC=cmpq_r64_r64     
  movq %rsi, %rdx                 #  1137  0xba410  3      OPC=movq_r64_r64     
  cmovneq %rcx, %rbx              #  1138  0xba413  4      OPC=cmovneq_r64_r64  
  subq %rsp, %rdx                 #  1139  0xba417  3      OPC=subq_r64_r64     
  addq %rdx, %r15                 #  1140  0xba41a  3      OPC=addq_r64_r64     
.L_ba415:                         #        0xba41d  0      OPC=<label>          
  movl -0x1f8(%rbp), %ecx         #  1141  0xba41d  6      OPC=movl_r32_m32     
  movq %rax, %r12                 #  1142  0xba423  3      OPC=movq_r64_r64     
  movl %ecx, (%r13)               #  1143  0xba426  4      OPC=movl_m32_r32     
  nop                             #  1144  0xba42a  1      OPC=nop              
.L_ba423:                         #        0xba42b  0      OPC=<label>          
  movq -0x1e8(%rbp), %r8          #  1145  0xba42b  7      OPC=movq_r64_m64     
  movq -0x1f0(%rbp), %rsi         #  1146  0xba432  7      OPC=movq_r64_m64     
  movq %rbx, %rcx                 #  1147  0xba439  3      OPC=movq_r64_r64     
  movq -0x1d8(%rbp), %rdi         #  1148  0xba43c  7      OPC=movq_r64_m64     
  movq %r12, %rdx                 #  1149  0xba443  3      OPC=movq_r64_r64     
  callq .getpwnam_r__GLIBC_2_2_5  #  1150  0xba446  5      OPC=callq_label      
  testl %eax, %eax                #  1151  0xba44b  2      OPC=testl_r32_r32    
  je .L_ba675                     #  1152  0xba44d  6      OPC=je_label_1       
  cmpl $0x22, (%r13)              #  1153  0xba453  5      OPC=cmpl_m32_imm8    
  nop                             #  1154  0xba458  1      OPC=nop              
  jne .L_ba7e1                    #  1155  0xba459  6      OPC=jne_label_1      
  testl %r14d, %r14d              #  1156  0xba45f  3      OPC=testl_r32_r32    
  je .L_ba3c0                     #  1157  0xba462  6      OPC=je_label_1       
  leaq (%rbx,%rbx,1), %rsi        #  1158  0xba468  4      OPC=leaq_r64_m16     
  movq %r12, %rdi                 #  1159  0xba46c  3      OPC=movq_r64_r64     
.L_ba467:                         #        0xba46f  0      OPC=<label>          
  callq .__tls_get_addr_plt       #  1160  0xba46f  5      OPC=callq_label      
  testq %rax, %rax                #  1161  0xba474  3      OPC=testq_r64_r64    
  je .L_ba91e                     #  1162  0xba477  6      OPC=je_label_1       
  movl $0x1, %r14d                #  1163  0xba47d  6      OPC=movl_r32_imm32   
  jmpq .L_ba415                   #  1164  0xba483  2      OPC=jmpq_label       
.L_ba47d:                         #        0xba485  0      OPC=<label>          
  movq -0x1d8(%rbp), %rdi         #  1165  0xba485  7      OPC=movq_r64_m64     
  callq .globfree                 #  1166  0xba48c  5      OPC=callq_label      
  movl $0x1, -0x1c0(%rbp)         #  1167  0xba491  10     OPC=movl_m32_imm32   
  jmpq .L_b96b9                   #  1168  0xba49b  5      OPC=jmpq_label_1     
.L_ba498:                         #        0xba4a0  0      OPC=<label>          
  movq -0x1b0(%rbp), %rdi         #  1169  0xba4a0  7      OPC=movq_r64_m64     
  movl $0x2f, %esi                #  1170  0xba4a7  5      OPC=movl_r32_imm32   
  callq .__GI_strchr              #  1171  0xba4ac  5      OPC=callq_label      
  xorl %r8d, %r8d                 #  1172  0xba4b1  3      OPC=xorl_r32_r32     
  movq %rax, -0x210(%rbp)         #  1173  0xba4b4  7      OPC=movq_m64_r64     
.L_ba4b3:                         #        0xba4bb  0      OPC=<label>          
  movq -0x210(%rbp), %rax         #  1174  0xba4bb  7      OPC=movq_r64_m64     
  movq %rax, %rbx                 #  1175  0xba4c2  3      OPC=movq_r64_r64     
  subq -0x1b0(%rbp), %rbx         #  1176  0xba4c5  7      OPC=subq_r64_m64     
  testq %rax, %rax                #  1177  0xba4cc  3      OPC=testq_r64_r64    
  jne .L_ba13a                    #  1178  0xba4cf  6      OPC=jne_label_1      
.L_ba4cd:                         #        0xba4d5  0      OPC=<label>          
  movq -0x1b0(%rbp), %rax         #  1179  0xba4d5  7      OPC=movq_r64_m64     
  movq $0x0, -0x210(%rbp)         #  1180  0xba4dc  11     OPC=movq_m64_imm32   
  movl $0x0, -0x220(%rbp)         #  1181  0xba4e7  10     OPC=movl_m32_imm32   
  addq $0x1, %rax                 #  1182  0xba4f1  4      OPC=addq_r64_imm8    
  movq %rax, -0x1d8(%rbp)         #  1183  0xba4f5  7      OPC=movq_m64_r64     
  jmpq .L_ba2f5                   #  1184  0xba4fc  5      OPC=jmpq_label_1     
.L_ba4f9:                         #        0xba501  0      OPC=<label>          
  movq %r13, %r15                 #  1185  0xba501  3      OPC=movq_r64_r64     
.L_ba4fc:                         #        0xba504  0      OPC=<label>          
  movq -0x1d8(%rbp), %rdi         #  1186  0xba504  7      OPC=movq_r64_m64     
  callq .globfree                 #  1187  0xba50b  5      OPC=callq_label      
  movq %r15, %rdi                 #  1188  0xba510  3      OPC=movq_r64_r64     
  callq .globfree                 #  1189  0xba513  5      OPC=callq_label      
  movq $0x0, (%r15)               #  1190  0xba518  7      OPC=movq_m64_imm32   
  movl $0x1, -0x1c0(%rbp)         #  1191  0xba51f  10     OPC=movl_m32_imm32   
  jmpq .L_b96b9                   #  1192  0xba529  5      OPC=jmpq_label_1     
.L_ba526:                         #        0xba52e  0      OPC=<label>          
  movq -0x1b0(%rbp), %rdi         #  1193  0xba52e  7      OPC=movq_r64_m64     
  leaq -0x10(%rax,%rbx,1), %r12   #  1194  0xba535  5      OPC=leaq_r64_m16     
  callq .__strdup                 #  1195  0xba53a  5      OPC=callq_label      
  movq %rax, (%r12)               #  1196  0xba53f  4      OPC=movq_m64_r64     
  movq 0x8(%r15), %rdi            #  1197  0xba543  4      OPC=movq_r64_m64     
  cmpq $0x0, -0x10(%rdi,%rbx,1)   #  1198  0xba547  6      OPC=cmpq_m64_imm8    
  jne .L_b9acd                    #  1199  0xba54d  6      OPC=jne_label_1      
  jmpq .L_b9fac                   #  1200  0xba553  5      OPC=jmpq_label_1     
.L_ba550:                         #        0xba558  0      OPC=<label>          
  movq -0x1d8(%rbp), %rdi         #  1201  0xba558  7      OPC=movq_r64_m64     
  movl %eax, -0x1a8(%rbp)         #  1202  0xba55f  6      OPC=movl_m32_r32     
  callq .globfree                 #  1203  0xba565  5      OPC=callq_label      
  movq %r13, %rdi                 #  1204  0xba56a  3      OPC=movq_r64_r64     
  callq .globfree                 #  1205  0xba56d  5      OPC=callq_label      
  movl -0x1a8(%rbp), %eax         #  1206  0xba572  6      OPC=movl_r32_m32     
  movq $0x0, (%r13)               #  1207  0xba578  8      OPC=movq_m64_imm32   
  movl %eax, -0x1c0(%rbp)         #  1208  0xba580  6      OPC=movl_m32_r32     
  jmpq .L_b96b9                   #  1209  0xba586  5      OPC=jmpq_label_1     
.L_ba583:                         #        0xba58b  0      OPC=<label>          
  movq -0x1b0(%rbp), %rax         #  1210  0xba58b  7      OPC=movq_r64_m64     
  movzbl 0x2(%rax), %eax          #  1211  0xba592  4      OPC=movzbl_r32_m8    
  cmpb $0x2f, %al                 #  1212  0xba596  2      OPC=cmpb_al_imm8     
  je .L_ba59a                     #  1213  0xba598  2      OPC=je_label         
  testb %al, %al                  #  1214  0xba59a  2      OPC=testb_r8_r8      
  jne .L_ba0f5                    #  1215  0xba59c  6      OPC=jne_label_1      
.L_ba59a:                         #        0xba5a2  0      OPC=<label>          
  leaq 0xaaba2(%rip), %rdi        #  1216  0xba5a2  7      OPC=leaq_r64_m16     
  callq .getenv                   #  1217  0xba5a9  5      OPC=callq_label      
  testq %rax, %rax                #  1218  0xba5ae  3      OPC=testq_r64_r64    
  movq %rax, -0x1d8(%rbp)         #  1219  0xba5b1  7      OPC=movq_m64_r64     
  je .L_ba84a                     #  1220  0xba5b8  6      OPC=je_label_1       
  cmpb $0x0, (%rax)               #  1221  0xba5be  3      OPC=cmpb_m8_imm8     
  je .L_ba84a                     #  1222  0xba5c1  6      OPC=je_label_1       
  xorl %ebx, %ebx                 #  1223  0xba5c7  2      OPC=xorl_r32_r32     
.L_ba5c1:                         #        0xba5c9  0      OPC=<label>          
  movq -0x1b0(%rbp), %rax         #  1224  0xba5c9  7      OPC=movq_r64_m64     
  cmpb $0x0, 0x1(%rax)            #  1225  0xba5d0  4      OPC=cmpb_m8_imm8     
  jne .L_ba956                    #  1226  0xba5d4  6      OPC=jne_label_1      
  movl -0x1c8(%rbp), %edx         #  1227  0xba5da  6      OPC=movl_r32_m32     
  testl %edx, %edx                #  1228  0xba5e0  2      OPC=testl_r32_r32    
  jne .L_baf27                    #  1229  0xba5e2  6      OPC=jne_label_1      
.L_ba5e0:                         #        0xba5e8  0      OPC=<label>          
  movq -0x1d8(%rbp), %rdi         #  1230  0xba5e8  7      OPC=movq_r64_m64     
  callq .strlen                   #  1231  0xba5ef  5      OPC=callq_label      
  movq %rax, %r12                 #  1232  0xba5f4  3      OPC=movq_r64_r64     
  movq -0x1d8(%rbp), %rax         #  1233  0xba5f7  7      OPC=movq_r64_m64     
  movl %ebx, -0x1c8(%rbp)         #  1234  0xba5fe  6      OPC=movl_m32_r32     
  movl $0x1, %edx                 #  1235  0xba604  5      OPC=movl_r32_imm32   
  movq %rax, -0x1b0(%rbp)         #  1236  0xba609  7      OPC=movq_m64_r64     
  jmpq .L_b9796                   #  1237  0xba610  5      OPC=jmpq_label_1     
.L_ba60d:                         #        0xba615  0      OPC=<label>          
  movq %rcx, -0x200(%rbp)         #  1238  0xba615  7      OPC=movq_m64_r64     
  movq %rcx, -0x1e0(%rbp)         #  1239  0xba61c  7      OPC=movq_m64_r64     
  callq .__libc_alloca_cutoff     #  1240  0xba623  5      OPC=callq_label      
  movq -0x1e0(%rbp), %rcx         #  1241  0xba628  7      OPC=movq_r64_m64     
  testl %eax, %eax                #  1242  0xba62f  2      OPC=testl_r32_r32    
  movq %rcx, %rsi                 #  1243  0xba631  3      OPC=movq_r64_r64     
  jne .L_ba3d5                    #  1244  0xba634  6      OPC=jne_label_1      
  xorl %edi, %edi                 #  1245  0xba63a  2      OPC=xorl_r32_r32     
  jmpq .L_ba467                   #  1246  0xba63c  5      OPC=jmpq_label_1     
.L_ba639:                         #        0xba641  0      OPC=<label>          
  movq 0x30(%r15), %rax           #  1247  0xba641  4      OPC=movq_r64_m64     
  movq %rax, -0x170(%rbp)         #  1248  0xba645  7      OPC=movq_m64_r64     
  movq 0x28(%r15), %rax           #  1249  0xba64c  4      OPC=movq_r64_m64     
  movq %rax, -0x178(%rbp)         #  1250  0xba650  7      OPC=movq_m64_r64     
  movq 0x20(%r15), %rax           #  1251  0xba657  4      OPC=movq_r64_m64     
  movq %rax, -0x180(%rbp)         #  1252  0xba65b  7      OPC=movq_m64_r64     
  movq 0x40(%r15), %rax           #  1253  0xba662  4      OPC=movq_r64_m64     
  movq %rax, -0x160(%rbp)         #  1254  0xba666  7      OPC=movq_m64_r64     
  movq 0x38(%r15), %rax           #  1255  0xba66d  4      OPC=movq_r64_m64     
  movq %rax, -0x168(%rbp)         #  1256  0xba671  7      OPC=movq_m64_r64     
  jmpq .L_b9835                   #  1257  0xba678  5      OPC=jmpq_label_1     
.L_ba675:                         #        0xba67d  0      OPC=<label>          
  movl -0x220(%rbp), %r9d         #  1258  0xba67d  7      OPC=movl_r32_m32     
  movq %r15, -0x1e0(%rbp)         #  1259  0xba684  7      OPC=movq_m64_r64     
  movl %r14d, -0x200(%rbp)        #  1260  0xba68b  7      OPC=movl_m32_r32     
  movq %r12, -0x208(%rbp)         #  1261  0xba692  7      OPC=movq_m64_r64     
  movq -0x230(%rbp), %r14         #  1262  0xba699  7      OPC=movq_r64_m64     
  movq -0x228(%rbp), %r12         #  1263  0xba6a0  7      OPC=movq_r64_m64     
  testl %r9d, %r9d                #  1264  0xba6a7  3      OPC=testl_r32_r32    
  movl -0x234(%rbp), %r13d        #  1265  0xba6aa  7      OPC=movl_r32_m32     
  movq -0x240(%rbp), %r15         #  1266  0xba6b1  7      OPC=movq_r64_m64     
  movq -0x150(%rbp), %rdx         #  1267  0xba6b8  7      OPC=movq_r64_m64     
  jne .L_ba82b                    #  1268  0xba6bf  6      OPC=jne_label_1      
.L_ba6bd:                         #        0xba6c5  0      OPC=<label>          
  testq %rdx, %rdx                #  1269  0xba6c5  3      OPC=testq_r64_r64    
  je .L_ba7bf                     #  1270  0xba6c8  6      OPC=je_label_1       
  movq 0x20(%rdx), %rdi           #  1271  0xba6ce  4      OPC=movq_r64_m64     
  movq %rdx, -0x1d8(%rbp)         #  1272  0xba6d2  7      OPC=movq_m64_r64     
  callq .strlen                   #  1273  0xba6d9  5      OPC=callq_label      
  movq %rax, %rbx                 #  1274  0xba6de  3      OPC=movq_r64_r64     
  movq -0x210(%rbp), %rax         #  1275  0xba6e1  7      OPC=movq_r64_m64     
  movq -0x1d8(%rbp), %rdx         #  1276  0xba6e8  7      OPC=movq_r64_m64     
  testq %rax, %rax                #  1277  0xba6ef  3      OPC=testq_r64_r64    
  je .L_bac58                     #  1278  0xba6f2  6      OPC=je_label_1       
  movq %rax, %rdi                 #  1279  0xba6f8  3      OPC=movq_r64_r64     
  callq .strlen                   #  1280  0xba6fb  5      OPC=callq_label      
  movq -0x1d8(%rbp), %rdx         #  1281  0xba700  7      OPC=movq_r64_m64     
  movq %rax, %r12                 #  1282  0xba707  3      OPC=movq_r64_r64     
.L_ba702:                         #        0xba70a  0      OPC=<label>          
  movl -0x1c8(%rbp), %r8d         #  1283  0xba70a  7      OPC=movl_r32_m32     
  testl %r8d, %r8d                #  1284  0xba711  3      OPC=testl_r32_r32    
  jne .L_bac9e                    #  1285  0xba714  6      OPC=jne_label_1      
.L_ba712:                         #        0xba71a  0      OPC=<label>          
  movq -0x1e0(%rbp), %rax         #  1286  0xba71a  7      OPC=movq_r64_m64     
  leaq 0x1(%rax,%rbx,1), %rdi     #  1287  0xba721  5      OPC=leaq_r64_m16     
  addq %r12, %rdi                 #  1288  0xba726  3      OPC=addq_r64_r64     
  cmpq $0x1000, %rdi              #  1289  0xba729  7      OPC=cmpq_r64_imm32   
  ja .L_bacbd                     #  1290  0xba730  6      OPC=ja_label_1       
.L_ba72e:                         #        0xba736  0      OPC=<label>          
  movq %rsp, %rax                 #  1291  0xba736  3      OPC=movq_r64_r64     
  leaq 0x1f(%r12,%rbx,1), %rcx    #  1292  0xba739  5      OPC=leaq_r64_m16     
  andq $0xf0, %rcx                #  1293  0xba73e  4      OPC=andq_r64_imm8    
  subq %rcx, %rsp                 #  1294  0xba742  3      OPC=subq_r64_r64     
  leaq 0xf(%rsp), %rcx            #  1295  0xba745  5      OPC=leaq_r64_m16     
  andq $0xf0, %rcx                #  1296  0xba74a  4      OPC=andq_r64_imm8    
  movq %rcx, -0x1b0(%rbp)         #  1297  0xba74e  7      OPC=movq_m64_r64     
  subq %rsp, %rax                 #  1298  0xba755  3      OPC=subq_r64_r64     
  addq %rax, -0x1e0(%rbp)         #  1299  0xba758  7      OPC=addq_m64_r64     
  movl $0x0, -0x1c8(%rbp)         #  1300  0xba75f  10     OPC=movl_m32_imm32   
.L_ba761:                         #        0xba769  0      OPC=<label>          
  movq 0x20(%rdx), %rsi           #  1301  0xba769  4      OPC=movq_r64_m64     
  movq -0x1b0(%rbp), %rdi         #  1302  0xba76d  7      OPC=movq_r64_m64     
  movq %rbx, %rdx                 #  1303  0xba774  3      OPC=movq_r64_r64     
  callq .__GI_memcpy              #  1304  0xba777  5      OPC=callq_label      
  movq -0x210(%rbp), %rsi         #  1305  0xba77c  7      OPC=movq_r64_m64     
  leaq (%rax,%rbx,1), %rdi        #  1306  0xba783  4      OPC=leaq_r64_m16     
  movq %r12, %rdx                 #  1307  0xba787  3      OPC=movq_r64_r64     
  callq .__GI_memcpy              #  1308  0xba78a  5      OPC=callq_label      
  movl -0x200(%rbp), %esi         #  1309  0xba78f  6      OPC=movl_r32_m32     
  movb $0x0, (%rax,%r12,1)        #  1310  0xba795  5      OPC=movb_m8_imm8     
  addq %rbx, %r12                 #  1311  0xba79a  3      OPC=addq_r64_r64     
  movl $0x1, %edx                 #  1312  0xba79d  5      OPC=movl_r32_imm32   
  testl %esi, %esi                #  1313  0xba7a2  2      OPC=testl_r32_r32    
  je .L_b9796                     #  1314  0xba7a4  6      OPC=je_label_1       
  movq -0x208(%rbp), %rdi         #  1315  0xba7aa  7      OPC=movq_r64_m64     
  movl %edx, -0x1d8(%rbp)         #  1316  0xba7b1  6      OPC=movl_m32_r32     
  callq .L_1f8c0                  #  1317  0xba7b7  5      OPC=callq_label      
  movl -0x1d8(%rbp), %edx         #  1318  0xba7bc  6      OPC=movl_r32_m32     
  jmpq .L_b9796                   #  1319  0xba7c2  5      OPC=jmpq_label_1     
.L_ba7bf:                         #        0xba7c7  0      OPC=<label>          
  movl -0x200(%rbp), %ecx         #  1320  0xba7c7  6      OPC=movl_r32_m32     
  testl %ecx, %ecx                #  1321  0xba7cd  2      OPC=testl_r32_r32    
  jne .L_bae99                    #  1322  0xba7cf  6      OPC=jne_label_1      
.L_ba7cd:                         #        0xba7d5  0      OPC=<label>          
  testl $0x4000, %r13d            #  1323  0xba7d5  7      OPC=testl_r32_imm32  
  jne .L_b9a00                    #  1324  0xba7dc  6      OPC=jne_label_1      
  xorl %edx, %edx                 #  1325  0xba7e2  2      OPC=xorl_r32_r32     
  jmpq .L_b9796                   #  1326  0xba7e4  5      OPC=jmpq_label_1     
.L_ba7e1:                         #        0xba7e9  0      OPC=<label>          
  movl -0x220(%rbp), %r10d        #  1327  0xba7e9  7      OPC=movl_r32_m32     
  movq %r15, -0x1e0(%rbp)         #  1328  0xba7f0  7      OPC=movq_m64_r64     
  movl %r14d, -0x200(%rbp)        #  1329  0xba7f7  7      OPC=movl_m32_r32     
  movq %r12, -0x208(%rbp)         #  1330  0xba7fe  7      OPC=movq_m64_r64     
  movq -0x230(%rbp), %r14         #  1331  0xba805  7      OPC=movq_r64_m64     
  movq -0x228(%rbp), %r12         #  1332  0xba80c  7      OPC=movq_r64_m64     
  testl %r10d, %r10d              #  1333  0xba813  3      OPC=testl_r32_r32    
  movl -0x234(%rbp), %r13d        #  1334  0xba816  7      OPC=movl_r32_m32     
  movq -0x240(%rbp), %r15         #  1335  0xba81d  7      OPC=movq_r64_m64     
  movq $0x0, -0x150(%rbp)         #  1336  0xba824  11     OPC=movq_m64_imm32   
  je .L_ba7bf                     #  1337  0xba82f  2      OPC=je_label         
  xorl %edx, %edx                 #  1338  0xba831  2      OPC=xorl_r32_r32     
.L_ba82b:                         #        0xba833  0      OPC=<label>          
  movq -0x1d8(%rbp), %rdi         #  1339  0xba833  7      OPC=movq_r64_m64     
  movq %rdx, -0x1e8(%rbp)         #  1340  0xba83a  7      OPC=movq_m64_r64     
  callq .L_1f8c0                  #  1341  0xba841  5      OPC=callq_label      
  movq -0x1e8(%rbp), %rdx         #  1342  0xba846  7      OPC=movq_r64_m64     
  jmpq .L_ba6bd                   #  1343  0xba84d  5      OPC=jmpq_label_1     
.L_ba84a:                         #        0xba852  0      OPC=<label>          
  movl $0x47, %edi                #  1344  0xba852  5      OPC=movl_r32_imm32   
  callq .__sysconf                #  1345  0xba857  5      OPC=callq_label      
  addq $0x1, %rax                 #  1346  0xba85c  4      OPC=addq_r64_imm8    
  movq %rax, %rsi                 #  1347  0xba860  3      OPC=movq_r64_r64     
  movl $0x14, %eax                #  1348  0xba863  5      OPC=movl_r32_imm32   
  cmoveq %rax, %rsi               #  1349  0xba868  4      OPC=cmoveq_r64_r64   
  movq %rsp, %rax                 #  1350  0xba86c  3      OPC=movq_r64_r64     
  leaq 0x1e(%rsi), %rdx           #  1351  0xba86f  4      OPC=leaq_r64_m16     
  andq $0xf0, %rdx                #  1352  0xba873  4      OPC=andq_r64_imm8    
  subq %rdx, %rsp                 #  1353  0xba877  3      OPC=subq_r64_r64     
  leaq 0xf(%rsp), %rdx            #  1354  0xba87a  5      OPC=leaq_r64_m16     
  andq $0xf0, %rdx                #  1355  0xba87f  4      OPC=andq_r64_imm8    
  movq %rdx, %rdi                 #  1356  0xba883  3      OPC=movq_r64_r64     
  movq %rdx, -0x1f8(%rbp)         #  1357  0xba886  7      OPC=movq_m64_r64     
  subq %rsp, %rax                 #  1358  0xba88d  3      OPC=subq_r64_r64     
  xorl %ebx, %ebx                 #  1359  0xba890  2      OPC=xorl_r32_r32     
  addq %rax, -0x1e0(%rbp)         #  1360  0xba892  7      OPC=addq_m64_r64     
  callq .getlogin_r               #  1361  0xba899  5      OPC=callq_label      
  testl %eax, %eax                #  1362  0xba89e  2      OPC=testl_r32_r32    
  je .L_baa8c                     #  1363  0xba8a0  6      OPC=je_label_1       
.L_ba89e:                         #        0xba8a6  0      OPC=<label>          
  movq -0x1d8(%rbp), %rax         #  1364  0xba8a6  7      OPC=movq_r64_m64     
  testq %rax, %rax                #  1365  0xba8ad  3      OPC=testq_r64_r64    
  je .L_ba8b3                     #  1366  0xba8b0  2      OPC=je_label         
  cmpb $0x0, (%rax)               #  1367  0xba8b2  3      OPC=cmpb_m8_imm8     
  jne .L_ba5c1                    #  1368  0xba8b5  6      OPC=jne_label_1      
.L_ba8b3:                         #        0xba8bb  0      OPC=<label>          
  testl $0x4000, %r13d            #  1369  0xba8bb  7      OPC=testl_r32_imm32  
  je .L_baa22                     #  1370  0xba8c2  6      OPC=je_label_1       
  testl %ebx, %ebx                #  1371  0xba8c8  2      OPC=testl_r32_r32    
  movl $0x3, %eax                 #  1372  0xba8ca  5      OPC=movl_r32_imm32   
  je .L_b9461                     #  1373  0xba8cf  6      OPC=je_label_1       
.L_ba8cd:                         #        0xba8d5  0      OPC=<label>          
  movq -0x1d8(%rbp), %rdi         #  1374  0xba8d5  7      OPC=movq_r64_m64     
  movl %eax, -0x1a8(%rbp)         #  1375  0xba8dc  6      OPC=movl_m32_r32     
  callq .L_1f8c0                  #  1376  0xba8e2  5      OPC=callq_label      
  movl -0x1a8(%rbp), %eax         #  1377  0xba8e7  6      OPC=movl_r32_m32     
  jmpq .L_b9461                   #  1378  0xba8ed  5      OPC=jmpq_label_1     
  nop                             #  1379  0xba8f2  1      OPC=nop              
  nop                             #  1380  0xba8f3  1      OPC=nop              
  nop                             #  1381  0xba8f4  1      OPC=nop              
  nop                             #  1382  0xba8f5  1      OPC=nop              
  nop                             #  1383  0xba8f6  1      OPC=nop              
  nop                             #  1384  0xba8f7  1      OPC=nop              
.L_ba8f0:                         #        0xba8f8  0      OPC=<label>          
  movq -0x1b0(%rbp), %rdi         #  1385  0xba8f8  7      OPC=movq_r64_m64     
  movl %eax, -0x1a8(%rbp)         #  1386  0xba8ff  6      OPC=movl_m32_r32     
  callq .L_1f8c0                  #  1387  0xba905  5      OPC=callq_label      
  movl -0x1a8(%rbp), %eax         #  1388  0xba90a  6      OPC=movl_r32_m32     
  jmpq .L_b966b                   #  1389  0xba910  5      OPC=jmpq_label_1     
.L_ba90d:                         #        0xba915  0      OPC=<label>          
  movq -0x1b0(%rbp), %rdi         #  1390  0xba915  7      OPC=movq_r64_m64     
  callq .L_1f8c0                  #  1391  0xba91c  5      OPC=callq_label      
  jmpq .L_b9b45                   #  1392  0xba921  5      OPC=jmpq_label_1     
.L_ba91e:                         #        0xba926  0      OPC=<label>          
  testl %r14d, %r14d              #  1393  0xba926  3      OPC=testl_r32_r32    
  movq %r12, -0x208(%rbp)         #  1394  0xba929  7      OPC=movq_m64_r64     
  jne .L_badf4                    #  1395  0xba930  6      OPC=jne_label_1      
.L_ba92e:                         #        0xba936  0      OPC=<label>          
  movl -0x220(%rbp), %r11d        #  1396  0xba936  7      OPC=movl_r32_m32     
  testl %r11d, %r11d              #  1397  0xba93d  3      OPC=testl_r32_r32    
  jne .L_bad47                    #  1398  0xba940  6      OPC=jne_label_1      
.L_ba93e:                         #        0xba946  0      OPC=<label>          
  movl $0x1, %eax                 #  1399  0xba946  5      OPC=movl_r32_imm32   
  jmpq .L_b9461                   #  1400  0xba94b  5      OPC=jmpq_label_1     
.L_ba948:                         #        0xba950  0      OPC=<label>          
  movl %r13d, %eax                #  1401  0xba950  3      OPC=movl_r32_r32     
  movl %edx, %r13d                #  1402  0xba953  3      OPC=movl_r32_r32     
  andl $0x10, %eax                #  1403  0xba956  3      OPC=andl_r32_imm8    
  jmpq .L_b9f34                   #  1404  0xba959  5      OPC=jmpq_label_1     
.L_ba956:                         #        0xba95e  0      OPC=<label>          
  movq -0x1d8(%rbp), %rdi         #  1405  0xba95e  7      OPC=movq_r64_m64     
  callq .strlen                   #  1406  0xba965  5      OPC=callq_label      
  movq -0x1e0(%rbp), %rcx         #  1407  0xba96a  7      OPC=movq_r64_m64     
  movq %rax, -0x1e8(%rbp)         #  1408  0xba971  7      OPC=movq_m64_r64     
  leaq (%rcx,%r12,1), %rdi        #  1409  0xba978  4      OPC=leaq_r64_m16     
  addq %rax, %rdi                 #  1410  0xba97c  3      OPC=addq_r64_r64     
  cmpq $0x1000, %rdi              #  1411  0xba97f  7      OPC=cmpq_r64_imm32   
  ja .L_baec9                     #  1412  0xba986  6      OPC=ja_label_1       
.L_ba984:                         #        0xba98c  0      OPC=<label>          
  movq %rsp, %rax                 #  1413  0xba98c  3      OPC=movq_r64_r64     
  movq -0x1e8(%rbp), %rcx         #  1414  0xba98f  7      OPC=movq_r64_m64     
  leaq 0x1e(%r12,%rcx,1), %rdx    #  1415  0xba996  5      OPC=leaq_r64_m16     
  andq $0xf0, %rdx                #  1416  0xba99b  4      OPC=andq_r64_imm8    
  subq %rdx, %rsp                 #  1417  0xba99f  3      OPC=subq_r64_r64     
  leaq 0xf(%rsp), %rcx            #  1418  0xba9a2  5      OPC=leaq_r64_m16     
  andq $0xf0, %rcx                #  1419  0xba9a7  4      OPC=andq_r64_imm8    
  subq %rsp, %rax                 #  1420  0xba9ab  3      OPC=subq_r64_r64     
  addq %rax, -0x1e0(%rbp)         #  1421  0xba9ae  7      OPC=addq_m64_r64     
  xorl %ebx, %ebx                 #  1422  0xba9b5  2      OPC=xorl_r32_r32     
.L_ba9af:                         #        0xba9b7  0      OPC=<label>          
  movq -0x1d8(%rbp), %rsi         #  1423  0xba9b7  7      OPC=movq_r64_m64     
  movq -0x1e8(%rbp), %rdx         #  1424  0xba9be  7      OPC=movq_r64_m64     
  movq %rcx, %rdi                 #  1425  0xba9c5  3      OPC=movq_r64_r64     
  movq %rcx, -0x1d8(%rbp)         #  1426  0xba9c8  7      OPC=movq_m64_r64     
  callq .__GI_memcpy              #  1427  0xba9cf  5      OPC=callq_label      
  movq -0x1e8(%rbp), %rcx         #  1428  0xba9d4  7      OPC=movq_r64_m64     
  movq %r12, %rdx                 #  1429  0xba9db  3      OPC=movq_r64_r64     
  leaq (%rax,%rcx,1), %rdi        #  1430  0xba9de  4      OPC=leaq_r64_m16     
  movq -0x1b0(%rbp), %rax         #  1431  0xba9e2  7      OPC=movq_r64_m64     
  leaq 0x1(%rax), %rsi            #  1432  0xba9e9  4      OPC=leaq_r64_m16     
  callq .__GI_memcpy              #  1433  0xba9ed  5      OPC=callq_label      
  movl -0x1c8(%rbp), %eax         #  1434  0xba9f2  6      OPC=movl_r32_m32     
  movq -0x1d8(%rbp), %rcx         #  1435  0xba9f8  7      OPC=movq_r64_m64     
  testl %eax, %eax                #  1436  0xba9ff  2      OPC=testl_r32_r32    
  jne .L_baeaa                    #  1437  0xbaa01  6      OPC=jne_label_1      
.L_ba9ff:                         #        0xbaa07  0      OPC=<label>          
  movq -0x1e8(%rbp), %rax         #  1438  0xbaa07  7      OPC=movq_r64_m64     
  movl %ebx, -0x1c8(%rbp)         #  1439  0xbaa0e  6      OPC=movl_m32_r32     
  movl $0x1, %edx                 #  1440  0xbaa14  5      OPC=movl_r32_imm32   
  movq %rcx, -0x1b0(%rbp)         #  1441  0xbaa19  7      OPC=movq_m64_r64     
  leaq -0x1(%r12,%rax,1), %r12    #  1442  0xbaa20  5      OPC=leaq_r64_m16     
  jmpq .L_b9796                   #  1443  0xbaa25  5      OPC=jmpq_label_1     
.L_baa22:                         #        0xbaa2a  0      OPC=<label>          
  leaq 0xaa70b(%rip), %rax        #  1444  0xbaa2a  7      OPC=leaq_r64_m16     
  movq %rax, -0x1d8(%rbp)         #  1445  0xbaa31  7      OPC=movq_m64_r64     
  jmpq .L_ba5c1                   #  1446  0xbaa38  5      OPC=jmpq_label_1     
.L_baa35:                         #        0xbaa3d  0      OPC=<label>          
  movq -0x1b0(%rbp), %rax         #  1447  0xbaa3d  7      OPC=movq_r64_m64     
  movq -0x1d8(%rbp), %rdi         #  1448  0xbaa44  7      OPC=movq_r64_m64     
  movq %rbx, %rdx                 #  1449  0xbaa4b  3      OPC=movq_r64_r64     
  leaq 0x1(%rax), %rsi            #  1450  0xbaa4e  4      OPC=leaq_r64_m16     
  callq .__GI_memcpy              #  1451  0xbaa52  5      OPC=callq_label      
  movb $0x0, (%rax,%rbx,1)        #  1452  0xbaa57  4      OPC=movb_m8_imm8     
  jmpq .L_ba2f5                   #  1453  0xbaa5b  5      OPC=jmpq_label_1     
.L_baa58:                         #        0xbaa60  0      OPC=<label>          
  callq .__libc_alloca_cutoff     #  1454  0xbaa60  5      OPC=callq_label      
  testl %eax, %eax                #  1455  0xbaa65  2      OPC=testl_r32_r32    
  jne .L_ba331                    #  1456  0xbaa67  6      OPC=jne_label_1      
  movq %rbx, %rdi                 #  1457  0xbaa6d  3      OPC=movq_r64_r64     
  callq .memalign_plt             #  1458  0xbaa70  5      OPC=callq_label      
  testq %rax, %rax                #  1459  0xbaa75  3      OPC=testq_r64_r64    
  movq %rax, -0x208(%rbp)         #  1460  0xbaa78  7      OPC=movq_m64_r64     
  je .L_ba92e                     #  1461  0xbaa7f  6      OPC=je_label_1       
  movl $0x1, -0x200(%rbp)         #  1462  0xbaa85  10     OPC=movl_m32_imm32   
  jmpq .L_ba363                   #  1463  0xbaa8f  5      OPC=jmpq_label_1     
.L_baa8c:                         #        0xbaa94  0      OPC=<label>          
  movl $0x46, %edi                #  1464  0xbaa94  5      OPC=movl_r32_imm32   
  callq .__sysconf                #  1465  0xbaa99  5      OPC=callq_label      
  movq %rax, %rbx                 #  1466  0xbaa9e  3      OPC=movq_r64_r64     
  movq 0x2e03e0(%rip), %rax       #  1467  0xbaaa1  7      OPC=movq_r64_m64     
  movq %rax, -0x218(%rbp)         #  1468  0xbaaa8  7      OPC=movq_m64_r64     
  movl (%rax), %eax               #  1469  0xbaaaf  2      OPC=movl_r32_m32     
  nop                             #  1470  0xbaab1  1      OPC=nop              
  movl %eax, -0x208(%rbp)         #  1471  0xbaab2  6      OPC=movl_m32_r32     
  movq -0x1e0(%rbp), %rax         #  1472  0xbaab8  7      OPC=movq_r64_m64     
  leaq (%rbx,%rax,1), %rdi        #  1473  0xbaabf  4      OPC=leaq_r64_m16     
  cmpq $0x1000, %rdi              #  1474  0xbaac3  7      OPC=cmpq_r64_imm32   
  ja .L_baef8                     #  1475  0xbaaca  6      OPC=ja_label_1       
.L_baac8:                         #        0xbaad0  0      OPC=<label>          
  movq %rsp, %rax                 #  1476  0xbaad0  3      OPC=movq_r64_r64     
  leaq 0x1e(%rbx), %rdx           #  1477  0xbaad3  4      OPC=leaq_r64_m16     
  andq $0xf0, %rdx                #  1478  0xbaad7  4      OPC=andq_r64_imm8    
  subq %rdx, %rsp                 #  1479  0xbaadb  3      OPC=subq_r64_r64     
  leaq 0xf(%rsp), %rdx            #  1480  0xbaade  5      OPC=leaq_r64_m16     
  andq $0xf0, %rdx                #  1481  0xbaae3  4      OPC=andq_r64_imm8    
  movq %rdx, -0x200(%rbp)         #  1482  0xbaae7  7      OPC=movq_m64_r64     
  subq %rsp, %rax                 #  1483  0xbaaee  3      OPC=subq_r64_r64     
  addq %rax, -0x1e0(%rbp)         #  1484  0xbaaf1  7      OPC=addq_m64_r64     
  xorl %ecx, %ecx                 #  1485  0xbaaf8  2      OPC=xorl_r32_r32     
.L_baaf2:                         #        0xbaafa  0      OPC=<label>          
  leaq -0x150(%rbp), %rax         #  1486  0xbaafa  7      OPC=leaq_r64_m16     
  movq %r12, -0x210(%rbp)         #  1487  0xbab01  7      OPC=movq_m64_r64     
  movq %r14, -0x220(%rbp)         #  1488  0xbab08  7      OPC=movq_m64_r64     
  movq %r15, -0x230(%rbp)         #  1489  0xbab0f  7      OPC=movq_m64_r64     
  movq -0x200(%rbp), %r12         #  1490  0xbab16  7      OPC=movq_r64_m64     
  movq %rbx, %r15                 #  1491  0xbab1d  3      OPC=movq_r64_r64     
  movq %rax, -0x1e8(%rbp)         #  1492  0xbab20  7      OPC=movq_m64_r64     
  leaq -0xc0(%rbp), %rax          #  1493  0xbab27  7      OPC=leaq_r64_m16     
  movl %ecx, %ebx                 #  1494  0xbab2e  2      OPC=movl_r32_r32     
  movl %r13d, -0x228(%rbp)        #  1495  0xbab30  7      OPC=movl_m32_r32     
  movq %rax, -0x1f0(%rbp)         #  1496  0xbab37  7      OPC=movq_m64_r64     
  movq -0x218(%rbp), %r14         #  1497  0xbab3e  7      OPC=movq_r64_m64     
  jmpq .L_babac                   #  1498  0xbab45  2      OPC=jmpq_label       
.L_bab3f:                         #        0xbab47  0      OPC=<label>          
  movq -0x1e0(%rbp), %rax         #  1499  0xbab47  7      OPC=movq_r64_m64     
  leaq (%r15,%rax,1), %rdi        #  1500  0xbab4e  4      OPC=leaq_r64_m16     
  cmpq $0x1000, %rdi              #  1501  0xbab52  7      OPC=cmpq_r64_imm32   
  ja .L_bad10                     #  1502  0xbab59  6      OPC=ja_label_1       
.L_bab57:                         #        0xbab5f  0      OPC=<label>          
  movq %rsp, %rsi                 #  1503  0xbab5f  3      OPC=movq_r64_r64     
  leaq 0xf(%r15), %r9             #  1504  0xbab62  4      OPC=leaq_r64_m16     
  movl $0x10, %edi                #  1505  0xbab66  5      OPC=movl_r32_imm32   
  xorl %edx, %edx                 #  1506  0xbab6b  2      OPC=xorl_r32_r32     
  movq %r9, %rcx                  #  1507  0xbab6d  3      OPC=movq_r64_r64     
  andq $0xf0, %rcx                #  1508  0xbab70  4      OPC=andq_r64_imm8    
  leaq 0x1e(%rcx), %rax           #  1509  0xbab74  4      OPC=leaq_r64_m16     
  leaq (%rcx,%r13,1), %r9         #  1510  0xbab78  4      OPC=leaq_r64_m16     
  divq %rdi                       #  1511  0xbab7c  3      OPC=divq_r64         
  shlq $0x4, %rax                 #  1512  0xbab7f  4      OPC=shlq_r64_imm8    
  subq %rax, %rsp                 #  1513  0xbab83  3      OPC=subq_r64_r64     
  leaq 0xf(%rsp), %rax            #  1514  0xbab86  5      OPC=leaq_r64_m16     
  andq $0xf0, %rax                #  1515  0xbab8b  4      OPC=andq_r64_imm8    
  leaq (%rax,%rcx,1), %rdx        #  1516  0xbab8f  4      OPC=leaq_r64_m16     
  cmpq %rdx, %r12                 #  1517  0xbab93  3      OPC=cmpq_r64_r64     
  cmoveq %r9, %rcx                #  1518  0xbab96  4      OPC=cmoveq_r64_r64   
  movq %rcx, %r15                 #  1519  0xbab9a  3      OPC=movq_r64_r64     
  subq %rsp, %rsi                 #  1520  0xbab9d  3      OPC=subq_r64_r64     
  addq %rsi, -0x1e0(%rbp)         #  1521  0xbaba0  7      OPC=addq_m64_r64     
.L_bab9f:                         #        0xbaba7  0      OPC=<label>          
  movl -0x208(%rbp), %ecx         #  1522  0xbaba7  6      OPC=movl_r32_m32     
  movq %rax, %r12                 #  1523  0xbabad  3      OPC=movq_r64_r64     
  movl %ecx, (%r14)               #  1524  0xbabb0  3      OPC=movl_m32_r32     
  nop                             #  1525  0xbabb3  1      OPC=nop              
.L_babac:                         #        0xbabb4  0      OPC=<label>          
  movq -0x1e8(%rbp), %r8          #  1526  0xbabb4  7      OPC=movq_r64_m64     
  movq -0x1f0(%rbp), %rsi         #  1527  0xbabbb  7      OPC=movq_r64_m64     
  movq %r15, %rcx                 #  1528  0xbabc2  3      OPC=movq_r64_r64     
  movq -0x1f8(%rbp), %rdi         #  1529  0xbabc5  7      OPC=movq_r64_m64     
  movq %r12, %rdx                 #  1530  0xbabcc  3      OPC=movq_r64_r64     
  movq %r15, %r13                 #  1531  0xbabcf  3      OPC=movq_r64_r64     
  callq .getpwnam_r__GLIBC_2_2_5  #  1532  0xbabd2  5      OPC=callq_label      
  testl %eax, %eax                #  1533  0xbabd7  2      OPC=testl_r32_r32    
  je .L_badab                     #  1534  0xbabd9  6      OPC=je_label_1       
  cmpl $0x22, (%r14)              #  1535  0xbabdf  4      OPC=cmpl_m32_imm8    
  nop                             #  1536  0xbabe3  1      OPC=nop              
  jne .L_bad88                    #  1537  0xbabe4  6      OPC=jne_label_1      
  addq %r15, %r15                 #  1538  0xbabea  3      OPC=addq_r64_r64     
  testl %ebx, %ebx                #  1539  0xbabed  2      OPC=testl_r32_r32    
  je .L_bab3f                     #  1540  0xbabef  6      OPC=je_label_1       
  movq %r12, %rdi                 #  1541  0xbabf5  3      OPC=movq_r64_r64     
.L_babf0:                         #        0xbabf8  0      OPC=<label>          
  movq %r15, %rsi                 #  1542  0xbabf8  3      OPC=movq_r64_r64     
  callq .__tls_get_addr_plt       #  1543  0xbabfb  5      OPC=callq_label      
  testq %rax, %rax                #  1544  0xbac00  3      OPC=testq_r64_r64    
  je .L_bae01                     #  1545  0xbac03  6      OPC=je_label_1       
  movl $0x1, %ebx                 #  1546  0xbac09  5      OPC=movl_r32_imm32   
  jmpq .L_bab9f                   #  1547  0xbac0e  2      OPC=jmpq_label       
.L_bac08:                         #        0xbac10  0      OPC=<label>          
  movq %r8, -0x1d8(%rbp)          #  1548  0xbac10  7      OPC=movq_m64_r64     
  callq .__libc_alloca_cutoff     #  1549  0xbac17  5      OPC=callq_label      
  testl %eax, %eax                #  1550  0xbac1c  2      OPC=testl_r32_r32    
  movq -0x1d8(%rbp), %r8          #  1551  0xbac1e  7      OPC=movq_r64_m64     
  jne .L_ba152                    #  1552  0xbac25  6      OPC=jne_label_1      
  movq %rbx, %rdi                 #  1553  0xbac2b  3      OPC=movq_r64_r64     
  movq %r8, -0x1e8(%rbp)          #  1554  0xbac2e  7      OPC=movq_m64_r64     
  callq .memalign_plt             #  1555  0xbac35  5      OPC=callq_label      
  testq %rax, %rax                #  1556  0xbac3a  3      OPC=testq_r64_r64    
  movq %rax, -0x1d8(%rbp)         #  1557  0xbac3d  7      OPC=movq_m64_r64     
  je .L_ba93e                     #  1558  0xbac44  6      OPC=je_label_1       
  movl $0x1, -0x220(%rbp)         #  1559  0xbac4a  10     OPC=movl_m32_imm32   
  movq -0x1e8(%rbp), %r8          #  1560  0xbac54  7      OPC=movq_r64_m64     
  jmpq .L_ba184                   #  1561  0xbac5b  5      OPC=jmpq_label_1     
.L_bac58:                         #        0xbac60  0      OPC=<label>          
  xorl %r12d, %r12d               #  1562  0xbac60  3      OPC=xorl_r32_r32     
  jmpq .L_ba702                   #  1563  0xbac63  5      OPC=jmpq_label_1     
.L_bac60:                         #        0xbac68  0      OPC=<label>          
  movq -0x1b0(%rbp), %rdi         #  1564  0xbac68  7      OPC=movq_r64_m64     
  movl $0x5c, %esi                #  1565  0xbac6f  5      OPC=movl_r32_imm32   
  callq .__GI_strchr              #  1566  0xbac74  5      OPC=callq_label      
  testq %rax, %rax                #  1567  0xbac79  3      OPC=testq_r64_r64    
  je .L_ba4cd                     #  1568  0xbac7c  6      OPC=je_label_1       
  xorl %esi, %esi                 #  1569  0xbac82  2      OPC=xorl_r32_r32     
  movq %rax, %rdi                 #  1570  0xbac84  3      OPC=movq_r64_r64     
  movq %rax, -0x1d8(%rbp)         #  1571  0xbac87  7      OPC=movq_m64_r64     
  callq .__rawmemchr              #  1572  0xbac8e  5      OPC=callq_label      
  movq -0x1d8(%rbp), %r8          #  1573  0xbac93  7      OPC=movq_r64_m64     
  movq %rax, -0x210(%rbp)         #  1574  0xbac9a  7      OPC=movq_m64_r64     
  jmpq .L_ba4b3                   #  1575  0xbaca1  5      OPC=jmpq_label_1     
.L_bac9e:                         #        0xbaca6  0      OPC=<label>          
  movq -0x1b0(%rbp), %rdi         #  1576  0xbaca6  7      OPC=movq_r64_m64     
  movq %rdx, -0x1c8(%rbp)         #  1577  0xbacad  7      OPC=movq_m64_r64     
  callq .L_1f8c0                  #  1578  0xbacb4  5      OPC=callq_label      
  movq -0x1c8(%rbp), %rdx         #  1579  0xbacb9  7      OPC=movq_r64_m64     
  jmpq .L_ba712                   #  1580  0xbacc0  5      OPC=jmpq_label_1     
.L_bacbd:                         #        0xbacc5  0      OPC=<label>          
  movq %rdx, -0x1b0(%rbp)         #  1581  0xbacc5  7      OPC=movq_m64_r64     
  callq .__libc_alloca_cutoff     #  1582  0xbaccc  5      OPC=callq_label      
  testl %eax, %eax                #  1583  0xbacd1  2      OPC=testl_r32_r32    
  movq -0x1b0(%rbp), %rdx         #  1584  0xbacd3  7      OPC=movq_r64_m64     
  jne .L_ba72e                    #  1585  0xbacda  6      OPC=jne_label_1      
  leaq 0x1(%r12,%rbx,1), %rdi     #  1586  0xbace0  5      OPC=leaq_r64_m16     
  movq %rdx, -0x1d8(%rbp)         #  1587  0xbace5  7      OPC=movq_m64_r64     
  callq .memalign_plt             #  1588  0xbacec  5      OPC=callq_label      
  testq %rax, %rax                #  1589  0xbacf1  3      OPC=testq_r64_r64    
  movq %rax, -0x1b0(%rbp)         #  1590  0xbacf4  7      OPC=movq_m64_r64     
  je .L_bad58                     #  1591  0xbacfb  2      OPC=je_label         
  movl $0x1, -0x1c8(%rbp)         #  1592  0xbacfd  10     OPC=movl_m32_imm32   
  movq -0x1d8(%rbp), %rdx         #  1593  0xbad07  7      OPC=movq_r64_m64     
  jmpq .L_ba761                   #  1594  0xbad0e  5      OPC=jmpq_label_1     
  nop                             #  1595  0xbad13  1      OPC=nop              
  nop                             #  1596  0xbad14  1      OPC=nop              
  nop                             #  1597  0xbad15  1      OPC=nop              
  nop                             #  1598  0xbad16  1      OPC=nop              
  nop                             #  1599  0xbad17  1      OPC=nop              
.L_bad10:                         #        0xbad18  0      OPC=<label>          
  callq .__libc_alloca_cutoff     #  1600  0xbad18  5      OPC=callq_label      
  testl %eax, %eax                #  1601  0xbad1d  2      OPC=testl_r32_r32    
  jne .L_bab57                    #  1602  0xbad1f  6      OPC=jne_label_1      
  xorl %edi, %edi                 #  1603  0xbad25  2      OPC=xorl_r32_r32     
  jmpq .L_babf0                   #  1604  0xbad27  5      OPC=jmpq_label_1     
  nop                             #  1605  0xbad2c  1      OPC=nop              
  nop                             #  1606  0xbad2d  1      OPC=nop              
  nop                             #  1607  0xbad2e  1      OPC=nop              
  nop                             #  1608  0xbad2f  1      OPC=nop              
.L_bad28:                         #        0xbad30  0      OPC=<label>          
  leaq 0xaa7ec(%rip), %rcx        #  1609  0xbad30  7      OPC=leaq_r64_m16     
  leaq 0xaa3db(%rip), %rsi        #  1610  0xbad37  7      OPC=leaq_r64_m16     
  leaq 0xaa3f9(%rip), %rdi        #  1611  0xbad3e  7      OPC=leaq_r64_m16     
  movl $0x1a5, %edx               #  1612  0xbad45  5      OPC=movl_r32_imm32   
  callq .__assert_fail            #  1613  0xbad4a  5      OPC=callq_label      
.L_bad47:                         #        0xbad4f  0      OPC=<label>          
  movq -0x1d8(%rbp), %rdi         #  1614  0xbad4f  7      OPC=movq_r64_m64     
  callq .L_1f8c0                  #  1615  0xbad56  5      OPC=callq_label      
  jmpq .L_ba93e                   #  1616  0xbad5b  5      OPC=jmpq_label_1     
.L_bad58:                         #        0xbad60  0      OPC=<label>          
  movl -0x200(%rbp), %edi         #  1617  0xbad60  6      OPC=movl_r32_m32     
  movl $0x0, -0x1c8(%rbp)         #  1618  0xbad66  10     OPC=movl_m32_imm32   
  testl %edi, %edi                #  1619  0xbad70  2      OPC=testl_r32_r32    
  je .L_ba93e                     #  1620  0xbad72  6      OPC=je_label_1       
  movq -0x208(%rbp), %rdi         #  1621  0xbad78  7      OPC=movq_r64_m64     
  callq .L_1f8c0                  #  1622  0xbad7f  5      OPC=callq_label      
  jmpq .L_ba93e                   #  1623  0xbad84  5      OPC=jmpq_label_1     
  nop                             #  1624  0xbad89  1      OPC=nop              
  nop                             #  1625  0xbad8a  1      OPC=nop              
  nop                             #  1626  0xbad8b  1      OPC=nop              
  nop                             #  1627  0xbad8c  1      OPC=nop              
  nop                             #  1628  0xbad8d  1      OPC=nop              
  nop                             #  1629  0xbad8e  1      OPC=nop              
  nop                             #  1630  0xbad8f  1      OPC=nop              
.L_bad88:                         #        0xbad90  0      OPC=<label>          
  movq -0x210(%rbp), %r12         #  1631  0xbad90  7      OPC=movq_r64_m64     
  movq -0x220(%rbp), %r14         #  1632  0xbad97  7      OPC=movq_r64_m64     
  xorl %ebx, %ebx                 #  1633  0xbad9e  2      OPC=xorl_r32_r32     
  movl -0x228(%rbp), %r13d        #  1634  0xbada0  7      OPC=movl_r32_m32     
  movq -0x230(%rbp), %r15         #  1635  0xbada7  7      OPC=movq_r64_m64     
  jmpq .L_ba89e                   #  1636  0xbadae  5      OPC=jmpq_label_1     
.L_badab:                         #        0xbadb3  0      OPC=<label>          
  movq -0x150(%rbp), %rax         #  1637  0xbadb3  7      OPC=movq_r64_m64     
  movq %r12, -0x200(%rbp)         #  1638  0xbadba  7      OPC=movq_m64_r64     
  movq -0x220(%rbp), %r14         #  1639  0xbadc1  7      OPC=movq_r64_m64     
  movq -0x210(%rbp), %r12         #  1640  0xbadc8  7      OPC=movq_r64_m64     
  movl -0x228(%rbp), %r13d        #  1641  0xbadcf  7      OPC=movl_r32_m32     
  movq -0x230(%rbp), %r15         #  1642  0xbadd6  7      OPC=movq_r64_m64     
  testq %rax, %rax                #  1643  0xbaddd  3      OPC=testq_r64_r64    
  je .L_baf46                     #  1644  0xbade0  6      OPC=je_label_1       
  testl %ebx, %ebx                #  1645  0xbade6  2      OPC=testl_r32_r32    
  movq 0x20(%rax), %rax           #  1646  0xbade8  4      OPC=movq_r64_m64     
  jne .L_bae20                    #  1647  0xbadec  2      OPC=jne_label        
  movq %rax, -0x1d8(%rbp)         #  1648  0xbadee  7      OPC=movq_m64_r64     
  xorl %ebx, %ebx                 #  1649  0xbadf5  2      OPC=xorl_r32_r32     
  jmpq .L_ba89e                   #  1650  0xbadf7  5      OPC=jmpq_label_1     
.L_badf4:                         #        0xbadfc  0      OPC=<label>          
  movq %r12, %rdi                 #  1651  0xbadfc  3      OPC=movq_r64_r64     
  callq .L_1f8c0                  #  1652  0xbadff  5      OPC=callq_label      
  jmpq .L_ba92e                   #  1653  0xbae04  5      OPC=jmpq_label_1     
.L_bae01:                         #        0xbae09  0      OPC=<label>          
  testl %ebx, %ebx                #  1654  0xbae09  2      OPC=testl_r32_r32    
  movq %r12, -0x200(%rbp)         #  1655  0xbae0b  7      OPC=movq_m64_r64     
  je .L_ba93e                     #  1656  0xbae12  6      OPC=je_label_1       
  movq %r12, %rdi                 #  1657  0xbae18  3      OPC=movq_r64_r64     
  callq .L_1f8c0                  #  1658  0xbae1b  5      OPC=callq_label      
  jmpq .L_ba93e                   #  1659  0xbae20  5      OPC=jmpq_label_1     
  nop                             #  1660  0xbae25  1      OPC=nop              
  nop                             #  1661  0xbae26  1      OPC=nop              
  nop                             #  1662  0xbae27  1      OPC=nop              
.L_bae20:                         #        0xbae28  0      OPC=<label>          
  movq %rax, %rdi                 #  1663  0xbae28  3      OPC=movq_r64_r64     
  movq %rax, -0x1e8(%rbp)         #  1664  0xbae2b  7      OPC=movq_m64_r64     
  callq .strlen                   #  1665  0xbae32  5      OPC=callq_label      
  leaq 0x1(%rax), %rdx            #  1666  0xbae37  4      OPC=leaq_r64_m16     
  movq -0x1e0(%rbp), %rax         #  1667  0xbae3b  7      OPC=movq_r64_m64     
  leaq (%rdx,%rax,1), %rdi        #  1668  0xbae42  4      OPC=leaq_r64_m16     
  cmpq $0x1000, %rdi              #  1669  0xbae46  7      OPC=cmpq_r64_imm32   
  ja .L_baf4d                     #  1670  0xbae4d  6      OPC=ja_label_1       
.L_bae4b:                         #        0xbae53  0      OPC=<label>          
  movq %rsp, %rax                 #  1671  0xbae53  3      OPC=movq_r64_r64     
  leaq 0x1e(%rdx), %rcx           #  1672  0xbae56  4      OPC=leaq_r64_m16     
  andq $0xf0, %rcx                #  1673  0xbae5a  4      OPC=andq_r64_imm8    
  subq %rcx, %rsp                 #  1674  0xbae5e  3      OPC=subq_r64_r64     
  leaq 0xf(%rsp), %rcx            #  1675  0xbae61  5      OPC=leaq_r64_m16     
  andq $0xf0, %rcx                #  1676  0xbae66  4      OPC=andq_r64_imm8    
  movq %rcx, -0x1d8(%rbp)         #  1677  0xbae6a  7      OPC=movq_m64_r64     
  subq %rsp, %rax                 #  1678  0xbae71  3      OPC=subq_r64_r64     
  addq %rax, -0x1e0(%rbp)         #  1679  0xbae74  7      OPC=addq_m64_r64     
  xorl %ebx, %ebx                 #  1680  0xbae7b  2      OPC=xorl_r32_r32     
.L_bae75:                         #        0xbae7d  0      OPC=<label>          
  movq -0x1d8(%rbp), %rdi         #  1681  0xbae7d  7      OPC=movq_r64_m64     
  movq -0x1e8(%rbp), %rsi         #  1682  0xbae84  7      OPC=movq_r64_m64     
  callq .__GI_memcpy              #  1683  0xbae8b  5      OPC=callq_label      
  movq -0x200(%rbp), %rdi         #  1684  0xbae90  7      OPC=movq_r64_m64     
  callq .L_1f8c0                  #  1685  0xbae97  5      OPC=callq_label      
  jmpq .L_ba89e                   #  1686  0xbae9c  5      OPC=jmpq_label_1     
.L_bae99:                         #        0xbaea1  0      OPC=<label>          
  movq -0x208(%rbp), %rdi         #  1687  0xbaea1  7      OPC=movq_r64_m64     
  callq .L_1f8c0                  #  1688  0xbaea8  5      OPC=callq_label      
  jmpq .L_ba7cd                   #  1689  0xbaead  5      OPC=jmpq_label_1     
.L_baeaa:                         #        0xbaeb2  0      OPC=<label>          
  movq -0x1b0(%rbp), %rdi         #  1690  0xbaeb2  7      OPC=movq_r64_m64     
  movq %rcx, -0x1c8(%rbp)         #  1691  0xbaeb9  7      OPC=movq_m64_r64     
  callq .L_1f8c0                  #  1692  0xbaec0  5      OPC=callq_label      
  movq -0x1c8(%rbp), %rcx         #  1693  0xbaec5  7      OPC=movq_r64_m64     
  jmpq .L_ba9ff                   #  1694  0xbaecc  5      OPC=jmpq_label_1     
.L_baec9:                         #        0xbaed1  0      OPC=<label>          
  callq .__libc_alloca_cutoff     #  1695  0xbaed1  5      OPC=callq_label      
  testl %eax, %eax                #  1696  0xbaed6  2      OPC=testl_r32_r32    
  jne .L_ba984                    #  1697  0xbaed8  6      OPC=jne_label_1      
  movq -0x1e8(%rbp), %rax         #  1698  0xbaede  7      OPC=movq_r64_m64     
  leaq (%rax,%r12,1), %rdi        #  1699  0xbaee5  4      OPC=leaq_r64_m16     
  callq .memalign_plt             #  1700  0xbaee9  5      OPC=callq_label      
  testq %rax, %rax                #  1701  0xbaeee  3      OPC=testq_r64_r64    
  movq %rax, %rcx                 #  1702  0xbaef1  3      OPC=movq_r64_r64     
  je .L_baf34                     #  1703  0xbaef4  2      OPC=je_label         
  movl $0x1, %ebx                 #  1704  0xbaef6  5      OPC=movl_r32_imm32   
  jmpq .L_ba9af                   #  1705  0xbaefb  5      OPC=jmpq_label_1     
.L_baef8:                         #        0xbaf00  0      OPC=<label>          
  callq .__libc_alloca_cutoff     #  1706  0xbaf00  5      OPC=callq_label      
  testl %eax, %eax                #  1707  0xbaf05  2      OPC=testl_r32_r32    
  jne .L_baac8                    #  1708  0xbaf07  6      OPC=jne_label_1      
  movq %rbx, %rdi                 #  1709  0xbaf0d  3      OPC=movq_r64_r64     
  callq .memalign_plt             #  1710  0xbaf10  5      OPC=callq_label      
  testq %rax, %rax                #  1711  0xbaf15  3      OPC=testq_r64_r64    
  movq %rax, -0x200(%rbp)         #  1712  0xbaf18  7      OPC=movq_m64_r64     
  je .L_ba93e                     #  1713  0xbaf1f  6      OPC=je_label_1       
  movl $0x1, %ecx                 #  1714  0xbaf25  5      OPC=movl_r32_imm32   
  jmpq .L_baaf2                   #  1715  0xbaf2a  5      OPC=jmpq_label_1     
.L_baf27:                         #        0xbaf2f  0      OPC=<label>          
  movq %rax, %rdi                 #  1716  0xbaf2f  3      OPC=movq_r64_r64     
  callq .L_1f8c0                  #  1717  0xbaf32  5      OPC=callq_label      
  jmpq .L_ba5e0                   #  1718  0xbaf37  5      OPC=jmpq_label_1     
.L_baf34:                         #        0xbaf3c  0      OPC=<label>          
  testl %ebx, %ebx                #  1719  0xbaf3c  2      OPC=testl_r32_r32    
  movl $0x1, %eax                 #  1720  0xbaf3e  5      OPC=movl_r32_imm32   
  je .L_b9461                     #  1721  0xbaf43  6      OPC=je_label_1       
  jmpq .L_ba8cd                   #  1722  0xbaf49  5      OPC=jmpq_label_1     
.L_baf46:                         #        0xbaf4e  0      OPC=<label>          
  xorl %ebx, %ebx                 #  1723  0xbaf4e  2      OPC=xorl_r32_r32     
  jmpq .L_ba89e                   #  1724  0xbaf50  5      OPC=jmpq_label_1     
.L_baf4d:                         #        0xbaf55  0      OPC=<label>          
  movq %rdx, -0x1d8(%rbp)         #  1725  0xbaf55  7      OPC=movq_m64_r64     
  callq .__libc_alloca_cutoff     #  1726  0xbaf5c  5      OPC=callq_label      
  testl %eax, %eax                #  1727  0xbaf61  2      OPC=testl_r32_r32    
  movq -0x1d8(%rbp), %rdx         #  1728  0xbaf63  7      OPC=movq_r64_m64     
  jne .L_bae4b                    #  1729  0xbaf6a  6      OPC=jne_label_1      
  movq %rdx, %rdi                 #  1730  0xbaf70  3      OPC=movq_r64_r64     
  movq %rdx, -0x1f0(%rbp)         #  1731  0xbaf73  7      OPC=movq_m64_r64     
  callq .memalign_plt             #  1732  0xbaf7a  5      OPC=callq_label      
  testq %rax, %rax                #  1733  0xbaf7f  3      OPC=testq_r64_r64    
  movq %rax, -0x1d8(%rbp)         #  1734  0xbaf82  7      OPC=movq_m64_r64     
  je .L_baf94                     #  1735  0xbaf89  2      OPC=je_label         
  movl $0x1, %ebx                 #  1736  0xbaf8b  5      OPC=movl_r32_imm32   
  movq -0x1f0(%rbp), %rdx         #  1737  0xbaf90  7      OPC=movq_r64_m64     
  jmpq .L_bae75                   #  1738  0xbaf97  5      OPC=jmpq_label_1     
.L_baf94:                         #        0xbaf9c  0      OPC=<label>          
  movq -0x200(%rbp), %rdi         #  1739  0xbaf9c  7      OPC=movq_r64_m64     
  callq .L_1f8c0                  #  1740  0xbafa3  5      OPC=callq_label      
  jmpq .L_ba93e                   #  1741  0xbafa8  5      OPC=jmpq_label_1     
  nop                             #  1742  0xbafad  1      OPC=nop              
  nop                             #  1743  0xbafae  1      OPC=nop              
  nop                             #  1744  0xbafaf  1      OPC=nop              
  nop                             #  1745  0xbafb0  1      OPC=nop              
  nop                             #  1746  0xbafb1  1      OPC=nop              
  nop                             #  1747  0xbafb2  1      OPC=nop              
  nop                             #  1748  0xbafb3  1      OPC=nop              
  nop                             #  1749  0xbafb4  1      OPC=nop              
  nop                             #  1750  0xbafb5  1      OPC=nop              
  nop                             #  1751  0xbafb6  1      OPC=nop              
  nop                             #  1752  0xbafb7  1      OPC=nop              
                                                                                
.size glob, .-glob

