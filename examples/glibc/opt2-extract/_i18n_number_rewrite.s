  .text
  .globl _i18n_number_rewrite
  .type _i18n_number_rewrite, @function

#! file-offset 0x4f300
#! rip-offset  0x4f300
#! capacity    384 bytes

# Text                         #  Line  RIP      Bytes  Opcode               
._i18n_number_rewrite:         #        0x4f300  0      OPC=<label>          
  pushq %rbp                   #  1     0x4f300  1      OPC=pushq_r64_1      
  movq %rsp, %rbp              #  2     0x4f301  3      OPC=movq_r64_r64     
  pushq %r15                   #  3     0x4f304  2      OPC=pushq_r64_1      
  pushq %r14                   #  4     0x4f306  2      OPC=pushq_r64_1      
  pushq %r13                   #  5     0x4f308  2      OPC=pushq_r64_1      
  pushq %r12                   #  6     0x4f30a  2      OPC=pushq_r64_1      
  movq %rdi, %r13              #  7     0x4f30c  3      OPC=movq_r64_r64     
  pushq %rbx                   #  8     0x4f30f  1      OPC=pushq_r64_1      
  movq %rsi, %rbx              #  9     0x4f310  3      OPC=movq_r64_r64     
  subq %r13, %rbx              #  10    0x4f313  3      OPC=subq_r64_r64     
  subq $0x18, %rsp             #  11    0x4f316  4      OPC=subq_r64_imm8    
  movq %rdi, -0x38(%rbp)       #  12    0x4f31a  4      OPC=movq_m64_r64     
  leaq 0x114683(%rip), %rdi    #  13    0x4f31e  7      OPC=leaq_r64_m16     
  movq %rdx, -0x40(%rbp)       #  14    0x4f325  4      OPC=movq_m64_r64     
  movq %rbx, %r13              #  15    0x4f329  3      OPC=movq_r64_r64     
  callq .wctrans               #  16    0x4f32c  5      OPC=callq_label      
  movl $0x2e, %edi             #  17    0x4f331  5      OPC=movl_r32_imm32   
  movq %rax, %r15              #  18    0x4f336  3      OPC=movq_r64_r64     
  movq %rax, %rsi              #  19    0x4f339  3      OPC=movq_r64_r64     
  callq .__towctrans           #  20    0x4f33c  5      OPC=callq_label      
  movq %r15, %rsi              #  21    0x4f341  3      OPC=movq_r64_r64     
  movl $0x2c, %edi             #  22    0x4f344  5      OPC=movl_r32_imm32   
  movl %eax, %r12d             #  23    0x4f349  3      OPC=movl_r32_r32     
  callq .__towctrans           #  24    0x4f34c  5      OPC=callq_label      
  cmpq $0x1000, %rbx           #  25    0x4f351  7      OPC=cmpq_r64_imm32   
  movl %eax, %r14d             #  26    0x4f358  3      OPC=movl_r32_r32     
  jbe .L_4f36f                 #  27    0x4f35b  2      OPC=jbe_label        
  movq %rbx, %rdi              #  28    0x4f35d  3      OPC=movq_r64_r64     
  callq .__libc_alloca_cutoff  #  29    0x4f360  5      OPC=callq_label      
  testl %eax, %eax             #  30    0x4f365  2      OPC=testl_r32_r32    
  movl %eax, %ebx              #  31    0x4f367  2      OPC=movl_r32_r32     
  je .L_4f438                  #  32    0x4f369  6      OPC=je_label_1       
.L_4f36f:                      #        0x4f36f  0      OPC=<label>          
  leaq 0x1e(%r13), %rax        #  33    0x4f36f  4      OPC=leaq_r64_m16     
  movl $0x1, %ebx              #  34    0x4f373  5      OPC=movl_r32_imm32   
  andq $0xf0, %rax             #  35    0x4f378  4      OPC=andq_r64_imm8    
  subq %rax, %rsp              #  36    0x4f37c  3      OPC=subq_r64_r64     
  leaq 0xf(%rsp), %r8          #  37    0x4f37f  5      OPC=leaq_r64_m16     
  andq $0xf0, %r8              #  38    0x4f384  4      OPC=andq_r64_imm8    
.L_4f388:                      #        0x4f388  0      OPC=<label>          
  movq -0x38(%rbp), %rsi       #  39    0x4f388  4      OPC=movq_r64_m64     
  movq %r13, %rdx              #  40    0x4f38c  3      OPC=movq_r64_r64     
  movq %r8, %rdi               #  41    0x4f38f  3      OPC=movq_r64_r64     
  callq .__GI_memcpy           #  42    0x4f392  5      OPC=callq_label      
  leaq (%rax,%r13,1), %rdx     #  43    0x4f397  4      OPC=leaq_r64_m16     
  movq %rax, %r8               #  44    0x4f39b  3      OPC=movq_r64_r64     
  movq -0x40(%rbp), %r13       #  45    0x4f39e  4      OPC=movq_r64_m64     
  movq 0x34ba37(%rip), %rax    #  46    0x4f3a2  7      OPC=movq_r64_m64     
  subq $0x4, %r13              #  47    0x4f3a9  4      OPC=subq_r64_imm8    
  movq (%rax), %rsi            #  48    0x4f3ad  3      OPC=movq_r64_m64     
  nop                          #  49    0x4f3b0  1      OPC=nop              
  jmpq .L_4f3ca                #  50    0x4f3b1  2      OPC=jmpq_label       
  nop                          #  51    0x4f3b3  1      OPC=nop              
  nop                          #  52    0x4f3b4  1      OPC=nop              
  nop                          #  53    0x4f3b5  1      OPC=nop              
  nop                          #  54    0x4f3b6  1      OPC=nop              
  nop                          #  55    0x4f3b7  1      OPC=nop              
.L_4f3b8:                      #        0x4f3b8  0      OPC=<label>          
  cmpl $0x2e, %ecx             #  56    0x4f3b8  3      OPC=cmpl_r32_imm8    
  movl %r12d, %eax             #  57    0x4f3bb  3      OPC=movl_r32_r32     
  cmovnel %r14d, %eax          #  58    0x4f3be  4      OPC=cmovnel_r32_r32  
  movl %eax, (%r13)            #  59    0x4f3c2  4      OPC=movl_m32_r32     
.L_4f3c6:                      #        0x4f3c6  0      OPC=<label>          
  subq $0x4, %r13              #  60    0x4f3c6  4      OPC=subq_r64_imm8    
.L_4f3ca:                      #        0x4f3ca  0      OPC=<label>          
  subq $0x4, %rdx              #  61    0x4f3ca  4      OPC=subq_r64_imm8    
  leaq 0x4(%r13), %rax         #  62    0x4f3ce  4      OPC=leaq_r64_m16     
  cmpq %rdx, %r8               #  63    0x4f3d2  3      OPC=cmpq_r64_r64     
  ja .L_4f420                  #  64    0x4f3d5  2      OPC=ja_label         
  movl (%rdx), %ecx            #  65    0x4f3d7  2      OPC=movl_r32_m32     
  leal -0x30(%rcx), %eax       #  66    0x4f3d9  3      OPC=leal_r32_m16     
  cmpl $0x9, %eax              #  67    0x4f3dc  3      OPC=cmpl_r32_imm8    
  jbe .L_4f400                 #  68    0x4f3df  2      OPC=jbe_label        
  testq %r15, %r15             #  69    0x4f3e1  3      OPC=testq_r64_r64    
  je .L_4f3f0                  #  70    0x4f3e4  2      OPC=je_label         
  movl %ecx, %eax              #  71    0x4f3e6  2      OPC=movl_r32_r32     
  andl $0xfffffffd, %eax       #  72    0x4f3e8  6      OPC=andl_r32_imm32   
  nop                          #  73    0x4f3ee  1      OPC=nop              
  nop                          #  74    0x4f3ef  1      OPC=nop              
  nop                          #  75    0x4f3f0  1      OPC=nop              
  cmpl $0x2c, %eax             #  76    0x4f3f1  3      OPC=cmpl_r32_imm8    
  je .L_4f3b8                  #  77    0x4f3f4  2      OPC=je_label         
.L_4f3f0:                      #        0x4f3f6  0      OPC=<label>          
  movl %ecx, (%r13)            #  78    0x4f3f6  4      OPC=movl_m32_r32     
  jmpq .L_4f3c6                #  79    0x4f3fa  2      OPC=jmpq_label       
  nop                          #  80    0x4f3fc  1      OPC=nop              
  nop                          #  81    0x4f3fd  1      OPC=nop              
  nop                          #  82    0x4f3fe  1      OPC=nop              
  nop                          #  83    0x4f3ff  1      OPC=nop              
  nop                          #  84    0x4f400  1      OPC=nop              
  nop                          #  85    0x4f401  1      OPC=nop              
  nop                          #  86    0x4f402  1      OPC=nop              
  nop                          #  87    0x4f403  1      OPC=nop              
  nop                          #  88    0x4f404  1      OPC=nop              
  nop                          #  89    0x4f405  1      OPC=nop              
.L_4f400:                      #        0x4f406  0      OPC=<label>          
  movq (%rsi), %rax            #  90    0x4f406  3      OPC=movq_r64_m64     
  addl $0x3, %ecx              #  91    0x4f409  3      OPC=addl_r32_imm8    
  movslq %ecx, %rcx            #  92    0x4f40c  3      OPC=movslq_r64_r32   
  addq $0x8, %rcx              #  93    0x4f40f  4      OPC=addq_r64_imm8    
  movl (%rax,%rcx,8), %eax     #  94    0x4f413  3      OPC=movl_r32_m32     
  movl %eax, (%r13)            #  95    0x4f416  4      OPC=movl_m32_r32     
  jmpq .L_4f3c6                #  96    0x4f41a  2      OPC=jmpq_label       
  nop                          #  97    0x4f41c  1      OPC=nop              
  nop                          #  98    0x4f41d  1      OPC=nop              
  nop                          #  99    0x4f41e  1      OPC=nop              
  nop                          #  100   0x4f41f  1      OPC=nop              
  nop                          #  101   0x4f420  1      OPC=nop              
  nop                          #  102   0x4f421  1      OPC=nop              
  nop                          #  103   0x4f422  1      OPC=nop              
  nop                          #  104   0x4f423  1      OPC=nop              
  nop                          #  105   0x4f424  1      OPC=nop              
  nop                          #  106   0x4f425  1      OPC=nop              
.L_4f420:                      #        0x4f426  0      OPC=<label>          
  testl %ebx, %ebx             #  107   0x4f426  2      OPC=testl_r32_r32    
  je .L_4f458                  #  108   0x4f428  2      OPC=je_label         
.L_4f424:                      #        0x4f42a  0      OPC=<label>          
  leaq -0x28(%rbp), %rsp       #  109   0x4f42a  4      OPC=leaq_r64_m16     
  popq %rbx                    #  110   0x4f42e  1      OPC=popq_r64_1       
  popq %r12                    #  111   0x4f42f  2      OPC=popq_r64_1       
  popq %r13                    #  112   0x4f431  2      OPC=popq_r64_1       
  popq %r14                    #  113   0x4f433  2      OPC=popq_r64_1       
  popq %r15                    #  114   0x4f435  2      OPC=popq_r64_1       
  popq %rbp                    #  115   0x4f437  1      OPC=popq_r64_1       
  retq                         #  116   0x4f438  1      OPC=retq             
  nop                          #  117   0x4f439  1      OPC=nop              
  nop                          #  118   0x4f43a  1      OPC=nop              
  nop                          #  119   0x4f43b  1      OPC=nop              
  nop                          #  120   0x4f43c  1      OPC=nop              
  nop                          #  121   0x4f43d  1      OPC=nop              
.L_4f438:                      #        0x4f43e  0      OPC=<label>          
  movq %r13, %rdi              #  122   0x4f43e  3      OPC=movq_r64_r64     
  callq .memalign_plt          #  123   0x4f441  5      OPC=callq_label      
  testq %rax, %rax             #  124   0x4f446  3      OPC=testq_r64_r64    
  movq %rax, %r8               #  125   0x4f449  3      OPC=movq_r64_r64     
  jne .L_4f388                 #  126   0x4f44c  6      OPC=jne_label_1      
  movq -0x38(%rbp), %rax       #  127   0x4f452  4      OPC=movq_r64_m64     
  jmpq .L_4f424                #  128   0x4f456  2      OPC=jmpq_label       
  nop                          #  129   0x4f458  1      OPC=nop              
  nop                          #  130   0x4f459  1      OPC=nop              
  nop                          #  131   0x4f45a  1      OPC=nop              
  nop                          #  132   0x4f45b  1      OPC=nop              
  nop                          #  133   0x4f45c  1      OPC=nop              
  nop                          #  134   0x4f45d  1      OPC=nop              
.L_4f458:                      #        0x4f45e  0      OPC=<label>          
  movq %r8, %rdi               #  135   0x4f45e  3      OPC=movq_r64_r64     
  movq %rax, -0x38(%rbp)       #  136   0x4f461  4      OPC=movq_m64_r64     
  callq .L_1f8c0               #  137   0x4f465  5      OPC=callq_label      
  movq -0x38(%rbp), %rax       #  138   0x4f46a  4      OPC=movq_r64_m64     
  leaq -0x28(%rbp), %rsp       #  139   0x4f46e  4      OPC=leaq_r64_m16     
  popq %rbx                    #  140   0x4f472  1      OPC=popq_r64_1       
  popq %r12                    #  141   0x4f473  2      OPC=popq_r64_1       
  popq %r13                    #  142   0x4f475  2      OPC=popq_r64_1       
  popq %r14                    #  143   0x4f477  2      OPC=popq_r64_1       
  popq %r15                    #  144   0x4f479  2      OPC=popq_r64_1       
  popq %rbp                    #  145   0x4f47b  1      OPC=popq_r64_1       
  retq                         #  146   0x4f47c  1      OPC=retq             
  nop                          #  147   0x4f47d  1      OPC=nop              
  nop                          #  148   0x4f47e  1      OPC=nop              
  nop                          #  149   0x4f47f  1      OPC=nop              
  nop                          #  150   0x4f480  1      OPC=nop              
  nop                          #  151   0x4f481  1      OPC=nop              
  nop                          #  152   0x4f482  1      OPC=nop              
  nop                          #  153   0x4f483  1      OPC=nop              
  nop                          #  154   0x4f484  1      OPC=nop              
  nop                          #  155   0x4f485  1      OPC=nop              
                                                                             
.size _i18n_number_rewrite, .-_i18n_number_rewrite

