  .text
  .globl bindresvport
  .type bindresvport, @function

#! file-offset 0x106f80
#! rip-offset  0x106f80
#! capacity    544 bytes

# Text                              #  Line  RIP       Bytes  Opcode                   
.bindresvport:                      #        0x106f80  0      OPC=<label>              
  pushq %r14                        #  1     0x106f80  2      OPC=pushq_r64_1          
  pushq %r13                        #  2     0x106f82  2      OPC=pushq_r64_1          
  movl %edi, %r13d                  #  3     0x106f84  3      OPC=movl_r32_r32         
  pushq %r12                        #  4     0x106f87  2      OPC=pushq_r64_1          
  pushq %rbp                        #  5     0x106f89  1      OPC=pushq_r64_1          
  pushq %rbx                        #  6     0x106f8a  1      OPC=pushq_r64_1          
  movq %rsi, %rbx                   #  7     0x106f8b  3      OPC=movq_r64_r64         
  subq $0x10, %rsp                  #  8     0x106f8e  4      OPC=subq_r64_imm8        
  testq %rsi, %rsi                  #  9     0x106f92  3      OPC=testq_r64_r64        
  je .L_10717b                      #  10    0x106f95  6      OPC=je_label_1           
  cmpw $0x2, (%rsi)                 #  11    0x106f9b  4      OPC=cmpw_m16_imm8        
  jne .L_10715b                     #  12    0x106f9f  6      OPC=jne_label_1          
.L_106fa5:                          #        0x106fa5  0      OPC=<label>              
  cmpw $0x0, 0x299273(%rip)         #  13    0x106fa5  8      OPC=cmpw_m16_imm8        
  je .L_107129                      #  14    0x106fad  6      OPC=je_label_1           
.L_106fb3:                          #        0x106fb3  0      OPC=<label>              
  movswl 0x294412(%rip), %eax       #  15    0x106fb3  7      OPC=movswl_r32_m16       
  movl $0x400, %ebp                 #  16    0x106fba  5      OPC=movl_r32_imm32       
  movl $0x1, %esi                   #  17    0x106fbf  5      OPC=movl_r32_imm32       
  subl %eax, %ebp                   #  18    0x106fc4  2      OPC=subl_r32_r32         
  xorl %eax, %eax                   #  19    0x106fc6  2      OPC=xorl_r32_r32         
  cmpl $0x0, 0x299c31(%rip)         #  20    0x106fc8  7      OPC=cmpl_m32_imm8        
  je .L_106fdd                      #  21    0x106fcf  2      OPC=je_label             
  lock                              #  22    0x106fd1  1      OPC=lock                 
  cmpxchgl %esi, 0x29924b(%rip)     #  23    0x106fd2  7      OPC=cmpxchgl_m32_r32     
  nop                               #  24    0x106fd9  1      OPC=nop                  
  jne .L_106fe6                     #  25    0x106fda  2      OPC=jne_label            
  jmpq .L_107000                    #  26    0x106fdc  2      OPC=jmpq_label           
.L_106fdd:                          #        0x106fde  0      OPC=<label>              
  cmpxchgl %esi, 0x299240(%rip)     #  27    0x106fde  7      OPC=cmpxchgl_m32_r32     
  je .L_107000                      #  28    0x106fe5  2      OPC=je_label             
.L_106fe6:                          #        0x106fe7  0      OPC=<label>              
  leaq 0x299237(%rip), %rdi         #  29    0x106fe7  7      OPC=leaq_r64_m16         
  subq $0x80, %rsp                  #  30    0x106fee  7      OPC=subq_r64_imm32       
  callq .__lll_lock_wait_private    #  31    0x106ff5  5      OPC=callq_label          
  addq $0x80, %rsp                  #  32    0x106ffa  7      OPC=addq_r64_imm32       
.L_107000:                          #        0x107001  0      OPC=<label>              
  testl %ebp, %ebp                  #  33    0x107001  2      OPC=testl_r32_r32        
  movl $0x3ff, %r12d                #  34    0x107003  6      OPC=movl_r32_imm32       
  movl $0xffffffff, %edx            #  35    0x107009  6      OPC=movl_r32_imm32_1     
  jle .L_107121                     #  36    0x10700f  6      OPC=jle_label_1          
  nop                               #  37    0x107015  1      OPC=nop                  
  nop                               #  38    0x107016  1      OPC=nop                  
  nop                               #  39    0x107017  1      OPC=nop                  
  nop                               #  40    0x107018  1      OPC=nop                  
  nop                               #  41    0x107019  1      OPC=nop                  
.L_107018:                          #        0x10701a  0      OPC=<label>              
  xorl %r14d, %r14d                 #  42    0x10701a  3      OPC=xorl_r32_r32         
  jmpq .L_107036                    #  43    0x10701d  2      OPC=jmpq_label           
  nop                               #  44    0x10701f  1      OPC=nop                  
  nop                               #  45    0x107020  1      OPC=nop                  
  nop                               #  46    0x107021  1      OPC=nop                  
.L_107020:                          #        0x107022  0      OPC=<label>              
  movq 0x293e59(%rip), %rax         #  47    0x107022  7      OPC=movq_r64_m64         
  cmpl $0x62, (%rax)                #  48    0x107029  3      OPC=cmpl_m32_imm8        
  nop                               #  49    0x10702c  1      OPC=nop                  
  jne .L_10707b                     #  50    0x10702d  2      OPC=jne_label            
  addl $0x1, %r14d                  #  51    0x10702f  4      OPC=addl_r32_imm8        
  cmpl %ebp, %r14d                  #  52    0x107033  3      OPC=cmpl_r32_r32         
  je .L_107080                      #  53    0x107036  2      OPC=je_label             
.L_107036:                          #        0x107038  0      OPC=<label>              
  movzwl 0x2991e3(%rip), %eax       #  54    0x107038  7      OPC=movzwl_r32_m16       
  leal 0x1(%rax), %edx              #  55    0x10703f  3      OPC=leal_r32_m16         
  rorw $0x8, %ax                    #  56    0x107042  4      OPC=rorw_r16_imm8        
  movw %dx, 0x2991d5(%rip)          #  57    0x107046  7      OPC=movw_m16_r16         
  movswl %dx, %edx                  #  58    0x10704d  3      OPC=movswl_r32_r16       
  movw %ax, 0x2(%rbx)               #  59    0x107050  4      OPC=movw_m16_r16         
  cmpl %edx, %r12d                  #  60    0x107054  3      OPC=cmpl_r32_r32         
  jge .L_107065                     #  61    0x107057  2      OPC=jge_label            
  movzwl 0x29436e(%rip), %eax       #  62    0x107059  7      OPC=movzwl_r32_m16       
  movw %ax, 0x2991bb(%rip)          #  63    0x107060  7      OPC=movw_m16_r16         
.L_107065:                          #        0x107067  0      OPC=<label>              
  movl $0x10, %edx                  #  64    0x107067  5      OPC=movl_r32_imm32       
  movq %rbx, %rsi                   #  65    0x10706c  3      OPC=movq_r64_r64         
  movl %r13d, %edi                  #  66    0x10706f  3      OPC=movl_r32_r32         
  callq .bind                       #  67    0x107072  5      OPC=callq_label          
  testl %eax, %eax                  #  68    0x107077  2      OPC=testl_r32_r32        
  movl %eax, %edx                   #  69    0x107079  2      OPC=movl_r32_r32         
  js .L_107020                      #  70    0x10707b  2      OPC=js_label             
.L_10707b:                          #        0x10707d  0      OPC=<label>              
  cmpl %ebp, %r14d                  #  71    0x10707d  3      OPC=cmpl_r32_r32         
  jne .L_1070dc                     #  72    0x107080  2      OPC=jne_label            
.L_107080:                          #        0x107082  0      OPC=<label>              
  cmpw $0x200, 0x294343(%rip)       #  73    0x107082  9      OPC=cmpw_m16_imm16       
  je .L_1070dc                      #  74    0x10708b  2      OPC=je_label             
  movl $0x200, %eax                 #  75    0x10708d  5      OPC=movl_r32_imm32       
  movl $0x58, %ebp                  #  76    0x107092  5      OPC=movl_r32_imm32       
  movl $0x257, %r12d                #  77    0x107097  6      OPC=movl_r32_imm32       
  movw %ax, 0x29432a(%rip)          #  78    0x10709d  7      OPC=movw_m16_r16         
  movswl 0x299177(%rip), %eax       #  79    0x1070a4  7      OPC=movswl_r32_m16       
  movl %eax, %edx                   #  80    0x1070ab  2      OPC=movl_r32_r32         
  imull $0xba3, %eax, %eax          #  81    0x1070ad  6      OPC=imull_r32_r32_imm32  
  movl %edx, %ecx                   #  82    0x1070b3  2      OPC=movl_r32_r32         
  sarw $0xf, %cx                    #  83    0x1070b5  4      OPC=sarw_r16_imm8        
  shrl $0x10, %eax                  #  84    0x1070b9  3      OPC=shrl_r32_imm8        
  sarw $0x2, %ax                    #  85    0x1070bc  4      OPC=sarw_r16_imm8        
  subl %ecx, %eax                   #  86    0x1070c0  2      OPC=subl_r32_r32         
  leal (%rax,%rax,4), %ecx          #  87    0x1070c2  3      OPC=leal_r32_m16         
  leal (%rax,%rcx,2), %eax          #  88    0x1070c5  3      OPC=leal_r32_m16         
  shll $0x3, %eax                   #  89    0x1070c8  3      OPC=shll_r32_imm8        
  subl %eax, %edx                   #  90    0x1070cb  2      OPC=subl_r32_r32         
  addw $0x200, %dx                  #  91    0x1070cd  5      OPC=addw_r16_imm16       
  movw %dx, 0x299149(%rip)          #  92    0x1070d2  7      OPC=movw_m16_r16         
  jmpq .L_107018                    #  93    0x1070d9  5      OPC=jmpq_label_1         
.L_1070dc:                          #        0x1070de  0      OPC=<label>              
  cmpl $0x0, 0x299b1d(%rip)         #  94    0x1070de  7      OPC=cmpl_m32_imm8        
  je .L_1070f0                      #  95    0x1070e5  2      OPC=je_label             
  lock                              #  96    0x1070e7  1      OPC=lock                 
  decl 0x299138(%rip)               #  97    0x1070e8  6      OPC=decl_m32             
  nop                               #  98    0x1070ee  1      OPC=nop                  
  jne .L_1070f8                     #  99    0x1070ef  2      OPC=jne_label            
  jmpq .L_107112                    #  100   0x1070f1  2      OPC=jmpq_label           
.L_1070f0:                          #        0x1070f3  0      OPC=<label>              
  decl 0x29912e(%rip)               #  101   0x1070f3  6      OPC=decl_m32             
  je .L_107112                      #  102   0x1070f9  2      OPC=je_label             
.L_1070f8:                          #        0x1070fb  0      OPC=<label>              
  leaq 0x299125(%rip), %rdi         #  103   0x1070fb  7      OPC=leaq_r64_m16         
  subq $0x80, %rsp                  #  104   0x107102  7      OPC=subq_r64_imm32       
  callq .__lll_unlock_wake_private  #  105   0x107109  5      OPC=callq_label          
  addq $0x80, %rsp                  #  106   0x10710e  7      OPC=addq_r64_imm32       
.L_107112:                          #        0x107115  0      OPC=<label>              
  addq $0x10, %rsp                  #  107   0x107115  4      OPC=addq_r64_imm8        
  movl %edx, %eax                   #  108   0x107119  2      OPC=movl_r32_r32         
  popq %rbx                         #  109   0x10711b  1      OPC=popq_r64_1           
  popq %rbp                         #  110   0x10711c  1      OPC=popq_r64_1           
  popq %r12                         #  111   0x10711d  2      OPC=popq_r64_1           
  popq %r13                         #  112   0x10711f  2      OPC=popq_r64_1           
  popq %r14                         #  113   0x107121  2      OPC=popq_r64_1           
  retq                              #  114   0x107123  1      OPC=retq                 
.L_107121:                          #        0x107124  0      OPC=<label>              
  xorl %r14d, %r14d                 #  115   0x107124  3      OPC=xorl_r32_r32         
  jmpq .L_10707b                    #  116   0x107127  5      OPC=jmpq_label_1         
.L_107129:                          #        0x10712c  0      OPC=<label>              
  callq .__getpid                   #  117   0x10712c  5      OPC=callq_label          
  movl $0x4d4873ed, %edx            #  118   0x107131  5      OPC=movl_r32_imm32       
  movl %eax, %ecx                   #  119   0x107136  2      OPC=movl_r32_r32         
  imull %edx                        #  120   0x107138  2      OPC=imull_r32            
  movl %ecx, %eax                   #  121   0x10713a  2      OPC=movl_r32_r32         
  sarl $0x1f, %eax                  #  122   0x10713c  3      OPC=sarl_r32_imm8        
  sarl $0x7, %edx                   #  123   0x10713f  3      OPC=sarl_r32_imm8        
  subl %eax, %edx                   #  124   0x107142  2      OPC=subl_r32_r32         
  imull $0x1a8, %edx, %edx          #  125   0x107144  6      OPC=imull_r32_r32_imm32  
  subl %edx, %ecx                   #  126   0x10714a  2      OPC=subl_r32_r32         
  leal 0x258(%rcx), %eax            #  127   0x10714c  6      OPC=leal_r32_m16         
  movw %ax, 0x2990ca(%rip)          #  128   0x107152  7      OPC=movw_m16_r16         
  jmpq .L_106fb3                    #  129   0x107159  5      OPC=jmpq_label_1         
.L_10715b:                          #        0x10715e  0      OPC=<label>              
  movq 0x293d1e(%rip), %rax         #  130   0x10715e  7      OPC=movq_r64_m64         
  movl $0x61, (%rax)                #  131   0x107165  6      OPC=movl_m32_imm32       
  nop                               #  132   0x10716b  1      OPC=nop                  
  addq $0x10, %rsp                  #  133   0x10716c  4      OPC=addq_r64_imm8        
  movl $0xffffffff, %eax            #  134   0x107170  6      OPC=movl_r32_imm32_1     
  popq %rbx                         #  135   0x107176  1      OPC=popq_r64_1           
  popq %rbp                         #  136   0x107177  1      OPC=popq_r64_1           
  popq %r12                         #  137   0x107178  2      OPC=popq_r64_1           
  popq %r13                         #  138   0x10717a  2      OPC=popq_r64_1           
  popq %r14                         #  139   0x10717c  2      OPC=popq_r64_1           
  retq                              #  140   0x10717e  1      OPC=retq                 
.L_10717b:                          #        0x10717f  0      OPC=<label>              
  movl $0x2, %edx                   #  141   0x10717f  5      OPC=movl_r32_imm32       
  movq $0x0, (%rsp)                 #  142   0x107184  8      OPC=movq_m64_imm32       
  movq $0x0, 0x8(%rsp)              #  143   0x10718c  9      OPC=movq_m64_imm32       
  movw %dx, (%rsp)                  #  144   0x107195  4      OPC=movw_m16_r16         
  movq %rsp, %rbx                   #  145   0x107199  3      OPC=movq_r64_r64         
  jmpq .L_106fa5                    #  146   0x10719c  5      OPC=jmpq_label_1         
  nop                               #  147   0x1071a1  1      OPC=nop                  
  nop                               #  148   0x1071a2  1      OPC=nop                  
  nop                               #  149   0x1071a3  1      OPC=nop                  
                                                                                       
.size bindresvport, .-bindresvport

