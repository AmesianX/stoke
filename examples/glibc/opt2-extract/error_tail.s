  .text
  .globl error_tail
  .type error_tail, @function

#! file-offset 0xe46d0
#! rip-offset  0xe46d0
#! capacity    544 bytes

# Text                            #  Line  RIP      Bytes  Opcode               
.error_tail:                      #        0xe46d0  0      OPC=<label>          
  pushq %rbp                      #  1     0xe46d0  1      OPC=pushq_r64_1      
  movq %rsp, %rbp                 #  2     0xe46d1  3      OPC=movq_r64_r64     
  pushq %r15                      #  3     0xe46d4  2      OPC=pushq_r64_1      
  pushq %r14                      #  4     0xe46d6  2      OPC=pushq_r64_1      
  pushq %r13                      #  5     0xe46d8  2      OPC=pushq_r64_1      
  pushq %r12                      #  6     0xe46da  2      OPC=pushq_r64_1      
  movq %rdx, %r14                 #  7     0xe46dc  3      OPC=movq_r64_r64     
  pushq %rbx                      #  8     0xe46df  1      OPC=pushq_r64_1      
  subq $0x38, %rsp                #  9     0xe46e0  4      OPC=subq_r64_imm8    
  movq 0x2b66d5(%rip), %rax       #  10    0xe46e4  7      OPC=movq_r64_m64     
  movl %edi, -0x50(%rbp)          #  11    0xe46eb  3      OPC=movl_m32_r32     
  movq %rcx, -0x58(%rbp)          #  12    0xe46ee  4      OPC=movq_m64_r64     
  movl %esi, -0x4c(%rbp)          #  13    0xe46f2  3      OPC=movl_m32_r32     
  movq (%rax), %rdi               #  14    0xe46f5  3      OPC=movq_r64_m64     
  movl 0xc0(%rdi), %ecx           #  15    0xe46f8  6      OPC=movl_r32_m32     
  testl %ecx, %ecx                #  16    0xe46fe  2      OPC=testl_r32_r32    
  jle .L_e48a0                    #  17    0xe4700  6      OPC=jle_label_1      
  movq %rdx, %rdi                 #  18    0xe4706  3      OPC=movq_r64_r64     
  xorl %r15d, %r15d               #  19    0xe4709  3      OPC=xorl_r32_r32     
  xorl %ebx, %ebx                 #  20    0xe470c  2      OPC=xorl_r32_r32     
  callq .strlen                   #  21    0xe470e  5      OPC=callq_label      
  leaq 0x1(%rax), %r12            #  22    0xe4713  4      OPC=leaq_r64_m16     
  leaq -0x38(%rbp), %rax          #  23    0xe4717  4      OPC=leaq_r64_m16     
  leaq -0x40(%rbp), %r13          #  24    0xe471b  4      OPC=leaq_r64_m16     
  movq %rax, -0x48(%rbp)          #  25    0xe471f  4      OPC=movq_m64_r64     
  jmpq .L_e477f                   #  26    0xe4723  2      OPC=jmpq_label       
  nop                             #  27    0xe4725  1      OPC=nop              
  nop                             #  28    0xe4726  1      OPC=nop              
  nop                             #  29    0xe4727  1      OPC=nop              
.L_e4728:                         #        0xe4728  0      OPC=<label>          
  leaq 0x1e(%rsi), %rax           #  30    0xe4728  4      OPC=leaq_r64_m16     
  movl $0x10, %ecx                #  31    0xe472c  5      OPC=movl_r32_imm32   
  xorl %edx, %edx                 #  32    0xe4731  2      OPC=xorl_r32_r32     
  divq %rcx                       #  33    0xe4733  3      OPC=divq_r64         
  shlq $0x4, %rax                 #  34    0xe4736  4      OPC=shlq_r64_imm8    
  subq %rax, %rsp                 #  35    0xe473a  3      OPC=subq_r64_r64     
  leaq 0xf(%rsp), %rbx            #  36    0xe473d  5      OPC=leaq_r64_m16     
  andq $0xf0, %rbx                #  37    0xe4742  4      OPC=andq_r64_imm8    
.L_e4746:                         #        0xe4746  0      OPC=<label>          
  movq -0x48(%rbp), %rsi          #  38    0xe4746  4      OPC=movq_r64_m64     
  movq $0x0, (%r13)               #  39    0xe474a  8      OPC=movq_m64_imm32   
  movq %r13, %rcx                 #  40    0xe4752  3      OPC=movq_r64_r64     
  movq %r12, %rdx                 #  41    0xe4755  3      OPC=movq_r64_r64     
  movq %rbx, %rdi                 #  42    0xe4758  3      OPC=movq_r64_r64     
  movq %r14, -0x38(%rbp)          #  43    0xe475b  4      OPC=movq_m64_r64     
  callq .mbsrtowcs                #  44    0xe475f  5      OPC=callq_label      
  cmpq %rax, %r12                 #  45    0xe4764  3      OPC=cmpq_r64_r64     
  jne .L_e4860                    #  46    0xe4767  6      OPC=jne_label_1      
  movq $0x1ffffffffffffffe, %rax  #  47    0xe476d  10     OPC=movq_r64_imm64   
  cmpq %rax, %r12                 #  48    0xe4777  3      OPC=cmpq_r64_r64     
  ja .L_e47d0                     #  49    0xe477a  2      OPC=ja_label         
  addq %r12, %r12                 #  50    0xe477c  3      OPC=addq_r64_r64     
.L_e477f:                         #        0xe477f  0      OPC=<label>          
  leaq (,%r12,4), %rsi            #  51    0xe477f  8      OPC=leaq_r64_m16     
  cmpq $0x1000, %rsi              #  52    0xe4787  7      OPC=cmpq_r64_imm32   
  jbe .L_e4728                    #  53    0xe478e  2      OPC=jbe_label        
  movq %rsi, %rdi                 #  54    0xe4790  3      OPC=movq_r64_r64     
  movq %rsi, -0x60(%rbp)          #  55    0xe4793  4      OPC=movq_m64_r64     
  callq .__libc_alloca_cutoff     #  56    0xe4797  5      OPC=callq_label      
  testl %eax, %eax                #  57    0xe479c  2      OPC=testl_r32_r32    
  movq -0x60(%rbp), %rsi          #  58    0xe479e  4      OPC=movq_r64_m64     
  jne .L_e4728                    #  59    0xe47a2  2      OPC=jne_label        
  testb %r15b, %r15b              #  60    0xe47a4  3      OPC=testb_r8_r8      
  movl $0x0, %r15d                #  61    0xe47a7  6      OPC=movl_r32_imm32   
  cmovneq %rbx, %r15              #  62    0xe47ad  4      OPC=cmovneq_r64_r64  
  movq %r15, %rdi                 #  63    0xe47b1  3      OPC=movq_r64_r64     
  callq .__tls_get_addr_plt       #  64    0xe47b4  5      OPC=callq_label      
  testq %rax, %rax                #  65    0xe47b9  3      OPC=testq_r64_r64    
  movq %rax, %rbx                 #  66    0xe47bc  3      OPC=movq_r64_r64     
  je .L_e48b1                     #  67    0xe47bf  6      OPC=je_label_1       
  movl $0x1, %r15d                #  68    0xe47c5  6      OPC=movl_r32_imm32   
  jmpq .L_e4746                   #  69    0xe47cb  5      OPC=jmpq_label_1     
.L_e47d0:                         #        0xe47d0  0      OPC=<label>          
  testb %r15b, %r15b              #  70    0xe47d0  3      OPC=testb_r8_r8      
  jne .L_e4850                    #  71    0xe47d3  2      OPC=jne_label        
.L_e47d5:                         #        0xe47d5  0      OPC=<label>          
  movq 0x2b65e4(%rip), %rax       #  72    0xe47d5  7      OPC=movq_r64_m64     
  movq -0x58(%rbp), %rdx          #  73    0xe47dc  4      OPC=movq_r64_m64     
  leaq 0x86735(%rip), %rsi        #  74    0xe47e0  7      OPC=leaq_r64_m16     
  movq (%rax), %rdi               #  75    0xe47e7  3      OPC=movq_r64_m64     
  callq .vfwprintf                #  76    0xe47ea  5      OPC=callq_label      
.L_e47ef:                         #        0xe47ef  0      OPC=<label>          
  movq 0x2b6792(%rip), %rax       #  77    0xe47ef  7      OPC=movq_r64_m64     
  movl -0x4c(%rbp), %edx          #  78    0xe47f6  3      OPC=movl_r32_m32     
  addl $0x1, (%rax)               #  79    0xe47f9  3      OPC=addl_m32_imm8    
  testl %edx, %edx                #  80    0xe47fc  2      OPC=testl_r32_r32    
  jne .L_e4840                    #  81    0xe47fe  2      OPC=jne_label        
.L_e4800:                         #        0xe4800  0      OPC=<label>          
  leaq 0x7ea42(%rip), %rsi        #  82    0xe4800  7      OPC=leaq_r64_m16     
  xorl %edi, %edi                 #  83    0xe4807  2      OPC=xorl_r32_r32     
  xorl %eax, %eax                 #  84    0xe4809  2      OPC=xorl_r32_r32     
  callq .__fxprintf               #  85    0xe480b  5      OPC=callq_label      
  movq 0x2b65a9(%rip), %rax       #  86    0xe4810  7      OPC=movq_r64_m64     
  movq (%rax), %rdi               #  87    0xe4817  3      OPC=movq_r64_m64     
  callq ._IO_fflush               #  88    0xe481a  5      OPC=callq_label      
  movl -0x50(%rbp), %eax          #  89    0xe481f  3      OPC=movl_r32_m32     
  testl %eax, %eax                #  90    0xe4822  2      OPC=testl_r32_r32    
  jne .L_e48de                    #  91    0xe4824  6      OPC=jne_label_1      
  leaq -0x28(%rbp), %rsp          #  92    0xe482a  4      OPC=leaq_r64_m16     
  popq %rbx                       #  93    0xe482e  1      OPC=popq_r64_1       
  popq %r12                       #  94    0xe482f  2      OPC=popq_r64_1       
  popq %r13                       #  95    0xe4831  2      OPC=popq_r64_1       
  popq %r14                       #  96    0xe4833  2      OPC=popq_r64_1       
  popq %r15                       #  97    0xe4835  2      OPC=popq_r64_1       
  popq %rbp                       #  98    0xe4837  1      OPC=popq_r64_1       
  retq                            #  99    0xe4838  1      OPC=retq             
  nop                             #  100   0xe4839  1      OPC=nop              
  nop                             #  101   0xe483a  1      OPC=nop              
  nop                             #  102   0xe483b  1      OPC=nop              
  nop                             #  103   0xe483c  1      OPC=nop              
  nop                             #  104   0xe483d  1      OPC=nop              
  nop                             #  105   0xe483e  1      OPC=nop              
  nop                             #  106   0xe483f  1      OPC=nop              
.L_e4840:                         #        0xe4840  0      OPC=<label>          
  movl -0x4c(%rbp), %edi          #  107   0xe4840  3      OPC=movl_r32_m32     
  callq .print_errno_message      #  108   0xe4843  5      OPC=callq_label      
  jmpq .L_e4800                   #  109   0xe4848  2      OPC=jmpq_label       
  nop                             #  110   0xe484a  1      OPC=nop              
  nop                             #  111   0xe484b  1      OPC=nop              
  nop                             #  112   0xe484c  1      OPC=nop              
  nop                             #  113   0xe484d  1      OPC=nop              
  nop                             #  114   0xe484e  1      OPC=nop              
  nop                             #  115   0xe484f  1      OPC=nop              
.L_e4850:                         #        0xe4850  0      OPC=<label>          
  movq %rbx, %rdi                 #  116   0xe4850  3      OPC=movq_r64_r64     
  callq .L_1f8c0                  #  117   0xe4853  5      OPC=callq_label      
  jmpq .L_e47d5                   #  118   0xe4858  5      OPC=jmpq_label_1     
  nop                             #  119   0xe485d  1      OPC=nop              
  nop                             #  120   0xe485e  1      OPC=nop              
  nop                             #  121   0xe485f  1      OPC=nop              
.L_e4860:                         #        0xe4860  0      OPC=<label>          
  cmpq $0xff, %rax                #  122   0xe4860  4      OPC=cmpq_r64_imm8    
  je .L_e47d0                     #  123   0xe4864  6      OPC=je_label_1       
  movq 0x2b654f(%rip), %rax       #  124   0xe486a  7      OPC=movq_r64_m64     
  movq -0x58(%rbp), %rdx          #  125   0xe4871  4      OPC=movq_r64_m64     
  movq %rbx, %rsi                 #  126   0xe4875  3      OPC=movq_r64_r64     
  movq (%rax), %rdi               #  127   0xe4878  3      OPC=movq_r64_m64     
  callq .vfwprintf                #  128   0xe487b  5      OPC=callq_label      
  testb %r15b, %r15b              #  129   0xe4880  3      OPC=testb_r8_r8      
  je .L_e47ef                     #  130   0xe4883  6      OPC=je_label_1       
  movq %rbx, %rdi                 #  131   0xe4889  3      OPC=movq_r64_r64     
  callq .L_1f8c0                  #  132   0xe488c  5      OPC=callq_label      
  jmpq .L_e47ef                   #  133   0xe4891  5      OPC=jmpq_label_1     
  nop                             #  134   0xe4896  1      OPC=nop              
  nop                             #  135   0xe4897  1      OPC=nop              
  nop                             #  136   0xe4898  1      OPC=nop              
  nop                             #  137   0xe4899  1      OPC=nop              
  nop                             #  138   0xe489a  1      OPC=nop              
  nop                             #  139   0xe489b  1      OPC=nop              
  nop                             #  140   0xe489c  1      OPC=nop              
  nop                             #  141   0xe489d  1      OPC=nop              
  nop                             #  142   0xe489e  1      OPC=nop              
  nop                             #  143   0xe489f  1      OPC=nop              
.L_e48a0:                         #        0xe48a0  0      OPC=<label>          
  movq -0x58(%rbp), %rdx          #  144   0xe48a0  4      OPC=movq_r64_m64     
  movq %r14, %rsi                 #  145   0xe48a4  3      OPC=movq_r64_r64     
  callq ._IO_vfprintf             #  146   0xe48a7  5      OPC=callq_label      
  jmpq .L_e47ef                   #  147   0xe48ac  5      OPC=jmpq_label_1     
.L_e48b1:                         #        0xe48b1  0      OPC=<label>          
  movq %r15, %rdi                 #  148   0xe48b1  3      OPC=movq_r64_r64     
  callq .L_1f8c0                  #  149   0xe48b4  5      OPC=callq_label      
  movq 0x2b6500(%rip), %rax       #  150   0xe48b9  7      OPC=movq_r64_m64     
  leaq 0x86961(%rip), %rdi        #  151   0xe48c0  7      OPC=leaq_r64_m16     
  movq (%rax), %rsi               #  152   0xe48c7  3      OPC=movq_r64_m64     
  callq .fputws_unlocked          #  153   0xe48ca  5      OPC=callq_label      
  leaq -0x28(%rbp), %rsp          #  154   0xe48cf  4      OPC=leaq_r64_m16     
  popq %rbx                       #  155   0xe48d3  1      OPC=popq_r64_1       
  popq %r12                       #  156   0xe48d4  2      OPC=popq_r64_1       
  popq %r13                       #  157   0xe48d6  2      OPC=popq_r64_1       
  popq %r14                       #  158   0xe48d8  2      OPC=popq_r64_1       
  popq %r15                       #  159   0xe48da  2      OPC=popq_r64_1       
  popq %rbp                       #  160   0xe48dc  1      OPC=popq_r64_1       
  retq                            #  161   0xe48dd  1      OPC=retq             
.L_e48de:                         #        0xe48de  0      OPC=<label>          
  movl -0x50(%rbp), %edi          #  162   0xe48de  3      OPC=movl_r32_m32     
  callq .exit                     #  163   0xe48e1  5      OPC=callq_label      
  nop                             #  164   0xe48e6  1      OPC=nop              
  nop                             #  165   0xe48e7  1      OPC=nop              
  nop                             #  166   0xe48e8  1      OPC=nop              
  nop                             #  167   0xe48e9  1      OPC=nop              
  nop                             #  168   0xe48ea  1      OPC=nop              
  nop                             #  169   0xe48eb  1      OPC=nop              
  nop                             #  170   0xe48ec  1      OPC=nop              
  nop                             #  171   0xe48ed  1      OPC=nop              
  nop                             #  172   0xe48ee  1      OPC=nop              
  nop                             #  173   0xe48ef  1      OPC=nop              
                                                                                
.size error_tail, .-error_tail

