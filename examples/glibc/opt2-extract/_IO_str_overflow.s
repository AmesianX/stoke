  .text
  .globl _IO_str_overflow
  .type _IO_str_overflow, @function

#! file-offset 0x73700
#! rip-offset  0x73700
#! capacity    400 bytes

# Text                          #  Line  RIP      Bytes  Opcode                
._IO_str_overflow:              #        0x73700  0      OPC=<label>           
  pushq %r15                    #  1     0x73700  2      OPC=pushq_r64_1       
  pushq %r14                    #  2     0x73702  2      OPC=pushq_r64_1       
  pushq %r13                    #  3     0x73704  2      OPC=pushq_r64_1       
  pushq %r12                    #  4     0x73706  2      OPC=pushq_r64_1       
  pushq %rbp                    #  5     0x73708  1      OPC=pushq_r64_1       
  pushq %rbx                    #  6     0x73709  1      OPC=pushq_r64_1       
  movl %esi, %ebp               #  7     0x7370a  2      OPC=movl_r32_r32      
  movq %rdi, %rbx               #  8     0x7370c  3      OPC=movq_r64_r64      
  subq $0x18, %rsp              #  9     0x7370f  4      OPC=subq_r64_imm8     
  movl (%rdi), %edx             #  10    0x73713  2      OPC=movl_r32_m32      
  cmpl $0xffffffff, %esi        #  11    0x73715  6      OPC=cmpl_r32_imm32    
  nop                           #  12    0x7371b  1      OPC=nop               
  nop                           #  13    0x7371c  1      OPC=nop               
  nop                           #  14    0x7371d  1      OPC=nop               
  sete %r13b                    #  15    0x7371e  4      OPC=sete_r8           
  testb $0x8, %dl               #  16    0x73722  3      OPC=testb_r8_imm8     
  je .L_73740                   #  17    0x73725  2      OPC=je_label          
  movl %r13d, %eax              #  18    0x73727  3      OPC=movl_r32_r32      
  xorl $0x1, %eax               #  19    0x7372a  3      OPC=xorl_r32_imm8     
  movzbl %al, %eax              #  20    0x7372d  3      OPC=movzbl_r32_r8     
  negl %eax                     #  21    0x73730  2      OPC=negl_r32          
.L_7372c:                       #        0x73732  0      OPC=<label>           
  addq $0x18, %rsp              #  22    0x73732  4      OPC=addq_r64_imm8     
  popq %rbx                     #  23    0x73736  1      OPC=popq_r64_1        
  popq %rbp                     #  24    0x73737  1      OPC=popq_r64_1        
  popq %r12                     #  25    0x73738  2      OPC=popq_r64_1        
  popq %r13                     #  26    0x7373a  2      OPC=popq_r64_1        
  popq %r14                     #  27    0x7373c  2      OPC=popq_r64_1        
  popq %r15                     #  28    0x7373e  2      OPC=popq_r64_1        
  retq                          #  29    0x73740  1      OPC=retq              
  nop                           #  30    0x73741  1      OPC=nop               
  nop                           #  31    0x73742  1      OPC=nop               
  nop                           #  32    0x73743  1      OPC=nop               
  nop                           #  33    0x73744  1      OPC=nop               
  nop                           #  34    0x73745  1      OPC=nop               
.L_73740:                       #        0x73746  0      OPC=<label>           
  movl %edx, %eax               #  35    0x73746  2      OPC=movl_r32_r32      
  andl $0xc00, %eax             #  36    0x73748  5      OPC=andl_eax_imm32    
  cmpl $0x400, %eax             #  37    0x7374d  5      OPC=cmpl_eax_imm32    
  je .L_73860                   #  38    0x73752  6      OPC=je_label_1        
  movq 0x28(%rdi), %rdx         #  39    0x73758  4      OPC=movq_r64_m64      
.L_73756:                       #        0x7375c  0      OPC=<label>           
  movq 0x38(%rbx), %r15         #  40    0x7375c  4      OPC=movq_r64_m64      
  movq 0x40(%rbx), %r12         #  41    0x73760  4      OPC=movq_r64_m64      
  movq %rdx, %rcx               #  42    0x73764  3      OPC=movq_r64_r64      
  subq 0x20(%rbx), %rcx         #  43    0x73767  4      OPC=subq_r64_m64      
  movzbl %r13b, %eax            #  44    0x7376b  4      OPC=movzbl_r32_r8     
  subq %r15, %r12               #  45    0x7376f  3      OPC=subq_r64_r64      
  addq %r12, %rax               #  46    0x73772  3      OPC=addq_r64_r64      
  cmpq %rax, %rcx               #  47    0x73775  3      OPC=cmpq_r64_r64      
  jb .L_7382d                   #  48    0x73778  6      OPC=jb_label_1        
  testb $0x1, (%rbx)            #  49    0x7377e  3      OPC=testb_m8_imm8     
  jne .L_73880                  #  50    0x73781  6      OPC=jne_label_1       
  leaq 0x64(%r12,%r12,1), %rax  #  51    0x73787  5      OPC=leaq_r64_m16      
  cmpq %rax, %r12               #  52    0x7378c  3      OPC=cmpq_r64_r64      
  movq %rax, 0x8(%rsp)          #  53    0x7378f  5      OPC=movq_m64_r64      
  ja .L_73880                   #  54    0x73794  6      OPC=ja_label_1        
  movq %rax, %rdi               #  55    0x7379a  3      OPC=movq_r64_r64      
  callq 0xe0(%rbx)              #  56    0x7379d  6      OPC=callq_m64         
  testq %rax, %rax              #  57    0x737a3  3      OPC=testq_r64_r64     
  movq %rax, %r14               #  58    0x737a6  3      OPC=movq_r64_r64      
  je .L_73880                   #  59    0x737a9  6      OPC=je_label_1        
  testq %r15, %r15              #  60    0x737af  3      OPC=testq_r64_r64     
  je .L_737cd                   #  61    0x737b2  2      OPC=je_label          
  movq %r12, %rdx               #  62    0x737b4  3      OPC=movq_r64_r64      
  movq %r15, %rsi               #  63    0x737b7  3      OPC=movq_r64_r64      
  movq %rax, %rdi               #  64    0x737ba  3      OPC=movq_r64_r64      
  callq .__GI_memcpy            #  65    0x737bd  5      OPC=callq_label       
  movq %r15, %rdi               #  66    0x737c2  3      OPC=movq_r64_r64      
  callq 0xe8(%rbx)              #  67    0x737c5  6      OPC=callq_m64         
  movq $0x0, 0x38(%rbx)         #  68    0x737cb  8      OPC=movq_m64_imm32    
.L_737cd:                       #        0x737d3  0      OPC=<label>           
  movq 0x8(%rsp), %rdx          #  69    0x737d3  5      OPC=movq_r64_m64      
  leaq (%r14,%r12,1), %rdi      #  70    0x737d8  4      OPC=leaq_r64_m16      
  xorl %esi, %esi               #  71    0x737dc  2      OPC=xorl_r32_r32      
  subq %r12, %rdx               #  72    0x737de  3      OPC=subq_r64_r64      
  callq .__GI_memset            #  73    0x737e1  5      OPC=callq_label       
  movq 0x8(%rsp), %rdx          #  74    0x737e6  5      OPC=movq_r64_m64      
  movl $0x1, %ecx               #  75    0x737eb  5      OPC=movl_r32_imm32    
  movq %r14, %rsi               #  76    0x737f0  3      OPC=movq_r64_r64      
  movq %rbx, %rdi               #  77    0x737f3  3      OPC=movq_r64_r64      
  addq %r14, %rdx               #  78    0x737f6  3      OPC=addq_r64_r64      
  callq ._IO_setb               #  79    0x737f9  5      OPC=callq_label       
  movq %r14, %rax               #  80    0x737fe  3      OPC=movq_r64_r64      
  movq %r14, 0x20(%rbx)         #  81    0x73801  4      OPC=movq_m64_r64      
  subq %r15, %rax               #  82    0x73805  3      OPC=subq_r64_r64      
  addq %rax, 0x18(%rbx)         #  83    0x73808  4      OPC=addq_m64_r64      
  movq %r14, %rax               #  84    0x7380c  3      OPC=movq_r64_r64      
  subq %r15, %rax               #  85    0x7380f  3      OPC=subq_r64_r64      
  addq %rax, 0x8(%rbx)          #  86    0x73812  4      OPC=addq_m64_r64      
  movq %r14, %rax               #  87    0x73816  3      OPC=movq_r64_r64      
  subq %r15, %rax               #  88    0x73819  3      OPC=subq_r64_r64      
  addq %rax, 0x10(%rbx)         #  89    0x7381c  4      OPC=addq_m64_r64      
  movq %rax, %rdx               #  90    0x73820  3      OPC=movq_r64_r64      
  addq 0x28(%rbx), %rdx         #  91    0x73823  4      OPC=addq_r64_m64      
  movq 0x40(%rbx), %rax         #  92    0x73827  4      OPC=movq_r64_m64      
  movq %rdx, 0x28(%rbx)         #  93    0x7382b  4      OPC=movq_m64_r64      
  movq %rax, 0x30(%rbx)         #  94    0x7382f  4      OPC=movq_m64_r64      
.L_7382d:                       #        0x73833  0      OPC=<label>           
  testb %r13b, %r13b            #  95    0x73833  3      OPC=testb_r8_r8       
  jne .L_73841                  #  96    0x73836  2      OPC=jne_label         
  leaq 0x1(%rdx), %rax          #  97    0x73838  4      OPC=leaq_r64_m16      
  movq %rax, 0x28(%rbx)         #  98    0x7383c  4      OPC=movq_m64_r64      
  movb %bpl, (%rdx)             #  99    0x73840  3      OPC=movb_m8_r8        
  movq 0x28(%rbx), %rdx         #  100   0x73843  4      OPC=movq_r64_m64      
.L_73841:                       #        0x73847  0      OPC=<label>           
  cmpq %rdx, 0x10(%rbx)         #  101   0x73847  4      OPC=cmpq_m64_r64      
  movl %ebp, %eax               #  102   0x7384b  2      OPC=movl_r32_r32      
  jae .L_7372c                  #  103   0x7384d  6      OPC=jae_label_1       
  movq %rdx, 0x10(%rbx)         #  104   0x73853  4      OPC=movq_m64_r64      
  addq $0x18, %rsp              #  105   0x73857  4      OPC=addq_r64_imm8     
  popq %rbx                     #  106   0x7385b  1      OPC=popq_r64_1        
  popq %rbp                     #  107   0x7385c  1      OPC=popq_r64_1        
  popq %r12                     #  108   0x7385d  2      OPC=popq_r64_1        
  popq %r13                     #  109   0x7385f  2      OPC=popq_r64_1        
  popq %r14                     #  110   0x73861  2      OPC=popq_r64_1        
  popq %r15                     #  111   0x73863  2      OPC=popq_r64_1        
  retq                          #  112   0x73865  1      OPC=retq              
.L_73860:                       #        0x73866  0      OPC=<label>           
  orb $0x8, %dh                 #  113   0x73866  3      OPC=orb_rh_imm8       
  movq 0x10(%rdi), %rax         #  114   0x73869  4      OPC=movq_r64_m64      
  movl %edx, (%rdi)             #  115   0x7386d  2      OPC=movl_m32_r32      
  movq 0x8(%rdi), %rdx          #  116   0x7386f  4      OPC=movq_r64_m64      
  movq %rax, 0x8(%rdi)          #  117   0x73873  4      OPC=movq_m64_r64      
  movq %rdx, 0x28(%rdi)         #  118   0x73877  4      OPC=movq_m64_r64      
  jmpq .L_73756                 #  119   0x7387b  5      OPC=jmpq_label_1      
  nop                           #  120   0x73880  1      OPC=nop               
  nop                           #  121   0x73881  1      OPC=nop               
  nop                           #  122   0x73882  1      OPC=nop               
  nop                           #  123   0x73883  1      OPC=nop               
  nop                           #  124   0x73884  1      OPC=nop               
  nop                           #  125   0x73885  1      OPC=nop               
.L_73880:                       #        0x73886  0      OPC=<label>           
  movl $0xffffffff, %eax        #  126   0x73886  6      OPC=movl_r32_imm32_1  
  jmpq .L_7372c                 #  127   0x7388c  5      OPC=jmpq_label_1      
  nop                           #  128   0x73891  1      OPC=nop               
  nop                           #  129   0x73892  1      OPC=nop               
  nop                           #  130   0x73893  1      OPC=nop               
  nop                           #  131   0x73894  1      OPC=nop               
  nop                           #  132   0x73895  1      OPC=nop               
  nop                           #  133   0x73896  1      OPC=nop               
                                                                               
.size _IO_str_overflow, .-_IO_str_overflow

