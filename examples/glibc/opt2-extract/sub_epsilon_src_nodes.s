  .text
  .globl sub_epsilon_src_nodes
  .type sub_epsilon_src_nodes, @function

#! file-offset 0xc3a60
#! rip-offset  0xc3a60
#! capacity    576 bytes

# Text                                #  Line  RIP      Bytes  Opcode              
.sub_epsilon_src_nodes:               #        0xc3a60  0      OPC=<label>         
  pushq %r15                          #  1     0xc3a60  2      OPC=pushq_r64_1     
  pushq %r14                          #  2     0xc3a62  2      OPC=pushq_r64_1     
  movslq %esi, %r9                    #  3     0xc3a64  3      OPC=movslq_r64_r32  
  pushq %r13                          #  4     0xc3a67  2      OPC=pushq_r64_1     
  pushq %r12                          #  5     0xc3a69  2      OPC=pushq_r64_1     
  movq %rdi, %r12                     #  6     0xc3a6b  3      OPC=movq_r64_r64    
  pushq %rbp                          #  7     0xc3a6e  1      OPC=pushq_r64_1     
  pushq %rbx                          #  8     0xc3a6f  1      OPC=pushq_r64_1     
  subq $0x48, %rsp                    #  9     0xc3a70  4      OPC=subq_r64_imm8   
  movl %r9d, 0x8(%rsp)                #  10    0xc3a74  5      OPC=movl_m32_r32    
  shlq $0x4, %r9                      #  11    0xc3a79  4      OPC=shlq_r64_imm8   
  addq 0x38(%rdi), %r9                #  12    0xc3a7d  4      OPC=addq_r64_m64    
  movq $0x0, 0x30(%rsp)               #  13    0xc3a81  9      OPC=movq_m64_imm32  
  movq $0x0, 0x38(%rsp)               #  14    0xc3a8a  9      OPC=movq_m64_imm32  
  movq %rcx, 0x20(%rsp)               #  15    0xc3a93  5      OPC=movq_m64_r64    
  movl 0x4(%r9), %ebp                 #  16    0xc3a98  4      OPC=movl_r32_m32    
  movq %r9, %r15                      #  17    0xc3a9c  3      OPC=movq_r64_r64    
  testl %ebp, %ebp                    #  18    0xc3a9f  2      OPC=testl_r32_r32   
  jle .L_c3c98                        #  19    0xc3aa1  6      OPC=jle_label_1     
  leaq 0x8(%r9), %rax                 #  20    0xc3aa7  4      OPC=leaq_r64_m16    
  xorl %r13d, %r13d                   #  21    0xc3aab  3      OPC=xorl_r32_r32    
  movq %rdx, 0x10(%rsp)               #  22    0xc3aae  5      OPC=movq_m64_r64    
  movq %rax, (%rsp)                   #  23    0xc3ab3  4      OPC=movq_m64_r64    
  leaq 0x8(%rdx), %rax                #  24    0xc3ab7  4      OPC=leaq_r64_m16    
  movq %rax, 0x18(%rsp)               #  25    0xc3abb  5      OPC=movq_m64_r64    
  leaq 0x30(%rsp), %rax               #  26    0xc3ac0  5      OPC=leaq_r64_m16    
  movq %rax, 0x28(%rsp)               #  27    0xc3ac5  5      OPC=movq_m64_r64    
  jmpq .L_c3b20                       #  28    0xc3aca  2      OPC=jmpq_label      
  nop                                 #  29    0xc3acc  1      OPC=nop             
  nop                                 #  30    0xc3acd  1      OPC=nop             
  nop                                 #  31    0xc3ace  1      OPC=nop             
  nop                                 #  32    0xc3acf  1      OPC=nop             
.L_c3ad0:                             #        0xc3ad0  0      OPC=<label>         
  movq 0x10(%rsp), %rax               #  33    0xc3ad0  5      OPC=movq_r64_m64    
  movq 0x18(%rsp), %rsi               #  34    0xc3ad5  5      OPC=movq_r64_m64    
  movl %r9d, %edx                     #  35    0xc3ada  3      OPC=movl_r32_r32    
  movl 0x4(%rax), %edi                #  36    0xc3add  3      OPC=movl_r32_m32    
  callq .re_node_set_contains_isra_3  #  37    0xc3ae0  5      OPC=callq_label     
  testl %eax, %eax                    #  38    0xc3ae5  2      OPC=testl_r32_r32   
  je .L_c3b76                         #  39    0xc3ae7  6      OPC=je_label_1      
.L_c3aed:                             #        0xc3aed  0      OPC=<label>         
  movq %rbx, %rdx                     #  40    0xc3aed  3      OPC=movq_r64_r64    
  addq 0x38(%r12), %rdx               #  41    0xc3af0  5      OPC=addq_r64_m64    
  movq 0x20(%rsp), %rsi               #  42    0xc3af5  5      OPC=movq_r64_m64    
  movq 0x28(%rsp), %rdi               #  43    0xc3afa  5      OPC=movq_r64_m64    
  callq .re_node_set_add_intersect    #  44    0xc3aff  5      OPC=callq_label     
  testl %eax, %eax                    #  45    0xc3b04  2      OPC=testl_r32_r32   
  jne .L_c3c77                        #  46    0xc3b06  6      OPC=jne_label_1     
  movl 0x4(%r15), %ebp                #  47    0xc3b0c  4      OPC=movl_r32_m32    
.L_c3b10:                             #        0xc3b10  0      OPC=<label>         
  leal 0x1(%r13), %eax                #  48    0xc3b10  4      OPC=leal_r32_m16    
  addq $0x1, %r13                     #  49    0xc3b14  4      OPC=addq_r64_imm8   
  cmpl %eax, %ebp                     #  50    0xc3b18  2      OPC=cmpl_r32_r32    
  jle .L_c3bf8                        #  51    0xc3b1a  6      OPC=jle_label_1     
.L_c3b20:                             #        0xc3b20  0      OPC=<label>         
  movq 0x8(%r15), %rax                #  52    0xc3b20  4      OPC=movq_r64_m64    
  movslq (%rax,%r13,4), %rbx          #  53    0xc3b24  4      OPC=movslq_r64_m32  
  cmpl 0x8(%rsp), %ebx                #  54    0xc3b28  4      OPC=cmpl_r32_m32    
  je .L_c3b10                         #  55    0xc3b2c  2      OPC=je_label        
  movq (%r12), %rax                   #  56    0xc3b2e  4      OPC=movq_r64_m64    
  shlq $0x4, %rbx                     #  57    0xc3b32  4      OPC=shlq_r64_imm8   
  testb $0x8, 0x8(%rax,%rbx,1)        #  58    0xc3b36  5      OPC=testb_m8_imm8   
  je .L_c3b10                         #  59    0xc3b3b  2      OPC=je_label        
  movq %rbx, %rax                     #  60    0xc3b3d  3      OPC=movq_r64_r64    
  addq 0x28(%r12), %rax               #  61    0xc3b40  5      OPC=addq_r64_m64    
  cmpl $0x1, 0x4(%rax)                #  62    0xc3b45  4      OPC=cmpl_m32_imm8   
  movq 0x8(%rax), %rsi                #  63    0xc3b49  4      OPC=movq_r64_m64    
  movl (%rsi), %r9d                   #  64    0xc3b4d  3      OPC=movl_r32_m32    
  jle .L_c3bb0                        #  65    0xc3b50  2      OPC=jle_label       
  movl 0x4(%rsi), %r14d               #  66    0xc3b52  4      OPC=movl_r32_m32    
  movq (%rsp), %rsi                   #  67    0xc3b56  4      OPC=movq_r64_m64    
  movl %r9d, %edx                     #  68    0xc3b5a  3      OPC=movl_r32_r32    
  movl %ebp, %edi                     #  69    0xc3b5d  2      OPC=movl_r32_r32    
  movl %r9d, 0xc(%rsp)                #  70    0xc3b5f  5      OPC=movl_m32_r32    
  callq .re_node_set_contains_isra_3  #  71    0xc3b64  5      OPC=callq_label     
  testl %eax, %eax                    #  72    0xc3b69  2      OPC=testl_r32_r32   
  movl 0xc(%rsp), %r9d                #  73    0xc3b6b  5      OPC=movl_r32_m32    
  je .L_c3ad0                         #  74    0xc3b70  6      OPC=je_label_1      
.L_c3b76:                             #        0xc3b76  0      OPC=<label>         
  testl %r14d, %r14d                  #  75    0xc3b76  3      OPC=testl_r32_r32   
  jle .L_c3b10                        #  76    0xc3b79  2      OPC=jle_label       
  movq (%rsp), %rsi                   #  77    0xc3b7b  4      OPC=movq_r64_m64    
  movl %r14d, %edx                    #  78    0xc3b7f  3      OPC=movl_r32_r32    
  movl %ebp, %edi                     #  79    0xc3b82  2      OPC=movl_r32_r32    
  callq .re_node_set_contains_isra_3  #  80    0xc3b84  5      OPC=callq_label     
  testl %eax, %eax                    #  81    0xc3b89  2      OPC=testl_r32_r32   
  jne .L_c3b10                        #  82    0xc3b8b  2      OPC=jne_label       
  movq 0x10(%rsp), %rax               #  83    0xc3b8d  5      OPC=movq_r64_m64    
  movq 0x18(%rsp), %rsi               #  84    0xc3b92  5      OPC=movq_r64_m64    
  movl %r14d, %edx                    #  85    0xc3b97  3      OPC=movl_r32_r32    
  movl 0x4(%rax), %edi                #  86    0xc3b9a  3      OPC=movl_r32_m32    
  callq .re_node_set_contains_isra_3  #  87    0xc3b9d  5      OPC=callq_label     
  testl %eax, %eax                    #  88    0xc3ba2  2      OPC=testl_r32_r32   
  je .L_c3b10                         #  89    0xc3ba4  6      OPC=je_label_1      
  jmpq .L_c3aed                       #  90    0xc3baa  5      OPC=jmpq_label_1    
  nop                                 #  91    0xc3baf  1      OPC=nop             
.L_c3bb0:                             #        0xc3bb0  0      OPC=<label>         
  movq (%rsp), %rsi                   #  92    0xc3bb0  4      OPC=movq_r64_m64    
  movl %r9d, %edx                     #  93    0xc3bb4  3      OPC=movl_r32_r32    
  movl %ebp, %edi                     #  94    0xc3bb7  2      OPC=movl_r32_r32    
  movl %r9d, 0xc(%rsp)                #  95    0xc3bb9  5      OPC=movl_m32_r32    
  callq .re_node_set_contains_isra_3  #  96    0xc3bbe  5      OPC=callq_label     
  testl %eax, %eax                    #  97    0xc3bc3  2      OPC=testl_r32_r32   
  movl 0xc(%rsp), %r9d                #  98    0xc3bc5  5      OPC=movl_r32_m32    
  jne .L_c3b10                        #  99    0xc3bca  6      OPC=jne_label_1     
  movq 0x10(%rsp), %rax               #  100   0xc3bd0  5      OPC=movq_r64_m64    
  movq 0x18(%rsp), %rsi               #  101   0xc3bd5  5      OPC=movq_r64_m64    
  movl %r9d, %edx                     #  102   0xc3bda  3      OPC=movl_r32_r32    
  movl 0x4(%rax), %edi                #  103   0xc3bdd  3      OPC=movl_r32_m32    
  callq .re_node_set_contains_isra_3  #  104   0xc3be0  5      OPC=callq_label     
  testl %eax, %eax                    #  105   0xc3be5  2      OPC=testl_r32_r32   
  jne .L_c3aed                        #  106   0xc3be7  6      OPC=jne_label_1     
  jmpq .L_c3b10                       #  107   0xc3bed  5      OPC=jmpq_label_1    
  nop                                 #  108   0xc3bf2  1      OPC=nop             
  nop                                 #  109   0xc3bf3  1      OPC=nop             
  nop                                 #  110   0xc3bf4  1      OPC=nop             
  nop                                 #  111   0xc3bf5  1      OPC=nop             
  nop                                 #  112   0xc3bf6  1      OPC=nop             
  nop                                 #  113   0xc3bf7  1      OPC=nop             
.L_c3bf8:                             #        0xc3bf8  0      OPC=<label>         
  movq 0x10(%rsp), %r14               #  114   0xc3bf8  5      OPC=movq_r64_m64    
  xorl %ebx, %ebx                     #  115   0xc3bfd  2      OPC=xorl_r32_r32    
  testl %ebp, %ebp                    #  116   0xc3bff  2      OPC=testl_r32_r32   
  leaq 0x38(%rsp), %r12               #  117   0xc3c01  5      OPC=leaq_r64_m16    
  leaq 0x8(%r14), %r13                #  118   0xc3c06  4      OPC=leaq_r64_m16    
  jg .L_c3c1d                         #  119   0xc3c0a  2      OPC=jg_label        
  jmpq .L_c3c5c                       #  120   0xc3c0c  2      OPC=jmpq_label      
  xchgw %ax, %ax                      #  121   0xc3c0e  2      OPC=xchgw_ax_r16    
.L_c3c10:                             #        0xc3c10  0      OPC=<label>         
  leal 0x1(%rbx), %eax                #  122   0xc3c10  3      OPC=leal_r32_m16    
  addq $0x1, %rbx                     #  123   0xc3c13  4      OPC=addq_r64_imm8   
  cmpl %eax, 0x4(%r15)                #  124   0xc3c17  4      OPC=cmpl_m32_r32    
  jle .L_c3c5c                        #  125   0xc3c1b  2      OPC=jle_label       
.L_c3c1d:                             #        0xc3c1d  0      OPC=<label>         
  movq 0x8(%r15), %rax                #  126   0xc3c1d  4      OPC=movq_r64_m64    
  movl 0x34(%rsp), %edi               #  127   0xc3c21  4      OPC=movl_r32_m32    
  movq %r12, %rsi                     #  128   0xc3c25  3      OPC=movq_r64_r64    
  movl (%rax,%rbx,4), %ebp            #  129   0xc3c28  3      OPC=movl_r32_m32    
  movl %ebp, %edx                     #  130   0xc3c2b  2      OPC=movl_r32_r32    
  callq .re_node_set_contains_isra_3  #  131   0xc3c2d  5      OPC=callq_label     
  testl %eax, %eax                    #  132   0xc3c32  2      OPC=testl_r32_r32   
  jne .L_c3c10                        #  133   0xc3c34  2      OPC=jne_label       
  movl 0x4(%r14), %edi                #  134   0xc3c36  4      OPC=movl_r32_m32    
  movl %ebp, %edx                     #  135   0xc3c3a  2      OPC=movl_r32_r32    
  movq %r13, %rsi                     #  136   0xc3c3c  3      OPC=movq_r64_r64    
  callq .re_node_set_contains_isra_3  #  137   0xc3c3f  5      OPC=callq_label     
  leal -0x1(%rax), %esi               #  138   0xc3c44  3      OPC=leal_r32_m16    
  movq %r14, %rdi                     #  139   0xc3c47  3      OPC=movq_r64_r64    
  callq .re_node_set_remove_at        #  140   0xc3c4a  5      OPC=callq_label     
  leal 0x1(%rbx), %eax                #  141   0xc3c4f  3      OPC=leal_r32_m16    
  addq $0x1, %rbx                     #  142   0xc3c52  4      OPC=addq_r64_imm8   
  cmpl %eax, 0x4(%r15)                #  143   0xc3c56  4      OPC=cmpl_m32_r32    
  jg .L_c3c1d                         #  144   0xc3c5a  2      OPC=jg_label        
.L_c3c5c:                             #        0xc3c5c  0      OPC=<label>         
  movq 0x38(%rsp), %rdi               #  145   0xc3c5c  5      OPC=movq_r64_m64    
.L_c3c61:                             #        0xc3c61  0      OPC=<label>         
  callq .L_1f8c0                      #  146   0xc3c61  5      OPC=callq_label     
  addq $0x48, %rsp                    #  147   0xc3c66  4      OPC=addq_r64_imm8   
  xorl %eax, %eax                     #  148   0xc3c6a  2      OPC=xorl_r32_r32    
  popq %rbx                           #  149   0xc3c6c  1      OPC=popq_r64_1      
  popq %rbp                           #  150   0xc3c6d  1      OPC=popq_r64_1      
  popq %r12                           #  151   0xc3c6e  2      OPC=popq_r64_1      
  popq %r13                           #  152   0xc3c70  2      OPC=popq_r64_1      
  popq %r14                           #  153   0xc3c72  2      OPC=popq_r64_1      
  popq %r15                           #  154   0xc3c74  2      OPC=popq_r64_1      
  retq                                #  155   0xc3c76  1      OPC=retq            
.L_c3c77:                             #        0xc3c77  0      OPC=<label>         
  movq 0x38(%rsp), %rdi               #  156   0xc3c77  5      OPC=movq_r64_m64    
  movl %eax, 0x8(%rsp)                #  157   0xc3c7c  4      OPC=movl_m32_r32    
  callq .L_1f8c0                      #  158   0xc3c80  5      OPC=callq_label     
  movl 0x8(%rsp), %eax                #  159   0xc3c85  4      OPC=movl_r32_m32    
  addq $0x48, %rsp                    #  160   0xc3c89  4      OPC=addq_r64_imm8   
  popq %rbx                           #  161   0xc3c8d  1      OPC=popq_r64_1      
  popq %rbp                           #  162   0xc3c8e  1      OPC=popq_r64_1      
  popq %r12                           #  163   0xc3c8f  2      OPC=popq_r64_1      
  popq %r13                           #  164   0xc3c91  2      OPC=popq_r64_1      
  popq %r14                           #  165   0xc3c93  2      OPC=popq_r64_1      
  popq %r15                           #  166   0xc3c95  2      OPC=popq_r64_1      
  retq                                #  167   0xc3c97  1      OPC=retq            
.L_c3c98:                             #        0xc3c98  0      OPC=<label>         
  xorl %edi, %edi                     #  168   0xc3c98  2      OPC=xorl_r32_r32    
  jmpq .L_c3c61                       #  169   0xc3c9a  2      OPC=jmpq_label      
  nop                                 #  170   0xc3c9c  1      OPC=nop             
  nop                                 #  171   0xc3c9d  1      OPC=nop             
  nop                                 #  172   0xc3c9e  1      OPC=nop             
  nop                                 #  173   0xc3c9f  1      OPC=nop             
                                                                                   
.size sub_epsilon_src_nodes, .-sub_epsilon_src_nodes

