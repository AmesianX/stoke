  .text
  .globl argp_args_usage
  .type argp_args_usage, @function

#! file-offset 0xef050
#! rip-offset  0xef050
#! capacity    560 bytes

# Text                            #  Line  RIP      Bytes  Opcode              
.argp_args_usage:                 #        0xef050  0      OPC=<label>         
  pushq %r15                      #  1     0xef050  2      OPC=pushq_r64_1     
  pushq %r14                      #  2     0xef052  2      OPC=pushq_r64_1     
  movq %rsi, %r14                 #  3     0xef054  3      OPC=movq_r64_r64    
  pushq %r13                      #  4     0xef057  2      OPC=pushq_r64_1     
  pushq %r12                      #  5     0xef059  2      OPC=pushq_r64_1     
  movq %rdi, %r12                 #  6     0xef05b  3      OPC=movq_r64_r64    
  pushq %rbp                      #  7     0xef05e  1      OPC=pushq_r64_1     
  pushq %rbx                      #  8     0xef05f  1      OPC=pushq_r64_1     
  movq %rdx, %r13                 #  9     0xef060  3      OPC=movq_r64_r64    
  movl %ecx, %r15d                #  10    0xef063  3      OPC=movl_r32_r32    
  movq %r8, %rbp                  #  11    0xef066  3      OPC=movq_r64_r64    
  subq $0x38, %rsp                #  12    0xef069  4      OPC=subq_r64_imm8   
  movq (%rdx), %rax               #  13    0xef06d  3      OPC=movq_r64_m64    
  movq 0x20(%rdi), %rbx           #  14    0xef070  4      OPC=movq_r64_m64    
  movq %rsi, (%rsp)               #  15    0xef074  4      OPC=movq_m64_r64    
  movq 0x10(%rdi), %rsi           #  16    0xef078  4      OPC=movq_r64_m64    
  movl $0x5, %edx                 #  17    0xef07c  5      OPC=movl_r32_imm32  
  movq 0x30(%rdi), %rdi           #  18    0xef081  4      OPC=movq_r64_m64    
  movq %rax, 0x20(%rsp)           #  19    0xef085  5      OPC=movq_m64_r64    
  callq .__dcgettext              #  20    0xef08a  5      OPC=callq_label     
  movq %r14, %rcx                 #  21    0xef08f  3      OPC=movq_r64_r64    
  movq %r12, %rdx                 #  22    0xef092  3      OPC=movq_r64_r64    
  movl $0x2000006, %esi           #  23    0xef095  5      OPC=movl_r32_imm32  
  movq %rax, %rdi                 #  24    0xef09a  3      OPC=movq_r64_r64    
  movq %rax, 0x28(%rsp)           #  25    0xef09d  5      OPC=movq_m64_r64    
  callq .filter_doc               #  26    0xef0a2  5      OPC=callq_label     
  testq %rax, %rax                #  27    0xef0a7  3      OPC=testq_r64_r64   
  movq %rax, 0x18(%rsp)           #  28    0xef0aa  5      OPC=movq_m64_r64    
  je .L_ef218                     #  29    0xef0af  6      OPC=je_label_1      
  movl $0xa, %esi                 #  30    0xef0b5  5      OPC=movl_r32_imm32  
  movq %rax, %rdi                 #  31    0xef0ba  3      OPC=movq_r64_r64    
  callq .strchrnul                #  32    0xef0bd  5      OPC=callq_label     
  cmpb $0x0, (%rax)               #  33    0xef0c2  3      OPC=cmpb_m8_imm8    
  movq %rax, %r12                 #  34    0xef0c5  3      OPC=movq_r64_r64    
  jne .L_ef1c0                    #  35    0xef0c8  6      OPC=jne_label_1     
  movq 0x18(%rsp), %r14           #  36    0xef0ce  5      OPC=movq_r64_m64    
  movb $0x0, 0xc(%rsp)            #  37    0xef0d3  5      OPC=movb_m8_imm8    
.L_ef0d8:                         #        0xef0d8  0      OPC=<label>         
  leaq 0x1(%r12), %rsi            #  38    0xef0d8  5      OPC=leaq_r64_m16    
  movq %rbp, %rdi                 #  39    0xef0dd  3      OPC=movq_r64_r64    
  subq %r14, %rsi                 #  40    0xef0e0  3      OPC=subq_r64_r64    
  callq .space                    #  41    0xef0e3  5      OPC=callq_label     
  movq 0x38(%rbp), %rdi           #  42    0xef0e8  4      OPC=movq_r64_m64    
  movq %r12, %rcx                 #  43    0xef0ec  3      OPC=movq_r64_r64    
  subq %r14, %rcx                 #  44    0xef0ef  3      OPC=subq_r64_r64    
  leaq (%rdi,%rcx,1), %rax        #  45    0xef0f2  4      OPC=leaq_r64_m16    
  cmpq %rax, 0x40(%rbp)           #  46    0xef0f6  4      OPC=cmpq_m64_r64    
  jae .L_ef119                    #  47    0xef0fa  2      OPC=jae_label       
  movq %rcx, %rsi                 #  48    0xef0fc  3      OPC=movq_r64_r64    
  movq %rbp, %rdi                 #  49    0xef0ff  3      OPC=movq_r64_r64    
  movq %rcx, 0x10(%rsp)           #  50    0xef102  5      OPC=movq_m64_r64    
  callq .__argp_fmtstream_ensure  #  51    0xef107  5      OPC=callq_label     
  testl %eax, %eax                #  52    0xef10c  2      OPC=testl_r32_r32   
  movq 0x10(%rsp), %rcx           #  53    0xef10e  5      OPC=movq_r64_m64    
  je .L_ef132                     #  54    0xef113  2      OPC=je_label        
  movq 0x38(%rbp), %rdi           #  55    0xef115  4      OPC=movq_r64_m64    
.L_ef119:                         #        0xef119  0      OPC=<label>         
  movq %rcx, %rdx                 #  56    0xef119  3      OPC=movq_r64_r64    
  movq %r14, %rsi                 #  57    0xef11c  3      OPC=movq_r64_r64    
  movq %rcx, 0x10(%rsp)           #  58    0xef11f  5      OPC=movq_m64_r64    
  callq .__GI_memcpy              #  59    0xef124  5      OPC=callq_label     
  movq 0x10(%rsp), %rcx           #  60    0xef129  5      OPC=movq_r64_m64    
  addq %rcx, 0x38(%rbp)           #  61    0xef12e  4      OPC=addq_m64_r64    
.L_ef132:                         #        0xef132  0      OPC=<label>         
  movq 0x18(%rsp), %rcx           #  62    0xef132  5      OPC=movq_r64_m64    
  cmpq %rcx, 0x28(%rsp)           #  63    0xef137  5      OPC=cmpq_m64_r64    
  je .L_ef146                     #  64    0xef13c  2      OPC=je_label        
  movq %rcx, %rdi                 #  65    0xef13e  3      OPC=movq_r64_r64    
  callq .L_1f8c0                  #  66    0xef141  5      OPC=callq_label     
.L_ef146:                         #        0xef146  0      OPC=<label>         
  testq %rbx, %rbx                #  67    0xef146  3      OPC=testq_r64_r64   
  jne .L_ef16f                    #  68    0xef149  2      OPC=jne_label       
  jmpq .L_ef177                   #  69    0xef14b  2      OPC=jmpq_label      
  nop                             #  70    0xef14d  1      OPC=nop             
  nop                             #  71    0xef14e  1      OPC=nop             
  nop                             #  72    0xef14f  1      OPC=nop             
.L_ef150:                         #        0xef150  0      OPC=<label>         
  movq (%rsp), %rsi               #  73    0xef150  4      OPC=movq_r64_m64    
  movl %r15d, %ecx                #  74    0xef154  3      OPC=movl_r32_r32    
  movq %rbp, %r8                  #  75    0xef157  3      OPC=movq_r64_r64    
  movq %r13, %rdx                 #  76    0xef15a  3      OPC=movq_r64_r64    
  xorl %r15d, %r15d               #  77    0xef15d  3      OPC=xorl_r32_r32    
  addq $0x20, %rbx                #  78    0xef160  4      OPC=addq_r64_imm8   
  callq .argp_args_usage          #  79    0xef164  5      OPC=callq_label     
  testl %eax, %eax                #  80    0xef169  2      OPC=testl_r32_r32   
  sete %r15b                      #  81    0xef16b  4      OPC=sete_r8         
.L_ef16f:                         #        0xef16f  0      OPC=<label>         
  movq (%rbx), %rdi               #  82    0xef16f  3      OPC=movq_r64_m64    
  testq %rdi, %rdi                #  83    0xef172  3      OPC=testq_r64_r64   
  jne .L_ef150                    #  84    0xef175  2      OPC=jne_label       
.L_ef177:                         #        0xef177  0      OPC=<label>         
  testl %r15d, %r15d              #  85    0xef177  3      OPC=testl_r32_r32   
  je .L_ef238                     #  86    0xef17a  6      OPC=je_label_1      
  cmpb $0x0, 0xc(%rsp)            #  87    0xef180  5      OPC=cmpb_m8_imm8    
  je .L_ef238                     #  88    0xef185  6      OPC=je_label_1      
  cmpb $0x0, (%r12)               #  89    0xef18b  5      OPC=cmpb_m8_imm8    
  movq 0x20(%rsp), %rax           #  90    0xef190  5      OPC=movq_r64_m64    
  jne .L_ef250                    #  91    0xef195  6      OPC=jne_label_1     
  cmpb $0x0, (%rax)               #  92    0xef19b  3      OPC=cmpb_m8_imm8    
  jle .L_ef267                    #  93    0xef19e  6      OPC=jle_label_1     
  movb $0x0, (%rax)               #  94    0xef1a4  3      OPC=movb_m8_imm8    
  xorl %eax, %eax                 #  95    0xef1a7  2      OPC=xorl_r32_r32    
.L_ef1a9:                         #        0xef1a9  0      OPC=<label>         
  addq $0x38, %rsp                #  96    0xef1a9  4      OPC=addq_r64_imm8   
  popq %rbx                       #  97    0xef1ad  1      OPC=popq_r64_1      
  popq %rbp                       #  98    0xef1ae  1      OPC=popq_r64_1      
  popq %r12                       #  99    0xef1af  2      OPC=popq_r64_1      
  popq %r13                       #  100   0xef1b1  2      OPC=popq_r64_1      
  popq %r14                       #  101   0xef1b3  2      OPC=popq_r64_1      
  popq %r15                       #  102   0xef1b5  2      OPC=popq_r64_1      
  retq                            #  103   0xef1b7  1      OPC=retq            
  nop                             #  104   0xef1b8  1      OPC=nop             
  nop                             #  105   0xef1b9  1      OPC=nop             
  nop                             #  106   0xef1ba  1      OPC=nop             
  nop                             #  107   0xef1bb  1      OPC=nop             
  nop                             #  108   0xef1bc  1      OPC=nop             
  nop                             #  109   0xef1bd  1      OPC=nop             
  nop                             #  110   0xef1be  1      OPC=nop             
  nop                             #  111   0xef1bf  1      OPC=nop             
.L_ef1c0:                         #        0xef1c0  0      OPC=<label>         
  movq 0x20(%rsp), %rax           #  112   0xef1c0  5      OPC=movq_r64_m64    
  movsbl (%rax), %eax             #  113   0xef1c5  3      OPC=movsbl_r32_m8   
  testl %eax, %eax                #  114   0xef1c8  2      OPC=testl_r32_r32   
  movl %eax, 0x10(%rsp)           #  115   0xef1ca  4      OPC=movl_m32_r32    
  jle .L_ef26e                    #  116   0xef1ce  6      OPC=jle_label_1     
  xorl %edx, %edx                 #  117   0xef1d4  2      OPC=xorl_r32_r32    
  nop                             #  118   0xef1d6  1      OPC=nop             
  nop                             #  119   0xef1d7  1      OPC=nop             
  nop                             #  120   0xef1d8  1      OPC=nop             
  nop                             #  121   0xef1d9  1      OPC=nop             
  nop                             #  122   0xef1da  1      OPC=nop             
  nop                             #  123   0xef1db  1      OPC=nop             
  nop                             #  124   0xef1dc  1      OPC=nop             
  nop                             #  125   0xef1dd  1      OPC=nop             
  nop                             #  126   0xef1de  1      OPC=nop             
  nop                             #  127   0xef1df  1      OPC=nop             
.L_ef1e0:                         #        0xef1e0  0      OPC=<label>         
  leaq 0x1(%r12), %r14            #  128   0xef1e0  5      OPC=leaq_r64_m16    
  movl $0xa, %esi                 #  129   0xef1e5  5      OPC=movl_r32_imm32  
  movl %edx, 0xc(%rsp)            #  130   0xef1ea  4      OPC=movl_m32_r32    
  movq %r14, %rdi                 #  131   0xef1ee  3      OPC=movq_r64_r64    
  callq .strchrnul                #  132   0xef1f1  5      OPC=callq_label     
  movl 0xc(%rsp), %edx            #  133   0xef1f6  4      OPC=movl_r32_m32    
  movq %rax, %r12                 #  134   0xef1fa  3      OPC=movq_r64_r64    
  addl $0x1, %edx                 #  135   0xef1fd  3      OPC=addl_r32_imm8   
  cmpl 0x10(%rsp), %edx           #  136   0xef200  4      OPC=cmpl_r32_m32    
  jne .L_ef1e0                    #  137   0xef204  2      OPC=jne_label       
.L_ef206:                         #        0xef206  0      OPC=<label>         
  addq $0x1, (%r13)               #  138   0xef206  5      OPC=addq_m64_imm8   
  movb $0x1, 0xc(%rsp)            #  139   0xef20b  5      OPC=movb_m8_imm8    
  jmpq .L_ef0d8                   #  140   0xef210  5      OPC=jmpq_label_1    
  nop                             #  141   0xef215  1      OPC=nop             
  nop                             #  142   0xef216  1      OPC=nop             
  nop                             #  143   0xef217  1      OPC=nop             
.L_ef218:                         #        0xef218  0      OPC=<label>         
  testq %rbx, %rbx                #  144   0xef218  3      OPC=testq_r64_r64   
  je .L_ef238                     #  145   0xef21b  2      OPC=je_label        
  movq (%rbx), %rdi               #  146   0xef21d  3      OPC=movq_r64_m64    
  xorl %r12d, %r12d               #  147   0xef220  3      OPC=xorl_r32_r32    
  movb $0x0, 0xc(%rsp)            #  148   0xef223  5      OPC=movb_m8_imm8    
  testq %rdi, %rdi                #  149   0xef228  3      OPC=testq_r64_r64   
  jne .L_ef150                    #  150   0xef22b  6      OPC=jne_label_1     
  nop                             #  151   0xef231  1      OPC=nop             
  nop                             #  152   0xef232  1      OPC=nop             
  nop                             #  153   0xef233  1      OPC=nop             
  nop                             #  154   0xef234  1      OPC=nop             
  nop                             #  155   0xef235  1      OPC=nop             
  nop                             #  156   0xef236  1      OPC=nop             
  nop                             #  157   0xef237  1      OPC=nop             
.L_ef238:                         #        0xef238  0      OPC=<label>         
  xorl %eax, %eax                 #  158   0xef238  2      OPC=xorl_r32_r32    
  testl %r15d, %r15d              #  159   0xef23a  3      OPC=testl_r32_r32   
  sete %al                        #  160   0xef23d  3      OPC=sete_r8         
  addq $0x38, %rsp                #  161   0xef240  4      OPC=addq_r64_imm8   
  popq %rbx                       #  162   0xef244  1      OPC=popq_r64_1      
  popq %rbp                       #  163   0xef245  1      OPC=popq_r64_1      
  popq %r12                       #  164   0xef246  2      OPC=popq_r64_1      
  popq %r13                       #  165   0xef248  2      OPC=popq_r64_1      
  popq %r14                       #  166   0xef24a  2      OPC=popq_r64_1      
  popq %r15                       #  167   0xef24c  2      OPC=popq_r64_1      
  retq                            #  168   0xef24e  1      OPC=retq            
  nop                             #  169   0xef24f  1      OPC=nop             
.L_ef250:                         #        0xef250  0      OPC=<label>         
  addb $0x1, (%rax)               #  170   0xef250  3      OPC=addb_m8_imm8    
  addq $0x38, %rsp                #  171   0xef253  4      OPC=addq_r64_imm8   
  movl $0x1, %eax                 #  172   0xef257  5      OPC=movl_r32_imm32  
  popq %rbx                       #  173   0xef25c  1      OPC=popq_r64_1      
  popq %rbp                       #  174   0xef25d  1      OPC=popq_r64_1      
  popq %r12                       #  175   0xef25e  2      OPC=popq_r64_1      
  popq %r13                       #  176   0xef260  2      OPC=popq_r64_1      
  popq %r14                       #  177   0xef262  2      OPC=popq_r64_1      
  popq %r15                       #  178   0xef264  2      OPC=popq_r64_1      
  retq                            #  179   0xef266  1      OPC=retq            
.L_ef267:                         #        0xef267  0      OPC=<label>         
  xorl %eax, %eax                 #  180   0xef267  2      OPC=xorl_r32_r32    
  jmpq .L_ef1a9                   #  181   0xef269  5      OPC=jmpq_label_1    
.L_ef26e:                         #        0xef26e  0      OPC=<label>         
  movq 0x18(%rsp), %r14           #  182   0xef26e  5      OPC=movq_r64_m64    
  jmpq .L_ef206                   #  183   0xef273  2      OPC=jmpq_label      
  nop                             #  184   0xef275  1      OPC=nop             
  nop                             #  185   0xef276  1      OPC=nop             
  nop                             #  186   0xef277  1      OPC=nop             
  nop                             #  187   0xef278  1      OPC=nop             
  nop                             #  188   0xef279  1      OPC=nop             
  nop                             #  189   0xef27a  1      OPC=nop             
  nop                             #  190   0xef27b  1      OPC=nop             
  nop                             #  191   0xef27c  1      OPC=nop             
  nop                             #  192   0xef27d  1      OPC=nop             
  nop                             #  193   0xef27e  1      OPC=nop             
  nop                             #  194   0xef27f  1      OPC=nop             
                                                                               
.size argp_args_usage, .-argp_args_usage

