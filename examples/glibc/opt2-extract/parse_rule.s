  .text
  .globl parse_rule
  .type parse_rule, @function

#! file-offset 0xa7a30
#! rip-offset  0xa7a30
#! capacity    800 bytes

# Text                                 #  Line  RIP      Bytes  Opcode                   
.parse_rule:                           #        0xa7a30  0      OPC=<label>              
  pushq %r15                           #  1     0xa7a30  2      OPC=pushq_r64_1          
  pushq %r14                           #  2     0xa7a32  2      OPC=pushq_r64_1          
  pushq %r13                           #  3     0xa7a34  2      OPC=pushq_r64_1          
  pushq %r12                           #  4     0xa7a36  2      OPC=pushq_r64_1          
  movq %rdi, %r13                      #  5     0xa7a38  3      OPC=movq_r64_r64         
  pushq %rbp                           #  6     0xa7a3b  1      OPC=pushq_r64_1          
  pushq %rbx                           #  7     0xa7a3c  1      OPC=pushq_r64_1          
  xorl %ebp, %ebp                      #  8     0xa7a3d  2      OPC=xorl_r32_r32         
  subq $0x18, %rsp                     #  9     0xa7a3f  4      OPC=subq_r64_imm8        
  movq (%rdi), %rax                    #  10    0xa7a43  3      OPC=movq_r64_m64         
  cmpb $0x2c, (%rax)                   #  11    0xa7a46  3      OPC=cmpb_m8_imm8         
  sete %bpl                            #  12    0xa7a49  4      OPC=sete_r8              
  addq %rax, %rbp                      #  13    0xa7a4d  3      OPC=addq_r64_r64         
  movzbl (%rbp), %eax                  #  14    0xa7a50  4      OPC=movzbl_r32_m8        
  cmpb $0x4a, %al                      #  15    0xa7a54  2      OPC=cmpb_al_imm8         
  je .L_a7ba0                          #  16    0xa7a56  6      OPC=je_label_1           
  movsbl %al, %edx                     #  17    0xa7a5c  3      OPC=movsbl_r32_r8        
  subl $0x30, %edx                     #  18    0xa7a5f  3      OPC=subl_r32_imm8        
  cmpl $0x9, %edx                      #  19    0xa7a62  3      OPC=cmpl_r32_imm8        
  ja .L_a7ad8                          #  20    0xa7a65  2      OPC=ja_label             
  movslq %esi, %rbx                    #  21    0xa7a67  3      OPC=movslq_r64_r32       
  leaq 0x2f630f(%rip), %r12            #  22    0xa7a6a  7      OPC=leaq_r64_m16         
  leaq (%rbx,%rbx,2), %rax             #  23    0xa7a71  4      OPC=leaq_r64_m16         
  shlq $0x4, %rax                      #  24    0xa7a75  4      OPC=shlq_r64_imm8        
  movl $0x0, 0x8(%r12,%rax,1)          #  25    0xa7a79  9      OPC=movl_m32_imm32       
.L_a7a82:                              #        0xa7a82  0      OPC=<label>              
  leaq 0x8(%rsp), %rsi                 #  26    0xa7a82  5      OPC=leaq_r64_m16         
  movl $0xa, %edx                      #  27    0xa7a87  5      OPC=movl_r32_imm32       
  movq %rbp, %rdi                      #  28    0xa7a8c  3      OPC=movq_r64_r64         
  callq .strtoul                       #  29    0xa7a8f  5      OPC=callq_label          
  movq 0x8(%rsp), %rcx                 #  30    0xa7a94  5      OPC=movq_r64_m64         
  cmpq %rcx, %rbp                      #  31    0xa7a99  3      OPC=cmpq_r64_r64         
  je .L_a7ac0                          #  32    0xa7a9c  2      OPC=je_label             
  cmpq $0x16d, %rax                    #  33    0xa7a9e  6      OPC=cmpq_rax_imm32       
  ja .L_a7ac0                          #  34    0xa7aa4  2      OPC=ja_label             
  testq %rax, %rax                     #  35    0xa7aa6  3      OPC=testq_r64_r64        
  jne .L_a7b30                         #  36    0xa7aa9  6      OPC=jne_label_1          
  leaq (%rbx,%rbx,2), %rdx             #  37    0xa7aaf  4      OPC=leaq_r64_m16         
  shlq $0x4, %rdx                      #  38    0xa7ab3  4      OPC=shlq_r64_imm8        
  cmpl $0x1, 0x8(%r12,%rdx,1)          #  39    0xa7ab7  6      OPC=cmpl_m32_imm8        
  jne .L_a7b30                         #  40    0xa7abd  2      OPC=jne_label            
  nop                                  #  41    0xa7abf  1      OPC=nop                  
.L_a7ac0:                              #        0xa7ac0  0      OPC=<label>              
  xorl %eax, %eax                      #  42    0xa7ac0  2      OPC=xorl_r32_r32         
.L_a7ac2:                              #        0xa7ac2  0      OPC=<label>              
  addq $0x18, %rsp                     #  43    0xa7ac2  4      OPC=addq_r64_imm8        
  popq %rbx                            #  44    0xa7ac6  1      OPC=popq_r64_1           
  popq %rbp                            #  45    0xa7ac7  1      OPC=popq_r64_1           
  popq %r12                            #  46    0xa7ac8  2      OPC=popq_r64_1           
  popq %r13                            #  47    0xa7aca  2      OPC=popq_r64_1           
  popq %r14                            #  48    0xa7acc  2      OPC=popq_r64_1           
  popq %r15                            #  49    0xa7ace  2      OPC=popq_r64_1           
  retq                                 #  50    0xa7ad0  1      OPC=retq                 
  nop                                  #  51    0xa7ad1  1      OPC=nop                  
  nop                                  #  52    0xa7ad2  1      OPC=nop                  
  nop                                  #  53    0xa7ad3  1      OPC=nop                  
  nop                                  #  54    0xa7ad4  1      OPC=nop                  
  nop                                  #  55    0xa7ad5  1      OPC=nop                  
  nop                                  #  56    0xa7ad6  1      OPC=nop                  
  nop                                  #  57    0xa7ad7  1      OPC=nop                  
.L_a7ad8:                              #        0xa7ad8  0      OPC=<label>              
  cmpb $0x4d, %al                      #  58    0xa7ad8  2      OPC=cmpb_al_imm8         
  je .L_a7c88                          #  59    0xa7ada  6      OPC=je_label_1           
  testb %al, %al                       #  60    0xa7ae0  2      OPC=testb_r8_r8          
  jne .L_a7ac0                         #  61    0xa7ae2  2      OPC=jne_label            
  movslq %esi, %rbx                    #  62    0xa7ae4  3      OPC=movslq_r64_r32       
  leaq 0x2f6292(%rip), %r12            #  63    0xa7ae7  7      OPC=leaq_r64_m16         
  leaq (%rbx,%rbx,2), %rax             #  64    0xa7aee  4      OPC=leaq_r64_m16         
  shlq $0x4, %rax                      #  65    0xa7af2  4      OPC=shlq_r64_imm8        
  leaq (%r12,%rax,1), %rdx             #  66    0xa7af6  4      OPC=leaq_r64_m16         
  cmpq %r12, %rdx                      #  67    0xa7afa  3      OPC=cmpq_r64_r64         
  movl $0x2, 0x8(%rdx)                 #  68    0xa7afd  7      OPC=movl_m32_imm32       
  je .L_a7d18                          #  69    0xa7b04  6      OPC=je_label_1           
  movl $0xb, %r8d                      #  70    0xa7b0a  6      OPC=movl_r32_imm32       
  movl $0x1, %r9d                      #  71    0xa7b10  6      OPC=movl_r32_imm32       
  xorl %r10d, %r10d                    #  72    0xa7b16  3      OPC=xorl_r32_r32         
  movw %r8w, 0xc(%rdx)                 #  73    0xa7b19  5      OPC=movw_m16_r16         
  movw %r9w, 0xe(%rdx)                 #  74    0xa7b1e  5      OPC=movw_m16_r16         
  movq %rbp, %rcx                      #  75    0xa7b23  3      OPC=movq_r64_r64         
  movw %r10w, 0x10(%r12,%rax,1)        #  76    0xa7b26  6      OPC=movw_m16_r16         
  jmpq .L_a7b3e                        #  77    0xa7b2c  2      OPC=jmpq_label           
  xchgw %ax, %ax                       #  78    0xa7b2e  2      OPC=xchgw_ax_r16         
.L_a7b30:                              #        0xa7b30  0      OPC=<label>              
  leaq (%rbx,%rbx,2), %rdx             #  79    0xa7b30  4      OPC=leaq_r64_m16         
  shlq $0x4, %rdx                      #  80    0xa7b34  4      OPC=shlq_r64_imm8        
  movw %ax, 0x10(%r12,%rdx,1)          #  81    0xa7b38  6      OPC=movw_m16_r16         
.L_a7b3e:                              #        0xa7b3e  0      OPC=<label>              
  movzbl (%rcx), %esi                  #  82    0xa7b3e  3      OPC=movzbl_r32_m8        
  cmpb $0x2f, %sil                     #  83    0xa7b41  4      OPC=cmpb_r8_imm8         
  setne %dl                            #  84    0xa7b45  3      OPC=setne_r8             
  testb %sil, %sil                     #  85    0xa7b48  3      OPC=testb_r8_r8          
  setne %al                            #  86    0xa7b4b  3      OPC=setne_r8             
  andl %edx, %eax                      #  87    0xa7b4e  2      OPC=andl_r32_r32         
  cmpb $0x2c, %sil                     #  88    0xa7b50  4      OPC=cmpb_r8_imm8         
  setne %dl                            #  89    0xa7b54  3      OPC=setne_r8             
  andb %dl, %al                        #  90    0xa7b57  2      OPC=andb_r8_r8           
  jne .L_a7ac0                         #  91    0xa7b59  6      OPC=jne_label_1          
  cmpb $0x2f, %sil                     #  92    0xa7b5f  4      OPC=cmpb_r8_imm8         
  je .L_a7bd8                          #  93    0xa7b63  2      OPC=je_label             
  leaq (%rbx,%rbx,2), %rax             #  94    0xa7b65  4      OPC=leaq_r64_m16         
  shlq $0x4, %rax                      #  95    0xa7b69  4      OPC=shlq_r64_imm8        
  movl $0x1c20, 0x14(%r12,%rax,1)      #  96    0xa7b6d  9      OPC=movl_m32_imm32       
.L_a7b76:                              #        0xa7b76  0      OPC=<label>              
  leaq (%rbx,%rbx,2), %rax             #  97    0xa7b76  4      OPC=leaq_r64_m16         
  shlq $0x4, %rax                      #  98    0xa7b7a  4      OPC=shlq_r64_imm8        
  movl $0xffffffff, 0x28(%r12,%rax,1)  #  99    0xa7b7e  9      OPC=movl_m32_imm32       
  movq %rcx, (%r13)                    #  100   0xa7b87  4      OPC=movq_m64_r64         
  addq $0x18, %rsp                     #  101   0xa7b8b  4      OPC=addq_r64_imm8        
  popq %rbx                            #  102   0xa7b8f  1      OPC=popq_r64_1           
  movl $0x1, %eax                      #  103   0xa7b90  5      OPC=movl_r32_imm32       
  popq %rbp                            #  104   0xa7b95  1      OPC=popq_r64_1           
  popq %r12                            #  105   0xa7b96  2      OPC=popq_r64_1           
  popq %r13                            #  106   0xa7b98  2      OPC=popq_r64_1           
  popq %r14                            #  107   0xa7b9a  2      OPC=popq_r64_1           
  popq %r15                            #  108   0xa7b9c  2      OPC=popq_r64_1           
  retq                                 #  109   0xa7b9e  1      OPC=retq                 
  nop                                  #  110   0xa7b9f  1      OPC=nop                  
.L_a7ba0:                              #        0xa7ba0  0      OPC=<label>              
  movslq %esi, %rbx                    #  111   0xa7ba0  3      OPC=movslq_r64_r32       
  leaq 0x2f61d6(%rip), %r12            #  112   0xa7ba3  7      OPC=leaq_r64_m16         
  addq $0x1, %rbp                      #  113   0xa7baa  4      OPC=addq_r64_imm8        
  leaq (%rbx,%rbx,2), %rax             #  114   0xa7bae  4      OPC=leaq_r64_m16         
  shlq $0x4, %rax                      #  115   0xa7bb2  4      OPC=shlq_r64_imm8        
  movl $0x1, 0x8(%r12,%rax,1)          #  116   0xa7bb6  9      OPC=movl_m32_imm32       
  movsbl (%rbp), %eax                  #  117   0xa7bbf  4      OPC=movsbl_r32_m8        
  subl $0x30, %eax                     #  118   0xa7bc3  3      OPC=subl_r32_imm8        
  cmpl $0x9, %eax                      #  119   0xa7bc6  3      OPC=cmpl_r32_imm8        
  jbe .L_a7a82                         #  120   0xa7bc9  6      OPC=jbe_label_1          
  jmpq .L_a7ac0                        #  121   0xa7bcf  5      OPC=jmpq_label_1         
  nop                                  #  122   0xa7bd4  1      OPC=nop                  
  nop                                  #  123   0xa7bd5  1      OPC=nop                  
  nop                                  #  124   0xa7bd6  1      OPC=nop                  
  nop                                  #  125   0xa7bd7  1      OPC=nop                  
.L_a7bd8:                              #        0xa7bd8  0      OPC=<label>              
  movzbl 0x1(%rcx), %edx               #  126   0xa7bd8  4      OPC=movzbl_r32_m8        
  testb %dl, %dl                       #  127   0xa7bdc  2      OPC=testb_r8_r8          
  je .L_a7ac2                          #  128   0xa7bde  6      OPC=je_label_1           
  cmpb $0x2d, %dl                      #  129   0xa7be4  3      OPC=cmpb_r8_imm8         
  movl $0x0, 0x8(%rsp)                 #  130   0xa7be7  8      OPC=movl_m32_imm32       
  leaq 0xbd282(%rip), %rsi             #  131   0xa7bef  7      OPC=leaq_r64_m16         
  sete %bpl                            #  132   0xa7bf6  4      OPC=sete_r8              
  xorl %edx, %edx                      #  133   0xa7bfa  2      OPC=xorl_r32_r32         
  movzbl %bpl, %eax                    #  134   0xa7bfc  4      OPC=movzbl_r32_r8        
  movw %dx, 0x4(%rsp)                  #  135   0xa7c00  5      OPC=movw_m16_r16         
  leaq 0x2(%rsp), %rdx                 #  136   0xa7c05  5      OPC=leaq_r64_m16         
  leaq 0x1(%rcx,%rax,1), %r14          #  137   0xa7c0a  5      OPC=leaq_r64_m16         
  xorl %ecx, %ecx                      #  138   0xa7c0f  2      OPC=xorl_r32_r32         
  movl $0x2, %eax                      #  139   0xa7c11  5      OPC=movl_r32_imm32       
  movw %cx, 0x6(%rsp)                  #  140   0xa7c16  5      OPC=movw_m16_r16         
  leaq 0x8(%rsp), %rcx                 #  141   0xa7c1b  5      OPC=leaq_r64_m16         
  movw %ax, 0x2(%rsp)                  #  142   0xa7c20  5      OPC=movw_m16_r16         
  movq %r14, %rdi                      #  143   0xa7c25  3      OPC=movq_r64_r64         
  pushq %rcx                           #  144   0xa7c28  1      OPC=pushq_r64_1          
  movq %rcx, %r9                       #  145   0xa7c29  3      OPC=movq_r64_r64         
  leaq 0xe(%rsp), %rax                 #  146   0xa7c2c  5      OPC=leaq_r64_m16         
  pushq %rax                           #  147   0xa7c31  1      OPC=pushq_r64_1          
  xorl %eax, %eax                      #  148   0xa7c32  2      OPC=xorl_r32_r32         
  leaq 0x14(%rsp), %r8                 #  149   0xa7c34  5      OPC=leaq_r64_m16         
  callq ._IO_sscanf                    #  150   0xa7c39  5      OPC=callq_label          
  movslq 0x18(%rsp), %rcx              #  151   0xa7c3e  5      OPC=movslq_r64_m32       
  popq %rsi                            #  152   0xa7c43  1      OPC=popq_r64_1           
  popq %rdi                            #  153   0xa7c44  1      OPC=popq_r64_1           
  movzwl 0x2(%rsp), %eax               #  154   0xa7c45  5      OPC=movzwl_r32_m16       
  leaq (%rbx,%rbx,2), %rdi             #  155   0xa7c4a  4      OPC=leaq_r64_m16         
  addq %r14, %rcx                      #  156   0xa7c4e  3      OPC=addq_r64_r64         
  cmpb $0x1, %bpl                      #  157   0xa7c51  4      OPC=cmpb_r8_imm8         
  sbbl %esi, %esi                      #  158   0xa7c55  2      OPC=sbbl_r32_r32         
  shlq $0x4, %rdi                      #  159   0xa7c57  4      OPC=shlq_r64_imm8        
  andl $0x2, %esi                      #  160   0xa7c5b  3      OPC=andl_r32_imm8        
  imull $0xe10, %eax, %edx             #  161   0xa7c5e  6      OPC=imull_r32_r32_imm32  
  movzwl 0x4(%rsp), %eax               #  162   0xa7c64  5      OPC=movzwl_r32_m16       
  subl $0x1, %esi                      #  163   0xa7c69  3      OPC=subl_r32_imm8        
  imull $0x3c, %eax, %eax              #  164   0xa7c6c  3      OPC=imull_r32_r32_imm8   
  addl %edx, %eax                      #  165   0xa7c6f  2      OPC=addl_r32_r32         
  movzwl 0x6(%rsp), %edx               #  166   0xa7c71  5      OPC=movzwl_r32_m16       
  addl %edx, %eax                      #  167   0xa7c76  2      OPC=addl_r32_r32         
  imull %esi, %eax                     #  168   0xa7c78  3      OPC=imull_r32_r32        
  movl %eax, 0x14(%r12,%rdi,1)         #  169   0xa7c7b  5      OPC=movl_m32_r32         
  jmpq .L_a7b76                        #  170   0xa7c80  5      OPC=jmpq_label_1         
  nop                                  #  171   0xa7c85  1      OPC=nop                  
  nop                                  #  172   0xa7c86  1      OPC=nop                  
  nop                                  #  173   0xa7c87  1      OPC=nop                  
.L_a7c88:                              #        0xa7c88  0      OPC=<label>              
  movslq %esi, %rbx                    #  174   0xa7c88  3      OPC=movslq_r64_r32       
  leaq 0x2f60ee(%rip), %r12            #  175   0xa7c8b  7      OPC=leaq_r64_m16         
  leaq 0x8(%rsp), %r9                  #  176   0xa7c92  5      OPC=leaq_r64_m16         
  leaq (%rbx,%rbx,2), %rax             #  177   0xa7c97  4      OPC=leaq_r64_m16         
  leaq 0xbd1e8(%rip), %rsi             #  178   0xa7c9b  7      OPC=leaq_r64_m16         
  movq %rbp, %rdi                      #  179   0xa7ca2  3      OPC=movq_r64_r64         
  shlq $0x4, %rax                      #  180   0xa7ca5  4      OPC=shlq_r64_imm8        
  leaq (%r12,%rax,1), %r14             #  181   0xa7ca9  4      OPC=leaq_r64_m16         
  leaq 0x10(%r12,%rax,1), %r15         #  182   0xa7cad  5      OPC=leaq_r64_m16         
  xorl %eax, %eax                      #  183   0xa7cb2  2      OPC=xorl_r32_r32         
  leaq 0xe(%r14), %rcx                 #  184   0xa7cb4  4      OPC=leaq_r64_m16         
  leaq 0xc(%r14), %rdx                 #  185   0xa7cb8  4      OPC=leaq_r64_m16         
  movl $0x2, 0x8(%r14)                 #  186   0xa7cbc  8      OPC=movl_m32_imm32       
  movq %r15, %r8                       #  187   0xa7cc4  3      OPC=movq_r64_r64         
  callq ._IO_sscanf                    #  188   0xa7cc7  5      OPC=callq_label          
  cmpl $0x3, %eax                      #  189   0xa7ccc  3      OPC=cmpl_r32_imm8        
  jne .L_a7ac0                         #  190   0xa7ccf  6      OPC=jne_label_1          
  movzwl 0xc(%r14), %eax               #  191   0xa7cd5  5      OPC=movzwl_r32_m16       
  subl $0x1, %eax                      #  192   0xa7cda  3      OPC=subl_r32_imm8        
  cmpw $0xb, %ax                       #  193   0xa7cdd  4      OPC=cmpw_ax_imm16        
  ja .L_a7ac0                          #  194   0xa7ce1  6      OPC=ja_label_1           
  movzwl 0xe(%r14), %eax               #  195   0xa7ce7  5      OPC=movzwl_r32_m16       
  subl $0x1, %eax                      #  196   0xa7cec  3      OPC=subl_r32_imm8        
  cmpw $0x4, %ax                       #  197   0xa7cef  4      OPC=cmpw_ax_imm16        
  ja .L_a7ac0                          #  198   0xa7cf3  6      OPC=ja_label_1           
  cmpw $0x6, (%r15)                    #  199   0xa7cf9  5      OPC=cmpw_m16_imm8        
  ja .L_a7ac0                          #  200   0xa7cfe  6      OPC=ja_label_1           
  movslq 0x8(%rsp), %rcx               #  201   0xa7d04  5      OPC=movslq_r64_m32       
  addq %rbp, %rcx                      #  202   0xa7d09  3      OPC=addq_r64_r64         
  jmpq .L_a7b3e                        #  203   0xa7d0c  5      OPC=jmpq_label_1         
  nop                                  #  204   0xa7d11  1      OPC=nop                  
  nop                                  #  205   0xa7d12  1      OPC=nop                  
  nop                                  #  206   0xa7d13  1      OPC=nop                  
  nop                                  #  207   0xa7d14  1      OPC=nop                  
  nop                                  #  208   0xa7d15  1      OPC=nop                  
  nop                                  #  209   0xa7d16  1      OPC=nop                  
  nop                                  #  210   0xa7d17  1      OPC=nop                  
.L_a7d18:                              #        0xa7d18  0      OPC=<label>              
  movl $0x3, %r11d                     #  211   0xa7d18  6      OPC=movl_r32_imm32       
  movl $0x2, %r14d                     #  212   0xa7d1e  6      OPC=movl_r32_imm32       
  xorl %r15d, %r15d                    #  213   0xa7d24  3      OPC=xorl_r32_r32         
  movw %r11w, 0xc(%r12)                #  214   0xa7d27  6      OPC=movw_m16_r16         
  movw %r14w, 0xe(%r12)                #  215   0xa7d2d  6      OPC=movw_m16_r16         
  movq %rbp, %rcx                      #  216   0xa7d33  3      OPC=movq_r64_r64         
  movw %r15w, 0x10(%r12,%rax,1)        #  217   0xa7d36  6      OPC=movw_m16_r16         
  jmpq .L_a7b3e                        #  218   0xa7d3c  5      OPC=jmpq_label_1         
  nop                                  #  219   0xa7d41  1      OPC=nop                  
  nop                                  #  220   0xa7d42  1      OPC=nop                  
  nop                                  #  221   0xa7d43  1      OPC=nop                  
  nop                                  #  222   0xa7d44  1      OPC=nop                  
  nop                                  #  223   0xa7d45  1      OPC=nop                  
  nop                                  #  224   0xa7d46  1      OPC=nop                  
  nop                                  #  225   0xa7d47  1      OPC=nop                  
  nop                                  #  226   0xa7d48  1      OPC=nop                  
  nop                                  #  227   0xa7d49  1      OPC=nop                  
  nop                                  #  228   0xa7d4a  1      OPC=nop                  
  nop                                  #  229   0xa7d4b  1      OPC=nop                  
  nop                                  #  230   0xa7d4c  1      OPC=nop                  
  nop                                  #  231   0xa7d4d  1      OPC=nop                  
  nop                                  #  232   0xa7d4e  1      OPC=nop                  
  nop                                  #  233   0xa7d4f  1      OPC=nop                  
                                                                                         
.size parse_rule, .-parse_rule

