  .text
  .globl fgetspent
  .type fgetspent, @function

#! file-offset 0xeaca0
#! rip-offset  0xeaca0
#! capacity    480 bytes

# Text                               #  Line  RIP      Bytes  Opcode                
.fgetspent:                          #        0xeaca0  0      OPC=<label>           
  pushq %r15                         #  1     0xeaca0  2      OPC=pushq_r64_1       
  pushq %r14                         #  2     0xeaca2  2      OPC=pushq_r64_1       
  pushq %r13                         #  3     0xeaca4  2      OPC=pushq_r64_1       
  pushq %r12                         #  4     0xeaca6  2      OPC=pushq_r64_1       
  pushq %rbp                         #  5     0xeaca8  1      OPC=pushq_r64_1       
  pushq %rbx                         #  6     0xeaca9  1      OPC=pushq_r64_1       
  movq %rdi, %rbx                    #  7     0xeacaa  3      OPC=movq_r64_r64      
  subq $0x38, %rsp                   #  8     0xeacad  4      OPC=subq_r64_imm8     
  leaq 0x20(%rsp), %rbp              #  9     0xeacb1  5      OPC=leaq_r64_m16      
  movq %rbp, %rsi                    #  10    0xeacb6  3      OPC=movq_r64_r64      
  callq ._IO_fgetpos64__GLIBC_2_2_5  #  11    0xeacb9  5      OPC=callq_label       
  testl %eax, %eax                   #  12    0xeacbe  2      OPC=testl_r32_r32     
  jne .L_eae42                       #  13    0xeacc0  6      OPC=jne_label_1       
  movl $0x1, %esi                    #  14    0xeacc6  5      OPC=movl_r32_imm32    
  cmpl $0x0, 0x2b5f2e(%rip)          #  15    0xeaccb  7      OPC=cmpl_m32_imm8     
  je .L_eace0                        #  16    0xeacd2  2      OPC=je_label          
  lock                               #  17    0xeacd4  1      OPC=lock              
  cmpxchgl %esi, 0x2b3d74(%rip)      #  18    0xeacd5  7      OPC=cmpxchgl_m32_r32  
  nop                                #  19    0xeacdc  1      OPC=nop               
  jne .L_eace9                       #  20    0xeacdd  2      OPC=jne_label         
  jmpq .L_ead03                      #  21    0xeacdf  2      OPC=jmpq_label        
.L_eace0:                            #        0xeace1  0      OPC=<label>           
  cmpxchgl %esi, 0x2b3d69(%rip)      #  22    0xeace1  7      OPC=cmpxchgl_m32_r32  
  je .L_ead03                        #  23    0xeace8  2      OPC=je_label          
.L_eace9:                            #        0xeacea  0      OPC=<label>           
  leaq 0x2b3d60(%rip), %rdi          #  24    0xeacea  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                   #  25    0xeacf1  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private     #  26    0xeacf8  5      OPC=callq_label       
  addq $0x80, %rsp                   #  27    0xeacfd  7      OPC=addq_r64_imm32    
.L_ead03:                            #        0xead04  0      OPC=<label>           
  movq 0x2b1c1e(%rip), %rdx          #  28    0xead04  7      OPC=movq_r64_m64      
  testq %rdx, %rdx                   #  29    0xead0b  3      OPC=testq_r64_r64     
  je .L_eae53                        #  30    0xead0e  6      OPC=je_label_1        
.L_ead13:                            #        0xead14  0      OPC=<label>           
  movq 0x2b0166(%rip), %r13          #  31    0xead14  7      OPC=movq_r64_m64      
  leaq 0x18(%rsp), %r12              #  32    0xead1b  5      OPC=leaq_r64_m16      
  jmpq .L_ead49                      #  33    0xead20  2      OPC=jmpq_label        
  nop                                #  34    0xead22  1      OPC=nop               
  nop                                #  35    0xead23  1      OPC=nop               
  nop                                #  36    0xead24  1      OPC=nop               
  nop                                #  37    0xead25  1      OPC=nop               
  nop                                #  38    0xead26  1      OPC=nop               
  nop                                #  39    0xead27  1      OPC=nop               
  nop                                #  40    0xead28  1      OPC=nop               
.L_ead28:                            #        0xead29  0      OPC=<label>           
  movq %rbp, %rsi                    #  41    0xead29  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                    #  42    0xead2c  3      OPC=movq_r64_r64      
  movq %rax, 0x2b1bf3(%rip)          #  43    0xead2f  7      OPC=movq_m64_r64      
  callq ._IO_fsetpos64__GLIBC_2_2_5  #  44    0xead36  5      OPC=callq_label       
  testl %eax, %eax                   #  45    0xead3b  2      OPC=testl_r32_r32     
  jne .L_eae30                       #  46    0xead3d  6      OPC=jne_label_1       
  movq 0x2b1bdf(%rip), %rdx          #  47    0xead43  7      OPC=movq_r64_m64      
.L_ead49:                            #        0xead4a  0      OPC=<label>           
  testq %rdx, %rdx                   #  48    0xead4a  3      OPC=testq_r64_r64     
  je .L_eadd0                        #  49    0xead4d  6      OPC=je_label_1        
  movq 0x2b3cef(%rip), %rcx          #  50    0xead53  7      OPC=movq_r64_m64      
  leaq 0x2b3ca0(%rip), %rsi          #  51    0xead5a  7      OPC=leaq_r64_m16      
  movq %r12, %r8                     #  52    0xead61  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                    #  53    0xead64  3      OPC=movq_r64_r64      
  callq .fgetspent_r                 #  54    0xead67  5      OPC=callq_label       
  cmpl $0x22, %eax                   #  55    0xead6c  3      OPC=cmpl_r32_imm8     
  jne .L_eadc0                       #  56    0xead6f  2      OPC=jne_label         
  movq 0x2b3cd1(%rip), %rax          #  57    0xead71  7      OPC=movq_r64_m64      
  movq 0x2b1baa(%rip), %r14          #  58    0xead78  7      OPC=movq_r64_m64      
  leaq 0x400(%rax), %rsi             #  59    0xead7f  7      OPC=leaq_r64_m16      
  movq %r14, %rdi                    #  60    0xead86  3      OPC=movq_r64_r64      
  movq %rsi, 0x2b3cb9(%rip)          #  61    0xead89  7      OPC=movq_m64_r64      
  callq .__tls_get_addr_plt          #  62    0xead90  5      OPC=callq_label       
  testq %rax, %rax                   #  63    0xead95  3      OPC=testq_r64_r64     
  jne .L_ead28                       #  64    0xead98  2      OPC=jne_label         
  movl (%r13), %r15d                 #  65    0xead9a  4      OPC=movl_r32_m32      
  nop                                #  66    0xead9e  1      OPC=nop               
  movq %r14, %rdi                    #  67    0xead9f  3      OPC=movq_r64_r64      
  movq %rax, 0x8(%rsp)               #  68    0xeada2  5      OPC=movq_m64_r64      
  callq .L_1f8c0                     #  69    0xeada7  5      OPC=callq_label       
  movq 0x8(%rsp), %rax               #  70    0xeadac  5      OPC=movq_r64_m64      
  movl %r15d, (%r13)                 #  71    0xeadb1  4      OPC=movl_m32_r32      
  nop                                #  72    0xeadb5  1      OPC=nop               
  jmpq .L_ead28                      #  73    0xeadb6  5      OPC=jmpq_label_1      
  nop                                #  74    0xeadbb  1      OPC=nop               
  nop                                #  75    0xeadbc  1      OPC=nop               
  nop                                #  76    0xeadbd  1      OPC=nop               
  nop                                #  77    0xeadbe  1      OPC=nop               
  nop                                #  78    0xeadbf  1      OPC=nop               
  nop                                #  79    0xeadc0  1      OPC=nop               
.L_eadc0:                            #        0xeadc1  0      OPC=<label>           
  cmpq $0x0, 0x2b1b60(%rip)          #  80    0xeadc1  8      OPC=cmpq_m64_imm8     
  jne .L_eadd9                       #  81    0xeadc9  2      OPC=jne_label         
  nop                                #  82    0xeadcb  1      OPC=nop               
  nop                                #  83    0xeadcc  1      OPC=nop               
  nop                                #  84    0xeadcd  1      OPC=nop               
  nop                                #  85    0xeadce  1      OPC=nop               
  nop                                #  86    0xeadcf  1      OPC=nop               
  nop                                #  87    0xeadd0  1      OPC=nop               
.L_eadd0:                            #        0xeadd1  0      OPC=<label>           
  movq $0x0, 0x18(%rsp)              #  88    0xeadd1  9      OPC=movq_m64_imm32    
.L_eadd9:                            #        0xeadda  0      OPC=<label>           
  movl (%r13), %edx                  #  89    0xeadda  4      OPC=movl_r32_m32      
  nop                                #  90    0xeadde  1      OPC=nop               
  cmpl $0x0, 0x2b5e1b(%rip)          #  91    0xeaddf  7      OPC=cmpl_m32_imm8     
  je .L_eadf2                        #  92    0xeade6  2      OPC=je_label          
  lock                               #  93    0xeade8  1      OPC=lock              
  decl 0x2b3c62(%rip)                #  94    0xeade9  6      OPC=decl_m32          
  nop                                #  95    0xeadef  1      OPC=nop               
  jne .L_eadfa                       #  96    0xeadf0  2      OPC=jne_label         
  jmpq .L_eae14                      #  97    0xeadf2  2      OPC=jmpq_label        
.L_eadf2:                            #        0xeadf4  0      OPC=<label>           
  decl 0x2b3c58(%rip)                #  98    0xeadf4  6      OPC=decl_m32          
  je .L_eae14                        #  99    0xeadfa  2      OPC=je_label          
.L_eadfa:                            #        0xeadfc  0      OPC=<label>           
  leaq 0x2b3c4f(%rip), %rdi          #  100   0xeadfc  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                   #  101   0xeae03  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private   #  102   0xeae0a  5      OPC=callq_label       
  addq $0x80, %rsp                   #  103   0xeae0f  7      OPC=addq_r64_imm32    
.L_eae14:                            #        0xeae16  0      OPC=<label>           
  movl %edx, (%r13)                  #  104   0xeae16  4      OPC=movl_m32_r32      
  nop                                #  105   0xeae1a  1      OPC=nop               
  movq 0x18(%rsp), %rax              #  106   0xeae1b  5      OPC=movq_r64_m64      
  addq $0x38, %rsp                   #  107   0xeae20  4      OPC=addq_r64_imm8     
  popq %rbx                          #  108   0xeae24  1      OPC=popq_r64_1        
  popq %rbp                          #  109   0xeae25  1      OPC=popq_r64_1        
  popq %r12                          #  110   0xeae26  2      OPC=popq_r64_1        
  popq %r13                          #  111   0xeae28  2      OPC=popq_r64_1        
  popq %r14                          #  112   0xeae2a  2      OPC=popq_r64_1        
  popq %r15                          #  113   0xeae2c  2      OPC=popq_r64_1        
  retq                               #  114   0xeae2e  1      OPC=retq              
  nop                                #  115   0xeae2f  1      OPC=nop               
  nop                                #  116   0xeae30  1      OPC=nop               
  nop                                #  117   0xeae31  1      OPC=nop               
.L_eae30:                            #        0xeae32  0      OPC=<label>           
  movq $0x0, 0x2b1aed(%rip)          #  118   0xeae32  11     OPC=movq_m64_imm32    
  xorl %edx, %edx                    #  119   0xeae3d  2      OPC=xorl_r32_r32      
  jmpq .L_ead49                      #  120   0xeae3f  5      OPC=jmpq_label_1      
.L_eae42:                            #        0xeae44  0      OPC=<label>           
  addq $0x38, %rsp                   #  121   0xeae44  4      OPC=addq_r64_imm8     
  xorl %eax, %eax                    #  122   0xeae48  2      OPC=xorl_r32_r32      
  popq %rbx                          #  123   0xeae4a  1      OPC=popq_r64_1        
  popq %rbp                          #  124   0xeae4b  1      OPC=popq_r64_1        
  popq %r12                          #  125   0xeae4c  2      OPC=popq_r64_1        
  popq %r13                          #  126   0xeae4e  2      OPC=popq_r64_1        
  popq %r14                          #  127   0xeae50  2      OPC=popq_r64_1        
  popq %r15                          #  128   0xeae52  2      OPC=popq_r64_1        
  retq                               #  129   0xeae54  1      OPC=retq              
.L_eae53:                            #        0xeae55  0      OPC=<label>           
  movl $0x400, %edi                  #  130   0xeae55  5      OPC=movl_r32_imm32    
  movq $0x400, 0x2b3be5(%rip)        #  131   0xeae5a  11     OPC=movq_m64_imm32    
  callq .memalign_plt                #  132   0xeae65  5      OPC=callq_label       
  movq %rax, 0x2b1ab9(%rip)          #  133   0xeae6a  7      OPC=movq_m64_r64      
  movq %rax, %rdx                    #  134   0xeae71  3      OPC=movq_r64_r64      
  jmpq .L_ead13                      #  135   0xeae74  5      OPC=jmpq_label_1      
  nop                                #  136   0xeae79  1      OPC=nop               
  nop                                #  137   0xeae7a  1      OPC=nop               
  nop                                #  138   0xeae7b  1      OPC=nop               
  nop                                #  139   0xeae7c  1      OPC=nop               
  nop                                #  140   0xeae7d  1      OPC=nop               
  nop                                #  141   0xeae7e  1      OPC=nop               
  nop                                #  142   0xeae7f  1      OPC=nop               
  nop                                #  143   0xeae80  1      OPC=nop               
  nop                                #  144   0xeae81  1      OPC=nop               
                                                                                    
.size fgetspent, .-fgetspent

