  .text
  .globl __vsyslog_chk
  .type __vsyslog_chk, @function

#! file-offset 0xe1ca0
#! rip-offset  0xe1ca0
#! capacity    1376 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
.__vsyslog_chk:                     #        0xe1ca0  0      OPC=<label>           
  pushq %r15                        #  1     0xe1ca0  2      OPC=pushq_r64_1       
  pushq %r14                        #  2     0xe1ca2  2      OPC=pushq_r64_1       
  movl %edi, %r15d                  #  3     0xe1ca4  3      OPC=movl_r32_r32      
  pushq %r13                        #  4     0xe1ca7  2      OPC=pushq_r64_1       
  pushq %r12                        #  5     0xe1ca9  2      OPC=pushq_r64_1       
  movq %rdx, %r13                   #  6     0xe1cab  3      OPC=movq_r64_r64      
  pushq %rbp                        #  7     0xe1cae  1      OPC=pushq_r64_1       
  pushq %rbx                        #  8     0xe1caf  1      OPC=pushq_r64_1       
  movl %esi, %ebp                   #  9     0xe1cb0  2      OPC=movl_r32_r32      
  movq %rcx, %r14                   #  10    0xe1cb2  3      OPC=movq_r64_r64      
  subq $0xa8, %rsp                  #  11    0xe1cb5  7      OPC=subq_r64_imm32    
  movq 0x2b91bd(%rip), %rax         #  12    0xe1cbc  7      OPC=movq_r64_m64      
  testl $0xfffffc00, %edi           #  13    0xe1cc3  6      OPC=testl_r32_imm32   
  movq $0x0, 0x10(%rsp)             #  14    0xe1cc9  9      OPC=movq_m64_imm32    
  movq $0x0, 0x18(%rsp)             #  15    0xe1cd2  9      OPC=movq_m64_imm32    
  movl (%rax), %r12d                #  16    0xe1cdb  3      OPC=movl_r32_m32      
  nop                               #  17    0xe1cde  1      OPC=nop               
  jne .L_e1f70                      #  18    0xe1cdf  6      OPC=jne_label_1       
.L_e1ce5:                           #        0xe1ce5  0      OPC=<label>           
  movl 0x2b95c5(%rip), %edx         #  19    0xe1ce5  6      OPC=movl_r32_m32      
  movl %r15d, %eax                  #  20    0xe1ceb  3      OPC=movl_r32_r32      
  andl $0x7, %eax                   #  21    0xe1cee  3      OPC=andl_r32_imm8     
  btl %eax, %edx                    #  22    0xe1cf1  3      OPC=btl_r32_r32       
  jae .L_e1f5e                      #  23    0xe1cf4  6      OPC=jae_label_1       
  movl 0x2b95b4(%rip), %eax         #  24    0xe1cfa  6      OPC=movl_r32_m32      
  leaq 0x18(%rsp), %rsi             #  25    0xe1d00  5      OPC=leaq_r64_m16      
  leaq 0x10(%rsp), %rdi             #  26    0xe1d05  5      OPC=leaq_r64_m16      
  orl %r15d, %eax                   #  27    0xe1d0a  3      OPC=orl_r32_r32       
  testl $0x3f8, %r15d               #  28    0xe1d0d  7      OPC=testl_r32_imm32   
  cmovel %eax, %r15d                #  29    0xe1d14  4      OPC=cmovel_r32_r32    
  callq .open_memstream             #  30    0xe1d18  5      OPC=callq_label       
  testq %rax, %rax                  #  31    0xe1d1d  3      OPC=testq_r64_r64     
  movq %rax, %rbx                   #  32    0xe1d20  3      OPC=movq_r64_r64      
  je .L_e1f98                       #  33    0xe1d23  6      OPC=je_label_1        
  orl $0x8000, (%rax)               #  34    0xe1d29  6      OPC=orl_m32_imm32     
  movl %r15d, %edx                  #  35    0xe1d2f  3      OPC=movl_r32_r32      
  leaq 0x839da(%rip), %rsi          #  36    0xe1d32  7      OPC=leaq_r64_m16      
  leaq 0x8(%rsp), %r15              #  37    0xe1d39  5      OPC=leaq_r64_m16      
  movq %rax, %rdi                   #  38    0xe1d3e  3      OPC=movq_r64_r64      
  xorl %eax, %eax                   #  39    0xe1d41  2      OPC=xorl_r32_r32      
  callq .fprintf                    #  40    0xe1d43  5      OPC=callq_label       
  movq %r15, %rdi                   #  41    0xe1d48  3      OPC=movq_r64_r64      
  callq .L_1f8d0                    #  42    0xe1d4b  5      OPC=callq_label       
  leaq 0x60(%rsp), %rsi             #  43    0xe1d50  5      OPC=leaq_r64_m16      
  movq %r15, %rdi                   #  44    0xe1d55  3      OPC=movq_r64_r64      
  callq .localtime_r                #  45    0xe1d58  5      OPC=callq_label       
  movq 0x28(%rbx), %rdi             #  46    0xe1d5d  4      OPC=movq_r64_m64      
  movq 0x30(%rbx), %rsi             #  47    0xe1d61  4      OPC=movq_r64_m64      
  leaq 0x2b7f54(%rip), %r8          #  48    0xe1d65  7      OPC=leaq_r64_m16      
  leaq 0x839a5(%rip), %rdx          #  49    0xe1d6c  7      OPC=leaq_r64_m16      
  movq %rax, %rcx                   #  50    0xe1d73  3      OPC=movq_r64_r64      
  subq %rdi, %rsi                   #  51    0xe1d76  3      OPC=subq_r64_r64      
  callq .__strftime_l               #  52    0xe1d79  5      OPC=callq_label       
  addq %rax, 0x28(%rbx)             #  53    0xe1d7e  4      OPC=addq_m64_r64      
  movq %rbx, %rdi                   #  54    0xe1d82  3      OPC=movq_r64_r64      
  callq ._IO_ftell                  #  55    0xe1d85  5      OPC=callq_label       
  movq 0x2bc767(%rip), %rdi         #  56    0xe1d8a  7      OPC=movq_r64_m64      
  movq %rax, %r15                   #  57    0xe1d91  3      OPC=movq_r64_r64      
  testq %rdi, %rdi                  #  58    0xe1d94  3      OPC=testq_r64_r64     
  je .L_e20e8                       #  59    0xe1d97  6      OPC=je_label_1        
.L_e1d9d:                           #        0xe1d9d  0      OPC=<label>           
  movq %rbx, %rsi                   #  60    0xe1d9d  3      OPC=movq_r64_r64      
  callq .fputs_unlocked             #  61    0xe1da0  5      OPC=callq_label       
  testb $0x1, 0x2bc754(%rip)        #  62    0xe1da5  7      OPC=testb_m8_imm8     
  jne .L_e2110                      #  63    0xe1dac  6      OPC=jne_label_1       
.L_e1db2:                           #        0xe1db2  0      OPC=<label>           
  cmpq $0x0, 0x2bc73e(%rip)         #  64    0xe1db2  8      OPC=cmpq_m64_imm8     
  je .L_e1dee                       #  65    0xe1dba  2      OPC=je_label          
  movq 0x28(%rbx), %rax             #  66    0xe1dbc  4      OPC=movq_r64_m64      
  cmpq 0x30(%rbx), %rax             #  67    0xe1dc0  4      OPC=cmpq_r64_m64      
  jae .L_e21c0                      #  68    0xe1dc4  6      OPC=jae_label_1       
  leaq 0x1(%rax), %rdx              #  69    0xe1dca  4      OPC=leaq_r64_m16      
  movq %rdx, 0x28(%rbx)             #  70    0xe1dce  4      OPC=movq_m64_r64      
  movb $0x3a, (%rax)                #  71    0xe1dd2  3      OPC=movb_m8_imm8      
.L_e1dd5:                           #        0xe1dd5  0      OPC=<label>           
  movq 0x28(%rbx), %rax             #  72    0xe1dd5  4      OPC=movq_r64_m64      
  cmpq 0x30(%rbx), %rax             #  73    0xe1dd9  4      OPC=cmpq_r64_m64      
  jae .L_e21a8                      #  74    0xe1ddd  6      OPC=jae_label_1       
  leaq 0x1(%rax), %rdx              #  75    0xe1de3  4      OPC=leaq_r64_m16      
  movq %rdx, 0x28(%rbx)             #  76    0xe1de7  4      OPC=movq_m64_r64      
  movb $0x20, (%rax)                #  77    0xe1deb  3      OPC=movb_m8_imm8      
.L_e1dee:                           #        0xe1dee  0      OPC=<label>           
  movq 0x2b908b(%rip), %rax         #  78    0xe1dee  7      OPC=movq_r64_m64      
  cmpl $0xffffffff, %ebp            #  79    0xe1df5  6      OPC=cmpl_r32_imm32    
  nop                               #  80    0xe1dfb  1      OPC=nop               
  nop                               #  81    0xe1dfc  1      OPC=nop               
  nop                               #  82    0xe1dfd  1      OPC=nop               
  movl %r12d, (%rax)                #  83    0xe1dfe  3      OPC=movl_m32_r32      
  nop                               #  84    0xe1e01  1      OPC=nop               
  je .L_e20d0                       #  85    0xe1e02  6      OPC=je_label_1        
  movq %r14, %rcx                   #  86    0xe1e08  3      OPC=movq_r64_r64      
  movq %r13, %rdx                   #  87    0xe1e0b  3      OPC=movq_r64_r64      
  movl %ebp, %esi                   #  88    0xe1e0e  2      OPC=movl_r32_r32      
  movq %rbx, %rdi                   #  89    0xe1e10  3      OPC=movq_r64_r64      
  callq .__vfprintf_chk             #  90    0xe1e13  5      OPC=callq_label       
.L_e1e12:                           #        0xe1e18  0      OPC=<label>           
  movq %rbx, %rdi                   #  91    0xe1e18  3      OPC=movq_r64_r64      
  callq ._IO_fclose__GLIBC_2_2_5    #  92    0xe1e1b  5      OPC=callq_label       
  movq 0x10(%rsp), %rax             #  93    0xe1e20  5      OPC=movq_r64_m64      
.L_e1e1f:                           #        0xe1e25  0      OPC=<label>           
  testb $0x20, 0x2bc6da(%rip)       #  94    0xe1e25  7      OPC=testb_m8_imm8     
  je .L_e1e89                       #  95    0xe1e2c  2      OPC=je_label          
  movq 0x18(%rsp), %rcx             #  96    0xe1e2e  5      OPC=movq_r64_m64      
  leaq (%rax,%r15,1), %rdx          #  97    0xe1e33  4      OPC=leaq_r64_m16      
  movq %rdx, 0x40(%rsp)             #  98    0xe1e37  5      OPC=movq_m64_r64      
  movq %rcx, %rdx                   #  99    0xe1e3c  3      OPC=movq_r64_r64      
  subq %r15, %rdx                   #  100   0xe1e3f  3      OPC=subq_r64_r64      
  movq %rdx, 0x48(%rsp)             #  101   0xe1e42  5      OPC=movq_m64_r64      
  cmpb $0xa, -0x1(%rax,%rcx,1)      #  102   0xe1e47  5      OPC=cmpb_m8_imm8      
  movl $0x1, %edx                   #  103   0xe1e4c  5      OPC=movl_r32_imm32    
  je .L_e1e64                       #  104   0xe1e51  2      OPC=je_label          
  leaq 0x813f5(%rip), %rbx          #  105   0xe1e53  7      OPC=leaq_r64_m16      
  movq $0x1, 0x58(%rsp)             #  106   0xe1e5a  9      OPC=movq_m64_imm32    
  movb $0x2, %dl                    #  107   0xe1e63  2      OPC=movb_r8_imm8      
  movq %rbx, 0x50(%rsp)             #  108   0xe1e65  5      OPC=movq_m64_r64      
.L_e1e64:                           #        0xe1e6a  0      OPC=<label>           
  leaq 0x20(%rsp), %rcx             #  109   0xe1e6a  5      OPC=leaq_r64_m16      
  leaq 0x40(%rsp), %rsi             #  110   0xe1e6f  5      OPC=leaq_r64_m16      
  movl $0x0, %ebx                   #  111   0xe1e74  5      OPC=movl_r32_imm32    
  movl $0x2, %edi                   #  112   0xe1e79  5      OPC=movl_r32_imm32    
  cmpq %rcx, %rax                   #  113   0xe1e7e  3      OPC=cmpq_r64_r64      
  cmovneq %rax, %rbx                #  114   0xe1e81  4      OPC=cmovneq_r64_r64   
  callq .writev                     #  115   0xe1e85  5      OPC=callq_label       
  movq 0x10(%rsp), %rax             #  116   0xe1e8a  5      OPC=movq_r64_m64      
.L_e1e89:                           #        0xe1e8f  0      OPC=<label>           
  movq %rax, 0x40(%rsp)             #  117   0xe1e8f  5      OPC=movq_m64_r64      
  movq $0x0, 0x48(%rsp)             #  118   0xe1e94  9      OPC=movq_m64_imm32    
  movl $0x1, %esi                   #  119   0xe1e9d  5      OPC=movl_r32_imm32    
  xorl %eax, %eax                   #  120   0xe1ea2  2      OPC=xorl_r32_r32      
  cmpl $0x0, 0x2bed5b(%rip)         #  121   0xe1ea4  7      OPC=cmpl_m32_imm8     
  je .L_e1eb3                       #  122   0xe1eab  2      OPC=je_label          
  lock                              #  123   0xe1ead  1      OPC=lock              
  cmpxchgl %esi, 0x2bc641(%rip)     #  124   0xe1eae  7      OPC=cmpxchgl_m32_r32  
  nop                               #  125   0xe1eb5  1      OPC=nop               
  jne .L_e1ebc                      #  126   0xe1eb6  2      OPC=jne_label         
  jmpq .L_e1ed6                     #  127   0xe1eb8  2      OPC=jmpq_label        
.L_e1eb3:                           #        0xe1eba  0      OPC=<label>           
  cmpxchgl %esi, 0x2bc636(%rip)     #  128   0xe1eba  7      OPC=cmpxchgl_m32_r32  
  je .L_e1ed6                       #  129   0xe1ec1  2      OPC=je_label          
.L_e1ebc:                           #        0xe1ec3  0      OPC=<label>           
  leaq 0x2bc62d(%rip), %rdi         #  130   0xe1ec3  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  131   0xe1eca  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  132   0xe1ed1  5      OPC=callq_label       
  addq $0x80, %rsp                  #  133   0xe1ed6  7      OPC=addq_r64_imm32    
.L_e1ed6:                           #        0xe1edd  0      OPC=<label>           
  movl 0x2bc628(%rip), %eax         #  134   0xe1edd  6      OPC=movl_r32_m32      
  testl %eax, %eax                  #  135   0xe1ee3  2      OPC=testl_r32_r32     
  je .L_e2040                       #  136   0xe1ee5  6      OPC=je_label_1        
  cmpl $0x1, 0x2b93d1(%rip)         #  137   0xe1eeb  7      OPC=cmpl_m32_imm8     
  je .L_e20c0                       #  138   0xe1ef2  6      OPC=je_label_1        
.L_e1ef1:                           #        0xe1ef8  0      OPC=<label>           
  movq 0x18(%rsp), %rdx             #  139   0xe1ef8  5      OPC=movq_r64_m64      
  movq 0x10(%rsp), %rsi             #  140   0xe1efd  5      OPC=movq_r64_m64      
  movl $0x4000, %ecx                #  141   0xe1f02  5      OPC=movl_r32_imm32    
  movl 0x2b93b2(%rip), %edi         #  142   0xe1f07  6      OPC=movl_r32_m32      
  callq .__send                     #  143   0xe1f0d  5      OPC=callq_label       
  testq %rax, %rax                  #  144   0xe1f12  3      OPC=testq_r64_r64     
  js .L_e2130                       #  145   0xe1f15  6      OPC=js_label_1        
.L_e1f14:                           #        0xe1f1b  0      OPC=<label>           
  cmpl $0x0, 0x2bece5(%rip)         #  146   0xe1f1b  7      OPC=cmpl_m32_imm8     
  je .L_e1f28                       #  147   0xe1f22  2      OPC=je_label          
  lock                              #  148   0xe1f24  1      OPC=lock              
  decl 0x2bc5cc(%rip)               #  149   0xe1f25  6      OPC=decl_m32          
  nop                               #  150   0xe1f2b  1      OPC=nop               
  jne .L_e1f30                      #  151   0xe1f2c  2      OPC=jne_label         
  jmpq .L_e1f4a                     #  152   0xe1f2e  2      OPC=jmpq_label        
.L_e1f28:                           #        0xe1f30  0      OPC=<label>           
  decl 0x2bc5c2(%rip)               #  153   0xe1f30  6      OPC=decl_m32          
  je .L_e1f4a                       #  154   0xe1f36  2      OPC=je_label          
.L_e1f30:                           #        0xe1f38  0      OPC=<label>           
  leaq 0x2bc5b9(%rip), %rdi         #  155   0xe1f38  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  156   0xe1f3f  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  157   0xe1f46  5      OPC=callq_label       
  addq $0x80, %rsp                  #  158   0xe1f4b  7      OPC=addq_r64_imm32    
.L_e1f4a:                           #        0xe1f52  0      OPC=<label>           
  movq 0x10(%rsp), %rdi             #  159   0xe1f52  5      OPC=movq_r64_m64      
  leaq 0x20(%rsp), %rax             #  160   0xe1f57  5      OPC=leaq_r64_m16      
  cmpq %rax, %rdi                   #  161   0xe1f5c  3      OPC=cmpq_r64_r64      
  je .L_e1f5e                       #  162   0xe1f5f  2      OPC=je_label          
  callq .L_1f8c0                    #  163   0xe1f61  5      OPC=callq_label       
.L_e1f5e:                           #        0xe1f66  0      OPC=<label>           
  addq $0xa8, %rsp                  #  164   0xe1f66  7      OPC=addq_r64_imm32    
  popq %rbx                         #  165   0xe1f6d  1      OPC=popq_r64_1        
  popq %rbp                         #  166   0xe1f6e  1      OPC=popq_r64_1        
  popq %r12                         #  167   0xe1f6f  2      OPC=popq_r64_1        
  popq %r13                         #  168   0xe1f71  2      OPC=popq_r64_1        
  popq %r14                         #  169   0xe1f73  2      OPC=popq_r64_1        
  popq %r15                         #  170   0xe1f75  2      OPC=popq_r64_1        
  retq                              #  171   0xe1f77  1      OPC=retq              
.L_e1f70:                           #        0xe1f78  0      OPC=<label>           
  leaq 0x874d9(%rip), %rsi          #  172   0xe1f78  7      OPC=leaq_r64_m16      
  movl %edi, %edx                   #  173   0xe1f7f  2      OPC=movl_r32_r32      
  xorl %eax, %eax                   #  174   0xe1f81  2      OPC=xorl_r32_r32      
  movl $0x23, %edi                  #  175   0xe1f83  5      OPC=movl_r32_imm32    
  andl $0x3ff, %r15d                #  176   0xe1f88  7      OPC=andl_r32_imm32    
  callq .syslog                     #  177   0xe1f8f  5      OPC=callq_label       
  jmpq .L_e1ce5                     #  178   0xe1f94  5      OPC=jmpq_label_1      
  nop                               #  179   0xe1f99  1      OPC=nop               
  nop                               #  180   0xe1f9a  1      OPC=nop               
  nop                               #  181   0xe1f9b  1      OPC=nop               
  nop                               #  182   0xe1f9c  1      OPC=nop               
  nop                               #  183   0xe1f9d  1      OPC=nop               
  nop                               #  184   0xe1f9e  1      OPC=nop               
  nop                               #  185   0xe1f9f  1      OPC=nop               
.L_e1f98:                           #        0xe1fa0  0      OPC=<label>           
  movq $0x6d20666f2074756f, %rax    #  186   0xe1fa0  10     OPC=movq_r64_imm64    
  leaq 0x60(%rsp), %rbp             #  187   0xe1faa  5      OPC=leaq_r64_m16      
  movq %rax, 0x20(%rsp)             #  188   0xe1faf  5      OPC=movq_m64_r64      
  movq $0x5b2079726f6d65, %rax      #  189   0xe1fb4  10     OPC=movq_r64_imm64    
  movq %rax, 0x28(%rsp)             #  190   0xe1fbe  5      OPC=movq_m64_r64      
  callq .__getpid                   #  191   0xe1fc3  5      OPC=callq_label       
  leaq 0xc(%rbp), %rsi              #  192   0xe1fc8  4      OPC=leaq_r64_m16      
  movl %eax, %ecx                   #  193   0xe1fcc  2      OPC=movl_r32_r32      
  movl $0x66666667, %edi            #  194   0xe1fce  5      OPC=movl_r32_imm32    
  nop                               #  195   0xe1fd3  1      OPC=nop               
  nop                               #  196   0xe1fd4  1      OPC=nop               
  nop                               #  197   0xe1fd5  1      OPC=nop               
  nop                               #  198   0xe1fd6  1      OPC=nop               
  nop                               #  199   0xe1fd7  1      OPC=nop               
.L_e1fd0:                           #        0xe1fd8  0      OPC=<label>           
  movl %ecx, %eax                   #  200   0xe1fd8  2      OPC=movl_r32_r32      
  subq $0x1, %rsi                   #  201   0xe1fda  4      OPC=subq_r64_imm8     
  imull %edi                        #  202   0xe1fde  2      OPC=imull_r32         
  movl %ecx, %eax                   #  203   0xe1fe0  2      OPC=movl_r32_r32      
  sarl $0x1f, %eax                  #  204   0xe1fe2  3      OPC=sarl_r32_imm8     
  sarl $0x2, %edx                   #  205   0xe1fe5  3      OPC=sarl_r32_imm8     
  subl %eax, %edx                   #  206   0xe1fe8  2      OPC=subl_r32_r32      
  leal (%rdx,%rdx,4), %eax          #  207   0xe1fea  3      OPC=leal_r32_m16      
  addl %eax, %eax                   #  208   0xe1fed  2      OPC=addl_r32_r32      
  subl %eax, %ecx                   #  209   0xe1fef  2      OPC=subl_r32_r32      
  addl $0x30, %ecx                  #  210   0xe1ff1  3      OPC=addl_r32_imm8     
  testl %edx, %edx                  #  211   0xe1ff4  2      OPC=testl_r32_r32     
  movb %cl, (%rsi)                  #  212   0xe1ff6  2      OPC=movb_m8_r8        
  movl %edx, %ecx                   #  213   0xe1ff8  2      OPC=movl_r32_r32      
  jne .L_e1fd0                      #  214   0xe1ffa  2      OPC=jne_label         
  leaq 0xc(%rbp), %rax              #  215   0xe1ffc  4      OPC=leaq_r64_m16      
  leaq 0x2f(%rsp), %rdi             #  216   0xe2000  5      OPC=leaq_r64_m16      
  leaq 0x20(%rsp), %rbx             #  217   0xe2005  5      OPC=leaq_r64_m16      
  xorl %r15d, %r15d                 #  218   0xe200a  3      OPC=xorl_r32_r32      
  subq %rsi, %rax                   #  219   0xe200d  3      OPC=subq_r64_r64      
  movq %rax, %rbp                   #  220   0xe2010  3      OPC=movq_r64_r64      
  movq %rax, %rdx                   #  221   0xe2013  3      OPC=movq_r64_r64      
  callq .__GI_memcpy                #  222   0xe2016  5      OPC=callq_label       
  addq %rbp, %rax                   #  223   0xe201b  3      OPC=addq_r64_r64      
  movq %rbx, 0x10(%rsp)             #  224   0xe201e  5      OPC=movq_m64_r64      
  movb $0x5d, (%rax)                #  225   0xe2023  3      OPC=movb_m8_imm8      
  movb $0x0, 0x1(%rax)              #  226   0xe2026  4      OPC=movb_m8_imm8      
  addq $0x1, %rax                   #  227   0xe202a  4      OPC=addq_r64_imm8     
  subq %rbx, %rax                   #  228   0xe202e  3      OPC=subq_r64_r64      
  movq %rax, 0x18(%rsp)             #  229   0xe2031  5      OPC=movq_m64_r64      
  movq %rbx, %rax                   #  230   0xe2036  3      OPC=movq_r64_r64      
  jmpq .L_e1e1f                     #  231   0xe2039  5      OPC=jmpq_label_1      
  nop                               #  232   0xe203e  1      OPC=nop               
  nop                               #  233   0xe203f  1      OPC=nop               
  nop                               #  234   0xe2040  1      OPC=nop               
  nop                               #  235   0xe2041  1      OPC=nop               
  nop                               #  236   0xe2042  1      OPC=nop               
  nop                               #  237   0xe2043  1      OPC=nop               
  nop                               #  238   0xe2044  1      OPC=nop               
  nop                               #  239   0xe2045  1      OPC=nop               
  nop                               #  240   0xe2046  1      OPC=nop               
  nop                               #  241   0xe2047  1      OPC=nop               
.L_e2040:                           #        0xe2048  0      OPC=<label>           
  movl 0x2bc4ba(%rip), %esi         #  242   0xe2048  6      OPC=movl_r32_m32      
  movq 0x2bc4ab(%rip), %rdi         #  243   0xe204e  7      OPC=movq_r64_m64      
  xorl %edx, %edx                   #  244   0xe2055  2      OPC=xorl_r32_r32      
  orl $0x8, %esi                    #  245   0xe2057  3      OPC=orl_r32_imm8      
  callq .openlog_internal           #  246   0xe205a  5      OPC=callq_label       
  cmpl $0x1, 0x2b925e(%rip)         #  247   0xe205f  7      OPC=cmpl_m32_imm8     
  movl 0x2bc4a0(%rip), %eax         #  248   0xe2066  6      OPC=movl_r32_m32      
  je .L_e20c0                       #  249   0xe206c  2      OPC=je_label          
.L_e2066:                           #        0xe206e  0      OPC=<label>           
  testl %eax, %eax                  #  250   0xe206e  2      OPC=testl_r32_r32     
  jne .L_e1ef1                      #  251   0xe2070  6      OPC=jne_label_1       
.L_e206e:                           #        0xe2076  0      OPC=<label>           
  testb $0x2, 0x2bc48b(%rip)        #  252   0xe2076  7      OPC=testb_m8_imm8     
  je .L_e1f14                       #  253   0xe207d  6      OPC=je_label_1        
  leaq 0x836a5(%rip), %rdi          #  254   0xe2083  7      OPC=leaq_r64_m16      
  xorl %edx, %edx                   #  255   0xe208a  2      OPC=xorl_r32_r32      
  movl $0x101, %esi                 #  256   0xe208c  5      OPC=movl_r32_imm32    
  xorl %eax, %eax                   #  257   0xe2091  2      OPC=xorl_r32_r32      
  callq .__open                     #  258   0xe2093  5      OPC=callq_label       
  testl %eax, %eax                  #  259   0xe2098  2      OPC=testl_r32_r32     
  movl %eax, %ebx                   #  260   0xe209a  2      OPC=movl_r32_r32      
  js .L_e1f14                       #  261   0xe209c  6      OPC=js_label_1        
  movq %r15, %rdx                   #  262   0xe20a2  3      OPC=movq_r64_r64      
  addq 0x10(%rsp), %rdx             #  263   0xe20a5  5      OPC=addq_r64_m64      
  leaq 0x8368b(%rip), %rsi          #  264   0xe20aa  7      OPC=leaq_r64_m16      
  movl %eax, %edi                   #  265   0xe20b1  2      OPC=movl_r32_r32      
  xorl %eax, %eax                   #  266   0xe20b3  2      OPC=xorl_r32_r32      
  callq .dprintf                    #  267   0xe20b5  5      OPC=callq_label       
  movl %ebx, %edi                   #  268   0xe20ba  2      OPC=movl_r32_r32      
  callq .__close                    #  269   0xe20bc  5      OPC=callq_label       
  jmpq .L_e1f14                     #  270   0xe20c1  5      OPC=jmpq_label_1      
  xchgw %ax, %ax                    #  271   0xe20c6  2      OPC=xchgw_ax_r16      
.L_e20c0:                           #        0xe20c8  0      OPC=<label>           
  addq $0x1, 0x18(%rsp)             #  272   0xe20c8  6      OPC=addq_m64_imm8     
  jmpq .L_e2066                     #  273   0xe20ce  2      OPC=jmpq_label        
  nop                               #  274   0xe20d0  1      OPC=nop               
  nop                               #  275   0xe20d1  1      OPC=nop               
  nop                               #  276   0xe20d2  1      OPC=nop               
  nop                               #  277   0xe20d3  1      OPC=nop               
  nop                               #  278   0xe20d4  1      OPC=nop               
  nop                               #  279   0xe20d5  1      OPC=nop               
  nop                               #  280   0xe20d6  1      OPC=nop               
  nop                               #  281   0xe20d7  1      OPC=nop               
.L_e20d0:                           #        0xe20d8  0      OPC=<label>           
  movq %r14, %rdx                   #  282   0xe20d8  3      OPC=movq_r64_r64      
  movq %r13, %rsi                   #  283   0xe20db  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                   #  284   0xe20de  3      OPC=movq_r64_r64      
  callq ._IO_vfprintf               #  285   0xe20e1  5      OPC=callq_label       
  jmpq .L_e1e12                     #  286   0xe20e6  5      OPC=jmpq_label_1      
  nop                               #  287   0xe20eb  1      OPC=nop               
  nop                               #  288   0xe20ec  1      OPC=nop               
  nop                               #  289   0xe20ed  1      OPC=nop               
  nop                               #  290   0xe20ee  1      OPC=nop               
  nop                               #  291   0xe20ef  1      OPC=nop               
.L_e20e8:                           #        0xe20f0  0      OPC=<label>           
  movq 0x2b8d21(%rip), %rax         #  292   0xe20f0  7      OPC=movq_r64_m64      
  movq (%rax), %rdi                 #  293   0xe20f7  3      OPC=movq_r64_m64      
  testq %rdi, %rdi                  #  294   0xe20fa  3      OPC=testq_r64_r64     
  movq %rdi, 0x2bc3fc(%rip)         #  295   0xe20fd  7      OPC=movq_m64_r64      
  jne .L_e1d9d                      #  296   0xe2104  6      OPC=jne_label_1       
  testb $0x1, 0x2bc3f7(%rip)        #  297   0xe210a  7      OPC=testb_m8_imm8     
  je .L_e1dee                       #  298   0xe2111  6      OPC=je_label_1        
  nop                               #  299   0xe2117  1      OPC=nop               
.L_e2110:                           #        0xe2118  0      OPC=<label>           
  callq .__getpid                   #  300   0xe2118  5      OPC=callq_label       
  leaq 0x83606(%rip), %rsi          #  301   0xe211d  7      OPC=leaq_r64_m16      
  movl %eax, %edx                   #  302   0xe2124  2      OPC=movl_r32_r32      
  movq %rbx, %rdi                   #  303   0xe2126  3      OPC=movq_r64_r64      
  xorl %eax, %eax                   #  304   0xe2129  2      OPC=xorl_r32_r32      
  callq .fprintf                    #  305   0xe212b  5      OPC=callq_label       
  jmpq .L_e1db2                     #  306   0xe2130  5      OPC=jmpq_label_1      
  nop                               #  307   0xe2135  1      OPC=nop               
  nop                               #  308   0xe2136  1      OPC=nop               
  nop                               #  309   0xe2137  1      OPC=nop               
.L_e2130:                           #        0xe2138  0      OPC=<label>           
  movl 0x2bc3ce(%rip), %eax         #  310   0xe2138  6      OPC=movl_r32_m32      
  testl %eax, %eax                  #  311   0xe213e  2      OPC=testl_r32_r32     
  je .L_e206e                       #  312   0xe2140  6      OPC=je_label_1        
  callq .closelog_internal_part_0   #  313   0xe2146  5      OPC=callq_label       
  movl 0x2bc3b7(%rip), %esi         #  314   0xe214b  6      OPC=movl_r32_m32      
  movq 0x2bc3a8(%rip), %rdi         #  315   0xe2151  7      OPC=movq_r64_m64      
  xorl %edx, %edx                   #  316   0xe2158  2      OPC=xorl_r32_r32      
  orl $0x8, %esi                    #  317   0xe215a  3      OPC=orl_r32_imm8      
  callq .openlog_internal           #  318   0xe215d  5      OPC=callq_label       
  movl 0x2bc3a4(%rip), %ecx         #  319   0xe2162  6      OPC=movl_r32_m32      
  testl %ecx, %ecx                  #  320   0xe2168  2      OPC=testl_r32_r32     
  je .L_e206e                       #  321   0xe216a  6      OPC=je_label_1        
  movq 0x18(%rsp), %rdx             #  322   0xe2170  5      OPC=movq_r64_m64      
  movq 0x10(%rsp), %rsi             #  323   0xe2175  5      OPC=movq_r64_m64      
  movl $0x4000, %ecx                #  324   0xe217a  5      OPC=movl_r32_imm32    
  movl 0x2b913b(%rip), %edi         #  325   0xe217f  6      OPC=movl_r32_m32      
  callq .__send                     #  326   0xe2185  5      OPC=callq_label       
  testq %rax, %rax                  #  327   0xe218a  3      OPC=testq_r64_r64     
  jns .L_e1f14                      #  328   0xe218d  6      OPC=jns_label_1       
  movl 0x2bc373(%rip), %edx         #  329   0xe2193  6      OPC=movl_r32_m32      
  testl %edx, %edx                  #  330   0xe2199  2      OPC=testl_r32_r32     
  je .L_e206e                       #  331   0xe219b  6      OPC=je_label_1        
  callq .closelog_internal_part_0   #  332   0xe21a1  5      OPC=callq_label       
  jmpq .L_e206e                     #  333   0xe21a6  5      OPC=jmpq_label_1      
  nop                               #  334   0xe21ab  1      OPC=nop               
  nop                               #  335   0xe21ac  1      OPC=nop               
  nop                               #  336   0xe21ad  1      OPC=nop               
  nop                               #  337   0xe21ae  1      OPC=nop               
  nop                               #  338   0xe21af  1      OPC=nop               
.L_e21a8:                           #        0xe21b0  0      OPC=<label>           
  movl $0x20, %esi                  #  339   0xe21b0  5      OPC=movl_r32_imm32    
  movq %rbx, %rdi                   #  340   0xe21b5  3      OPC=movq_r64_r64      
  callq .__overflow                 #  341   0xe21b8  5      OPC=callq_label       
  jmpq .L_e1dee                     #  342   0xe21bd  5      OPC=jmpq_label_1      
  nop                               #  343   0xe21c2  1      OPC=nop               
  nop                               #  344   0xe21c3  1      OPC=nop               
  nop                               #  345   0xe21c4  1      OPC=nop               
  nop                               #  346   0xe21c5  1      OPC=nop               
  nop                               #  347   0xe21c6  1      OPC=nop               
  nop                               #  348   0xe21c7  1      OPC=nop               
.L_e21c0:                           #        0xe21c8  0      OPC=<label>           
  movl $0x3a, %esi                  #  349   0xe21c8  5      OPC=movl_r32_imm32    
  movq %rbx, %rdi                   #  350   0xe21cd  3      OPC=movq_r64_r64      
  callq .__overflow                 #  351   0xe21d0  5      OPC=callq_label       
  jmpq .L_e1dd5                     #  352   0xe21d5  5      OPC=jmpq_label_1      
  leaq 0x40(%rsp), %rdi             #  353   0xe21da  5      OPC=leaq_r64_m16      
  movq %rax, %rbx                   #  354   0xe21df  3      OPC=movq_r64_r64      
  callq .cancel_handler             #  355   0xe21e2  5      OPC=callq_label       
  movq %rbx, %rdi                   #  356   0xe21e7  3      OPC=movq_r64_r64      
  callq ._Unwind_Resume             #  357   0xe21ea  5      OPC=callq_label       
  movq %rax, %rbp                   #  358   0xe21ef  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                   #  359   0xe21f2  3      OPC=movq_r64_r64      
  callq .L_1f8c0                    #  360   0xe21f5  5      OPC=callq_label       
  movq %rbp, %rdi                   #  361   0xe21fa  3      OPC=movq_r64_r64      
  callq ._Unwind_Resume             #  362   0xe21fd  5      OPC=callq_label       
  nop                               #  363   0xe2202  1      OPC=nop               
  nop                               #  364   0xe2203  1      OPC=nop               
  nop                               #  365   0xe2204  1      OPC=nop               
  nop                               #  366   0xe2205  1      OPC=nop               
  nop                               #  367   0xe2206  1      OPC=nop               
  nop                               #  368   0xe2207  1      OPC=nop               
                                                                                   
.size __vsyslog_chk, .-__vsyslog_chk

