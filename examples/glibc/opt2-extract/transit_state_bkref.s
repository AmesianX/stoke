  .text
  .globl transit_state_bkref
  .type transit_state_bkref, @function

#! file-offset 0xc6b10
#! rip-offset  0xc6b10
#! capacity    2064 bytes

# Text                                   #  Line  RIP      Bytes  Opcode               
.transit_state_bkref:                    #        0xc6b10  0      OPC=<label>          
  pushq %r15                             #  1     0xc6b10  2      OPC=pushq_r64_1      
  pushq %r14                             #  2     0xc6b12  2      OPC=pushq_r64_1      
  pushq %r13                             #  3     0xc6b14  2      OPC=pushq_r64_1      
  pushq %r12                             #  4     0xc6b16  2      OPC=pushq_r64_1      
  pushq %rbp                             #  5     0xc6b18  1      OPC=pushq_r64_1      
  pushq %rbx                             #  6     0xc6b19  1      OPC=pushq_r64_1      
  subq $0xb8, %rsp                       #  7     0xc6b1a  7      OPC=subq_r64_imm32   
  movq 0x70(%rdi), %rax                  #  8     0xc6b21  4      OPC=movq_r64_m64     
  movl 0x4(%rsi), %r8d                   #  9     0xc6b25  4      OPC=movl_r32_m32     
  movq %rax, 0x40(%rsp)                  #  10    0xc6b29  5      OPC=movq_m64_r64     
  movl 0x38(%rdi), %eax                  #  11    0xc6b2e  3      OPC=movl_r32_m32     
  testl %r8d, %r8d                       #  12    0xc6b31  3      OPC=testl_r32_r32    
  movl %eax, 0x30(%rsp)                  #  13    0xc6b34  4      OPC=movl_m32_r32     
  jle .L_c708b                           #  14    0xc6b38  6      OPC=jle_label_1      
  movslq 0x30(%rsp), %rax                #  15    0xc6b3e  5      OPC=movslq_r64_m32   
  movq %rsi, 0x38(%rsp)                  #  16    0xc6b43  5      OPC=movq_m64_r64     
  movq %rdi, %r14                        #  17    0xc6b48  3      OPC=movq_r64_r64     
  movq $0x0, 0x28(%rsp)                  #  18    0xc6b4b  9      OPC=movq_m64_imm32   
  shlq $0x3, %rax                        #  19    0xc6b54  4      OPC=shlq_r64_imm8    
  movq %rax, 0x70(%rsp)                  #  20    0xc6b58  5      OPC=movq_m64_r64     
  leaq 0xa0(%rdi), %rax                  #  21    0xc6b5d  7      OPC=leaq_r64_m16     
  movq %rax, 0x80(%rsp)                  #  22    0xc6b64  8      OPC=movq_m64_r64     
  leaq 0xa0(%rsp), %rax                  #  23    0xc6b6c  8      OPC=leaq_r64_m16     
  movq %rax, 0x68(%rsp)                  #  24    0xc6b74  5      OPC=movq_m64_r64     
  leaq 0x9c(%rsp), %rax                  #  25    0xc6b79  8      OPC=leaq_r64_m16     
  movq %rax, 0x78(%rsp)                  #  26    0xc6b81  5      OPC=movq_m64_r64     
  jmpq .L_c6bb1                          #  27    0xc6b86  2      OPC=jmpq_label       
  nop                                    #  28    0xc6b88  1      OPC=nop              
  nop                                    #  29    0xc6b89  1      OPC=nop              
  nop                                    #  30    0xc6b8a  1      OPC=nop              
  nop                                    #  31    0xc6b8b  1      OPC=nop              
  nop                                    #  32    0xc6b8c  1      OPC=nop              
  nop                                    #  33    0xc6b8d  1      OPC=nop              
  nop                                    #  34    0xc6b8e  1      OPC=nop              
  nop                                    #  35    0xc6b8f  1      OPC=nop              
.L_c6b90:                                #        0xc6b90  0      OPC=<label>          
  movq 0x28(%rsp), %rdi                  #  36    0xc6b90  5      OPC=movq_r64_m64     
  movl %edi, %eax                        #  37    0xc6b95  2      OPC=movl_r32_r32     
  addq $0x1, %rdi                        #  38    0xc6b97  4      OPC=addq_r64_imm8    
  movq %rdi, 0x28(%rsp)                  #  39    0xc6b9b  5      OPC=movq_m64_r64     
  movq 0x38(%rsp), %rdi                  #  40    0xc6ba0  5      OPC=movq_r64_m64     
  addl $0x1, %eax                        #  41    0xc6ba5  3      OPC=addl_r32_imm8    
  cmpl %eax, 0x4(%rdi)                   #  42    0xc6ba8  3      OPC=cmpl_m32_r32     
  jle .L_c708b                           #  43    0xc6bab  6      OPC=jle_label_1      
.L_c6bb1:                                #        0xc6bb1  0      OPC=<label>          
  movq 0x38(%rsp), %rax                  #  44    0xc6bb1  5      OPC=movq_r64_m64     
  movq 0x28(%rsp), %rdi                  #  45    0xc6bb6  5      OPC=movq_r64_m64     
  movq 0x40(%rsp), %rbx                  #  46    0xc6bbb  5      OPC=movq_r64_m64     
  movq 0x8(%rax), %rax                   #  47    0xc6bc0  4      OPC=movq_r64_m64     
  movslq (%rax,%rdi,4), %rax             #  48    0xc6bc4  4      OPC=movslq_r64_m32   
  movq %rax, %r12                        #  49    0xc6bc8  3      OPC=movq_r64_r64     
  movq %rax, 0x60(%rsp)                  #  50    0xc6bcb  5      OPC=movq_m64_r64     
  shlq $0x4, %rax                        #  51    0xc6bd0  4      OPC=shlq_r64_imm8    
  movq %rax, 0x58(%rsp)                  #  52    0xc6bd4  5      OPC=movq_m64_r64     
  addq (%rbx), %rax                      #  53    0xc6bd9  3      OPC=addq_r64_m64     
  cmpb $0x4, 0x8(%rax)                   #  54    0xc6bdc  4      OPC=cmpb_m8_imm8     
  jne .L_c6b90                           #  55    0xc6be0  2      OPC=jne_label        
  movl 0x8(%rax), %ebx                   #  56    0xc6be2  3      OPC=movl_r32_m32     
  testl $0x3ff00, %ebx                   #  57    0xc6be5  6      OPC=testl_r32_imm32  
  je .L_c6c48                            #  58    0xc6beb  2      OPC=je_label         
  movl 0x78(%r14), %edx                  #  59    0xc6bed  4      OPC=movl_r32_m32     
  movl 0x30(%rsp), %esi                  #  60    0xc6bf1  4      OPC=movl_r32_m32     
  shrl $0x8, %ebx                        #  61    0xc6bf5  3      OPC=shrl_r32_imm8    
  movq %r14, %rdi                        #  62    0xc6bf8  3      OPC=movq_r64_r64     
  callq .re_string_context_at            #  63    0xc6bfb  5      OPC=callq_label      
  movl %ebx, %ecx                        #  64    0xc6c00  2      OPC=movl_r32_r32     
  movl %ebx, %edx                        #  65    0xc6c02  2      OPC=movl_r32_r32     
  andw $0x3ff, %cx                       #  66    0xc6c04  5      OPC=andw_r16_imm16   
  testb $0x4, %bl                        #  67    0xc6c09  3      OPC=testb_r8_imm8    
  je .L_c6cb7                            #  68    0xc6c0c  6      OPC=je_label_1       
  testb $0x1, %al                        #  69    0xc6c12  2      OPC=testb_al_imm8    
  je .L_c6b90                            #  70    0xc6c14  6      OPC=je_label_1       
  andl $0x8, %edx                        #  71    0xc6c1a  3      OPC=andl_r32_imm8    
  jne .L_c6b90                           #  72    0xc6c1d  6      OPC=jne_label_1      
  nop                                    #  73    0xc6c23  1      OPC=nop              
  nop                                    #  74    0xc6c24  1      OPC=nop              
  nop                                    #  75    0xc6c25  1      OPC=nop              
  nop                                    #  76    0xc6c26  1      OPC=nop              
  nop                                    #  77    0xc6c27  1      OPC=nop              
.L_c6c28:                                #        0xc6c28  0      OPC=<label>          
  testb $0x20, %cl                       #  78    0xc6c28  3      OPC=testb_r8_imm8    
  je .L_c6c35                            #  79    0xc6c2b  2      OPC=je_label         
  testb $0x2, %al                        #  80    0xc6c2d  2      OPC=testb_al_imm8    
  je .L_c6b90                            #  81    0xc6c2f  6      OPC=je_label_1       
.L_c6c35:                                #        0xc6c35  0      OPC=<label>          
  andl $0x80, %ecx                       #  82    0xc6c35  6      OPC=andl_r32_imm32   
  je .L_c6c48                            #  83    0xc6c3b  2      OPC=je_label         
  testb $0x8, %al                        #  84    0xc6c3d  2      OPC=testb_al_imm8    
  je .L_c6b90                            #  85    0xc6c3f  6      OPC=je_label_1       
  nop                                    #  86    0xc6c45  1      OPC=nop              
  nop                                    #  87    0xc6c46  1      OPC=nop              
  nop                                    #  88    0xc6c47  1      OPC=nop              
.L_c6c48:                                #        0xc6c48  0      OPC=<label>          
  movl 0x94(%r14), %ebx                  #  89    0xc6c48  7      OPC=movl_r32_m32     
  movq 0x8(%r14), %r10                   #  90    0xc6c4f  4      OPC=movq_r64_m64     
  movq 0x70(%r14), %rax                  #  91    0xc6c53  4      OPC=movq_r64_m64     
  movl 0x30(%rsp), %edx                  #  92    0xc6c57  4      OPC=movl_r32_m32     
  movq 0x80(%rsp), %rsi                  #  93    0xc6c5b  8      OPC=movq_r64_m64     
  movl %ebx, %edi                        #  94    0xc6c63  2      OPC=movl_r32_r32     
  movq %r10, 0x8(%rsp)                   #  95    0xc6c65  5      OPC=movq_m64_r64     
  movq %rax, 0x50(%rsp)                  #  96    0xc6c6a  5      OPC=movq_m64_r64     
  callq .search_cur_bkref_entry_isra_12  #  97    0xc6c6f  5      OPC=callq_label      
  cmpl $0xffffffff, %eax                 #  98    0xc6c74  6      OPC=cmpl_r32_imm32   
  nop                                    #  99    0xc6c7a  1      OPC=nop              
  nop                                    #  100   0xc6c7b  1      OPC=nop              
  nop                                    #  101   0xc6c7c  1      OPC=nop              
  movq 0x8(%rsp), %r10                   #  102   0xc6c7d  5      OPC=movq_r64_m64     
  je .L_c6ccd                            #  103   0xc6c82  2      OPC=je_label         
  cltq                                   #  104   0xc6c84  2      OPC=cltq             
  leaq (%rax,%rax,4), %rdx               #  105   0xc6c86  4      OPC=leaq_r64_m16     
  movq 0xa0(%r14), %rax                  #  106   0xc6c8a  7      OPC=movq_r64_m64     
  leaq (%rax,%rdx,4), %rax               #  107   0xc6c91  4      OPC=leaq_r64_m16     
  jmpq .L_c6ca2                          #  108   0xc6c95  2      OPC=jmpq_label       
  nop                                    #  109   0xc6c97  1      OPC=nop              
  nop                                    #  110   0xc6c98  1      OPC=nop              
  nop                                    #  111   0xc6c99  1      OPC=nop              
  nop                                    #  112   0xc6c9a  1      OPC=nop              
  nop                                    #  113   0xc6c9b  1      OPC=nop              
  nop                                    #  114   0xc6c9c  1      OPC=nop              
  nop                                    #  115   0xc6c9d  1      OPC=nop              
.L_c6c98:                                #        0xc6c9e  0      OPC=<label>          
  addq $0x14, %rax                       #  116   0xc6c9e  4      OPC=addq_r64_imm8    
  cmpb $0x0, -0x4(%rax)                  #  117   0xc6ca2  4      OPC=cmpb_m8_imm8     
  je .L_c6ccd                            #  118   0xc6ca6  2      OPC=je_label         
.L_c6ca2:                                #        0xc6ca8  0      OPC=<label>          
  cmpl (%rax), %r12d                     #  119   0xc6ca8  3      OPC=cmpl_r32_m32     
  jne .L_c6c98                           #  120   0xc6cab  2      OPC=jne_label        
.L_c6ca7:                                #        0xc6cad  0      OPC=<label>          
  movl $0x0, 0x9c(%rsp)                  #  121   0xc6cad  11     OPC=movl_m32_imm32   
  jmpq .L_c6b90                          #  122   0xc6cb8  5      OPC=jmpq_label_1     
.L_c6cb7:                                #        0xc6cbd  0      OPC=<label>          
  andl $0x8, %edx                        #  123   0xc6cbd  3      OPC=andl_r32_imm8    
  je .L_c6c28                            #  124   0xc6cc0  6      OPC=je_label_1       
  testb $0x1, %al                        #  125   0xc6cc6  2      OPC=testb_al_imm8    
  jne .L_c6b90                           #  126   0xc6cc8  6      OPC=jne_label_1      
  jmpq .L_c6c28                          #  127   0xc6cce  5      OPC=jmpq_label_1     
.L_c6ccd:                                #        0xc6cd3  0      OPC=<label>          
  movq 0x50(%rsp), %rax                  #  128   0xc6cd3  5      OPC=movq_r64_m64     
  movl 0xac(%r14), %edi                  #  129   0xc6cd8  7      OPC=movl_r32_m32     
  movq (%rax), %rdx                      #  130   0xc6cdf  3      OPC=movq_r64_m64     
  movq 0x58(%rsp), %rax                  #  131   0xc6ce2  5      OPC=movq_r64_m64     
  testl %edi, %edi                       #  132   0xc6ce7  2      OPC=testl_r32_r32    
  movl (%rdx,%rax,1), %eax               #  133   0xc6ce9  3      OPC=movl_r32_m32     
  movl %eax, 0x88(%rsp)                  #  134   0xc6cec  7      OPC=movl_m32_r32     
  jle .L_c6ca7                           #  135   0xc6cf3  2      OPC=jle_label        
  movq $0x0, 0x48(%rsp)                  #  136   0xc6cf5  9      OPC=movq_m64_imm32   
  movl %r12d, 0x34(%rsp)                 #  137   0xc6cfe  5      OPC=movl_m32_r32     
  movl %ebx, 0x8c(%rsp)                  #  138   0xc6d03  7      OPC=movl_m32_r32     
  jmpq .L_c6d38                          #  139   0xc6d0a  2      OPC=jmpq_label       
  nop                                    #  140   0xc6d0c  1      OPC=nop              
  nop                                    #  141   0xc6d0d  1      OPC=nop              
  nop                                    #  142   0xc6d0e  1      OPC=nop              
  nop                                    #  143   0xc6d0f  1      OPC=nop              
  nop                                    #  144   0xc6d10  1      OPC=nop              
  nop                                    #  145   0xc6d11  1      OPC=nop              
  nop                                    #  146   0xc6d12  1      OPC=nop              
  nop                                    #  147   0xc6d13  1      OPC=nop              
  nop                                    #  148   0xc6d14  1      OPC=nop              
  nop                                    #  149   0xc6d15  1      OPC=nop              
.L_c6d10:                                #        0xc6d16  0      OPC=<label>          
  movq 0x48(%rsp), %rdi                  #  150   0xc6d16  5      OPC=movq_r64_m64     
  movl %edi, %eax                        #  151   0xc6d1b  2      OPC=movl_r32_r32     
  addq $0x1, %rdi                        #  152   0xc6d1d  4      OPC=addq_r64_imm8    
  addl $0x1, %eax                        #  153   0xc6d21  3      OPC=addl_r32_imm8    
  cmpl 0xac(%r14), %eax                  #  154   0xc6d24  7      OPC=cmpl_r32_m32     
  movq %rdi, 0x48(%rsp)                  #  155   0xc6d2b  5      OPC=movq_m64_r64     
  jge .L_c708f                           #  156   0xc6d30  6      OPC=jge_label_1      
  movq 0x50(%rsp), %rax                  #  157   0xc6d36  5      OPC=movq_r64_m64     
  movq (%rax), %rdx                      #  158   0xc6d3b  3      OPC=movq_r64_m64     
.L_c6d38:                                #        0xc6d3e  0      OPC=<label>          
  movq 0xb8(%r14), %rax                  #  159   0xc6d3e  7      OPC=movq_r64_m64     
  movq 0x48(%rsp), %rbx                  #  160   0xc6d45  5      OPC=movq_r64_m64     
  movl 0x88(%rsp), %edi                  #  161   0xc6d4a  7      OPC=movl_r32_m32     
  movq (%rax,%rbx,8), %rbx               #  162   0xc6d51  4      OPC=movq_r64_m64     
  movslq 0x4(%rbx), %rax                 #  163   0xc6d55  4      OPC=movslq_r64_m32   
  shlq $0x4, %rax                        #  164   0xc6d59  4      OPC=shlq_r64_imm8    
  cmpl (%rdx,%rax,1), %edi               #  165   0xc6d5d  3      OPC=cmpl_r32_m32     
  jne .L_c6d10                           #  166   0xc6d60  2      OPC=jne_label        
  movl 0x14(%rbx), %esi                  #  167   0xc6d62  3      OPC=movl_r32_m32     
  movl (%rbx), %eax                      #  168   0xc6d65  2      OPC=movl_r32_m32     
  movl 0x30(%rsp), %r13d                 #  169   0xc6d67  5      OPC=movl_r32_m32     
  testl %esi, %esi                       #  170   0xc6d6c  2      OPC=testl_r32_r32    
  movl %eax, 0x8(%rsp)                   #  171   0xc6d6e  4      OPC=movl_m32_r32     
  jle .L_c7316                           #  172   0xc6d72  6      OPC=jle_label_1      
  xorl %ebp, %ebp                        #  173   0xc6d78  2      OPC=xorl_r32_r32     
  jmpq .L_c6e28                          #  174   0xc6d7a  5      OPC=jmpq_label_1     
  nop                                    #  175   0xc6d7f  1      OPC=nop              
  nop                                    #  176   0xc6d80  1      OPC=nop              
  nop                                    #  177   0xc6d81  1      OPC=nop              
  nop                                    #  178   0xc6d82  1      OPC=nop              
  nop                                    #  179   0xc6d83  1      OPC=nop              
  nop                                    #  180   0xc6d84  1      OPC=nop              
  nop                                    #  181   0xc6d85  1      OPC=nop              
.L_c6d80:                                #        0xc6d86  0      OPC=<label>          
  leal (%rcx,%r13,1), %r8d               #  182   0xc6d86  4      OPC=leal_r32_m16     
  cmpl 0x2c(%r14), %r8d                  #  183   0xc6d8a  4      OPC=cmpl_r32_m32     
  jle .L_c6dbd                           #  184   0xc6d8e  2      OPC=jle_label        
  cmpl 0x40(%r14), %r8d                  #  185   0xc6d90  4      OPC=cmpl_r32_m32     
  movl %ecx, 0x18(%rsp)                  #  186   0xc6d94  4      OPC=movl_m32_r32     
  jg .L_c6e52                            #  187   0xc6d98  6      OPC=jg_label_1       
  movl %r8d, %esi                        #  188   0xc6d9e  3      OPC=movl_r32_r32     
  movq %r14, %rdi                        #  189   0xc6da1  3      OPC=movq_r64_r64     
  movl %r8d, 0x20(%rsp)                  #  190   0xc6da4  5      OPC=movl_m32_r32     
  callq .clean_state_log_if_needed       #  191   0xc6da9  5      OPC=callq_label      
  testl %eax, %eax                       #  192   0xc6dae  2      OPC=testl_r32_r32    
  jne .L_c7079                           #  193   0xc6db0  6      OPC=jne_label_1      
  movq 0x8(%r14), %r10                   #  194   0xc6db6  4      OPC=movq_r64_m64     
  movl 0x18(%rsp), %ecx                  #  195   0xc6dba  4      OPC=movl_r32_m32     
  movl 0x20(%rsp), %r8d                  #  196   0xc6dbe  5      OPC=movl_r32_m32     
.L_c6dbd:                                #        0xc6dc3  0      OPC=<label>          
  movslq 0x8(%rsp), %rsi                 #  197   0xc6dc3  5      OPC=movslq_r64_m32   
  movslq %r13d, %rdi                     #  198   0xc6dc8  3      OPC=movslq_r64_r32   
  movslq %ecx, %rdx                      #  199   0xc6dcb  3      OPC=movslq_r64_r32   
  addq %r10, %rdi                        #  200   0xc6dce  3      OPC=addq_r64_r64     
  movq %r10, 0x18(%rsp)                  #  201   0xc6dd1  5      OPC=movq_m64_r64     
  movl %r8d, 0x20(%rsp)                  #  202   0xc6dd6  5      OPC=movl_m32_r32     
  addq %r10, %rsi                        #  203   0xc6ddb  3      OPC=addq_r64_r64     
  callq .__GI_memcmp                     #  204   0xc6dde  5      OPC=callq_label      
  testl %eax, %eax                       #  205   0xc6de3  2      OPC=testl_r32_r32    
  movq 0x18(%rsp), %r10                  #  206   0xc6de5  5      OPC=movq_r64_m64     
  jne .L_c6e4f                           #  207   0xc6dea  2      OPC=jne_label        
  movl 0x20(%rsp), %r8d                  #  208   0xc6dec  5      OPC=movl_r32_m32     
  movl %r8d, %r13d                       #  209   0xc6df1  3      OPC=movl_r32_r32     
.L_c6dee:                                #        0xc6df4  0      OPC=<label>          
  movl 0x30(%rsp), %r8d                  #  210   0xc6df4  5      OPC=movl_r32_m32     
  movl 0x34(%rsp), %ecx                  #  211   0xc6df9  4      OPC=movl_r32_m32     
  movq %r12, %rdx                        #  212   0xc6dfd  3      OPC=movq_r64_r64     
  movq %rbx, %rsi                        #  213   0xc6e00  3      OPC=movq_r64_r64     
  movq %r14, %rdi                        #  214   0xc6e03  3      OPC=movq_r64_r64     
  callq .get_subexp_sub_isra_29          #  215   0xc6e06  5      OPC=callq_label      
  cmpl $0x1, %eax                        #  216   0xc6e0b  3      OPC=cmpl_r32_imm8    
  movq 0x8(%r14), %r10                   #  217   0xc6e0e  4      OPC=movq_r64_m64     
  ja .L_c7079                            #  218   0xc6e12  6      OPC=ja_label_1       
  leal 0x1(%rbp), %r15d                  #  219   0xc6e18  4      OPC=leal_r32_m16     
  addq $0x1, %rbp                        #  220   0xc6e1c  4      OPC=addq_r64_imm8    
  cmpl %r15d, 0x14(%rbx)                 #  221   0xc6e20  4      OPC=cmpl_m32_r32     
  movl 0x10(%rsp), %eax                  #  222   0xc6e24  4      OPC=movl_r32_m32     
  movl %eax, 0x8(%rsp)                   #  223   0xc6e28  4      OPC=movl_m32_r32     
  jle .L_c6e62                           #  224   0xc6e2c  2      OPC=jle_label        
.L_c6e28:                                #        0xc6e2e  0      OPC=<label>          
  movq 0x18(%rbx), %rax                  #  225   0xc6e2e  4      OPC=movq_r64_m64     
  movl %ebp, %r15d                       #  226   0xc6e32  3      OPC=movl_r32_r32     
  movq (%rax,%rbp,8), %r12               #  227   0xc6e35  4      OPC=movq_r64_m64     
  movl 0x4(%r12), %eax                   #  228   0xc6e39  5      OPC=movl_r32_m32     
  movl %eax, %ecx                        #  229   0xc6e3e  2      OPC=movl_r32_r32     
  subl 0x8(%rsp), %ecx                   #  230   0xc6e40  4      OPC=subl_r32_m32     
  movl %eax, 0x10(%rsp)                  #  231   0xc6e44  4      OPC=movl_m32_r32     
  testl %ecx, %ecx                       #  232   0xc6e48  2      OPC=testl_r32_r32    
  jg .L_c6d80                            #  233   0xc6e4a  6      OPC=jg_label_1       
  addl %ecx, %r13d                       #  234   0xc6e50  3      OPC=addl_r32_r32     
  jmpq .L_c6dee                          #  235   0xc6e53  2      OPC=jmpq_label       
.L_c6e4f:                                #        0xc6e55  0      OPC=<label>          
  movl %r15d, %ebp                       #  236   0xc6e55  3      OPC=movl_r32_r32     
.L_c6e52:                                #        0xc6e58  0      OPC=<label>          
  cmpl %ebp, 0x14(%rbx)                  #  237   0xc6e58  3      OPC=cmpl_m32_r32     
  jg .L_c6d10                            #  238   0xc6e5b  6      OPC=jg_label_1       
  movl 0x8(%rsp), %r12d                  #  239   0xc6e61  5      OPC=movl_r32_m32     
  jmpq .L_c6e65                          #  240   0xc6e66  2      OPC=jmpq_label       
.L_c6e62:                                #        0xc6e68  0      OPC=<label>          
  movl %eax, %r12d                       #  241   0xc6e68  3      OPC=movl_r32_r32     
.L_c6e65:                                #        0xc6e6b  0      OPC=<label>          
  xorl %eax, %eax                        #  242   0xc6e6b  2      OPC=xorl_r32_r32     
  testl %r15d, %r15d                     #  243   0xc6e6d  3      OPC=testl_r32_r32    
  setg %al                               #  244   0xc6e70  3      OPC=setg_r8          
  addl %eax, %r12d                       #  245   0xc6e73  3      OPC=addl_r32_r32     
.L_c6e70:                                #        0xc6e76  0      OPC=<label>          
  cmpl %r12d, 0x30(%rsp)                 #  246   0xc6e76  5      OPC=cmpl_m32_r32     
  jl .L_c6d10                            #  247   0xc6e7b  6      OPC=jl_label_1       
  movslq %r12d, %rbp                     #  248   0xc6e81  3      OPC=movslq_r64_r32   
  movq %r10, 0x10(%rsp)                  #  249   0xc6e84  5      OPC=movq_m64_r64     
  movq %rbp, 0x8(%rsp)                   #  250   0xc6e89  5      OPC=movq_m64_r64     
  movq %r14, %rbp                        #  251   0xc6e8e  3      OPC=movq_r64_r64     
  movl 0x88(%rsp), %r14d                 #  252   0xc6e91  8      OPC=movl_r32_m32     
  nop                                    #  253   0xc6e99  1      OPC=nop              
  nop                                    #  254   0xc6e9a  1      OPC=nop              
  nop                                    #  255   0xc6e9b  1      OPC=nop              
  nop                                    #  256   0xc6e9c  1      OPC=nop              
  nop                                    #  257   0xc6e9d  1      OPC=nop              
.L_c6e98:                                #        0xc6e9e  0      OPC=<label>          
  movl %r12d, %eax                       #  258   0xc6e9e  3      OPC=movl_r32_r32     
  subl (%rbx), %eax                      #  259   0xc6ea1  2      OPC=subl_r32_m32     
  testl %eax, %eax                       #  260   0xc6ea3  2      OPC=testl_r32_r32    
  jle .L_c6ef7                           #  261   0xc6ea5  2      OPC=jle_label        
  cmpl %r13d, 0x2c(%rbp)                 #  262   0xc6ea7  4      OPC=cmpl_m32_r32     
  leal 0x1(%r13), %esi                   #  263   0xc6eab  4      OPC=leal_r32_m16     
  jg .L_c6ed8                            #  264   0xc6eaf  2      OPC=jg_label         
  cmpl %r13d, 0x40(%rbp)                 #  265   0xc6eb1  4      OPC=cmpl_m32_r32     
  jle .L_c700c                           #  266   0xc6eb5  6      OPC=jle_label_1      
  leal 0x1(%r13), %r15d                  #  267   0xc6ebb  4      OPC=leal_r32_m16     
  movq %rbp, %rdi                        #  268   0xc6ebf  3      OPC=movq_r64_r64     
  movl %r15d, %esi                       #  269   0xc6ec2  3      OPC=movl_r32_r32     
  callq .extend_buffers                  #  270   0xc6ec5  5      OPC=callq_label      
  testl %eax, %eax                       #  271   0xc6eca  2      OPC=testl_r32_r32    
  jne .L_c7079                           #  272   0xc6ecc  6      OPC=jne_label_1      
  movq 0x8(%rbp), %rax                   #  273   0xc6ed2  4      OPC=movq_r64_m64     
  movl %r15d, %esi                       #  274   0xc6ed6  3      OPC=movl_r32_r32     
  movq %rax, 0x10(%rsp)                  #  275   0xc6ed9  5      OPC=movq_m64_r64     
.L_c6ed8:                                #        0xc6ede  0      OPC=<label>          
  movq 0x10(%rsp), %rax                  #  276   0xc6ede  5      OPC=movq_r64_m64     
  movq 0x8(%rsp), %rdi                   #  277   0xc6ee3  5      OPC=movq_r64_m64     
  movslq %r13d, %r13                     #  278   0xc6ee8  3      OPC=movslq_r64_r32   
  movzbl -0x1(%rax,%rdi,1), %edi         #  279   0xc6eeb  5      OPC=movzbl_r32_m8    
  cmpb %dil, (%rax,%r13,1)               #  280   0xc6ef0  4      OPC=cmpb_m8_r8       
  jne .L_c700c                           #  281   0xc6ef4  6      OPC=jne_label_1      
  movl %esi, %r13d                       #  282   0xc6efa  3      OPC=movl_r32_r32     
.L_c6ef7:                                #        0xc6efd  0      OPC=<label>          
  movq 0x88(%rbp), %rax                  #  283   0xc6efd  7      OPC=movq_r64_m64     
  movq 0x8(%rsp), %rdi                   #  284   0xc6f04  5      OPC=movq_r64_m64     
  movq (%rax,%rdi,8), %rax               #  285   0xc6f09  4      OPC=movq_r64_m64     
  testq %rax, %rax                       #  286   0xc6f0d  3      OPC=testq_r64_r64    
  je .L_c6ff7                            #  287   0xc6f10  6      OPC=je_label_1       
  movl 0xc(%rax), %ecx                   #  288   0xc6f16  3      OPC=movl_r32_m32     
  testl %ecx, %ecx                       #  289   0xc6f19  2      OPC=testl_r32_r32    
  jle .L_c6ff7                           #  290   0xc6f1b  6      OPC=jle_label_1      
  movq 0x10(%rax), %rdx                  #  291   0xc6f21  4      OPC=movq_r64_m64     
  leal -0x1(%rcx), %eax                  #  292   0xc6f25  3      OPC=leal_r32_m16     
  movq 0x50(%rsp), %rdi                  #  293   0xc6f28  5      OPC=movq_r64_m64     
  leaq 0x4(,%rax,4), %rcx                #  294   0xc6f2d  8      OPC=leaq_r64_m16     
  movq (%rdi), %rsi                      #  295   0xc6f35  3      OPC=movq_r64_m64     
  addq %rdx, %rcx                        #  296   0xc6f38  3      OPC=addq_r64_r64     
  jmpq .L_c6f4d                          #  297   0xc6f3b  2      OPC=jmpq_label       
  nop                                    #  298   0xc6f3d  1      OPC=nop              
  nop                                    #  299   0xc6f3e  1      OPC=nop              
  nop                                    #  300   0xc6f3f  1      OPC=nop              
  nop                                    #  301   0xc6f40  1      OPC=nop              
  nop                                    #  302   0xc6f41  1      OPC=nop              
  nop                                    #  303   0xc6f42  1      OPC=nop              
  nop                                    #  304   0xc6f43  1      OPC=nop              
  nop                                    #  305   0xc6f44  1      OPC=nop              
  nop                                    #  306   0xc6f45  1      OPC=nop              
.L_c6f40:                                #        0xc6f46  0      OPC=<label>          
  addq $0x4, %rdx                        #  307   0xc6f46  4      OPC=addq_r64_imm8    
  cmpq %rcx, %rdx                        #  308   0xc6f4a  3      OPC=cmpq_r64_r64     
  je .L_c6ff7                            #  309   0xc6f4d  6      OPC=je_label_1       
.L_c6f4d:                                #        0xc6f53  0      OPC=<label>          
  movslq (%rdx), %rax                    #  310   0xc6f53  3      OPC=movslq_r64_m32   
  movq %rax, %r15                        #  311   0xc6f56  3      OPC=movq_r64_r64     
  shlq $0x4, %rax                        #  312   0xc6f59  4      OPC=shlq_r64_imm8    
  addq %rsi, %rax                        #  313   0xc6f5d  3      OPC=addq_r64_r64     
  cmpb $0x9, 0x8(%rax)                   #  314   0xc6f60  4      OPC=cmpb_m8_imm8     
  jne .L_c6f40                           #  315   0xc6f64  2      OPC=jne_label        
  cmpl (%rax), %r14d                     #  316   0xc6f66  3      OPC=cmpl_r32_m32     
  jne .L_c6f40                           #  317   0xc6f69  2      OPC=jne_label        
  cmpl $0xffffffff, %r15d                #  318   0xc6f6b  7      OPC=cmpl_r32_imm32   
  nop                                    #  319   0xc6f72  1      OPC=nop              
  nop                                    #  320   0xc6f73  1      OPC=nop              
  nop                                    #  321   0xc6f74  1      OPC=nop              
  nop                                    #  322   0xc6f75  1      OPC=nop              
  je .L_c6ff7                            #  323   0xc6f76  6      OPC=je_label_1       
  movq 0x8(%rbx), %rsi                   #  324   0xc6f7c  4      OPC=movq_r64_m64     
  movl (%rbx), %ecx                      #  325   0xc6f80  2      OPC=movl_r32_m32     
  testq %rsi, %rsi                       #  326   0xc6f82  3      OPC=testq_r64_r64    
  je .L_c7046                            #  327   0xc6f85  6      OPC=je_label_1       
.L_c6f7e:                                #        0xc6f8b  0      OPC=<label>          
  subq $0x8, %rsp                        #  328   0xc6f8b  4      OPC=subq_r64_imm8    
  movl 0x4(%rbx), %edx                   #  329   0xc6f8f  3      OPC=movl_r32_m32     
  movl %r12d, %r9d                       #  330   0xc6f92  3      OPC=movl_r32_r32     
  pushq $0x9                             #  331   0xc6f95  2      OPC=pushq_imm8       
  movl %r15d, %r8d                       #  332   0xc6f97  3      OPC=movl_r32_r32     
  movq %rbp, %rdi                        #  333   0xc6f9a  3      OPC=movq_r64_r64     
  callq .check_arrival                   #  334   0xc6f9d  5      OPC=callq_label      
  cmpl $0x1, %eax                        #  335   0xc6fa2  3      OPC=cmpl_r32_imm8    
  popq %rdx                              #  336   0xc6fa5  1      OPC=popq_r64_1       
  popq %rcx                              #  337   0xc6fa6  1      OPC=popq_r64_1       
  je .L_c6ff7                            #  338   0xc6fa7  2      OPC=je_label         
  testl %eax, %eax                       #  339   0xc6fa9  2      OPC=testl_r32_r32    
  jne .L_c7079                           #  340   0xc6fab  6      OPC=jne_label_1      
  movl 0x14(%rbx), %eax                  #  341   0xc6fb1  3      OPC=movl_r32_m32     
  cmpl 0x10(%rbx), %eax                  #  342   0xc6fb4  3      OPC=cmpl_r32_m32     
  je .L_c7019                            #  343   0xc6fb7  2      OPC=je_label         
.L_c6fac:                                #        0xc6fb9  0      OPC=<label>          
  movl $0x18, %esi                       #  344   0xc6fb9  5      OPC=movl_r32_imm32   
  movl $0x1, %edi                        #  345   0xc6fbe  5      OPC=movl_r32_imm32   
  callq .L_1f8b0                         #  346   0xc6fc3  5      OPC=callq_label      
  testq %rax, %rax                       #  347   0xc6fc8  3      OPC=testq_r64_r64    
  je .L_c7074                            #  348   0xc6fcb  6      OPC=je_label_1       
  movslq 0x14(%rbx), %rsi                #  349   0xc6fd1  4      OPC=movslq_r64_m32   
  movq 0x18(%rbx), %rcx                  #  350   0xc6fd5  4      OPC=movq_r64_m64     
  movq %rbp, %rdi                        #  351   0xc6fd9  3      OPC=movq_r64_r64     
  movl 0x30(%rsp), %r8d                  #  352   0xc6fdc  5      OPC=movl_r32_m32     
  movq %rax, (%rcx,%rsi,8)               #  353   0xc6fe1  4      OPC=movq_m64_r64     
  movq %rsi, %rdx                        #  354   0xc6fe5  3      OPC=movq_r64_r64     
  movl 0x34(%rsp), %ecx                  #  355   0xc6fe8  4      OPC=movl_r32_m32     
  addl $0x1, %edx                        #  356   0xc6fec  3      OPC=addl_r32_imm8    
  movl %r15d, (%rax)                     #  357   0xc6fef  3      OPC=movl_m32_r32     
  movl %r12d, 0x4(%rax)                  #  358   0xc6ff2  4      OPC=movl_m32_r32     
  movq %rbx, %rsi                        #  359   0xc6ff6  3      OPC=movq_r64_r64     
  movl %edx, 0x14(%rbx)                  #  360   0xc6ff9  3      OPC=movl_m32_r32     
  movq %rax, %rdx                        #  361   0xc6ffc  3      OPC=movq_r64_r64     
  callq .get_subexp_sub_isra_29          #  362   0xc6fff  5      OPC=callq_label      
.L_c6ff7:                                #        0xc7004  0      OPC=<label>          
  addl $0x1, %r12d                       #  363   0xc7004  4      OPC=addl_r32_imm8    
  addq $0x1, 0x8(%rsp)                   #  364   0xc7008  6      OPC=addq_m64_imm8    
  cmpl %r12d, 0x30(%rsp)                 #  365   0xc700e  5      OPC=cmpl_m32_r32     
  jge .L_c6e98                           #  366   0xc7013  6      OPC=jge_label_1      
.L_c700c:                                #        0xc7019  0      OPC=<label>          
  movq 0x10(%rsp), %r10                  #  367   0xc7019  5      OPC=movq_r64_m64     
  movq %rbp, %r14                        #  368   0xc701e  3      OPC=movq_r64_r64     
  jmpq .L_c6d10                          #  369   0xc7021  5      OPC=jmpq_label_1     
.L_c7019:                                #        0xc7026  0      OPC=<label>          
  leal 0x1(%rax,%rax,1), %edx            #  370   0xc7026  4      OPC=leal_r32_m16     
  movq 0x18(%rbx), %rdi                  #  371   0xc702a  4      OPC=movq_r64_m64     
  movslq %edx, %rsi                      #  372   0xc702e  3      OPC=movslq_r64_r32   
  movl %edx, 0x18(%rsp)                  #  373   0xc7031  4      OPC=movl_m32_r32     
  shlq $0x3, %rsi                        #  374   0xc7035  4      OPC=shlq_r64_imm8    
  callq .__tls_get_addr_plt              #  375   0xc7039  5      OPC=callq_label      
  testq %rax, %rax                       #  376   0xc703e  3      OPC=testq_r64_r64    
  je .L_c7074                            #  377   0xc7041  2      OPC=je_label         
  movl 0x18(%rsp), %edx                  #  378   0xc7043  4      OPC=movl_r32_m32     
  movq %rax, 0x18(%rbx)                  #  379   0xc7047  4      OPC=movq_m64_r64     
  movl %edx, 0x10(%rbx)                  #  380   0xc704b  3      OPC=movl_m32_r32     
  jmpq .L_c6fac                          #  381   0xc704e  5      OPC=jmpq_label_1     
.L_c7046:                                #        0xc7053  0      OPC=<label>          
  movl %r12d, %esi                       #  382   0xc7053  3      OPC=movl_r32_r32     
  movl $0x10, %edi                       #  383   0xc7056  5      OPC=movl_r32_imm32   
  movl %ecx, 0x18(%rsp)                  #  384   0xc705b  4      OPC=movl_m32_r32     
  subl %ecx, %esi                        #  385   0xc705f  2      OPC=subl_r32_r32     
  addl $0x1, %esi                        #  386   0xc7061  3      OPC=addl_r32_imm8    
  movslq %esi, %rsi                      #  387   0xc7064  3      OPC=movslq_r64_r32   
  callq .L_1f8b0                         #  388   0xc7067  5      OPC=callq_label      
  testq %rax, %rax                       #  389   0xc706c  3      OPC=testq_r64_r64    
  movq %rax, 0x8(%rbx)                   #  390   0xc706f  4      OPC=movq_m64_r64     
  je .L_c7074                            #  391   0xc7073  2      OPC=je_label         
  movq %rax, %rsi                        #  392   0xc7075  3      OPC=movq_r64_r64     
  movl 0x18(%rsp), %ecx                  #  393   0xc7078  4      OPC=movl_r32_m32     
  jmpq .L_c6f7e                          #  394   0xc707c  5      OPC=jmpq_label_1     
.L_c7074:                                #        0xc7081  0      OPC=<label>          
  movl $0xc, %eax                        #  395   0xc7081  5      OPC=movl_r32_imm32   
.L_c7079:                                #        0xc7086  0      OPC=<label>          
  addq $0xb8, %rsp                       #  396   0xc7086  7      OPC=addq_r64_imm32   
  popq %rbx                              #  397   0xc708d  1      OPC=popq_r64_1       
  popq %rbp                              #  398   0xc708e  1      OPC=popq_r64_1       
  popq %r12                              #  399   0xc708f  2      OPC=popq_r64_1       
  popq %r13                              #  400   0xc7091  2      OPC=popq_r64_1       
  popq %r14                              #  401   0xc7093  2      OPC=popq_r64_1       
  popq %r15                              #  402   0xc7095  2      OPC=popq_r64_1       
  retq                                   #  403   0xc7097  1      OPC=retq             
.L_c708b:                                #        0xc7098  0      OPC=<label>          
  xorl %eax, %eax                        #  404   0xc7098  2      OPC=xorl_r32_r32     
  jmpq .L_c7079                          #  405   0xc709a  2      OPC=jmpq_label       
.L_c708f:                                #        0xc709c  0      OPC=<label>          
  movl 0x8c(%rsp), %ebx                  #  406   0xc709c  7      OPC=movl_r32_m32     
  cmpl 0x94(%r14), %ebx                  #  407   0xc70a3  7      OPC=cmpl_r32_m32     
  movl 0x34(%rsp), %r12d                 #  408   0xc70aa  5      OPC=movl_r32_m32     
  movl $0x0, 0x9c(%rsp)                  #  409   0xc70af  11     OPC=movl_m32_imm32   
  jge .L_c6b90                           #  410   0xc70ba  6      OPC=jge_label_1      
  movq 0x60(%rsp), %rax                  #  411   0xc70c0  5      OPC=movq_r64_m64     
  movl 0x30(%rsp), %r13d                 #  412   0xc70c5  5      OPC=movl_r32_m32     
  shlq $0x2, %rax                        #  413   0xc70ca  4      OPC=shlq_r64_imm8    
  movq %rax, 0x48(%rsp)                  #  414   0xc70ce  5      OPC=movq_m64_r64     
  movslq %ebx, %rax                      #  415   0xc70d3  3      OPC=movslq_r64_r32   
  leaq (%rax,%rax,4), %r8                #  416   0xc70d6  4      OPC=leaq_r64_m16     
  movq %r14, %rax                        #  417   0xc70da  3      OPC=movq_r64_r64     
  movl %r12d, %r14d                      #  418   0xc70dd  3      OPC=movl_r32_r32     
  movq %rax, %r12                        #  419   0xc70e0  3      OPC=movq_r64_r64     
  leaq (,%r8,4), %r15                    #  420   0xc70e3  8      OPC=leaq_r64_m16     
  jmpq .L_c70f5                          #  421   0xc70eb  2      OPC=jmpq_label       
.L_c70e0:                                #        0xc70ed  0      OPC=<label>          
  addl $0x1, %ebx                        #  422   0xc70ed  3      OPC=addl_r32_imm8    
  addq $0x14, %r15                       #  423   0xc70f0  4      OPC=addq_r64_imm8    
  cmpl %ebx, 0x94(%r12)                  #  424   0xc70f4  8      OPC=cmpl_m32_r32     
  jle .L_c72a0                           #  425   0xc70fc  6      OPC=jle_label_1      
.L_c70f5:                                #        0xc7102  0      OPC=<label>          
  movq %r15, %rax                        #  426   0xc7102  3      OPC=movq_r64_r64     
  addq 0xa0(%r12), %rax                  #  427   0xc7105  8      OPC=addq_r64_m64     
  cmpl %r14d, (%rax)                     #  428   0xc710d  3      OPC=cmpl_m32_r32     
  jne .L_c70e0                           #  429   0xc7110  2      OPC=jne_label        
  cmpl %r13d, 0x4(%rax)                  #  430   0xc7112  4      OPC=cmpl_m32_r32     
  jne .L_c70e0                           #  431   0xc7116  2      OPC=jne_label        
  movl 0xc(%rax), %ebp                   #  432   0xc7118  3      OPC=movl_r32_m32     
  movl 0x8(%rax), %eax                   #  433   0xc711b  3      OPC=movl_r32_m32     
  movl %ebp, %edi                        #  434   0xc711e  2      OPC=movl_r32_r32     
  subl %eax, %edi                        #  435   0xc7120  2      OPC=subl_r32_r32     
  movl %edi, 0x10(%rsp)                  #  436   0xc7122  4      OPC=movl_m32_r32     
  jne .L_c7278                           #  437   0xc7126  6      OPC=jne_label_1      
  movq 0x40(%rsp), %rsi                  #  438   0xc712c  5      OPC=movq_r64_m64     
  movq 0x58(%rsp), %rdi                  #  439   0xc7131  5      OPC=movq_r64_m64     
  movq 0x28(%rsi), %rdx                  #  440   0xc7136  4      OPC=movq_r64_m64     
  movq 0x8(%rdx,%rdi,1), %rdx            #  441   0xc713a  5      OPC=movq_r64_m64     
  movslq (%rdx), %rdx                    #  442   0xc713f  3      OPC=movslq_r64_m32   
  shlq $0x4, %rdx                        #  443   0xc7142  4      OPC=shlq_r64_imm8    
  addq 0x30(%rsi), %rdx                  #  444   0xc7146  4      OPC=addq_r64_m64     
  movq %rdx, 0x8(%rsp)                   #  445   0xc714a  5      OPC=movq_m64_r64     
.L_c7142:                                #        0xc714f  0      OPC=<label>          
  addl %r13d, %ebp                       #  446   0xc714f  3      OPC=addl_r32_r32     
  movl 0x78(%r12), %edx                  #  447   0xc7152  5      OPC=movl_r32_m32     
  movq %r12, %rdi                        #  448   0xc7157  3      OPC=movq_r64_r64     
  subl %eax, %ebp                        #  449   0xc715a  2      OPC=subl_r32_r32     
  leal -0x1(%rbp), %esi                  #  450   0xc715c  3      OPC=leal_r32_m16     
  movslq %ebp, %rbp                      #  451   0xc715f  3      OPC=movslq_r64_r32   
  callq .re_string_context_at            #  452   0xc7162  5      OPC=callq_label      
  movq 0x70(%rsp), %rsi                  #  453   0xc7167  5      OPC=movq_r64_m64     
  movl %eax, %ecx                        #  454   0xc716c  2      OPC=movl_r32_r32     
  movq 0x88(%r12), %rax                  #  455   0xc716e  8      OPC=movq_r64_m64     
  leaq (,%rbp,8), %r10                   #  456   0xc7176  8      OPC=leaq_r64_m16     
  leaq (%rax,%r10,1), %r11               #  457   0xc717e  4      OPC=leaq_r64_m16     
  movq (%rax,%rsi,1), %rax               #  458   0xc7182  4      OPC=movq_r64_m64     
  movq (%r11), %rdx                      #  459   0xc7186  3      OPC=movq_r64_m64     
  testq %rax, %rax                       #  460   0xc7189  3      OPC=testq_r64_r64    
  je .L_c72f0                            #  461   0xc718c  6      OPC=je_label_1       
  movl 0xc(%rax), %eax                   #  462   0xc7192  3      OPC=movl_r32_m32     
  movl %eax, 0x34(%rsp)                  #  463   0xc7195  4      OPC=movl_m32_r32     
.L_c718c:                                #        0xc7199  0      OPC=<label>          
  testq %rdx, %rdx                       #  464   0xc7199  3      OPC=testq_r64_r64    
  je .L_c72a8                            #  465   0xc719c  6      OPC=je_label_1       
  movq 0x38(%rdx), %rsi                  #  466   0xc71a2  4      OPC=movq_r64_m64     
  movq 0x68(%rsp), %rdi                  #  467   0xc71a6  5      OPC=movq_r64_m64     
  movq 0x8(%rsp), %rdx                   #  468   0xc71ab  5      OPC=movq_r64_m64     
  movq %r10, 0x20(%rsp)                  #  469   0xc71b0  5      OPC=movq_m64_r64     
  movl %ecx, 0x18(%rsp)                  #  470   0xc71b5  4      OPC=movl_m32_r32     
  callq .re_node_set_init_union          #  471   0xc71b9  5      OPC=callq_label      
  testl %eax, %eax                       #  472   0xc71be  2      OPC=testl_r32_r32    
  movl %eax, 0x9c(%rsp)                  #  473   0xc71c0  7      OPC=movl_m32_r32     
  movl 0x18(%rsp), %ecx                  #  474   0xc71c7  4      OPC=movl_r32_m32     
  movq 0x20(%rsp), %r10                  #  475   0xc71cb  5      OPC=movq_r64_m64     
  jne .L_c72fd                           #  476   0xc71d0  6      OPC=jne_label_1      
  addq 0x88(%r12), %r10                  #  477   0xc71d6  8      OPC=addq_r64_m64     
  movq 0x68(%rsp), %rdx                  #  478   0xc71de  5      OPC=movq_r64_m64     
  movq 0x40(%rsp), %rsi                  #  479   0xc71e3  5      OPC=movq_r64_m64     
  movq 0x78(%rsp), %rdi                  #  480   0xc71e8  5      OPC=movq_r64_m64     
  movq %r10, 0x18(%rsp)                  #  481   0xc71ed  5      OPC=movq_m64_r64     
  callq .re_acquire_state_context        #  482   0xc71f2  5      OPC=callq_label      
  movq 0x18(%rsp), %r10                  #  483   0xc71f7  5      OPC=movq_r64_m64     
  movq %rax, (%r10)                      #  484   0xc71fc  3      OPC=movq_m64_r64     
  movq 0xa8(%rsp), %rdi                  #  485   0xc71ff  8      OPC=movq_r64_m64     
  callq .L_1f8c0                         #  486   0xc7207  5      OPC=callq_label      
  movq 0x88(%r12), %rdx                  #  487   0xc720c  8      OPC=movq_r64_m64     
  cmpq $0x0, (%rdx,%rbp,8)               #  488   0xc7214  5      OPC=cmpq_m64_imm8    
  je .L_c72dc                            #  489   0xc7219  6      OPC=je_label_1       
.L_c7212:                                #        0xc721f  0      OPC=<label>          
  movl 0x10(%rsp), %eax                  #  490   0xc721f  4      OPC=movl_r32_m32     
  testl %eax, %eax                       #  491   0xc7223  2      OPC=testl_r32_r32    
  jne .L_c70e0                           #  492   0xc7225  6      OPC=jne_label_1      
  movq 0x70(%rsp), %rax                  #  493   0xc722b  5      OPC=movq_r64_m64     
  movl 0x34(%rsp), %esi                  #  494   0xc7230  4      OPC=movl_r32_m32     
  movq (%rdx,%rax,1), %rax               #  495   0xc7234  4      OPC=movq_r64_m64     
  cmpl 0xc(%rax), %esi                   #  496   0xc7238  3      OPC=cmpl_r32_m32     
  jge .L_c70e0                           #  497   0xc723b  6      OPC=jge_label_1      
  movq 0x8(%rsp), %rbp                   #  498   0xc7241  5      OPC=movq_r64_m64     
  movl %r13d, %edx                       #  499   0xc7246  3      OPC=movl_r32_r32     
  movq %r12, %rdi                        #  500   0xc7249  3      OPC=movq_r64_r64     
  movq %rbp, %rsi                        #  501   0xc724c  3      OPC=movq_r64_r64     
  callq .check_subexp_matching_top       #  502   0xc724f  5      OPC=callq_label      
  testl %eax, %eax                       #  503   0xc7254  2      OPC=testl_r32_r32    
  movl %eax, 0x9c(%rsp)                  #  504   0xc7256  7      OPC=movl_m32_r32     
  jne .L_c7079                           #  505   0xc725d  6      OPC=jne_label_1      
  movq %rbp, %rsi                        #  506   0xc7263  3      OPC=movq_r64_r64     
  movq %r12, %rdi                        #  507   0xc7266  3      OPC=movq_r64_r64     
  callq .transit_state_bkref             #  508   0xc7269  5      OPC=callq_label      
  testl %eax, %eax                       #  509   0xc726e  2      OPC=testl_r32_r32    
  movl %eax, 0x9c(%rsp)                  #  510   0xc7270  7      OPC=movl_m32_r32     
  je .L_c70e0                            #  511   0xc7277  6      OPC=je_label_1       
  jmpq .L_c7079                          #  512   0xc727d  5      OPC=jmpq_label_1     
  nop                                    #  513   0xc7282  1      OPC=nop              
  nop                                    #  514   0xc7283  1      OPC=nop              
  nop                                    #  515   0xc7284  1      OPC=nop              
.L_c7278:                                #        0xc7285  0      OPC=<label>          
  movq 0x40(%rsp), %rdi                  #  516   0xc7285  5      OPC=movq_r64_m64     
  movq 0x48(%rsp), %rsi                  #  517   0xc728a  5      OPC=movq_r64_m64     
  movq 0x18(%rdi), %rdx                  #  518   0xc728f  4      OPC=movq_r64_m64     
  movslq (%rdx,%rsi,1), %rdx             #  519   0xc7293  4      OPC=movslq_r64_m32   
  shlq $0x4, %rdx                        #  520   0xc7297  4      OPC=shlq_r64_imm8    
  addq 0x30(%rdi), %rdx                  #  521   0xc729b  4      OPC=addq_r64_m64     
  movq %rdx, 0x8(%rsp)                   #  522   0xc729f  5      OPC=movq_m64_r64     
  jmpq .L_c7142                          #  523   0xc72a4  5      OPC=jmpq_label_1     
  nop                                    #  524   0xc72a9  1      OPC=nop              
  nop                                    #  525   0xc72aa  1      OPC=nop              
  nop                                    #  526   0xc72ab  1      OPC=nop              
  nop                                    #  527   0xc72ac  1      OPC=nop              
.L_c72a0:                                #        0xc72ad  0      OPC=<label>          
  movq %r12, %r14                        #  528   0xc72ad  3      OPC=movq_r64_r64     
  jmpq .L_c6b90                          #  529   0xc72b0  5      OPC=jmpq_label_1     
.L_c72a8:                                #        0xc72b5  0      OPC=<label>          
  movq 0x8(%rsp), %rdx                   #  530   0xc72b5  5      OPC=movq_r64_m64     
  movq 0x40(%rsp), %rsi                  #  531   0xc72ba  5      OPC=movq_r64_m64     
  movq 0x78(%rsp), %rdi                  #  532   0xc72bf  5      OPC=movq_r64_m64     
  movq %r11, 0x18(%rsp)                  #  533   0xc72c4  5      OPC=movq_m64_r64     
  callq .re_acquire_state_context        #  534   0xc72c9  5      OPC=callq_label      
  movq 0x18(%rsp), %r11                  #  535   0xc72ce  5      OPC=movq_r64_m64     
  movq %rax, (%r11)                      #  536   0xc72d3  3      OPC=movq_m64_r64     
  movq 0x88(%r12), %rdx                  #  537   0xc72d6  8      OPC=movq_r64_m64     
  cmpq $0x0, (%rdx,%rbp,8)               #  538   0xc72de  5      OPC=cmpq_m64_imm8    
  jne .L_c7212                           #  539   0xc72e3  6      OPC=jne_label_1      
.L_c72dc:                                #        0xc72e9  0      OPC=<label>          
  movl 0x9c(%rsp), %eax                  #  540   0xc72e9  7      OPC=movl_r32_m32     
  testl %eax, %eax                       #  541   0xc72f0  2      OPC=testl_r32_r32    
  je .L_c7212                            #  542   0xc72f2  6      OPC=je_label_1       
  jmpq .L_c7079                          #  543   0xc72f8  5      OPC=jmpq_label_1     
.L_c72f0:                                #        0xc72fd  0      OPC=<label>          
  movl $0x0, 0x34(%rsp)                  #  544   0xc72fd  8      OPC=movl_m32_imm32   
  jmpq .L_c718c                          #  545   0xc7305  5      OPC=jmpq_label_1     
.L_c72fd:                                #        0xc730a  0      OPC=<label>          
  movq 0xa8(%rsp), %rdi                  #  546   0xc730a  8      OPC=movq_r64_m64     
  callq .L_1f8c0                         #  547   0xc7312  5      OPC=callq_label      
  movl 0x9c(%rsp), %eax                  #  548   0xc7317  7      OPC=movl_r32_m32     
  jmpq .L_c7079                          #  549   0xc731e  5      OPC=jmpq_label_1     
.L_c7316:                                #        0xc7323  0      OPC=<label>          
  movl 0x8(%rsp), %r12d                  #  550   0xc7323  5      OPC=movl_r32_m32     
  jmpq .L_c6e70                          #  551   0xc7328  5      OPC=jmpq_label_1     
                                                                                       
.size transit_state_bkref, .-transit_state_bkref

