  .text
  .globl __offtime
  .type __offtime, @function

#! file-offset 0xa62b0
#! rip-offset  0xa62b0
#! capacity    1040 bytes

# Text                            #  Line  RIP      Bytes  Opcode                   
.__offtime:                       #        0xa62b0  0      OPC=<label>              
  pushq %r14                      #  1     0xa62b0  2      OPC=pushq_r64_1          
  pushq %r13                      #  2     0xa62b2  2      OPC=pushq_r64_1          
  pushq %r12                      #  3     0xa62b4  2      OPC=pushq_r64_1          
  pushq %rbp                      #  4     0xa62b6  1      OPC=pushq_r64_1          
  movq %rdx, %rbp                 #  5     0xa62b7  3      OPC=movq_r64_r64         
  pushq %rbx                      #  6     0xa62ba  1      OPC=pushq_r64_1          
  movq (%rdi), %rcx               #  7     0xa62bb  3      OPC=movq_r64_m64         
  movq $0x1845c8a0ce512957, %rdx  #  8     0xa62be  10     OPC=movq_r64_imm64       
  movq %rcx, %rax                 #  9     0xa62c8  3      OPC=movq_r64_r64         
  imulq %rdx                      #  10    0xa62cb  3      OPC=imulq_r64            
  movq %rcx, %rax                 #  11    0xa62ce  3      OPC=movq_r64_r64         
  sarq $0x3f, %rax                #  12    0xa62d1  4      OPC=sarq_r64_imm8        
  sarq $0xd, %rdx                 #  13    0xa62d5  4      OPC=sarq_r64_imm8        
  subq %rax, %rdx                 #  14    0xa62d9  3      OPC=subq_r64_r64         
  imulq $0x15180, %rdx, %rax      #  15    0xa62dc  7      OPC=imulq_r64_r64_imm32  
  movq %rdx, %r9                  #  16    0xa62e3  3      OPC=movq_r64_r64         
  subq %rax, %rcx                 #  17    0xa62e6  3      OPC=subq_r64_r64         
  addq %rcx, %rsi                 #  18    0xa62e9  3      OPC=addq_r64_r64         
  jns .L_a65eb                    #  19    0xa62ec  6      OPC=jns_label_1          
  nop                             #  20    0xa62f2  1      OPC=nop                  
  nop                             #  21    0xa62f3  1      OPC=nop                  
  nop                             #  22    0xa62f4  1      OPC=nop                  
  nop                             #  23    0xa62f5  1      OPC=nop                  
  nop                             #  24    0xa62f6  1      OPC=nop                  
  nop                             #  25    0xa62f7  1      OPC=nop                  
.L_a62f8:                         #        0xa62f8  0      OPC=<label>              
  subq $0x1, %r9                  #  26    0xa62f8  4      OPC=subq_r64_imm8        
  addq $0x15180, %rsi             #  27    0xa62fc  7      OPC=addq_r64_imm32       
  js .L_a62f8                     #  28    0xa6303  2      OPC=js_label             
.L_a6305:                         #        0xa6305  0      OPC=<label>              
  movq %rsi, %rax                 #  29    0xa6305  3      OPC=movq_r64_r64         
  movq $0x48d159e26af37c05, %rdx  #  30    0xa6308  10     OPC=movq_r64_imm64       
  imulq %rdx                      #  31    0xa6312  3      OPC=imulq_r64            
  movq %rsi, %rax                 #  32    0xa6315  3      OPC=movq_r64_r64         
  sarq $0x3f, %rax                #  33    0xa6318  4      OPC=sarq_r64_imm8        
  sarq $0xa, %rdx                 #  34    0xa631c  4      OPC=sarq_r64_imm8        
  subq %rax, %rdx                 #  35    0xa6320  3      OPC=subq_r64_r64         
  movl %edx, 0x8(%rbp)            #  36    0xa6323  3      OPC=movl_m32_r32         
  imulq $0xe10, %rdx, %rdx        #  37    0xa6326  7      OPC=imulq_r64_r64_imm32  
  subq %rdx, %rsi                 #  38    0xa632d  3      OPC=subq_r64_r64         
  movq $0x8888888888888889, %rdx  #  39    0xa6330  10     OPC=movq_r64_imm64       
  movq %rsi, %rax                 #  40    0xa633a  3      OPC=movq_r64_r64         
  imulq %rdx                      #  41    0xa633d  3      OPC=imulq_r64            
  movq %rsi, %rax                 #  42    0xa6340  3      OPC=movq_r64_r64         
  sarq $0x3f, %rax                #  43    0xa6343  4      OPC=sarq_r64_imm8        
  addq %rsi, %rdx                 #  44    0xa6347  3      OPC=addq_r64_r64         
  sarq $0x5, %rdx                 #  45    0xa634a  4      OPC=sarq_r64_imm8        
  subq %rax, %rdx                 #  46    0xa634e  3      OPC=subq_r64_r64         
  leaq (%rsi,%rdx,4), %rax        #  47    0xa6351  4      OPC=leaq_r64_m16         
  movq %rdx, %rcx                 #  48    0xa6355  3      OPC=movq_r64_r64         
  leaq 0x4(%r9), %rsi             #  49    0xa6358  4      OPC=leaq_r64_m16         
  shlq $0x6, %rcx                 #  50    0xa635c  4      OPC=shlq_r64_imm8        
  movl %edx, 0x4(%rbp)            #  51    0xa6360  3      OPC=movl_m32_r32         
  movq $0x4924924924924925, %rdx  #  52    0xa6363  10     OPC=movq_r64_imm64       
  subq %rcx, %rax                 #  53    0xa636d  3      OPC=subq_r64_r64         
  movl %eax, (%rbp)               #  54    0xa6370  3      OPC=movl_m32_r32         
  movq %rsi, %rax                 #  55    0xa6373  3      OPC=movq_r64_r64         
  imulq %rdx                      #  56    0xa6376  3      OPC=imulq_r64            
  movq %rsi, %rax                 #  57    0xa6379  3      OPC=movq_r64_r64         
  sarq $0x3f, %rax                #  58    0xa637c  4      OPC=sarq_r64_imm8        
  sarq $0x1, %rdx                 #  59    0xa6380  3      OPC=sarq_r64_one         
  subq %rax, %rdx                 #  60    0xa6383  3      OPC=subq_r64_r64         
  leaq (,%rdx,8), %rcx            #  61    0xa6386  8      OPC=leaq_r64_m16         
  subq %rdx, %rcx                 #  62    0xa638e  3      OPC=subq_r64_r64         
  subq %rcx, %rsi                 #  63    0xa6391  3      OPC=subq_r64_r64         
  movq %rsi, %rdx                 #  64    0xa6394  3      OPC=movq_r64_r64         
  js .L_a66b8                     #  65    0xa6397  6      OPC=js_label_1           
.L_a639d:                         #        0xa639d  0      OPC=<label>              
  movl %edx, 0x18(%rbp)           #  66    0xa639d  3      OPC=movl_m32_r32         
  movl $0x7b2, %r8d               #  67    0xa63a0  6      OPC=movl_r32_imm32       
  movq $0xa3d70a3d70a3d70b, %r11  #  68    0xa63a6  10     OPC=movq_r64_imm64       
  movq $0x2ce33e6c02ce33e7, %rbx  #  69    0xa63b0  10     OPC=movq_r64_imm64       
  jmpq .L_a6534                   #  70    0xa63ba  5      OPC=jmpq_label_1         
  nop                             #  71    0xa63bf  1      OPC=nop                  
.L_a63c0:                         #        0xa63c0  0      OPC=<label>              
  movq %r9, %rax                  #  72    0xa63c0  3      OPC=movq_r64_r64         
  movq %r9, %rdi                  #  73    0xa63c3  3      OPC=movq_r64_r64         
  movq %r8, %rsi                  #  74    0xa63c6  3      OPC=movq_r64_r64         
  imulq %rbx                      #  75    0xa63c9  3      OPC=imulq_r64            
  movq %r9, %rax                  #  76    0xa63cc  3      OPC=movq_r64_r64         
  leaq 0x2(%r8), %rcx             #  77    0xa63cf  4      OPC=leaq_r64_m16         
  sarq $0x3f, %rax                #  78    0xa63d3  4      OPC=sarq_r64_imm8        
  sarq $0x6, %rdx                 #  79    0xa63d7  4      OPC=sarq_r64_imm8        
  subq %rax, %rdx                 #  80    0xa63db  3      OPC=subq_r64_r64         
  leaq (%rdx,%rdx,8), %rax        #  81    0xa63de  4      OPC=leaq_r64_m16         
  leaq (%rdx,%r8,1), %r10         #  82    0xa63e2  4      OPC=leaq_r64_m16         
  leaq (%rdx,%rax,8), %rax        #  83    0xa63e6  4      OPC=leaq_r64_m16         
  leaq (%rax,%rax,4), %rax        #  84    0xa63ea  4      OPC=leaq_r64_m16         
  subq %rax, %rdi                 #  85    0xa63ee  3      OPC=subq_r64_r64         
  movq %rdi, %rax                 #  86    0xa63f1  3      OPC=movq_r64_r64         
  shrq $0x3f, %rax                #  87    0xa63f4  4      OPC=shrq_r64_imm8        
  subq %rax, %r10                 #  88    0xa63f8  3      OPC=subq_r64_r64         
  subq $0x1, %rsi                 #  89    0xa63fb  4      OPC=subq_r64_imm8        
  movq %rsi, %r12                 #  90    0xa63ff  3      OPC=movq_r64_r64         
  cmovnsq %rsi, %rcx              #  91    0xa6402  4      OPC=cmovnsq_r64_r64      
  movq %rsi, %r14                 #  92    0xa6406  3      OPC=movq_r64_r64         
  sarq $0x3f, %r12                #  93    0xa6409  4      OPC=sarq_r64_imm8        
  sarq $0x2, %rcx                 #  94    0xa640d  4      OPC=sarq_r64_imm8        
  leaq -0x1(%r10), %rdi           #  95    0xa6411  4      OPC=leaq_r64_m16         
  movq %r12, %rdx                 #  96    0xa6415  3      OPC=movq_r64_r64         
  shrq $0x3e, %rdx                #  97    0xa6418  4      OPC=shrq_r64_imm8        
  leaq (%rsi,%rdx,1), %rax        #  98    0xa641c  4      OPC=leaq_r64_m16         
  andl $0x3, %eax                 #  99    0xa6420  3      OPC=andl_r32_imm8        
  subq %rdx, %rax                 #  100   0xa6423  3      OPC=subq_r64_r64         
  shrq $0x3f, %rax                #  101   0xa6426  4      OPC=shrq_r64_imm8        
  subq %rax, %rcx                 #  102   0xa642a  3      OPC=subq_r64_r64         
  movq %rsi, %rax                 #  103   0xa642d  3      OPC=movq_r64_r64         
  imulq %r11                      #  104   0xa6430  3      OPC=imulq_r64            
  movq %rcx, %r13                 #  105   0xa6433  3      OPC=movq_r64_r64         
  leaq (%rdx,%rsi,1), %rcx        #  106   0xa6436  4      OPC=leaq_r64_m16         
  movq %rcx, %rdx                 #  107   0xa643a  3      OPC=movq_r64_r64         
  sarq $0x8, %rcx                 #  108   0xa643d  4      OPC=sarq_r64_imm8        
  sarq $0x6, %rdx                 #  109   0xa6441  4      OPC=sarq_r64_imm8        
  subq %r12, %rcx                 #  110   0xa6445  3      OPC=subq_r64_r64         
  movq %rdx, %rax                 #  111   0xa6448  3      OPC=movq_r64_r64         
  subq %r12, %rax                 #  112   0xa644b  3      OPC=subq_r64_r64         
  leaq (%rax,%rax,4), %rax        #  113   0xa644e  4      OPC=leaq_r64_m16         
  leaq (%rax,%rax,4), %rax        #  114   0xa6452  4      OPC=leaq_r64_m16         
  shlq $0x2, %rax                 #  115   0xa6456  4      OPC=shlq_r64_imm8        
  subq %rax, %r14                 #  116   0xa645a  3      OPC=subq_r64_r64         
  movq %r14, %rax                 #  117   0xa645d  3      OPC=movq_r64_r64         
  movq %r12, %r14                 #  118   0xa6460  3      OPC=movq_r64_r64         
  movq %rdi, %r12                 #  119   0xa6463  3      OPC=movq_r64_r64         
  subq %rdx, %r14                 #  120   0xa6466  3      OPC=subq_r64_r64         
  leaq (%rcx,%rcx,4), %rdx        #  121   0xa6469  4      OPC=leaq_r64_m16         
  shrq $0x3f, %rax                #  122   0xa646d  4      OPC=shrq_r64_imm8        
  addq %r14, %rax                 #  123   0xa6471  3      OPC=addq_r64_r64         
  sarq $0x3f, %r12                #  124   0xa6474  4      OPC=sarq_r64_imm8        
  movq %rdi, %r14                 #  125   0xa6478  3      OPC=movq_r64_r64         
  leaq (%rdx,%rdx,4), %rdx        #  126   0xa647b  4      OPC=leaq_r64_m16         
  addq %r13, %rax                 #  127   0xa647f  3      OPC=addq_r64_r64         
  shlq $0x4, %rdx                 #  128   0xa6482  4      OPC=shlq_r64_imm8        
  subq %rdx, %rsi                 #  129   0xa6486  3      OPC=subq_r64_r64         
  shrq $0x3f, %rsi                #  130   0xa6489  4      OPC=shrq_r64_imm8        
  subq %rsi, %rcx                 #  131   0xa648d  3      OPC=subq_r64_r64         
  movq %rdi, %rsi                 #  132   0xa6490  3      OPC=movq_r64_r64         
  addq %rax, %rcx                 #  133   0xa6493  3      OPC=addq_r64_r64         
  movq %rdi, %rax                 #  134   0xa6496  3      OPC=movq_r64_r64         
  imulq %r11                      #  135   0xa6499  3      OPC=imulq_r64            
  addq %rdi, %rdx                 #  136   0xa649c  3      OPC=addq_r64_r64         
  movq %rdx, %r13                 #  137   0xa649f  3      OPC=movq_r64_r64         
  sarq $0x8, %r13                 #  138   0xa64a2  4      OPC=sarq_r64_imm8        
  movq %r13, %rax                 #  139   0xa64a6  3      OPC=movq_r64_r64         
  subq %r12, %rax                 #  140   0xa64a9  3      OPC=subq_r64_r64         
  leaq (%rax,%rax,4), %rax        #  141   0xa64ac  4      OPC=leaq_r64_m16         
  leaq (%rax,%rax,4), %rax        #  142   0xa64b0  4      OPC=leaq_r64_m16         
  shlq $0x4, %rax                 #  143   0xa64b4  4      OPC=shlq_r64_imm8        
  subq %rax, %rsi                 #  144   0xa64b8  3      OPC=subq_r64_r64         
  movq %r12, %rax                 #  145   0xa64bb  3      OPC=movq_r64_r64         
  shrq $0x3f, %rsi                #  146   0xa64be  4      OPC=shrq_r64_imm8        
  subq %r13, %rax                 #  147   0xa64c2  3      OPC=subq_r64_r64         
  addq %rsi, %rax                 #  148   0xa64c5  3      OPC=addq_r64_r64         
  movq %rdx, %rsi                 #  149   0xa64c8  3      OPC=movq_r64_r64         
  sarq $0x6, %rsi                 #  150   0xa64cb  4      OPC=sarq_r64_imm8        
  subq %r12, %rsi                 #  151   0xa64cf  3      OPC=subq_r64_r64         
  shrq $0x3e, %r12                #  152   0xa64d2  4      OPC=shrq_r64_imm8        
  leaq (%rsi,%rsi,4), %rdx        #  153   0xa64d6  4      OPC=leaq_r64_m16         
  leaq (%rdx,%rdx,4), %rdx        #  154   0xa64da  4      OPC=leaq_r64_m16         
  shlq $0x2, %rdx                 #  155   0xa64de  4      OPC=shlq_r64_imm8        
  subq %rdx, %r14                 #  156   0xa64e2  3      OPC=subq_r64_r64         
  movq %r14, %rdx                 #  157   0xa64e5  3      OPC=movq_r64_r64         
  shrq $0x3f, %rdx                #  158   0xa64e8  4      OPC=shrq_r64_imm8        
  subq %rdx, %rsi                 #  159   0xa64ec  3      OPC=subq_r64_r64         
  movq %rsi, %rdx                 #  160   0xa64ef  3      OPC=movq_r64_r64         
  leaq (%rdi,%r12,1), %rsi        #  161   0xa64f2  4      OPC=leaq_r64_m16         
  andl $0x3, %esi                 #  162   0xa64f6  3      OPC=andl_r32_imm8        
  subq %r12, %rsi                 #  163   0xa64f9  3      OPC=subq_r64_r64         
  leaq 0x2(%r10), %r12            #  164   0xa64fc  4      OPC=leaq_r64_m16         
  shrq $0x3f, %rsi                #  165   0xa6500  4      OPC=shrq_r64_imm8        
  testq %rdi, %rdi                #  166   0xa6504  3      OPC=testq_r64_r64        
  cmovsq %r12, %rdi               #  167   0xa6507  4      OPC=cmovsq_r64_r64       
  subq %r10, %r8                  #  168   0xa650b  3      OPC=subq_r64_r64         
  sarq $0x2, %rdi                 #  169   0xa650e  4      OPC=sarq_r64_imm8        
  subq %rdi, %rsi                 #  170   0xa6512  3      OPC=subq_r64_r64         
  leaq (%rdx,%rsi,1), %rsi        #  171   0xa6515  4      OPC=leaq_r64_m16         
  addq %rax, %rsi                 #  172   0xa6519  3      OPC=addq_r64_r64         
  leaq (%r8,%r8,8), %rax          #  173   0xa651c  4      OPC=leaq_r64_m16         
  leaq (%r8,%rax,8), %rax         #  174   0xa6520  4      OPC=leaq_r64_m16         
  movq %r10, %r8                  #  175   0xa6524  3      OPC=movq_r64_r64         
  leaq (%rax,%rax,4), %rax        #  176   0xa6527  4      OPC=leaq_r64_m16         
  addq %rax, %rsi                 #  177   0xa652b  3      OPC=addq_r64_r64         
  addq %rsi, %rcx                 #  178   0xa652e  3      OPC=addq_r64_r64         
  addq %rcx, %r9                  #  179   0xa6531  3      OPC=addq_r64_r64         
.L_a6534:                         #        0xa6534  0      OPC=<label>              
  testq %r9, %r9                  #  180   0xa6534  3      OPC=testq_r64_r64        
  js .L_a63c0                     #  181   0xa6537  6      OPC=js_label_1           
  movq %r8, %rcx                  #  182   0xa653d  3      OPC=movq_r64_r64         
  movl $0x16d, %eax               #  183   0xa6540  5      OPC=movl_r32_imm32       
  andl $0x3, %ecx                 #  184   0xa6545  3      OPC=andl_r32_imm8        
  jne .L_a65a3                    #  185   0xa6548  2      OPC=jne_label            
  movq %r8, %rax                  #  186   0xa654a  3      OPC=movq_r64_r64         
  movq %r8, %rdi                  #  187   0xa654d  3      OPC=movq_r64_r64         
  imulq %r11                      #  188   0xa6550  3      OPC=imulq_r64            
  sarq $0x3f, %rdi                #  189   0xa6553  4      OPC=sarq_r64_imm8        
  addq %r8, %rdx                  #  190   0xa6557  3      OPC=addq_r64_r64         
  movq %rdx, %rax                 #  191   0xa655a  3      OPC=movq_r64_r64         
  sarq $0x6, %rax                 #  192   0xa655d  4      OPC=sarq_r64_imm8        
  subq %rdi, %rax                 #  193   0xa6561  3      OPC=subq_r64_r64         
  leaq (%rax,%rax,4), %rax        #  194   0xa6564  4      OPC=leaq_r64_m16         
  leaq (%rax,%rax,4), %rsi        #  195   0xa6568  4      OPC=leaq_r64_m16         
  movl $0x16e, %eax               #  196   0xa656c  5      OPC=movl_r32_imm32       
  shlq $0x2, %rsi                 #  197   0xa6571  4      OPC=shlq_r64_imm8        
  cmpq %rsi, %r8                  #  198   0xa6575  3      OPC=cmpq_r64_r64         
  jne .L_a65a3                    #  199   0xa6578  2      OPC=jne_label            
  sarq $0x8, %rdx                 #  200   0xa657a  4      OPC=sarq_r64_imm8        
  subq %rdi, %rdx                 #  201   0xa657e  3      OPC=subq_r64_r64         
  movq %r8, %rdi                  #  202   0xa6581  3      OPC=movq_r64_r64         
  leaq (%rdx,%rdx,4), %rax        #  203   0xa6584  4      OPC=leaq_r64_m16         
  leaq (%rax,%rax,4), %rax        #  204   0xa6588  4      OPC=leaq_r64_m16         
  shlq $0x4, %rax                 #  205   0xa658c  4      OPC=shlq_r64_imm8        
  subq %rax, %rdi                 #  206   0xa6590  3      OPC=subq_r64_r64         
  cmpq $0x1, %rdi                 #  207   0xa6593  4      OPC=cmpq_r64_imm8        
  sbbq %rax, %rax                 #  208   0xa6597  3      OPC=sbbq_r64_r64         
  notq %rax                       #  209   0xa659a  3      OPC=notq_r64             
  addq $0x16e, %rax               #  210   0xa659d  6      OPC=addq_rax_imm32       
.L_a65a3:                         #        0xa65a3  0      OPC=<label>              
  cmpq %rax, %r9                  #  211   0xa65a3  3      OPC=cmpq_r64_r64         
  jge .L_a63c0                    #  212   0xa65a6  6      OPC=jge_label_1          
  leal -0x76c(%r8), %eax          #  213   0xa65ac  7      OPC=leal_r32_m16         
  leaq -0x76c(%r8), %rdx          #  214   0xa65b3  7      OPC=leaq_r64_m16         
  movl %eax, 0x14(%rbp)           #  215   0xa65ba  3      OPC=movl_m32_r32         
  cltq                            #  216   0xa65bd  2      OPC=cltq                 
  cmpq %rdx, %rax                 #  217   0xa65bf  3      OPC=cmpq_r64_r64         
  je .L_a6600                     #  218   0xa65c2  2      OPC=je_label             
  movq 0x2f48b5(%rip), %rax       #  219   0xa65c4  7      OPC=movq_r64_m64         
  movl $0x4b, (%rax)              #  220   0xa65cb  6      OPC=movl_m32_imm32       
  nop                             #  221   0xa65d1  1      OPC=nop                  
  xorl %eax, %eax                 #  222   0xa65d2  2      OPC=xorl_r32_r32         
  popq %rbx                       #  223   0xa65d4  1      OPC=popq_r64_1           
  popq %rbp                       #  224   0xa65d5  1      OPC=popq_r64_1           
  popq %r12                       #  225   0xa65d6  2      OPC=popq_r64_1           
  popq %r13                       #  226   0xa65d8  2      OPC=popq_r64_1           
  popq %r14                       #  227   0xa65da  2      OPC=popq_r64_1           
  retq                            #  228   0xa65dc  1      OPC=retq                 
  nop                             #  229   0xa65dd  1      OPC=nop                  
  nop                             #  230   0xa65de  1      OPC=nop                  
  nop                             #  231   0xa65df  1      OPC=nop                  
.L_a65e0:                         #        0xa65e0  0      OPC=<label>              
  subq $0x15180, %rsi             #  232   0xa65e0  7      OPC=subq_r64_imm32       
  addq $0x1, %r9                  #  233   0xa65e7  4      OPC=addq_r64_imm8        
.L_a65eb:                         #        0xa65eb  0      OPC=<label>              
  cmpq $0x1517f, %rsi             #  234   0xa65eb  7      OPC=cmpq_r64_imm32       
  jg .L_a65e0                     #  235   0xa65f2  2      OPC=jg_label             
  jmpq .L_a6305                   #  236   0xa65f4  5      OPC=jmpq_label_1         
  nop                             #  237   0xa65f9  1      OPC=nop                  
  nop                             #  238   0xa65fa  1      OPC=nop                  
  nop                             #  239   0xa65fb  1      OPC=nop                  
  nop                             #  240   0xa65fc  1      OPC=nop                  
  nop                             #  241   0xa65fd  1      OPC=nop                  
  nop                             #  242   0xa65fe  1      OPC=nop                  
  nop                             #  243   0xa65ff  1      OPC=nop                  
.L_a6600:                         #        0xa6600  0      OPC=<label>              
  xorl %eax, %eax                 #  244   0xa6600  2      OPC=xorl_r32_r32         
  testq %rcx, %rcx                #  245   0xa6602  3      OPC=testq_r64_r64        
  movl %r9d, 0x1c(%rbp)           #  246   0xa6605  4      OPC=movl_m32_r32         
  jne .L_a6661                    #  247   0xa6609  2      OPC=jne_label            
  movq %r8, %rax                  #  248   0xa660b  3      OPC=movq_r64_r64         
  movq $0xa3d70a3d70a3d70b, %rdx  #  249   0xa660e  10     OPC=movq_r64_imm64       
  movq %r8, %rsi                  #  250   0xa6618  3      OPC=movq_r64_r64         
  imulq %rdx                      #  251   0xa661b  3      OPC=imulq_r64            
  sarq $0x3f, %rsi                #  252   0xa661e  4      OPC=sarq_r64_imm8        
  addq %r8, %rdx                  #  253   0xa6622  3      OPC=addq_r64_r64         
  movq %rdx, %rax                 #  254   0xa6625  3      OPC=movq_r64_r64         
  sarq $0x6, %rax                 #  255   0xa6628  4      OPC=sarq_r64_imm8        
  subq %rsi, %rax                 #  256   0xa662c  3      OPC=subq_r64_r64         
  leaq (%rax,%rax,4), %rax        #  257   0xa662f  4      OPC=leaq_r64_m16         
  leaq (%rax,%rax,4), %rcx        #  258   0xa6633  4      OPC=leaq_r64_m16         
  movl $0x1, %eax                 #  259   0xa6637  5      OPC=movl_r32_imm32       
  shlq $0x2, %rcx                 #  260   0xa663c  4      OPC=shlq_r64_imm8        
  cmpq %rcx, %r8                  #  261   0xa6640  3      OPC=cmpq_r64_r64         
  jne .L_a6661                    #  262   0xa6643  2      OPC=jne_label            
  sarq $0x8, %rdx                 #  263   0xa6645  4      OPC=sarq_r64_imm8        
  subq %rsi, %rdx                 #  264   0xa6649  3      OPC=subq_r64_r64         
  leaq (%rdx,%rdx,4), %rax        #  265   0xa664c  4      OPC=leaq_r64_m16         
  leaq (%rax,%rax,4), %rax        #  266   0xa6650  4      OPC=leaq_r64_m16         
  shlq $0x4, %rax                 #  267   0xa6654  4      OPC=shlq_r64_imm8        
  cmpq %rax, %r8                  #  268   0xa6658  3      OPC=cmpq_r64_r64         
  sete %al                        #  269   0xa665b  3      OPC=sete_r8              
  movzbl %al, %eax                #  270   0xa665e  3      OPC=movzbl_r32_r8        
.L_a6661:                         #        0xa6661  0      OPC=<label>              
  leaq (%rax,%rax,1), %rdx        #  271   0xa6661  4      OPC=leaq_r64_m16         
  addq %rax, %rdx                 #  272   0xa6665  3      OPC=addq_r64_r64         
  leaq (%rax,%rdx,4), %rdx        #  273   0xa6668  4      OPC=leaq_r64_m16         
  leaq 0xb8d8d(%rip), %rax        #  274   0xa666c  7      OPC=leaq_r64_m16         
  leaq (%rax,%rdx,2), %rcx        #  275   0xa6673  4      OPC=leaq_r64_m16         
  movl $0xb, %eax                 #  276   0xa6677  5      OPC=movl_r32_imm32       
  movzwl 0x16(%rcx), %edx         #  277   0xa667c  4      OPC=movzwl_r32_m16       
  cmpq %r9, %rdx                  #  278   0xa6680  3      OPC=cmpq_r64_r64         
  jle .L_a6697                    #  279   0xa6683  2      OPC=jle_label            
  movl $0xb, %eax                 #  280   0xa6685  5      OPC=movl_r32_imm32       
.L_a668a:                         #        0xa668a  0      OPC=<label>              
  subq $0x1, %rax                 #  281   0xa668a  4      OPC=subq_r64_imm8        
  movzwl (%rcx,%rax,2), %edx      #  282   0xa668e  4      OPC=movzwl_r32_m16       
  cmpq %r9, %rdx                  #  283   0xa6692  3      OPC=cmpq_r64_r64         
  jg .L_a668a                     #  284   0xa6695  2      OPC=jg_label             
.L_a6697:                         #        0xa6697  0      OPC=<label>              
  subq %rdx, %r9                  #  285   0xa6697  3      OPC=subq_r64_r64         
  movl %eax, 0x10(%rbp)           #  286   0xa669a  3      OPC=movl_m32_r32         
  movl $0x1, %eax                 #  287   0xa669d  5      OPC=movl_r32_imm32       
  addl $0x1, %r9d                 #  288   0xa66a2  4      OPC=addl_r32_imm8        
  movl %r9d, 0xc(%rbp)            #  289   0xa66a6  4      OPC=movl_m32_r32         
  popq %rbx                       #  290   0xa66aa  1      OPC=popq_r64_1           
  popq %rbp                       #  291   0xa66ab  1      OPC=popq_r64_1           
  popq %r12                       #  292   0xa66ac  2      OPC=popq_r64_1           
  popq %r13                       #  293   0xa66ae  2      OPC=popq_r64_1           
  popq %r14                       #  294   0xa66b0  2      OPC=popq_r64_1           
  retq                            #  295   0xa66b2  1      OPC=retq                 
  nop                             #  296   0xa66b3  1      OPC=nop                  
  nop                             #  297   0xa66b4  1      OPC=nop                  
  nop                             #  298   0xa66b5  1      OPC=nop                  
  nop                             #  299   0xa66b6  1      OPC=nop                  
  nop                             #  300   0xa66b7  1      OPC=nop                  
.L_a66b8:                         #        0xa66b8  0      OPC=<label>              
  addl $0x7, %edx                 #  301   0xa66b8  3      OPC=addl_r32_imm8        
  jmpq .L_a639d                   #  302   0xa66bb  5      OPC=jmpq_label_1         
                                                                                    
.size __offtime, .-__offtime

