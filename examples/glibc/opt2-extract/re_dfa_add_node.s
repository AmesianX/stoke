  .text
  .globl re_dfa_add_node
  .type re_dfa_add_node, @function

#! file-offset 0xbf600
#! rip-offset  0xbf600
#! capacity    448 bytes

# Text                             #  Line  RIP      Bytes  Opcode                
.re_dfa_add_node:                  #        0xbf600  0      OPC=<label>           
  pushq %r15                       #  1     0xbf600  2      OPC=pushq_r64_1       
  pushq %r14                       #  2     0xbf602  2      OPC=pushq_r64_1       
  movq %rdx, %r15                  #  3     0xbf604  3      OPC=movq_r64_r64      
  pushq %r13                       #  4     0xbf607  2      OPC=pushq_r64_1       
  pushq %r12                       #  5     0xbf609  2      OPC=pushq_r64_1       
  movq %rsi, %r14                  #  6     0xbf60b  3      OPC=movq_r64_r64      
  pushq %rbp                       #  7     0xbf60e  1      OPC=pushq_r64_1       
  pushq %rbx                       #  8     0xbf60f  1      OPC=pushq_r64_1       
  movzbl %dl, %r12d                #  9     0xbf610  4      OPC=movzbl_r32_r8     
  movq %rdi, %rbx                  #  10    0xbf614  3      OPC=movq_r64_r64      
  subq $0x28, %rsp                 #  11    0xbf617  4      OPC=subq_r64_imm8     
  movq 0x10(%rdi), %rax            #  12    0xbf61b  4      OPC=movq_r64_m64      
  movq 0x8(%rdi), %rbp             #  13    0xbf61f  4      OPC=movq_r64_m64      
  cmpq %rbp, %rax                  #  14    0xbf623  3      OPC=cmpq_r64_r64      
  jb .L_bf6f6                      #  15    0xbf626  6      OPC=jb_label_1        
  leaq (%rbp,%rbp,1), %rax         #  16    0xbf62c  5      OPC=leaq_r64_m16      
  movq %rax, %rsi                  #  17    0xbf631  3      OPC=movq_r64_r64      
  movq %rax, 0x8(%rsp)             #  18    0xbf634  5      OPC=movq_m64_r64      
  movq $0xfffffffffffffff, %rax    #  19    0xbf639  10     OPC=movq_r64_imm64    
  cmpq %rax, %rsi                  #  20    0xbf643  3      OPC=cmpq_r64_r64      
  ja .L_bf7b8                      #  21    0xbf646  6      OPC=ja_label_1        
  movq %rbp, %r13                  #  22    0xbf64c  3      OPC=movq_r64_r64      
  movq (%rdi), %rdi                #  23    0xbf64f  3      OPC=movq_r64_m64      
  shlq $0x5, %r13                  #  24    0xbf652  4      OPC=shlq_r64_imm8     
  movq %r13, %rsi                  #  25    0xbf656  3      OPC=movq_r64_r64      
  callq .__tls_get_addr_plt        #  26    0xbf659  5      OPC=callq_label       
  testq %rax, %rax                 #  27    0xbf65e  3      OPC=testq_r64_r64     
  je .L_bf7b8                      #  28    0xbf661  6      OPC=je_label_1        
  movq 0x18(%rbx), %rdi            #  29    0xbf667  4      OPC=movq_r64_m64      
  shlq $0x3, %rbp                  #  30    0xbf66b  4      OPC=shlq_r64_imm8     
  movq %rax, (%rbx)                #  31    0xbf66f  3      OPC=movq_m64_r64      
  movq %rbp, %rsi                  #  32    0xbf672  3      OPC=movq_r64_r64      
  callq .__tls_get_addr_plt        #  33    0xbf675  5      OPC=callq_label       
  movq 0x20(%rbx), %rdi            #  34    0xbf67a  4      OPC=movq_r64_m64      
  movq %rbp, %rsi                  #  35    0xbf67e  3      OPC=movq_r64_r64      
  movq %rax, 0x10(%rsp)            #  36    0xbf681  5      OPC=movq_m64_r64      
  callq .__tls_get_addr_plt        #  37    0xbf686  5      OPC=callq_label       
  movq 0x28(%rbx), %rdi            #  38    0xbf68b  4      OPC=movq_r64_m64      
  movq %r13, %rsi                  #  39    0xbf68f  3      OPC=movq_r64_r64      
  movq %rax, %rbp                  #  40    0xbf692  3      OPC=movq_r64_r64      
  callq .__tls_get_addr_plt        #  41    0xbf695  5      OPC=callq_label       
  movq 0x30(%rbx), %rdi            #  42    0xbf69a  4      OPC=movq_r64_m64      
  movq %r13, %rsi                  #  43    0xbf69e  3      OPC=movq_r64_r64      
  movq %rax, 0x18(%rsp)            #  44    0xbf6a1  5      OPC=movq_m64_r64      
  callq .__tls_get_addr_plt        #  45    0xbf6a6  5      OPC=callq_label       
  movq 0x10(%rsp), %rdx            #  46    0xbf6ab  5      OPC=movq_r64_m64      
  testq %rdx, %rdx                 #  47    0xbf6b0  3      OPC=testq_r64_r64     
  je .L_bf7b8                      #  48    0xbf6b3  6      OPC=je_label_1        
  testq %rbp, %rbp                 #  49    0xbf6b9  3      OPC=testq_r64_r64     
  je .L_bf7b8                      #  50    0xbf6bc  6      OPC=je_label_1        
  movq 0x18(%rsp), %r8             #  51    0xbf6c2  5      OPC=movq_r64_m64      
  testq %r8, %r8                   #  52    0xbf6c7  3      OPC=testq_r64_r64     
  je .L_bf7b8                      #  53    0xbf6ca  6      OPC=je_label_1        
  testq %rax, %rax                 #  54    0xbf6d0  3      OPC=testq_r64_r64     
  je .L_bf7b8                      #  55    0xbf6d3  6      OPC=je_label_1        
  movq %rax, 0x30(%rbx)            #  56    0xbf6d9  4      OPC=movq_m64_r64      
  movq 0x8(%rsp), %rax             #  57    0xbf6dd  5      OPC=movq_r64_m64      
  movq %rdx, 0x18(%rbx)            #  58    0xbf6e2  4      OPC=movq_m64_r64      
  movq %rbp, 0x20(%rbx)            #  59    0xbf6e6  4      OPC=movq_m64_r64      
  movq %r8, 0x28(%rbx)             #  60    0xbf6ea  4      OPC=movq_m64_r64      
  movq %rax, 0x8(%rbx)             #  61    0xbf6ee  4      OPC=movq_m64_r64      
  movq 0x10(%rbx), %rax            #  62    0xbf6f2  4      OPC=movq_r64_m64      
.L_bf6f6:                          #        0xbf6f6  0      OPC=<label>           
  shlq $0x4, %rax                  #  63    0xbf6f6  4      OPC=shlq_r64_imm8     
  addq (%rbx), %rax                #  64    0xbf6fa  3      OPC=addq_r64_m64      
  xorl %edx, %edx                  #  65    0xbf6fd  2      OPC=xorl_r32_r32      
  movq %r15, 0x8(%rax)             #  66    0xbf6ff  4      OPC=movq_m64_r64      
  movq %r14, (%rax)                #  67    0xbf703  3      OPC=movq_m64_r64      
  movq 0x10(%rbx), %rax            #  68    0xbf706  4      OPC=movq_r64_m64      
  shlq $0x4, %rax                  #  69    0xbf70a  4      OPC=shlq_r64_imm8     
  addq (%rbx), %rax                #  70    0xbf70e  3      OPC=addq_r64_m64      
  andl $0xfffc00ff, 0x8(%rax)      #  71    0xbf711  7      OPC=andl_m32_imm32    
  movq 0x10(%rbx), %rax            #  72    0xbf718  4      OPC=movq_r64_m64      
  shlq $0x4, %rax                  #  73    0xbf71c  4      OPC=shlq_r64_imm8     
  addq (%rbx), %rax                #  74    0xbf720  3      OPC=addq_r64_m64      
  cmpl $0x6, %r12d                 #  75    0xbf723  4      OPC=cmpl_r32_imm8     
  sete %dl                         #  76    0xbf727  3      OPC=sete_r8           
  cmpl $0x5, %r12d                 #  77    0xbf72a  4      OPC=cmpl_r32_imm8     
  je .L_bf7a0                      #  78    0xbf72e  2      OPC=je_label          
.L_bf730:                          #        0xbf730  0      OPC=<label>           
  movzbl 0xa(%rax), %ecx           #  79    0xbf730  4      OPC=movzbl_r32_m8     
  shll $0x4, %edx                  #  80    0xbf734  3      OPC=shll_r32_imm8     
  andl $0xffffffef, %ecx           #  81    0xbf737  6      OPC=andl_r32_imm32    
  nop                              #  82    0xbf73d  1      OPC=nop               
  nop                              #  83    0xbf73e  1      OPC=nop               
  nop                              #  84    0xbf73f  1      OPC=nop               
  orl %ecx, %edx                   #  85    0xbf740  2      OPC=orl_r32_r32       
  movb %dl, 0xa(%rax)              #  86    0xbf742  3      OPC=movb_m8_r8        
  movq 0x10(%rbx), %rax            #  87    0xbf745  4      OPC=movq_r64_m64      
  movq 0x18(%rbx), %rdx            #  88    0xbf749  4      OPC=movq_r64_m64      
  movl $0xffffffff, (%rdx,%rax,4)  #  89    0xbf74d  7      OPC=movl_m32_imm32    
  shlq $0x4, %rax                  #  90    0xbf754  4      OPC=shlq_r64_imm8     
  addq 0x28(%rbx), %rax            #  91    0xbf758  4      OPC=addq_r64_m64      
  movq $0x0, (%rax)                #  92    0xbf75c  7      OPC=movq_m64_imm32    
  movq $0x0, 0x8(%rax)             #  93    0xbf763  8      OPC=movq_m64_imm32    
  movq 0x10(%rbx), %rax            #  94    0xbf76b  4      OPC=movq_r64_m64      
  shlq $0x4, %rax                  #  95    0xbf76f  4      OPC=shlq_r64_imm8     
  addq 0x30(%rbx), %rax            #  96    0xbf773  4      OPC=addq_r64_m64      
  movq $0x0, (%rax)                #  97    0xbf777  7      OPC=movq_m64_imm32    
  movq $0x0, 0x8(%rax)             #  98    0xbf77e  8      OPC=movq_m64_imm32    
  movq 0x10(%rbx), %rax            #  99    0xbf786  4      OPC=movq_r64_m64      
  leaq 0x1(%rax), %rdx             #  100   0xbf78a  4      OPC=leaq_r64_m16      
  movq %rdx, 0x10(%rbx)            #  101   0xbf78e  4      OPC=movq_m64_r64      
.L_bf78c:                          #        0xbf792  0      OPC=<label>           
  addq $0x28, %rsp                 #  102   0xbf792  4      OPC=addq_r64_imm8     
  popq %rbx                        #  103   0xbf796  1      OPC=popq_r64_1        
  popq %rbp                        #  104   0xbf797  1      OPC=popq_r64_1        
  popq %r12                        #  105   0xbf798  2      OPC=popq_r64_1        
  popq %r13                        #  106   0xbf79a  2      OPC=popq_r64_1        
  popq %r14                        #  107   0xbf79c  2      OPC=popq_r64_1        
  popq %r15                        #  108   0xbf79e  2      OPC=popq_r64_1        
  retq                             #  109   0xbf7a0  1      OPC=retq              
  nop                              #  110   0xbf7a1  1      OPC=nop               
  nop                              #  111   0xbf7a2  1      OPC=nop               
  nop                              #  112   0xbf7a3  1      OPC=nop               
  nop                              #  113   0xbf7a4  1      OPC=nop               
  nop                              #  114   0xbf7a5  1      OPC=nop               
.L_bf7a0:                          #        0xbf7a6  0      OPC=<label>           
  xorl %edx, %edx                  #  115   0xbf7a6  2      OPC=xorl_r32_r32      
  cmpl $0x1, 0xa4(%rbx)            #  116   0xbf7a8  7      OPC=cmpl_m32_imm8     
  setg %dl                         #  117   0xbf7af  3      OPC=setg_r8           
  jmpq .L_bf730                    #  118   0xbf7b2  5      OPC=jmpq_label_1      
  nop                              #  119   0xbf7b7  1      OPC=nop               
  nop                              #  120   0xbf7b8  1      OPC=nop               
  nop                              #  121   0xbf7b9  1      OPC=nop               
  nop                              #  122   0xbf7ba  1      OPC=nop               
  nop                              #  123   0xbf7bb  1      OPC=nop               
  nop                              #  124   0xbf7bc  1      OPC=nop               
  nop                              #  125   0xbf7bd  1      OPC=nop               
.L_bf7b8:                          #        0xbf7be  0      OPC=<label>           
  movl $0xffffffff, %eax           #  126   0xbf7be  6      OPC=movl_r32_imm32_1  
  jmpq .L_bf78c                    #  127   0xbf7c4  2      OPC=jmpq_label        
  nop                              #  128   0xbf7c6  1      OPC=nop               
                                                                                  
.size re_dfa_add_node, .-re_dfa_add_node

