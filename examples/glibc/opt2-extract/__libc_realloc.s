  .text
  .globl __libc_realloc
  .type __libc_realloc, @function

#! file-offset 0x78cb0
#! rip-offset  0x78cb0
#! capacity    720 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
.__libc_realloc:                    #        0x78cb0  0      OPC=<label>           
  pushq %r15                        #  1     0x78cb0  2      OPC=pushq_r64_1       
  pushq %r14                        #  2     0x78cb2  2      OPC=pushq_r64_1       
  pushq %r13                        #  3     0x78cb4  2      OPC=pushq_r64_1       
  pushq %r12                        #  4     0x78cb6  2      OPC=pushq_r64_1       
  pushq %rbp                        #  5     0x78cb8  1      OPC=pushq_r64_1       
  pushq %rbx                        #  6     0x78cb9  1      OPC=pushq_r64_1       
  subq $0x18, %rsp                  #  7     0x78cba  4      OPC=subq_r64_imm8     
  movq 0x322313(%rip), %rax         #  8     0x78cbe  7      OPC=movq_r64_m64      
  movq (%rax), %rax                 #  9     0x78cc5  3      OPC=movq_r64_m64      
  testq %rax, %rax                  #  10    0x78cc8  3      OPC=testq_r64_r64     
  jne .L_78e90                      #  11    0x78ccb  6      OPC=jne_label_1       
  testq %rdi, %rdi                  #  12    0x78cd1  3      OPC=testq_r64_r64     
  movq %rsi, %rbp                   #  13    0x78cd4  3      OPC=movq_r64_r64      
  movq %rdi, %rbx                   #  14    0x78cd7  3      OPC=movq_r64_r64      
  je .L_78ce5                       #  15    0x78cda  2      OPC=je_label          
  testq %rsi, %rsi                  #  16    0x78cdc  3      OPC=testq_r64_r64     
  je .L_78f08                       #  17    0x78cdf  6      OPC=je_label_1        
.L_78ce5:                           #        0x78ce5  0      OPC=<label>           
  testq %rbx, %rbx                  #  18    0x78ce5  3      OPC=testq_r64_r64     
  je .L_78f18                       #  19    0x78ce8  6      OPC=je_label_1        
  movq -0x8(%rbx), %rax             #  20    0x78cee  4      OPC=movq_r64_m64      
  leaq -0x10(%rbx), %r14            #  21    0x78cf2  4      OPC=leaq_r64_m16      
  movq %rax, %r15                   #  22    0x78cf6  3      OPC=movq_r64_r64      
  movq %rax, %rcx                   #  23    0x78cf9  3      OPC=movq_r64_r64      
  andq $0xf8, %r15                  #  24    0x78cfc  4      OPC=andq_r64_imm8     
  andl $0x2, %ecx                   #  25    0x78d00  3      OPC=andl_r32_imm8     
  jne .L_78d98                      #  26    0x78d03  6      OPC=jne_label_1       
  testb $0x4, %al                   #  27    0x78d09  2      OPC=testb_al_imm8     
  leaq 0x322f2e(%rip), %r12         #  28    0x78d0b  7      OPC=leaq_r64_m16      
  je .L_78d20                       #  29    0x78d12  2      OPC=je_label          
  movq %r14, %rax                   #  30    0x78d14  3      OPC=movq_r64_r64      
  andq $0xfc000000, %rax            #  31    0x78d17  6      OPC=andq_rax_imm32    
  movq (%rax), %r12                 #  32    0x78d1d  3      OPC=movq_r64_m64      
.L_78d20:                           #        0x78d20  0      OPC=<label>           
  movq %r15, %rax                   #  33    0x78d20  3      OPC=movq_r64_r64      
  negq %rax                         #  34    0x78d23  3      OPC=negq_r64          
  cmpq %r14, %rax                   #  35    0x78d26  3      OPC=cmpq_r64_r64      
  jb .L_78e70                       #  36    0x78d29  6      OPC=jb_label_1        
  testb $0xf, %r14b                 #  37    0x78d2f  4      OPC=testb_r8_imm8     
  jne .L_78e70                      #  38    0x78d33  6      OPC=jne_label_1       
  cmpq $0xbf, %rbp                  #  39    0x78d39  4      OPC=cmpq_r64_imm8     
  ja .L_78ea8                       #  40    0x78d3d  6      OPC=ja_label_1        
  leaq 0x17(%rbp), %rax             #  41    0x78d43  4      OPC=leaq_r64_m16      
  movq %rax, %rdx                   #  42    0x78d47  3      OPC=movq_r64_r64      
  andq $0xf0, %rdx                  #  43    0x78d4a  4      OPC=andq_r64_imm8     
  cmpq $0x20, %rax                  #  44    0x78d4e  4      OPC=cmpq_r64_imm8     
  movl $0x20, %eax                  #  45    0x78d52  5      OPC=movl_r32_imm32    
  cmovbq %rax, %rdx                 #  46    0x78d57  4      OPC=cmovbq_r64_r64    
  testq %rcx, %rcx                  #  47    0x78d5b  3      OPC=testq_r64_r64     
  je .L_78da0                       #  48    0x78d5e  2      OPC=je_label          
  movq %rdx, %rsi                   #  49    0x78d60  3      OPC=movq_r64_r64      
  movq %r14, %rdi                   #  50    0x78d63  3      OPC=movq_r64_r64      
  movq %rdx, 0x8(%rsp)              #  51    0x78d66  5      OPC=movq_m64_r64      
  callq .mremap_chunk               #  52    0x78d6b  5      OPC=callq_label       
  testq %rax, %rax                  #  53    0x78d70  3      OPC=testq_r64_r64     
  leaq 0x10(%rax), %r13             #  54    0x78d73  4      OPC=leaq_r64_m16      
  movq 0x8(%rsp), %rdx              #  55    0x78d77  5      OPC=movq_r64_m64      
  je .L_78ec0                       #  56    0x78d7c  6      OPC=je_label_1        
.L_78d82:                           #        0x78d82  0      OPC=<label>           
  addq $0x18, %rsp                  #  57    0x78d82  4      OPC=addq_r64_imm8     
  movq %r13, %rax                   #  58    0x78d86  3      OPC=movq_r64_r64      
  popq %rbx                         #  59    0x78d89  1      OPC=popq_r64_1        
  popq %rbp                         #  60    0x78d8a  1      OPC=popq_r64_1        
  popq %r12                         #  61    0x78d8b  2      OPC=popq_r64_1        
  popq %r13                         #  62    0x78d8d  2      OPC=popq_r64_1        
  popq %r14                         #  63    0x78d8f  2      OPC=popq_r64_1        
  popq %r15                         #  64    0x78d91  2      OPC=popq_r64_1        
  retq                              #  65    0x78d93  1      OPC=retq              
  nop                               #  66    0x78d94  1      OPC=nop               
  nop                               #  67    0x78d95  1      OPC=nop               
  nop                               #  68    0x78d96  1      OPC=nop               
  nop                               #  69    0x78d97  1      OPC=nop               
.L_78d98:                           #        0x78d98  0      OPC=<label>           
  xorl %r12d, %r12d                 #  70    0x78d98  3      OPC=xorl_r32_r32      
  jmpq .L_78d20                     #  71    0x78d9b  2      OPC=jmpq_label        
  nop                               #  72    0x78d9d  1      OPC=nop               
  nop                               #  73    0x78d9e  1      OPC=nop               
  nop                               #  74    0x78d9f  1      OPC=nop               
.L_78da0:                           #        0x78da0  0      OPC=<label>           
  movl $0x1, %esi                   #  75    0x78da0  5      OPC=movl_r32_imm32    
  xorl %eax, %eax                   #  76    0x78da5  2      OPC=xorl_r32_r32      
  cmpl $0x0, 0x327e52(%rip)         #  77    0x78da7  7      OPC=cmpl_m32_imm8     
  je .L_78dba                       #  78    0x78dae  2      OPC=je_label          
  lock                              #  79    0x78db0  1      OPC=lock              
  cmpxchgl %esi, (%r12)             #  80    0x78db1  5      OPC=cmpxchgl_m32_r32  
  nop                               #  81    0x78db6  1      OPC=nop               
  jne .L_78dc1                      #  82    0x78db7  2      OPC=jne_label         
  jmpq .L_78dd8                     #  83    0x78db9  2      OPC=jmpq_label        
.L_78dba:                           #        0x78dbb  0      OPC=<label>           
  cmpxchgl %esi, (%r12)             #  84    0x78dbb  5      OPC=cmpxchgl_m32_r32  
  je .L_78dd8                       #  85    0x78dc0  2      OPC=je_label          
.L_78dc1:                           #        0x78dc2  0      OPC=<label>           
  leaq (%r12), %rdi                 #  86    0x78dc2  4      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  87    0x78dc6  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  88    0x78dcd  5      OPC=callq_label       
  addq $0x80, %rsp                  #  89    0x78dd2  7      OPC=addq_r64_imm32    
.L_78dd8:                           #        0x78dd9  0      OPC=<label>           
  movq %rdx, %rcx                   #  90    0x78dd9  3      OPC=movq_r64_r64      
  movq %r14, %rsi                   #  91    0x78ddc  3      OPC=movq_r64_r64      
  movq %r15, %rdx                   #  92    0x78ddf  3      OPC=movq_r64_r64      
  movq %r12, %rdi                   #  93    0x78de2  3      OPC=movq_r64_r64      
  callq ._int_realloc               #  94    0x78de5  5      OPC=callq_label       
  movq %rax, %r13                   #  95    0x78dea  3      OPC=movq_r64_r64      
  cmpl $0x0, 0x327e0d(%rip)         #  96    0x78ded  7      OPC=cmpl_m32_imm8     
  je .L_78dfe                       #  97    0x78df4  2      OPC=je_label          
  lock                              #  98    0x78df6  1      OPC=lock              
  decl (%r12)                       #  99    0x78df7  4      OPC=decl_m32          
  nop                               #  100   0x78dfb  1      OPC=nop               
  jne .L_78e04                      #  101   0x78dfc  2      OPC=jne_label         
  jmpq .L_78e1b                     #  102   0x78dfe  2      OPC=jmpq_label        
.L_78dfe:                           #        0x78e00  0      OPC=<label>           
  decl (%r12)                       #  103   0x78e00  4      OPC=decl_m32          
  je .L_78e1b                       #  104   0x78e04  2      OPC=je_label          
.L_78e04:                           #        0x78e06  0      OPC=<label>           
  leaq (%r12), %rdi                 #  105   0x78e06  4      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  106   0x78e0a  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  107   0x78e11  5      OPC=callq_label       
  addq $0x80, %rsp                  #  108   0x78e16  7      OPC=addq_r64_imm32    
.L_78e1b:                           #        0x78e1d  0      OPC=<label>           
  testq %r13, %r13                  #  109   0x78e1d  3      OPC=testq_r64_r64     
  je .L_78f30                       #  110   0x78e20  6      OPC=je_label_1        
  movq -0x8(%r13), %rax             #  111   0x78e26  4      OPC=movq_r64_m64      
  testb $0x2, %al                   #  112   0x78e2a  2      OPC=testb_al_imm8     
  jne .L_78d82                      #  113   0x78e2c  6      OPC=jne_label_1       
  testb $0x4, %al                   #  114   0x78e32  2      OPC=testb_al_imm8     
  leaq 0x322e07(%rip), %rdx         #  115   0x78e34  7      OPC=leaq_r64_m16      
  je .L_78e48                       #  116   0x78e3b  2      OPC=je_label          
  leaq -0x10(%r13), %rax            #  117   0x78e3d  4      OPC=leaq_r64_m16      
  andq $0xfc000000, %rax            #  118   0x78e41  6      OPC=andq_rax_imm32    
  movq (%rax), %rdx                 #  119   0x78e47  3      OPC=movq_r64_m64      
.L_78e48:                           #        0x78e4a  0      OPC=<label>           
  cmpq %r12, %rdx                   #  120   0x78e4a  3      OPC=cmpq_r64_r64      
  je .L_78d82                       #  121   0x78e4d  6      OPC=je_label_1        
  leaq 0xebcc0(%rip), %rcx          #  122   0x78e53  7      OPC=leaq_r64_m16      
  leaq 0xeb992(%rip), %rsi          #  123   0x78e5a  7      OPC=leaq_r64_m16      
  leaq 0xef5e2(%rip), %rdi          #  124   0x78e61  7      OPC=leaq_r64_m16      
  movl $0xbea, %edx                 #  125   0x78e68  5      OPC=movl_r32_imm32    
  callq .__malloc_assert            #  126   0x78e6d  5      OPC=callq_label       
.L_78e70:                           #        0x78e72  0      OPC=<label>           
  movl 0x32235a(%rip), %edi         #  127   0x78e72  6      OPC=movl_r32_m32      
  leaq 0xebb1e(%rip), %rsi          #  128   0x78e78  7      OPC=leaq_r64_m16      
  movq %r12, %rcx                   #  129   0x78e7f  3      OPC=movq_r64_r64      
  movq %rbx, %rdx                   #  130   0x78e82  3      OPC=movq_r64_r64      
  xorl %r13d, %r13d                 #  131   0x78e85  3      OPC=xorl_r32_r32      
  callq .malloc_printerr            #  132   0x78e88  5      OPC=callq_label       
  jmpq .L_78d82                     #  133   0x78e8d  5      OPC=jmpq_label_1      
.L_78e90:                           #        0x78e92  0      OPC=<label>           
  movq 0x48(%rsp), %rdx             #  134   0x78e92  5      OPC=movq_r64_m64      
  addq $0x18, %rsp                  #  135   0x78e97  4      OPC=addq_r64_imm8     
  popq %rbx                         #  136   0x78e9b  1      OPC=popq_r64_1        
  popq %rbp                         #  137   0x78e9c  1      OPC=popq_r64_1        
  popq %r12                         #  138   0x78e9d  2      OPC=popq_r64_1        
  popq %r13                         #  139   0x78e9f  2      OPC=popq_r64_1        
  popq %r14                         #  140   0x78ea1  2      OPC=popq_r64_1        
  popq %r15                         #  141   0x78ea3  2      OPC=popq_r64_1        
  jmpq %rax                         #  142   0x78ea5  2      OPC=jmpq_r64          
  nop                               #  143   0x78ea7  1      OPC=nop               
  nop                               #  144   0x78ea8  1      OPC=nop               
  nop                               #  145   0x78ea9  1      OPC=nop               
.L_78ea8:                           #        0x78eaa  0      OPC=<label>           
  movq 0x321fd1(%rip), %rax         #  146   0x78eaa  7      OPC=movq_r64_m64      
  xorl %r13d, %r13d                 #  147   0x78eb1  3      OPC=xorl_r32_r32      
  movl $0xc, (%rax)                 #  148   0x78eb4  6      OPC=movl_m32_imm32    
  nop                               #  149   0x78eba  1      OPC=nop               
  jmpq .L_78d82                     #  150   0x78ebb  5      OPC=jmpq_label_1      
  xchgw %ax, %ax                    #  151   0x78ec0  2      OPC=xchgw_ax_r16      
.L_78ec0:                           #        0x78ec2  0      OPC=<label>           
  leaq -0x8(%r15), %rax             #  152   0x78ec2  4      OPC=leaq_r64_m16      
  movq %rbx, %r13                   #  153   0x78ec6  3      OPC=movq_r64_r64      
  cmpq %rax, %rdx                   #  154   0x78ec9  3      OPC=cmpq_r64_r64      
  jbe .L_78d82                      #  155   0x78ecc  6      OPC=jbe_label_1       
  movq %rbp, %rdi                   #  156   0x78ed2  3      OPC=movq_r64_r64      
  callq .__libc_malloc              #  157   0x78ed5  5      OPC=callq_label       
  testq %rax, %rax                  #  158   0x78eda  3      OPC=testq_r64_r64     
  movq %rax, %rbx                   #  159   0x78edd  3      OPC=movq_r64_r64      
  je .L_78f6b                       #  160   0x78ee0  6      OPC=je_label_1        
  leaq -0x10(%r15), %rdx            #  161   0x78ee6  4      OPC=leaq_r64_m16      
  movq %r13, %rsi                   #  162   0x78eea  3      OPC=movq_r64_r64      
  movq %rax, %rdi                   #  163   0x78eed  3      OPC=movq_r64_r64      
  movq %rbx, %r13                   #  164   0x78ef0  3      OPC=movq_r64_r64      
  callq .__GI_memcpy                #  165   0x78ef3  5      OPC=callq_label       
  movq %r14, %rdi                   #  166   0x78ef8  3      OPC=movq_r64_r64      
  callq .munmap_chunk               #  167   0x78efb  5      OPC=callq_label       
  jmpq .L_78d82                     #  168   0x78f00  5      OPC=jmpq_label_1      
  nop                               #  169   0x78f05  1      OPC=nop               
  nop                               #  170   0x78f06  1      OPC=nop               
  nop                               #  171   0x78f07  1      OPC=nop               
  nop                               #  172   0x78f08  1      OPC=nop               
  nop                               #  173   0x78f09  1      OPC=nop               
.L_78f08:                           #        0x78f0a  0      OPC=<label>           
  callq .__libc_free                #  174   0x78f0a  5      OPC=callq_label       
  xorl %r13d, %r13d                 #  175   0x78f0f  3      OPC=xorl_r32_r32      
  jmpq .L_78d82                     #  176   0x78f12  5      OPC=jmpq_label_1      
  nop                               #  177   0x78f17  1      OPC=nop               
  nop                               #  178   0x78f18  1      OPC=nop               
  nop                               #  179   0x78f19  1      OPC=nop               
.L_78f18:                           #        0x78f1a  0      OPC=<label>           
  addq $0x18, %rsp                  #  180   0x78f1a  4      OPC=addq_r64_imm8     
  movq %rbp, %rdi                   #  181   0x78f1e  3      OPC=movq_r64_r64      
  popq %rbx                         #  182   0x78f21  1      OPC=popq_r64_1        
  popq %rbp                         #  183   0x78f22  1      OPC=popq_r64_1        
  popq %r12                         #  184   0x78f23  2      OPC=popq_r64_1        
  popq %r13                         #  185   0x78f25  2      OPC=popq_r64_1        
  popq %r14                         #  186   0x78f27  2      OPC=popq_r64_1        
  popq %r15                         #  187   0x78f29  2      OPC=popq_r64_1        
  jmpq .__libc_malloc               #  188   0x78f2b  5      OPC=jmpq_label_1      
  xchgw %ax, %ax                    #  189   0x78f30  2      OPC=xchgw_ax_r16      
.L_78f30:                           #        0x78f32  0      OPC=<label>           
  movq %rbp, %rdi                   #  190   0x78f32  3      OPC=movq_r64_r64      
  xorl %r13d, %r13d                 #  191   0x78f35  3      OPC=xorl_r32_r32      
  callq .__libc_malloc              #  192   0x78f38  5      OPC=callq_label       
  testq %rax, %rax                  #  193   0x78f3d  3      OPC=testq_r64_r64     
  movq %rax, %rbp                   #  194   0x78f40  3      OPC=movq_r64_r64      
  je .L_78d82                       #  195   0x78f43  6      OPC=je_label_1        
  leaq -0x8(%r15), %rdx             #  196   0x78f49  4      OPC=leaq_r64_m16      
  movq %rbx, %rsi                   #  197   0x78f4d  3      OPC=movq_r64_r64      
  movq %rax, %rdi                   #  198   0x78f50  3      OPC=movq_r64_r64      
  movq %rbp, %r13                   #  199   0x78f53  3      OPC=movq_r64_r64      
  callq .__GI_memcpy                #  200   0x78f56  5      OPC=callq_label       
  xorl %edx, %edx                   #  201   0x78f5b  2      OPC=xorl_r32_r32      
  movq %r14, %rsi                   #  202   0x78f5d  3      OPC=movq_r64_r64      
  movq %r12, %rdi                   #  203   0x78f60  3      OPC=movq_r64_r64      
  callq ._int_free                  #  204   0x78f63  5      OPC=callq_label       
  jmpq .L_78d82                     #  205   0x78f68  5      OPC=jmpq_label_1      
.L_78f6b:                           #        0x78f6d  0      OPC=<label>           
  xorl %r13d, %r13d                 #  206   0x78f6d  3      OPC=xorl_r32_r32      
  jmpq .L_78d82                     #  207   0x78f70  5      OPC=jmpq_label_1      
  nop                               #  208   0x78f75  1      OPC=nop               
  nop                               #  209   0x78f76  1      OPC=nop               
  nop                               #  210   0x78f77  1      OPC=nop               
  nop                               #  211   0x78f78  1      OPC=nop               
  nop                               #  212   0x78f79  1      OPC=nop               
  nop                               #  213   0x78f7a  1      OPC=nop               
  nop                               #  214   0x78f7b  1      OPC=nop               
  nop                               #  215   0x78f7c  1      OPC=nop               
  nop                               #  216   0x78f7d  1      OPC=nop               
  nop                               #  217   0x78f7e  1      OPC=nop               
  nop                               #  218   0x78f7f  1      OPC=nop               
  nop                               #  219   0x78f80  1      OPC=nop               
  nop                               #  220   0x78f81  1      OPC=nop               
                                                                                   
.size __libc_realloc, .-__libc_realloc

