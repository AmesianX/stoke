  .text
  .globl _IO_getwline_info
  .type _IO_getwline_info, @function

#! file-offset 0x68bf0
#! rip-offset  0x68bf0
#! capacity    496 bytes

# Text                      #  Line  RIP      Bytes  Opcode               
._IO_getwline_info:         #        0x68bf0  0      OPC=<label>          
  pushq %r15                #  1     0x68bf0  2      OPC=pushq_r64_1      
  pushq %r14                #  2     0x68bf2  2      OPC=pushq_r64_1      
  movq %rdi, %r15           #  3     0x68bf4  3      OPC=movq_r64_r64     
  pushq %r13                #  4     0x68bf7  2      OPC=pushq_r64_1      
  pushq %r12                #  5     0x68bf9  2      OPC=pushq_r64_1      
  movq %rdx, %r13           #  6     0x68bfb  3      OPC=movq_r64_r64     
  pushq %rbp                #  7     0x68bfe  1      OPC=pushq_r64_1      
  pushq %rbx                #  8     0x68bff  1      OPC=pushq_r64_1      
  movl %ecx, %r12d          #  9     0x68c00  3      OPC=movl_r32_r32     
  subq $0x28, %rsp          #  10    0x68c03  4      OPC=subq_r64_imm8    
  testq %r9, %r9            #  11    0x68c07  3      OPC=testq_r64_r64    
  movq %rsi, 0x8(%rsp)      #  12    0x68c0a  5      OPC=movq_m64_r64     
  movl %r8d, 0x14(%rsp)     #  13    0x68c0f  5      OPC=movl_m32_r32     
  movq %r9, 0x18(%rsp)      #  14    0x68c14  5      OPC=movq_m64_r64     
  je .L_68c22               #  15    0x68c19  2      OPC=je_label         
  movl $0x0, (%r9)          #  16    0x68c1b  7      OPC=movl_m32_imm32   
.L_68c22:                   #        0x68c22  0      OPC=<label>          
  movl 0xc0(%r15), %eax     #  17    0x68c22  7      OPC=movl_r32_m32     
  testl %eax, %eax          #  18    0x68c29  2      OPC=testl_r32_r32    
  je .L_68d59               #  19    0x68c2b  6      OPC=je_label_1       
.L_68c31:                   #        0x68c31  0      OPC=<label>          
  testq %r13, %r13          #  20    0x68c31  3      OPC=testq_r64_r64    
  je .L_68dc0               #  21    0x68c34  6      OPC=je_label_1       
  movq 0x8(%rsp), %rbp      #  22    0x68c3a  5      OPC=movq_r64_m64     
  jmpq .L_68c91             #  23    0x68c3f  2      OPC=jmpq_label       
  nop                       #  24    0x68c41  1      OPC=nop              
  nop                       #  25    0x68c42  1      OPC=nop              
  nop                       #  26    0x68c43  1      OPC=nop              
  nop                       #  27    0x68c44  1      OPC=nop              
  nop                       #  28    0x68c45  1      OPC=nop              
  nop                       #  29    0x68c46  1      OPC=nop              
  nop                       #  30    0x68c47  1      OPC=nop              
.L_68c48:                   #        0x68c48  0      OPC=<label>          
  cmpq %r13, %rbx           #  31    0x68c48  3      OPC=cmpq_r64_r64     
  movl %r12d, %esi          #  32    0x68c4b  3      OPC=movl_r32_r32     
  movq %r14, %rdi           #  33    0x68c4e  3      OPC=movq_r64_r64     
  cmovaeq %r13, %rbx        #  34    0x68c51  4      OPC=cmovaeq_r64_r64  
  movq %rbx, %rdx           #  35    0x68c55  3      OPC=movq_r64_r64     
  callq .wmemchr            #  36    0x68c58  5      OPC=callq_label      
  testq %rax, %rax          #  37    0x68c5d  3      OPC=testq_r64_r64    
  jne .L_68cf8              #  38    0x68c60  6      OPC=jne_label_1      
  movq %rbx, %rdx           #  39    0x68c66  3      OPC=movq_r64_r64     
  movq %rbp, %rdi           #  40    0x68c69  3      OPC=movq_r64_r64     
  movq %r14, %rsi           #  41    0x68c6c  3      OPC=movq_r64_r64     
  callq .wmemcpy            #  42    0x68c6f  5      OPC=callq_label      
  movq 0xa0(%r15), %rdx     #  43    0x68c74  7      OPC=movq_r64_m64     
  leaq (,%rbx,4), %rax      #  44    0x68c7b  8      OPC=leaq_r64_m16     
  subq %rbx, %r13           #  45    0x68c83  3      OPC=subq_r64_r64     
  addq %rax, %rbp           #  46    0x68c86  3      OPC=addq_r64_r64     
  addq %rax, (%rdx)         #  47    0x68c89  3      OPC=addq_m64_r64     
  testq %r13, %r13          #  48    0x68c8c  3      OPC=testq_r64_r64    
  je .L_68cd8               #  49    0x68c8f  2      OPC=je_label         
.L_68c91:                   #        0x68c91  0      OPC=<label>          
  movq 0xa0(%r15), %rax     #  50    0x68c91  7      OPC=movq_r64_m64     
  movq (%rax), %r14         #  51    0x68c98  3      OPC=movq_r64_m64     
  movq 0x8(%rax), %rbx      #  52    0x68c9b  4      OPC=movq_r64_m64     
  subq %r14, %rbx           #  53    0x68c9f  3      OPC=subq_r64_r64     
  sarq $0x2, %rbx           #  54    0x68ca2  4      OPC=sarq_r64_imm8    
  testq %rbx, %rbx          #  55    0x68ca6  3      OPC=testq_r64_r64    
  jg .L_68c48               #  56    0x68ca9  2      OPC=jg_label         
  movq %r15, %rdi           #  57    0x68cab  3      OPC=movq_r64_r64     
  callq .__wuflow           #  58    0x68cae  5      OPC=callq_label      
  cmpl $0xffffffff, %eax    #  59    0x68cb3  6      OPC=cmpl_r32_imm32   
  nop                       #  60    0x68cb9  1      OPC=nop              
  nop                       #  61    0x68cba  1      OPC=nop              
  nop                       #  62    0x68cbb  1      OPC=nop              
  je .L_68d6b               #  63    0x68cbc  6      OPC=je_label_1       
  cmpl %eax, %r12d          #  64    0x68cc2  3      OPC=cmpl_r32_r32     
  je .L_68d8b               #  65    0x68cc5  6      OPC=je_label_1       
  subq $0x1, %r13           #  66    0x68ccb  4      OPC=subq_r64_imm8    
  movl %eax, (%rbp)         #  67    0x68ccf  3      OPC=movl_m32_r32     
  addq $0x4, %rbp           #  68    0x68cd2  4      OPC=addq_r64_imm8    
  testq %r13, %r13          #  69    0x68cd6  3      OPC=testq_r64_r64    
  jne .L_68c91              #  70    0x68cd9  2      OPC=jne_label        
  nop                       #  71    0x68cdb  1      OPC=nop              
  nop                       #  72    0x68cdc  1      OPC=nop              
  nop                       #  73    0x68cdd  1      OPC=nop              
.L_68cd8:                   #        0x68cde  0      OPC=<label>          
  subq 0x8(%rsp), %rbp      #  74    0x68cde  5      OPC=subq_r64_m64     
  movq %rbp, %rax           #  75    0x68ce3  3      OPC=movq_r64_r64     
  sarq $0x2, %rax           #  76    0x68ce6  4      OPC=sarq_r64_imm8    
.L_68ce4:                   #        0x68cea  0      OPC=<label>          
  addq $0x28, %rsp          #  77    0x68cea  4      OPC=addq_r64_imm8    
  popq %rbx                 #  78    0x68cee  1      OPC=popq_r64_1       
  popq %rbp                 #  79    0x68cef  1      OPC=popq_r64_1       
  popq %r12                 #  80    0x68cf0  2      OPC=popq_r64_1       
  popq %r13                 #  81    0x68cf2  2      OPC=popq_r64_1       
  popq %r14                 #  82    0x68cf4  2      OPC=popq_r64_1       
  popq %r15                 #  83    0x68cf6  2      OPC=popq_r64_1       
  retq                      #  84    0x68cf8  1      OPC=retq             
  nop                       #  85    0x68cf9  1      OPC=nop              
  nop                       #  86    0x68cfa  1      OPC=nop              
  nop                       #  87    0x68cfb  1      OPC=nop              
  nop                       #  88    0x68cfc  1      OPC=nop              
  nop                       #  89    0x68cfd  1      OPC=nop              
.L_68cf8:                   #        0x68cfe  0      OPC=<label>          
  movq %rax, %rbx           #  90    0x68cfe  3      OPC=movq_r64_r64     
  movq %rbp, %rax           #  91    0x68d01  3      OPC=movq_r64_r64     
  subq 0x8(%rsp), %rax      #  92    0x68d04  5      OPC=subq_r64_m64     
  movl 0x14(%rsp), %ecx     #  93    0x68d09  4      OPC=movl_r32_m32     
  sarq $0x2, %rax           #  94    0x68d0d  4      OPC=sarq_r64_imm8    
  movq %rax, %r12           #  95    0x68d11  3      OPC=movq_r64_r64     
  movq %rbx, %rax           #  96    0x68d14  3      OPC=movq_r64_r64     
  subq %r14, %rax           #  97    0x68d17  3      OPC=subq_r64_r64     
  sarq $0x2, %rax           #  98    0x68d1a  4      OPC=sarq_r64_imm8    
  testl %ecx, %ecx          #  99    0x68d1e  2      OPC=testl_r32_r32    
  movq %rax, %r13           #  100   0x68d20  3      OPC=movq_r64_r64     
  js .L_68d2d               #  101   0x68d23  2      OPC=js_label         
  leaq 0x1(%r13), %rax      #  102   0x68d25  4      OPC=leaq_r64_m16     
  addq $0x4, %rbx           #  103   0x68d29  4      OPC=addq_r64_imm8    
  testl %ecx, %ecx          #  104   0x68d2d  2      OPC=testl_r32_r32    
  cmovneq %rax, %r13        #  105   0x68d2f  4      OPC=cmovneq_r64_r64  
.L_68d2d:                   #        0x68d33  0      OPC=<label>          
  movq %r13, %rdx           #  106   0x68d33  3      OPC=movq_r64_r64     
  movq %r14, %rsi           #  107   0x68d36  3      OPC=movq_r64_r64     
  movq %rbp, %rdi           #  108   0x68d39  3      OPC=movq_r64_r64     
  callq .wmemcpy            #  109   0x68d3c  5      OPC=callq_label      
  movq 0xa0(%r15), %rax     #  110   0x68d41  7      OPC=movq_r64_m64     
  movq %rbx, (%rax)         #  111   0x68d48  3      OPC=movq_m64_r64     
  addq $0x28, %rsp          #  112   0x68d4b  4      OPC=addq_r64_imm8    
  leaq (%r13,%r12,1), %rax  #  113   0x68d4f  5      OPC=leaq_r64_m16     
  popq %rbx                 #  114   0x68d54  1      OPC=popq_r64_1       
  popq %rbp                 #  115   0x68d55  1      OPC=popq_r64_1       
  popq %r12                 #  116   0x68d56  2      OPC=popq_r64_1       
  popq %r13                 #  117   0x68d58  2      OPC=popq_r64_1       
  popq %r14                 #  118   0x68d5a  2      OPC=popq_r64_1       
  popq %r15                 #  119   0x68d5c  2      OPC=popq_r64_1       
  retq                      #  120   0x68d5e  1      OPC=retq             
.L_68d59:                   #        0x68d5f  0      OPC=<label>          
  movl $0x1, %esi           #  121   0x68d5f  5      OPC=movl_r32_imm32   
  movq %r15, %rdi           #  122   0x68d64  3      OPC=movq_r64_r64     
  callq ._IO_fwide          #  123   0x68d67  5      OPC=callq_label      
  jmpq .L_68c31             #  124   0x68d6c  5      OPC=jmpq_label_1     
.L_68d6b:                   #        0x68d71  0      OPC=<label>          
  cmpq $0x0, 0x18(%rsp)     #  125   0x68d71  6      OPC=cmpq_m64_imm8    
  je .L_68dc7               #  126   0x68d77  2      OPC=je_label         
  subq 0x8(%rsp), %rbp      #  127   0x68d79  5      OPC=subq_r64_m64     
  movq 0x18(%rsp), %rcx     #  128   0x68d7e  5      OPC=movq_r64_m64     
  movl %eax, (%rcx)         #  129   0x68d83  2      OPC=movl_m32_r32     
  movq %rbp, %rax           #  130   0x68d85  3      OPC=movq_r64_r64     
  sarq $0x2, %rax           #  131   0x68d88  4      OPC=sarq_r64_imm8    
  jmpq .L_68ce4             #  132   0x68d8c  5      OPC=jmpq_label_1     
.L_68d8b:                   #        0x68d91  0      OPC=<label>          
  cmpl $0x0, 0x14(%rsp)     #  133   0x68d91  5      OPC=cmpl_m32_imm8    
  movq %rbp, %rax           #  134   0x68d96  3      OPC=movq_r64_r64     
  jle .L_68da1              #  135   0x68d99  2      OPC=jle_label        
  addq $0x4, %rbp           #  136   0x68d9b  4      OPC=addq_r64_imm8    
  movl %r12d, (%rax)        #  137   0x68d9f  3      OPC=movl_m32_r32     
  jmpq .L_68cd8             #  138   0x68da2  5      OPC=jmpq_label_1     
.L_68da1:                   #        0x68da7  0      OPC=<label>          
  je .L_68cd8               #  139   0x68da7  6      OPC=je_label_1       
  movl %r12d, %esi          #  140   0x68dad  3      OPC=movl_r32_r32     
  movq %r15, %rdi           #  141   0x68db0  3      OPC=movq_r64_r64     
  callq ._IO_sputbackc      #  142   0x68db3  5      OPC=callq_label      
  jmpq .L_68cd8             #  143   0x68db8  5      OPC=jmpq_label_1     
  nop                       #  144   0x68dbd  1      OPC=nop              
  nop                       #  145   0x68dbe  1      OPC=nop              
  nop                       #  146   0x68dbf  1      OPC=nop              
  nop                       #  147   0x68dc0  1      OPC=nop              
  nop                       #  148   0x68dc1  1      OPC=nop              
  nop                       #  149   0x68dc2  1      OPC=nop              
  nop                       #  150   0x68dc3  1      OPC=nop              
  nop                       #  151   0x68dc4  1      OPC=nop              
  nop                       #  152   0x68dc5  1      OPC=nop              
.L_68dc0:                   #        0x68dc6  0      OPC=<label>          
  xorl %eax, %eax           #  153   0x68dc6  2      OPC=xorl_r32_r32     
  jmpq .L_68ce4             #  154   0x68dc8  5      OPC=jmpq_label_1     
.L_68dc7:                   #        0x68dcd  0      OPC=<label>          
  movq %rbp, %rax           #  155   0x68dcd  3      OPC=movq_r64_r64     
  subq 0x8(%rsp), %rax      #  156   0x68dd0  5      OPC=subq_r64_m64     
  sarq $0x2, %rax           #  157   0x68dd5  4      OPC=sarq_r64_imm8    
  jmpq .L_68ce4             #  158   0x68dd9  5      OPC=jmpq_label_1     
  nop                       #  159   0x68dde  1      OPC=nop              
  nop                       #  160   0x68ddf  1      OPC=nop              
  nop                       #  161   0x68de0  1      OPC=nop              
  nop                       #  162   0x68de1  1      OPC=nop              
  nop                       #  163   0x68de2  1      OPC=nop              
  nop                       #  164   0x68de3  1      OPC=nop              
  nop                       #  165   0x68de4  1      OPC=nop              
  nop                       #  166   0x68de5  1      OPC=nop              
                                                                          
.size _IO_getwline_info, .-_IO_getwline_info

