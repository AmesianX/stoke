  .text
  .globl _res_hconf_reorder_addrs
  .type _res_hconf_reorder_addrs, @function

#! file-offset 0x104490
#! rip-offset  0x104490
#! capacity    672 bytes

# Text                              #  Line  RIP       Bytes  Opcode                
._res_hconf_reorder_addrs:          #        0x104490  0      OPC=<label>           
  movq 0x2969b1(%rip), %rax         #  1     0x104490  7      OPC=movq_r64_m64      
  testb $0x8, 0x40(%rax)            #  2     0x104497  4      OPC=testb_m8_imm8     
  je .L_1044a3                      #  3     0x10449b  2      OPC=je_label          
  cmpl $0x2, 0x10(%rdi)             #  4     0x10449d  4      OPC=cmpl_m32_imm8     
  je .L_1044a8                      #  5     0x1044a1  2      OPC=je_label          
.L_1044a3:                          #        0x1044a3  0      OPC=<label>           
  retq                              #  6     0x1044a3  1      OPC=retq              
  nop                               #  7     0x1044a4  1      OPC=nop               
  nop                               #  8     0x1044a5  1      OPC=nop               
  nop                               #  9     0x1044a6  1      OPC=nop               
  nop                               #  10    0x1044a7  1      OPC=nop               
.L_1044a8:                          #        0x1044a8  0      OPC=<label>           
  pushq %r15                        #  11    0x1044a8  2      OPC=pushq_r64_1       
  pushq %r14                        #  12    0x1044aa  2      OPC=pushq_r64_1       
  pushq %r13                        #  13    0x1044ac  2      OPC=pushq_r64_1       
  pushq %r12                        #  14    0x1044ae  2      OPC=pushq_r64_1       
  pushq %rbp                        #  15    0x1044b0  1      OPC=pushq_r64_1       
  pushq %rbx                        #  16    0x1044b1  1      OPC=pushq_r64_1       
  movq %rdi, %rbx                   #  17    0x1044b2  3      OPC=movq_r64_r64      
  subq $0x28, %rsp                  #  18    0x1044b5  4      OPC=subq_r64_imm8     
  movl 0x296f09(%rip), %ebp         #  19    0x1044b9  6      OPC=movl_r32_m32      
  testl %ebp, %ebp                  #  20    0x1044bf  2      OPC=testl_r32_r32     
  jle .L_104530                     #  21    0x1044c1  2      OPC=jle_label         
.L_1044c3:                          #        0x1044c3  0      OPC=<label>           
  movq 0x18(%rbx), %rdi             #  22    0x1044c3  4      OPC=movq_r64_m64      
  movq (%rdi), %r9                  #  23    0x1044c7  3      OPC=movq_r64_m64      
  testq %r9, %r9                    #  24    0x1044ca  3      OPC=testq_r64_r64     
  je .L_104510                      #  25    0x1044cd  2      OPC=je_label          
  movq 0x29850a(%rip), %rax         #  26    0x1044cf  7      OPC=movq_r64_m64      
  movq %r9, %r8                     #  27    0x1044d6  3      OPC=movq_r64_r64      
  leaq 0x4(%rax), %r10              #  28    0x1044d9  4      OPC=leaq_r64_m16      
.L_1044dd:                          #        0x1044dd  0      OPC=<label>           
  movl (%r8), %esi                  #  29    0x1044dd  3      OPC=movl_r32_m32      
  movq %r10, %rax                   #  30    0x1044e0  3      OPC=movq_r64_r64      
  xorl %edx, %edx                   #  31    0x1044e3  2      OPC=xorl_r32_r32      
  nop                               #  32    0x1044e5  1      OPC=nop               
  nop                               #  33    0x1044e6  1      OPC=nop               
  nop                               #  34    0x1044e7  1      OPC=nop               
.L_1044e8:                          #        0x1044e8  0      OPC=<label>           
  movl (%rax), %ecx                 #  35    0x1044e8  2      OPC=movl_r32_m32      
  xorl %esi, %ecx                   #  36    0x1044ea  2      OPC=xorl_r32_r32      
  testl %ecx, 0x4(%rax)             #  37    0x1044ec  3      OPC=testl_m32_r32     
  je .L_104520                      #  38    0x1044ef  2      OPC=je_label          
  addl $0x1, %edx                   #  39    0x1044f1  3      OPC=addl_r32_imm8     
  addq $0xc, %rax                   #  40    0x1044f4  4      OPC=addq_r64_imm8     
  cmpl %ebp, %edx                   #  41    0x1044f8  2      OPC=cmpl_r32_r32      
  jl .L_1044e8                      #  42    0x1044fa  2      OPC=jl_label          
  addq $0x8, %rdi                   #  43    0x1044fc  4      OPC=addq_r64_imm8     
  movq (%rdi), %r8                  #  44    0x104500  3      OPC=movq_r64_m64      
  testq %r8, %r8                    #  45    0x104503  3      OPC=testq_r64_r64     
  jne .L_1044dd                     #  46    0x104506  2      OPC=jne_label         
  nop                               #  47    0x104508  1      OPC=nop               
  nop                               #  48    0x104509  1      OPC=nop               
  nop                               #  49    0x10450a  1      OPC=nop               
  nop                               #  50    0x10450b  1      OPC=nop               
  nop                               #  51    0x10450c  1      OPC=nop               
  nop                               #  52    0x10450d  1      OPC=nop               
  nop                               #  53    0x10450e  1      OPC=nop               
  nop                               #  54    0x10450f  1      OPC=nop               
.L_104510:                          #        0x104510  0      OPC=<label>           
  addq $0x28, %rsp                  #  55    0x104510  4      OPC=addq_r64_imm8     
  popq %rbx                         #  56    0x104514  1      OPC=popq_r64_1        
  popq %rbp                         #  57    0x104515  1      OPC=popq_r64_1        
  popq %r12                         #  58    0x104516  2      OPC=popq_r64_1        
  popq %r13                         #  59    0x104518  2      OPC=popq_r64_1        
  popq %r14                         #  60    0x10451a  2      OPC=popq_r64_1        
  popq %r15                         #  61    0x10451c  2      OPC=popq_r64_1        
  retq                              #  62    0x10451e  1      OPC=retq              
  nop                               #  63    0x10451f  1      OPC=nop               
.L_104520:                          #        0x104520  0      OPC=<label>           
  movq %r9, (%rdi)                  #  64    0x104520  3      OPC=movq_m64_r64      
  movq 0x18(%rbx), %rax             #  65    0x104523  4      OPC=movq_r64_m64      
  movq %r8, (%rax)                  #  66    0x104527  3      OPC=movq_m64_r64      
  jmpq .L_104510                    #  67    0x10452a  2      OPC=jmpq_label        
  nop                               #  68    0x10452c  1      OPC=nop               
  nop                               #  69    0x10452d  1      OPC=nop               
  nop                               #  70    0x10452e  1      OPC=nop               
  nop                               #  71    0x10452f  1      OPC=nop               
.L_104530:                          #        0x104530  0      OPC=<label>           
  movq 0x296949(%rip), %rax         #  72    0x104530  7      OPC=movq_r64_m64      
  xorl %edx, %edx                   #  73    0x104537  2      OPC=xorl_r32_r32      
  movl $0x2, %esi                   #  74    0x104539  5      OPC=movl_r32_imm32    
  movl $0x2, %edi                   #  75    0x10453e  5      OPC=movl_r32_imm32    
  movl (%rax), %r14d                #  76    0x104543  3      OPC=movl_r32_m32      
  nop                               #  77    0x104546  1      OPC=nop               
  callq .__socket                   #  78    0x104547  5      OPC=callq_label       
  testl %eax, %eax                  #  79    0x10454c  2      OPC=testl_r32_r32     
  movl %eax, %r15d                  #  80    0x10454e  3      OPC=movl_r32_r32      
  js .L_104510                      #  81    0x104551  2      OPC=js_label          
  movl $0x1, %esi                   #  82    0x104553  5      OPC=movl_r32_imm32    
  xorl %eax, %eax                   #  83    0x104558  2      OPC=xorl_r32_r32      
  cmpl $0x0, 0x29c69f(%rip)         #  84    0x10455a  7      OPC=cmpl_m32_imm8     
  je .L_10456f                      #  85    0x104561  2      OPC=je_label          
  lock                              #  86    0x104563  1      OPC=lock              
  cmpxchgl %esi, 0x29b955(%rip)     #  87    0x104564  7      OPC=cmpxchgl_m32_r32  
  nop                               #  88    0x10456b  1      OPC=nop               
  jne .L_104578                     #  89    0x10456c  2      OPC=jne_label         
  jmpq .L_104592                    #  90    0x10456e  2      OPC=jmpq_label        
.L_10456f:                          #        0x104570  0      OPC=<label>           
  cmpxchgl %esi, 0x29b94a(%rip)     #  91    0x104570  7      OPC=cmpxchgl_m32_r32  
  je .L_104592                      #  92    0x104577  2      OPC=je_label          
.L_104578:                          #        0x104579  0      OPC=<label>           
  leaq 0x29b941(%rip), %rdi         #  93    0x104579  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  94    0x104580  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  95    0x104587  5      OPC=callq_label       
  addq $0x80, %rsp                  #  96    0x10458c  7      OPC=addq_r64_imm32    
.L_104592:                          #        0x104593  0      OPC=<label>           
  movl 0x296e30(%rip), %ebp         #  97    0x104593  6      OPC=movl_r32_m32      
  testl %ebp, %ebp                  #  98    0x104599  2      OPC=testl_r32_r32     
  jle .L_1045f0                     #  99    0x10459b  2      OPC=jle_label         
.L_10459c:                          #        0x10459d  0      OPC=<label>           
  cmpl $0x0, 0x29c65d(%rip)         #  100   0x10459d  7      OPC=cmpl_m32_imm8     
  je .L_1045b0                      #  101   0x1045a4  2      OPC=je_label          
  lock                              #  102   0x1045a6  1      OPC=lock              
  decl 0x29b914(%rip)               #  103   0x1045a7  6      OPC=decl_m32          
  nop                               #  104   0x1045ad  1      OPC=nop               
  jne .L_1045b8                     #  105   0x1045ae  2      OPC=jne_label         
  jmpq .L_1045d2                    #  106   0x1045b0  2      OPC=jmpq_label        
.L_1045b0:                          #        0x1045b2  0      OPC=<label>           
  decl 0x29b90a(%rip)               #  107   0x1045b2  6      OPC=decl_m32          
  je .L_1045d2                      #  108   0x1045b8  2      OPC=je_label          
.L_1045b8:                          #        0x1045ba  0      OPC=<label>           
  leaq 0x29b901(%rip), %rdi         #  109   0x1045ba  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  110   0x1045c1  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  111   0x1045c8  5      OPC=callq_label       
  addq $0x80, %rsp                  #  112   0x1045cd  7      OPC=addq_r64_imm32    
.L_1045d2:                          #        0x1045d4  0      OPC=<label>           
  movl %r15d, %edi                  #  113   0x1045d4  3      OPC=movl_r32_r32      
  callq .__close                    #  114   0x1045d7  5      OPC=callq_label       
  testl %ebp, %ebp                  #  115   0x1045dc  2      OPC=testl_r32_r32     
  je .L_104510                      #  116   0x1045de  6      OPC=je_label_1        
  jmpq .L_1044c3                    #  117   0x1045e4  5      OPC=jmpq_label_1      
  nop                               #  118   0x1045e9  1      OPC=nop               
  nop                               #  119   0x1045ea  1      OPC=nop               
  nop                               #  120   0x1045eb  1      OPC=nop               
  nop                               #  121   0x1045ec  1      OPC=nop               
  nop                               #  122   0x1045ed  1      OPC=nop               
  nop                               #  123   0x1045ee  1      OPC=nop               
  nop                               #  124   0x1045ef  1      OPC=nop               
  nop                               #  125   0x1045f0  1      OPC=nop               
  nop                               #  126   0x1045f1  1      OPC=nop               
.L_1045f0:                          #        0x1045f2  0      OPC=<label>           
  leaq 0x14(%rsp), %rsi             #  127   0x1045f2  5      OPC=leaq_r64_m16      
  leaq 0x18(%rsp), %rdi             #  128   0x1045f7  5      OPC=leaq_r64_m16      
  movl %r15d, %edx                  #  129   0x1045fc  3      OPC=movl_r32_r32      
  callq .__ifreq                    #  130   0x1045ff  5      OPC=callq_label       
  movq 0x18(%rsp), %r12             #  131   0x104604  5      OPC=movq_r64_m64      
  testq %r12, %r12                  #  132   0x104609  3      OPC=testq_r64_r64     
  je .L_104704                      #  133   0x10460c  6      OPC=je_label_1        
  movslq 0x14(%rsp), %rax           #  134   0x104612  5      OPC=movslq_r64_m32    
  leaq (%rax,%rax,2), %rdi          #  135   0x104617  4      OPC=leaq_r64_m16      
  shlq $0x2, %rdi                   #  136   0x10461b  4      OPC=shlq_r64_imm8     
  callq .memalign_plt               #  137   0x10461f  5      OPC=callq_label       
  testq %rax, %rax                  #  138   0x104624  3      OPC=testq_r64_r64     
  movq %rax, 0x2983b4(%rip)         #  139   0x104627  7      OPC=movq_m64_r64      
  je .L_104708                      #  140   0x10462e  6      OPC=je_label_1        
  movq %rax, %rdi                   #  141   0x104634  3      OPC=movq_r64_r64      
  movl 0x14(%rsp), %eax             #  142   0x104637  4      OPC=movl_r32_m32      
  xorl %ebp, %ebp                   #  143   0x10463b  2      OPC=xorl_r32_r32      
  testl %eax, %eax                  #  144   0x10463d  2      OPC=testl_r32_r32     
  jle .L_1046c9                     #  145   0x10463f  6      OPC=jle_label_1       
  xorl %r13d, %r13d                 #  146   0x104645  3      OPC=xorl_r32_r32      
  xorl %ecx, %ecx                   #  147   0x104648  2      OPC=xorl_r32_r32      
  jmpq .L_10465f                    #  148   0x10464a  2      OPC=jmpq_label        
  nop                               #  149   0x10464c  1      OPC=nop               
  nop                               #  150   0x10464d  1      OPC=nop               
  nop                               #  151   0x10464e  1      OPC=nop               
  nop                               #  152   0x10464f  1      OPC=nop               
  nop                               #  153   0x104650  1      OPC=nop               
  nop                               #  154   0x104651  1      OPC=nop               
.L_104650:                          #        0x104652  0      OPC=<label>           
  addq $0x28, %r12                  #  155   0x104652  4      OPC=addq_r64_imm8     
  addl $0x1, %r13d                  #  156   0x104656  4      OPC=addl_r32_imm8     
  cmpl %r13d, 0x14(%rsp)            #  157   0x10465a  5      OPC=cmpl_m32_r32      
  jle .L_1046cb                     #  158   0x10465f  2      OPC=jle_label         
.L_10465f:                          #        0x104661  0      OPC=<label>           
  cmpw $0x2, 0x10(%r12)             #  159   0x104661  7      OPC=cmpw_m16_imm8     
  jne .L_104650                     #  160   0x104668  2      OPC=jne_label         
  leaq (%rcx,%rcx,2), %r8           #  161   0x10466a  4      OPC=leaq_r64_m16      
  movq %r12, %rdx                   #  162   0x10466e  3      OPC=movq_r64_r64      
  movl $0x891b, %esi                #  163   0x104671  5      OPC=movl_r32_imm32    
  movq %rcx, 0x8(%rsp)              #  164   0x104676  5      OPC=movq_m64_r64      
  shlq $0x2, %r8                    #  165   0x10467b  4      OPC=shlq_r64_imm8     
  addq %r8, %rdi                    #  166   0x10467f  3      OPC=addq_r64_r64      
  movq %r8, (%rsp)                  #  167   0x104682  4      OPC=movq_m64_r64      
  movl $0x2, (%rdi)                 #  168   0x104686  6      OPC=movl_m32_imm32    
  movl 0x14(%r12), %eax             #  169   0x10468c  5      OPC=movl_r32_m32      
  movl %eax, 0x4(%rdi)              #  170   0x104691  3      OPC=movl_m32_r32      
  movl %r15d, %edi                  #  171   0x104694  3      OPC=movl_r32_r32      
  xorl %eax, %eax                   #  172   0x104697  2      OPC=xorl_r32_r32      
  callq .ioctl                      #  173   0x104699  5      OPC=callq_label       
  testl %eax, %eax                  #  174   0x10469e  2      OPC=testl_r32_r32     
  movq 0x29833b(%rip), %rdi         #  175   0x1046a0  7      OPC=movq_r64_m64      
  movq (%rsp), %r8                  #  176   0x1046a7  4      OPC=movq_r64_m64      
  movq 0x8(%rsp), %rcx              #  177   0x1046ab  5      OPC=movq_r64_m64      
  js .L_104650                      #  178   0x1046b0  2      OPC=js_label          
  movl 0x14(%r12), %eax             #  179   0x1046b2  5      OPC=movl_r32_m32      
  movq 0x298324(%rip), %rdi         #  180   0x1046b7  7      OPC=movq_r64_m64      
  addl $0x1, %ebp                   #  181   0x1046be  3      OPC=addl_r32_imm8     
  movslq %ebp, %rcx                 #  182   0x1046c1  3      OPC=movslq_r64_r32    
  movl %eax, 0x8(%rdi,%r8,1)        #  183   0x1046c4  5      OPC=movl_m32_r32      
  jmpq .L_104650                    #  184   0x1046c9  2      OPC=jmpq_label        
.L_1046c9:                          #        0x1046cb  0      OPC=<label>           
  xorl %ecx, %ecx                   #  185   0x1046cb  2      OPC=xorl_r32_r32      
.L_1046cb:                          #        0x1046cd  0      OPC=<label>           
  leaq (%rcx,%rcx,2), %rsi          #  186   0x1046cd  4      OPC=leaq_r64_m16      
  shlq $0x2, %rsi                   #  187   0x1046d1  4      OPC=shlq_r64_imm8     
  callq .__tls_get_addr_plt         #  188   0x1046d5  5      OPC=callq_label       
  testq %rax, %rax                  #  189   0x1046da  3      OPC=testq_r64_r64     
  movq %rax, 0x2982fe(%rip)         #  190   0x1046dd  7      OPC=movq_m64_r64      
  je .L_10470c                      #  191   0x1046e4  2      OPC=je_label          
.L_1046e4:                          #        0x1046e6  0      OPC=<label>           
  movq 0x18(%rsp), %rdi             #  192   0x1046e6  5      OPC=movq_r64_m64      
  callq .L_1f8c0                    #  193   0x1046eb  5      OPC=callq_label       
.L_1046ee:                          #        0x1046f0  0      OPC=<label>           
  movq 0x29678b(%rip), %rax         #  194   0x1046f0  7      OPC=movq_r64_m64      
  movl %r14d, (%rax)                #  195   0x1046f7  3      OPC=movl_m32_r32      
  nop                               #  196   0x1046fa  1      OPC=nop               
  movl %ebp, 0x296cc9(%rip)         #  197   0x1046fb  6      OPC=movl_m32_r32      
  jmpq .L_10459c                    #  198   0x104701  5      OPC=jmpq_label_1      
.L_104704:                          #        0x104706  0      OPC=<label>           
  xorl %ebp, %ebp                   #  199   0x104706  2      OPC=xorl_r32_r32      
  jmpq .L_1046ee                    #  200   0x104708  2      OPC=jmpq_label        
.L_104708:                          #        0x10470a  0      OPC=<label>           
  xorl %ebp, %ebp                   #  201   0x10470a  2      OPC=xorl_r32_r32      
  jmpq .L_1046e4                    #  202   0x10470c  2      OPC=jmpq_label        
.L_10470c:                          #        0x10470e  0      OPC=<label>           
  leaq 0x65ebd(%rip), %rcx          #  203   0x10470e  7      OPC=leaq_r64_m16      
  leaq 0x6213f(%rip), %rsi          #  204   0x104715  7      OPC=leaq_r64_m16      
  leaq 0x62144(%rip), %rdi          #  205   0x10471c  7      OPC=leaq_r64_m16      
  movl $0x1e5, %edx                 #  206   0x104723  5      OPC=movl_r32_imm32    
  callq .__assert_fail              #  207   0x104728  5      OPC=callq_label       
  nop                               #  208   0x10472d  1      OPC=nop               
  nop                               #  209   0x10472e  1      OPC=nop               
  nop                               #  210   0x10472f  1      OPC=nop               
  nop                               #  211   0x104730  1      OPC=nop               
  nop                               #  212   0x104731  1      OPC=nop               
                                                                                    
.size _res_hconf_reorder_addrs, .-_res_hconf_reorder_addrs

