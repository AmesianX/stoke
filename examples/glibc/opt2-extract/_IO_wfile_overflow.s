  .text
  .globl _IO_wfile_overflow
  .type _IO_wfile_overflow, @function

#! file-offset 0x6c130
#! rip-offset  0x6c130
#! capacity    624 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
._IO_wfile_overflow:                #        0x6c130  0      OPC=<label>           
  movl (%rdi), %edx                 #  1     0x6c130  2      OPC=movl_r32_m32      
  testb $0x8, %dl                   #  2     0x6c132  3      OPC=testb_r8_imm8     
  je .L_6c150                       #  3     0x6c135  2      OPC=je_label          
  movq 0x32ed42(%rip), %rax         #  4     0x6c137  7      OPC=movq_r64_m64      
  orl $0x20, %edx                   #  5     0x6c13e  3      OPC=orl_r32_imm8      
  movl %edx, (%rdi)                 #  6     0x6c141  2      OPC=movl_m32_r32      
  movl $0x9, (%rax)                 #  7     0x6c143  6      OPC=movl_m32_imm32    
  nop                               #  8     0x6c149  1      OPC=nop               
  movl $0xffffffff, %eax            #  9     0x6c14a  6      OPC=movl_r32_imm32_1  
  retq                              #  10    0x6c150  1      OPC=retq              
.L_6c150:                           #        0x6c151  0      OPC=<label>           
  pushq %rbp                        #  11    0x6c151  1      OPC=pushq_r64_1       
  pushq %rbx                        #  12    0x6c152  1      OPC=pushq_r64_1       
  movl %esi, %ebp                   #  13    0x6c153  2      OPC=movl_r32_r32      
  movq %rdi, %rbx                   #  14    0x6c155  3      OPC=movq_r64_r64      
  subq $0x8, %rsp                   #  15    0x6c158  4      OPC=subq_r64_imm8     
  testb $0x8, %dh                   #  16    0x6c15c  3      OPC=testb_rh_imm8     
  jne .L_6c1cf                      #  17    0x6c15f  2      OPC=jne_label         
  movq 0xa0(%rdi), %rcx             #  18    0x6c161  7      OPC=movq_r64_m64      
  cmpq $0x0, 0x18(%rcx)             #  19    0x6c168  5      OPC=cmpq_m64_imm8     
  je .L_6c330                       #  20    0x6c16d  6      OPC=je_label_1        
  movq (%rcx), %rax                 #  21    0x6c173  3      OPC=movq_r64_m64      
  movq 0x38(%rcx), %rsi             #  22    0x6c176  4      OPC=movq_r64_m64      
  cmpq %rsi, %rax                   #  23    0x6c17a  3      OPC=cmpq_r64_r64      
  je .L_6c310                       #  24    0x6c17d  6      OPC=je_label_1        
.L_6c182:                           #        0x6c183  0      OPC=<label>           
  movq %rsi, 0x28(%rcx)             #  25    0x6c183  4      OPC=movq_m64_r64      
  movq 0x8(%rcx), %rsi              #  26    0x6c187  4      OPC=movq_r64_m64      
  movq %rax, 0x20(%rcx)             #  27    0x6c18b  4      OPC=movq_m64_r64      
  movq %rax, 0x18(%rcx)             #  28    0x6c18f  4      OPC=movq_m64_r64      
  movq %rsi, (%rcx)                 #  29    0x6c193  3      OPC=movq_m64_r64      
  movq %rsi, 0x10(%rcx)             #  30    0x6c196  4      OPC=movq_m64_r64      
  movq 0x8(%rbx), %rsi              #  31    0x6c19a  4      OPC=movq_r64_m64      
  movq %rsi, 0x28(%rbx)             #  32    0x6c19e  4      OPC=movq_m64_r64      
  movq %rsi, 0x20(%rbx)             #  33    0x6c1a2  4      OPC=movq_m64_r64      
  movq 0x40(%rbx), %rsi             #  34    0x6c1a6  4      OPC=movq_r64_m64      
  movq %rsi, 0x30(%rbx)             #  35    0x6c1aa  4      OPC=movq_m64_r64      
  movq 0x10(%rbx), %rsi             #  36    0x6c1ae  4      OPC=movq_r64_m64      
  movq %rsi, 0x8(%rbx)              #  37    0x6c1b2  4      OPC=movq_m64_r64      
  movq %rsi, 0x18(%rbx)             #  38    0x6c1b6  4      OPC=movq_m64_r64      
  movl %edx, %esi                   #  39    0x6c1ba  2      OPC=movl_r32_r32      
  orl $0x800, %esi                  #  40    0x6c1bc  6      OPC=orl_r32_imm32     
  andl $0x202, %edx                 #  41    0x6c1c2  6      OPC=andl_r32_imm32    
  movl %esi, (%rbx)                 #  42    0x6c1c8  2      OPC=movl_m32_r32      
  je .L_6c1cf                       #  43    0x6c1ca  2      OPC=je_label          
  movq %rax, 0x28(%rcx)             #  44    0x6c1cc  4      OPC=movq_m64_r64      
.L_6c1cf:                           #        0x6c1d0  0      OPC=<label>           
  cmpl $0xffffffff, %ebp            #  45    0x6c1d0  6      OPC=cmpl_r32_imm32    
  nop                               #  46    0x6c1d6  1      OPC=nop               
  nop                               #  47    0x6c1d7  1      OPC=nop               
  nop                               #  48    0x6c1d8  1      OPC=nop               
  je .L_6c250                       #  49    0x6c1d9  2      OPC=je_label          
  movq 0xa0(%rbx), %rax             #  50    0x6c1db  7      OPC=movq_r64_m64      
  movq 0x20(%rax), %rcx             #  51    0x6c1e2  4      OPC=movq_r64_m64      
  cmpq 0x38(%rax), %rcx             #  52    0x6c1e6  4      OPC=cmpq_r64_m64      
  je .L_6c288                       #  53    0x6c1ea  6      OPC=je_label_1        
.L_6c1e9:                           #        0x6c1f0  0      OPC=<label>           
  leaq 0x4(%rcx), %rdx              #  54    0x6c1f0  4      OPC=leaq_r64_m16      
  movq %rdx, 0x20(%rax)             #  55    0x6c1f4  4      OPC=movq_m64_r64      
  movl %ebp, (%rcx)                 #  56    0x6c1f8  2      OPC=movl_m32_r32      
  movl (%rbx), %ecx                 #  57    0x6c1fa  2      OPC=movl_r32_m32      
  testb $0x2, %cl                   #  58    0x6c1fc  3      OPC=testb_r8_imm8     
  je .L_6c238                       #  59    0x6c1ff  2      OPC=je_label          
.L_6c1fa:                           #        0x6c201  0      OPC=<label>           
  movl 0xc0(%rbx), %ecx             #  60    0x6c201  6      OPC=movl_r32_m32      
  testl %ecx, %ecx                  #  61    0x6c207  2      OPC=testl_r32_r32     
  jle .L_6c2d0                      #  62    0x6c209  6      OPC=jle_label_1       
  movq 0x18(%rax), %rsi             #  63    0x6c20f  4      OPC=movq_r64_m64      
  movq %rbx, %rdi                   #  64    0x6c213  3      OPC=movq_r64_r64      
  subq %rsi, %rdx                   #  65    0x6c216  3      OPC=subq_r64_r64      
  sarq $0x2, %rdx                   #  66    0x6c219  4      OPC=sarq_r64_imm8     
  callq ._IO_wdo_write              #  67    0x6c21d  5      OPC=callq_label       
  cmpl $0xffffffff, %eax            #  68    0x6c222  6      OPC=cmpl_r32_imm32    
  nop                               #  69    0x6c228  1      OPC=nop               
  nop                               #  70    0x6c229  1      OPC=nop               
  nop                               #  71    0x6c22a  1      OPC=nop               
  sete %al                          #  72    0x6c22b  3      OPC=sete_r8           
.L_6c221:                           #        0x6c22e  0      OPC=<label>           
  testb %al, %al                    #  73    0x6c22e  2      OPC=testb_r8_r8       
  je .L_6c242                       #  74    0x6c230  2      OPC=je_label          
.L_6c225:                           #        0x6c232  0      OPC=<label>           
  addq $0x8, %rsp                   #  75    0x6c232  4      OPC=addq_r64_imm8     
  movl $0xffffffff, %eax            #  76    0x6c236  6      OPC=movl_r32_imm32_1  
  popq %rbx                         #  77    0x6c23c  1      OPC=popq_r64_1        
  popq %rbp                         #  78    0x6c23d  1      OPC=popq_r64_1        
  retq                              #  79    0x6c23e  1      OPC=retq              
  nop                               #  80    0x6c23f  1      OPC=nop               
  nop                               #  81    0x6c240  1      OPC=nop               
  nop                               #  82    0x6c241  1      OPC=nop               
  nop                               #  83    0x6c242  1      OPC=nop               
  nop                               #  84    0x6c243  1      OPC=nop               
  nop                               #  85    0x6c244  1      OPC=nop               
  nop                               #  86    0x6c245  1      OPC=nop               
.L_6c238:                           #        0x6c246  0      OPC=<label>           
  cmpl $0xa, %ebp                   #  87    0x6c246  3      OPC=cmpl_r32_imm8     
  jne .L_6c242                      #  88    0x6c249  2      OPC=jne_label         
  andb $0x2, %ch                    #  89    0x6c24b  3      OPC=andb_rh_imm8      
  jne .L_6c1fa                      #  90    0x6c24e  2      OPC=jne_label         
.L_6c242:                           #        0x6c250  0      OPC=<label>           
  addq $0x8, %rsp                   #  91    0x6c250  4      OPC=addq_r64_imm8     
  movl %ebp, %eax                   #  92    0x6c254  2      OPC=movl_r32_r32      
  popq %rbx                         #  93    0x6c256  1      OPC=popq_r64_1        
  popq %rbp                         #  94    0x6c257  1      OPC=popq_r64_1        
  retq                              #  95    0x6c258  1      OPC=retq              
  nop                               #  96    0x6c259  1      OPC=nop               
  nop                               #  97    0x6c25a  1      OPC=nop               
  nop                               #  98    0x6c25b  1      OPC=nop               
  nop                               #  99    0x6c25c  1      OPC=nop               
  nop                               #  100   0x6c25d  1      OPC=nop               
.L_6c250:                           #        0x6c25e  0      OPC=<label>           
  movl 0xc0(%rbx), %edi             #  101   0x6c25e  6      OPC=movl_r32_m32      
  testl %edi, %edi                  #  102   0x6c264  2      OPC=testl_r32_r32     
  jle .L_6c2f0                      #  103   0x6c266  6      OPC=jle_label_1       
  movq 0xa0(%rbx), %rax             #  104   0x6c26c  7      OPC=movq_r64_m64      
  movq %rbx, %rdi                   #  105   0x6c273  3      OPC=movq_r64_r64      
  movq 0x18(%rax), %rsi             #  106   0x6c276  4      OPC=movq_r64_m64      
  movq 0x20(%rax), %rdx             #  107   0x6c27a  4      OPC=movq_r64_m64      
  addq $0x8, %rsp                   #  108   0x6c27e  4      OPC=addq_r64_imm8     
  popq %rbx                         #  109   0x6c282  1      OPC=popq_r64_1        
  popq %rbp                         #  110   0x6c283  1      OPC=popq_r64_1        
  subq %rsi, %rdx                   #  111   0x6c284  3      OPC=subq_r64_r64      
  sarq $0x2, %rdx                   #  112   0x6c287  4      OPC=sarq_r64_imm8     
  jmpq ._IO_wdo_write               #  113   0x6c28b  5      OPC=jmpq_label_1      
  nop                               #  114   0x6c290  1      OPC=nop               
  nop                               #  115   0x6c291  1      OPC=nop               
  nop                               #  116   0x6c292  1      OPC=nop               
  nop                               #  117   0x6c293  1      OPC=nop               
  nop                               #  118   0x6c294  1      OPC=nop               
  nop                               #  119   0x6c295  1      OPC=nop               
.L_6c288:                           #        0x6c296  0      OPC=<label>           
  movl 0xc0(%rbx), %esi             #  120   0x6c296  6      OPC=movl_r32_m32      
  testl %esi, %esi                  #  121   0x6c29c  2      OPC=testl_r32_r32     
  jle .L_6c35d                      #  122   0x6c29e  6      OPC=jle_label_1       
  movq 0x18(%rax), %rsi             #  123   0x6c2a4  4      OPC=movq_r64_m64      
  movq %rbx, %rdi                   #  124   0x6c2a8  3      OPC=movq_r64_r64      
  subq %rsi, %rcx                   #  125   0x6c2ab  3      OPC=subq_r64_r64      
  movq %rcx, %rdx                   #  126   0x6c2ae  3      OPC=movq_r64_r64      
  sarq $0x2, %rdx                   #  127   0x6c2b1  4      OPC=sarq_r64_imm8     
  callq ._IO_wdo_write              #  128   0x6c2b5  5      OPC=callq_label       
  cmpl $0xffffffff, %eax            #  129   0x6c2ba  6      OPC=cmpl_r32_imm32    
  nop                               #  130   0x6c2c0  1      OPC=nop               
  nop                               #  131   0x6c2c1  1      OPC=nop               
  nop                               #  132   0x6c2c2  1      OPC=nop               
  sete %al                          #  133   0x6c2c3  3      OPC=sete_r8           
.L_6c2b2:                           #        0x6c2c6  0      OPC=<label>           
  testb %al, %al                    #  134   0x6c2c6  2      OPC=testb_r8_r8       
  jne .L_6c225                      #  135   0x6c2c8  6      OPC=jne_label_1       
  movq 0xa0(%rbx), %rax             #  136   0x6c2ce  7      OPC=movq_r64_m64      
  movq 0x20(%rax), %rcx             #  137   0x6c2d5  4      OPC=movq_r64_m64      
  jmpq .L_6c1e9                     #  138   0x6c2d9  5      OPC=jmpq_label_1      
  nop                               #  139   0x6c2de  1      OPC=nop               
  nop                               #  140   0x6c2df  1      OPC=nop               
  nop                               #  141   0x6c2e0  1      OPC=nop               
  nop                               #  142   0x6c2e1  1      OPC=nop               
  nop                               #  143   0x6c2e2  1      OPC=nop               
  nop                               #  144   0x6c2e3  1      OPC=nop               
.L_6c2d0:                           #        0x6c2e4  0      OPC=<label>           
  movq 0x20(%rbx), %rsi             #  145   0x6c2e4  4      OPC=movq_r64_m64      
  movq 0x28(%rbx), %rdx             #  146   0x6c2e8  4      OPC=movq_r64_m64      
  movq %rbx, %rdi                   #  147   0x6c2ec  3      OPC=movq_r64_r64      
  subq %rsi, %rdx                   #  148   0x6c2ef  3      OPC=subq_r64_r64      
  callq ._IO_do_write__GLIBC_2_2_5  #  149   0x6c2f2  5      OPC=callq_label       
  cmpl $0xffffffff, %eax            #  150   0x6c2f7  6      OPC=cmpl_r32_imm32    
  nop                               #  151   0x6c2fd  1      OPC=nop               
  nop                               #  152   0x6c2fe  1      OPC=nop               
  nop                               #  153   0x6c2ff  1      OPC=nop               
  sete %al                          #  154   0x6c300  3      OPC=sete_r8           
  jmpq .L_6c221                     #  155   0x6c303  5      OPC=jmpq_label_1      
  xchgw %ax, %ax                    #  156   0x6c308  2      OPC=xchgw_ax_r16      
.L_6c2f0:                           #        0x6c30a  0      OPC=<label>           
  movq 0x20(%rbx), %rsi             #  157   0x6c30a  4      OPC=movq_r64_m64      
  movq 0x28(%rbx), %rdx             #  158   0x6c30e  4      OPC=movq_r64_m64      
  addq $0x8, %rsp                   #  159   0x6c312  4      OPC=addq_r64_imm8     
  movq %rbx, %rdi                   #  160   0x6c316  3      OPC=movq_r64_r64      
  popq %rbx                         #  161   0x6c319  1      OPC=popq_r64_1        
  popq %rbp                         #  162   0x6c31a  1      OPC=popq_r64_1        
  subq %rsi, %rdx                   #  163   0x6c31b  3      OPC=subq_r64_r64      
  jmpq ._IO_do_write__GLIBC_2_2_5   #  164   0x6c31e  5      OPC=jmpq_label_1      
  nop                               #  165   0x6c323  1      OPC=nop               
  nop                               #  166   0x6c324  1      OPC=nop               
  nop                               #  167   0x6c325  1      OPC=nop               
  nop                               #  168   0x6c326  1      OPC=nop               
  nop                               #  169   0x6c327  1      OPC=nop               
  nop                               #  170   0x6c328  1      OPC=nop               
  nop                               #  171   0x6c329  1      OPC=nop               
.L_6c310:                           #        0x6c32a  0      OPC=<label>           
  movq 0x38(%rdi), %rax             #  172   0x6c32a  4      OPC=movq_r64_m64      
  movq 0x38(%rcx), %rsi             #  173   0x6c32e  4      OPC=movq_r64_m64      
  movq %rax, 0x8(%rdi)              #  174   0x6c332  4      OPC=movq_m64_r64      
  movq %rax, 0x10(%rdi)             #  175   0x6c336  4      OPC=movq_m64_r64      
  movq 0x30(%rcx), %rax             #  176   0x6c33a  4      OPC=movq_r64_m64      
  movq %rax, (%rcx)                 #  177   0x6c33e  3      OPC=movq_m64_r64      
  movq %rax, 0x8(%rcx)              #  178   0x6c341  4      OPC=movq_m64_r64      
  jmpq .L_6c182                     #  179   0x6c345  5      OPC=jmpq_label_1      
.L_6c330:                           #        0x6c34a  0      OPC=<label>           
  callq ._IO_wdoallocbuf            #  180   0x6c34a  5      OPC=callq_label       
  movq 0xa0(%rbx), %rcx             #  181   0x6c34f  7      OPC=movq_r64_m64      
  cmpq $0x0, 0x20(%rbx)             #  182   0x6c356  5      OPC=cmpq_m64_imm8     
  movq 0x30(%rcx), %rax             #  183   0x6c35b  4      OPC=movq_r64_m64      
  movq %rax, 0x10(%rcx)             #  184   0x6c35f  4      OPC=movq_m64_r64      
  movq %rax, (%rcx)                 #  185   0x6c363  3      OPC=movq_m64_r64      
  movq %rax, 0x8(%rcx)              #  186   0x6c366  4      OPC=movq_m64_r64      
  je .L_6c37b                       #  187   0x6c36a  2      OPC=je_label          
.L_6c352:                           #        0x6c36c  0      OPC=<label>           
  movq 0x38(%rcx), %rsi             #  188   0x6c36c  4      OPC=movq_r64_m64      
  movl (%rbx), %edx                 #  189   0x6c370  2      OPC=movl_r32_m32      
  jmpq .L_6c182                     #  190   0x6c372  5      OPC=jmpq_label_1      
.L_6c35d:                           #        0x6c377  0      OPC=<label>           
  movq 0x20(%rbx), %rsi             #  191   0x6c377  4      OPC=movq_r64_m64      
  movq 0x28(%rbx), %rdx             #  192   0x6c37b  4      OPC=movq_r64_m64      
  movq %rbx, %rdi                   #  193   0x6c37f  3      OPC=movq_r64_r64      
  subq %rsi, %rdx                   #  194   0x6c382  3      OPC=subq_r64_r64      
  callq ._IO_do_write__GLIBC_2_2_5  #  195   0x6c385  5      OPC=callq_label       
  cmpl $0xffffffff, %eax            #  196   0x6c38a  6      OPC=cmpl_r32_imm32    
  nop                               #  197   0x6c390  1      OPC=nop               
  nop                               #  198   0x6c391  1      OPC=nop               
  nop                               #  199   0x6c392  1      OPC=nop               
  sete %al                          #  200   0x6c393  3      OPC=sete_r8           
  jmpq .L_6c2b2                     #  201   0x6c396  5      OPC=jmpq_label_1      
.L_6c37b:                           #        0x6c39b  0      OPC=<label>           
  movq %rbx, %rdi                   #  202   0x6c39b  3      OPC=movq_r64_r64      
  callq ._IO_doallocbuf             #  203   0x6c39e  5      OPC=callq_label       
  movq 0x38(%rbx), %rax             #  204   0x6c3a3  4      OPC=movq_r64_m64      
  movq 0xa0(%rbx), %rcx             #  205   0x6c3a7  7      OPC=movq_r64_m64      
  movq %rax, 0x8(%rbx)              #  206   0x6c3ae  4      OPC=movq_m64_r64      
  movq %rax, 0x10(%rbx)             #  207   0x6c3b2  4      OPC=movq_m64_r64      
  movq (%rcx), %rax                 #  208   0x6c3b6  3      OPC=movq_r64_m64      
  jmpq .L_6c352                     #  209   0x6c3b9  2      OPC=jmpq_label        
  nop                               #  210   0x6c3bb  1      OPC=nop               
  nop                               #  211   0x6c3bc  1      OPC=nop               
  nop                               #  212   0x6c3bd  1      OPC=nop               
  nop                               #  213   0x6c3be  1      OPC=nop               
  nop                               #  214   0x6c3bf  1      OPC=nop               
                                                                                   
.size _IO_wfile_overflow, .-_IO_wfile_overflow

