  .text
  .globl argp_args_usage
  .type argp_args_usage, @function

#! file-offset 0xe6654
#! rip-offset  0xe6654
#! capacity    455 bytes

# Text                            #  Line  RIP      Bytes  Opcode              
.argp_args_usage:                 #        0xe6654  0      OPC=<label>         
  pushq %r15                      #  1     0xe6654  2      OPC=pushq_r64_1     
  pushq %r14                      #  2     0xe6656  2      OPC=pushq_r64_1     
  pushq %r13                      #  3     0xe6658  2      OPC=pushq_r64_1     
  pushq %r12                      #  4     0xe665a  2      OPC=pushq_r64_1     
  pushq %rbp                      #  5     0xe665c  1      OPC=pushq_r64_1     
  pushq %rbx                      #  6     0xe665d  1      OPC=pushq_r64_1     
  subq $0x38, %rsp                #  7     0xe665e  4      OPC=subq_r64_imm8   
  movq %rdi, %r13                 #  8     0xe6662  3      OPC=movq_r64_r64    
  movq %rsi, %r15                 #  9     0xe6665  3      OPC=movq_r64_r64    
  movq %rsi, 0x8(%rsp)            #  10    0xe6668  5      OPC=movq_m64_r64    
  movq %rdx, %r14                 #  11    0xe666d  3      OPC=movq_r64_r64    
  movl %ecx, %ebp                 #  12    0xe6670  2      OPC=movl_r32_r32    
  movq %r8, %r12                  #  13    0xe6672  3      OPC=movq_r64_r64    
  movq (%rdx), %rax               #  14    0xe6675  3      OPC=movq_r64_m64    
  movq %rax, 0x20(%rsp)           #  15    0xe6678  5      OPC=movq_m64_r64    
  movq 0x20(%rdi), %rbx           #  16    0xe667d  4      OPC=movq_r64_m64    
  movq 0x10(%rdi), %rsi           #  17    0xe6681  4      OPC=movq_r64_m64    
  movq 0x30(%rdi), %rdi           #  18    0xe6685  4      OPC=movq_r64_m64    
  movl $0x5, %edx                 #  19    0xe6689  5      OPC=movl_r32_imm32  
  callq .__dcgettext              #  20    0xe668e  5      OPC=callq_label     
  movq %rax, 0x28(%rsp)           #  21    0xe6693  5      OPC=movq_m64_r64    
  movq %r15, %rcx                 #  22    0xe6698  3      OPC=movq_r64_r64    
  movq %r13, %rdx                 #  23    0xe669b  3      OPC=movq_r64_r64    
  movl $0x2000006, %esi           #  24    0xe669e  5      OPC=movl_r32_imm32  
  movq %rax, %rdi                 #  25    0xe66a3  3      OPC=movq_r64_r64    
  callq .filter_doc               #  26    0xe66a6  5      OPC=callq_label     
  movq %rax, 0x18(%rsp)           #  27    0xe66ab  5      OPC=movq_m64_r64    
  testq %rax, %rax                #  28    0xe66b0  3      OPC=testq_r64_r64   
  je .L_e67ef                     #  29    0xe66b3  6      OPC=je_label_1      
  movl $0xa, %esi                 #  30    0xe66b9  5      OPC=movl_r32_imm32  
  movq %rax, %rdi                 #  31    0xe66be  3      OPC=movq_r64_r64    
  callq .strchrnul                #  32    0xe66c1  5      OPC=callq_label     
  movq %rax, (%rsp)               #  33    0xe66c6  4      OPC=movq_m64_r64    
  cmpb $0x0, (%rax)               #  34    0xe66ca  3      OPC=cmpb_m8_imm8    
  je .L_e671e                     #  35    0xe66cd  2      OPC=je_label        
  movq 0x20(%rsp), %rax           #  36    0xe66cf  5      OPC=movq_r64_m64    
  movsbl (%rax), %eax             #  37    0xe66d4  3      OPC=movsbl_r32_m8   
  movl %eax, 0x14(%rsp)           #  38    0xe66d7  4      OPC=movl_m32_r32    
  testl %eax, %eax                #  39    0xe66db  2      OPC=testl_r32_r32   
  jle .L_e670b                    #  40    0xe66dd  2      OPC=jle_label       
  movl $0x0, %r13d                #  41    0xe66df  6      OPC=movl_r32_imm32  
.L_e66e5:                         #        0xe66e5  0      OPC=<label>         
  movq (%rsp), %r15               #  42    0xe66e5  4      OPC=movq_r64_m64    
  addq $0x1, %r15                 #  43    0xe66e9  4      OPC=addq_r64_imm8   
  movl $0xa, %esi                 #  44    0xe66ed  5      OPC=movl_r32_imm32  
  movq %r15, %rdi                 #  45    0xe66f2  3      OPC=movq_r64_r64    
  callq .strchrnul                #  46    0xe66f5  5      OPC=callq_label     
  movq %rax, (%rsp)               #  47    0xe66fa  4      OPC=movq_m64_r64    
  addl $0x1, %r13d                #  48    0xe66fe  4      OPC=addl_r32_imm8   
  cmpl 0x14(%rsp), %r13d          #  49    0xe6702  5      OPC=cmpl_r32_m32    
  jne .L_e66e5                    #  50    0xe6707  2      OPC=jne_label       
  jmpq .L_e6710                   #  51    0xe6709  2      OPC=jmpq_label      
.L_e670b:                         #        0xe670b  0      OPC=<label>         
  movq 0x18(%rsp), %r15           #  52    0xe670b  5      OPC=movq_r64_m64    
.L_e6710:                         #        0xe6710  0      OPC=<label>         
  addq $0x1, (%r14)               #  53    0xe6710  4      OPC=addq_m64_imm8   
  movl $0x1, 0x14(%rsp)           #  54    0xe6714  8      OPC=movl_m32_imm32  
  jmpq .L_e672b                   #  55    0xe671c  2      OPC=jmpq_label      
.L_e671e:                         #        0xe671e  0      OPC=<label>         
  movq 0x18(%rsp), %r15           #  56    0xe671e  5      OPC=movq_r64_m64    
  movl $0x0, 0x14(%rsp)           #  57    0xe6723  8      OPC=movl_m32_imm32  
.L_e672b:                         #        0xe672b  0      OPC=<label>         
  movq (%rsp), %r13               #  58    0xe672b  4      OPC=movq_r64_m64    
  leaq 0x1(%r13), %rsi            #  59    0xe672f  4      OPC=leaq_r64_m16    
  subq %r15, %rsi                 #  60    0xe6733  3      OPC=subq_r64_r64    
  movq %r12, %rdi                 #  61    0xe6736  3      OPC=movq_r64_r64    
  callq .space                    #  62    0xe6739  5      OPC=callq_label     
  subq %r15, %r13                 #  63    0xe673e  3      OPC=subq_r64_r64    
  movq %r13, %rax                 #  64    0xe6741  3      OPC=movq_r64_r64    
  addq 0x38(%r12), %rax           #  65    0xe6744  5      OPC=addq_r64_m64    
  cmpq %rax, 0x40(%r12)           #  66    0xe6749  5      OPC=cmpq_m64_r64    
  jae .L_e675f                    #  67    0xe674e  2      OPC=jae_label       
  movq %r13, %rsi                 #  68    0xe6750  3      OPC=movq_r64_r64    
  movq %r12, %rdi                 #  69    0xe6753  3      OPC=movq_r64_r64    
  callq .__argp_fmtstream_ensure  #  70    0xe6756  5      OPC=callq_label     
  testl %eax, %eax                #  71    0xe675b  2      OPC=testl_r32_r32   
  je .L_e6774                     #  72    0xe675d  2      OPC=je_label        
.L_e675f:                         #        0xe675f  0      OPC=<label>         
  movq 0x38(%r12), %rdi           #  73    0xe675f  5      OPC=movq_r64_m64    
  movq %r13, %rdx                 #  74    0xe6764  3      OPC=movq_r64_r64    
  movq %r15, %rsi                 #  75    0xe6767  3      OPC=movq_r64_r64    
  callq .__GI_memcpy              #  76    0xe676a  5      OPC=callq_label     
  addq %r13, 0x38(%r12)           #  77    0xe676f  5      OPC=addq_m64_r64    
.L_e6774:                         #        0xe6774  0      OPC=<label>         
  movq 0x18(%rsp), %rcx           #  78    0xe6774  5      OPC=movq_r64_m64    
  cmpq %rcx, 0x28(%rsp)           #  79    0xe6779  5      OPC=cmpq_m64_r64    
  je .L_e6788                     #  80    0xe677e  2      OPC=je_label        
  movq %rcx, %rdi                 #  81    0xe6780  3      OPC=movq_r64_r64    
  callq .L_1f8d0                  #  82    0xe6783  5      OPC=callq_label     
.L_e6788:                         #        0xe6788  0      OPC=<label>         
  testq %rbx, %rbx                #  83    0xe6788  3      OPC=testq_r64_r64   
  je .L_e67bd                     #  84    0xe678b  2      OPC=je_label        
.L_e678d:                         #        0xe678d  0      OPC=<label>         
  movq (%rbx), %rdi               #  85    0xe678d  3      OPC=movq_r64_m64    
  testq %rdi, %rdi                #  86    0xe6790  3      OPC=testq_r64_r64   
  je .L_e67bd                     #  87    0xe6793  2      OPC=je_label        
.L_e6795:                         #        0xe6795  0      OPC=<label>         
  addq $0x20, %rbx                #  88    0xe6795  4      OPC=addq_r64_imm8   
  movq %r12, %r8                  #  89    0xe6799  3      OPC=movq_r64_r64    
  movl %ebp, %ecx                 #  90    0xe679c  2      OPC=movl_r32_r32    
  movq %r14, %rdx                 #  91    0xe679e  3      OPC=movq_r64_r64    
  movq 0x8(%rsp), %rsi            #  92    0xe67a1  5      OPC=movq_r64_m64    
  callq .argp_args_usage          #  93    0xe67a6  5      OPC=callq_label     
  testl %eax, %eax                #  94    0xe67ab  2      OPC=testl_r32_r32   
  sete %bpl                       #  95    0xe67ad  4      OPC=sete_r8         
  movzbl %bpl, %ebp               #  96    0xe67b1  4      OPC=movzbl_r32_r8   
  movq (%rbx), %rdi               #  97    0xe67b5  3      OPC=movq_r64_m64    
  testq %rdi, %rdi                #  98    0xe67b8  3      OPC=testq_r64_r64   
  jne .L_e6795                    #  99    0xe67bb  2      OPC=jne_label       
.L_e67bd:                         #        0xe67bd  0      OPC=<label>         
  testl %ebp, %ebp                #  100   0xe67bd  2      OPC=testl_r32_r32   
  je .L_e6804                     #  101   0xe67bf  2      OPC=je_label        
  cmpl $0x0, 0x14(%rsp)           #  102   0xe67c1  5      OPC=cmpl_m32_imm8   
  je .L_e6804                     #  103   0xe67c6  2      OPC=je_label        
  movq (%rsp), %rax               #  104   0xe67c8  4      OPC=movq_r64_m64    
  cmpb $0x0, (%rax)               #  105   0xe67cc  3      OPC=cmpb_m8_imm8    
  je .L_e67e0                     #  106   0xe67cf  2      OPC=je_label        
  movq 0x20(%rsp), %rax           #  107   0xe67d1  5      OPC=movq_r64_m64    
  addb $0x1, (%rax)               #  108   0xe67d6  3      OPC=addb_m8_imm8    
  movl $0x0, %ebp                 #  109   0xe67d9  5      OPC=movl_r32_imm32  
  jmpq .L_e6804                   #  110   0xe67de  2      OPC=jmpq_label      
.L_e67e0:                         #        0xe67e0  0      OPC=<label>         
  movq 0x20(%rsp), %rax           #  111   0xe67e0  5      OPC=movq_r64_m64    
  cmpb $0x0, (%rax)               #  112   0xe67e5  3      OPC=cmpb_m8_imm8    
  jle .L_e6804                    #  113   0xe67e8  2      OPC=jle_label       
  movb $0x0, (%rax)               #  114   0xe67ea  3      OPC=movb_m8_imm8    
  jmpq .L_e6804                   #  115   0xe67ed  2      OPC=jmpq_label      
.L_e67ef:                         #        0xe67ef  0      OPC=<label>         
  movq $0x0, (%rsp)               #  116   0xe67ef  8      OPC=movq_m64_imm32  
  movl $0x0, 0x14(%rsp)           #  117   0xe67f7  8      OPC=movl_m32_imm32  
  testq %rbx, %rbx                #  118   0xe67ff  3      OPC=testq_r64_r64   
  jne .L_e678d                    #  119   0xe6802  2      OPC=jne_label       
.L_e6804:                         #        0xe6804  0      OPC=<label>         
  testl %ebp, %ebp                #  120   0xe6804  2      OPC=testl_r32_r32   
  sete %al                        #  121   0xe6806  3      OPC=sete_r8         
  movzbl %al, %eax                #  122   0xe6809  3      OPC=movzbl_r32_r8   
  addq $0x38, %rsp                #  123   0xe680c  4      OPC=addq_r64_imm8   
  popq %rbx                       #  124   0xe6810  1      OPC=popq_r64_1      
  popq %rbp                       #  125   0xe6811  1      OPC=popq_r64_1      
  popq %r12                       #  126   0xe6812  2      OPC=popq_r64_1      
  popq %r13                       #  127   0xe6814  2      OPC=popq_r64_1      
  popq %r14                       #  128   0xe6816  2      OPC=popq_r64_1      
  popq %r15                       #  129   0xe6818  2      OPC=popq_r64_1      
  retq                            #  130   0xe681a  1      OPC=retq            
                                                                               
.size argp_args_usage, .-argp_args_usage

