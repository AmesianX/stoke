  .text
  .globl _svcauth_unix
  .type _svcauth_unix, @function

#! file-offset 0xff2ba
#! rip-offset  0xff2ba
#! capacity    451 bytes

# Text                                   #  Line  RIP      Bytes  Opcode              
._svcauth_unix:                          #        0xff2ba  0      OPC=<label>         
  pushq %r15                             #  1     0xff2ba  2      OPC=pushq_r64_1     
  pushq %r14                             #  2     0xff2bc  2      OPC=pushq_r64_1     
  pushq %r13                             #  3     0xff2be  2      OPC=pushq_r64_1     
  pushq %r12                             #  4     0xff2c0  2      OPC=pushq_r64_1     
  pushq %rbp                             #  5     0xff2c2  1      OPC=pushq_r64_1     
  pushq %rbx                             #  6     0xff2c3  1      OPC=pushq_r64_1     
  subq $0x48, %rsp                       #  7     0xff2c4  4      OPC=subq_r64_imm8   
  movq %rdi, %r14                        #  8     0xff2c8  3      OPC=movq_r64_r64    
  movq %rsi, %r12                        #  9     0xff2cb  3      OPC=movq_r64_r64    
  movq 0x30(%rdi), %rbx                  #  10    0xff2ce  4      OPC=movq_r64_m64    
  leaq 0x28(%rbx), %rax                  #  11    0xff2d2  4      OPC=leaq_r64_m16    
  movq %rax, 0x8(%rbx)                   #  12    0xff2d6  4      OPC=movq_m64_r64    
  leaq 0x128(%rbx), %rax                 #  13    0xff2da  7      OPC=leaq_r64_m16    
  movq %rax, 0x20(%rbx)                  #  14    0xff2e1  4      OPC=movq_m64_r64    
  movl 0x40(%rsi), %r13d                 #  15    0xff2e5  4      OPC=movl_r32_m32    
  movq 0x38(%rsi), %rsi                  #  16    0xff2e9  4      OPC=movq_r64_m64    
  leaq 0x10(%rsp), %rbp                  #  17    0xff2ed  5      OPC=leaq_r64_m16    
  movl $0x1, %ecx                        #  18    0xff2f2  5      OPC=movl_r32_imm32  
  movl %r13d, %edx                       #  19    0xff2f7  3      OPC=movl_r32_r32    
  movq %rbp, %rdi                        #  20    0xff2fa  3      OPC=movq_r64_r64    
  callq .xdrmem_create_GLIBC_2_2_5       #  21    0xff2fd  5      OPC=callq_label     
  movl %r13d, %esi                       #  22    0xff302  3      OPC=movl_r32_r32    
  movq %rbp, %rdi                        #  23    0xff305  3      OPC=movq_r64_r64    
  movq 0x18(%rsp), %rax                  #  24    0xff308  5      OPC=movq_r64_m64    
  callq 0x30(%rax)                       #  25    0xff30d  3      OPC=callq_m64       
  testq %rax, %rax                       #  26    0xff310  3      OPC=testq_r64_r64   
  je .L_ff3d7                            #  27    0xff313  6      OPC=je_label_1      
  movl (%rax), %edx                      #  28    0xff319  2      OPC=movl_r32_m32    
  bswap %edx                             #  29    0xff31b  2      OPC=bswap_r32       
  movl %edx, %ecx                        #  30    0xff31d  2      OPC=movl_r32_r32    
  movq %rcx, (%rbx)                      #  31    0xff31f  3      OPC=movq_m64_r64    
  movl 0x4(%rax), %ebp                   #  32    0xff322  3      OPC=movl_r32_m32    
  bswap %ebp                             #  33    0xff325  2      OPC=bswap_r32       
  movl $0x1, %r15d                       #  34    0xff327  6      OPC=movl_r32_imm32  
  cmpl $0xff, %ebp                       #  35    0xff32d  6      OPC=cmpl_r32_imm32  
  ja .L_ff456                            #  36    0xff333  6      OPC=ja_label_1      
  addq $0x8, %rax                        #  37    0xff339  4      OPC=addq_r64_imm8   
  movl %ebp, %r15d                       #  38    0xff33d  3      OPC=movl_r32_r32    
  movq 0x8(%rbx), %rdi                   #  39    0xff340  4      OPC=movq_r64_m64    
  movq %r15, %rdx                        #  40    0xff344  3      OPC=movq_r64_r64    
  movq %rax, 0x8(%rsp)                   #  41    0xff347  5      OPC=movq_m64_r64    
  movq %rax, %rsi                        #  42    0xff34c  3      OPC=movq_r64_r64    
  callq .__GI_memcpy                     #  43    0xff34f  5      OPC=callq_label     
  movq 0x8(%rbx), %rax                   #  44    0xff354  4      OPC=movq_r64_m64    
  movb $0x0, (%rax,%r15,1)               #  45    0xff358  5      OPC=movb_m8_imm8    
  addl $0x3, %ebp                        #  46    0xff35d  3      OPC=addl_r32_imm8   
  andl $0xfffffffc, %ebp                 #  47    0xff360  6      OPC=andl_r32_imm32  
  nop                                    #  48    0xff366  1      OPC=nop             
  nop                                    #  49    0xff367  1      OPC=nop             
  nop                                    #  50    0xff368  1      OPC=nop             
  movl %ebp, %eax                        #  51    0xff369  2      OPC=movl_r32_r32    
  addq 0x8(%rsp), %rax                   #  52    0xff36b  5      OPC=addq_r64_m64    
  movl (%rax), %edx                      #  53    0xff370  2      OPC=movl_r32_m32    
  bswap %edx                             #  54    0xff372  2      OPC=bswap_r32       
  movl %edx, 0x10(%rbx)                  #  55    0xff374  3      OPC=movl_m32_r32    
  movl 0x4(%rax), %edx                   #  56    0xff377  3      OPC=movl_r32_m32    
  bswap %edx                             #  57    0xff37a  2      OPC=bswap_r32       
  movl %edx, 0x14(%rbx)                  #  58    0xff37c  3      OPC=movl_m32_r32    
  movl 0x8(%rax), %edi                   #  59    0xff37f  3      OPC=movl_r32_m32    
  bswap %edi                             #  60    0xff382  2      OPC=bswap_r32       
  movl $0x1, %r15d                       #  61    0xff384  6      OPC=movl_r32_imm32  
  cmpl $0x10, %edi                       #  62    0xff38a  3      OPC=cmpl_r32_imm8   
  ja .L_ff456                            #  63    0xff38d  6      OPC=ja_label_1      
  movl %edi, 0x18(%rbx)                  #  64    0xff393  3      OPC=movl_m32_r32    
  testl %edi, %edi                       #  65    0xff396  2      OPC=testl_r32_r32   
  je .L_ff3bd                            #  66    0xff398  2      OPC=je_label        
  addq $0xc, %rax                        #  67    0xff39a  4      OPC=addq_r64_imm8   
  leal -0x1(%rdi), %edx                  #  68    0xff39e  3      OPC=leal_r32_m16    
  leaq 0x4(,%rdx,4), %r8                 #  69    0xff3a1  8      OPC=leaq_r64_m16    
  movl $0x0, %edx                        #  70    0xff3a9  5      OPC=movl_r32_imm32  
.L_ff3a8:                                #        0xff3ae  0      OPC=<label>         
  movl (%rax,%rdx,1), %ecx               #  71    0xff3ae  3      OPC=movl_r32_m32    
  bswap %ecx                             #  72    0xff3b1  2      OPC=bswap_r32       
  movq 0x20(%rbx), %rsi                  #  73    0xff3b3  4      OPC=movq_r64_m64    
  movl %ecx, (%rsi,%rdx,1)               #  74    0xff3b7  3      OPC=movl_m32_r32    
  addq $0x4, %rdx                        #  75    0xff3ba  4      OPC=addq_r64_imm8   
  cmpq %r8, %rdx                         #  76    0xff3be  3      OPC=cmpq_r64_r64    
  jne .L_ff3a8                           #  77    0xff3c1  2      OPC=jne_label       
.L_ff3bd:                                #        0xff3c3  0      OPC=<label>         
  leal 0x14(,%rdi,4), %eax               #  78    0xff3c3  7      OPC=leal_r32_m16    
  addl %eax, %ebp                        #  79    0xff3ca  2      OPC=addl_r32_r32    
  movl $0x1, %r15d                       #  80    0xff3cc  6      OPC=movl_r32_imm32  
  cmpl %ebp, %r13d                       #  81    0xff3d2  3      OPC=cmpl_r32_r32    
  jb .L_ff456                            #  82    0xff3d5  6      OPC=jb_label_1      
  jmpq .L_ff405                          #  83    0xff3db  2      OPC=jmpq_label      
.L_ff3d7:                                #        0xff3dd  0      OPC=<label>         
  leaq 0x10(%rsp), %rdi                  #  84    0xff3dd  5      OPC=leaq_r64_m16    
  movq %rbx, %rsi                        #  85    0xff3e2  3      OPC=movq_r64_r64    
  callq .xdr_authunix_parms_GLIBC_2_2_5  #  86    0xff3e5  5      OPC=callq_label     
  testl %eax, %eax                       #  87    0xff3ea  2      OPC=testl_r32_r32   
  jne .L_ff405                           #  88    0xff3ec  2      OPC=jne_label       
  movl $0x2, 0x10(%rsp)                  #  89    0xff3ee  8      OPC=movl_m32_imm32  
  leaq 0x10(%rsp), %rdi                  #  90    0xff3f6  5      OPC=leaq_r64_m16    
  movq %rbx, %rsi                        #  91    0xff3fb  3      OPC=movq_r64_r64    
  callq .xdr_authunix_parms_GLIBC_2_2_5  #  92    0xff3fe  5      OPC=callq_label     
  movl $0x1, %r15d                       #  93    0xff403  6      OPC=movl_r32_imm32  
  jmpq .L_ff456                          #  94    0xff409  2      OPC=jmpq_label      
.L_ff405:                                #        0xff40b  0      OPC=<label>         
  cmpl $0x0, 0x58(%r12)                  #  95    0xff40b  6      OPC=cmpl_m32_imm8   
  je .L_ff43a                            #  96    0xff411  2      OPC=je_label        
  movq 0x38(%r14), %rax                  #  97    0xff413  4      OPC=movq_r64_m64    
  movl 0x48(%r12), %edx                  #  98    0xff417  5      OPC=movl_r32_m32    
  movl %edx, 0x28(%rax)                  #  99    0xff41c  3      OPC=movl_m32_r32    
  movq 0x38(%r14), %rax                  #  100   0xff41f  4      OPC=movq_r64_m64    
  movq 0x50(%r12), %rdx                  #  101   0xff423  5      OPC=movq_r64_m64    
  movq %rdx, 0x30(%rax)                  #  102   0xff428  4      OPC=movq_m64_r64    
  movq 0x38(%r14), %rax                  #  103   0xff42c  4      OPC=movq_r64_m64    
  movl 0x58(%r12), %edx                  #  104   0xff430  5      OPC=movl_r32_m32    
  movl %edx, 0x38(%rax)                  #  105   0xff435  3      OPC=movl_m32_r32    
  movl $0x0, %r15d                       #  106   0xff438  6      OPC=movl_r32_imm32  
  jmpq .L_ff456                          #  107   0xff43e  2      OPC=jmpq_label      
.L_ff43a:                                #        0xff440  0      OPC=<label>         
  movq 0x38(%r14), %rax                  #  108   0xff440  4      OPC=movq_r64_m64    
  movl $0x0, 0x28(%rax)                  #  109   0xff444  7      OPC=movl_m32_imm32  
  movq 0x38(%r14), %rax                  #  110   0xff44b  4      OPC=movq_r64_m64    
  movl $0x0, 0x38(%rax)                  #  111   0xff44f  7      OPC=movl_m32_imm32  
  movl $0x0, %r15d                       #  112   0xff456  6      OPC=movl_r32_imm32  
.L_ff456:                                #        0xff45c  0      OPC=<label>         
  movq 0x18(%rsp), %rax                  #  113   0xff45c  5      OPC=movq_r64_m64    
  movq 0x38(%rax), %rax                  #  114   0xff461  4      OPC=movq_r64_m64    
  testq %rax, %rax                       #  115   0xff465  3      OPC=testq_r64_r64   
  je .L_ff46b                            #  116   0xff468  2      OPC=je_label        
  leaq 0x10(%rsp), %rdi                  #  117   0xff46a  5      OPC=leaq_r64_m16    
  callq %rax                             #  118   0xff46f  2      OPC=callq_r64       
.L_ff46b:                                #        0xff471  0      OPC=<label>         
  movl %r15d, %eax                       #  119   0xff471  3      OPC=movl_r32_r32    
  addq $0x48, %rsp                       #  120   0xff474  4      OPC=addq_r64_imm8   
  popq %rbx                              #  121   0xff478  1      OPC=popq_r64_1      
  popq %rbp                              #  122   0xff479  1      OPC=popq_r64_1      
  popq %r12                              #  123   0xff47a  2      OPC=popq_r64_1      
  popq %r13                              #  124   0xff47c  2      OPC=popq_r64_1      
  popq %r14                              #  125   0xff47e  2      OPC=popq_r64_1      
  popq %r15                              #  126   0xff480  2      OPC=popq_r64_1      
  retq                                   #  127   0xff482  1      OPC=retq            
                                                                                      
.size _svcauth_unix, .-_svcauth_unix

