  .text
  .globl _IO_wdo_write
  .type _IO_wdo_write, @function

#! file-offset 0x68e4e
#! rip-offset  0x68e4e
#! capacity    408 bytes

# Text                              #  Line  RIP      Bytes  Opcode               
._IO_wdo_write:                     #        0x68e4e  0      OPC=<label>          
  pushq %r15                        #  1     0x68e4e  2      OPC=pushq_r64_1      
  pushq %r14                        #  2     0x68e50  2      OPC=pushq_r64_1      
  pushq %r13                        #  3     0x68e52  2      OPC=pushq_r64_1      
  pushq %r12                        #  4     0x68e54  2      OPC=pushq_r64_1      
  pushq %rbp                        #  5     0x68e56  1      OPC=pushq_r64_1      
  pushq %rbx                        #  6     0x68e57  1      OPC=pushq_r64_1      
  subq $0x48, %rsp                  #  7     0x68e58  4      OPC=subq_r64_imm8    
  movq %rdi, %rbx                   #  8     0x68e5c  3      OPC=movq_r64_r64     
  movq %rdx, %r12                   #  9     0x68e5f  3      OPC=movq_r64_r64     
  movq 0x98(%rdi), %r15             #  10    0x68e62  7      OPC=movq_r64_m64     
  testq %rdx, %rdx                  #  11    0x68e69  3      OPC=testq_r64_r64    
  je .L_68f69                       #  12    0x68e6c  6      OPC=je_label_1       
  movq %rsi, %r13                   #  13    0x68e72  3      OPC=movq_r64_r64     
  movq 0x30(%rdi), %rdx             #  14    0x68e75  4      OPC=movq_r64_m64     
  cmpq 0x28(%rdi), %rdx             #  15    0x68e79  4      OPC=cmpq_r64_m64     
  jne .L_68e99                      #  16    0x68e7d  2      OPC=jne_label        
  movq 0x20(%rdi), %rsi             #  17    0x68e7f  4      OPC=movq_r64_m64     
  cmpq %rsi, %rdx                   #  18    0x68e83  3      OPC=cmpq_r64_r64     
  je .L_68e99                       #  19    0x68e86  2      OPC=je_label         
  subq %rsi, %rdx                   #  20    0x68e88  3      OPC=subq_r64_r64     
  callq ._IO_do_write__GLIBC_2_2_5  #  21    0x68e8b  5      OPC=callq_label      
  cmpl $0xffffffff, %eax            #  22    0x68e90  6      OPC=cmpl_r32_imm32   
  nop                               #  23    0x68e96  1      OPC=nop              
  nop                               #  24    0x68e97  1      OPC=nop              
  nop                               #  25    0x68e98  1      OPC=nop              
  je .L_68fd7                       #  26    0x68e99  6      OPC=je_label_1       
.L_68e99:                           #        0x68e9f  0      OPC=<label>          
  leaq 0x30(%rsp), %rax             #  27    0x68e9f  5      OPC=leaq_r64_m16     
  movq %rax, 0x18(%rsp)             #  28    0x68ea4  5      OPC=movq_m64_r64     
  leaq 0x20(%rsp), %rax             #  29    0x68ea9  5      OPC=leaq_r64_m16     
  movq %rax, 0x8(%rsp)              #  30    0x68eae  5      OPC=movq_m64_r64     
  leaq 0x28(%rsp), %rax             #  31    0x68eb3  5      OPC=leaq_r64_m16     
  movq %rax, 0x10(%rsp)             #  32    0x68eb8  5      OPC=movq_m64_r64     
  jmpq .L_68ebc                     #  33    0x68ebd  2      OPC=jmpq_label       
.L_68eb9:                           #        0x68ebf  0      OPC=<label>          
  movq %rdx, %r13                   #  34    0x68ebf  3      OPC=movq_r64_r64     
.L_68ebc:                           #        0x68ec2  0      OPC=<label>          
  movq 0x28(%rbx), %rax             #  35    0x68ec2  4      OPC=movq_r64_m64     
  movq 0x20(%rbx), %rbp             #  36    0x68ec6  4      OPC=movq_r64_m64     
  movq %rax, %rdx                   #  37    0x68eca  3      OPC=movq_r64_r64     
  subq %rbp, %rdx                   #  38    0x68ecd  3      OPC=subq_r64_r64     
  cmpq $0xf, %rdx                   #  39    0x68ed0  4      OPC=cmpq_r64_imm8    
  ja .L_68ee1                       #  40    0x68ed4  2      OPC=ja_label         
  movq 0x18(%rsp), %rbp             #  41    0x68ed6  5      OPC=movq_r64_m64     
  movq %rbp, 0x28(%rsp)             #  42    0x68edb  5      OPC=movq_m64_r64     
  leaq 0x40(%rsp), %rax             #  43    0x68ee0  5      OPC=leaq_r64_m16     
  jmpq .L_68eea                     #  44    0x68ee5  2      OPC=jmpq_label       
.L_68ee1:                           #        0x68ee7  0      OPC=<label>          
  movq %rax, 0x28(%rsp)             #  45    0x68ee7  5      OPC=movq_m64_r64     
  movq 0x40(%rbx), %rax             #  46    0x68eec  4      OPC=movq_r64_m64     
.L_68eea:                           #        0x68ef0  0      OPC=<label>          
  leaq (%r13,%r12,4), %rcx          #  47    0x68ef0  5      OPC=leaq_r64_m16     
  movq 0xa0(%rbx), %rdi             #  48    0x68ef5  7      OPC=movq_r64_m64     
  leaq 0x58(%rdi), %rsi             #  49    0x68efc  4      OPC=leaq_r64_m16     
  pushq 0x10(%rsp)                  #  50    0x68f00  4      OPC=pushq_m64        
  pushq %rax                        #  51    0x68f04  1      OPC=pushq_r64_1      
  movq 0x38(%rsp), %r9              #  52    0x68f05  5      OPC=movq_r64_m64     
  movq 0x18(%rsp), %r8              #  53    0x68f0a  5      OPC=movq_r64_m64     
  movq %r13, %rdx                   #  54    0x68f0f  3      OPC=movq_r64_r64     
  movq %r15, %rdi                   #  55    0x68f12  3      OPC=movq_r64_r64     
  callq 0x8(%r15)                   #  56    0x68f15  4      OPC=callq_m64        
  movl %eax, %r14d                  #  57    0x68f19  3      OPC=movl_r32_r32     
  addq $0x10, %rsp                  #  58    0x68f1c  4      OPC=addq_r64_imm8    
  movq 0x28(%rsp), %rdx             #  59    0x68f20  5      OPC=movq_r64_m64     
  subq %rbp, %rdx                   #  60    0x68f25  3      OPC=subq_r64_r64     
  movq %rbp, %rsi                   #  61    0x68f28  3      OPC=movq_r64_r64     
  movq %rbx, %rdi                   #  62    0x68f2b  3      OPC=movq_r64_r64     
  callq ._IO_do_write__GLIBC_2_2_5  #  63    0x68f2e  5      OPC=callq_label      
  cmpl $0xffffffff, %eax            #  64    0x68f33  6      OPC=cmpl_r32_imm32   
  nop                               #  65    0x68f39  1      OPC=nop              
  nop                               #  66    0x68f3a  1      OPC=nop              
  nop                               #  67    0x68f3b  1      OPC=nop              
  je .L_68fd7                       #  68    0x68f3c  6      OPC=je_label_1       
  movq 0x20(%rsp), %rdx             #  69    0x68f42  5      OPC=movq_r64_m64     
  movq %rdx, %rax                   #  70    0x68f47  3      OPC=movq_r64_r64     
  subq %r13, %rax                   #  71    0x68f4a  3      OPC=subq_r64_r64     
  movq %rax, %rcx                   #  72    0x68f4d  3      OPC=movq_r64_r64     
  sarq $0x2, %rcx                   #  73    0x68f50  4      OPC=sarq_r64_imm8    
  subq %rcx, %r12                   #  74    0x68f54  3      OPC=subq_r64_r64     
  testl %r14d, %r14d                #  75    0x68f57  3      OPC=testl_r32_r32    
  je .L_68f60                       #  76    0x68f5a  2      OPC=je_label         
  cmpl $0x1, %r14d                  #  77    0x68f5c  4      OPC=cmpl_r32_imm8    
  jne .L_68f69                      #  78    0x68f60  2      OPC=jne_label        
  addq $0x3, %rax                   #  79    0x68f62  4      OPC=addq_r64_imm8    
  cmpq $0x6, %rax                   #  80    0x68f66  4      OPC=cmpq_r64_imm8    
  jbe .L_68f69                      #  81    0x68f6a  2      OPC=jbe_label        
.L_68f60:                           #        0x68f6c  0      OPC=<label>          
  testq %r12, %r12                  #  82    0x68f6c  3      OPC=testq_r64_r64    
  jne .L_68eb9                      #  83    0x68f6f  6      OPC=jne_label_1      
.L_68f69:                           #        0x68f75  0      OPC=<label>          
  movq 0xa0(%rbx), %rax             #  84    0x68f75  7      OPC=movq_r64_m64     
  movq 0x30(%rax), %rdx             #  85    0x68f7c  4      OPC=movq_r64_m64     
  movq %rdx, 0x10(%rax)             #  86    0x68f80  4      OPC=movq_m64_r64     
  movq 0xa0(%rbx), %rax             #  87    0x68f84  7      OPC=movq_r64_m64     
  movq 0x30(%rax), %rdx             #  88    0x68f8b  4      OPC=movq_r64_m64     
  movq %rdx, (%rax)                 #  89    0x68f8f  3      OPC=movq_m64_r64     
  movq 0xa0(%rbx), %rax             #  90    0x68f92  7      OPC=movq_r64_m64     
  movq 0x30(%rax), %rdx             #  91    0x68f99  4      OPC=movq_r64_m64     
  movq %rdx, 0x8(%rax)              #  92    0x68f9d  4      OPC=movq_m64_r64     
  movq 0xa0(%rbx), %rax             #  93    0x68fa1  7      OPC=movq_r64_m64     
  movq 0x30(%rax), %rdx             #  94    0x68fa8  4      OPC=movq_r64_m64     
  movq %rdx, 0x20(%rax)             #  95    0x68fac  4      OPC=movq_m64_r64     
  movq %rdx, 0x18(%rax)             #  96    0x68fb0  4      OPC=movq_m64_r64     
  testl $0x202, (%rbx)              #  97    0x68fb4  6      OPC=testl_m32_imm32  
  je .L_68fbd                       #  98    0x68fba  2      OPC=je_label         
  movq 0xa0(%rbx), %rax             #  99    0x68fbc  7      OPC=movq_r64_m64     
  movq 0x30(%rax), %rdx             #  100   0x68fc3  4      OPC=movq_r64_m64     
  jmpq .L_68fc8                     #  101   0x68fc7  2      OPC=jmpq_label       
.L_68fbd:                           #        0x68fc9  0      OPC=<label>          
  movq 0xa0(%rbx), %rax             #  102   0x68fc9  7      OPC=movq_r64_m64     
  movq 0x38(%rax), %rdx             #  103   0x68fd0  4      OPC=movq_r64_m64     
.L_68fc8:                           #        0x68fd4  0      OPC=<label>          
  movq %rdx, 0x28(%rax)             #  104   0x68fd4  4      OPC=movq_m64_r64     
  testq %r12, %r12                  #  105   0x68fd8  3      OPC=testq_r64_r64    
  setne %al                         #  106   0x68fdb  3      OPC=setne_r8         
  movzbl %al, %eax                  #  107   0x68fde  3      OPC=movzbl_r32_r8    
  negl %eax                         #  108   0x68fe1  2      OPC=negl_r32         
.L_68fd7:                           #        0x68fe3  0      OPC=<label>          
  addq $0x48, %rsp                  #  109   0x68fe3  4      OPC=addq_r64_imm8    
  popq %rbx                         #  110   0x68fe7  1      OPC=popq_r64_1       
  popq %rbp                         #  111   0x68fe8  1      OPC=popq_r64_1       
  popq %r12                         #  112   0x68fe9  2      OPC=popq_r64_1       
  popq %r13                         #  113   0x68feb  2      OPC=popq_r64_1       
  popq %r14                         #  114   0x68fed  2      OPC=popq_r64_1       
  popq %r15                         #  115   0x68fef  2      OPC=popq_r64_1       
  retq                              #  116   0x68ff1  1      OPC=retq             
                                                                                  
.size _IO_wdo_write, .-_IO_wdo_write

