  .text
  .globl malloc_info
  .type malloc_info, @function

#! file-offset 0x76780
#! rip-offset  0x76780
#! capacity    1203 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
.malloc_info:                       #        0x76780  0      OPC=<label>           
  movl $0x16, %eax                  #  1     0x76780  5      OPC=movl_r32_imm32    
  testl %edi, %edi                  #  2     0x76785  2      OPC=testl_r32_r32     
  jne .L_76c31                      #  3     0x76787  6      OPC=jne_label_1       
  pushq %r15                        #  4     0x7678d  2      OPC=pushq_r64_1       
  pushq %r14                        #  5     0x7678f  2      OPC=pushq_r64_1       
  pushq %r13                        #  6     0x76791  2      OPC=pushq_r64_1       
  pushq %r12                        #  7     0x76793  2      OPC=pushq_r64_1       
  pushq %rbp                        #  8     0x76795  1      OPC=pushq_r64_1       
  pushq %rbx                        #  9     0x76796  1      OPC=pushq_r64_1       
  subq $0x11a8, %rsp                #  10    0x76797  7      OPC=subq_r64_imm32    
  movq %rsi, (%rsp)                 #  11    0x7679e  4      OPC=movq_m64_r64      
  cmpl $0x0, 0x314a1b(%rip)         #  12    0x767a2  7      OPC=cmpl_m32_imm8     
  jns .L_767b0                      #  13    0x767a9  2      OPC=jns_label         
  callq .ptmalloc_init              #  14    0x767ab  5      OPC=callq_label       
.L_767b0:                           #        0x767b0  0      OPC=<label>           
  movq (%rsp), %rsi                 #  15    0x767b0  4      OPC=movq_r64_m64      
  leaq 0xe2428(%rip), %rdi          #  16    0x767b4  7      OPC=leaq_r64_m16      
  callq ._IO_fputs                  #  17    0x767bb  5      OPC=callq_label       
  leaq 0x315479(%rip), %rax         #  18    0x767c0  7      OPC=leaq_r64_m16      
  movq %rax, 0x8(%rsp)              #  19    0x767c7  5      OPC=movq_m64_r64      
  movq $0x0, 0x18(%rsp)             #  20    0x767cc  9      OPC=movq_m64_imm32    
  movq $0x0, 0x10(%rsp)             #  21    0x767d5  9      OPC=movq_m64_imm32    
  movq $0x0, 0x48(%rsp)             #  22    0x767de  9      OPC=movq_m64_imm32    
  movq $0x0, 0x40(%rsp)             #  23    0x767e7  9      OPC=movq_m64_imm32    
  movq $0x0, 0x38(%rsp)             #  24    0x767f0  9      OPC=movq_m64_imm32    
  movq $0x0, 0x30(%rsp)             #  25    0x767f9  9      OPC=movq_m64_imm32    
  movq $0x0, 0x28(%rsp)             #  26    0x76802  9      OPC=movq_m64_imm32    
  movq $0x0, 0x20(%rsp)             #  27    0x7680b  9      OPC=movq_m64_imm32    
  movl $0x0, %edx                   #  28    0x76814  5      OPC=movl_r32_imm32    
  leaq 0x80(%rsp), %rax             #  29    0x76819  8      OPC=leaq_r64_m16      
  movq %rax, 0x68(%rsp)             #  30    0x76821  5      OPC=movq_m64_r64      
  leaq 0x98(%rsp), %rbx             #  31    0x76826  8      OPC=leaq_r64_m16      
  movq %rbx, 0x70(%rsp)             #  32    0x7682e  5      OPC=movq_m64_r64      
  leaq 0x1d8(%rsp), %rax            #  33    0x76833  8      OPC=leaq_r64_m16      
  movq %rax, 0x78(%rsp)             #  34    0x7683b  5      OPC=movq_m64_r64      
.L_76840:                           #        0x76840  0      OPC=<label>           
  leal 0x1(%rdx), %eax              #  35    0x76840  3      OPC=leal_r32_m16      
  movl %eax, 0x64(%rsp)             #  36    0x76843  4      OPC=movl_m32_r32      
  leaq 0xe23ab(%rip), %rsi          #  37    0x76847  7      OPC=leaq_r64_m16      
  movq (%rsp), %rdi                 #  38    0x7684e  4      OPC=movq_r64_m64      
  movl $0x0, %eax                   #  39    0x76852  5      OPC=movl_r32_imm32    
  callq .fprintf                    #  40    0x76857  5      OPC=callq_label       
  movl $0x1, %esi                   #  41    0x7685c  5      OPC=movl_r32_imm32    
  movl $0x0, %eax                   #  42    0x76861  5      OPC=movl_r32_imm32    
  movq 0x8(%rsp), %rbx              #  43    0x76866  5      OPC=movq_r64_m64      
  cmpl $0x0, 0x31a38e(%rip)         #  44    0x7686b  7      OPC=cmpl_m32_imm8     
  je .L_7687c                       #  45    0x76872  2      OPC=je_label          
  lock                              #  46    0x76874  1      OPC=lock              
  cmpxchgl %esi, (%rbx)             #  47    0x76875  3      OPC=cmpxchgl_m32_r32  
  nop                               #  48    0x76878  1      OPC=nop               
  jne .L_76881                      #  49    0x76879  2      OPC=jne_label         
  jmpq .L_76897                     #  50    0x7687b  2      OPC=jmpq_label        
.L_7687c:                           #        0x7687d  0      OPC=<label>           
  cmpxchgl %esi, (%rbx)             #  51    0x7687d  3      OPC=cmpxchgl_m32_r32  
  je .L_76897                       #  52    0x76880  2      OPC=je_label          
.L_76881:                           #        0x76882  0      OPC=<label>           
  leaq (%rbx), %rdi                 #  53    0x76882  3      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  54    0x76885  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  55    0x7688c  5      OPC=callq_label       
  addq $0x80, %rsp                  #  56    0x76891  7      OPC=addq_r64_imm32    
.L_76897:                           #        0x76898  0      OPC=<label>           
  leaq 0x8(%rbx), %rdi              #  57    0x76898  4      OPC=leaq_r64_m16      
  movq 0x70(%rsp), %rcx             #  58    0x7689c  5      OPC=movq_r64_m64      
  movq %rcx, %rbx                   #  59    0x768a1  3      OPC=movq_r64_r64      
  movl $0x0, %r9d                   #  60    0x768a4  6      OPC=movl_r32_imm32    
  movl $0x0, %r8d                   #  61    0x768aa  6      OPC=movl_r32_imm32    
  movq 0x78(%rsp), %r10             #  62    0x768b0  5      OPC=movq_r64_m64      
.L_768b4:                           #        0x768b5  0      OPC=<label>           
  movq (%rdi), %rax                 #  63    0x768b5  3      OPC=movq_r64_m64      
  testq %rax, %rax                  #  64    0x768b8  3      OPC=testq_r64_r64     
  je .L_768f4                       #  65    0x768bb  2      OPC=je_label          
  movq 0x8(%rax), %rsi              #  66    0x768bd  4      OPC=movq_r64_m64      
  andq $0xf8, %rsi                  #  67    0x768c1  4      OPC=andq_r64_imm8     
  movl $0x0, %edx                   #  68    0x768c5  5      OPC=movl_r32_imm32    
.L_768c9:                           #        0x768ca  0      OPC=<label>           
  addq $0x1, %rdx                   #  69    0x768ca  4      OPC=addq_r64_imm8     
  movq 0x10(%rax), %rax             #  70    0x768ce  4      OPC=movq_r64_m64      
  testq %rax, %rax                  #  71    0x768d2  3      OPC=testq_r64_r64     
  jne .L_768c9                      #  72    0x768d5  2      OPC=jne_label         
  movq %rdx, %rax                   #  73    0x768d7  3      OPC=movq_r64_r64      
  imulq %rsi, %rax                  #  74    0x768da  4      OPC=imulq_r64_r64     
  addq %rax, %r9                    #  75    0x768de  3      OPC=addq_r64_r64      
  addq %rdx, %r8                    #  76    0x768e1  3      OPC=addq_r64_r64      
  leaq -0xf(%rsi), %rax             #  77    0x768e4  4      OPC=leaq_r64_m16      
  movq %rax, -0x18(%rcx)            #  78    0x768e8  4      OPC=movq_m64_r64      
  movq %rsi, -0x10(%rcx)            #  79    0x768ec  4      OPC=movq_m64_r64      
  movq %rdx, (%rcx)                 #  80    0x768f0  3      OPC=movq_m64_r64      
  jmpq .L_7690b                     #  81    0x768f3  2      OPC=jmpq_label        
.L_768f4:                           #        0x768f5  0      OPC=<label>           
  movq $0x0, (%rcx)                 #  82    0x768f5  7      OPC=movq_m64_imm32    
  movq $0x0, -0x10(%rcx)            #  83    0x768fc  8      OPC=movq_m64_imm32    
  movq $0x0, -0x18(%rcx)            #  84    0x76904  8      OPC=movq_m64_imm32    
.L_7690b:                           #        0x7690c  0      OPC=<label>           
  movq -0x10(%rcx), %rax            #  85    0x7690c  4      OPC=movq_r64_m64      
  imulq (%rcx), %rax                #  86    0x76910  4      OPC=imulq_r64_m64     
  movq %rax, -0x8(%rcx)             #  87    0x76914  4      OPC=movq_m64_r64      
  addq $0x8, %rdi                   #  88    0x76918  4      OPC=addq_r64_imm8     
  addq $0x20, %rcx                  #  89    0x7691c  4      OPC=addq_r64_imm8     
  cmpq %r10, %rcx                   #  90    0x76920  3      OPC=cmpq_r64_r64      
  jne .L_768b4                      #  91    0x76923  2      OPC=jne_label         
  movq %r8, 0x50(%rsp)              #  92    0x76925  5      OPC=movq_m64_r64      
  movq %r9, 0x58(%rsp)              #  93    0x7692a  5      OPC=movq_m64_r64      
  movq 0x68(%rsp), %rax             #  94    0x7692f  5      OPC=movq_r64_m64      
  leaq 0x140(%rax), %r11            #  95    0x76934  7      OPC=leaq_r64_m16      
  movq 0x8(%rsp), %rax              #  96    0x7693b  5      OPC=movq_r64_m64      
  leaq 0x58(%rax), %r13             #  97    0x76940  4      OPC=leaq_r64_m16      
  leaq 0x11a0(%rsp), %r15           #  98    0x76944  8      OPC=leaq_r64_m16      
  movl $0x0, %r12d                  #  99    0x7694c  6      OPC=movl_r32_imm32    
  movl $0x0, %ebp                   #  100   0x76952  5      OPC=movl_r32_imm32    
  movq $0xffffffff, %r14            #  101   0x76957  7      OPC=movq_r64_imm32    
.L_7695d:                           #        0x7695e  0      OPC=<label>           
  movq %r13, %r9                    #  102   0x7695e  3      OPC=movq_r64_r64      
  movq 0x10(%r13), %rdx             #  103   0x76961  4      OPC=movq_r64_m64      
  movq %r11, %r10                   #  104   0x76965  3      OPC=movq_r64_r64      
  movq %r14, (%r11)                 #  105   0x76968  3      OPC=movq_m64_r64      
  movq $0x0, 0x18(%r11)             #  106   0x7696b  8      OPC=movq_m64_imm32    
  movq $0x0, 0x10(%r11)             #  107   0x76973  8      OPC=movq_m64_imm32    
  movq $0x0, 0x8(%r11)              #  108   0x7697b  8      OPC=movq_m64_imm32    
  testq %rdx, %rdx                  #  109   0x76983  3      OPC=testq_r64_r64     
  je .L_769d9                       #  110   0x76986  2      OPC=je_label          
  cmpq %rdx, %r13                   #  111   0x76988  3      OPC=cmpq_r64_r64      
  je .L_769d9                       #  112   0x7698b  2      OPC=je_label          
  movl $0x0, %r8d                   #  113   0x7698d  6      OPC=movl_r32_imm32    
  movq (%r11), %rsi                 #  114   0x76993  3      OPC=movq_r64_m64      
  movl $0x0, %eax                   #  115   0x76996  5      OPC=movl_r32_imm32    
  leaq 0x1(%rax), %rdi              #  116   0x7699b  4      OPC=leaq_r64_m16      
  movl $0x0, %ecx                   #  117   0x7699f  5      OPC=movl_r32_imm32    
  jmpq .L_769a8                     #  118   0x769a4  2      OPC=jmpq_label        
.L_769a5:                           #        0x769a6  0      OPC=<label>           
  movq %rax, %rdi                   #  119   0x769a6  3      OPC=movq_r64_r64      
.L_769a8:                           #        0x769a9  0      OPC=<label>           
  movq 0x8(%rdx), %rax              #  120   0x769a9  4      OPC=movq_r64_m64      
  addq %rax, %r8                    #  121   0x769ad  3      OPC=addq_r64_r64      
  cmpq %rax, %rsi                   #  122   0x769b0  3      OPC=cmpq_r64_r64      
  cmovaq %rax, %rsi                 #  123   0x769b3  4      OPC=cmovaq_r64_r64    
  cmpq %rax, %rcx                   #  124   0x769b7  3      OPC=cmpq_r64_r64      
  cmovbq %rax, %rcx                 #  125   0x769ba  4      OPC=cmovbq_r64_r64    
  movq 0x10(%rdx), %rdx             #  126   0x769be  4      OPC=movq_r64_m64      
  leaq 0x1(%rdi), %rax              #  127   0x769c2  4      OPC=leaq_r64_m16      
  cmpq %rdx, %r9                    #  128   0x769c6  3      OPC=cmpq_r64_r64      
  jne .L_769a5                      #  129   0x769c9  2      OPC=jne_label         
  movq %rdi, 0x18(%r10)             #  130   0x769cb  4      OPC=movq_m64_r64      
  movq %r8, 0x10(%r10)              #  131   0x769cf  4      OPC=movq_m64_r64      
  movq %rsi, (%r10)                 #  132   0x769d3  3      OPC=movq_m64_r64      
  movq %rcx, 0x8(%r10)              #  133   0x769d6  4      OPC=movq_m64_r64      
.L_769d9:                           #        0x769da  0      OPC=<label>           
  movq 0x18(%r10), %rax             #  134   0x769da  4      OPC=movq_r64_m64      
  testq %rax, %rax                  #  135   0x769de  3      OPC=testq_r64_r64     
  jne .L_769e9                      #  136   0x769e1  2      OPC=jne_label         
  movq $0x0, (%r10)                 #  137   0x769e3  7      OPC=movq_m64_imm32    
.L_769e9:                           #        0x769ea  0      OPC=<label>           
  addq %rax, %rbp                   #  138   0x769ea  3      OPC=addq_r64_r64      
  addq 0x10(%r10), %r12             #  139   0x769ed  4      OPC=addq_r64_m64      
  addq $0x20, %r11                  #  140   0x769f1  4      OPC=addq_r64_imm8     
  addq $0x10, %r13                  #  141   0x769f5  4      OPC=addq_r64_imm8     
  cmpq %r15, %r11                   #  142   0x769f9  3      OPC=cmpq_r64_r64      
  jne .L_7695d                      #  143   0x769fc  6      OPC=jne_label_1       
  movq 0x8(%rsp), %rsi              #  144   0x76a02  5      OPC=movq_r64_m64      
  cmpl $0x0, 0x31a1f3(%rip)         #  145   0x76a07  7      OPC=cmpl_m32_imm8     
  je .L_76a16                       #  146   0x76a0e  2      OPC=je_label          
  lock                              #  147   0x76a10  1      OPC=lock              
  decl (%rsi)                       #  148   0x76a11  2      OPC=decl_m32          
  nop                               #  149   0x76a13  1      OPC=nop               
  jne .L_76a1a                      #  150   0x76a14  2      OPC=jne_label         
  jmpq .L_76a30                     #  151   0x76a16  2      OPC=jmpq_label        
.L_76a16:                           #        0x76a18  0      OPC=<label>           
  decl (%rsi)                       #  152   0x76a18  2      OPC=decl_m32          
  je .L_76a30                       #  153   0x76a1a  2      OPC=je_label          
.L_76a1a:                           #        0x76a1c  0      OPC=<label>           
  leaq (%rsi), %rdi                 #  154   0x76a1c  3      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  155   0x76a1f  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  156   0x76a26  5      OPC=callq_label       
  addq $0x80, %rsp                  #  157   0x76a2b  7      OPC=addq_r64_imm32    
.L_76a30:                           #        0x76a32  0      OPC=<label>           
  movq 0x50(%rsp), %rdi             #  158   0x76a32  5      OPC=movq_r64_m64      
  addq %rdi, 0x28(%rsp)             #  159   0x76a37  5      OPC=addq_m64_r64      
  movq 0x58(%rsp), %rdi             #  160   0x76a3c  5      OPC=movq_r64_m64      
  addq %rdi, 0x38(%rsp)             #  161   0x76a41  5      OPC=addq_m64_r64      
  addq %rbp, 0x20(%rsp)             #  162   0x76a46  5      OPC=addq_m64_r64      
  addq %r12, 0x30(%rsp)             #  163   0x76a4b  5      OPC=addq_m64_r64      
  movl $0x0, %r13d                  #  164   0x76a50  6      OPC=movl_r32_imm32    
  movq (%rsp), %r14                 #  165   0x76a56  4      OPC=movq_r64_m64      
.L_76a58:                           #        0x76a5a  0      OPC=<label>           
  movq (%rbx), %r9                  #  166   0x76a5a  3      OPC=movq_r64_m64      
  testq %r9, %r9                    #  167   0x76a5d  3      OPC=testq_r64_r64     
  je .L_76a86                       #  168   0x76a60  2      OPC=je_label          
  cmpq $0xa, %r13                   #  169   0x76a62  4      OPC=cmpq_r64_imm8     
  je .L_76a86                       #  170   0x76a66  2      OPC=je_label          
  movq -0x10(%rbx), %rcx            #  171   0x76a68  4      OPC=movq_r64_m64      
  movq -0x18(%rbx), %rdx            #  172   0x76a6c  4      OPC=movq_r64_m64      
  movq -0x8(%rbx), %r8              #  173   0x76a70  4      OPC=movq_r64_m64      
  leaq 0xe5b9f(%rip), %rsi          #  174   0x76a74  7      OPC=leaq_r64_m16      
  movq %r14, %rdi                   #  175   0x76a7b  3      OPC=movq_r64_r64      
  movl $0x0, %eax                   #  176   0x76a7e  5      OPC=movl_r32_imm32    
  callq .fprintf                    #  177   0x76a83  5      OPC=callq_label       
.L_76a86:                           #        0x76a88  0      OPC=<label>           
  addq $0x1, %r13                   #  178   0x76a88  4      OPC=addq_r64_imm8     
  addq $0x20, %rbx                  #  179   0x76a8c  4      OPC=addq_r64_imm8     
  cmpq $0x89, %r13                  #  180   0x76a90  7      OPC=cmpq_r64_imm32    
  jne .L_76a58                      #  181   0x76a97  2      OPC=jne_label         
  movq 0x1d8(%rsp), %r9             #  182   0x76a99  8      OPC=movq_r64_m64      
  testq %r9, %r9                    #  183   0x76aa1  3      OPC=testq_r64_r64     
  je .L_76ad1                       #  184   0x76aa4  2      OPC=je_label          
  movq 0x1d0(%rsp), %r8             #  185   0x76aa6  8      OPC=movq_r64_m64      
  movq 0x1c8(%rsp), %rcx            #  186   0x76aae  8      OPC=movq_r64_m64      
  movq 0x1c0(%rsp), %rdx            #  187   0x76ab6  8      OPC=movq_r64_m64      
  leaq 0xe5b9d(%rip), %rsi          #  188   0x76abe  7      OPC=leaq_r64_m16      
  movq (%rsp), %rdi                 #  189   0x76ac5  4      OPC=movq_r64_m64      
  movl $0x0, %eax                   #  190   0x76ac9  5      OPC=movl_r32_imm32    
  callq .fprintf                    #  191   0x76ace  5      OPC=callq_label       
.L_76ad1:                           #        0x76ad3  0      OPC=<label>           
  movq 0x8(%rsp), %rbx              #  192   0x76ad3  5      OPC=movq_r64_m64      
  movq 0x880(%rbx), %rax            #  193   0x76ad8  7      OPC=movq_r64_m64      
  addq %rax, 0x40(%rsp)             #  194   0x76adf  5      OPC=addq_m64_r64      
  movq 0x888(%rbx), %rdx            #  195   0x76ae4  7      OPC=movq_r64_m64      
  addq %rdx, 0x48(%rsp)             #  196   0x76aeb  5      OPC=addq_m64_r64      
  pushq %rdx                        #  197   0x76af0  1      OPC=pushq_r64_1       
  pushq %rax                        #  198   0x76af1  1      OPC=pushq_r64_1       
  movq %r12, %r9                    #  199   0x76af2  3      OPC=movq_r64_r64      
  movq %rbp, %r8                    #  200   0x76af5  3      OPC=movq_r64_r64      
  movq 0x68(%rsp), %rcx             #  201   0x76af8  5      OPC=movq_r64_m64      
  movq 0x60(%rsp), %rdx             #  202   0x76afd  5      OPC=movq_r64_m64      
  leaq 0xe5b99(%rip), %rsi          #  203   0x76b02  7      OPC=leaq_r64_m16      
  movq 0x10(%rsp), %r14             #  204   0x76b09  5      OPC=movq_r64_m64      
  movq %r14, %rdi                   #  205   0x76b0e  3      OPC=movq_r64_r64      
  movl $0x0, %eax                   #  206   0x76b11  5      OPC=movl_r32_imm32    
  callq .fprintf                    #  207   0x76b16  5      OPC=callq_label       
  addq $0x10, %rsp                  #  208   0x76b1b  4      OPC=addq_r64_imm8     
  leaq 0x31511c(%rip), %rax         #  209   0x76b1f  7      OPC=leaq_r64_m16      
  cmpq %rax, %rbx                   #  210   0x76b26  3      OPC=cmpq_r64_r64      
  je .L_76b6c                       #  211   0x76b29  2      OPC=je_label          
  movq 0x58(%rbx), %rax             #  212   0x76b2b  4      OPC=movq_r64_m64      
  movq %rax, 0x50(%rsp)             #  213   0x76b2f  5      OPC=movq_m64_r64      
  movq %rax, %rbx                   #  214   0x76b34  3      OPC=movq_r64_r64      
  andq $0xfc000000, %rbx            #  215   0x76b37  7      OPC=andq_r64_imm32    
  movq 0x18(%rbx), %rcx             #  216   0x76b3e  4      OPC=movq_r64_m64      
  movq 0x10(%rbx), %rdx             #  217   0x76b42  4      OPC=movq_r64_m64      
  leaq 0xe5bfd(%rip), %rsi          #  218   0x76b46  7      OPC=leaq_r64_m16      
  movq %r14, %rdi                   #  219   0x76b4d  3      OPC=movq_r64_r64      
  movl $0x0, %eax                   #  220   0x76b50  5      OPC=movl_r32_imm32    
  callq .fprintf                    #  221   0x76b55  5      OPC=callq_label       
  movq 0x10(%rbx), %rdi             #  222   0x76b5a  4      OPC=movq_r64_m64      
  addq %rdi, 0x10(%rsp)             #  223   0x76b5e  5      OPC=addq_m64_r64      
  movq 0x18(%rbx), %rbx             #  224   0x76b63  4      OPC=movq_r64_m64      
  addq %rbx, 0x18(%rsp)             #  225   0x76b67  5      OPC=addq_m64_r64      
  jmpq .L_76b9c                     #  226   0x76b6c  2      OPC=jmpq_label        
.L_76b6c:                           #        0x76b6e  0      OPC=<label>           
  movq 0x31594d(%rip), %rdx         #  227   0x76b6e  7      OPC=movq_r64_m64      
  movq %rdx, %rcx                   #  228   0x76b75  3      OPC=movq_r64_r64      
  leaq 0xe5bcb(%rip), %rsi          #  229   0x76b78  7      OPC=leaq_r64_m16      
  movq (%rsp), %rdi                 #  230   0x76b7f  4      OPC=movq_r64_m64      
  movl $0x0, %eax                   #  231   0x76b83  5      OPC=movl_r32_imm32    
  callq .fprintf                    #  232   0x76b88  5      OPC=callq_label       
  movq 0x31592e(%rip), %rax         #  233   0x76b8d  7      OPC=movq_r64_m64      
  addq %rax, 0x10(%rsp)             #  234   0x76b94  5      OPC=addq_m64_r64      
  addq %rax, 0x18(%rsp)             #  235   0x76b99  5      OPC=addq_m64_r64      
.L_76b9c:                           #        0x76b9e  0      OPC=<label>           
  movq (%rsp), %rsi                 #  236   0x76b9e  4      OPC=movq_r64_m64      
  leaq 0xe206a(%rip), %rdi          #  237   0x76ba2  7      OPC=leaq_r64_m16      
  callq ._IO_fputs                  #  238   0x76ba9  5      OPC=callq_label       
  movq 0x8(%rsp), %rax              #  239   0x76bae  5      OPC=movq_r64_m64      
  movq 0x868(%rax), %rax            #  240   0x76bb3  7      OPC=movq_r64_m64      
  movq %rax, %rbx                   #  241   0x76bba  3      OPC=movq_r64_r64      
  movq %rax, 0x8(%rsp)              #  242   0x76bbd  5      OPC=movq_m64_r64      
  movl 0x64(%rsp), %edx             #  243   0x76bc2  4      OPC=movl_r32_m32      
  leaq 0x315075(%rip), %rax         #  244   0x76bc6  7      OPC=leaq_r64_m16      
  cmpq %rax, %rbx                   #  245   0x76bcd  3      OPC=cmpq_r64_r64      
  jne .L_76840                      #  246   0x76bd0  6      OPC=jne_label_1       
  pushq 0x18(%rsp)                  #  247   0x76bd6  4      OPC=pushq_m64         
  pushq 0x18(%rsp)                  #  248   0x76bda  4      OPC=pushq_m64         
  pushq 0x58(%rsp)                  #  249   0x76bde  4      OPC=pushq_m64         
  pushq 0x58(%rsp)                  #  250   0x76be2  4      OPC=pushq_m64         
  pushq 0x31464e(%rip)              #  251   0x76be6  6      OPC=pushq_m64         
  movl 0x314638(%rip), %eax         #  252   0x76bec  6      OPC=movl_r32_m32      
  pushq %rax                        #  253   0x76bf2  1      OPC=pushq_r64_1       
  movq 0x60(%rsp), %r9              #  254   0x76bf3  5      OPC=movq_r64_m64      
  movq 0x50(%rsp), %r8              #  255   0x76bf8  5      OPC=movq_r64_m64      
  movq 0x68(%rsp), %rcx             #  256   0x76bfd  5      OPC=movq_r64_m64      
  movq 0x58(%rsp), %rdx             #  257   0x76c02  5      OPC=movq_r64_m64      
  leaq 0xe5b84(%rip), %rsi          #  258   0x76c07  7      OPC=leaq_r64_m16      
  movq 0x30(%rsp), %rdi             #  259   0x76c0e  5      OPC=movq_r64_m64      
  movl $0x0, %eax                   #  260   0x76c13  5      OPC=movl_r32_imm32    
  callq .fprintf                    #  261   0x76c18  5      OPC=callq_label       
  movl $0x0, %eax                   #  262   0x76c1d  5      OPC=movl_r32_imm32    
  addq $0x11d8, %rsp                #  263   0x76c22  7      OPC=addq_r64_imm32    
  popq %rbx                         #  264   0x76c29  1      OPC=popq_r64_1        
  popq %rbp                         #  265   0x76c2a  1      OPC=popq_r64_1        
  popq %r12                         #  266   0x76c2b  2      OPC=popq_r64_1        
  popq %r13                         #  267   0x76c2d  2      OPC=popq_r64_1        
  popq %r14                         #  268   0x76c2f  2      OPC=popq_r64_1        
  popq %r15                         #  269   0x76c31  2      OPC=popq_r64_1        
.L_76c31:                           #        0x76c33  0      OPC=<label>           
  retq                              #  270   0x76c33  1      OPC=retq              
  nop                               #  271   0x76c34  1      OPC=nop               
                                                                                   
.size malloc_info, .-malloc_info

