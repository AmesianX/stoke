  .text
  .globl __readvall
  .type __readvall, @function

#! file-offset 0x10ce1c
#! rip-offset  0x10ce1c
#! capacity    354 bytes

# Text                          #  Line  RIP       Bytes  Opcode              
.__readvall:                    #        0x10ce1c  0      OPC=<label>         
  pushq %rbp                    #  1     0x10ce1c  1      OPC=pushq_r64_1     
  movq %rsp, %rbp               #  2     0x10ce1d  3      OPC=movq_r64_r64    
  pushq %r15                    #  3     0x10ce20  2      OPC=pushq_r64_1     
  pushq %r14                    #  4     0x10ce22  2      OPC=pushq_r64_1     
  pushq %r13                    #  5     0x10ce24  2      OPC=pushq_r64_1     
  pushq %r12                    #  6     0x10ce26  2      OPC=pushq_r64_1     
  pushq %rbx                    #  7     0x10ce28  1      OPC=pushq_r64_1     
  subq $0x18, %rsp              #  8     0x10ce29  4      OPC=subq_r64_imm8   
  movl %edi, %r14d              #  9     0x10ce2d  3      OPC=movl_r32_r32    
  movq %rsi, %r15               #  10    0x10ce30  3      OPC=movq_r64_r64    
  movl %edx, %r13d              #  11    0x10ce33  3      OPC=movl_r32_r32    
.L_10ce36:                      #        0x10ce36  0      OPC=<label>         
  movl %r13d, %edx              #  12    0x10ce36  3      OPC=movl_r32_r32    
  movq %r15, %rsi               #  13    0x10ce39  3      OPC=movq_r64_r64    
  movl %r14d, %edi              #  14    0x10ce3c  3      OPC=movl_r32_r32    
  callq .readv                  #  15    0x10ce3f  5      OPC=callq_label     
  movq %rax, %rbx               #  16    0x10ce44  3      OPC=movq_r64_r64    
  cmpq $0xff, %rax              #  17    0x10ce47  4      OPC=cmpq_r64_imm8   
  jne .L_10ce5c                 #  18    0x10ce4b  2      OPC=jne_label       
  movq 0x27e02c(%rip), %rax     #  19    0x10ce4d  7      OPC=movq_r64_m64    
  cmpl $0x4, (%rax)             #  20    0x10ce54  3      OPC=cmpl_m32_imm8   
  nop                           #  21    0x10ce57  1      OPC=nop             
  je .L_10ce36                  #  22    0x10ce58  2      OPC=je_label        
  jmpq .L_10ce6a                #  23    0x10ce5a  2      OPC=jmpq_label      
.L_10ce5c:                      #        0x10ce5c  0      OPC=<label>         
  testq %rbx, %rbx              #  24    0x10ce5c  3      OPC=testq_r64_r64   
  jg .L_10ce80                  #  25    0x10ce5f  2      OPC=jg_label        
  testq %rbx, %rbx              #  26    0x10ce61  3      OPC=testq_r64_r64   
  je .L_10cf69                  #  27    0x10ce64  6      OPC=je_label_1      
.L_10ce6a:                      #        0x10ce6a  0      OPC=<label>         
  movq 0x27e00f(%rip), %rax     #  28    0x10ce6a  7      OPC=movq_r64_m64    
  cmpl $0xb, (%rax)             #  29    0x10ce71  3      OPC=cmpl_m32_imm8   
  nop                           #  30    0x10ce74  1      OPC=nop             
  jne .L_10cf6c                 #  31    0x10ce75  6      OPC=jne_label_1     
  movl $0x0, %ebx               #  32    0x10ce7b  5      OPC=movl_r32_imm32  
.L_10ce80:                      #        0x10ce80  0      OPC=<label>         
  testl %r13d, %r13d            #  33    0x10ce80  3      OPC=testl_r32_r32   
  jle .L_10cf6c                 #  34    0x10ce83  6      OPC=jle_label_1     
  leaq 0x8(%r15), %rax          #  35    0x10ce89  4      OPC=leaq_r64_m16    
  leal -0x1(%r13), %edx         #  36    0x10ce8d  4      OPC=leal_r32_m16    
  shlq $0x4, %rdx               #  37    0x10ce91  4      OPC=shlq_r64_imm8   
  leaq 0x18(%r15,%rdx,1), %rdx  #  38    0x10ce95  5      OPC=leaq_r64_m16    
  movl $0x0, %r12d              #  39    0x10ce9a  6      OPC=movl_r32_imm32  
.L_10cea0:                      #        0x10cea0  0      OPC=<label>         
  addq (%rax), %r12             #  40    0x10cea0  3      OPC=addq_r64_m64    
  addq $0x10, %rax              #  41    0x10cea3  4      OPC=addq_r64_imm8   
  cmpq %rdx, %rax               #  42    0x10cea7  3      OPC=cmpq_r64_r64    
  jne .L_10cea0                 #  43    0x10ceaa  2      OPC=jne_label       
  cmpq %rbx, %r12               #  44    0x10ceac  3      OPC=cmpq_r64_r64    
  jbe .L_10cf6c                 #  45    0x10ceaf  6      OPC=jbe_label_1     
  movq %rsp, -0x40(%rbp)        #  46    0x10ceb5  4      OPC=movq_m64_r64    
  movslq %r13d, %rdx            #  47    0x10ceb9  3      OPC=movslq_r64_r32  
  shlq $0x4, %rdx               #  48    0x10cebc  4      OPC=shlq_r64_imm8   
  leaq 0x10(%rdx), %rax         #  49    0x10cec0  4      OPC=leaq_r64_m16    
  subq %rax, %rsp               #  50    0x10cec4  3      OPC=subq_r64_r64    
  movq %rsp, %rdi               #  51    0x10cec7  3      OPC=movq_r64_r64    
  movq %r15, %rsi               #  52    0x10ceca  3      OPC=movq_r64_r64    
  callq .__GI_memcpy            #  53    0x10cecd  5      OPC=callq_label     
  movq %rsp, -0x38(%rbp)        #  54    0x10ced2  4      OPC=movq_m64_r64    
  movq %rbx, %r15               #  55    0x10ced6  3      OPC=movq_r64_r64    
  jmpq .L_10cee7                #  56    0x10ced9  2      OPC=jmpq_label      
.L_10cedb:                      #        0x10cedb  0      OPC=<label>         
  subq %rax, %r15               #  57    0x10cedb  3      OPC=subq_r64_r64    
  subl $0x1, %r13d              #  58    0x10cede  4      OPC=subl_r32_imm8   
  addq $0x10, -0x38(%rbp)       #  59    0x10cee2  5      OPC=addq_m64_imm8   
.L_10cee7:                      #        0x10cee7  0      OPC=<label>         
  movq -0x38(%rbp), %rax        #  60    0x10cee7  4      OPC=movq_r64_m64    
  movq 0x8(%rax), %rax          #  61    0x10ceeb  4      OPC=movq_r64_m64    
  cmpq %r15, %rax               #  62    0x10ceef  3      OPC=cmpq_r64_r64    
  jbe .L_10cedb                 #  63    0x10cef2  2      OPC=jbe_label       
  movq -0x38(%rbp), %rcx        #  64    0x10cef4  4      OPC=movq_r64_m64    
  addq %r15, (%rcx)             #  65    0x10cef8  3      OPC=addq_m64_r64    
  subq %r15, %rax               #  66    0x10cefb  3      OPC=subq_r64_r64    
  movq %rax, 0x8(%rcx)          #  67    0x10cefe  4      OPC=movq_m64_r64    
.L_10cf02:                      #        0x10cf02  0      OPC=<label>         
  movl %r13d, %edx              #  68    0x10cf02  3      OPC=movl_r32_r32    
  movq -0x38(%rbp), %rsi        #  69    0x10cf05  4      OPC=movq_r64_m64    
  movl %r14d, %edi              #  70    0x10cf09  3      OPC=movl_r32_r32    
  callq .readv                  #  71    0x10cf0c  5      OPC=callq_label     
  movq %rax, %r15               #  72    0x10cf11  3      OPC=movq_r64_r64    
  cmpq $0xff, %rax              #  73    0x10cf14  4      OPC=cmpq_r64_imm8   
  jne .L_10cf29                 #  74    0x10cf18  2      OPC=jne_label       
  movq 0x27df5f(%rip), %rax     #  75    0x10cf1a  7      OPC=movq_r64_m64    
  cmpl $0x4, (%rax)             #  76    0x10cf21  3      OPC=cmpl_m32_imm8   
  nop                           #  77    0x10cf24  1      OPC=nop             
  jne .L_10cf33                 #  78    0x10cf25  2      OPC=jne_label       
  jmpq .L_10cf02                #  79    0x10cf27  2      OPC=jmpq_label      
.L_10cf29:                      #        0x10cf29  0      OPC=<label>         
  testq %rax, %rax              #  80    0x10cf29  3      OPC=testq_r64_r64   
  jg .L_10cf53                  #  81    0x10cf2c  2      OPC=jg_label        
  testq %rax, %rax              #  82    0x10cf2e  3      OPC=testq_r64_r64   
  jns .L_10cf63                 #  83    0x10cf31  2      OPC=jns_label       
.L_10cf33:                      #        0x10cf33  0      OPC=<label>         
  movq 0x27df46(%rip), %rax     #  84    0x10cf33  7      OPC=movq_r64_m64    
  cmpl $0xb, (%rax)             #  85    0x10cf3a  3      OPC=cmpl_m32_imm8   
  nop                           #  86    0x10cf3d  1      OPC=nop             
  jne .L_10cf60                 #  87    0x10cf3e  2      OPC=jne_label       
  movl $0xc8, %esi              #  88    0x10cf40  5      OPC=movl_r32_imm32  
  movl %r14d, %edi              #  89    0x10cf45  3      OPC=movl_r32_r32    
  callq .wait_on_socket         #  90    0x10cf48  5      OPC=callq_label     
  testl %eax, %eax              #  91    0x10cf4d  2      OPC=testl_r32_r32   
  jg .L_10cf02                  #  92    0x10cf4f  2      OPC=jg_label        
  jmpq .L_10cf60                #  93    0x10cf51  2      OPC=jmpq_label      
.L_10cf53:                      #        0x10cf53  0      OPC=<label>         
  addq %rax, %rbx               #  94    0x10cf53  3      OPC=addq_r64_r64    
  cmpq %rbx, %r12               #  95    0x10cf56  3      OPC=cmpq_r64_r64    
  ja .L_10cee7                  #  96    0x10cf59  2      OPC=ja_label        
  testq %rax, %rax              #  97    0x10cf5b  3      OPC=testq_r64_r64   
  jns .L_10cf63                 #  98    0x10cf5e  2      OPC=jns_label       
.L_10cf60:                      #        0x10cf60  0      OPC=<label>         
  movq %r15, %rbx               #  99    0x10cf60  3      OPC=movq_r64_r64    
.L_10cf63:                      #        0x10cf63  0      OPC=<label>         
  movq -0x40(%rbp), %rsp        #  100   0x10cf63  4      OPC=movq_r64_m64    
  jmpq .L_10cf6c                #  101   0x10cf67  2      OPC=jmpq_label      
.L_10cf69:                      #        0x10cf69  0      OPC=<label>         
  movq %rax, %rbx               #  102   0x10cf69  3      OPC=movq_r64_r64    
.L_10cf6c:                      #        0x10cf6c  0      OPC=<label>         
  movq %rbx, %rax               #  103   0x10cf6c  3      OPC=movq_r64_r64    
  leaq -0x28(%rbp), %rsp        #  104   0x10cf6f  4      OPC=leaq_r64_m16    
  popq %rbx                     #  105   0x10cf73  1      OPC=popq_r64_1      
  popq %r12                     #  106   0x10cf74  2      OPC=popq_r64_1      
  popq %r13                     #  107   0x10cf76  2      OPC=popq_r64_1      
  popq %r14                     #  108   0x10cf78  2      OPC=popq_r64_1      
  popq %r15                     #  109   0x10cf7a  2      OPC=popq_r64_1      
  popq %rbp                     #  110   0x10cf7c  1      OPC=popq_r64_1      
  retq                          #  111   0x10cf7d  1      OPC=retq            
                                                                              
.size __readvall, .-__readvall

