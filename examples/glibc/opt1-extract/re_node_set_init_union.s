  .text
  .globl re_node_set_init_union
  .type re_node_set_init_union, @function

#! file-offset 0xbbe23
#! rip-offset  0xbbe23
#! capacity    405 bytes

# Text                          #  Line  RIP      Bytes  Opcode              
.re_node_set_init_union:        #        0xbbe23  0      OPC=<label>         
  pushq %r15                    #  1     0xbbe23  2      OPC=pushq_r64_1     
  pushq %r14                    #  2     0xbbe25  2      OPC=pushq_r64_1     
  pushq %r13                    #  3     0xbbe27  2      OPC=pushq_r64_1     
  pushq %r12                    #  4     0xbbe29  2      OPC=pushq_r64_1     
  pushq %rbp                    #  5     0xbbe2b  1      OPC=pushq_r64_1     
  pushq %rbx                    #  6     0xbbe2c  1      OPC=pushq_r64_1     
  subq $0x8, %rsp               #  7     0xbbe2d  4      OPC=subq_r64_imm8   
  movq %rdi, %r15               #  8     0xbbe31  3      OPC=movq_r64_r64    
  movq %rsi, %r13               #  9     0xbbe34  3      OPC=movq_r64_r64    
  movq %rdx, %r12               #  10    0xbbe37  3      OPC=movq_r64_r64    
  testq %rsi, %rsi              #  11    0xbbe3a  3      OPC=testq_r64_r64   
  je .L_bbeab                   #  12    0xbbe3d  2      OPC=je_label        
  movl 0x4(%rsi), %edi          #  13    0xbbe3f  3      OPC=movl_r32_m32    
  testl %edi, %edi              #  14    0xbbe42  2      OPC=testl_r32_r32   
  setg %dl                      #  15    0xbbe44  3      OPC=setg_r8         
  testq %r12, %r12              #  16    0xbbe47  3      OPC=testq_r64_r64   
  je .L_bbe97                   #  17    0xbbe4a  2      OPC=je_label        
  testb %dl, %dl                #  18    0xbbe4c  2      OPC=testb_r8_r8     
  je .L_bbe97                   #  19    0xbbe4e  2      OPC=je_label        
  movl 0x4(%r12), %eax          #  20    0xbbe50  5      OPC=movl_r32_m32    
  testl %eax, %eax              #  21    0xbbe55  2      OPC=testl_r32_r32   
  jle .L_bbe97                  #  22    0xbbe57  2      OPC=jle_label       
  addl %edi, %eax               #  23    0xbbe59  2      OPC=addl_r32_r32    
  movl %eax, (%r15)             #  24    0xbbe5b  3      OPC=movl_m32_r32    
  cltq                          #  25    0xbbe5e  2      OPC=cltq            
  leaq (,%rax,4), %rdi          #  26    0xbbe60  8      OPC=leaq_r64_m16    
  callq .memalign_plt           #  27    0xbbe68  5      OPC=callq_label     
  movq %rax, %rdx               #  28    0xbbe6d  3      OPC=movq_r64_r64    
  movq %rax, 0x8(%r15)          #  29    0xbbe70  4      OPC=movq_m64_r64    
  movl $0xc, %eax               #  30    0xbbe74  5      OPC=movl_r32_imm32  
  testq %rdx, %rdx              #  31    0xbbe79  3      OPC=testq_r64_r64   
  je .L_bbfa9                   #  32    0xbbe7c  6      OPC=je_label_1      
  movl $0x1, %edx               #  33    0xbbe82  5      OPC=movl_r32_imm32  
  movl $0x0, %ebp               #  34    0xbbe87  5      OPC=movl_r32_imm32  
  movl $0x0, %r14d              #  35    0xbbe8c  6      OPC=movl_r32_imm32  
  jmpq .L_bbf24                 #  36    0xbbe92  5      OPC=jmpq_label_1    
.L_bbe97:                       #        0xbbe97  0      OPC=<label>         
  testb %dl, %dl                #  37    0xbbe97  2      OPC=testb_r8_r8     
  je .L_bbeab                   #  38    0xbbe99  2      OPC=je_label        
  movq %r13, %rsi               #  39    0xbbe9b  3      OPC=movq_r64_r64    
  movq %r15, %rdi               #  40    0xbbe9e  3      OPC=movq_r64_r64    
  callq .re_node_set_init_copy  #  41    0xbbea1  5      OPC=callq_label     
  jmpq .L_bbfa9                 #  42    0xbbea6  5      OPC=jmpq_label_1    
.L_bbeab:                       #        0xbbeab  0      OPC=<label>         
  testq %r12, %r12              #  43    0xbbeab  3      OPC=testq_r64_r64   
  je .L_bbec8                   #  44    0xbbeae  2      OPC=je_label        
  cmpl $0x0, 0x4(%r12)          #  45    0xbbeb0  6      OPC=cmpl_m32_imm8   
  jle .L_bbec8                  #  46    0xbbeb6  2      OPC=jle_label       
  movq %r12, %rsi               #  47    0xbbeb8  3      OPC=movq_r64_r64    
  movq %r15, %rdi               #  48    0xbbebb  3      OPC=movq_r64_r64    
  callq .re_node_set_init_copy  #  49    0xbbebe  5      OPC=callq_label     
  jmpq .L_bbfa9                 #  50    0xbbec3  5      OPC=jmpq_label_1    
.L_bbec8:                       #        0xbbec8  0      OPC=<label>         
  movq $0x0, (%r15)             #  51    0xbbec8  7      OPC=movq_m64_imm32  
  movq $0x0, 0x8(%r15)          #  52    0xbbecf  8      OPC=movq_m64_imm32  
  movl $0x0, %eax               #  53    0xbbed7  5      OPC=movl_r32_imm32  
  jmpq .L_bbfa9                 #  54    0xbbedc  5      OPC=jmpq_label_1    
.L_bbee1:                       #        0xbbee1  0      OPC=<label>         
  movslq %r14d, %rax            #  55    0xbbee1  3      OPC=movslq_r64_r32  
  movq 0x8(%r13), %rcx          #  56    0xbbee4  4      OPC=movq_r64_m64    
  movl (%rcx,%rax,4), %ecx      #  57    0xbbee8  3      OPC=movl_r32_m32    
  movslq %ebp, %rax             #  58    0xbbeeb  3      OPC=movslq_r64_r32  
  movq 0x8(%r12), %rsi          #  59    0xbbeee  5      OPC=movq_r64_m64    
  movl (%rsi,%rax,4), %eax      #  60    0xbbef3  3      OPC=movl_r32_m32    
  cmpl %eax, %ecx               #  61    0xbbef6  2      OPC=cmpl_r32_r32    
  jle .L_bbf09                  #  62    0xbbef8  2      OPC=jle_label       
  addl $0x1, %ebp               #  63    0xbbefa  3      OPC=addl_r32_imm8   
  movslq %ebx, %rbx             #  64    0xbbefd  3      OPC=movslq_r64_r32  
  movq 0x8(%r15), %rcx          #  65    0xbbf00  4      OPC=movq_r64_m64    
  movl %eax, (%rcx,%rbx,4)      #  66    0xbbf04  3      OPC=movl_m32_r32    
  jmpq .L_bbf21                 #  67    0xbbf07  2      OPC=jmpq_label      
.L_bbf09:                       #        0xbbf09  0      OPC=<label>         
  cmpl %eax, %ecx               #  68    0xbbf09  2      OPC=cmpl_r32_r32    
  sete %al                      #  69    0xbbf0b  3      OPC=sete_r8         
  movzbl %al, %eax              #  70    0xbbf0e  3      OPC=movzbl_r32_r8   
  addl %eax, %ebp               #  71    0xbbf11  2      OPC=addl_r32_r32    
  addl $0x1, %r14d              #  72    0xbbf13  4      OPC=addl_r32_imm8   
  movslq %ebx, %rbx             #  73    0xbbf17  3      OPC=movslq_r64_r32  
  movq 0x8(%r15), %rax          #  74    0xbbf1a  4      OPC=movq_r64_m64    
  movl %ecx, (%rax,%rbx,4)      #  75    0xbbf1e  3      OPC=movl_m32_r32    
.L_bbf21:                       #        0xbbf21  0      OPC=<label>         
  addl $0x1, %edx               #  76    0xbbf21  3      OPC=addl_r32_imm8   
.L_bbf24:                       #        0xbbf24  0      OPC=<label>         
  leal -0x1(%rdx), %ebx         #  77    0xbbf24  3      OPC=leal_r32_m16    
  movl 0x4(%r13), %eax          #  78    0xbbf27  4      OPC=movl_r32_m32    
  cmpl %eax, %r14d              #  79    0xbbf2b  3      OPC=cmpl_r32_r32    
  jge .L_bbf9e                  #  80    0xbbf2e  2      OPC=jge_label       
  cmpl 0x4(%r12), %ebp          #  81    0xbbf30  5      OPC=cmpl_r32_m32    
  jl .L_bbee1                   #  82    0xbbf35  2      OPC=jl_label        
  jmpq .L_bbf70                 #  83    0xbbf37  2      OPC=jmpq_label      
.L_bbf39:                       #        0xbbf39  0      OPC=<label>         
  movslq %ebx, %rcx             #  84    0xbbf39  3      OPC=movslq_r64_r32  
  movq 0x8(%r15), %rdx          #  85    0xbbf3c  4      OPC=movq_r64_m64    
  leaq (%rdx,%rcx,4), %rdi      #  86    0xbbf40  4      OPC=leaq_r64_m16    
  subl %ebp, %eax               #  87    0xbbf44  2      OPC=subl_r32_r32    
  movslq %eax, %rdx             #  88    0xbbf46  3      OPC=movslq_r64_r32  
  shlq $0x2, %rdx               #  89    0xbbf49  4      OPC=shlq_r64_imm8   
  movslq %ebp, %rcx             #  90    0xbbf4d  3      OPC=movslq_r64_r32  
  movq 0x8(%r12), %rax          #  91    0xbbf50  5      OPC=movq_r64_m64    
  leaq (%rax,%rcx,4), %rsi      #  92    0xbbf55  4      OPC=leaq_r64_m16    
  callq .__GI_memcpy            #  93    0xbbf59  5      OPC=callq_label     
  subl %ebp, %ebx               #  94    0xbbf5e  2      OPC=subl_r32_r32    
  addl 0x4(%r12), %ebx          #  95    0xbbf60  5      OPC=addl_r32_m32    
.L_bbf65:                       #        0xbbf65  0      OPC=<label>         
  movl %ebx, 0x4(%r15)          #  96    0xbbf65  4      OPC=movl_m32_r32    
  movl $0x0, %eax               #  97    0xbbf69  5      OPC=movl_r32_imm32  
  jmpq .L_bbfa9                 #  98    0xbbf6e  2      OPC=jmpq_label      
.L_bbf70:                       #        0xbbf70  0      OPC=<label>         
  movslq %ebx, %rcx             #  99    0xbbf70  3      OPC=movslq_r64_r32  
  movq 0x8(%r15), %rdx          #  100   0xbbf73  4      OPC=movq_r64_m64    
  leaq (%rdx,%rcx,4), %rdi      #  101   0xbbf77  4      OPC=leaq_r64_m16    
  subl %r14d, %eax              #  102   0xbbf7b  3      OPC=subl_r32_r32    
  movslq %eax, %rdx             #  103   0xbbf7e  3      OPC=movslq_r64_r32  
  shlq $0x2, %rdx               #  104   0xbbf81  4      OPC=shlq_r64_imm8   
  movslq %r14d, %rcx            #  105   0xbbf85  3      OPC=movslq_r64_r32  
  movq 0x8(%r13), %rax          #  106   0xbbf88  4      OPC=movq_r64_m64    
  leaq (%rax,%rcx,4), %rsi      #  107   0xbbf8c  4      OPC=leaq_r64_m16    
  callq .__GI_memcpy            #  108   0xbbf90  5      OPC=callq_label     
  subl %r14d, %ebx              #  109   0xbbf95  3      OPC=subl_r32_r32    
  addl 0x4(%r13), %ebx          #  110   0xbbf98  4      OPC=addl_r32_m32    
  jmpq .L_bbf65                 #  111   0xbbf9c  2      OPC=jmpq_label      
.L_bbf9e:                       #        0xbbf9e  0      OPC=<label>         
  movl 0x4(%r12), %eax          #  112   0xbbf9e  5      OPC=movl_r32_m32    
  cmpl %ebp, %eax               #  113   0xbbfa3  2      OPC=cmpl_r32_r32    
  jle .L_bbf65                  #  114   0xbbfa5  2      OPC=jle_label       
  jmpq .L_bbf39                 #  115   0xbbfa7  2      OPC=jmpq_label      
.L_bbfa9:                       #        0xbbfa9  0      OPC=<label>         
  addq $0x8, %rsp               #  116   0xbbfa9  4      OPC=addq_r64_imm8   
  popq %rbx                     #  117   0xbbfad  1      OPC=popq_r64_1      
  popq %rbp                     #  118   0xbbfae  1      OPC=popq_r64_1      
  popq %r12                     #  119   0xbbfaf  2      OPC=popq_r64_1      
  popq %r13                     #  120   0xbbfb1  2      OPC=popq_r64_1      
  popq %r14                     #  121   0xbbfb3  2      OPC=popq_r64_1      
  popq %r15                     #  122   0xbbfb5  2      OPC=popq_r64_1      
  retq                          #  123   0xbbfb7  1      OPC=retq            
                                                                             
.size re_node_set_init_union, .-re_node_set_init_union

