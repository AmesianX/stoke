  .text
  .globl ext_wmatch
  .type ext_wmatch, @function

#! file-offset 0xb5d81
#! rip-offset  0xb5d81
#! capacity    1955 bytes

# Text                         #  Line  RIP      Bytes  Opcode                
.ext_wmatch:                   #        0xb5d81  0      OPC=<label>           
  pushq %rbp                   #  1     0xb5d81  1      OPC=pushq_r64_1       
  movq %rsp, %rbp              #  2     0xb5d82  3      OPC=movq_r64_r64      
  pushq %r15                   #  3     0xb5d85  2      OPC=pushq_r64_1       
  pushq %r14                   #  4     0xb5d87  2      OPC=pushq_r64_1       
  pushq %r13                   #  5     0xb5d89  2      OPC=pushq_r64_1       
  pushq %r12                   #  6     0xb5d8b  2      OPC=pushq_r64_1       
  pushq %rbx                   #  7     0xb5d8d  1      OPC=pushq_r64_1       
  subq $0x68, %rsp             #  8     0xb5d8e  4      OPC=subq_r64_imm8     
  movl %edi, %r13d             #  9     0xb5d92  3      OPC=movl_r32_r32      
  movl %edi, -0x80(%rbp)       #  10    0xb5d95  3      OPC=movl_m32_r32      
  movq %rsi, %rbx              #  11    0xb5d98  3      OPC=movq_r64_r64      
  movq %rsi, -0x88(%rbp)       #  12    0xb5d9b  7      OPC=movq_m64_r64      
  movq %rdx, %r14              #  13    0xb5da2  3      OPC=movq_r64_r64      
  movq %rcx, -0x60(%rbp)       #  14    0xb5da5  4      OPC=movq_m64_r64      
  movl %r8d, -0x54(%rbp)       #  15    0xb5da9  4      OPC=movl_m32_r32      
  movl %r9d, -0x74(%rbp)       #  16    0xb5dad  4      OPC=movl_m32_r32      
  movq 0x10(%rbp), %r15        #  17    0xb5db1  4      OPC=movq_r64_m64      
  movq $0x0, -0x38(%rbp)       #  18    0xb5db5  8      OPC=movq_m64_imm32    
  movq %rsi, %rdi              #  19    0xb5dbd  3      OPC=movq_r64_r64      
  callq .wcslen                #  20    0xb5dc0  5      OPC=callq_label       
  movq %rax, -0x68(%rbp)       #  21    0xb5dc5  4      OPC=movq_m64_r64      
  leaq 0x4(%rbx), %rsi         #  22    0xb5dc9  4      OPC=leaq_r64_m16      
  movq %rsi, -0x48(%rbp)       #  23    0xb5dcd  4      OPC=movq_m64_r64      
  movl 0x4(%rbx), %eax         #  24    0xb5dd1  3      OPC=movl_r32_m32      
  testl %eax, %eax             #  25    0xb5dd4  2      OPC=testl_r32_r32     
  je .L_b6453                  #  26    0xb5dd6  6      OPC=je_label_1        
  movq %rsi, %rbx              #  27    0xb5ddc  3      OPC=movq_r64_r64      
  movl $0x0, -0x58(%rbp)       #  28    0xb5ddf  7      OPC=movl_m32_imm32    
  leaq -0x38(%rbp), %rsi       #  29    0xb5de6  4      OPC=leaq_r64_m16      
  movq %rsi, -0x50(%rbp)       #  30    0xb5dea  4      OPC=movq_m64_r64      
  movl $0x0, %r12d             #  31    0xb5dee  6      OPC=movl_r32_imm32    
  movl %r13d, %esi             #  32    0xb5df4  3      OPC=movl_r32_r32      
  subl $0x3f, %esi             #  33    0xb5df7  3      OPC=subl_r32_imm8     
  movl %esi, -0x70(%rbp)       #  34    0xb5dfa  3      OPC=movl_m32_r32      
  jmpq .L_b5e0a                #  35    0xb5dfd  2      OPC=jmpq_label        
.L_b5dff:                      #        0xb5dff  0      OPC=<label>           
  movl 0x4(%rax), %eax         #  36    0xb5dff  3      OPC=movl_r32_m32      
  testl %eax, %eax             #  37    0xb5e02  2      OPC=testl_r32_r32     
  je .L_b63cd                  #  38    0xb5e04  6      OPC=je_label_1        
.L_b5e0a:                      #        0xb5e0a  0      OPC=<label>           
  cmpl $0x5b, %eax             #  39    0xb5e0a  3      OPC=cmpl_r32_imm8     
  jne .L_b5e78                 #  40    0xb5e0d  2      OPC=jne_label         
  cmpl $0x0, 0x2d8356(%rip)    #  41    0xb5e0f  7      OPC=cmpl_m32_imm8     
  jne .L_b5e33                 #  42    0xb5e16  2      OPC=jne_label         
  leaq 0xa348d(%rip), %rdi     #  43    0xb5e18  7      OPC=leaq_r64_m16      
  callq .getenv                #  44    0xb5e1f  5      OPC=callq_label       
  cmpq $0x1, %rax              #  45    0xb5e24  4      OPC=cmpq_r64_imm8     
  sbbl %eax, %eax              #  46    0xb5e28  2      OPC=sbbl_r32_r32      
  orl $0x1, %eax               #  47    0xb5e2a  3      OPC=orl_r32_imm8      
  movl %eax, 0x2d8339(%rip)    #  48    0xb5e2d  6      OPC=movl_m32_r32      
.L_b5e33:                      #        0xb5e33  0      OPC=<label>           
  movl 0x4(%rbx), %eax         #  49    0xb5e33  3      OPC=movl_r32_m32      
  cmpl $0x21, %eax             #  50    0xb5e36  3      OPC=cmpl_r32_imm8     
  je .L_b5e4f                  #  51    0xb5e39  2      OPC=je_label          
  cmpl $0x5e, %eax             #  52    0xb5e3b  3      OPC=cmpl_r32_imm8     
  jne .L_b5e49                 #  53    0xb5e3e  2      OPC=jne_label         
  cmpl $0x0, 0x2d8325(%rip)    #  54    0xb5e40  7      OPC=cmpl_m32_imm8     
  js .L_b5e4f                  #  55    0xb5e47  2      OPC=js_label          
.L_b5e49:                      #        0xb5e49  0      OPC=<label>           
  leaq 0x4(%rbx), %rax         #  56    0xb5e49  4      OPC=leaq_r64_m16      
  jmpq .L_b5e53                #  57    0xb5e4d  2      OPC=jmpq_label        
.L_b5e4f:                      #        0xb5e4f  0      OPC=<label>           
  leaq 0x8(%rbx), %rax         #  58    0xb5e4f  4      OPC=leaq_r64_m16      
.L_b5e53:                      #        0xb5e53  0      OPC=<label>           
  leaq 0x4(%rax), %rdx         #  59    0xb5e53  4      OPC=leaq_r64_m16      
  cmpl $0x5d, (%rax)           #  60    0xb5e57  3      OPC=cmpl_m32_imm8     
  cmoveq %rdx, %rax            #  61    0xb5e5a  4      OPC=cmoveq_r64_r64    
  jmpq .L_b5e6c                #  62    0xb5e5e  2      OPC=jmpq_label        
.L_b5e60:                      #        0xb5e60  0      OPC=<label>           
  addq $0x4, %rax              #  63    0xb5e60  4      OPC=addq_r64_imm8     
  testl %edx, %edx             #  64    0xb5e64  2      OPC=testl_r32_r32     
  je .L_b63d5                  #  65    0xb5e66  6      OPC=je_label_1        
.L_b5e6c:                      #        0xb5e6c  0      OPC=<label>           
  movl (%rax), %edx            #  66    0xb5e6c  2      OPC=movl_r32_m32      
  cmpl $0x5d, %edx             #  67    0xb5e6e  3      OPC=cmpl_r32_imm8     
  jne .L_b5e60                 #  68    0xb5e71  2      OPC=jne_label         
  jmpq .L_b607b                #  69    0xb5e73  5      OPC=jmpq_label_1      
.L_b5e78:                      #        0xb5e78  0      OPC=<label>           
  leal -0x3f(%rax), %edx       #  70    0xb5e78  3      OPC=leal_r32_m16      
  cmpl $0x1, %edx              #  71    0xb5e7b  3      OPC=cmpl_r32_imm8     
  setbe %cl                    #  72    0xb5e7e  3      OPC=setbe_r8          
  leal -0x2a(%rax), %edx       #  73    0xb5e81  3      OPC=leal_r32_m16      
  cmpl $0x1, %edx              #  74    0xb5e84  3      OPC=cmpl_r32_imm8     
  setbe %dl                    #  75    0xb5e87  3      OPC=setbe_r8          
  orb %dl, %cl                 #  76    0xb5e8a  2      OPC=orb_r8_r8         
  jne .L_b5e93                 #  77    0xb5e8c  2      OPC=jne_label         
  cmpl $0x21, %eax             #  78    0xb5e8e  3      OPC=cmpl_r32_imm8     
  jne .L_b5eaf                 #  79    0xb5e91  2      OPC=jne_label         
.L_b5e93:                      #        0xb5e93  0      OPC=<label>           
  cmpl $0x28, 0x4(%rbx)        #  80    0xb5e93  4      OPC=cmpl_m32_imm8     
  jne .L_b5eaf                 #  81    0xb5e97  2      OPC=jne_label         
  leaq 0x4(%rbx), %rdx         #  82    0xb5e99  4      OPC=leaq_r64_m16      
  addl $0x1, %r12d             #  83    0xb5e9d  4      OPC=addl_r32_imm8     
  jns .L_b6507                 #  84    0xb5ea1  6      OPC=jns_label_1       
  movq %rdx, %rbx              #  85    0xb5ea7  3      OPC=movq_r64_r64      
  jmpq .L_b6088                #  86    0xb5eaa  5      OPC=jmpq_label_1      
.L_b5eaf:                      #        0xb5eaf  0      OPC=<label>           
  cmpl $0x29, %eax             #  87    0xb5eaf  3      OPC=cmpl_r32_imm8     
  jne .L_b5f92                 #  88    0xb5eb2  6      OPC=jne_label_1       
  leal -0x1(%r12), %r13d       #  89    0xb5eb8  5      OPC=leal_r32_m16      
  testl %r12d, %r12d           #  90    0xb5ebd  3      OPC=testl_r32_r32     
  jne .L_b6070                 #  91    0xb5ec0  6      OPC=jne_label_1       
  movq -0x68(%rbp), %rax       #  92    0xb5ec6  4      OPC=movq_r64_m64      
  cmpl $0x1, -0x70(%rbp)       #  93    0xb5eca  4      OPC=cmpl_m32_imm8     
  jbe .L_b5edf                 #  94    0xb5ece  2      OPC=jbe_label         
  movq %rbx, %rax              #  95    0xb5ed0  3      OPC=movq_r64_r64      
  subq -0x48(%rbp), %rax       #  96    0xb5ed3  4      OPC=subq_r64_m64      
  sarq $0x2, %rax              #  97    0xb5ed7  4      OPC=sarq_r64_imm8     
  addq $0x1, %rax              #  98    0xb5edb  4      OPC=addq_r64_imm8     
.L_b5edf:                      #        0xb5edf  0      OPC=<label>           
  leaq 0x10(,%rax,4), %r12     #  99    0xb5edf  8      OPC=leaq_r64_m16      
  leaq (%r12,%r15,1), %rdi     #  100   0xb5ee7  4      OPC=leaq_r64_m16      
  cmpq $0x1000, %rdi           #  101   0xb5eeb  7      OPC=cmpq_r64_imm32    
  jbe .L_b5f23                 #  102   0xb5ef2  2      OPC=jbe_label         
  callq .__libc_alloca_cutoff  #  103   0xb5ef4  5      OPC=callq_label       
  testl %eax, %eax             #  104   0xb5ef9  2      OPC=testl_r32_r32     
  sete %al                     #  105   0xb5efb  3      OPC=sete_r8           
  movzbl %al, %eax             #  106   0xb5efe  3      OPC=movzbl_r32_r8     
  movl %eax, -0x78(%rbp)       #  107   0xb5f01  3      OPC=movl_m32_r32      
  jne .L_b5f23                 #  108   0xb5f04  2      OPC=jne_label         
  movq %r12, %rdi              #  109   0xb5f06  3      OPC=movq_r64_r64      
  callq .memalign_plt          #  110   0xb5f09  5      OPC=callq_label       
  movq %rax, %r12              #  111   0xb5f0e  3      OPC=movq_r64_r64      
  testq %rax, %rax             #  112   0xb5f11  3      OPC=testq_r64_r64     
  je .L_b63dd                  #  113   0xb5f14  6      OPC=je_label_1        
  movl $0x1, -0x58(%rbp)       #  114   0xb5f1a  7      OPC=movl_m32_imm32    
  jmpq .L_b5f4b                #  115   0xb5f21  2      OPC=jmpq_label        
.L_b5f23:                      #        0xb5f23  0      OPC=<label>           
  movq %rsp, %rdx              #  116   0xb5f23  3      OPC=movq_r64_r64      
  leaq 0x1e(%r12), %rax        #  117   0xb5f26  5      OPC=leaq_r64_m16      
  andq $0xf0, %rax             #  118   0xb5f2b  4      OPC=andq_r64_imm8     
  subq %rax, %rsp              #  119   0xb5f2f  3      OPC=subq_r64_r64      
  leaq 0xf(%rsp), %r12         #  120   0xb5f32  5      OPC=leaq_r64_m16      
  andq $0xf0, %r12             #  121   0xb5f37  4      OPC=andq_r64_imm8     
  movq %rdx, %rax              #  122   0xb5f3b  3      OPC=movq_r64_r64      
  subq %rsp, %rax              #  123   0xb5f3e  3      OPC=subq_r64_r64      
  addq %rax, %r15              #  124   0xb5f41  3      OPC=addq_r64_r64      
  movl $0x0, -0x78(%rbp)       #  125   0xb5f44  7      OPC=movl_m32_imm32    
.L_b5f4b:                      #        0xb5f4b  0      OPC=<label>           
  movq $0x0, (%r12)            #  126   0xb5f4b  8      OPC=movq_m64_imm32    
  movl -0x78(%rbp), %eax       #  127   0xb5f53  3      OPC=movl_r32_m32      
  movl %eax, 0x8(%r12)         #  128   0xb5f56  5      OPC=movl_m32_r32      
  movq %rbx, %rdx              #  129   0xb5f5b  3      OPC=movq_r64_r64      
  movq -0x48(%rbp), %rax       #  130   0xb5f5e  4      OPC=movq_r64_m64      
  subq %rax, %rdx              #  131   0xb5f62  3      OPC=subq_r64_r64      
  sarq $0x2, %rdx              #  132   0xb5f65  4      OPC=sarq_r64_imm8     
  leaq 0xc(%r12), %rdi         #  133   0xb5f69  5      OPC=leaq_r64_m16      
  movq %rax, %rsi              #  134   0xb5f6e  3      OPC=movq_r64_r64      
  callq .wmempcpy              #  135   0xb5f71  5      OPC=callq_label       
  movl $0x0, (%rax)            #  136   0xb5f76  6      OPC=movl_m32_imm32    
  movq -0x50(%rbp), %rax       #  137   0xb5f7c  4      OPC=movq_r64_m64      
  movq %r12, (%rax)            #  138   0xb5f80  3      OPC=movq_m64_r64      
  movq %r12, -0x50(%rbp)       #  139   0xb5f83  4      OPC=movq_m64_r64      
  movq %rbx, %rax              #  140   0xb5f87  3      OPC=movq_r64_r64      
  movl %r13d, %r12d            #  141   0xb5f8a  3      OPC=movl_r32_r32      
  jmpq .L_b607b                #  142   0xb5f8d  5      OPC=jmpq_label_1      
.L_b5f92:                      #        0xb5f92  0      OPC=<label>           
  cmpl $0x7c, %eax             #  143   0xb5f92  3      OPC=cmpl_r32_imm8     
  jne .L_b6078                 #  144   0xb5f95  6      OPC=jne_label_1       
  testl %r12d, %r12d           #  145   0xb5f9b  3      OPC=testl_r32_r32     
  jne .L_b6078                 #  146   0xb5f9e  6      OPC=jne_label_1       
  movq -0x68(%rbp), %rax       #  147   0xb5fa4  4      OPC=movq_r64_m64      
  cmpl $0x1, -0x70(%rbp)       #  148   0xb5fa8  4      OPC=cmpl_m32_imm8     
  jbe .L_b5fbd                 #  149   0xb5fac  2      OPC=jbe_label         
  movq %rbx, %rax              #  150   0xb5fae  3      OPC=movq_r64_r64      
  subq -0x48(%rbp), %rax       #  151   0xb5fb1  4      OPC=subq_r64_m64      
  sarq $0x2, %rax              #  152   0xb5fb5  4      OPC=sarq_r64_imm8     
  addq $0x1, %rax              #  153   0xb5fb9  4      OPC=addq_r64_imm8     
.L_b5fbd:                      #        0xb5fbd  0      OPC=<label>           
  leaq 0x10(,%rax,4), %r13     #  154   0xb5fbd  8      OPC=leaq_r64_m16      
  leaq (%r13,%r15,1), %rdi     #  155   0xb5fc5  5      OPC=leaq_r64_m16      
  cmpq $0x1000, %rdi           #  156   0xb5fca  7      OPC=cmpq_r64_imm32    
  jbe .L_b6002                 #  157   0xb5fd1  2      OPC=jbe_label         
  callq .__libc_alloca_cutoff  #  158   0xb5fd3  5      OPC=callq_label       
  testl %eax, %eax             #  159   0xb5fd8  2      OPC=testl_r32_r32     
  sete %al                     #  160   0xb5fda  3      OPC=sete_r8           
  movzbl %al, %eax             #  161   0xb5fdd  3      OPC=movzbl_r32_r8     
  movl %eax, -0x78(%rbp)       #  162   0xb5fe0  3      OPC=movl_m32_r32      
  jne .L_b6002                 #  163   0xb5fe3  2      OPC=jne_label         
  movq %r13, %rdi              #  164   0xb5fe5  3      OPC=movq_r64_r64      
  callq .memalign_plt          #  165   0xb5fe8  5      OPC=callq_label       
  movq %rax, %r13              #  166   0xb5fed  3      OPC=movq_r64_r64      
  testq %rax, %rax             #  167   0xb5ff0  3      OPC=testq_r64_r64     
  je .L_b63e5                  #  168   0xb5ff3  6      OPC=je_label_1        
  movl $0x1, -0x58(%rbp)       #  169   0xb5ff9  7      OPC=movl_m32_imm32    
  jmpq .L_b6029                #  170   0xb6000  2      OPC=jmpq_label        
.L_b6002:                      #        0xb6002  0      OPC=<label>           
  movq %rsp, %rdx              #  171   0xb6002  3      OPC=movq_r64_r64      
  leaq 0x1e(%r13), %rax        #  172   0xb6005  4      OPC=leaq_r64_m16      
  andq $0xf0, %rax             #  173   0xb6009  4      OPC=andq_r64_imm8     
  subq %rax, %rsp              #  174   0xb600d  3      OPC=subq_r64_r64      
  leaq 0xf(%rsp), %r13         #  175   0xb6010  5      OPC=leaq_r64_m16      
  andq $0xf0, %r13             #  176   0xb6015  4      OPC=andq_r64_imm8     
  movq %rdx, %rax              #  177   0xb6019  3      OPC=movq_r64_r64      
  subq %rsp, %rax              #  178   0xb601c  3      OPC=subq_r64_r64      
  addq %rax, %r15              #  179   0xb601f  3      OPC=addq_r64_r64      
  movl $0x0, -0x78(%rbp)       #  180   0xb6022  7      OPC=movl_m32_imm32    
.L_b6029:                      #        0xb6029  0      OPC=<label>           
  movq $0x0, (%r13)            #  181   0xb6029  8      OPC=movq_m64_imm32    
  movl -0x78(%rbp), %eax       #  182   0xb6031  3      OPC=movl_r32_m32      
  movl %eax, 0x8(%r13)         #  183   0xb6034  4      OPC=movl_m32_r32      
  movq %rbx, %rdx              #  184   0xb6038  3      OPC=movq_r64_r64      
  movq -0x48(%rbp), %rax       #  185   0xb603b  4      OPC=movq_r64_m64      
  subq %rax, %rdx              #  186   0xb603f  3      OPC=subq_r64_r64      
  sarq $0x2, %rdx              #  187   0xb6042  4      OPC=sarq_r64_imm8     
  leaq 0xc(%r13), %rdi         #  188   0xb6046  4      OPC=leaq_r64_m16      
  movq %rax, %rsi              #  189   0xb604a  3      OPC=movq_r64_r64      
  callq .wmempcpy              #  190   0xb604d  5      OPC=callq_label       
  movl $0x0, (%rax)            #  191   0xb6052  6      OPC=movl_m32_imm32    
  movq -0x50(%rbp), %rax       #  192   0xb6058  4      OPC=movq_r64_m64      
  movq %r13, (%rax)            #  193   0xb605c  3      OPC=movq_m64_r64      
  movq %r13, -0x50(%rbp)       #  194   0xb605f  4      OPC=movq_m64_r64      
  leaq 0x4(%rbx), %rax         #  195   0xb6063  4      OPC=leaq_r64_m16      
  movq %rax, -0x48(%rbp)       #  196   0xb6067  4      OPC=movq_m64_r64      
  movq %rbx, %rax              #  197   0xb606b  3      OPC=movq_r64_r64      
  jmpq .L_b607b                #  198   0xb606e  2      OPC=jmpq_label        
.L_b6070:                      #        0xb6070  0      OPC=<label>           
  movq %rbx, %rax              #  199   0xb6070  3      OPC=movq_r64_r64      
  movl %r13d, %r12d            #  200   0xb6073  3      OPC=movl_r32_r32      
  jmpq .L_b607b                #  201   0xb6076  2      OPC=jmpq_label        
.L_b6078:                      #        0xb6078  0      OPC=<label>           
  movq %rbx, %rax              #  202   0xb6078  3      OPC=movq_r64_r64      
.L_b607b:                      #        0xb607b  0      OPC=<label>           
  leaq 0x4(%rax), %rbx         #  203   0xb607b  4      OPC=leaq_r64_m16      
  testl %r12d, %r12d           #  204   0xb607f  3      OPC=testl_r32_r32     
  jns .L_b5dff                 #  205   0xb6082  6      OPC=jns_label_1       
.L_b6088:                      #        0xb6088  0      OPC=<label>           
  movq -0x38(%rbp), %rax       #  206   0xb6088  4      OPC=movq_r64_m64      
  movq %rax, -0x50(%rbp)       #  207   0xb608c  4      OPC=movq_m64_r64      
  testq %rax, %rax             #  208   0xb6090  3      OPC=testq_r64_r64     
  jne .L_b60b4                 #  209   0xb6093  2      OPC=jne_label         
  leaq 0xa326e(%rip), %rcx     #  210   0xb6095  7      OPC=leaq_r64_m16      
  movl $0x474, %edx            #  211   0xb609c  5      OPC=movl_r32_imm32    
  leaq 0xa3214(%rip), %rsi     #  212   0xb60a1  7      OPC=leaq_r64_m16      
  leaq 0xa321c(%rip), %rdi     #  213   0xb60a8  7      OPC=leaq_r64_m16      
  callq .__assert_fail         #  214   0xb60af  5      OPC=callq_label       
.L_b60b4:                      #        0xb60b4  0      OPC=<label>           
  cmpl $0x29, -0x4(%rbx)       #  215   0xb60b4  4      OPC=cmpl_m32_imm8     
  je .L_b60d9                  #  216   0xb60b8  2      OPC=je_label          
  leaq 0xa3249(%rip), %rcx     #  217   0xb60ba  7      OPC=leaq_r64_m16      
  movl $0x475, %edx            #  218   0xb60c1  5      OPC=movl_r32_imm32    
  leaq 0xa31ef(%rip), %rsi     #  219   0xb60c6  7      OPC=leaq_r64_m16      
  leaq 0xa3204(%rip), %rdi     #  220   0xb60cd  7      OPC=leaq_r64_m16      
  callq .__assert_fail         #  221   0xb60d4  5      OPC=callq_label       
.L_b60d9:                      #        0xb60d9  0      OPC=<label>           
  movl -0x80(%rbp), %eax       #  222   0xb60d9  3      OPC=movl_r32_m32      
  subl $0x21, %eax             #  223   0xb60dc  3      OPC=subl_r32_imm8     
  cmpl $0x1f, %eax             #  224   0xb60df  3      OPC=cmpl_r32_imm8     
  ja .L_b63ae                  #  225   0xb60e2  6      OPC=ja_label_1        
  movl %eax, %eax              #  226   0xb60e8  2      OPC=movl_r32_r32      
  leaq 0x9e48b(%rip), %rdx     #  227   0xb60ea  7      OPC=leaq_r64_m16      
  movslq (%rdx,%rax,4), %rax   #  228   0xb60f1  4      OPC=movslq_r64_m32    
  addq %rax, %rdx              #  229   0xb60f5  3      OPC=addq_r64_r64      
  jmpq %rdx                    #  230   0xb60f8  2      OPC=jmpq_r64          
  cmpq -0x60(%rbp), %r14       #  231   0xb60fa  4      OPC=cmpq_r64_m64      
  ja .L_b63ed                  #  232   0xb60fe  6      OPC=ja_label_1        
  movl -0x74(%rbp), %ecx       #  233   0xb6104  3      OPC=movl_r32_m32      
  movl %ecx, %eax              #  234   0xb6107  2      OPC=movl_r32_r32      
  andl $0xfffffffb, %eax       #  235   0xb6109  6      OPC=andl_r32_imm32    
  nop                          #  236   0xb610f  1      OPC=nop               
  nop                          #  237   0xb6110  1      OPC=nop               
  nop                          #  238   0xb6111  1      OPC=nop               
  movl %ecx, %edx              #  239   0xb6112  2      OPC=movl_r32_r32      
  andl $0x1, %edx              #  240   0xb6114  3      OPC=andl_r32_imm8     
  movl %ecx, %esi              #  241   0xb6117  2      OPC=movl_r32_r32      
  cmovel %eax, %esi            #  242   0xb6119  3      OPC=cmovel_r32_r32    
  movl %esi, -0x48(%rbp)       #  243   0xb611c  3      OPC=movl_m32_r32      
  movl %ecx, %edx              #  244   0xb611f  2      OPC=movl_r32_r32      
  cmovnel %ecx, %eax           #  245   0xb6121  3      OPC=cmovnel_r32_r32   
  movl %eax, -0x68(%rbp)       #  246   0xb6124  3      OPC=movl_m32_r32      
  movq %r14, %r13              #  247   0xb6127  3      OPC=movq_r64_r64      
  andl $0x5, %edx              #  248   0xb612a  3      OPC=andl_r32_imm8     
  movl %edx, -0x74(%rbp)       #  249   0xb612d  3      OPC=movl_m32_r32      
  movq %rbx, -0x70(%rbp)       #  250   0xb6130  4      OPC=movq_m64_r64      
  movl -0x54(%rbp), %r12d      #  251   0xb6134  4      OPC=movl_r32_m32      
  jmpq .L_b63a5                #  252   0xb6138  5      OPC=jmpq_label_1      
  subq $0x8, %rsp              #  253   0xb613d  4      OPC=subq_r64_imm8     
  pushq %r15                   #  254   0xb6141  2      OPC=pushq_r64_1       
  movl $0x0, %r9d              #  255   0xb6143  6      OPC=movl_r32_imm32    
  movl -0x74(%rbp), %r8d       #  256   0xb6149  4      OPC=movl_r32_m32      
  movl -0x54(%rbp), %ecx       #  257   0xb614d  3      OPC=movl_r32_m32      
  movq -0x60(%rbp), %rdx       #  258   0xb6150  4      OPC=movq_r64_m64      
  movq %r14, %rsi              #  259   0xb6154  3      OPC=movq_r64_r64      
  movq %rbx, %rdi              #  260   0xb6157  3      OPC=movq_r64_r64      
  callq .internal_fnwmatch     #  261   0xb615a  5      OPC=callq_label       
  addq $0x10, %rsp             #  262   0xb615f  4      OPC=addq_r64_imm8     
  movl $0x0, %r12d             #  263   0xb6163  6      OPC=movl_r32_imm32    
  testl %eax, %eax             #  264   0xb6169  2      OPC=testl_r32_r32     
  je .L_b6423                  #  265   0xb616b  6      OPC=je_label_1        
  movl -0x74(%rbp), %edi       #  266   0xb6171  3      OPC=movl_r32_m32      
  movl %edi, %eax              #  267   0xb6174  2      OPC=movl_r32_r32      
  andl $0xfffffffb, %eax       #  268   0xb6176  6      OPC=andl_r32_imm32    
  nop                          #  269   0xb617c  1      OPC=nop               
  nop                          #  270   0xb617d  1      OPC=nop               
  nop                          #  271   0xb617e  1      OPC=nop               
  movl %eax, -0x68(%rbp)       #  272   0xb617f  3      OPC=movl_m32_r32      
  movl %edi, %r13d             #  273   0xb6182  3      OPC=movl_r32_r32      
  andl $0x1, %r13d             #  274   0xb6185  4      OPC=andl_r32_imm8     
  movl %edi, %esi              #  275   0xb6189  2      OPC=movl_r32_r32      
  cmovel %eax, %esi            #  276   0xb618b  3      OPC=cmovel_r32_r32    
  movl %esi, -0x48(%rbp)       #  277   0xb618e  3      OPC=movl_m32_r32      
  movl %eax, %esi              #  278   0xb6191  2      OPC=movl_r32_r32      
  movl %edi, %eax              #  279   0xb6193  2      OPC=movl_r32_r32      
  cmovnel %edi, %esi           #  280   0xb6195  3      OPC=cmovnel_r32_r32   
  movl %esi, -0x70(%rbp)       #  281   0xb6198  3      OPC=movl_m32_r32      
  movq -0x88(%rbp), %rsi       #  282   0xb619b  7      OPC=movq_r64_m64      
  subq $0x4, %rsi              #  283   0xb61a2  4      OPC=subq_r64_imm8     
  movq %rsi, -0x80(%rbp)       #  284   0xb61a6  4      OPC=movq_m64_r64      
  andl $0x5, %eax              #  285   0xb61aa  3      OPC=andl_r32_imm8     
  movl %eax, -0x88(%rbp)       #  286   0xb61ad  6      OPC=movl_m32_r32      
  movq %rbx, -0x50(%rbp)       #  287   0xb61b3  4      OPC=movq_m64_r64      
  movq -0x60(%rbp), %r12       #  288   0xb61b7  4      OPC=movq_r64_m64      
.L_b61af:                      #        0xb61bb  0      OPC=<label>           
  cmpq %r12, %r14              #  289   0xb61bb  3      OPC=cmpq_r64_r64      
  ja .L_b6261                  #  290   0xb61be  6      OPC=ja_label_1        
  movq %r14, %rbx              #  291   0xb61c4  3      OPC=movq_r64_r64      
.L_b61bb:                      #        0xb61c7  0      OPC=<label>           
  testl %r13d, %r13d           #  292   0xb61c7  3      OPC=testl_r32_r32     
  jne .L_b645e                 #  293   0xb61ca  6      OPC=jne_label_1       
  subq $0x8, %rsp              #  294   0xb61d0  4      OPC=subq_r64_imm8     
  movq -0x38(%rbp), %rax       #  295   0xb61d4  4      OPC=movq_r64_m64      
  leaq 0xc(%rax), %rdi         #  296   0xb61d8  4      OPC=leaq_r64_m16      
  pushq %r15                   #  297   0xb61dc  2      OPC=pushq_r64_1       
  movl $0x0, %r9d              #  298   0xb61de  6      OPC=movl_r32_imm32    
  movl -0x68(%rbp), %r8d       #  299   0xb61e4  4      OPC=movl_r32_m32      
  movl -0x54(%rbp), %ecx       #  300   0xb61e8  3      OPC=movl_r32_m32      
  movq %rbx, %rdx              #  301   0xb61eb  3      OPC=movq_r64_r64      
  movq %r14, %rsi              #  302   0xb61ee  3      OPC=movq_r64_r64      
  callq .internal_fnwmatch     #  303   0xb61f1  5      OPC=callq_label       
  addq $0x10, %rsp             #  304   0xb61f6  4      OPC=addq_r64_imm8     
  testl %eax, %eax             #  305   0xb61fa  2      OPC=testl_r32_r32     
  jne .L_b6254                 #  306   0xb61fc  2      OPC=jne_label         
.L_b61f2:                      #        0xb61fe  0      OPC=<label>           
  cmpq %r14, %rbx              #  307   0xb61fe  3      OPC=cmpq_r64_r64      
  je .L_b6495                  #  308   0xb6201  6      OPC=je_label_1        
  movl $0x0, %ecx              #  309   0xb6207  5      OPC=movl_r32_imm32    
  cmpl $0x2f, -0x4(%rbx)       #  310   0xb620c  4      OPC=cmpl_m32_imm8     
  jne .L_b64c8                 #  311   0xb6210  6      OPC=jne_label_1       
  cmpl $0x5, -0x88(%rbp)       #  312   0xb6216  7      OPC=cmpl_m32_imm8     
  sete %cl                     #  313   0xb621d  3      OPC=sete_r8           
  movzbl %cl, %ecx             #  314   0xb6220  3      OPC=movzbl_r32_r8     
  jmpq .L_b64c8                #  315   0xb6223  5      OPC=jmpq_label_1      
.L_b621c:                      #        0xb6228  0      OPC=<label>           
  cmpl $0x5, -0x88(%rbp)       #  316   0xb6228  7      OPC=cmpl_m32_imm8     
  sete %cl                     #  317   0xb622f  3      OPC=sete_r8           
  movzbl %cl, %ecx             #  318   0xb6232  3      OPC=movzbl_r32_r8     
.L_b6229:                      #        0xb6235  0      OPC=<label>           
  subq $0x8, %rsp              #  319   0xb6235  4      OPC=subq_r64_imm8     
  pushq %r15                   #  320   0xb6239  2      OPC=pushq_r64_1       
  movl $0x0, %r9d              #  321   0xb623b  6      OPC=movl_r32_imm32    
  movl -0x70(%rbp), %r8d       #  322   0xb6241  4      OPC=movl_r32_m32      
  movq %r12, %rdx              #  323   0xb6245  3      OPC=movq_r64_r64      
  movq %rbx, %rsi              #  324   0xb6248  3      OPC=movq_r64_r64      
  movq -0x80(%rbp), %rdi       #  325   0xb624b  4      OPC=movq_r64_m64      
  callq .internal_fnwmatch     #  326   0xb624f  5      OPC=callq_label       
  addq $0x10, %rsp             #  327   0xb6254  4      OPC=addq_r64_imm8     
  testl %eax, %eax             #  328   0xb6258  2      OPC=testl_r32_r32     
  je .L_b63f5                  #  329   0xb625a  6      OPC=je_label_1        
.L_b6254:                      #        0xb6260  0      OPC=<label>           
  addq $0x4, %rbx              #  330   0xb6260  4      OPC=addq_r64_imm8     
  cmpq %rbx, %r12              #  331   0xb6264  3      OPC=cmpq_r64_r64      
  jae .L_b61bb                 #  332   0xb6267  6      OPC=jae_label_1       
.L_b6261:                      #        0xb626d  0      OPC=<label>           
  movq -0x38(%rbp), %rax       #  333   0xb626d  4      OPC=movq_r64_m64      
  movq (%rax), %rax            #  334   0xb6271  3      OPC=movq_r64_m64      
  movq %rax, -0x38(%rbp)       #  335   0xb6274  4      OPC=movq_m64_r64      
  testq %rax, %rax             #  336   0xb6278  3      OPC=testq_r64_r64     
  jne .L_b61af                 #  337   0xb627b  6      OPC=jne_label_1       
  movl $0x1, %r12d             #  338   0xb6281  6      OPC=movl_r32_imm32    
  jmpq .L_b6423                #  339   0xb6287  5      OPC=jmpq_label_1      
  subq $0x8, %rsp              #  340   0xb628c  4      OPC=subq_r64_imm8     
  pushq %r15                   #  341   0xb6290  2      OPC=pushq_r64_1       
  movl $0x0, %r9d              #  342   0xb6292  6      OPC=movl_r32_imm32    
  movl -0x74(%rbp), %r8d       #  343   0xb6298  4      OPC=movl_r32_m32      
  movl -0x54(%rbp), %ecx       #  344   0xb629c  3      OPC=movl_r32_m32      
  movq -0x60(%rbp), %rdx       #  345   0xb629f  4      OPC=movq_r64_m64      
  movq %r14, %rsi              #  346   0xb62a3  3      OPC=movq_r64_r64      
  movq %rbx, %rdi              #  347   0xb62a6  3      OPC=movq_r64_r64      
  callq .internal_fnwmatch     #  348   0xb62a9  5      OPC=callq_label       
  addq $0x10, %rsp             #  349   0xb62ae  4      OPC=addq_r64_imm8     
  movl $0x0, %r12d             #  350   0xb62b2  6      OPC=movl_r32_imm32    
  testl %eax, %eax             #  351   0xb62b8  2      OPC=testl_r32_r32     
  je .L_b6423                  #  352   0xb62ba  6      OPC=je_label_1        
  movl -0x74(%rbp), %eax       #  353   0xb62c0  3      OPC=movl_r32_m32      
  movl %eax, %r13d             #  354   0xb62c3  3      OPC=movl_r32_r32      
  andl $0xfffffffb, %r13d      #  355   0xb62c6  7      OPC=andl_r32_imm32    
  nop                          #  356   0xb62cd  1      OPC=nop               
  nop                          #  357   0xb62ce  1      OPC=nop               
  nop                          #  358   0xb62cf  1      OPC=nop               
  nop                          #  359   0xb62d0  1      OPC=nop               
  testb $0x1, %al              #  360   0xb62d1  2      OPC=testb_al_imm8     
  cmovnel %eax, %r13d          #  361   0xb62d3  4      OPC=cmovnel_r32_r32   
.L_b62c4:                      #        0xb62d7  0      OPC=<label>           
  movq -0x38(%rbp), %r12       #  362   0xb62d7  4      OPC=movq_r64_m64      
  leaq 0xc(%r12), %rdi         #  363   0xb62db  5      OPC=leaq_r64_m16      
  movq %rbx, %rsi              #  364   0xb62e0  3      OPC=movq_r64_r64      
  callq .wcscat                #  365   0xb62e3  5      OPC=callq_label       
  subq $0x8, %rsp              #  366   0xb62e8  4      OPC=subq_r64_imm8     
  pushq %r15                   #  367   0xb62ec  2      OPC=pushq_r64_1       
  movl $0x0, %r9d              #  368   0xb62ee  6      OPC=movl_r32_imm32    
  movl %r13d, %r8d             #  369   0xb62f4  3      OPC=movl_r32_r32      
  movl -0x54(%rbp), %ecx       #  370   0xb62f7  3      OPC=movl_r32_m32      
  movq -0x60(%rbp), %rdx       #  371   0xb62fa  4      OPC=movq_r64_m64      
  movq %r14, %rsi              #  372   0xb62fe  3      OPC=movq_r64_r64      
  movq %rax, %rdi              #  373   0xb6301  3      OPC=movq_r64_r64      
  callq .internal_fnwmatch     #  374   0xb6304  5      OPC=callq_label       
  addq $0x10, %rsp             #  375   0xb6309  4      OPC=addq_r64_imm8     
  testl %eax, %eax             #  376   0xb630d  2      OPC=testl_r32_r32     
  je .L_b63fd                  #  377   0xb630f  6      OPC=je_label_1        
  movq (%r12), %rax            #  378   0xb6315  4      OPC=movq_r64_m64      
  movq %rax, -0x38(%rbp)       #  379   0xb6319  4      OPC=movq_m64_r64      
  testq %rax, %rax             #  380   0xb631d  3      OPC=testq_r64_r64     
  jne .L_b62c4                 #  381   0xb6320  2      OPC=jne_label         
  movl $0x1, %r12d             #  382   0xb6322  6      OPC=movl_r32_imm32    
  jmpq .L_b6423                #  383   0xb6328  5      OPC=jmpq_label_1      
.L_b631a:                      #        0xb632d  0      OPC=<label>           
  subq $0x8, %rsp              #  384   0xb632d  4      OPC=subq_r64_imm8     
  leaq 0xc(%rbx), %rdi         #  385   0xb6331  4      OPC=leaq_r64_m16      
  pushq %r15                   #  386   0xb6335  2      OPC=pushq_r64_1       
  movl $0x0, %r9d              #  387   0xb6337  6      OPC=movl_r32_imm32    
  movl -0x48(%rbp), %r8d       #  388   0xb633d  4      OPC=movl_r32_m32      
  movl %r12d, %ecx             #  389   0xb6341  3      OPC=movl_r32_r32      
  movq %r13, %rdx              #  390   0xb6344  3      OPC=movq_r64_r64      
  movq %r14, %rsi              #  391   0xb6347  3      OPC=movq_r64_r64      
  callq .internal_fnwmatch     #  392   0xb634a  5      OPC=callq_label       
  addq $0x10, %rsp             #  393   0xb634f  4      OPC=addq_r64_imm8     
  testl %eax, %eax             #  394   0xb6353  2      OPC=testl_r32_r32     
  je .L_b634e                  #  395   0xb6355  2      OPC=je_label          
  movq (%rbx), %rbx            #  396   0xb6357  3      OPC=movq_r64_m64      
  testq %rbx, %rbx             #  397   0xb635a  3      OPC=testq_r64_r64     
  jne .L_b631a                 #  398   0xb635d  2      OPC=jne_label         
  jmpq .L_b6353                #  399   0xb635f  2      OPC=jmpq_label        
.L_b634e:                      #        0xb6361  0      OPC=<label>           
  testq %rbx, %rbx             #  400   0xb6361  3      OPC=testq_r64_r64     
  jne .L_b639b                 #  401   0xb6364  2      OPC=jne_label         
.L_b6353:                      #        0xb6366  0      OPC=<label>           
  cmpq %r14, %r13              #  402   0xb6366  3      OPC=cmpq_r64_r64      
  je .L_b6370                  #  403   0xb6369  2      OPC=je_label          
  movl $0x0, %ecx              #  404   0xb636b  5      OPC=movl_r32_imm32    
  cmpl $0x2f, -0x4(%r13)       #  405   0xb6370  5      OPC=cmpl_m32_imm8     
  jne .L_b6373                 #  406   0xb6375  2      OPC=jne_label         
  cmpl $0x5, -0x74(%rbp)       #  407   0xb6377  4      OPC=cmpl_m32_imm8     
  sete %cl                     #  408   0xb637b  3      OPC=sete_r8           
  movzbl %cl, %ecx             #  409   0xb637e  3      OPC=movzbl_r32_r8     
  jmpq .L_b6373                #  410   0xb6381  2      OPC=jmpq_label        
.L_b6370:                      #        0xb6383  0      OPC=<label>           
  movl %r12d, %ecx             #  411   0xb6383  3      OPC=movl_r32_r32      
.L_b6373:                      #        0xb6386  0      OPC=<label>           
  subq $0x8, %rsp              #  412   0xb6386  4      OPC=subq_r64_imm8     
  pushq %r15                   #  413   0xb638a  2      OPC=pushq_r64_1       
  movl $0x0, %r9d              #  414   0xb638c  6      OPC=movl_r32_imm32    
  movl -0x68(%rbp), %r8d       #  415   0xb6392  4      OPC=movl_r32_m32      
  movq -0x60(%rbp), %rdx       #  416   0xb6396  4      OPC=movq_r64_m64      
  movq %r13, %rsi              #  417   0xb639a  3      OPC=movq_r64_r64      
  movq -0x70(%rbp), %rdi       #  418   0xb639d  4      OPC=movq_r64_m64      
  callq .internal_fnwmatch     #  419   0xb63a1  5      OPC=callq_label       
  addq $0x10, %rsp             #  420   0xb63a6  4      OPC=addq_r64_imm8     
  testl %eax, %eax             #  421   0xb63aa  2      OPC=testl_r32_r32     
  je .L_b6405                  #  422   0xb63ac  2      OPC=je_label          
.L_b639b:                      #        0xb63ae  0      OPC=<label>           
  addq $0x4, %r13              #  423   0xb63ae  4      OPC=addq_r64_imm8     
  cmpq %r13, -0x60(%rbp)       #  424   0xb63b2  4      OPC=cmpq_m64_r64      
  jb .L_b640d                  #  425   0xb63b6  2      OPC=jb_label          
.L_b63a5:                      #        0xb63b8  0      OPC=<label>           
  movq -0x50(%rbp), %rbx       #  426   0xb63b8  4      OPC=movq_r64_m64      
  jmpq .L_b631a                #  427   0xb63bc  5      OPC=jmpq_label_1      
.L_b63ae:                      #        0xb63c1  0      OPC=<label>           
  leaq 0xa2f55(%rip), %rcx     #  428   0xb63c1  7      OPC=leaq_r64_m16      
  movl $0x4d9, %edx            #  429   0xb63c8  5      OPC=movl_r32_imm32    
  leaq 0xa2efb(%rip), %rsi     #  430   0xb63cd  7      OPC=leaq_r64_m16      
  leaq 0xa6a80(%rip), %rdi     #  431   0xb63d4  7      OPC=leaq_r64_m16      
  callq .__assert_fail         #  432   0xb63db  5      OPC=callq_label       
.L_b63cd:                      #        0xb63e0  0      OPC=<label>           
  movl $0xffffffff, %r12d      #  433   0xb63e0  7      OPC=movl_r32_imm32_1  
  jmpq .L_b6423                #  434   0xb63e7  2      OPC=jmpq_label        
.L_b63d5:                      #        0xb63e9  0      OPC=<label>           
  movl $0xffffffff, %r12d      #  435   0xb63e9  7      OPC=movl_r32_imm32_1  
  jmpq .L_b6423                #  436   0xb63f0  2      OPC=jmpq_label        
.L_b63dd:                      #        0xb63f2  0      OPC=<label>           
  movl $0xfffffffe, %r12d      #  437   0xb63f2  7      OPC=movl_r32_imm32_1  
  jmpq .L_b6423                #  438   0xb63f9  2      OPC=jmpq_label        
.L_b63e5:                      #        0xb63fb  0      OPC=<label>           
  movl $0xfffffffe, %r12d      #  439   0xb63fb  7      OPC=movl_r32_imm32_1  
  jmpq .L_b6423                #  440   0xb6402  2      OPC=jmpq_label        
.L_b63ed:                      #        0xb6404  0      OPC=<label>           
  movl $0x1, %r12d             #  441   0xb6404  6      OPC=movl_r32_imm32    
  jmpq .L_b6423                #  442   0xb640a  2      OPC=jmpq_label        
.L_b63f5:                      #        0xb640c  0      OPC=<label>           
  movl $0x0, %r12d             #  443   0xb640c  6      OPC=movl_r32_imm32    
  jmpq .L_b6423                #  444   0xb6412  2      OPC=jmpq_label        
.L_b63fd:                      #        0xb6414  0      OPC=<label>           
  movl $0x0, %r12d             #  445   0xb6414  6      OPC=movl_r32_imm32    
  jmpq .L_b6423                #  446   0xb641a  2      OPC=jmpq_label        
.L_b6405:                      #        0xb641c  0      OPC=<label>           
  movl $0x0, %r12d             #  447   0xb641c  6      OPC=movl_r32_imm32    
  jmpq .L_b6423                #  448   0xb6422  2      OPC=jmpq_label        
.L_b640d:                      #        0xb6424  0      OPC=<label>           
  movl $0x1, %r12d             #  449   0xb6424  6      OPC=movl_r32_imm32    
  jmpq .L_b6423                #  450   0xb642a  2      OPC=jmpq_label        
.L_b6415:                      #        0xb642c  0      OPC=<label>           
  movl $0x0, %r12d             #  451   0xb642c  6      OPC=movl_r32_imm32    
  jmpq .L_b6423                #  452   0xb6432  2      OPC=jmpq_label        
.L_b641d:                      #        0xb6434  0      OPC=<label>           
  movl $0x0, %r12d             #  453   0xb6434  6      OPC=movl_r32_imm32    
.L_b6423:                      #        0xb643a  0      OPC=<label>           
  cmpl $0x0, -0x58(%rbp)       #  454   0xb643a  4      OPC=cmpl_m32_imm8     
  jne .L_b6440                 #  455   0xb643e  2      OPC=jne_label         
  jmpq .L_b6512                #  456   0xb6440  5      OPC=jmpq_label_1      
.L_b642e:                      #        0xb6445  0      OPC=<label>           
  movq (%rdi), %rax            #  457   0xb6445  3      OPC=movq_r64_m64      
  cmpl $0x0, 0x8(%rdi)         #  458   0xb6448  4      OPC=cmpl_m32_imm8     
  je .L_b6446                  #  459   0xb644c  2      OPC=je_label          
  movq %rax, -0x38(%rbp)       #  460   0xb644e  4      OPC=movq_m64_r64      
  callq .L_1f8d0               #  461   0xb6452  5      OPC=callq_label       
.L_b6440:                      #        0xb6457  0      OPC=<label>           
  movq -0x38(%rbp), %rdi       #  462   0xb6457  4      OPC=movq_r64_m64      
  jmpq .L_b6449                #  463   0xb645b  2      OPC=jmpq_label        
.L_b6446:                      #        0xb645d  0      OPC=<label>           
  movq %rax, %rdi              #  464   0xb645d  3      OPC=movq_r64_r64      
.L_b6449:                      #        0xb6460  0      OPC=<label>           
  testq %rdi, %rdi             #  465   0xb6460  3      OPC=testq_r64_r64     
  jne .L_b642e                 #  466   0xb6463  2      OPC=jne_label         
  jmpq .L_b6512                #  467   0xb6465  5      OPC=jmpq_label_1      
.L_b6453:                      #        0xb646a  0      OPC=<label>           
  movl $0xffffffff, %r12d      #  468   0xb646a  7      OPC=movl_r32_imm32_1  
  jmpq .L_b6512                #  469   0xb6471  5      OPC=jmpq_label_1      
.L_b645e:                      #        0xb6476  0      OPC=<label>           
  subq $0x8, %rsp              #  470   0xb6476  4      OPC=subq_r64_imm8     
  movq -0x38(%rbp), %rax       #  471   0xb647a  4      OPC=movq_r64_m64      
  leaq 0xc(%rax), %rdi         #  472   0xb647e  4      OPC=leaq_r64_m16      
  pushq %r15                   #  473   0xb6482  2      OPC=pushq_r64_1       
  movl $0x0, %r9d              #  474   0xb6484  6      OPC=movl_r32_imm32    
  movl -0x74(%rbp), %r8d       #  475   0xb648a  4      OPC=movl_r32_m32      
  movl -0x54(%rbp), %ecx       #  476   0xb648e  3      OPC=movl_r32_m32      
  movq %rbx, %rdx              #  477   0xb6491  3      OPC=movq_r64_r64      
  movq %r14, %rsi              #  478   0xb6494  3      OPC=movq_r64_r64      
  callq .internal_fnwmatch     #  479   0xb6497  5      OPC=callq_label       
  addq $0x10, %rsp             #  480   0xb649c  4      OPC=addq_r64_imm8     
  testl %eax, %eax             #  481   0xb64a0  2      OPC=testl_r32_r32     
  je .L_b61f2                  #  482   0xb64a2  6      OPC=je_label_1        
  jmpq .L_b6254                #  483   0xb64a8  5      OPC=jmpq_label_1      
.L_b6495:                      #        0xb64ad  0      OPC=<label>           
  subq $0x8, %rsp              #  484   0xb64ad  4      OPC=subq_r64_imm8     
  pushq %r15                   #  485   0xb64b1  2      OPC=pushq_r64_1       
  movl $0x0, %r9d              #  486   0xb64b3  6      OPC=movl_r32_imm32    
  movl -0x48(%rbp), %r8d       #  487   0xb64b9  4      OPC=movl_r32_m32      
  movl -0x54(%rbp), %ecx       #  488   0xb64bd  3      OPC=movl_r32_m32      
  movq %r12, %rdx              #  489   0xb64c0  3      OPC=movq_r64_r64      
  movq %r14, %rsi              #  490   0xb64c3  3      OPC=movq_r64_r64      
  movq -0x50(%rbp), %rdi       #  491   0xb64c6  4      OPC=movq_r64_m64      
  callq .internal_fnwmatch     #  492   0xb64ca  5      OPC=callq_label       
  addq $0x10, %rsp             #  493   0xb64cf  4      OPC=addq_r64_imm8     
  testl %eax, %eax             #  494   0xb64d3  2      OPC=testl_r32_r32     
  jne .L_b6254                 #  495   0xb64d5  6      OPC=jne_label_1       
  jmpq .L_b6415                #  496   0xb64db  5      OPC=jmpq_label_1      
.L_b64c8:                      #        0xb64e0  0      OPC=<label>           
  subq $0x8, %rsp              #  497   0xb64e0  4      OPC=subq_r64_imm8     
  pushq %r15                   #  498   0xb64e4  2      OPC=pushq_r64_1       
  movl $0x0, %r9d              #  499   0xb64e6  6      OPC=movl_r32_imm32    
  movl -0x48(%rbp), %r8d       #  500   0xb64ec  4      OPC=movl_r32_m32      
  movq %r12, %rdx              #  501   0xb64f0  3      OPC=movq_r64_r64      
  movq %rbx, %rsi              #  502   0xb64f3  3      OPC=movq_r64_r64      
  movq -0x50(%rbp), %rdi       #  503   0xb64f6  4      OPC=movq_r64_m64      
  callq .internal_fnwmatch     #  504   0xb64fa  5      OPC=callq_label       
  addq $0x10, %rsp             #  505   0xb64ff  4      OPC=addq_r64_imm8     
  testl %eax, %eax             #  506   0xb6503  2      OPC=testl_r32_r32     
  je .L_b641d                  #  507   0xb6505  6      OPC=je_label_1        
  movl $0x0, %ecx              #  508   0xb650b  5      OPC=movl_r32_imm32    
  cmpl $0x2f, -0x4(%rbx)       #  509   0xb6510  4      OPC=cmpl_m32_imm8     
  jne .L_b6229                 #  510   0xb6514  6      OPC=jne_label_1       
  jmpq .L_b621c                #  511   0xb651a  5      OPC=jmpq_label_1      
.L_b6507:                      #        0xb651f  0      OPC=<label>           
  movl 0x4(%rbx), %eax         #  512   0xb651f  3      OPC=movl_r32_m32      
  movq %rdx, %rbx              #  513   0xb6522  3      OPC=movq_r64_r64      
  jmpq .L_b5e0a                #  514   0xb6525  5      OPC=jmpq_label_1      
.L_b6512:                      #        0xb652a  0      OPC=<label>           
  movl %r12d, %eax             #  515   0xb652a  3      OPC=movl_r32_r32      
  leaq -0x28(%rbp), %rsp       #  516   0xb652d  4      OPC=leaq_r64_m16      
  popq %rbx                    #  517   0xb6531  1      OPC=popq_r64_1        
  popq %r12                    #  518   0xb6532  2      OPC=popq_r64_1        
  popq %r13                    #  519   0xb6534  2      OPC=popq_r64_1        
  popq %r14                    #  520   0xb6536  2      OPC=popq_r64_1        
  popq %r15                    #  521   0xb6538  2      OPC=popq_r64_1        
  popq %rbp                    #  522   0xb653a  1      OPC=popq_r64_1        
  retq                         #  523   0xb653b  1      OPC=retq              
                                                                              
.size ext_wmatch, .-ext_wmatch

