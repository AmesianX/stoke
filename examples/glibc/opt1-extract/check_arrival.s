  .text
  .globl check_arrival
  .type check_arrival, @function

#! file-offset 0xc1d50
#! rip-offset  0xc1d50
#! capacity    1964 bytes

# Text                             #  Line  RIP      Bytes  Opcode              
.check_arrival:                    #        0xc1d50  0      OPC=<label>         
  pushq %r15                       #  1     0xc1d50  2      OPC=pushq_r64_1     
  pushq %r14                       #  2     0xc1d52  2      OPC=pushq_r64_1     
  pushq %r13                       #  3     0xc1d54  2      OPC=pushq_r64_1     
  pushq %r12                       #  4     0xc1d56  2      OPC=pushq_r64_1     
  pushq %rbp                       #  5     0xc1d58  1      OPC=pushq_r64_1     
  pushq %rbx                       #  6     0xc1d59  1      OPC=pushq_r64_1     
  subq $0xc8, %rsp                 #  7     0xc1d5a  7      OPC=subq_r64_imm32  
  movq %rdi, %r14                  #  8     0xc1d61  3      OPC=movq_r64_r64    
  movq %rsi, 0x68(%rsp)            #  9     0xc1d64  5      OPC=movq_m64_r64    
  movl %edx, %r12d                 #  10    0xc1d69  3      OPC=movl_r32_r32    
  movl %ecx, %ebp                  #  11    0xc1d6c  2      OPC=movl_r32_r32    
  movl %r8d, 0x78(%rsp)            #  12    0xc1d6e  5      OPC=movl_m32_r32    
  movl %r9d, 0x58(%rsp)            #  13    0xc1d73  5      OPC=movl_m32_r32    
  movq 0x70(%rdi), %rax            #  14    0xc1d78  4      OPC=movq_r64_m64    
  movq %rax, %rdi                  #  15    0xc1d7c  3      OPC=movq_r64_r64    
  movq %rax, 0x50(%rsp)            #  16    0xc1d7f  5      OPC=movq_m64_r64    
  movl $0x0, 0xbc(%rsp)            #  17    0xc1d84  11     OPC=movl_m32_imm32  
  movslq %edx, %rax                #  18    0xc1d8f  3      OPC=movslq_r64_r32  
  shlq $0x4, %rax                  #  19    0xc1d92  4      OPC=shlq_r64_imm8   
  addq (%rdi), %rax                #  20    0xc1d96  3      OPC=addq_r64_m64    
  movl (%rax), %eax                #  21    0xc1d99  2      OPC=movl_r32_m32    
  movl %eax, 0x5c(%rsp)            #  22    0xc1d9b  4      OPC=movl_m32_r32    
  movl 0x4(%rsi), %ebx             #  23    0xc1d9f  3      OPC=movl_r32_m32    
  movl %r9d, %eax                  #  24    0xc1da2  3      OPC=movl_r32_r32    
  addl 0xa8(%r14), %eax            #  25    0xc1da5  7      OPC=addl_r32_m32    
  addl $0x1, %eax                  #  26    0xc1dac  3      OPC=addl_r32_imm8   
  cmpl %eax, %ebx                  #  27    0xc1daf  2      OPC=cmpl_r32_r32    
  jge .L_c1e11                     #  28    0xc1db1  2      OPC=jge_label       
  addl %ebx, %eax                  #  29    0xc1db3  2      OPC=addl_r32_r32    
  movq %rsi, %rdi                  #  30    0xc1db5  3      OPC=movq_r64_r64    
  movl %eax, 0x4(%rsi)             #  31    0xc1db8  3      OPC=movl_m32_r32    
  cltq                             #  32    0xc1dbb  2      OPC=cltq            
  leaq (,%rax,8), %rsi             #  33    0xc1dbd  8      OPC=leaq_r64_m16    
  movq 0x8(%rdi), %rdi             #  34    0xc1dc5  4      OPC=movq_r64_m64    
  callq .__tls_get_addr_plt        #  35    0xc1dc9  5      OPC=callq_label     
  testq %rax, %rax                 #  36    0xc1dce  3      OPC=testq_r64_r64   
  jne .L_c1de5                     #  37    0xc1dd1  2      OPC=jne_label       
  movq 0x68(%rsp), %rax            #  38    0xc1dd3  5      OPC=movq_r64_m64    
  movl %ebx, 0x4(%rax)             #  39    0xc1dd8  3      OPC=movl_m32_r32    
  movl $0xc, %eax                  #  40    0xc1ddb  5      OPC=movl_r32_imm32  
  jmpq .L_c24ea                    #  41    0xc1de0  5      OPC=jmpq_label_1    
.L_c1de5:                          #        0xc1de5  0      OPC=<label>         
  movq 0x68(%rsp), %rdi            #  42    0xc1de5  5      OPC=movq_r64_m64    
  movq %rax, 0x8(%rdi)             #  43    0xc1dea  4      OPC=movq_m64_r64    
  movl 0x4(%rdi), %edi             #  44    0xc1dee  3      OPC=movl_r32_m32    
  movl %edi, 0x18(%rsp)            #  45    0xc1df1  4      OPC=movl_m32_r32    
  movl %edi, %edx                  #  46    0xc1df5  2      OPC=movl_r32_r32    
  subl %ebx, %edx                  #  47    0xc1df7  2      OPC=subl_r32_r32    
  movslq %edx, %rdx                #  48    0xc1df9  3      OPC=movslq_r64_r32  
  shlq $0x3, %rdx                  #  49    0xc1dfc  4      OPC=shlq_r64_imm8   
  movslq %ebx, %rbx                #  50    0xc1e00  3      OPC=movslq_r64_r32  
  leaq (%rax,%rbx,8), %rdi         #  51    0xc1e03  4      OPC=leaq_r64_m16    
  movl $0x0, %esi                  #  52    0xc1e07  5      OPC=movl_r32_imm32  
  callq .__GI_memset               #  53    0xc1e0c  5      OPC=callq_label     
.L_c1e11:                          #        0xc1e11  0      OPC=<label>         
  movq 0x68(%rsp), %rax            #  54    0xc1e11  5      OPC=movq_r64_m64    
  movl (%rax), %ebx                #  55    0xc1e16  2      OPC=movl_r32_m32    
  testl %ebx, %ebx                 #  56    0xc1e18  2      OPC=testl_r32_r32   
  je .L_c23ee                      #  57    0xc1e1a  6      OPC=je_label_1      
  movq 0x88(%r14), %rax            #  58    0xc1e20  7      OPC=movq_r64_m64    
  movq %rax, 0x70(%rsp)            #  59    0xc1e27  5      OPC=movq_m64_r64    
  movl 0x38(%r14), %eax            #  60    0xc1e2c  4      OPC=movl_r32_m32    
  movl %eax, 0x7c(%rsp)            #  61    0xc1e30  4      OPC=movl_m32_r32    
  movq 0x68(%rsp), %rax            #  62    0xc1e34  5      OPC=movq_r64_m64    
  movq 0x8(%rax), %r13             #  63    0xc1e39  4      OPC=movq_r64_m64    
  movq %r13, 0x88(%r14)            #  64    0xc1e3d  7      OPC=movq_m64_r64    
  movl %ebx, 0x38(%r14)            #  65    0xc1e44  4      OPC=movl_m32_r32    
  movq %r14, 0x38(%rsp)            #  66    0xc1e48  5      OPC=movq_m64_r64    
  movl 0x78(%r14), %edx            #  67    0xc1e4d  4      OPC=movl_r32_m32    
  leal -0x1(%rbx), %esi            #  68    0xc1e51  3      OPC=leal_r32_m16    
  movq %r14, %rdi                  #  69    0xc1e54  3      OPC=movq_r64_r64    
  callq .re_string_context_at      #  70    0xc1e57  5      OPC=callq_label     
  movl %eax, 0x18(%rsp)            #  71    0xc1e5c  4      OPC=movl_m32_r32    
  cmpl %ebp, %ebx                  #  72    0xc1e60  2      OPC=cmpl_r32_r32    
  jne .L_c1ec6                     #  73    0xc1e62  2      OPC=jne_label       
.L_c1e64:                          #        0xc1e64  0      OPC=<label>         
  leaq 0xa0(%rsp), %rdi            #  74    0xc1e64  8      OPC=leaq_r64_m16    
  movl %r12d, %esi                 #  75    0xc1e6c  3      OPC=movl_r32_r32    
  callq .re_node_set_init_1        #  76    0xc1e6f  5      OPC=callq_label     
  movl %eax, 0xbc(%rsp)            #  77    0xc1e74  7      OPC=movl_m32_r32    
  testl %eax, %eax                 #  78    0xc1e7b  2      OPC=testl_r32_r32   
  jne .L_c24ea                     #  79    0xc1e7d  6      OPC=jne_label_1     
  leaq 0xa0(%rsp), %rsi            #  80    0xc1e83  8      OPC=leaq_r64_m16    
  movl 0x100(%rsp), %ecx           #  81    0xc1e8b  7      OPC=movl_r32_m32    
  movl 0x5c(%rsp), %edx            #  82    0xc1e92  4      OPC=movl_r32_m32    
  movq 0x50(%rsp), %rdi            #  83    0xc1e96  5      OPC=movq_r64_m64    
  callq .check_arrival_expand_ecl  #  84    0xc1e9b  5      OPC=callq_label     
  movl %eax, 0xbc(%rsp)            #  85    0xc1ea0  7      OPC=movl_m32_r32    
  movl %ebp, %ebx                  #  86    0xc1ea7  2      OPC=movl_r32_r32    
  testl %eax, %eax                 #  87    0xc1ea9  2      OPC=testl_r32_r32   
  je .L_c1f0d                      #  88    0xc1eab  2      OPC=je_label        
  movq 0xa8(%rsp), %rdi            #  89    0xc1ead  8      OPC=movq_r64_m64    
  callq .L_1f8d0                   #  90    0xc1eb5  5      OPC=callq_label     
  movl 0xbc(%rsp), %eax            #  91    0xc1eba  7      OPC=movl_r32_m32    
  jmpq .L_c24ea                    #  92    0xc1ec1  5      OPC=jmpq_label_1    
.L_c1ec6:                          #        0xc1ec6  0      OPC=<label>         
  movslq %ebx, %rax                #  93    0xc1ec6  3      OPC=movslq_r64_r32  
  movq (%r13,%rax,8), %r15         #  94    0xc1ec9  5      OPC=movq_r64_m64    
  testq %r15, %r15                 #  95    0xc1ece  3      OPC=testq_r64_r64   
  je .L_c24cd                      #  96    0xc1ed1  6      OPC=je_label_1      
  testb $0x40, 0x50(%r15)          #  97    0xc1ed7  5      OPC=testb_m8_imm8   
  je .L_c24b0                      #  98    0xc1edc  6      OPC=je_label_1      
  leaq 0x8(%r15), %rsi             #  99    0xc1ee2  4      OPC=leaq_r64_m16    
  leaq 0xa0(%rsp), %rdi            #  100   0xc1ee6  8      OPC=leaq_r64_m16    
  callq .re_node_set_init_copy     #  101   0xc1eee  5      OPC=callq_label     
  movl %eax, 0xbc(%rsp)            #  102   0xc1ef3  7      OPC=movl_m32_r32    
  testl %eax, %eax                 #  103   0xc1efa  2      OPC=testl_r32_r32   
  jne .L_c24ea                     #  104   0xc1efc  6      OPC=jne_label_1     
.L_c1f02:                          #        0xc1f02  0      OPC=<label>         
  testb $0x40, 0x50(%r15)          #  105   0xc1f02  5      OPC=testb_m8_imm8   
  je .L_c1fb0                      #  106   0xc1f07  6      OPC=je_label_1      
.L_c1f0d:                          #        0xc1f0d  0      OPC=<label>         
  cmpl $0x0, 0xa4(%rsp)            #  107   0xc1f0d  8      OPC=cmpl_m32_imm8   
  je .L_c1f59                      #  108   0xc1f15  2      OPC=je_label        
  leaq 0xa0(%rsp), %rsi            #  109   0xc1f17  8      OPC=leaq_r64_m16    
  movl 0x100(%rsp), %r8d           #  110   0xc1f1f  8      OPC=movl_r32_m32    
  movl 0x5c(%rsp), %ecx            #  111   0xc1f27  4      OPC=movl_r32_m32    
  movl %ebx, %edx                  #  112   0xc1f2b  2      OPC=movl_r32_r32    
  movq %r14, %rdi                  #  113   0xc1f2d  3      OPC=movq_r64_r64    
  callq .expand_bkref_cache        #  114   0xc1f30  5      OPC=callq_label     
  movl %eax, 0xbc(%rsp)            #  115   0xc1f35  7      OPC=movl_m32_r32    
  testl %eax, %eax                 #  116   0xc1f3c  2      OPC=testl_r32_r32   
  je .L_c1f59                      #  117   0xc1f3e  2      OPC=je_label        
  movq 0xa8(%rsp), %rdi            #  118   0xc1f40  8      OPC=movq_r64_m64    
  callq .L_1f8d0                   #  119   0xc1f48  5      OPC=callq_label     
  movl 0xbc(%rsp), %eax            #  120   0xc1f4d  7      OPC=movl_r32_m32    
  jmpq .L_c24ea                    #  121   0xc1f54  5      OPC=jmpq_label_1    
.L_c1f59:                          #        0xc1f59  0      OPC=<label>         
  leaq 0xa0(%rsp), %rdx            #  122   0xc1f59  8      OPC=leaq_r64_m16    
  leaq 0xbc(%rsp), %rdi            #  123   0xc1f61  8      OPC=leaq_r64_m16    
  movl 0x18(%rsp), %ecx            #  124   0xc1f69  4      OPC=movl_r32_m32    
  movq 0x50(%rsp), %rsi            #  125   0xc1f6d  5      OPC=movq_r64_m64    
  callq .re_acquire_state_context  #  126   0xc1f72  5      OPC=callq_label     
  movq %rax, %r15                  #  127   0xc1f77  3      OPC=movq_r64_r64    
  testq %rax, %rax                 #  128   0xc1f7a  3      OPC=testq_r64_r64   
  jne .L_c1fa2                     #  129   0xc1f7d  2      OPC=jne_label       
  cmpl $0x0, 0xbc(%rsp)            #  130   0xc1f7f  8      OPC=cmpl_m32_imm8   
  je .L_c1fa2                      #  131   0xc1f87  2      OPC=je_label        
  movq 0xa8(%rsp), %rdi            #  132   0xc1f89  8      OPC=movq_r64_m64    
  callq .L_1f8d0                   #  133   0xc1f91  5      OPC=callq_label     
  movl 0xbc(%rsp), %eax            #  134   0xc1f96  7      OPC=movl_r32_m32    
  jmpq .L_c24ea                    #  135   0xc1f9d  5      OPC=jmpq_label_1    
.L_c1fa2:                          #        0xc1fa2  0      OPC=<label>         
  movslq %ebx, %rax                #  136   0xc1fa2  3      OPC=movslq_r64_r32  
  movq 0x88(%r14), %rdx            #  137   0xc1fa5  7      OPC=movq_r64_m64    
  movq %r15, (%rdx,%rax,8)         #  138   0xc1fac  4      OPC=movq_m64_r64    
.L_c1fb0:                          #        0xc1fb0  0      OPC=<label>         
  cmpl %ebx, 0x58(%rsp)            #  139   0xc1fb0  4      OPC=cmpl_m32_r32    
  jle .L_c2384                     #  140   0xc1fb4  6      OPC=jle_label_1     
  cmpl $0x0, 0xa8(%r14)            #  141   0xc1fba  8      OPC=cmpl_m32_imm8   
  js .L_c2384                      #  142   0xc1fc2  6      OPC=js_label_1      
  leal 0x1(%rbx), %eax             #  143   0xc1fc8  3      OPC=leal_r32_m16    
  movl %eax, 0x48(%rsp)            #  144   0xc1fcb  4      OPC=movl_m32_r32    
  movl $0x0, 0x4c(%rsp)            #  145   0xc1fcf  8      OPC=movl_m32_imm32  
  leaq 0xa0(%rsp), %rax            #  146   0xc1fd7  8      OPC=leaq_r64_m16    
  movq %rax, 0x8(%rsp)             #  147   0xc1fdf  5      OPC=movq_m64_r64    
  leaq 0x8c(%rsp), %rax            #  148   0xc1fe4  8      OPC=leaq_r64_m16    
  movq %rax, 0x40(%rsp)            #  149   0xc1fec  5      OPC=movq_m64_r64    
  leaq 0xbc(%rsp), %rax            #  150   0xc1ff1  8      OPC=leaq_r64_m16    
  movq %rax, 0x60(%rsp)            #  151   0xc1ff9  5      OPC=movq_m64_r64    
  movq %r14, %r13                  #  152   0xc1ffe  3      OPC=movq_r64_r64    
.L_c2001:                          #        0xc2001  0      OPC=<label>         
  movl 0x48(%rsp), %eax            #  153   0xc2001  4      OPC=movl_r32_m32    
  subl $0x1, %eax                  #  154   0xc2005  3      OPC=subl_r32_imm8   
  movl %eax, 0x18(%rsp)            #  155   0xc2008  4      OPC=movl_m32_r32    
  movl $0x0, 0xa4(%rsp)            #  156   0xc200c  11     OPC=movl_m32_imm32  
  cltq                             #  157   0xc2017  2      OPC=cltq            
  addq $0x1, %rax                  #  158   0xc2019  4      OPC=addq_r64_imm8   
  movq 0x88(%r13), %rdx            #  159   0xc201d  7      OPC=movq_r64_m64    
  movq (%rdx,%rax,8), %rsi         #  160   0xc2024  4      OPC=movq_r64_m64    
  testq %rsi, %rsi                 #  161   0xc2028  3      OPC=testq_r64_r64   
  je .L_c243c                      #  162   0xc202b  6      OPC=je_label_1      
  addq $0x8, %rsi                  #  163   0xc2031  4      OPC=addq_r64_imm8   
  movq 0x8(%rsp), %rdi             #  164   0xc2035  5      OPC=movq_r64_m64    
  callq .re_node_set_merge         #  165   0xc203a  5      OPC=callq_label     
  movl %eax, 0xbc(%rsp)            #  166   0xc203f  7      OPC=movl_m32_r32    
  testl %eax, %eax                 #  167   0xc2046  2      OPC=testl_r32_r32   
  je .L_c2063                      #  168   0xc2048  2      OPC=je_label        
  movq 0xa8(%rsp), %rdi            #  169   0xc204a  8      OPC=movq_r64_m64    
  callq .L_1f8d0                   #  170   0xc2052  5      OPC=callq_label     
  movl 0xbc(%rsp), %eax            #  171   0xc2057  7      OPC=movl_r32_m32    
  jmpq .L_c24ea                    #  172   0xc205e  5      OPC=jmpq_label_1    
.L_c2063:                          #        0xc2063  0      OPC=<label>         
  testq %r15, %r15                 #  173   0xc2063  3      OPC=testq_r64_r64   
  je .L_c227a                      #  174   0xc2066  6      OPC=je_label_1      
.L_c206c:                          #        0xc206c  0      OPC=<label>         
  movq 0x70(%r13), %r12            #  175   0xc206c  4      OPC=movq_r64_m64    
  movl $0x0, 0x8c(%rsp)            #  176   0xc2070  11     OPC=movl_m32_imm32  
  movq $0x0, 0x90(%rsp)            #  177   0xc207b  12     OPC=movq_m64_imm32  
  movq $0x0, 0x98(%rsp)            #  178   0xc2087  12     OPC=movq_m64_imm32  
  cmpl $0x0, 0x1c(%r15)            #  179   0xc2093  5      OPC=cmpl_m32_imm8   
  jle .L_c223c                     #  180   0xc2098  6      OPC=jle_label_1     
  movl $0x0, %r14d                 #  181   0xc209e  6      OPC=movl_r32_imm32  
  leaq 0x90(%rsp), %rax            #  182   0xc20a4  8      OPC=leaq_r64_m16    
  movq %rax, 0x10(%rsp)            #  183   0xc20ac  5      OPC=movq_m64_r64    
.L_c20b1:                          #        0xc20b1  0      OPC=<label>         
  movslq %r14d, %rax               #  184   0xc20b1  3      OPC=movslq_r64_r32  
  movq 0x20(%r15), %rdx            #  185   0xc20b4  4      OPC=movq_r64_m64    
  movl (%rdx,%rax,4), %esi         #  186   0xc20b8  3      OPC=movl_r32_m32    
  movslq %esi, %rbp                #  187   0xc20bb  3      OPC=movslq_r64_r32  
  movq %rbp, %rbx                  #  188   0xc20be  3      OPC=movq_r64_r64    
  shlq $0x4, %rbx                  #  189   0xc20c1  4      OPC=shlq_r64_imm8   
  movq (%r12), %rax                #  190   0xc20c5  4      OPC=movq_r64_m64    
  testb $0x10, 0xa(%rax,%rbx,1)    #  191   0xc20c9  5      OPC=testb_m8_imm8   
  je .L_c21ef                      #  192   0xc20ce  6      OPC=je_label_1      
  movl 0x18(%rsp), %ecx            #  193   0xc20d4  4      OPC=movl_r32_m32    
  movq 0x38(%rsp), %rdx            #  194   0xc20d8  5      OPC=movq_r64_m64    
  movq %r12, %rdi                  #  195   0xc20dd  3      OPC=movq_r64_r64    
  callq .check_node_accept_bytes   #  196   0xc20e0  5      OPC=callq_label     
  movl %eax, %ecx                  #  197   0xc20e5  2      OPC=movl_r32_r32    
  movl %eax, 0x1c(%rsp)            #  198   0xc20e7  4      OPC=movl_m32_r32    
  cmpl $0x1, %eax                  #  199   0xc20eb  3      OPC=cmpl_r32_imm8   
  jle .L_c21e8                     #  200   0xc20ee  6      OPC=jle_label_1     
  movq 0x18(%r12), %rax            #  201   0xc20f4  5      OPC=movq_r64_m64    
  movl (%rax,%rbp,4), %eax         #  202   0xc20f9  3      OPC=movl_r32_m32    
  movl %eax, 0x20(%rsp)            #  203   0xc20fc  4      OPC=movl_m32_r32    
  movl %ecx, %eax                  #  204   0xc2100  2      OPC=movl_r32_r32    
  addl 0x18(%rsp), %eax            #  205   0xc2102  4      OPC=addl_r32_m32    
  cltq                             #  206   0xc2106  2      OPC=cltq            
  movq %rax, %rcx                  #  207   0xc2108  3      OPC=movq_r64_r64    
  movq %rax, 0x30(%rsp)            #  208   0xc210b  5      OPC=movq_m64_r64    
  shlq $0x3, %rax                  #  209   0xc2110  4      OPC=shlq_r64_imm8   
  movq %rax, 0x28(%rsp)            #  210   0xc2114  5      OPC=movq_m64_r64    
  movq 0x88(%r13), %rax            #  211   0xc2119  7      OPC=movq_r64_m64    
  movq (%rax,%rcx,8), %rsi         #  212   0xc2120  4      OPC=movq_r64_m64    
  movl $0x0, 0x94(%rsp)            #  213   0xc2124  11     OPC=movl_m32_imm32  
  testq %rsi, %rsi                 #  214   0xc212f  3      OPC=testq_r64_r64   
  je .L_c2166                      #  215   0xc2132  2      OPC=je_label        
  addq $0x8, %rsi                  #  216   0xc2134  4      OPC=addq_r64_imm8   
  movq 0x10(%rsp), %rdi            #  217   0xc2138  5      OPC=movq_r64_m64    
  callq .re_node_set_merge         #  218   0xc213d  5      OPC=callq_label     
  movl %eax, 0x8c(%rsp)            #  219   0xc2142  7      OPC=movl_m32_r32    
  testl %eax, %eax                 #  220   0xc2149  2      OPC=testl_r32_r32   
  je .L_c2166                      #  221   0xc214b  2      OPC=je_label        
  movq 0x98(%rsp), %rdi            #  222   0xc214d  8      OPC=movq_r64_m64    
  callq .L_1f8d0                   #  223   0xc2155  5      OPC=callq_label     
  movl 0x8c(%rsp), %eax            #  224   0xc215a  7      OPC=movl_r32_m32    
  jmpq .L_c2256                    #  225   0xc2161  5      OPC=jmpq_label_1    
.L_c2166:                          #        0xc2166  0      OPC=<label>         
  movl 0x20(%rsp), %esi            #  226   0xc2166  4      OPC=movl_r32_m32    
  movq 0x10(%rsp), %rdi            #  227   0xc216a  5      OPC=movq_r64_m64    
  callq .re_node_set_insert        #  228   0xc216f  5      OPC=callq_label     
  testl %eax, %eax                 #  229   0xc2174  2      OPC=testl_r32_r32   
  jns .L_c218a                     #  230   0xc2176  2      OPC=jns_label       
  movq 0x98(%rsp), %rdi            #  231   0xc2178  8      OPC=movq_r64_m64    
  callq .L_1f8d0                   #  232   0xc2180  5      OPC=callq_label     
  jmpq .L_c2447                    #  233   0xc2185  5      OPC=jmpq_label_1    
.L_c218a:                          #        0xc218a  0      OPC=<label>         
  movq 0x28(%rsp), %rax            #  234   0xc218a  5      OPC=movq_r64_m64    
  addq 0x88(%r13), %rax            #  235   0xc218f  7      OPC=addq_r64_m64    
  movq %rax, 0x20(%rsp)            #  236   0xc2196  5      OPC=movq_m64_r64    
  movq 0x10(%rsp), %rdx            #  237   0xc219b  5      OPC=movq_r64_m64    
  movq %r12, %rsi                  #  238   0xc21a0  3      OPC=movq_r64_r64    
  movq 0x40(%rsp), %rdi            #  239   0xc21a3  5      OPC=movq_r64_m64    
  callq .re_acquire_state          #  240   0xc21a8  5      OPC=callq_label     
  movq 0x20(%rsp), %rdi            #  241   0xc21ad  5      OPC=movq_r64_m64    
  movq %rax, (%rdi)                #  242   0xc21b2  3      OPC=movq_m64_r64    
  movq 0x88(%r13), %rax            #  243   0xc21b5  7      OPC=movq_r64_m64    
  movq 0x30(%rsp), %rcx            #  244   0xc21bc  5      OPC=movq_r64_m64    
  cmpq $0x0, (%rax,%rcx,8)         #  245   0xc21c1  5      OPC=cmpq_m64_imm8   
  jne .L_c21e8                     #  246   0xc21c6  2      OPC=jne_label       
  cmpl $0x0, 0x8c(%rsp)            #  247   0xc21c8  8      OPC=cmpl_m32_imm8   
  je .L_c21e8                      #  248   0xc21d0  2      OPC=je_label        
  movq 0x98(%rsp), %rdi            #  249   0xc21d2  8      OPC=movq_r64_m64    
  callq .L_1f8d0                   #  250   0xc21da  5      OPC=callq_label     
  movl 0x8c(%rsp), %eax            #  251   0xc21df  7      OPC=movl_r32_m32    
  jmpq .L_c2256                    #  252   0xc21e6  2      OPC=jmpq_label      
.L_c21e8:                          #        0xc21e8  0      OPC=<label>         
  cmpl $0x0, 0x1c(%rsp)            #  253   0xc21e8  5      OPC=cmpl_m32_imm8   
  jne .L_c2206                     #  254   0xc21ed  2      OPC=jne_label       
.L_c21ef:                          #        0xc21ef  0      OPC=<label>         
  addq (%r12), %rbx                #  255   0xc21ef  4      OPC=addq_r64_m64    
  movq %rbx, %rsi                  #  256   0xc21f3  3      OPC=movq_r64_r64    
  movl 0x18(%rsp), %edx            #  257   0xc21f6  4      OPC=movl_r32_m32    
  movq %r13, %rdi                  #  258   0xc21fa  3      OPC=movq_r64_r64    
  callq .check_node_accept         #  259   0xc21fd  5      OPC=callq_label     
  testl %eax, %eax                 #  260   0xc2202  2      OPC=testl_r32_r32   
  je .L_c222e                      #  261   0xc2204  2      OPC=je_label        
.L_c2206:                          #        0xc2206  0      OPC=<label>         
  movq 0x18(%r12), %rax            #  262   0xc2206  5      OPC=movq_r64_m64    
  movl (%rax,%rbp,4), %esi         #  263   0xc220b  3      OPC=movl_r32_m32    
  movq 0x8(%rsp), %rdi             #  264   0xc220e  5      OPC=movq_r64_m64    
  callq .re_node_set_insert        #  265   0xc2213  5      OPC=callq_label     
  testl %eax, %eax                 #  266   0xc2218  2      OPC=testl_r32_r32   
  jns .L_c222e                     #  267   0xc221a  2      OPC=jns_label       
  movq 0x98(%rsp), %rdi            #  268   0xc221c  8      OPC=movq_r64_m64    
  callq .L_1f8d0                   #  269   0xc2224  5      OPC=callq_label     
  jmpq .L_c2447                    #  270   0xc2229  5      OPC=jmpq_label_1    
.L_c222e:                          #        0xc222e  0      OPC=<label>         
  addl $0x1, %r14d                 #  271   0xc222e  4      OPC=addl_r32_imm8   
  cmpl 0x1c(%r15), %r14d           #  272   0xc2232  4      OPC=cmpl_r32_m32    
  jl .L_c20b1                      #  273   0xc2236  6      OPC=jl_label_1      
.L_c223c:                          #        0xc223c  0      OPC=<label>         
  movq 0x98(%rsp), %rdi            #  274   0xc223c  8      OPC=movq_r64_m64    
  callq .L_1f8d0                   #  275   0xc2244  5      OPC=callq_label     
  movl $0x0, 0xbc(%rsp)            #  276   0xc2249  11     OPC=movl_m32_imm32  
  jmpq .L_c227a                    #  277   0xc2254  2      OPC=jmpq_label      
.L_c2256:                          #        0xc2256  0      OPC=<label>         
  movl %eax, 0xbc(%rsp)            #  278   0xc2256  7      OPC=movl_m32_r32    
  testl %eax, %eax                 #  279   0xc225d  2      OPC=testl_r32_r32   
  je .L_c227a                      #  280   0xc225f  2      OPC=je_label        
.L_c2261:                          #        0xc2261  0      OPC=<label>         
  movq 0xa8(%rsp), %rdi            #  281   0xc2261  8      OPC=movq_r64_m64    
  callq .L_1f8d0                   #  282   0xc2269  5      OPC=callq_label     
  movl 0xbc(%rsp), %eax            #  283   0xc226e  7      OPC=movl_r32_m32    
  jmpq .L_c24ea                    #  284   0xc2275  5      OPC=jmpq_label_1    
.L_c227a:                          #        0xc227a  0      OPC=<label>         
  movl 0x48(%rsp), %ebx            #  285   0xc227a  4      OPC=movl_r32_m32    
  cmpl $0x0, 0xa4(%rsp)            #  286   0xc227e  8      OPC=cmpl_m32_imm8   
  je .L_c2305                      #  287   0xc2286  2      OPC=je_label        
  movl 0x100(%rsp), %ecx           #  288   0xc2288  7      OPC=movl_r32_m32    
  movl 0x5c(%rsp), %edx            #  289   0xc228f  4      OPC=movl_r32_m32    
  movq 0x8(%rsp), %rsi             #  290   0xc2293  5      OPC=movq_r64_m64    
  movq 0x50(%rsp), %rdi            #  291   0xc2298  5      OPC=movq_r64_m64    
  callq .check_arrival_expand_ecl  #  292   0xc229d  5      OPC=callq_label     
  movl %eax, 0xbc(%rsp)            #  293   0xc22a2  7      OPC=movl_m32_r32    
  testl %eax, %eax                 #  294   0xc22a9  2      OPC=testl_r32_r32   
  je .L_c22c6                      #  295   0xc22ab  2      OPC=je_label        
  movq 0xa8(%rsp), %rdi            #  296   0xc22ad  8      OPC=movq_r64_m64    
  callq .L_1f8d0                   #  297   0xc22b5  5      OPC=callq_label     
  movl 0xbc(%rsp), %eax            #  298   0xc22ba  7      OPC=movl_r32_m32    
  jmpq .L_c24ea                    #  299   0xc22c1  5      OPC=jmpq_label_1    
.L_c22c6:                          #        0xc22c6  0      OPC=<label>         
  movl 0x100(%rsp), %r8d           #  300   0xc22c6  8      OPC=movl_r32_m32    
  movl 0x5c(%rsp), %ecx            #  301   0xc22ce  4      OPC=movl_r32_m32    
  movl %ebx, %edx                  #  302   0xc22d2  2      OPC=movl_r32_r32    
  movq 0x8(%rsp), %rsi             #  303   0xc22d4  5      OPC=movq_r64_m64    
  movq %r13, %rdi                  #  304   0xc22d9  3      OPC=movq_r64_r64    
  callq .expand_bkref_cache        #  305   0xc22dc  5      OPC=callq_label     
  movl %eax, 0xbc(%rsp)            #  306   0xc22e1  7      OPC=movl_m32_r32    
  testl %eax, %eax                 #  307   0xc22e8  2      OPC=testl_r32_r32   
  je .L_c2305                      #  308   0xc22ea  2      OPC=je_label        
  movq 0xa8(%rsp), %rdi            #  309   0xc22ec  8      OPC=movq_r64_m64    
  callq .L_1f8d0                   #  310   0xc22f4  5      OPC=callq_label     
  movl 0xbc(%rsp), %eax            #  311   0xc22f9  7      OPC=movl_r32_m32    
  jmpq .L_c24ea                    #  312   0xc2300  5      OPC=jmpq_label_1    
.L_c2305:                          #        0xc2305  0      OPC=<label>         
  movl 0x78(%r13), %edx            #  313   0xc2305  4      OPC=movl_r32_m32    
  movl 0x18(%rsp), %esi            #  314   0xc2309  4      OPC=movl_r32_m32    
  movq 0x38(%rsp), %rdi            #  315   0xc230d  5      OPC=movq_r64_m64    
  callq .re_string_context_at      #  316   0xc2312  5      OPC=callq_label     
  movl %eax, %ecx                  #  317   0xc2317  2      OPC=movl_r32_r32    
  movq 0x8(%rsp), %rdx             #  318   0xc2319  5      OPC=movq_r64_m64    
  movq 0x50(%rsp), %rsi            #  319   0xc231e  5      OPC=movq_r64_m64    
  movq 0x60(%rsp), %rdi            #  320   0xc2323  5      OPC=movq_r64_m64    
  callq .re_acquire_state_context  #  321   0xc2328  5      OPC=callq_label     
  movq %rax, %r15                  #  322   0xc232d  3      OPC=movq_r64_r64    
  testq %rax, %rax                 #  323   0xc2330  3      OPC=testq_r64_r64   
  jne .L_c2473                     #  324   0xc2333  6      OPC=jne_label_1     
  cmpl $0x0, 0xbc(%rsp)            #  325   0xc2339  8      OPC=cmpl_m32_imm8   
  je .L_c2457                      #  326   0xc2341  6      OPC=je_label_1      
  movq 0xa8(%rsp), %rdi            #  327   0xc2347  8      OPC=movq_r64_m64    
  callq .L_1f8d0                   #  328   0xc234f  5      OPC=callq_label     
  movl 0xbc(%rsp), %eax            #  329   0xc2354  7      OPC=movl_r32_m32    
  jmpq .L_c24ea                    #  330   0xc235b  5      OPC=jmpq_label_1    
.L_c2360:                          #        0xc2360  0      OPC=<label>         
  cmpl %ebx, 0x58(%rsp)            #  331   0xc2360  4      OPC=cmpl_m32_r32    
  jle .L_c2381                     #  332   0xc2364  2      OPC=jle_label       
  addl $0x1, 0x48(%rsp)            #  333   0xc2366  5      OPC=addl_m32_imm8   
  movl 0x4c(%rsp), %eax            #  334   0xc236b  4      OPC=movl_r32_m32    
  cmpl 0xa8(%r13), %eax            #  335   0xc236f  7      OPC=cmpl_r32_m32    
  jle .L_c2001                     #  336   0xc2376  6      OPC=jle_label_1     
  movq %r13, %r14                  #  337   0xc237c  3      OPC=movq_r64_r64    
  jmpq .L_c2384                    #  338   0xc237f  2      OPC=jmpq_label      
.L_c2381:                          #        0xc2381  0      OPC=<label>         
  movq %r13, %r14                  #  339   0xc2381  3      OPC=movq_r64_r64    
.L_c2384:                          #        0xc2384  0      OPC=<label>         
  movq 0xa8(%rsp), %rdi            #  340   0xc2384  8      OPC=movq_r64_m64    
  callq .L_1f8d0                   #  341   0xc238c  5      OPC=callq_label     
  movslq 0x58(%rsp), %rdx          #  342   0xc2391  5      OPC=movslq_r64_m32  
  movq 0x88(%r14), %rax            #  343   0xc2396  7      OPC=movq_r64_m64    
  movq (%rax,%rdx,8), %rax         #  344   0xc239d  4      OPC=movq_r64_m64    
  testq %rax, %rax                 #  345   0xc23a1  3      OPC=testq_r64_r64   
  je .L_c248e                      #  346   0xc23a4  6      OPC=je_label_1      
  movq 0x68(%rsp), %rdi            #  347   0xc23aa  5      OPC=movq_r64_m64    
  movl %ebx, (%rdi)                #  348   0xc23af  2      OPC=movl_m32_r32    
  movq 0x70(%rsp), %rdi            #  349   0xc23b1  5      OPC=movq_r64_m64    
  movq %rdi, 0x88(%r14)            #  350   0xc23b6  7      OPC=movq_m64_r64    
  movl 0x7c(%rsp), %edi            #  351   0xc23bd  4      OPC=movl_r32_m32    
  movl %edi, 0x38(%r14)            #  352   0xc23c1  4      OPC=movl_m32_r32    
  addq $0x8, %rax                  #  353   0xc23c5  4      OPC=addq_r64_imm8   
  movq %rax, %rdi                  #  354   0xc23c9  3      OPC=movq_r64_r64    
  je .L_c23e4                      #  355   0xc23cc  2      OPC=je_label        
  movl 0x78(%rsp), %esi            #  356   0xc23ce  4      OPC=movl_r32_m32    
  callq .re_node_set_contains      #  357   0xc23d2  5      OPC=callq_label     
  testl %eax, %eax                 #  358   0xc23d7  2      OPC=testl_r32_r32   
  sete %al                         #  359   0xc23d9  3      OPC=sete_r8         
  movzbl %al, %eax                 #  360   0xc23dc  3      OPC=movzbl_r32_r8   
  jmpq .L_c24ea                    #  361   0xc23df  5      OPC=jmpq_label_1    
.L_c23e4:                          #        0xc23e4  0      OPC=<label>         
  movl $0x1, %eax                  #  362   0xc23e4  5      OPC=movl_r32_imm32  
  jmpq .L_c24ea                    #  363   0xc23e9  5      OPC=jmpq_label_1    
.L_c23ee:                          #        0xc23ee  0      OPC=<label>         
  movq 0x88(%r14), %rax            #  364   0xc23ee  7      OPC=movq_r64_m64    
  movq %rax, 0x70(%rsp)            #  365   0xc23f5  5      OPC=movq_m64_r64    
  movl 0x38(%r14), %eax            #  366   0xc23fa  4      OPC=movl_r32_m32    
  movl %eax, 0x7c(%rsp)            #  367   0xc23fe  4      OPC=movl_m32_r32    
  movq 0x68(%rsp), %rax            #  368   0xc2402  5      OPC=movq_r64_m64    
  movq 0x8(%rax), %rax             #  369   0xc2407  4      OPC=movq_r64_m64    
  movq %rax, 0x88(%r14)            #  370   0xc240b  7      OPC=movq_m64_r64    
  movl %ebp, 0x38(%r14)            #  371   0xc2412  4      OPC=movl_m32_r32    
  movq %r14, 0x38(%rsp)            #  372   0xc2416  5      OPC=movq_m64_r64    
  movl 0x78(%r14), %edx            #  373   0xc241b  4      OPC=movl_r32_m32    
  leal -0x1(%rbp), %esi            #  374   0xc241f  3      OPC=leal_r32_m16    
  movq %r14, %rdi                  #  375   0xc2422  3      OPC=movq_r64_r64    
  callq .re_string_context_at      #  376   0xc2425  5      OPC=callq_label     
  movl %eax, 0x18(%rsp)            #  377   0xc242a  4      OPC=movl_m32_r32    
  jmpq .L_c1e64                    #  378   0xc242e  5      OPC=jmpq_label_1    
.L_c2433:                          #        0xc2433  0      OPC=<label>         
  movl 0x48(%rsp), %ebx            #  379   0xc2433  4      OPC=movl_r32_m32    
  jmpq .L_c2305                    #  380   0xc2437  5      OPC=jmpq_label_1    
.L_c243c:                          #        0xc243c  0      OPC=<label>         
  testq %r15, %r15                 #  381   0xc243c  3      OPC=testq_r64_r64   
  jne .L_c206c                     #  382   0xc243f  6      OPC=jne_label_1     
  jmpq .L_c2433                    #  383   0xc2445  2      OPC=jmpq_label      
.L_c2447:                          #        0xc2447  0      OPC=<label>         
  movl $0xc, 0xbc(%rsp)            #  384   0xc2447  11     OPC=movl_m32_imm32  
  jmpq .L_c2261                    #  385   0xc2452  5      OPC=jmpq_label_1    
.L_c2457:                          #        0xc2457  0      OPC=<label>         
  movslq %ebx, %rax                #  386   0xc2457  3      OPC=movslq_r64_r32  
  movq 0x88(%r13), %rdx            #  387   0xc245a  7      OPC=movq_r64_m64    
  movq $0x0, (%rdx,%rax,8)         #  388   0xc2461  8      OPC=movq_m64_imm32  
  addl $0x1, 0x4c(%rsp)            #  389   0xc2469  5      OPC=addl_m32_imm8   
  jmpq .L_c2360                    #  390   0xc246e  5      OPC=jmpq_label_1    
.L_c2473:                          #        0xc2473  0      OPC=<label>         
  movslq %ebx, %rax                #  391   0xc2473  3      OPC=movslq_r64_r32  
  movq 0x88(%r13), %rdx            #  392   0xc2476  7      OPC=movq_r64_m64    
  movq %r15, (%rdx,%rax,8)         #  393   0xc247d  4      OPC=movq_m64_r64    
  movl $0x0, 0x4c(%rsp)            #  394   0xc2481  8      OPC=movl_m32_imm32  
  jmpq .L_c2360                    #  395   0xc2489  5      OPC=jmpq_label_1    
.L_c248e:                          #        0xc248e  0      OPC=<label>         
  movq 0x68(%rsp), %rax            #  396   0xc248e  5      OPC=movq_r64_m64    
  movl %ebx, (%rax)                #  397   0xc2493  2      OPC=movl_m32_r32    
  movq 0x70(%rsp), %rax            #  398   0xc2495  5      OPC=movq_r64_m64    
  movq %rax, 0x88(%r14)            #  399   0xc249a  7      OPC=movq_m64_r64    
  movl 0x7c(%rsp), %eax            #  400   0xc24a1  4      OPC=movl_r32_m32    
  movl %eax, 0x38(%r14)            #  401   0xc24a5  4      OPC=movl_m32_r32    
  movl $0x1, %eax                  #  402   0xc24a9  5      OPC=movl_r32_imm32  
  jmpq .L_c24ea                    #  403   0xc24ae  2      OPC=jmpq_label      
.L_c24b0:                          #        0xc24b0  0      OPC=<label>         
  movq $0x0, 0xa0(%rsp)            #  404   0xc24b0  12     OPC=movq_m64_imm32  
  movq $0x0, 0xa8(%rsp)            #  405   0xc24bc  12     OPC=movq_m64_imm32  
  jmpq .L_c1f02                    #  406   0xc24c8  5      OPC=jmpq_label_1    
.L_c24cd:                          #        0xc24cd  0      OPC=<label>         
  movq $0x0, 0xa0(%rsp)            #  407   0xc24cd  12     OPC=movq_m64_imm32  
  movq $0x0, 0xa8(%rsp)            #  408   0xc24d9  12     OPC=movq_m64_imm32  
  jmpq .L_c1fb0                    #  409   0xc24e5  5      OPC=jmpq_label_1    
.L_c24ea:                          #        0xc24ea  0      OPC=<label>         
  addq $0xc8, %rsp                 #  410   0xc24ea  7      OPC=addq_r64_imm32  
  popq %rbx                        #  411   0xc24f1  1      OPC=popq_r64_1      
  popq %rbp                        #  412   0xc24f2  1      OPC=popq_r64_1      
  popq %r12                        #  413   0xc24f3  2      OPC=popq_r64_1      
  popq %r13                        #  414   0xc24f5  2      OPC=popq_r64_1      
  popq %r14                        #  415   0xc24f7  2      OPC=popq_r64_1      
  popq %r15                        #  416   0xc24f9  2      OPC=popq_r64_1      
  retq                             #  417   0xc24fb  1      OPC=retq            
                                                                                
.size check_arrival, .-check_arrival

