  .text
  .globl svcudp_reply
  .type svcudp_reply, @function

#! file-offset 0x10808b
#! rip-offset  0x10808b
#! capacity    743 bytes

# Text                              #  Line  RIP       Bytes  Opcode              
.svcudp_reply:                      #        0x10808b  0      OPC=<label>         
  pushq %r14                        #  1     0x10808b  2      OPC=pushq_r64_1     
  pushq %r13                        #  2     0x10808d  2      OPC=pushq_r64_1     
  pushq %r12                        #  3     0x10808f  2      OPC=pushq_r64_1     
  pushq %rbp                        #  4     0x108091  1      OPC=pushq_r64_1     
  pushq %rbx                        #  5     0x108092  1      OPC=pushq_r64_1     
  movq %rdi, %rbp                   #  6     0x108093  3      OPC=movq_r64_r64    
  movq %rsi, %r13                   #  7     0x108096  3      OPC=movq_r64_r64    
  movq 0x48(%rdi), %rbx             #  8     0x108099  4      OPC=movq_r64_m64    
  leaq 0x10(%rbx), %r12             #  9     0x10809d  4      OPC=leaq_r64_m16    
  movl $0x0, 0x10(%rbx)             #  10    0x1080a1  7      OPC=movl_m32_imm32  
  movq 0x18(%rbx), %rax             #  11    0x1080a8  4      OPC=movq_r64_m64    
  movl $0x0, %esi                   #  12    0x1080ac  5      OPC=movl_r32_imm32  
  movq %r12, %rdi                   #  13    0x1080b1  3      OPC=movq_r64_r64    
  callq 0x28(%rax)                  #  14    0x1080b4  3      OPC=callq_m64       
  movq 0x8(%rbx), %rax              #  15    0x1080b7  4      OPC=movq_r64_m64    
  movq %rax, (%r13)                 #  16    0x1080bb  4      OPC=movq_m64_r64    
  movq %r13, %rsi                   #  17    0x1080bf  3      OPC=movq_r64_r64    
  movq %r12, %rdi                   #  18    0x1080c2  3      OPC=movq_r64_r64    
  callq .xdr_replymsg_GLIBC_2_2_5   #  19    0x1080c5  5      OPC=callq_label     
  movl $0x0, %edx                   #  20    0x1080ca  5      OPC=movl_r32_imm32  
  testl %eax, %eax                  #  21    0x1080cf  2      OPC=testl_r32_r32   
  je .L_108367                      #  22    0x1080d1  6      OPC=je_label_1      
  movq 0x18(%rbx), %rax             #  23    0x1080d7  4      OPC=movq_r64_m64    
  movq %r12, %rdi                   #  24    0x1080db  3      OPC=movq_r64_r64    
  callq 0x20(%rax)                  #  25    0x1080de  3      OPC=callq_m64       
  movl %eax, %r13d                  #  26    0x1080e1  3      OPC=movl_r32_r32    
  cmpq $0x0, 0x78(%rbp)             #  27    0x1080e4  5      OPC=cmpq_m64_imm8   
  je .L_108110                      #  28    0x1080e9  2      OPC=je_label        
  movq 0x40(%rbp), %rax             #  29    0x1080eb  4      OPC=movq_r64_m64    
  movq %rax, 0x50(%rbp)             #  30    0x1080ef  4      OPC=movq_m64_r64    
  movslq %r13d, %rax                #  31    0x1080f3  3      OPC=movslq_r64_r32  
  movq %rax, 0x58(%rbp)             #  32    0x1080f6  4      OPC=movq_m64_r64    
  leaq 0x60(%rbp), %rsi             #  33    0x1080fa  4      OPC=leaq_r64_m16    
  movl $0x0, %edx                   #  34    0x1080fe  5      OPC=movl_r32_imm32  
  movl (%rbp), %edi                 #  35    0x108103  3      OPC=movl_r32_m32    
  callq .sendmsg                    #  36    0x108106  5      OPC=callq_label     
  movl %eax, %r12d                  #  37    0x10810b  3      OPC=movl_r32_r32    
  jmpq .L_10812f                    #  38    0x10810e  2      OPC=jmpq_label      
.L_108110:                          #        0x108110  0      OPC=<label>         
  movslq %eax, %rdx                 #  39    0x108110  3      OPC=movslq_r64_r32  
  movq 0x40(%rbp), %rsi             #  40    0x108113  4      OPC=movq_r64_m64    
  movl 0x10(%rbp), %r9d             #  41    0x108117  4      OPC=movl_r32_m32    
  leaq 0x14(%rbp), %r8              #  42    0x10811b  4      OPC=leaq_r64_m16    
  movl $0x0, %ecx                   #  43    0x10811f  5      OPC=movl_r32_imm32  
  movl (%rbp), %edi                 #  44    0x108124  3      OPC=movl_r32_m32    
  callq .sendto                     #  45    0x108127  5      OPC=callq_label     
  movl %eax, %r12d                  #  46    0x10812c  3      OPC=movl_r32_r32    
.L_10812f:                          #        0x10812f  0      OPC=<label>         
  movl $0x0, %edx                   #  47    0x10812f  5      OPC=movl_r32_imm32  
  cmpl %r13d, %r12d                 #  48    0x108134  3      OPC=cmpl_r32_r32    
  jne .L_108367                     #  49    0x108137  6      OPC=jne_label_1     
  testl %r12d, %r12d                #  50    0x10813d  3      OPC=testl_r32_r32   
  js .L_108362                      #  51    0x108140  6      OPC=js_label_1      
  cmpq $0x0, 0x1d0(%rbx)            #  52    0x108146  8      OPC=cmpq_m64_imm8   
  je .L_108362                      #  53    0x10814e  6      OPC=je_label_1      
  movslq %r12d, %r12                #  54    0x108154  3      OPC=movslq_r64_r32  
  movq 0x48(%rbp), %r14             #  55    0x108157  4      OPC=movq_r64_m64    
  movq 0x1d0(%r14), %r13            #  56    0x10815b  7      OPC=movq_r64_m64    
  movq 0x18(%r13), %rdx             #  57    0x108162  4      OPC=movq_r64_m64    
  movq 0x10(%r13), %rax             #  58    0x108166  4      OPC=movq_r64_m64    
  movq (%rax,%rdx,8), %rbx          #  59    0x10816a  4      OPC=movq_r64_m64    
  testq %rbx, %rbx                  #  60    0x10816e  3      OPC=testq_r64_r64   
  je .L_108216                      #  61    0x108171  6      OPC=je_label_1      
  movq (%r13), %rax                 #  62    0x108177  4      OPC=movq_r64_m64    
  leaq (,%rax,4), %rcx              #  63    0x10817b  8      OPC=leaq_r64_m16    
  movq (%rbx), %rax                 #  64    0x108183  3      OPC=movq_r64_m64    
  movl $0x0, %edx                   #  65    0x108186  5      OPC=movl_r32_imm32  
  divq %rcx                         #  66    0x10818b  3      OPC=divq_r64        
  movl %edx, %edx                   #  67    0x10818e  2      OPC=movl_r32_r32    
  movq 0x8(%r13), %rax              #  68    0x108190  4      OPC=movq_r64_m64    
  leaq (%rax,%rdx,8), %rcx          #  69    0x108194  4      OPC=leaq_r64_m16    
  movq (%rcx), %rax                 #  70    0x108198  3      OPC=movq_r64_m64    
  testq %rax, %rax                  #  71    0x10819b  3      OPC=testq_r64_r64   
  je .L_1081c6                      #  72    0x10819e  2      OPC=je_label        
  cmpq %rax, %rbx                   #  73    0x1081a0  3      OPC=cmpq_r64_r64    
  jne .L_1081aa                     #  74    0x1081a3  2      OPC=jne_label       
  jmpq .L_1081c6                    #  75    0x1081a5  2      OPC=jmpq_label      
.L_1081a7:                          #        0x1081a7  0      OPC=<label>         
  movq %rdx, %rax                   #  76    0x1081a7  3      OPC=movq_r64_r64    
.L_1081aa:                          #        0x1081aa  0      OPC=<label>         
  movq 0x40(%rax), %rdx             #  77    0x1081aa  4      OPC=movq_r64_m64    
  testq %rdx, %rdx                  #  78    0x1081ae  3      OPC=testq_r64_r64   
  setne %sil                        #  79    0x1081b1  4      OPC=setne_r8        
  cmpq %rdx, %rbx                   #  80    0x1081b5  3      OPC=cmpq_r64_r64    
  setne %cl                         #  81    0x1081b8  3      OPC=setne_r8        
  testb %cl, %sil                   #  82    0x1081bb  3      OPC=testb_r8_r8     
  jne .L_1081a7                     #  83    0x1081be  2      OPC=jne_label       
  leaq 0x40(%rax), %rcx             #  84    0x1081c0  4      OPC=leaq_r64_m16    
  jmpq .L_1081c9                    #  85    0x1081c4  2      OPC=jmpq_label      
.L_1081c6:                          #        0x1081c6  0      OPC=<label>         
  movq %rax, %rdx                   #  86    0x1081c6  3      OPC=movq_r64_r64    
.L_1081c9:                          #        0x1081c9  0      OPC=<label>         
  testq %rdx, %rdx                  #  87    0x1081c9  3      OPC=testq_r64_r64   
  jne .L_108206                     #  88    0x1081cc  2      OPC=jne_label       
  movb $0x5, %dl                    #  89    0x1081ce  2      OPC=movb_r8_imm8    
  leaq 0x52b4e(%rip), %rsi          #  90    0x1081d0  7      OPC=leaq_r64_m16    
  leaq 0x4f67c(%rip), %rdi          #  91    0x1081d7  7      OPC=leaq_r64_m16    
  callq .__dcgettext                #  92    0x1081de  5      OPC=callq_label     
  movq %rax, %rdx                   #  93    0x1081e3  3      OPC=movq_r64_r64    
  leaq 0x5246e(%rip), %rsi          #  94    0x1081e6  7      OPC=leaq_r64_m16    
  movl $0x0, %edi                   #  95    0x1081ed  5      OPC=movl_r32_imm32  
  movl $0x0, %eax                   #  96    0x1081f2  5      OPC=movl_r32_imm32  
  callq .__fxprintf                 #  97    0x1081f7  5      OPC=callq_label     
  movl $0x1, %edx                   #  98    0x1081fc  5      OPC=movl_r32_imm32  
  jmpq .L_108367                    #  99    0x108201  5      OPC=jmpq_label_1    
.L_108206:                          #        0x108206  0      OPC=<label>         
  movq 0x40(%rbx), %rax             #  100   0x108206  4      OPC=movq_r64_m64    
  movq %rax, (%rcx)                 #  101   0x10820a  3      OPC=movq_m64_r64    
  movq 0x30(%rbx), %rsi             #  102   0x10820d  4      OPC=movq_r64_m64    
  jmpq .L_1082b6                    #  103   0x108211  5      OPC=jmpq_label_1    
.L_108216:                          #        0x108216  0      OPC=<label>         
  movl $0x48, %edi                  #  104   0x108216  5      OPC=movl_r32_imm32  
  callq .memalign_plt               #  105   0x10821b  5      OPC=callq_label     
  movq %rax, %rbx                   #  106   0x108220  3      OPC=movq_r64_r64    
  testq %rax, %rax                  #  107   0x108223  3      OPC=testq_r64_r64   
  jne .L_108263                     #  108   0x108226  2      OPC=jne_label       
  movl $0x5, %edx                   #  109   0x108228  5      OPC=movl_r32_imm32  
  leaq 0x55bbc(%rip), %rsi          #  110   0x10822d  7      OPC=leaq_r64_m16    
  leaq 0x4f61f(%rip), %rdi          #  111   0x108234  7      OPC=leaq_r64_m16    
  callq .__dcgettext                #  112   0x10823b  5      OPC=callq_label     
  movq %rax, %rdx                   #  113   0x108240  3      OPC=movq_r64_r64    
  leaq 0x52411(%rip), %rsi          #  114   0x108243  7      OPC=leaq_r64_m16    
  movl $0x0, %edi                   #  115   0x10824a  5      OPC=movl_r32_imm32  
  movl $0x0, %eax                   #  116   0x10824f  5      OPC=movl_r32_imm32  
  callq .__fxprintf                 #  117   0x108254  5      OPC=callq_label     
  movl $0x1, %edx                   #  118   0x108259  5      OPC=movl_r32_imm32  
  jmpq .L_108367                    #  119   0x10825e  5      OPC=jmpq_label_1    
.L_108263:                          #        0x108263  0      OPC=<label>         
  movl (%r14), %edi                 #  120   0x108263  3      OPC=movl_r32_m32    
  callq .memalign_plt               #  121   0x108266  5      OPC=callq_label     
  movq %rax, %rsi                   #  122   0x10826b  3      OPC=movq_r64_r64    
  testq %rax, %rax                  #  123   0x10826e  3      OPC=testq_r64_r64   
  jne .L_1082b6                     #  124   0x108271  2      OPC=jne_label       
  movq %rbx, %rdi                   #  125   0x108273  3      OPC=movq_r64_r64    
  callq .L_1f8d0                    #  126   0x108276  5      OPC=callq_label     
  movl $0x5, %edx                   #  127   0x10827b  5      OPC=movl_r32_imm32  
  leaq 0x55b89(%rip), %rsi          #  128   0x108280  7      OPC=leaq_r64_m16    
  leaq 0x4f5cc(%rip), %rdi          #  129   0x108287  7      OPC=leaq_r64_m16    
  callq .__dcgettext                #  130   0x10828e  5      OPC=callq_label     
  movq %rax, %rdx                   #  131   0x108293  3      OPC=movq_r64_r64    
  leaq 0x523be(%rip), %rsi          #  132   0x108296  7      OPC=leaq_r64_m16    
  movl $0x0, %edi                   #  133   0x10829d  5      OPC=movl_r32_imm32  
  movl $0x0, %eax                   #  134   0x1082a2  5      OPC=movl_r32_imm32  
  callq .__fxprintf                 #  135   0x1082a7  5      OPC=callq_label     
  movl $0x1, %edx                   #  136   0x1082ac  5      OPC=movl_r32_imm32  
  jmpq .L_108367                    #  137   0x1082b1  5      OPC=jmpq_label_1    
.L_1082b6:                          #        0x1082b6  0      OPC=<label>         
  movq %r12, 0x38(%rbx)             #  138   0x1082b6  4      OPC=movq_m64_r64    
  movq 0x40(%rbp), %rax             #  139   0x1082ba  4      OPC=movq_r64_m64    
  movq %rax, 0x30(%rbx)             #  140   0x1082be  4      OPC=movq_m64_r64    
  movq %rsi, 0x40(%rbp)             #  141   0x1082c2  4      OPC=movq_m64_r64    
  leaq 0x10(%r14), %rdi             #  142   0x1082c6  4      OPC=leaq_r64_m16    
  movl $0x0, %ecx                   #  143   0x1082ca  5      OPC=movl_r32_imm32  
  movl (%r14), %edx                 #  144   0x1082cf  3      OPC=movl_r32_m32    
  callq .xdrmem_create_GLIBC_2_2_5  #  145   0x1082d2  5      OPC=callq_label     
  movq 0x8(%r14), %rax              #  146   0x1082d7  4      OPC=movq_r64_m64    
  movq %rax, (%rbx)                 #  147   0x1082db  3      OPC=movq_m64_r64    
  movq 0x30(%r13), %rdx             #  148   0x1082de  4      OPC=movq_r64_m64    
  movq %rdx, 0x8(%rbx)              #  149   0x1082e2  4      OPC=movq_m64_r64    
  movq 0x28(%r13), %rdx             #  150   0x1082e6  4      OPC=movq_r64_m64    
  movq %rdx, 0x10(%rbx)             #  151   0x1082ea  4      OPC=movq_m64_r64    
  movq 0x20(%r13), %rdx             #  152   0x1082ee  4      OPC=movq_r64_m64    
  movq %rdx, 0x18(%rbx)             #  153   0x1082f2  4      OPC=movq_m64_r64    
  movq 0x38(%r13), %rsi             #  154   0x1082f6  4      OPC=movq_r64_m64    
  movq 0x40(%r13), %rdi             #  155   0x1082fa  4      OPC=movq_r64_m64    
  movq %rsi, 0x20(%rbx)             #  156   0x1082fe  4      OPC=movq_m64_r64    
  movq %rdi, 0x28(%rbx)             #  157   0x108302  4      OPC=movq_m64_r64    
  movq 0x48(%rbp), %rdx             #  158   0x108306  4      OPC=movq_r64_m64    
  movq 0x1d0(%rdx), %rdx            #  159   0x10830a  7      OPC=movq_r64_m64    
  movq (%rdx), %rcx                 #  160   0x108311  3      OPC=movq_r64_m64    
  shlq $0x2, %rcx                   #  161   0x108314  4      OPC=shlq_r64_imm8   
  movl $0x0, %edx                   #  162   0x108318  5      OPC=movl_r32_imm32  
  divq %rcx                         #  163   0x10831d  3      OPC=divq_r64        
  movl %edx, %edx                   #  164   0x108320  2      OPC=movl_r32_r32    
  movq 0x8(%r13), %rax              #  165   0x108322  4      OPC=movq_r64_m64    
  movq (%rax,%rdx,8), %rax          #  166   0x108326  4      OPC=movq_r64_m64    
  movq %rax, 0x40(%rbx)             #  167   0x10832a  4      OPC=movq_m64_r64    
  movq 0x8(%r13), %rax              #  168   0x10832e  4      OPC=movq_r64_m64    
  movq %rbx, (%rax,%rdx,8)          #  169   0x108332  4      OPC=movq_m64_r64    
  movq 0x10(%r13), %rdx             #  170   0x108336  4      OPC=movq_r64_m64    
  movq 0x18(%r13), %rax             #  171   0x10833a  4      OPC=movq_r64_m64    
  leaq 0x1(%rax), %rcx              #  172   0x10833e  4      OPC=leaq_r64_m16    
  movq %rcx, 0x18(%r13)             #  173   0x108342  4      OPC=movq_m64_r64    
  movq %rbx, (%rdx,%rax,8)          #  174   0x108346  4      OPC=movq_m64_r64    
  movq 0x18(%r13), %rax             #  175   0x10834a  4      OPC=movq_r64_m64    
  movl $0x0, %edx                   #  176   0x10834e  5      OPC=movl_r32_imm32  
  divq (%r13)                       #  177   0x108353  4      OPC=divq_m64        
  movq %rdx, 0x18(%r13)             #  178   0x108357  4      OPC=movq_m64_r64    
  movl $0x1, %edx                   #  179   0x10835b  5      OPC=movl_r32_imm32  
  jmpq .L_108367                    #  180   0x108360  2      OPC=jmpq_label      
.L_108362:                          #        0x108362  0      OPC=<label>         
  movl $0x1, %edx                   #  181   0x108362  5      OPC=movl_r32_imm32  
.L_108367:                          #        0x108367  0      OPC=<label>         
  movl %edx, %eax                   #  182   0x108367  2      OPC=movl_r32_r32    
  popq %rbx                         #  183   0x108369  1      OPC=popq_r64_1      
  popq %rbp                         #  184   0x10836a  1      OPC=popq_r64_1      
  popq %r12                         #  185   0x10836b  2      OPC=popq_r64_1      
  popq %r13                         #  186   0x10836d  2      OPC=popq_r64_1      
  popq %r14                         #  187   0x10836f  2      OPC=popq_r64_1      
  retq                              #  188   0x108371  1      OPC=retq            
                                                                                  
.size svcudp_reply, .-svcudp_reply

