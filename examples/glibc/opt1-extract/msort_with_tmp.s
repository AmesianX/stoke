  .text
  .globl msort_with_tmp
  .type msort_with_tmp, @function

#! file-offset 0x32b6f
#! rip-offset  0x32b6f
#! capacity    750 bytes

# Text                      #  Line  RIP      Bytes  Opcode             
.msort_with_tmp:            #        0x32b6f  0      OPC=<label>        
  cmpq $0x1, %rdx           #  1     0x32b6f  4      OPC=cmpq_r64_imm8  
  jbe .L_32e5b              #  2     0x32b73  6      OPC=jbe_label_1    
  pushq %r15                #  3     0x32b79  2      OPC=pushq_r64_1    
  pushq %r14                #  4     0x32b7b  2      OPC=pushq_r64_1    
  pushq %r13                #  5     0x32b7d  2      OPC=pushq_r64_1    
  pushq %r12                #  6     0x32b7f  2      OPC=pushq_r64_1    
  pushq %rbp                #  7     0x32b81  1      OPC=pushq_r64_1    
  pushq %rbx                #  8     0x32b82  1      OPC=pushq_r64_1    
  subq $0x38, %rsp          #  9     0x32b83  4      OPC=subq_r64_imm8  
  movq %rdx, %r12           #  10    0x32b87  3      OPC=movq_r64_r64   
  movq %rdx, 0x28(%rsp)     #  11    0x32b8a  5      OPC=movq_m64_r64   
  movq %rsi, 0x18(%rsp)     #  12    0x32b8f  5      OPC=movq_m64_r64   
  movq %rdi, %rbx           #  13    0x32b94  3      OPC=movq_r64_r64   
  movq %rdi, 0x20(%rsp)     #  14    0x32b97  5      OPC=movq_m64_r64   
  movq %rdx, %r14           #  15    0x32b9c  3      OPC=movq_r64_r64   
  shrq $0x1, %r14           #  16    0x32b9f  3      OPC=shrq_r64_one   
  subq %r14, %r12           #  17    0x32ba2  3      OPC=subq_r64_r64   
  movq %r14, %rbp           #  18    0x32ba5  3      OPC=movq_r64_r64   
  imulq (%rdi), %rbp        #  19    0x32ba8  4      OPC=imulq_r64_m64  
  addq %rsi, %rbp           #  20    0x32bac  3      OPC=addq_r64_r64   
  movq %r14, %rdx           #  21    0x32baf  3      OPC=movq_r64_r64   
  callq .msort_with_tmp     #  22    0x32bb2  5      OPC=callq_label    
  movq %r12, %rdx           #  23    0x32bb7  3      OPC=movq_r64_r64   
  movq %rbp, %rsi           #  24    0x32bba  3      OPC=movq_r64_r64   
  movq %rbx, %rdi           #  25    0x32bbd  3      OPC=movq_r64_r64   
  callq .msort_with_tmp     #  26    0x32bc0  5      OPC=callq_label    
  movq %rbx, %rax           #  27    0x32bc5  3      OPC=movq_r64_r64   
  movq 0x20(%rbx), %rbx     #  28    0x32bc8  4      OPC=movq_r64_m64   
  movq (%rax), %rcx         #  29    0x32bcc  3      OPC=movq_r64_m64   
  movq %rcx, 0x10(%rsp)     #  30    0x32bcf  5      OPC=movq_m64_r64   
  movq 0x10(%rax), %rsi     #  31    0x32bd4  4      OPC=movq_r64_m64   
  movq %rsi, (%rsp)         #  32    0x32bd8  4      OPC=movq_m64_r64   
  movq 0x18(%rax), %rcx     #  33    0x32bdc  4      OPC=movq_r64_m64   
  movq %rcx, 0x8(%rsp)      #  34    0x32be0  5      OPC=movq_m64_r64   
  movq 0x8(%rax), %rax      #  35    0x32be5  4      OPC=movq_r64_m64   
  cmpq $0x1, %rax           #  36    0x32be9  4      OPC=cmpq_r64_imm8  
  je .L_32c26               #  37    0x32bed  2      OPC=je_label       
  cmpq $0x1, %rax           #  38    0x32bef  4      OPC=cmpq_r64_imm8  
  jb .L_32c3f               #  39    0x32bf3  2      OPC=jb_label       
  cmpq $0x2, %rax           #  40    0x32bf5  4      OPC=cmpq_r64_imm8  
  je .L_32d4b               #  41    0x32bf9  6      OPC=je_label_1     
  cmpq $0x3, %rax           #  42    0x32bff  4      OPC=cmpq_r64_imm8  
  jne .L_32dfd              #  43    0x32c03  6      OPC=jne_label_1    
  testq %r12, %r12          #  44    0x32c09  3      OPC=testq_r64_r64  
  je .L_32c1c               #  45    0x32c0c  2      OPC=je_label       
  movq 0x18(%rsp), %r15     #  46    0x32c0e  5      OPC=movq_r64_m64   
  testq %r14, %r14          #  47    0x32c13  3      OPC=testq_r64_r64  
  jne .L_32d63              #  48    0x32c16  6      OPC=jne_label_1    
.L_32c1c:                   #        0x32c1c  0      OPC=<label>        
  movq 0x18(%rsp), %r15     #  49    0x32c1c  5      OPC=movq_r64_m64   
  jmpq .L_32e13             #  50    0x32c21  5      OPC=jmpq_label_1   
.L_32c26:                   #        0x32c26  0      OPC=<label>        
  testq %r12, %r12          #  51    0x32c26  3      OPC=testq_r64_r64  
  je .L_32c35               #  52    0x32c29  2      OPC=je_label       
  movq 0x18(%rsp), %r15     #  53    0x32c2b  5      OPC=movq_r64_m64   
  testq %r14, %r14          #  54    0x32c30  3      OPC=testq_r64_r64  
  jne .L_32c9e              #  55    0x32c33  2      OPC=jne_label      
.L_32c35:                   #        0x32c35  0      OPC=<label>        
  movq 0x18(%rsp), %r15     #  56    0x32c35  5      OPC=movq_r64_m64   
  jmpq .L_32e13             #  57    0x32c3a  5      OPC=jmpq_label_1   
.L_32c3f:                   #        0x32c3f  0      OPC=<label>        
  testq %r12, %r12          #  58    0x32c3f  3      OPC=testq_r64_r64  
  je .L_32e0e               #  59    0x32c42  6      OPC=je_label_1     
  testq %r14, %r14          #  60    0x32c48  3      OPC=testq_r64_r64  
  je .L_32e0e               #  61    0x32c4b  6      OPC=je_label_1     
  movq 0x18(%rsp), %r15     #  62    0x32c51  5      OPC=movq_r64_m64   
.L_32c56:                   #        0x32c56  0      OPC=<label>        
  movq 0x8(%rsp), %rdx      #  63    0x32c56  5      OPC=movq_r64_m64   
  movq %rbp, %rsi           #  64    0x32c5b  3      OPC=movq_r64_r64   
  movq %r15, %rdi           #  65    0x32c5e  3      OPC=movq_r64_r64   
  movq (%rsp), %rax         #  66    0x32c61  4      OPC=movq_r64_m64   
  callq %rax                #  67    0x32c65  2      OPC=callq_r64      
  testl %eax, %eax          #  68    0x32c67  2      OPC=testl_r32_r32  
  jg .L_32c7a               #  69    0x32c69  2      OPC=jg_label       
  movl (%r15), %eax         #  70    0x32c6b  3      OPC=movl_r32_m32   
  movl %eax, (%rbx)         #  71    0x32c6e  2      OPC=movl_m32_r32   
  addq $0x4, %r15           #  72    0x32c70  4      OPC=addq_r64_imm8  
  subq $0x1, %r14           #  73    0x32c74  4      OPC=subq_r64_imm8  
  jmpq .L_32c87             #  74    0x32c78  2      OPC=jmpq_label     
.L_32c7a:                   #        0x32c7a  0      OPC=<label>        
  movl (%rbp), %eax         #  75    0x32c7a  3      OPC=movl_r32_m32   
  movl %eax, (%rbx)         #  76    0x32c7d  2      OPC=movl_m32_r32   
  addq $0x4, %rbp           #  77    0x32c7f  4      OPC=addq_r64_imm8  
  subq $0x1, %r12           #  78    0x32c83  4      OPC=subq_r64_imm8  
.L_32c87:                   #        0x32c87  0      OPC=<label>        
  addq $0x4, %rbx           #  79    0x32c87  4      OPC=addq_r64_imm8  
  testq %r12, %r12          #  80    0x32c8b  3      OPC=testq_r64_r64  
  je .L_32e13               #  81    0x32c8e  6      OPC=je_label_1     
  testq %r14, %r14          #  82    0x32c94  3      OPC=testq_r64_r64  
  jne .L_32c56              #  83    0x32c97  2      OPC=jne_label      
  jmpq .L_32e13             #  84    0x32c99  5      OPC=jmpq_label_1   
.L_32c9e:                   #        0x32c9e  0      OPC=<label>        
  movq 0x8(%rsp), %rdx      #  85    0x32c9e  5      OPC=movq_r64_m64   
  movq %rbp, %rsi           #  86    0x32ca3  3      OPC=movq_r64_r64   
  movq %r15, %rdi           #  87    0x32ca6  3      OPC=movq_r64_r64   
  movq (%rsp), %rax         #  88    0x32ca9  4      OPC=movq_r64_m64   
  callq %rax                #  89    0x32cad  2      OPC=callq_r64      
  testl %eax, %eax          #  90    0x32caf  2      OPC=testl_r32_r32  
  jg .L_32cc3               #  91    0x32cb1  2      OPC=jg_label       
  movq (%r15), %rax         #  92    0x32cb3  3      OPC=movq_r64_m64   
  movq %rax, (%rbx)         #  93    0x32cb6  3      OPC=movq_m64_r64   
  addq $0x8, %r15           #  94    0x32cb9  4      OPC=addq_r64_imm8  
  subq $0x1, %r14           #  95    0x32cbd  4      OPC=subq_r64_imm8  
  jmpq .L_32cd2             #  96    0x32cc1  2      OPC=jmpq_label     
.L_32cc3:                   #        0x32cc3  0      OPC=<label>        
  movq (%rbp), %rax         #  97    0x32cc3  4      OPC=movq_r64_m64   
  movq %rax, (%rbx)         #  98    0x32cc7  3      OPC=movq_m64_r64   
  addq $0x8, %rbp           #  99    0x32cca  4      OPC=addq_r64_imm8  
  subq $0x1, %r12           #  100   0x32cce  4      OPC=subq_r64_imm8  
.L_32cd2:                   #        0x32cd2  0      OPC=<label>        
  addq $0x8, %rbx           #  101   0x32cd2  4      OPC=addq_r64_imm8  
  testq %r12, %r12          #  102   0x32cd6  3      OPC=testq_r64_r64  
  je .L_32e13               #  103   0x32cd9  6      OPC=je_label_1     
  testq %r14, %r14          #  104   0x32cdf  3      OPC=testq_r64_r64  
  jne .L_32c9e              #  105   0x32ce2  2      OPC=jne_label      
  jmpq .L_32e13             #  106   0x32ce4  5      OPC=jmpq_label_1   
.L_32ce9:                   #        0x32ce9  0      OPC=<label>        
  movq 0x10(%rsp), %rax     #  107   0x32ce9  5      OPC=movq_r64_m64   
  leaq (%rbx,%rax,1), %r13  #  108   0x32cee  4      OPC=leaq_r64_m16   
  movq 0x8(%rsp), %rdx      #  109   0x32cf2  5      OPC=movq_r64_m64   
  movq %rbp, %rsi           #  110   0x32cf7  3      OPC=movq_r64_r64   
  movq %r15, %rdi           #  111   0x32cfa  3      OPC=movq_r64_r64   
  movq (%rsp), %rax         #  112   0x32cfd  4      OPC=movq_r64_m64   
  callq %rax                #  113   0x32d01  2      OPC=callq_r64      
  testl %eax, %eax          #  114   0x32d03  2      OPC=testl_r32_r32  
  jg .L_32d1e               #  115   0x32d05  2      OPC=jg_label       
  subq $0x1, %r14           #  116   0x32d07  4      OPC=subq_r64_imm8  
  movq %r15, %rax           #  117   0x32d0b  3      OPC=movq_r64_r64   
  movq 0x10(%rsp), %rdi     #  118   0x32d0e  5      OPC=movq_r64_m64   
  leaq (%r15,%rdi,1), %r15  #  119   0x32d13  4      OPC=leaq_r64_m16   
.L_32d17:                   #        0x32d17  0      OPC=<label>        
  cmpq %r13, %rbx           #  120   0x32d17  3      OPC=cmpq_r64_r64   
  jb .L_32d31               #  121   0x32d1a  2      OPC=jb_label       
  jmpq .L_32d46             #  122   0x32d1c  2      OPC=jmpq_label     
.L_32d1e:                   #        0x32d1e  0      OPC=<label>        
  subq $0x1, %r12           #  123   0x32d1e  4      OPC=subq_r64_imm8  
  movq %rbp, %rax           #  124   0x32d22  3      OPC=movq_r64_r64   
  movq 0x10(%rsp), %rcx     #  125   0x32d25  5      OPC=movq_r64_m64   
  leaq (%rbp,%rcx,1), %rbp  #  126   0x32d2a  5      OPC=leaq_r64_m16   
  jmpq .L_32d17             #  127   0x32d2f  2      OPC=jmpq_label     
.L_32d31:                   #        0x32d31  0      OPC=<label>        
  addq $0x8, %rbx           #  128   0x32d31  4      OPC=addq_r64_imm8  
  addq $0x8, %rax           #  129   0x32d35  4      OPC=addq_r64_imm8  
  movq -0x8(%rax), %rdx     #  130   0x32d39  4      OPC=movq_r64_m64   
  movq %rdx, -0x8(%rbx)     #  131   0x32d3d  4      OPC=movq_m64_r64   
  cmpq %rbx, %r13           #  132   0x32d41  3      OPC=cmpq_r64_r64   
  ja .L_32d31               #  133   0x32d44  2      OPC=ja_label       
.L_32d46:                   #        0x32d46  0      OPC=<label>        
  movq %r13, %rbx           #  134   0x32d46  3      OPC=movq_r64_r64   
  jmpq .L_32d50             #  135   0x32d49  2      OPC=jmpq_label     
.L_32d4b:                   #        0x32d4b  0      OPC=<label>        
  movq 0x18(%rsp), %r15     #  136   0x32d4b  5      OPC=movq_r64_m64   
.L_32d50:                   #        0x32d50  0      OPC=<label>        
  testq %r12, %r12          #  137   0x32d50  3      OPC=testq_r64_r64  
  je .L_32e13               #  138   0x32d53  6      OPC=je_label_1     
  testq %r14, %r14          #  139   0x32d59  3      OPC=testq_r64_r64  
  jne .L_32ce9              #  140   0x32d5c  2      OPC=jne_label      
  jmpq .L_32e13             #  141   0x32d5e  5      OPC=jmpq_label_1   
.L_32d63:                   #        0x32d63  0      OPC=<label>        
  movq 0x8(%rsp), %rdx      #  142   0x32d63  5      OPC=movq_r64_m64   
  movq (%rbp), %rsi         #  143   0x32d68  4      OPC=movq_r64_m64   
  movq (%r15), %rdi         #  144   0x32d6c  3      OPC=movq_r64_m64   
  movq (%rsp), %rax         #  145   0x32d6f  4      OPC=movq_r64_m64   
  callq %rax                #  146   0x32d73  2      OPC=callq_r64      
  testl %eax, %eax          #  147   0x32d75  2      OPC=testl_r32_r32  
  jg .L_32d89               #  148   0x32d77  2      OPC=jg_label       
  movq (%r15), %rax         #  149   0x32d79  3      OPC=movq_r64_m64   
  movq %rax, (%rbx)         #  150   0x32d7c  3      OPC=movq_m64_r64   
  addq $0x8, %r15           #  151   0x32d7f  4      OPC=addq_r64_imm8  
  subq $0x1, %r14           #  152   0x32d83  4      OPC=subq_r64_imm8  
  jmpq .L_32d98             #  153   0x32d87  2      OPC=jmpq_label     
.L_32d89:                   #        0x32d89  0      OPC=<label>        
  movq (%rbp), %rax         #  154   0x32d89  4      OPC=movq_r64_m64   
  movq %rax, (%rbx)         #  155   0x32d8d  3      OPC=movq_m64_r64   
  addq $0x8, %rbp           #  156   0x32d90  4      OPC=addq_r64_imm8  
  subq $0x1, %r12           #  157   0x32d94  4      OPC=subq_r64_imm8  
.L_32d98:                   #        0x32d98  0      OPC=<label>        
  addq $0x8, %rbx           #  158   0x32d98  4      OPC=addq_r64_imm8  
  testq %r12, %r12          #  159   0x32d9c  3      OPC=testq_r64_r64  
  je .L_32e13               #  160   0x32d9f  2      OPC=je_label       
  testq %r14, %r14          #  161   0x32da1  3      OPC=testq_r64_r64  
  jne .L_32d63              #  162   0x32da4  2      OPC=jne_label      
  jmpq .L_32e13             #  163   0x32da6  2      OPC=jmpq_label     
.L_32da8:                   #        0x32da8  0      OPC=<label>        
  movq 0x8(%rsp), %rdx      #  164   0x32da8  5      OPC=movq_r64_m64   
  movq %rbp, %rsi           #  165   0x32dad  3      OPC=movq_r64_r64   
  movq %r15, %rdi           #  166   0x32db0  3      OPC=movq_r64_r64   
  movq (%rsp), %rax         #  167   0x32db3  4      OPC=movq_r64_m64   
  callq %rax                #  168   0x32db7  2      OPC=callq_r64      
  testl %eax, %eax          #  169   0x32db9  2      OPC=testl_r32_r32  
  jg .L_32ddd               #  170   0x32dbb  2      OPC=jg_label       
  movq 0x10(%rsp), %r13     #  171   0x32dbd  5      OPC=movq_r64_m64   
  movq %r13, %rdx           #  172   0x32dc2  3      OPC=movq_r64_r64   
  movq %r15, %rsi           #  173   0x32dc5  3      OPC=movq_r64_r64   
  movq %rbx, %rdi           #  174   0x32dc8  3      OPC=movq_r64_r64   
  callq .__GI_memcpy        #  175   0x32dcb  5      OPC=callq_label    
  leaq (%rbx,%r13,1), %rbx  #  176   0x32dd0  4      OPC=leaq_r64_m16   
  addq %r13, %r15           #  177   0x32dd4  3      OPC=addq_r64_r64   
  subq $0x1, %r14           #  178   0x32dd7  4      OPC=subq_r64_imm8  
  jmpq .L_32e02             #  179   0x32ddb  2      OPC=jmpq_label     
.L_32ddd:                   #        0x32ddd  0      OPC=<label>        
  movq 0x10(%rsp), %r13     #  180   0x32ddd  5      OPC=movq_r64_m64   
  movq %r13, %rdx           #  181   0x32de2  3      OPC=movq_r64_r64   
  movq %rbp, %rsi           #  182   0x32de5  3      OPC=movq_r64_r64   
  movq %rbx, %rdi           #  183   0x32de8  3      OPC=movq_r64_r64   
  callq .__GI_memcpy        #  184   0x32deb  5      OPC=callq_label    
  leaq (%rbx,%r13,1), %rbx  #  185   0x32df0  4      OPC=leaq_r64_m16   
  addq %r13, %rbp           #  186   0x32df4  3      OPC=addq_r64_r64   
  subq $0x1, %r12           #  187   0x32df7  4      OPC=subq_r64_imm8  
  jmpq .L_32e02             #  188   0x32dfb  2      OPC=jmpq_label     
.L_32dfd:                   #        0x32dfd  0      OPC=<label>        
  movq 0x18(%rsp), %r15     #  189   0x32dfd  5      OPC=movq_r64_m64   
.L_32e02:                   #        0x32e02  0      OPC=<label>        
  testq %r12, %r12          #  190   0x32e02  3      OPC=testq_r64_r64  
  je .L_32e13               #  191   0x32e05  2      OPC=je_label       
  testq %r14, %r14          #  192   0x32e07  3      OPC=testq_r64_r64  
  jne .L_32da8              #  193   0x32e0a  2      OPC=jne_label      
  jmpq .L_32e13             #  194   0x32e0c  2      OPC=jmpq_label     
.L_32e0e:                   #        0x32e0e  0      OPC=<label>        
  movq 0x18(%rsp), %r15     #  195   0x32e0e  5      OPC=movq_r64_m64   
.L_32e13:                   #        0x32e13  0      OPC=<label>        
  testq %r14, %r14          #  196   0x32e13  3      OPC=testq_r64_r64  
  je .L_32e2c               #  197   0x32e16  2      OPC=je_label       
  movq %r14, %rdx           #  198   0x32e18  3      OPC=movq_r64_r64   
  imulq 0x10(%rsp), %rdx    #  199   0x32e1b  6      OPC=imulq_r64_m64  
  movq %r15, %rsi           #  200   0x32e21  3      OPC=movq_r64_r64   
  movq %rbx, %rdi           #  201   0x32e24  3      OPC=movq_r64_r64   
  callq .__GI_memcpy        #  202   0x32e27  5      OPC=callq_label    
.L_32e2c:                   #        0x32e2c  0      OPC=<label>        
  movq 0x28(%rsp), %rdx     #  203   0x32e2c  5      OPC=movq_r64_m64   
  subq %r12, %rdx           #  204   0x32e31  3      OPC=subq_r64_r64   
  imulq 0x10(%rsp), %rdx    #  205   0x32e34  6      OPC=imulq_r64_m64  
  movq 0x20(%rsp), %rax     #  206   0x32e3a  5      OPC=movq_r64_m64   
  movq 0x20(%rax), %rsi     #  207   0x32e3f  4      OPC=movq_r64_m64   
  movq 0x18(%rsp), %rdi     #  208   0x32e43  5      OPC=movq_r64_m64   
  callq .__GI_memcpy        #  209   0x32e48  5      OPC=callq_label    
  addq $0x38, %rsp          #  210   0x32e4d  4      OPC=addq_r64_imm8  
  popq %rbx                 #  211   0x32e51  1      OPC=popq_r64_1     
  popq %rbp                 #  212   0x32e52  1      OPC=popq_r64_1     
  popq %r12                 #  213   0x32e53  2      OPC=popq_r64_1     
  popq %r13                 #  214   0x32e55  2      OPC=popq_r64_1     
  popq %r14                 #  215   0x32e57  2      OPC=popq_r64_1     
  popq %r15                 #  216   0x32e59  2      OPC=popq_r64_1     
.L_32e5b:                   #        0x32e5b  0      OPC=<label>        
  retq                      #  217   0x32e5b  1      OPC=retq           
  nop                       #  218   0x32e5c  1      OPC=nop            
                                                                        
.size msort_with_tmp, .-msort_with_tmp

