  .text
  .globl des_encrypt
  .type des_encrypt, @function

#! file-offset 0x100739
#! rip-offset  0x100739
#! capacity    1099 bytes

# Text                      #  Line  RIP       Bytes  Opcode              
.des_encrypt:               #        0x100739  0      OPC=<label>         
  pushq %rbx                #  1     0x100739  1      OPC=pushq_r64_1     
  movq (%rdi), %rax         #  2     0x10073a  3      OPC=movq_r64_m64    
  movq 0x8(%rdi), %r9       #  3     0x10073d  4      OPC=movq_r64_m64    
  movq %r9, %r10            #  4     0x100741  3      OPC=movq_r64_r64    
  shrq $0x4, %r10           #  5     0x100744  4      OPC=shrq_r64_imm8   
  xorq %rax, %r10           #  6     0x100748  3      OPC=xorq_r64_r64    
  andl $0xf0f0f0f, %r10d    #  7     0x10074b  7      OPC=andl_r32_imm32  
  xorq %r10, %rax           #  8     0x100752  3      OPC=xorq_r64_r64    
  movq %rax, %rcx           #  9     0x100755  3      OPC=movq_r64_r64    
  shlq $0x4, %r10           #  10    0x100758  4      OPC=shlq_r64_imm8   
  xorq %r9, %r10            #  11    0x10075c  3      OPC=xorq_r64_r64    
  shrq $0x10, %rax          #  12    0x10075f  4      OPC=shrq_r64_imm8   
  xorq %r10, %rax           #  13    0x100763  3      OPC=xorq_r64_r64    
  movzwl %ax, %eax          #  14    0x100766  3      OPC=movzwl_r32_r16  
  xorq %rax, %r10           #  15    0x100769  3      OPC=xorq_r64_r64    
  shlq $0x10, %rax          #  16    0x10076c  4      OPC=shlq_r64_imm8   
  xorq %rcx, %rax           #  17    0x100770  3      OPC=xorq_r64_r64    
  movq %r10, %rcx           #  18    0x100773  3      OPC=movq_r64_r64    
  shrq $0x2, %rcx           #  19    0x100776  4      OPC=shrq_r64_imm8   
  xorq %rax, %rcx           #  20    0x10077a  3      OPC=xorq_r64_r64    
  andl $0x33333333, %ecx    #  21    0x10077d  6      OPC=andl_r32_imm32  
  xorq %rcx, %rax           #  22    0x100783  3      OPC=xorq_r64_r64    
  movq %rax, %r9            #  23    0x100786  3      OPC=movq_r64_r64    
  shlq $0x2, %rcx           #  24    0x100789  4      OPC=shlq_r64_imm8   
  xorq %r10, %rcx           #  25    0x10078d  3      OPC=xorq_r64_r64    
  shrq $0x8, %rax           #  26    0x100790  4      OPC=shrq_r64_imm8   
  xorq %rcx, %rax           #  27    0x100794  3      OPC=xorq_r64_r64    
  andl $0xff00ff, %eax      #  28    0x100797  5      OPC=andl_eax_imm32  
  xorq %rax, %rcx           #  29    0x10079c  3      OPC=xorq_r64_r64    
  movq %rcx, %r8            #  30    0x10079f  3      OPC=movq_r64_r64    
  shlq $0x8, %rax           #  31    0x1007a2  4      OPC=shlq_r64_imm8   
  xorq %r9, %rax            #  32    0x1007a6  3      OPC=xorq_r64_r64    
  shrq $0x1, %rcx           #  33    0x1007a9  3      OPC=shrq_r64_one    
  xorq %rax, %rcx           #  34    0x1007ac  3      OPC=xorq_r64_r64    
  andl $0x55555555, %ecx    #  35    0x1007af  6      OPC=andl_r32_imm32  
  xorq %rcx, %rax           #  36    0x1007b5  3      OPC=xorq_r64_r64    
  addq %rcx, %rcx           #  37    0x1007b8  3      OPC=addq_r64_r64    
  xorq %r8, %rcx            #  38    0x1007bb  3      OPC=xorq_r64_r64    
  movq %rcx, %r8            #  39    0x1007be  3      OPC=movq_r64_r64    
  shrq $0x1f, %r8           #  40    0x1007c1  4      OPC=shrq_r64_imm8   
  addq %rcx, %rcx           #  41    0x1007c5  3      OPC=addq_r64_r64    
  orq %rcx, %r8             #  42    0x1007c8  3      OPC=orq_r64_r64     
  movq %rax, %rcx           #  43    0x1007cb  3      OPC=movq_r64_r64    
  shrq $0x1f, %rcx          #  44    0x1007ce  4      OPC=shrq_r64_imm8   
  addq %rax, %rax           #  45    0x1007d2  3      OPC=addq_r64_r64    
  orq %rcx, %rax            #  46    0x1007d5  3      OPC=orq_r64_r64     
  movl %r8d, %r8d           #  47    0x1007d8  3      OPC=movl_r32_r32    
  movl %eax, %ecx           #  48    0x1007db  2      OPC=movl_r32_r32    
  testl %edx, %edx          #  49    0x1007dd  2      OPC=testl_r32_r32   
  je .L_100965              #  50    0x1007df  6      OPC=je_label_1      
  movq %rsi, %r9            #  51    0x1007e5  3      OPC=movq_r64_r64    
  addq $0x100, %rsi         #  52    0x1007e8  7      OPC=addq_r64_imm32  
.L_1007ef:                  #        0x1007ef  0      OPC=<label>         
  movq %rcx, %r11           #  53    0x1007ef  3      OPC=movq_r64_r64    
  xorq (%r9), %r11          #  54    0x1007f2  3      OPC=xorq_r64_m64    
  movq %rcx, %r10           #  55    0x1007f5  3      OPC=movq_r64_r64    
  xorq 0x8(%r9), %r10       #  56    0x1007f8  4      OPC=xorq_r64_m64    
  movq %r10, %rax           #  57    0x1007fc  3      OPC=movq_r64_r64    
  shrq $0x4, %rax           #  58    0x1007ff  4      OPC=shrq_r64_imm8   
  shlq $0x1c, %r10          #  59    0x100803  4      OPC=shlq_r64_imm8   
  addq %rax, %r10           #  60    0x100807  3      OPC=addq_r64_r64    
  leaq 0x55cef(%rip), %rax  #  61    0x10080a  7      OPC=leaq_r64_m16    
  movq %r11, %rdx           #  62    0x100811  3      OPC=movq_r64_r64    
  shrq $0x8, %rdx           #  63    0x100814  4      OPC=shrq_r64_imm8   
  andl $0x3f, %edx          #  64    0x100818  3      OPC=andl_r32_imm8   
  subq $0xffffff80, %rdx    #  65    0x10081b  7      OPC=subq_r64_imm32  
  movq %r11, %rbx           #  66    0x100822  3      OPC=movq_r64_r64    
  shrq $0x10, %rbx          #  67    0x100825  4      OPC=shrq_r64_imm8   
  andl $0x3f, %ebx          #  68    0x100829  3      OPC=andl_r32_imm8   
  addq $0x100, %rbx         #  69    0x10082c  7      OPC=addq_r64_imm32  
  movl (%rax,%rdx,4), %edx  #  70    0x100833  3      OPC=movl_r32_m32    
  orl (%rax,%rbx,4), %edx   #  71    0x100836  3      OPC=orl_r32_m32     
  movq %r11, %rbx           #  72    0x100839  3      OPC=movq_r64_r64    
  andl $0x3f, %ebx          #  73    0x10083c  3      OPC=andl_r32_imm8   
  orl (%rax,%rbx,4), %edx   #  74    0x10083f  3      OPC=orl_r32_m32     
  shrq $0x18, %r11          #  75    0x100842  4      OPC=shrq_r64_imm8   
  andl $0x3f, %r11d         #  76    0x100846  4      OPC=andl_r32_imm8   
  addq $0x180, %r11         #  77    0x10084a  7      OPC=addq_r64_imm32  
  orl (%rax,%r11,4), %edx   #  78    0x100851  4      OPC=orl_r32_m32     
  movq %r10, %r11           #  79    0x100855  3      OPC=movq_r64_r64    
  andl $0x3f, %r11d         #  80    0x100858  4      OPC=andl_r32_imm8   
  addq $0x40, %r11          #  81    0x10085c  4      OPC=addq_r64_imm8   
  orl (%rax,%r11,4), %edx   #  82    0x100860  4      OPC=orl_r32_m32     
  movq %r10, %r11           #  83    0x100864  3      OPC=movq_r64_r64    
  shrq $0x8, %r11           #  84    0x100867  4      OPC=shrq_r64_imm8   
  andl $0x3f, %r11d         #  85    0x10086b  4      OPC=andl_r32_imm8   
  addq $0xc0, %r11          #  86    0x10086f  7      OPC=addq_r64_imm32  
  orl (%rax,%r11,4), %edx   #  87    0x100876  4      OPC=orl_r32_m32     
  movq %r10, %r11           #  88    0x10087a  3      OPC=movq_r64_r64    
  shrq $0x10, %r11          #  89    0x10087d  4      OPC=shrq_r64_imm8   
  andl $0x3f, %r11d         #  90    0x100881  4      OPC=andl_r32_imm8   
  addq $0x140, %r11         #  91    0x100885  7      OPC=addq_r64_imm32  
  orl (%rax,%r11,4), %edx   #  92    0x10088c  4      OPC=orl_r32_m32     
  shrq $0x18, %r10          #  93    0x100890  4      OPC=shrq_r64_imm8   
  andl $0x3f, %r10d         #  94    0x100894  4      OPC=andl_r32_imm8   
  addq $0x1c0, %r10         #  95    0x100898  7      OPC=addq_r64_imm32  
  orl (%rax,%r10,4), %edx   #  96    0x10089f  4      OPC=orl_r32_m32     
  xorq %rdx, %r8            #  97    0x1008a3  3      OPC=xorq_r64_r64    
  movq %r8, %r11            #  98    0x1008a6  3      OPC=movq_r64_r64    
  xorq 0x10(%r9), %r11      #  99    0x1008a9  4      OPC=xorq_r64_m64    
  movq %r8, %r10            #  100   0x1008ad  3      OPC=movq_r64_r64    
  xorq 0x18(%r9), %r10      #  101   0x1008b0  4      OPC=xorq_r64_m64    
  movq %r10, %rdx           #  102   0x1008b4  3      OPC=movq_r64_r64    
  shrq $0x4, %rdx           #  103   0x1008b7  4      OPC=shrq_r64_imm8   
  shlq $0x1c, %r10          #  104   0x1008bb  4      OPC=shlq_r64_imm8   
  addq %rdx, %r10           #  105   0x1008bf  3      OPC=addq_r64_r64    
  movq %r11, %rdx           #  106   0x1008c2  3      OPC=movq_r64_r64    
  shrq $0x8, %rdx           #  107   0x1008c5  4      OPC=shrq_r64_imm8   
  andl $0x3f, %edx          #  108   0x1008c9  3      OPC=andl_r32_imm8   
  subq $0xffffff80, %rdx    #  109   0x1008cc  7      OPC=subq_r64_imm32  
  movq %r11, %rbx           #  110   0x1008d3  3      OPC=movq_r64_r64    
  shrq $0x10, %rbx          #  111   0x1008d6  4      OPC=shrq_r64_imm8   
  andl $0x3f, %ebx          #  112   0x1008da  3      OPC=andl_r32_imm8   
  addq $0x100, %rbx         #  113   0x1008dd  7      OPC=addq_r64_imm32  
  movl (%rax,%rdx,4), %edx  #  114   0x1008e4  3      OPC=movl_r32_m32    
  orl (%rax,%rbx,4), %edx   #  115   0x1008e7  3      OPC=orl_r32_m32     
  movq %r11, %rbx           #  116   0x1008ea  3      OPC=movq_r64_r64    
  andl $0x3f, %ebx          #  117   0x1008ed  3      OPC=andl_r32_imm8   
  orl (%rax,%rbx,4), %edx   #  118   0x1008f0  3      OPC=orl_r32_m32     
  shrq $0x18, %r11          #  119   0x1008f3  4      OPC=shrq_r64_imm8   
  andl $0x3f, %r11d         #  120   0x1008f7  4      OPC=andl_r32_imm8   
  addq $0x180, %r11         #  121   0x1008fb  7      OPC=addq_r64_imm32  
  orl (%rax,%r11,4), %edx   #  122   0x100902  4      OPC=orl_r32_m32     
  movq %r10, %r11           #  123   0x100906  3      OPC=movq_r64_r64    
  andl $0x3f, %r11d         #  124   0x100909  4      OPC=andl_r32_imm8   
  addq $0x40, %r11          #  125   0x10090d  4      OPC=addq_r64_imm8   
  orl (%rax,%r11,4), %edx   #  126   0x100911  4      OPC=orl_r32_m32     
  movq %r10, %r11           #  127   0x100915  3      OPC=movq_r64_r64    
  shrq $0x8, %r11           #  128   0x100918  4      OPC=shrq_r64_imm8   
  andl $0x3f, %r11d         #  129   0x10091c  4      OPC=andl_r32_imm8   
  addq $0xc0, %r11          #  130   0x100920  7      OPC=addq_r64_imm32  
  orl (%rax,%r11,4), %edx   #  131   0x100927  4      OPC=orl_r32_m32     
  movq %r10, %r11           #  132   0x10092b  3      OPC=movq_r64_r64    
  shrq $0x10, %r11          #  133   0x10092e  4      OPC=shrq_r64_imm8   
  andl $0x3f, %r11d         #  134   0x100932  4      OPC=andl_r32_imm8   
  addq $0x140, %r11         #  135   0x100936  7      OPC=addq_r64_imm32  
  orl (%rax,%r11,4), %edx   #  136   0x10093d  4      OPC=orl_r32_m32     
  shrq $0x18, %r10          #  137   0x100941  4      OPC=shrq_r64_imm8   
  andl $0x3f, %r10d         #  138   0x100945  4      OPC=andl_r32_imm8   
  addq $0x1c0, %r10         #  139   0x100949  7      OPC=addq_r64_imm32  
  movl %edx, %ebx           #  140   0x100950  2      OPC=movl_r32_r32    
  orl (%rax,%r10,4), %ebx   #  141   0x100952  4      OPC=orl_r32_m32     
  xorq %rbx, %rcx           #  142   0x100956  3      OPC=xorq_r64_r64    
  addq $0x20, %r9           #  143   0x100959  4      OPC=addq_r64_imm8   
  cmpq %rsi, %r9            #  144   0x10095d  3      OPC=cmpq_r64_r64    
  jne .L_1007ef             #  145   0x100960  6      OPC=jne_label_1     
  jmpq .L_100ae1            #  146   0x100966  5      OPC=jmpq_label_1    
.L_100965:                  #        0x10096b  0      OPC=<label>         
  leaq 0xf0(%rsi), %r9      #  147   0x10096b  7      OPC=leaq_r64_m16    
  subq $0x10, %rsi          #  148   0x100972  4      OPC=subq_r64_imm8   
.L_100970:                  #        0x100976  0      OPC=<label>         
  movq %rcx, %r11           #  149   0x100976  3      OPC=movq_r64_r64    
  xorq (%r9), %r11          #  150   0x100979  3      OPC=xorq_r64_m64    
  movq %rcx, %r10           #  151   0x10097c  3      OPC=movq_r64_r64    
  xorq 0x8(%r9), %r10       #  152   0x10097f  4      OPC=xorq_r64_m64    
  movq %r10, %rax           #  153   0x100983  3      OPC=movq_r64_r64    
  shrq $0x4, %rax           #  154   0x100986  4      OPC=shrq_r64_imm8   
  shlq $0x1c, %r10          #  155   0x10098a  4      OPC=shlq_r64_imm8   
  addq %rax, %r10           #  156   0x10098e  3      OPC=addq_r64_r64    
  leaq 0x55b6e(%rip), %rax  #  157   0x100991  7      OPC=leaq_r64_m16    
  movq %r11, %rdx           #  158   0x100998  3      OPC=movq_r64_r64    
  shrq $0x8, %rdx           #  159   0x10099b  4      OPC=shrq_r64_imm8   
  andl $0x3f, %edx          #  160   0x10099f  3      OPC=andl_r32_imm8   
  subq $0xffffff80, %rdx    #  161   0x1009a2  7      OPC=subq_r64_imm32  
  movq %r11, %rbx           #  162   0x1009a9  3      OPC=movq_r64_r64    
  shrq $0x10, %rbx          #  163   0x1009ac  4      OPC=shrq_r64_imm8   
  andl $0x3f, %ebx          #  164   0x1009b0  3      OPC=andl_r32_imm8   
  addq $0x100, %rbx         #  165   0x1009b3  7      OPC=addq_r64_imm32  
  movl (%rax,%rdx,4), %edx  #  166   0x1009ba  3      OPC=movl_r32_m32    
  orl (%rax,%rbx,4), %edx   #  167   0x1009bd  3      OPC=orl_r32_m32     
  movq %r11, %rbx           #  168   0x1009c0  3      OPC=movq_r64_r64    
  andl $0x3f, %ebx          #  169   0x1009c3  3      OPC=andl_r32_imm8   
  orl (%rax,%rbx,4), %edx   #  170   0x1009c6  3      OPC=orl_r32_m32     
  shrq $0x18, %r11          #  171   0x1009c9  4      OPC=shrq_r64_imm8   
  andl $0x3f, %r11d         #  172   0x1009cd  4      OPC=andl_r32_imm8   
  addq $0x180, %r11         #  173   0x1009d1  7      OPC=addq_r64_imm32  
  orl (%rax,%r11,4), %edx   #  174   0x1009d8  4      OPC=orl_r32_m32     
  movq %r10, %r11           #  175   0x1009dc  3      OPC=movq_r64_r64    
  andl $0x3f, %r11d         #  176   0x1009df  4      OPC=andl_r32_imm8   
  addq $0x40, %r11          #  177   0x1009e3  4      OPC=addq_r64_imm8   
  orl (%rax,%r11,4), %edx   #  178   0x1009e7  4      OPC=orl_r32_m32     
  movq %r10, %r11           #  179   0x1009eb  3      OPC=movq_r64_r64    
  shrq $0x8, %r11           #  180   0x1009ee  4      OPC=shrq_r64_imm8   
  andl $0x3f, %r11d         #  181   0x1009f2  4      OPC=andl_r32_imm8   
  addq $0xc0, %r11          #  182   0x1009f6  7      OPC=addq_r64_imm32  
  orl (%rax,%r11,4), %edx   #  183   0x1009fd  4      OPC=orl_r32_m32     
  movq %r10, %r11           #  184   0x100a01  3      OPC=movq_r64_r64    
  shrq $0x10, %r11          #  185   0x100a04  4      OPC=shrq_r64_imm8   
  andl $0x3f, %r11d         #  186   0x100a08  4      OPC=andl_r32_imm8   
  addq $0x140, %r11         #  187   0x100a0c  7      OPC=addq_r64_imm32  
  orl (%rax,%r11,4), %edx   #  188   0x100a13  4      OPC=orl_r32_m32     
  shrq $0x18, %r10          #  189   0x100a17  4      OPC=shrq_r64_imm8   
  andl $0x3f, %r10d         #  190   0x100a1b  4      OPC=andl_r32_imm8   
  addq $0x1c0, %r10         #  191   0x100a1f  7      OPC=addq_r64_imm32  
  orl (%rax,%r10,4), %edx   #  192   0x100a26  4      OPC=orl_r32_m32     
  xorq %rdx, %r8            #  193   0x100a2a  3      OPC=xorq_r64_r64    
  movq %r8, %r11            #  194   0x100a2d  3      OPC=movq_r64_r64    
  xorq -0x10(%r9), %r11     #  195   0x100a30  4      OPC=xorq_r64_m64    
  movq %r8, %r10            #  196   0x100a34  3      OPC=movq_r64_r64    
  xorq -0x8(%r9), %r10      #  197   0x100a37  4      OPC=xorq_r64_m64    
  movq %r10, %rdx           #  198   0x100a3b  3      OPC=movq_r64_r64    
  shrq $0x4, %rdx           #  199   0x100a3e  4      OPC=shrq_r64_imm8   
  shlq $0x1c, %r10          #  200   0x100a42  4      OPC=shlq_r64_imm8   
  addq %rdx, %r10           #  201   0x100a46  3      OPC=addq_r64_r64    
  movq %r11, %rdx           #  202   0x100a49  3      OPC=movq_r64_r64    
  shrq $0x8, %rdx           #  203   0x100a4c  4      OPC=shrq_r64_imm8   
  andl $0x3f, %edx          #  204   0x100a50  3      OPC=andl_r32_imm8   
  subq $0xffffff80, %rdx    #  205   0x100a53  7      OPC=subq_r64_imm32  
  movq %r11, %rbx           #  206   0x100a5a  3      OPC=movq_r64_r64    
  shrq $0x10, %rbx          #  207   0x100a5d  4      OPC=shrq_r64_imm8   
  andl $0x3f, %ebx          #  208   0x100a61  3      OPC=andl_r32_imm8   
  addq $0x100, %rbx         #  209   0x100a64  7      OPC=addq_r64_imm32  
  movl (%rax,%rdx,4), %edx  #  210   0x100a6b  3      OPC=movl_r32_m32    
  orl (%rax,%rbx,4), %edx   #  211   0x100a6e  3      OPC=orl_r32_m32     
  movq %r11, %rbx           #  212   0x100a71  3      OPC=movq_r64_r64    
  andl $0x3f, %ebx          #  213   0x100a74  3      OPC=andl_r32_imm8   
  orl (%rax,%rbx,4), %edx   #  214   0x100a77  3      OPC=orl_r32_m32     
  shrq $0x18, %r11          #  215   0x100a7a  4      OPC=shrq_r64_imm8   
  andl $0x3f, %r11d         #  216   0x100a7e  4      OPC=andl_r32_imm8   
  addq $0x180, %r11         #  217   0x100a82  7      OPC=addq_r64_imm32  
  orl (%rax,%r11,4), %edx   #  218   0x100a89  4      OPC=orl_r32_m32     
  movq %r10, %r11           #  219   0x100a8d  3      OPC=movq_r64_r64    
  andl $0x3f, %r11d         #  220   0x100a90  4      OPC=andl_r32_imm8   
  addq $0x40, %r11          #  221   0x100a94  4      OPC=addq_r64_imm8   
  orl (%rax,%r11,4), %edx   #  222   0x100a98  4      OPC=orl_r32_m32     
  movq %r10, %r11           #  223   0x100a9c  3      OPC=movq_r64_r64    
  shrq $0x8, %r11           #  224   0x100a9f  4      OPC=shrq_r64_imm8   
  andl $0x3f, %r11d         #  225   0x100aa3  4      OPC=andl_r32_imm8   
  addq $0xc0, %r11          #  226   0x100aa7  7      OPC=addq_r64_imm32  
  orl (%rax,%r11,4), %edx   #  227   0x100aae  4      OPC=orl_r32_m32     
  movq %r10, %r11           #  228   0x100ab2  3      OPC=movq_r64_r64    
  shrq $0x10, %r11          #  229   0x100ab5  4      OPC=shrq_r64_imm8   
  andl $0x3f, %r11d         #  230   0x100ab9  4      OPC=andl_r32_imm8   
  addq $0x140, %r11         #  231   0x100abd  7      OPC=addq_r64_imm32  
  orl (%rax,%r11,4), %edx   #  232   0x100ac4  4      OPC=orl_r32_m32     
  shrq $0x18, %r10          #  233   0x100ac8  4      OPC=shrq_r64_imm8   
  andl $0x3f, %r10d         #  234   0x100acc  4      OPC=andl_r32_imm8   
  addq $0x1c0, %r10         #  235   0x100ad0  7      OPC=addq_r64_imm32  
  movl %edx, %ebx           #  236   0x100ad7  2      OPC=movl_r32_r32    
  orl (%rax,%r10,4), %ebx   #  237   0x100ad9  4      OPC=orl_r32_m32     
  xorq %rbx, %rcx           #  238   0x100add  3      OPC=xorq_r64_r64    
  subq $0x20, %r9           #  239   0x100ae0  4      OPC=subq_r64_imm8   
  cmpq %rsi, %r9            #  240   0x100ae4  3      OPC=cmpq_r64_r64    
  jne .L_100970             #  241   0x100ae7  6      OPC=jne_label_1     
.L_100ae1:                  #        0x100aed  0      OPC=<label>         
  movq %r8, %rsi            #  242   0x100aed  3      OPC=movq_r64_r64    
  shrq $0x1, %rsi           #  243   0x100af0  3      OPC=shrq_r64_one    
  shlq $0x1f, %r8           #  244   0x100af3  4      OPC=shlq_r64_imm8   
  orq %rsi, %r8             #  245   0x100af7  3      OPC=orq_r64_r64     
  movq %rcx, %rdx           #  246   0x100afa  3      OPC=movq_r64_r64    
  shrq $0x1, %rdx           #  247   0x100afd  3      OPC=shrq_r64_one    
  shlq $0x1f, %rcx          #  248   0x100b00  4      OPC=shlq_r64_imm8   
  orq %rdx, %rcx            #  249   0x100b04  3      OPC=orq_r64_r64     
  movl %r8d, %esi           #  250   0x100b07  3      OPC=movl_r32_r32    
  movl %ecx, %edx           #  251   0x100b0a  2      OPC=movl_r32_r32    
  movq %rdx, %rax           #  252   0x100b0c  3      OPC=movq_r64_r64    
  shrq $0x1, %rax           #  253   0x100b0f  3      OPC=shrq_r64_one    
  xorq %rsi, %rax           #  254   0x100b12  3      OPC=xorq_r64_r64    
  andl $0x55555555, %eax    #  255   0x100b15  5      OPC=andl_eax_imm32  
  xorq %rax, %rsi           #  256   0x100b1a  3      OPC=xorq_r64_r64    
  addq %rax, %rax           #  257   0x100b1d  3      OPC=addq_r64_r64    
  xorq %rdx, %rax           #  258   0x100b20  3      OPC=xorq_r64_r64    
  movq %rsi, %rdx           #  259   0x100b23  3      OPC=movq_r64_r64    
  shrq $0x8, %rdx           #  260   0x100b26  4      OPC=shrq_r64_imm8   
  xorq %rax, %rdx           #  261   0x100b2a  3      OPC=xorq_r64_r64    
  andl $0xff00ff, %edx      #  262   0x100b2d  6      OPC=andl_r32_imm32  
  xorq %rdx, %rax           #  263   0x100b33  3      OPC=xorq_r64_r64    
  movq %rax, %rcx           #  264   0x100b36  3      OPC=movq_r64_r64    
  shlq $0x8, %rdx           #  265   0x100b39  4      OPC=shlq_r64_imm8   
  xorq %rsi, %rdx           #  266   0x100b3d  3      OPC=xorq_r64_r64    
  shrq $0x2, %rax           #  267   0x100b40  4      OPC=shrq_r64_imm8   
  xorq %rdx, %rax           #  268   0x100b44  3      OPC=xorq_r64_r64    
  andl $0x33333333, %eax    #  269   0x100b47  5      OPC=andl_eax_imm32  
  xorq %rax, %rdx           #  270   0x100b4c  3      OPC=xorq_r64_r64    
  movq %rdx, %r8            #  271   0x100b4f  3      OPC=movq_r64_r64    
  shlq $0x2, %rax           #  272   0x100b52  4      OPC=shlq_r64_imm8   
  xorq %rcx, %rax           #  273   0x100b56  3      OPC=xorq_r64_r64    
  shrq $0x10, %rdx          #  274   0x100b59  4      OPC=shrq_r64_imm8   
  xorq %rax, %rdx           #  275   0x100b5d  3      OPC=xorq_r64_r64    
  movzwl %dx, %edx          #  276   0x100b60  3      OPC=movzwl_r32_r16  
  xorq %rdx, %rax           #  277   0x100b63  3      OPC=xorq_r64_r64    
  shlq $0x10, %rdx          #  278   0x100b66  4      OPC=shlq_r64_imm8   
  xorq %r8, %rdx            #  279   0x100b6a  3      OPC=xorq_r64_r64    
  movq %rax, %rcx           #  280   0x100b6d  3      OPC=movq_r64_r64    
  shrq $0x4, %rcx           #  281   0x100b70  4      OPC=shrq_r64_imm8   
  xorq %rdx, %rcx           #  282   0x100b74  3      OPC=xorq_r64_r64    
  andl $0xf0f0f0f, %ecx     #  283   0x100b77  6      OPC=andl_r32_imm32  
  xorq %rcx, %rdx           #  284   0x100b7d  3      OPC=xorq_r64_r64    
  movq %rdx, (%rdi)         #  285   0x100b80  3      OPC=movq_m64_r64    
  shlq $0x4, %rcx           #  286   0x100b83  4      OPC=shlq_r64_imm8   
  xorq %rcx, %rax           #  287   0x100b87  3      OPC=xorq_r64_r64    
  movq %rax, 0x8(%rdi)      #  288   0x100b8a  4      OPC=movq_m64_r64    
  popq %rbx                 #  289   0x100b8e  1      OPC=popq_r64_1      
  retq                      #  290   0x100b8f  1      OPC=retq            
                                                                          
.size des_encrypt, .-des_encrypt

