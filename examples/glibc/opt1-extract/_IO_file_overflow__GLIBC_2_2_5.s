  .text
  .globl _IO_file_overflow__GLIBC_2_2_5
  .type _IO_file_overflow__GLIBC_2_2_5, @function

#! file-offset 0x6e362
#! rip-offset  0x6e362
#! capacity    411 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
._IO_file_overflow__GLIBC_2_2_5:    #        0x6e362  0      OPC=<label>           
  pushq %r12                        #  1     0x6e362  2      OPC=pushq_r64_1       
  pushq %rbp                        #  2     0x6e364  1      OPC=pushq_r64_1       
  pushq %rbx                        #  3     0x6e365  1      OPC=pushq_r64_1       
  movq %rdi, %rbx                   #  4     0x6e366  3      OPC=movq_r64_r64      
  movl (%rdi), %eax                 #  5     0x6e369  2      OPC=movl_r32_m32      
  testb $0x8, %al                   #  6     0x6e36b  2      OPC=testb_al_imm8     
  je .L_6e38c                       #  7     0x6e36d  2      OPC=je_label          
  orl $0x20, %eax                   #  8     0x6e36f  3      OPC=orl_r32_imm8      
  movl %eax, (%rdi)                 #  9     0x6e372  2      OPC=movl_m32_r32      
  movq 0x31cb05(%rip), %rax         #  10    0x6e374  7      OPC=movq_r64_m64      
  movl $0x9, (%rax)                 #  11    0x6e37b  6      OPC=movl_m32_imm32    
  nop                               #  12    0x6e381  1      OPC=nop               
  movl $0xffffffff, %eax            #  13    0x6e382  6      OPC=movl_r32_imm32_1  
  jmpq .L_6e4f8                     #  14    0x6e388  5      OPC=jmpq_label_1      
.L_6e38c:                           #        0x6e38d  0      OPC=<label>           
  movl %esi, %ebp                   #  15    0x6e38d  2      OPC=movl_r32_r32      
  testb $0x8, %ah                   #  16    0x6e38f  3      OPC=testb_rh_imm8     
  je .L_6e3a0                       #  17    0x6e392  2      OPC=je_label          
  cmpq $0x0, 0x20(%rdi)             #  18    0x6e394  5      OPC=cmpq_m64_imm8     
  jne .L_6e447                      #  19    0x6e399  6      OPC=jne_label_1       
  jmpq .L_6e3a7                     #  20    0x6e39f  2      OPC=jmpq_label        
.L_6e3a0:                           #        0x6e3a1  0      OPC=<label>           
  cmpq $0x0, 0x20(%rdi)             #  21    0x6e3a1  5      OPC=cmpq_m64_imm8     
  jne .L_6e3bf                      #  22    0x6e3a6  2      OPC=jne_label         
.L_6e3a7:                           #        0x6e3a8  0      OPC=<label>           
  movq %rbx, %rdi                   #  23    0x6e3a8  3      OPC=movq_r64_r64      
  callq ._IO_doallocbuf             #  24    0x6e3ab  5      OPC=callq_label       
  movq 0x38(%rbx), %rax             #  25    0x6e3b0  4      OPC=movq_r64_m64      
  movq %rax, 0x18(%rbx)             #  26    0x6e3b4  4      OPC=movq_m64_r64      
  movq %rax, 0x8(%rbx)              #  27    0x6e3b8  4      OPC=movq_m64_r64      
  movq %rax, 0x10(%rbx)             #  28    0x6e3bc  4      OPC=movq_m64_r64      
.L_6e3bf:                           #        0x6e3c0  0      OPC=<label>           
  testl $0x100, (%rbx)              #  29    0x6e3c0  6      OPC=testl_m32_imm32   
  je .L_6e3f7                       #  30    0x6e3c6  2      OPC=je_label          
  movq 0x10(%rbx), %rdx             #  31    0x6e3c8  4      OPC=movq_r64_m64      
  subq 0x8(%rbx), %rdx              #  32    0x6e3cc  4      OPC=subq_r64_m64      
  movq %rdx, %r12                   #  33    0x6e3d0  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                   #  34    0x6e3d3  3      OPC=movq_r64_r64      
  callq ._IO_free_backup_area       #  35    0x6e3d6  5      OPC=callq_label       
  movq 0x18(%rbx), %rax             #  36    0x6e3db  4      OPC=movq_r64_m64      
  movq %rax, %rdx                   #  37    0x6e3df  3      OPC=movq_r64_r64      
  subq 0x38(%rbx), %rdx             #  38    0x6e3e2  4      OPC=subq_r64_m64      
  cmpq %r12, %rdx                   #  39    0x6e3e6  3      OPC=cmpq_r64_r64      
  cmovaq %r12, %rdx                 #  40    0x6e3e9  4      OPC=cmovaq_r64_r64    
  subq %rdx, %rax                   #  41    0x6e3ed  3      OPC=subq_r64_r64      
  movq %rax, 0x18(%rbx)             #  42    0x6e3f0  4      OPC=movq_m64_r64      
  movq %rax, 0x8(%rbx)              #  43    0x6e3f4  4      OPC=movq_m64_r64      
.L_6e3f7:                           #        0x6e3f8  0      OPC=<label>           
  movq 0x40(%rbx), %rdx             #  44    0x6e3f8  4      OPC=movq_r64_m64      
  cmpq %rdx, 0x8(%rbx)              #  45    0x6e3fc  4      OPC=cmpq_m64_r64      
  jne .L_6e40d                      #  46    0x6e400  2      OPC=jne_label         
  movq 0x38(%rbx), %rax             #  47    0x6e402  4      OPC=movq_r64_m64      
  movq %rax, 0x8(%rbx)              #  48    0x6e406  4      OPC=movq_m64_r64      
  movq %rax, 0x10(%rbx)             #  49    0x6e40a  4      OPC=movq_m64_r64      
.L_6e40d:                           #        0x6e40e  0      OPC=<label>           
  movq 0x8(%rbx), %rax              #  50    0x6e40e  4      OPC=movq_r64_m64      
  movq %rax, 0x28(%rbx)             #  51    0x6e412  4      OPC=movq_m64_r64      
  movq %rax, 0x20(%rbx)             #  52    0x6e416  4      OPC=movq_m64_r64      
  movq %rdx, 0x30(%rbx)             #  53    0x6e41a  4      OPC=movq_m64_r64      
  movq 0x10(%rbx), %rdx             #  54    0x6e41e  4      OPC=movq_r64_m64      
  movq %rdx, 0x8(%rbx)              #  55    0x6e422  4      OPC=movq_m64_r64      
  movq %rdx, 0x18(%rbx)             #  56    0x6e426  4      OPC=movq_m64_r64      
  movl (%rbx), %edx                 #  57    0x6e42a  2      OPC=movl_r32_m32      
  movl %edx, %ecx                   #  58    0x6e42c  2      OPC=movl_r32_r32      
  orb $0x8, %ch                     #  59    0x6e42e  3      OPC=orb_rh_imm8       
  movl %ecx, (%rbx)                 #  60    0x6e431  2      OPC=movl_m32_r32      
  cmpl $0x0, 0xc0(%rbx)             #  61    0x6e433  7      OPC=cmpl_m32_imm8     
  jg .L_6e447                       #  62    0x6e43a  2      OPC=jg_label          
  testl $0x202, %edx                #  63    0x6e43c  6      OPC=testl_r32_imm32   
  je .L_6e447                       #  64    0x6e442  2      OPC=je_label          
  movq %rax, 0x30(%rbx)             #  65    0x6e444  4      OPC=movq_m64_r64      
.L_6e447:                           #        0x6e448  0      OPC=<label>           
  cmpl $0xffffffff, %ebp            #  66    0x6e448  6      OPC=cmpl_r32_imm32    
  nop                               #  67    0x6e44e  1      OPC=nop               
  nop                               #  68    0x6e44f  1      OPC=nop               
  nop                               #  69    0x6e450  1      OPC=nop               
  jne .L_6e464                      #  70    0x6e451  2      OPC=jne_label         
  movq 0x20(%rbx), %rsi             #  71    0x6e453  4      OPC=movq_r64_m64      
  movq 0x28(%rbx), %rdx             #  72    0x6e457  4      OPC=movq_r64_m64      
  subq %rsi, %rdx                   #  73    0x6e45b  3      OPC=subq_r64_r64      
  movq %rbx, %rdi                   #  74    0x6e45e  3      OPC=movq_r64_r64      
  callq ._IO_do_write__GLIBC_2_2_5  #  75    0x6e461  5      OPC=callq_label       
  jmpq .L_6e4f8                     #  76    0x6e466  5      OPC=jmpq_label_1      
.L_6e464:                           #        0x6e46b  0      OPC=<label>           
  movq 0x28(%rbx), %rdx             #  77    0x6e46b  4      OPC=movq_r64_m64      
  cmpq 0x40(%rbx), %rdx             #  78    0x6e46f  4      OPC=cmpq_r64_m64      
  jne .L_6e4b6                      #  79    0x6e473  2      OPC=jne_label         
  cmpl $0x0, 0xc0(%rbx)             #  80    0x6e475  7      OPC=cmpl_m32_imm8     
  jg .L_6e48e                       #  81    0x6e47c  2      OPC=jg_label          
  movq 0x20(%rbx), %rsi             #  82    0x6e47e  4      OPC=movq_r64_m64      
  subq %rsi, %rdx                   #  83    0x6e482  3      OPC=subq_r64_r64      
  movq %rbx, %rdi                   #  84    0x6e485  3      OPC=movq_r64_r64      
  callq ._IO_do_write__GLIBC_2_2_5  #  85    0x6e488  5      OPC=callq_label       
  cmpl $0xffffffff, %eax            #  86    0x6e48d  6      OPC=cmpl_r32_imm32    
  nop                               #  87    0x6e493  1      OPC=nop               
  nop                               #  88    0x6e494  1      OPC=nop               
  nop                               #  89    0x6e495  1      OPC=nop               
  sete %al                          #  90    0x6e496  3      OPC=sete_r8           
  jmpq .L_6e4b2                     #  91    0x6e499  2      OPC=jmpq_label        
.L_6e48e:                           #        0x6e49b  0      OPC=<label>           
  movq 0xa0(%rbx), %rax             #  92    0x6e49b  7      OPC=movq_r64_m64      
  movq 0x18(%rax), %rsi             #  93    0x6e4a2  4      OPC=movq_r64_m64      
  movq 0x20(%rax), %rdx             #  94    0x6e4a6  4      OPC=movq_r64_m64      
  subq %rsi, %rdx                   #  95    0x6e4aa  3      OPC=subq_r64_r64      
  sarq $0x2, %rdx                   #  96    0x6e4ad  4      OPC=sarq_r64_imm8     
  movq %rbx, %rdi                   #  97    0x6e4b1  3      OPC=movq_r64_r64      
  callq ._IO_wdo_write              #  98    0x6e4b4  5      OPC=callq_label       
  cmpl $0xffffffff, %eax            #  99    0x6e4b9  6      OPC=cmpl_r32_imm32    
  nop                               #  100   0x6e4bf  1      OPC=nop               
  nop                               #  101   0x6e4c0  1      OPC=nop               
  nop                               #  102   0x6e4c1  1      OPC=nop               
  sete %al                          #  103   0x6e4c2  3      OPC=sete_r8           
.L_6e4b2:                           #        0x6e4c5  0      OPC=<label>           
  testb %al, %al                    #  104   0x6e4c5  2      OPC=testb_r8_r8       
  jne .L_6e4f3                      #  105   0x6e4c7  2      OPC=jne_label         
.L_6e4b6:                           #        0x6e4c9  0      OPC=<label>           
  movq 0x28(%rbx), %rax             #  106   0x6e4c9  4      OPC=movq_r64_m64      
  leaq 0x1(%rax), %rdx              #  107   0x6e4cd  4      OPC=leaq_r64_m16      
  movq %rdx, 0x28(%rbx)             #  108   0x6e4d1  4      OPC=movq_m64_r64      
  movb %bpl, (%rax)                 #  109   0x6e4d5  3      OPC=movb_m8_r8        
  movl (%rbx), %eax                 #  110   0x6e4d8  2      OPC=movl_r32_m32      
  testb $0x2, %al                   #  111   0x6e4da  2      OPC=testb_al_imm8     
  jne .L_6e4d5                      #  112   0x6e4dc  2      OPC=jne_label         
  cmpl $0xa, %ebp                   #  113   0x6e4de  3      OPC=cmpl_r32_imm8     
  jne .L_6e4ed                      #  114   0x6e4e1  2      OPC=jne_label         
  testb $0x2, %ah                   #  115   0x6e4e3  3      OPC=testb_rh_imm8     
  je .L_6e4ed                       #  116   0x6e4e6  2      OPC=je_label          
.L_6e4d5:                           #        0x6e4e8  0      OPC=<label>           
  movq 0x20(%rbx), %rsi             #  117   0x6e4e8  4      OPC=movq_r64_m64      
  movq 0x28(%rbx), %rdx             #  118   0x6e4ec  4      OPC=movq_r64_m64      
  subq %rsi, %rdx                   #  119   0x6e4f0  3      OPC=subq_r64_r64      
  movq %rbx, %rdi                   #  120   0x6e4f3  3      OPC=movq_r64_r64      
  callq ._IO_do_write__GLIBC_2_2_5  #  121   0x6e4f6  5      OPC=callq_label       
  cmpl $0xffffffff, %eax            #  122   0x6e4fb  6      OPC=cmpl_r32_imm32    
  nop                               #  123   0x6e501  1      OPC=nop               
  nop                               #  124   0x6e502  1      OPC=nop               
  nop                               #  125   0x6e503  1      OPC=nop               
  je .L_6e4f8                       #  126   0x6e504  2      OPC=je_label          
.L_6e4ed:                           #        0x6e506  0      OPC=<label>           
  movzbl %bpl, %eax                 #  127   0x6e506  4      OPC=movzbl_r32_r8     
  jmpq .L_6e4f8                     #  128   0x6e50a  2      OPC=jmpq_label        
.L_6e4f3:                           #        0x6e50c  0      OPC=<label>           
  movl $0xffffffff, %eax            #  129   0x6e50c  6      OPC=movl_r32_imm32_1  
.L_6e4f8:                           #        0x6e512  0      OPC=<label>           
  popq %rbx                         #  130   0x6e512  1      OPC=popq_r64_1        
  popq %rbp                         #  131   0x6e513  1      OPC=popq_r64_1        
  popq %r12                         #  132   0x6e514  2      OPC=popq_r64_1        
  retq                              #  133   0x6e516  1      OPC=retq              
                                                                                   
.size _IO_file_overflow__GLIBC_2_2_5, .-_IO_file_overflow__GLIBC_2_2_5

