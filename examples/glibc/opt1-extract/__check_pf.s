  .text
  .globl __check_pf
  .type __check_pf, @function

#! file-offset 0xf7ed4
#! rip-offset  0xf7ed4
#! capacity    2031 bytes

# Text                                 #  Line  RIP      Bytes  Opcode                
.__check_pf:                           #        0xf7ed4  0      OPC=<label>           
  pushq %rbp                           #  1     0xf7ed4  1      OPC=pushq_r64_1       
  movq %rsp, %rbp                      #  2     0xf7ed5  3      OPC=movq_r64_r64      
  pushq %r15                           #  3     0xf7ed8  2      OPC=pushq_r64_1       
  pushq %r14                           #  4     0xf7eda  2      OPC=pushq_r64_1       
  pushq %r13                           #  5     0xf7edc  2      OPC=pushq_r64_1       
  pushq %r12                           #  6     0xf7ede  2      OPC=pushq_r64_1       
  pushq %rbx                           #  7     0xf7ee0  1      OPC=pushq_r64_1       
  subq $0x118, %rsp                    #  8     0xf7ee1  7      OPC=subq_r64_imm32    
  movq %rdi, -0xd8(%rbp)               #  9     0xf7ee8  7      OPC=movq_m64_r64      
  movq %rsi, -0xe0(%rbp)               #  10    0xf7eef  7      OPC=movq_m64_r64      
  movq %rdx, -0xe8(%rbp)               #  11    0xf7ef6  7      OPC=movq_m64_r64      
  movq %rcx, -0xf0(%rbp)               #  12    0xf7efd  7      OPC=movq_m64_r64      
  movq $0x0, (%rdx)                    #  13    0xf7f04  7      OPC=movq_m64_imm32    
  movq $0x0, (%rcx)                    #  14    0xf7f0b  7      OPC=movq_m64_imm32    
  movl $0x1, %esi                      #  15    0xf7f12  5      OPC=movl_r32_imm32    
  movl $0x0, %eax                      #  16    0xf7f17  5      OPC=movl_r32_imm32    
  cmpl $0x0, 0x298cdd(%rip)            #  17    0xf7f1c  7      OPC=cmpl_m32_imm8     
  je .L_f7f31                          #  18    0xf7f23  2      OPC=je_label          
  lock                                 #  19    0xf7f25  1      OPC=lock              
  cmpxchgl %esi, 0x297d03(%rip)        #  20    0xf7f26  7      OPC=cmpxchgl_m32_r32  
  nop                                  #  21    0xf7f2d  1      OPC=nop               
  jne .L_f7f3a                         #  22    0xf7f2e  2      OPC=jne_label         
  jmpq .L_f7f54                        #  23    0xf7f30  2      OPC=jmpq_label        
.L_f7f31:                              #        0xf7f32  0      OPC=<label>           
  cmpxchgl %esi, 0x297cf8(%rip)        #  24    0xf7f32  7      OPC=cmpxchgl_m32_r32  
  je .L_f7f54                          #  25    0xf7f39  2      OPC=je_label          
.L_f7f3a:                              #        0xf7f3b  0      OPC=<label>           
  leaq 0x297cef(%rip), %rdi            #  26    0xf7f3b  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                     #  27    0xf7f42  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private       #  28    0xf7f49  5      OPC=callq_label       
  addq $0x80, %rsp                     #  29    0xf7f4e  7      OPC=addq_r64_imm32    
.L_f7f54:                              #        0xf7f55  0      OPC=<label>           
  cmpq $0x0, 0x297cdc(%rip)            #  30    0xf7f55  8      OPC=cmpq_m64_imm8     
  je .L_f7f76                          #  31    0xf7f5d  2      OPC=je_label          
  callq .__nscd_get_nl_timestamp       #  32    0xf7f5f  5      OPC=callq_label       
  testl %eax, %eax                     #  33    0xf7f64  2      OPC=testl_r32_r32     
  je .L_f7f76                          #  34    0xf7f66  2      OPC=je_label          
  movq 0x297cca(%rip), %rdx            #  35    0xf7f68  7      OPC=movq_r64_m64      
  cmpl (%rdx), %eax                    #  36    0xf7f6f  2      OPC=cmpl_r32_m32      
  je .L_f869e                          #  37    0xf7f71  6      OPC=je_label_1        
.L_f7f76:                              #        0xf7f77  0      OPC=<label>           
  movl $0x0, %edx                      #  38    0xf7f77  5      OPC=movl_r32_imm32    
  movl $0x3, %esi                      #  39    0xf7f7c  5      OPC=movl_r32_imm32    
  movl $0x10, %edi                     #  40    0xf7f81  5      OPC=movl_r32_imm32    
  callq .__socket                      #  41    0xf7f86  5      OPC=callq_label       
  movl %eax, %r14d                     #  42    0xf7f8b  3      OPC=movl_r32_r32      
  testl %eax, %eax                     #  43    0xf7f8e  2      OPC=testl_r32_r32     
  js .L_f85e2                          #  44    0xf7f90  6      OPC=js_label_1        
  leaq -0xc0(%rbp), %rsi               #  45    0xf7f96  7      OPC=leaq_r64_m16      
  movq $0x0, -0xc0(%rbp)               #  46    0xf7f9d  11     OPC=movq_m64_imm32    
  movl $0x0, -0xb8(%rbp)               #  47    0xf7fa8  10     OPC=movl_m32_imm32    
  movw $0x10, -0xc0(%rbp)              #  48    0xf7fb2  9      OPC=movw_m16_imm16    
  movl $0xc, -0xc4(%rbp)               #  49    0xf7fbb  10     OPC=movl_m32_imm32    
  movl $0xc, %edx                      #  50    0xf7fc5  5      OPC=movl_r32_imm32    
  movl %eax, %edi                      #  51    0xf7fca  2      OPC=movl_r32_r32      
  callq .bind                          #  52    0xf7fcc  5      OPC=callq_label       
  movl $0x0, %r13d                     #  53    0xf7fd1  6      OPC=movl_r32_imm32    
  testl %eax, %eax                     #  54    0xf7fd7  2      OPC=testl_r32_r32     
  jne .L_f85c3                         #  55    0xf7fd9  6      OPC=jne_label_1       
  leaq -0xc0(%rbp), %rsi               #  56    0xf7fdf  7      OPC=leaq_r64_m16      
  leaq -0xc4(%rbp), %rdx               #  57    0xf7fe6  7      OPC=leaq_r64_m16      
  movl %r14d, %edi                     #  58    0xf7fed  3      OPC=movl_r32_r32      
  callq .getsockname                   #  59    0xf7ff0  5      OPC=callq_label       
  testl %eax, %eax                     #  60    0xf7ff5  2      OPC=testl_r32_r32     
  jne .L_f85c3                         #  61    0xf7ff7  6      OPC=jne_label_1       
  movl -0xbc(%rbp), %eax               #  62    0xf7ffd  6      OPC=movl_r32_m32      
  movl %eax, -0xf4(%rbp)               #  63    0xf8003  6      OPC=movl_m32_r32      
  movq %rsp, -0x138(%rbp)              #  64    0xf8009  7      OPC=movq_m64_r64      
  movl $0x14, -0x90(%rbp)              #  65    0xf8010  10     OPC=movl_m32_imm32    
  movw $0x16, -0x8c(%rbp)              #  66    0xf801a  9      OPC=movw_m16_imm16    
  movw $0x301, -0x8a(%rbp)             #  67    0xf8023  9      OPC=movw_m16_imm16    
  movl $0x0, -0x84(%rbp)               #  68    0xf802c  10     OPC=movl_m32_imm32    
  movl $0x0, %edi                      #  69    0xf8036  5      OPC=movl_r32_imm32    
  callq .L_1f8e0                       #  70    0xf803b  5      OPC=callq_label       
  movl %eax, -0x88(%rbp)               #  71    0xf8040  6      OPC=movl_m32_r32      
  movb $0x0, -0x80(%rbp)               #  72    0xf8046  4      OPC=movb_m8_imm8      
  movw $0x0, -0x7f(%rbp)               #  73    0xf804a  6      OPC=movw_m16_imm16    
  movb $0x0, -0x7d(%rbp)               #  74    0xf8050  4      OPC=movb_m8_imm8      
  movq $0x0, -0xb0(%rbp)               #  75    0xf8054  11     OPC=movq_m64_imm32    
  movl $0x0, -0xa8(%rbp)               #  76    0xf805f  10     OPC=movl_m32_imm32    
  movw $0x10, -0xb0(%rbp)              #  77    0xf8069  9      OPC=movw_m16_imm16    
  subq $0x1000, %rsp                   #  78    0xf8072  7      OPC=subq_r64_imm32    
  movq %rsp, -0x110(%rbp)              #  79    0xf8079  7      OPC=movq_m64_r64      
  movq %rsp, -0xa0(%rbp)               #  80    0xf8080  7      OPC=movq_m64_r64      
  movq $0x1000, -0x98(%rbp)            #  81    0xf8087  11     OPC=movq_m64_imm32    
  leaq -0xb0(%rbp), %r12               #  82    0xf8092  7      OPC=leaq_r64_m16      
  leaq -0x90(%rbp), %rbx               #  83    0xf8099  7      OPC=leaq_r64_m16      
.L_f809f:                              #        0xf80a0  0      OPC=<label>           
  movl $0xc, %r9d                      #  84    0xf80a0  6      OPC=movl_r32_imm32    
  movq %r12, %r8                       #  85    0xf80a6  3      OPC=movq_r64_r64      
  movl $0x0, %ecx                      #  86    0xf80a9  5      OPC=movl_r32_imm32    
  movl $0x14, %edx                     #  87    0xf80ae  5      OPC=movl_r32_imm32    
  movq %rbx, %rsi                      #  88    0xf80b3  3      OPC=movq_r64_r64      
  movl %r14d, %edi                     #  89    0xf80b6  3      OPC=movl_r32_r32      
  callq .sendto                        #  90    0xf80b9  5      OPC=callq_label       
  cmpq $0xff, %rax                     #  91    0xf80be  4      OPC=cmpq_r64_imm8     
  jne .L_f80db                         #  92    0xf80c2  2      OPC=jne_label         
  movq 0x292db6(%rip), %rdx            #  93    0xf80c4  7      OPC=movq_r64_m64      
  cmpl $0x4, (%rdx)                    #  94    0xf80cb  3      OPC=cmpl_m32_imm8     
  nop                                  #  95    0xf80ce  1      OPC=nop               
  je .L_f809f                          #  96    0xf80cf  2      OPC=je_label          
  movl $0x0, %r13d                     #  97    0xf80d1  6      OPC=movl_r32_imm32    
  jmpq .L_f85ae                        #  98    0xf80d7  5      OPC=jmpq_label_1      
.L_f80db:                              #        0xf80dc  0      OPC=<label>           
  testq %rax, %rax                     #  99    0xf80dc  3      OPC=testq_r64_r64     
  js .L_f858d                          #  100   0xf80df  6      OPC=js_label_1        
  movb $0x0, -0xf5(%rbp)               #  101   0xf80e5  7      OPC=movb_m8_imm8      
  movb $0x0, -0xf6(%rbp)               #  102   0xf80ec  7      OPC=movb_m8_imm8      
  movq $0x20, -0x130(%rbp)             #  103   0xf80f3  11     OPC=movq_m64_imm32    
  movq $0x0, -0x128(%rbp)              #  104   0xf80fe  11     OPC=movq_m64_imm32    
  movl $0x0, %r13d                     #  105   0xf8109  6      OPC=movl_r32_imm32    
  leaq -0xb0(%rbp), %rax               #  106   0xf810f  7      OPC=leaq_r64_m16      
  movq %rax, -0x100(%rbp)              #  107   0xf8116  7      OPC=movq_m64_r64      
  leaq -0xa0(%rbp), %rax               #  108   0xf811d  7      OPC=leaq_r64_m16      
  movq %rax, -0x108(%rbp)              #  109   0xf8124  7      OPC=movq_m64_r64      
  leaq -0x70(%rbp), %r15               #  110   0xf812b  4      OPC=leaq_r64_m16      
  movq %r13, -0x118(%rbp)              #  111   0xf812f  7      OPC=movq_m64_r64      
  movl -0xf4(%rbp), %r13d              #  112   0xf8136  7      OPC=movl_r32_m32      
.L_f813c:                              #        0xf813d  0      OPC=<label>           
  movq -0x100(%rbp), %rax              #  113   0xf813d  7      OPC=movq_r64_m64      
  movq %rax, -0x70(%rbp)               #  114   0xf8144  4      OPC=movq_m64_r64      
  movl $0xc, -0x68(%rbp)               #  115   0xf8148  7      OPC=movl_m32_imm32    
  movq -0x108(%rbp), %rax              #  116   0xf814f  7      OPC=movq_r64_m64      
  movq %rax, -0x60(%rbp)               #  117   0xf8156  4      OPC=movq_m64_r64      
  movq $0x1, -0x58(%rbp)               #  118   0xf815a  8      OPC=movq_m64_imm32    
  movq $0x0, -0x50(%rbp)               #  119   0xf8162  8      OPC=movq_m64_imm32    
  movq $0x0, -0x48(%rbp)               #  120   0xf816a  8      OPC=movq_m64_imm32    
  movl $0x0, -0x40(%rbp)               #  121   0xf8172  7      OPC=movl_m32_imm32    
.L_f8178:                              #        0xf8179  0      OPC=<label>           
  movl $0x0, %edx                      #  122   0xf8179  5      OPC=movl_r32_imm32    
  movq %r15, %rsi                      #  123   0xf817e  3      OPC=movq_r64_r64      
  movl %r14d, %edi                     #  124   0xf8181  3      OPC=movl_r32_r32      
  callq .recvmsg                       #  125   0xf8184  5      OPC=callq_label       
  cmpq $0xff, %rax                     #  126   0xf8189  4      OPC=cmpq_r64_imm8     
  jne .L_f81b6                         #  127   0xf818d  2      OPC=jne_label         
  movq 0x292ceb(%rip), %rdx            #  128   0xf818f  7      OPC=movq_r64_m64      
  cmpl $0x4, (%rdx)                    #  129   0xf8196  3      OPC=cmpl_m32_imm8     
  nop                                  #  130   0xf8199  1      OPC=nop               
  je .L_f8178                          #  131   0xf819a  2      OPC=je_label          
  movq -0x118(%rbp), %r13              #  132   0xf819c  7      OPC=movq_r64_m64      
  movq $0xffffffff, %rsi               #  133   0xf81a3  7      OPC=movq_r64_imm32    
  movl %r14d, %edi                     #  134   0xf81aa  3      OPC=movl_r32_r32      
  callq .__netlink_assert_response     #  135   0xf81ad  5      OPC=callq_label       
  jmpq .L_f85ae                        #  136   0xf81b2  5      OPC=jmpq_label_1      
.L_f81b6:                              #        0xf81b7  0      OPC=<label>           
  movq %rax, %rbx                      #  137   0xf81b7  3      OPC=movq_r64_r64      
  movq %rax, %rsi                      #  138   0xf81ba  3      OPC=movq_r64_r64      
  movl %r14d, %edi                     #  139   0xf81bd  3      OPC=movl_r32_r32      
  callq .__netlink_assert_response     #  140   0xf81c0  5      OPC=callq_label       
  testq %rbx, %rbx                     #  141   0xf81c5  3      OPC=testq_r64_r64     
  js .L_f8595                          #  142   0xf81c8  6      OPC=js_label_1        
  testb $0x20, -0x40(%rbp)             #  143   0xf81ce  4      OPC=testb_m8_imm8     
  jne .L_f859e                         #  144   0xf81d2  6      OPC=jne_label_1       
  cmpq $0xf, %rbx                      #  145   0xf81d8  4      OPC=cmpq_r64_imm8     
  jbe .L_f813c                         #  146   0xf81dc  6      OPC=jbe_label_1       
  movq -0x110(%rbp), %rsi              #  147   0xf81e2  7      OPC=movq_r64_m64      
  movl (%rsi), %eax                    #  148   0xf81e9  2      OPC=movl_r32_m32      
  cmpl $0xf, %eax                      #  149   0xf81eb  3      OPC=cmpl_r32_imm8     
  jbe .L_f813c                         #  150   0xf81ee  6      OPC=jbe_label_1       
  movl %eax, %eax                      #  151   0xf81f4  2      OPC=movl_r32_r32      
  cmpq %rax, %rbx                      #  152   0xf81f6  3      OPC=cmpq_r64_r64      
  jb .L_f813c                          #  153   0xf81f9  6      OPC=jb_label_1        
  movq %rsi, %r12                      #  154   0xf81ff  3      OPC=movq_r64_r64      
  movb $0x0, -0xf4(%rbp)               #  155   0xf8202  7      OPC=movb_m8_imm8      
.L_f8208:                              #        0xf8209  0      OPC=<label>           
  cmpl $0x0, -0xac(%rbp)               #  156   0xf8209  7      OPC=cmpl_m32_imm8     
  jne .L_f84dd                         #  157   0xf8210  6      OPC=jne_label_1       
  cmpl 0xc(%r12), %r13d                #  158   0xf8216  5      OPC=cmpl_r32_m32      
  jne .L_f84dd                         #  159   0xf821b  6      OPC=jne_label_1       
  movl -0x88(%rbp), %edi               #  160   0xf8221  6      OPC=movl_r32_m32      
  cmpl %edi, 0x8(%r12)                 #  161   0xf8227  5      OPC=cmpl_m32_r32      
  jne .L_f84dd                         #  162   0xf822c  6      OPC=jne_label_1       
  movzwl 0x4(%r12), %edx               #  163   0xf8232  6      OPC=movzwl_r32_m16    
  cmpw $0x14, %dx                      #  164   0xf8238  4      OPC=cmpw_r16_imm8     
  jne .L_f84c4                         #  165   0xf823c  6      OPC=jne_label_1       
  movzbl 0x10(%r12), %edi              #  166   0xf8242  6      OPC=movzbl_r32_m8     
  movl %edi, %edx                      #  167   0xf8248  2      OPC=movl_r32_r32      
  andl $0xfffffff7, %edx               #  168   0xf824a  6      OPC=andl_r32_imm32    
  nop                                  #  169   0xf8250  1      OPC=nop               
  nop                                  #  170   0xf8251  1      OPC=nop               
  nop                                  #  171   0xf8252  1      OPC=nop               
  cmpb $0x2, %dl                       #  172   0xf8253  3      OPC=cmpb_r8_imm8      
  jne .L_f84dd                         #  173   0xf8256  6      OPC=jne_label_1       
  subq $0x18, %rax                     #  174   0xf825c  4      OPC=subq_r64_imm8     
  cmpq $0x3, %rax                      #  175   0xf8260  4      OPC=cmpq_r64_imm8     
  jbe .L_f8361                         #  176   0xf8264  6      OPC=jbe_label_1       
  movzwl 0x18(%r12), %edx              #  177   0xf826a  6      OPC=movzwl_r32_m16    
  cmpw $0x3, %dx                       #  178   0xf8270  4      OPC=cmpw_r16_imm8     
  jbe .L_f836e                         #  179   0xf8274  6      OPC=jbe_label_1       
  movzwl %dx, %ecx                     #  180   0xf827a  3      OPC=movzwl_r32_r16    
  cmpq %rcx, %rax                      #  181   0xf827d  3      OPC=cmpq_r64_r64      
  jb .L_f837b                          #  182   0xf8280  6      OPC=jb_label_1        
  leaq 0x18(%r12), %rcx                #  183   0xf8286  5      OPC=leaq_r64_m16      
  movl $0x0, %r8d                      #  184   0xf828b  6      OPC=movl_r32_imm32    
.L_f828a:                              #        0xf8291  0      OPC=<label>           
  movzwl 0x2(%rcx), %esi               #  185   0xf8291  4      OPC=movzwl_r32_m16    
  cmpw $0x1, %si                       #  186   0xf8295  4      OPC=cmpw_r16_imm8     
  je .L_f82c4                          #  187   0xf8299  2      OPC=je_label          
  leaq 0x4(%rcx), %r9                  #  188   0xf829b  4      OPC=leaq_r64_m16      
  cmpw $0x2, %si                       #  189   0xf829f  4      OPC=cmpw_r16_imm8     
  cmoveq %r9, %r8                      #  190   0xf82a3  4      OPC=cmoveq_r64_r64    
  movzwl %dx, %edx                     #  191   0xf82a7  3      OPC=movzwl_r32_r16    
  addl $0x3, %edx                      #  192   0xf82aa  3      OPC=addl_r32_imm8     
  andl $0x1fffc, %edx                  #  193   0xf82ad  6      OPC=andl_r32_imm32    
  subq %rdx, %rax                      #  194   0xf82b3  3      OPC=subq_r64_r64      
  addq %rdx, %rcx                      #  195   0xf82b6  3      OPC=addq_r64_r64      
  cmpq $0x3, %rax                      #  196   0xf82b9  4      OPC=cmpq_r64_imm8     
  ja .L_f82d1                          #  197   0xf82bd  2      OPC=ja_label          
  movq %r8, -0x120(%rbp)               #  198   0xf82bf  7      OPC=movq_m64_r64      
  movq %r8, %rax                       #  199   0xf82c6  3      OPC=movq_r64_r64      
  jmpq .L_f82f8                        #  200   0xf82c9  2      OPC=jmpq_label        
.L_f82c4:                              #        0xf82cb  0      OPC=<label>           
  leaq 0x4(%rcx), %rax                 #  201   0xf82cb  4      OPC=leaq_r64_m16      
  movq %rax, -0x120(%rbp)              #  202   0xf82cf  7      OPC=movq_m64_r64      
  jmpq .L_f8301                        #  203   0xf82d6  2      OPC=jmpq_label        
.L_f82d1:                              #        0xf82d8  0      OPC=<label>           
  movzwl (%rcx), %edx                  #  204   0xf82d8  3      OPC=movzwl_r32_m16    
  cmpw $0x3, %dx                       #  205   0xf82db  4      OPC=cmpw_r16_imm8     
  jbe .L_f82ee                         #  206   0xf82df  2      OPC=jbe_label         
  movzwl %dx, %esi                     #  207   0xf82e1  3      OPC=movzwl_r32_r16    
  cmpq %rsi, %rax                      #  208   0xf82e4  3      OPC=cmpq_r64_r64      
  jae .L_f828a                         #  209   0xf82e7  2      OPC=jae_label         
  movq %r8, %rax                       #  210   0xf82e9  3      OPC=movq_r64_r64      
  movq %r8, -0x120(%rbp)               #  211   0xf82ec  7      OPC=movq_m64_r64      
  jmpq .L_f82f8                        #  212   0xf82f3  2      OPC=jmpq_label        
.L_f82ee:                              #        0xf82f5  0      OPC=<label>           
  movq %r8, %rax                       #  213   0xf82f5  3      OPC=movq_r64_r64      
  movq %r8, -0x120(%rbp)               #  214   0xf82f8  7      OPC=movq_m64_r64      
.L_f82f8:                              #        0xf82ff  0      OPC=<label>           
  testq %rax, %rax                     #  215   0xf82ff  3      OPC=testq_r64_r64     
  je .L_f8388                          #  216   0xf8302  6      OPC=je_label_1        
.L_f8301:                              #        0xf8308  0      OPC=<label>           
  cmpb $0x2, %dil                      #  217   0xf8308  4      OPC=cmpb_r8_imm8      
  jne .L_f832b                         #  218   0xf830c  2      OPC=jne_label         
  movq -0x120(%rbp), %rax              #  219   0xf830e  7      OPC=movq_r64_m64      
  cmpl $0x100007f, (%rax)              #  220   0xf8315  6      OPC=cmpl_m32_imm32    
  movzbl -0xf6(%rbp), %eax             #  221   0xf831b  7      OPC=movzbl_r32_m8     
  movl $0x1, %esi                      #  222   0xf8322  5      OPC=movl_r32_imm32    
  cmovnel %esi, %eax                   #  223   0xf8327  3      OPC=cmovnel_r32_r32   
  movb %al, -0xf6(%rbp)                #  224   0xf832a  6      OPC=movb_m8_r8        
  jmpq .L_f83aa                        #  225   0xf8330  2      OPC=jmpq_label        
.L_f832b:                              #        0xf8332  0      OPC=<label>           
  movq -0x120(%rbp), %rax              #  226   0xf8332  7      OPC=movq_r64_m64      
  cmpl $0x0, (%rax)                    #  227   0xf8339  3      OPC=cmpl_m32_imm8     
  jne .L_f8391                         #  228   0xf833c  2      OPC=jne_label         
  cmpl $0x0, 0x4(%rax)                 #  229   0xf833e  4      OPC=cmpl_m32_imm8     
  jne .L_f839a                         #  230   0xf8342  2      OPC=jne_label         
  cmpl $0x0, 0x8(%rax)                 #  231   0xf8344  4      OPC=cmpl_m32_imm8     
  jne .L_f83a3                         #  232   0xf8348  2      OPC=jne_label         
  cmpl $0x1000000, 0xc(%rax)           #  233   0xf834a  7      OPC=cmpl_m32_imm32    
  movzbl -0xf5(%rbp), %eax             #  234   0xf8351  7      OPC=movzbl_r32_m8     
  movl $0x1, %esi                      #  235   0xf8358  5      OPC=movl_r32_imm32    
  cmovnel %esi, %eax                   #  236   0xf835d  3      OPC=cmovnel_r32_r32   
  movb %al, -0xf5(%rbp)                #  237   0xf8360  6      OPC=movb_m8_r8        
  jmpq .L_f83aa                        #  238   0xf8366  2      OPC=jmpq_label        
.L_f8361:                              #        0xf8368  0      OPC=<label>           
  movq $0x0, -0x120(%rbp)              #  239   0xf8368  11     OPC=movq_m64_imm32    
  jmpq .L_f83aa                        #  240   0xf8373  2      OPC=jmpq_label        
.L_f836e:                              #        0xf8375  0      OPC=<label>           
  movq $0x0, -0x120(%rbp)              #  241   0xf8375  11     OPC=movq_m64_imm32    
  jmpq .L_f83aa                        #  242   0xf8380  2      OPC=jmpq_label        
.L_f837b:                              #        0xf8382  0      OPC=<label>           
  movq $0x0, -0x120(%rbp)              #  243   0xf8382  11     OPC=movq_m64_imm32    
  jmpq .L_f83aa                        #  244   0xf838d  2      OPC=jmpq_label        
.L_f8388:                              #        0xf838f  0      OPC=<label>           
  movq %rax, -0x120(%rbp)              #  245   0xf838f  7      OPC=movq_m64_r64      
  jmpq .L_f83aa                        #  246   0xf8396  2      OPC=jmpq_label        
.L_f8391:                              #        0xf8398  0      OPC=<label>           
  movb $0x1, -0xf5(%rbp)               #  247   0xf8398  7      OPC=movb_m8_imm8      
  jmpq .L_f83aa                        #  248   0xf839f  2      OPC=jmpq_label        
.L_f839a:                              #        0xf83a1  0      OPC=<label>           
  movb $0x1, -0xf5(%rbp)               #  249   0xf83a1  7      OPC=movb_m8_imm8      
  jmpq .L_f83aa                        #  250   0xf83a8  2      OPC=jmpq_label        
.L_f83a3:                              #        0xf83aa  0      OPC=<label>           
  movb $0x1, -0xf5(%rbp)               #  251   0xf83aa  7      OPC=movb_m8_imm8      
.L_f83aa:                              #        0xf83b1  0      OPC=<label>           
  movq -0x128(%rbp), %rax              #  252   0xf83b1  7      OPC=movq_r64_m64      
  movq -0x130(%rbp), %rsi              #  253   0xf83b8  7      OPC=movq_r64_m64      
  cmpq %rsi, %rax                      #  254   0xf83bf  3      OPC=cmpq_r64_r64      
  je .L_f83c2                          #  255   0xf83c2  2      OPC=je_label          
  testq %rax, %rax                     #  256   0xf83c4  3      OPC=testq_r64_r64     
  jne .L_f83ec                         #  257   0xf83c7  2      OPC=jne_label         
.L_f83c2:                              #        0xf83c9  0      OPC=<label>           
  shlq $0x1, -0x130(%rbp)              #  258   0xf83c9  7      OPC=shlq_m64_one      
  movq -0x130(%rbp), %rax              #  259   0xf83d0  7      OPC=movq_r64_m64      
  leaq 0x3(%rax,%rax,2), %rsi          #  260   0xf83d7  5      OPC=leaq_r64_m16      
  shlq $0x3, %rsi                      #  261   0xf83dc  4      OPC=shlq_r64_imm8     
  movq -0x118(%rbp), %rdi              #  262   0xf83e0  7      OPC=movq_r64_m64      
  callq .__tls_get_addr_plt            #  263   0xf83e7  5      OPC=callq_label       
  movq %rax, -0x118(%rbp)              #  264   0xf83ec  7      OPC=movq_m64_r64      
.L_f83ec:                              #        0xf83f3  0      OPC=<label>           
  movq -0x118(%rbp), %rdi              #  265   0xf83f3  7      OPC=movq_r64_m64      
  testq %rdi, %rdi                     #  266   0xf83fa  3      OPC=testq_r64_r64     
  je .L_f85a7                          #  267   0xf83fd  6      OPC=je_label_1        
  movq -0x128(%rbp), %r10              #  268   0xf8403  7      OPC=movq_r64_m64      
  leaq 0x1(%r10), %rsi                 #  269   0xf840a  4      OPC=leaq_r64_m16      
  movzbl 0x12(%r12), %eax              #  270   0xf840e  6      OPC=movzbl_r32_m8     
  testb $0x24, %al                     #  271   0xf8414  2      OPC=testb_al_imm8     
  setne %cl                            #  272   0xf8416  3      OPC=setne_r8          
  andl $0x10, %eax                     #  273   0xf8419  3      OPC=andl_r32_imm8     
  cmpb $0x1, %al                       #  274   0xf841c  2      OPC=cmpb_al_imm8      
  sbbl %edx, %edx                      #  275   0xf841e  2      OPC=sbbl_r32_r32      
  notl %edx                            #  276   0xf8420  2      OPC=notl_r32          
  andl $0x2, %edx                      #  277   0xf8422  3      OPC=andl_r32_imm8     
  leaq (%r10,%r10,2), %rax             #  278   0xf8425  4      OPC=leaq_r64_m16      
  leaq 0x10(,%rax,8), %rax             #  279   0xf8429  8      OPC=leaq_r64_m16      
  addq %rdi, %rax                      #  280   0xf8431  3      OPC=addq_r64_r64      
  orl %ecx, %edx                       #  281   0xf8434  2      OPC=orl_r32_r32       
  movb %dl, 0x8(%rax)                  #  282   0xf8436  3      OPC=movb_m8_r8        
  movzbl 0x11(%r12), %edx              #  283   0xf8439  6      OPC=movzbl_r32_m8     
  movb %dl, 0x9(%rax)                  #  284   0xf843f  3      OPC=movb_m8_r8        
  movl 0x14(%r12), %edx                #  285   0xf8442  5      OPC=movl_r32_m32      
  movl %edx, 0xc(%rax)                 #  286   0xf8447  3      OPC=movl_m32_r32      
  cmpb $0x2, 0x10(%r12)                #  287   0xf844a  6      OPC=cmpb_m8_imm8      
  jne .L_f848b                         #  288   0xf8450  2      OPC=jne_label         
  movq %r10, %rax                      #  289   0xf8452  3      OPC=movq_r64_r64      
  addq %rax, %rax                      #  290   0xf8455  3      OPC=addq_r64_r64      
  leaq (%rax,%r10,1), %rdx             #  291   0xf8458  4      OPC=leaq_r64_m16      
  movl $0x0, 0x20(%rdi,%rdx,8)         #  292   0xf845c  8      OPC=movl_m32_imm32    
  movl $0x0, 0x24(%rdi,%rdx,8)         #  293   0xf8464  8      OPC=movl_m32_imm32    
  leaq 0x3(%r10,%r10,2), %rdx          #  294   0xf846c  5      OPC=leaq_r64_m16      
  movl $0xffff0000, 0x10(%rdi,%rdx,8)  #  295   0xf8471  8      OPC=movl_m32_imm32    
  movq -0x120(%rbp), %rdx              #  296   0xf8479  7      OPC=movq_r64_m64      
  movl (%rdx), %edx                    #  297   0xf8480  2      OPC=movl_r32_m32      
  addq %r10, %rax                      #  298   0xf8482  3      OPC=addq_r64_r64      
  movl %edx, 0x2c(%rdi,%rax,8)         #  299   0xf8485  4      OPC=movl_m32_r32      
  movq %rsi, -0x128(%rbp)              #  300   0xf8489  7      OPC=movq_m64_r64      
  jmpq .L_f84dd                        #  301   0xf8490  2      OPC=jmpq_label        
.L_f848b:                              #        0xf8492  0      OPC=<label>           
  movq -0x128(%rbp), %rax              #  302   0xf8492  7      OPC=movq_r64_m64      
  leaq (%rax,%rax,2), %rax             #  303   0xf8499  4      OPC=leaq_r64_m16      
  leaq 0x10(,%rax,8), %rax             #  304   0xf849d  8      OPC=leaq_r64_m16      
  addq -0x118(%rbp), %rax              #  305   0xf84a5  7      OPC=addq_r64_m64      
  movq -0x120(%rbp), %rcx              #  306   0xf84ac  7      OPC=movq_r64_m64      
  movq (%rcx), %rdx                    #  307   0xf84b3  3      OPC=movq_r64_m64      
  movq %rdx, 0x10(%rax)                #  308   0xf84b6  4      OPC=movq_m64_r64      
  movq 0x8(%rcx), %rdx                 #  309   0xf84ba  4      OPC=movq_r64_m64      
  movq %rdx, 0x18(%rax)                #  310   0xf84be  4      OPC=movq_m64_r64      
  movq %rsi, -0x128(%rbp)              #  311   0xf84c2  7      OPC=movq_m64_r64      
  jmpq .L_f84dd                        #  312   0xf84c9  2      OPC=jmpq_label        
.L_f84c4:                              #        0xf84cb  0      OPC=<label>           
  cmpw $0x3, %dx                       #  313   0xf84cb  4      OPC=cmpw_r16_imm8     
  movzbl -0xf4(%rbp), %eax             #  314   0xf84cf  7      OPC=movzbl_r32_m8     
  movl $0x1, %esi                      #  315   0xf84d6  5      OPC=movl_r32_imm32    
  cmovel %esi, %eax                    #  316   0xf84db  3      OPC=cmovel_r32_r32    
  movb %al, -0xf4(%rbp)                #  317   0xf84de  6      OPC=movb_m8_r8        
.L_f84dd:                              #        0xf84e4  0      OPC=<label>           
  movl (%r12), %eax                    #  318   0xf84e4  4      OPC=movl_r32_m32      
  addl $0x3, %eax                      #  319   0xf84e8  3      OPC=addl_r32_imm8     
  andl $0xfffffffc, %eax               #  320   0xf84eb  6      OPC=andl_r32_imm32    
  nop                                  #  321   0xf84f1  1      OPC=nop               
  nop                                  #  322   0xf84f2  1      OPC=nop               
  nop                                  #  323   0xf84f3  1      OPC=nop               
  subq %rax, %rbx                      #  324   0xf84f4  3      OPC=subq_r64_r64      
  addq %rax, %r12                      #  325   0xf84f7  3      OPC=addq_r64_r64      
  cmpq $0xf, %rbx                      #  326   0xf84fa  4      OPC=cmpq_r64_imm8     
  jbe .L_f8507                         #  327   0xf84fe  2      OPC=jbe_label         
  movl (%r12), %eax                    #  328   0xf8500  4      OPC=movl_r32_m32      
  cmpl $0xf, %eax                      #  329   0xf8504  3      OPC=cmpl_r32_imm8     
  jbe .L_f8507                         #  330   0xf8507  2      OPC=jbe_label         
  movl %eax, %eax                      #  331   0xf8509  2      OPC=movl_r32_r32      
  cmpq %rbx, %rax                      #  332   0xf850b  3      OPC=cmpq_r64_r64      
  jbe .L_f8208                         #  333   0xf850e  6      OPC=jbe_label_1       
.L_f8507:                              #        0xf8514  0      OPC=<label>           
  cmpb $0x0, -0xf4(%rbp)               #  334   0xf8514  7      OPC=cmpb_m8_imm8      
  je .L_f813c                          #  335   0xf851b  6      OPC=je_label_1        
  movq -0x118(%rbp), %r13              #  336   0xf8521  7      OPC=movq_r64_m64      
  movq %r13, %rbx                      #  337   0xf8528  3      OPC=movq_r64_r64      
  testq %r13, %r13                     #  338   0xf852b  3      OPC=testq_r64_r64     
  je .L_f855a                          #  339   0xf852e  2      OPC=je_label          
  cmpb $0x0, -0xf5(%rbp)               #  340   0xf8530  7      OPC=cmpb_m8_imm8      
  je .L_f855a                          #  341   0xf8537  2      OPC=je_label          
  callq .__nscd_get_nl_timestamp       #  342   0xf8539  5      OPC=callq_label       
  movl %eax, (%r13)                    #  343   0xf853e  4      OPC=movl_m32_r32      
  movl $0x2, 0x4(%r13)                 #  344   0xf8542  8      OPC=movl_m32_imm32    
  movzbl -0xf6(%rbp), %eax             #  345   0xf854a  7      OPC=movzbl_r32_m8     
  movb %al, 0x8(%r13)                  #  346   0xf8551  4      OPC=movb_m8_r8        
  movb $0x1, 0x9(%r13)                 #  347   0xf8555  5      OPC=movb_m8_imm8      
  movq -0x128(%rbp), %rax              #  348   0xf855a  7      OPC=movq_r64_m64      
  movq %rax, 0x10(%r13)                #  349   0xf8561  4      OPC=movq_m64_r64      
  jmpq .L_f85bc                        #  350   0xf8565  2      OPC=jmpq_label        
.L_f855a:                              #        0xf8567  0      OPC=<label>           
  movq %rbx, %rdi                      #  351   0xf8567  3      OPC=movq_r64_r64      
  callq .L_1f8d0                       #  352   0xf856a  5      OPC=callq_label       
  lock                                 #  353   0xf856f  1      OPC=lock              
  addl $0x2, 0x292e4a(%rip)            #  354   0xf8570  7      OPC=addl_m32_imm8     
  nop                                  #  355   0xf8577  1      OPC=nop               
  movzbl -0xf6(%rbp), %eax             #  356   0xf8578  7      OPC=movzbl_r32_m8     
  movb %al, 0x292e41(%rip)             #  357   0xf857f  6      OPC=movb_m8_r8        
  movzbl -0xf5(%rbp), %eax             #  358   0xf8585  7      OPC=movzbl_r32_m8     
  movb %al, 0x292e35(%rip)             #  359   0xf858c  6      OPC=movb_m8_r8        
  leaq 0x292e25(%rip), %r13            #  360   0xf8592  7      OPC=leaq_r64_m16      
  jmpq .L_f85bc                        #  361   0xf8599  2      OPC=jmpq_label        
.L_f858d:                              #        0xf859b  0      OPC=<label>           
  movl $0x0, %r13d                     #  362   0xf859b  6      OPC=movl_r32_imm32    
  jmpq .L_f85ae                        #  363   0xf85a1  2      OPC=jmpq_label        
.L_f8595:                              #        0xf85a3  0      OPC=<label>           
  movq -0x118(%rbp), %r13              #  364   0xf85a3  7      OPC=movq_r64_m64      
  jmpq .L_f85ae                        #  365   0xf85aa  2      OPC=jmpq_label        
.L_f859e:                              #        0xf85ac  0      OPC=<label>           
  movq -0x118(%rbp), %r13              #  366   0xf85ac  7      OPC=movq_r64_m64      
  jmpq .L_f85ae                        #  367   0xf85b3  2      OPC=jmpq_label        
.L_f85a7:                              #        0xf85b5  0      OPC=<label>           
  movq -0x118(%rbp), %r13              #  368   0xf85b5  7      OPC=movq_r64_m64      
.L_f85ae:                              #        0xf85bc  0      OPC=<label>           
  movq %r13, %rdi                      #  369   0xf85bc  3      OPC=movq_r64_r64      
  callq .L_1f8d0                       #  370   0xf85bf  5      OPC=callq_label       
  movl $0x0, %r13d                     #  371   0xf85c4  6      OPC=movl_r32_imm32    
.L_f85bc:                              #        0xf85ca  0      OPC=<label>           
  movq -0x138(%rbp), %rsp              #  372   0xf85ca  7      OPC=movq_r64_m64      
.L_f85c3:                              #        0xf85d1  0      OPC=<label>           
  movslq %r14d, %rdi                   #  373   0xf85d1  3      OPC=movslq_r64_r32    
  movl $0x3, %eax                      #  374   0xf85d4  5      OPC=movl_r32_imm32    
  syscall                              #  375   0xf85d9  2      OPC=syscall           
  testq %r13, %r13                     #  376   0xf85db  3      OPC=testq_r64_r64     
  je .L_f85ef                          #  377   0xf85de  2      OPC=je_label          
  movq 0x29765f(%rip), %rdx            #  378   0xf85e0  7      OPC=movq_r64_m64      
  movq %r13, 0x297658(%rip)            #  379   0xf85e7  7      OPC=movq_m64_r64      
  jmpq .L_f85f4                        #  380   0xf85ee  2      OPC=jmpq_label        
.L_f85e2:                              #        0xf85f0  0      OPC=<label>           
  movl $0x0, %r13d                     #  381   0xf85f0  6      OPC=movl_r32_imm32    
  movl $0x0, %edx                      #  382   0xf85f6  5      OPC=movl_r32_imm32    
  jmpq .L_f85f4                        #  383   0xf85fb  2      OPC=jmpq_label        
.L_f85ef:                              #        0xf85fd  0      OPC=<label>           
  movl $0x0, %edx                      #  384   0xf85fd  5      OPC=movl_r32_imm32    
.L_f85f4:                              #        0xf8602  0      OPC=<label>           
  cmpl $0x0, 0x298605(%rip)            #  385   0xf8602  7      OPC=cmpl_m32_imm8     
  je .L_f8608                          #  386   0xf8609  2      OPC=je_label          
  lock                                 #  387   0xf860b  1      OPC=lock              
  decl 0x29762c(%rip)                  #  388   0xf860c  6      OPC=decl_m32          
  nop                                  #  389   0xf8612  1      OPC=nop               
  jne .L_f8610                         #  390   0xf8613  2      OPC=jne_label         
  jmpq .L_f862a                        #  391   0xf8615  2      OPC=jmpq_label        
.L_f8608:                              #        0xf8617  0      OPC=<label>           
  decl 0x297622(%rip)                  #  392   0xf8617  6      OPC=decl_m32          
  je .L_f862a                          #  393   0xf861d  2      OPC=je_label          
.L_f8610:                              #        0xf861f  0      OPC=<label>           
  leaq 0x297619(%rip), %rdi            #  394   0xf861f  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                     #  395   0xf8626  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private     #  396   0xf862d  5      OPC=callq_label       
  addq $0x80, %rsp                     #  397   0xf8632  7      OPC=addq_r64_imm32    
.L_f862a:                              #        0xf8639  0      OPC=<label>           
  testq %r13, %r13                     #  398   0xf8639  3      OPC=testq_r64_r64     
  je .L_f8688                          #  399   0xf863c  2      OPC=je_label          
  movzbl 0x8(%r13), %eax               #  400   0xf863e  5      OPC=movzbl_r32_m8     
  movq -0xd8(%rbp), %rcx               #  401   0xf8643  7      OPC=movq_r64_m64      
  movb %al, (%rcx)                     #  402   0xf864a  2      OPC=movb_m8_r8        
  movzbl 0x9(%r13), %eax               #  403   0xf864c  5      OPC=movzbl_r32_m8     
  movq -0xe0(%rbp), %rcx               #  404   0xf8651  7      OPC=movq_r64_m64      
  movb %al, (%rcx)                     #  405   0xf8658  2      OPC=movb_m8_r8        
  movq 0x10(%r13), %rax                #  406   0xf865a  4      OPC=movq_r64_m64      
  movq -0xf0(%rbp), %rcx               #  407   0xf865e  7      OPC=movq_r64_m64      
  movq %rax, (%rcx)                    #  408   0xf8665  3      OPC=movq_m64_r64      
  addq $0x18, %r13                     #  409   0xf8668  4      OPC=addq_r64_imm8     
  movq -0xe8(%rbp), %rax               #  410   0xf866c  7      OPC=movq_r64_m64      
  movq %r13, (%rax)                    #  411   0xf8673  3      OPC=movq_m64_r64      
  testq %rdx, %rdx                     #  412   0xf8676  3      OPC=testq_r64_r64     
  je .L_f86b4                          #  413   0xf8679  2      OPC=je_label          
  cmpl $0x0, 0x4(%rdx)                 #  414   0xf867b  4      OPC=cmpl_m32_imm8     
  je .L_f86b4                          #  415   0xf867f  2      OPC=je_label          
  lock                                 #  416   0xf8681  1      OPC=lock              
  addl $0xffffffff, 0x4(%rdx)          #  417   0xf8682  7      OPC=addl_m32_imm32    
  nop                                  #  418   0xf8689  1      OPC=nop               
  nop                                  #  419   0xf868a  1      OPC=nop               
  nop                                  #  420   0xf868b  1      OPC=nop               
  nop                                  #  421   0xf868c  1      OPC=nop               
  nop                                  #  422   0xf868d  1      OPC=nop               
  sete %al                             #  423   0xf868e  3      OPC=sete_r8           
  testb %al, %al                       #  424   0xf8691  2      OPC=testb_r8_r8       
  je .L_f86b4                          #  425   0xf8693  2      OPC=je_label          
  movq %rdx, %rdi                      #  426   0xf8695  3      OPC=movq_r64_r64      
  callq .L_1f8d0                       #  427   0xf8698  5      OPC=callq_label       
  jmpq .L_f86b4                        #  428   0xf869d  2      OPC=jmpq_label        
.L_f8688:                              #        0xf869f  0      OPC=<label>           
  movq -0xd8(%rbp), %rax               #  429   0xf869f  7      OPC=movq_r64_m64      
  movb $0x1, (%rax)                    #  430   0xf86a6  3      OPC=movb_m8_imm8      
  movq -0xe0(%rbp), %rax               #  431   0xf86a9  7      OPC=movq_r64_m64      
  movb $0x1, (%rax)                    #  432   0xf86b0  3      OPC=movb_m8_imm8      
  jmpq .L_f86b4                        #  433   0xf86b3  2      OPC=jmpq_label        
.L_f869e:                              #        0xf86b5  0      OPC=<label>           
  movq 0x297593(%rip), %r13            #  434   0xf86b5  7      OPC=movq_r64_m64      
  lock                                 #  435   0xf86bc  1      OPC=lock              
  incl 0x4(%r13)                       #  436   0xf86bd  4      OPC=incl_m32          
  nop                                  #  437   0xf86c1  1      OPC=nop               
  movl $0x0, %edx                      #  438   0xf86c2  5      OPC=movl_r32_imm32    
  jmpq .L_f85f4                        #  439   0xf86c7  5      OPC=jmpq_label_1      
.L_f86b4:                              #        0xf86cc  0      OPC=<label>           
  leaq -0x28(%rbp), %rsp               #  440   0xf86cc  4      OPC=leaq_r64_m16      
  popq %rbx                            #  441   0xf86d0  1      OPC=popq_r64_1        
  popq %r12                            #  442   0xf86d1  2      OPC=popq_r64_1        
  popq %r13                            #  443   0xf86d3  2      OPC=popq_r64_1        
  popq %r14                            #  444   0xf86d5  2      OPC=popq_r64_1        
  popq %r15                            #  445   0xf86d7  2      OPC=popq_r64_1        
  popq %rbp                            #  446   0xf86d9  1      OPC=popq_r64_1        
  retq                                 #  447   0xf86da  1      OPC=retq              
                                                                                      
.size __check_pf, .-__check_pf

