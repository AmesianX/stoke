  .text
  .globl __parse_one_specwc
  .type __parse_one_specwc, @function

#! file-offset 0x61e6f
#! rip-offset  0x61e6f
#! capacity    1120 bytes

# Text                                    #  Line  RIP      Bytes  Opcode              
.__parse_one_specwc:                      #        0x61e6f  0      OPC=<label>         
  pushq %r14                              #  1     0x61e6f  2      OPC=pushq_r64_1     
  pushq %r13                              #  2     0x61e71  2      OPC=pushq_r64_1     
  pushq %r12                              #  3     0x61e73  2      OPC=pushq_r64_1     
  pushq %rbp                              #  4     0x61e75  1      OPC=pushq_r64_1     
  pushq %rbx                              #  5     0x61e76  1      OPC=pushq_r64_1     
  subq $0x10, %rsp                        #  6     0x61e77  4      OPC=subq_r64_imm8   
  movq %rsi, %rbp                         #  7     0x61e7b  3      OPC=movq_r64_r64    
  movq %rdx, %rbx                         #  8     0x61e7e  3      OPC=movq_r64_r64    
  movq %rcx, %r12                         #  9     0x61e81  3      OPC=movq_r64_r64    
  leaq 0x4(%rdi), %r13                    #  10    0x61e84  4      OPC=leaq_r64_m16    
  movq %r13, 0x8(%rsp)                    #  11    0x61e88  5      OPC=movq_m64_r64    
  movl $0xffffffff, 0x30(%rdx)            #  12    0x61e8d  7      OPC=movl_m32_imm32  
  andb $0x7, 0xc(%rdx)                    #  13    0x61e94  4      OPC=andb_m8_imm8    
  movzbl 0xd(%rdx), %eax                  #  14    0x61e98  4      OPC=movzbl_r32_m8   
  andl $0xfffffff6, %eax                  #  15    0x61e9c  6      OPC=andl_r32_imm32  
  nop                                     #  16    0x61ea2  1      OPC=nop             
  nop                                     #  17    0x61ea3  1      OPC=nop             
  nop                                     #  18    0x61ea4  1      OPC=nop             
  movl $0x20, 0x10(%rdx)                  #  19    0x61ea5  7      OPC=movl_m32_imm32  
  orl $0x4, %eax                          #  20    0x61eac  3      OPC=orl_r32_imm8    
  movb %al, 0xd(%rdx)                     #  21    0x61eaf  3      OPC=movb_m8_r8      
  movl 0x4(%rdi), %eax                    #  22    0x61eb2  3      OPC=movl_r32_m32    
  subl $0x30, %eax                        #  23    0x61eb5  3      OPC=subl_r32_imm8   
  cmpl $0x9, %eax                         #  24    0x61eb8  3      OPC=cmpl_r32_imm8   
  ja .L_61efb                             #  25    0x61ebb  2      OPC=ja_label        
  leaq 0x8(%rsp), %rdi                    #  26    0x61ebd  5      OPC=leaq_r64_m16    
  callq .read_int                         #  27    0x61ec2  5      OPC=callq_label     
  testl %eax, %eax                        #  28    0x61ec7  2      OPC=testl_r32_r32   
  je .L_61ef6                             #  29    0x61ec9  2      OPC=je_label        
  movq 0x8(%rsp), %rdx                    #  30    0x61ecb  5      OPC=movq_r64_m64    
  cmpl $0x24, (%rdx)                      #  31    0x61ed0  3      OPC=cmpl_m32_imm8   
  jne .L_61ef6                            #  32    0x61ed3  2      OPC=jne_label       
  addq $0x4, %rdx                         #  33    0x61ed5  4      OPC=addq_r64_imm8   
  movq %rdx, 0x8(%rsp)                    #  34    0x61ed9  5      OPC=movq_m64_r64    
  cmpl $0xffffffff, %eax                  #  35    0x61ede  6      OPC=cmpl_r32_imm32  
  nop                                     #  36    0x61ee4  1      OPC=nop             
  nop                                     #  37    0x61ee5  1      OPC=nop             
  nop                                     #  38    0x61ee6  1      OPC=nop             
  je .L_61efb                             #  39    0x61ee7  2      OPC=je_label        
  leal -0x1(%rax), %edx                   #  40    0x61ee9  3      OPC=leal_r32_m16    
  movl %edx, 0x30(%rbx)                   #  41    0x61eec  3      OPC=movl_m32_r32    
  movl %eax, %eax                         #  42    0x61eef  2      OPC=movl_r32_r32    
  movq (%r12), %rdx                       #  43    0x61ef1  4      OPC=movq_r64_m64    
  cmpq %rdx, %rax                         #  44    0x61ef5  3      OPC=cmpq_r64_r64    
  cmovbq %rdx, %rax                       #  45    0x61ef8  4      OPC=cmovbq_r64_r64  
  movq %rax, (%r12)                       #  46    0x61efc  4      OPC=movq_m64_r64    
  jmpq .L_61efb                           #  47    0x61f00  2      OPC=jmpq_label      
.L_61ef6:                                 #        0x61f02  0      OPC=<label>         
  movq %r13, 0x8(%rsp)                    #  48    0x61f02  5      OPC=movq_m64_r64    
.L_61efb:                                 #        0x61f07  0      OPC=<label>         
  leaq 0xf0b56(%rip), %rcx                #  49    0x61f07  7      OPC=leaq_r64_m16    
.L_61f02:                                 #        0x61f0e  0      OPC=<label>         
  movq 0x8(%rsp), %rdx                    #  50    0x61f0e  5      OPC=movq_r64_m64    
  movl (%rdx), %eax                       #  51    0x61f13  2      OPC=movl_r32_m32    
  subl $0x20, %eax                        #  52    0x61f15  3      OPC=subl_r32_imm8   
  cmpl $0x29, %eax                        #  53    0x61f18  3      OPC=cmpl_r32_imm8   
  ja .L_61f56                             #  54    0x61f1b  2      OPC=ja_label        
  movl %eax, %eax                         #  55    0x61f1d  2      OPC=movl_r32_r32    
  movslq (%rcx,%rax,4), %rax              #  56    0x61f1f  4      OPC=movslq_r64_m32  
  addq %rcx, %rax                         #  57    0x61f23  3      OPC=addq_r64_r64    
  jmpq %rax                               #  58    0x61f26  2      OPC=jmpq_r64        
  orb $0x10, 0xc(%rbx)                    #  59    0x61f28  4      OPC=orb_m8_imm8     
  jmpq .L_61f47                           #  60    0x61f2c  2      OPC=jmpq_label      
  orb $0x40, 0xc(%rbx)                    #  61    0x61f2e  4      OPC=orb_m8_imm8     
  jmpq .L_61f47                           #  62    0x61f32  2      OPC=jmpq_label      
  orb $0x20, 0xc(%rbx)                    #  63    0x61f34  4      OPC=orb_m8_imm8     
  jmpq .L_61f47                           #  64    0x61f38  2      OPC=jmpq_label      
  orb $0x8, 0xc(%rbx)                     #  65    0x61f3a  4      OPC=orb_m8_imm8     
  jmpq .L_61f47                           #  66    0x61f3e  2      OPC=jmpq_label      
  movl $0x30, 0x10(%rbx)                  #  67    0x61f40  7      OPC=movl_m32_imm32  
  jmpq .L_61f47                           #  68    0x61f47  2      OPC=jmpq_label      
  orb $0x80, 0xc(%rbx)                    #  69    0x61f49  4      OPC=orb_m8_imm8     
  jmpq .L_61f47                           #  70    0x61f4d  2      OPC=jmpq_label      
  orb $0x8, 0xd(%rbx)                     #  71    0x61f4f  4      OPC=orb_m8_imm8     
.L_61f47:                                 #        0x61f53  0      OPC=<label>         
  leaq 0x4(%rdx), %rax                    #  72    0x61f53  4      OPC=leaq_r64_m16    
  movq %rax, 0x8(%rsp)                    #  73    0x61f57  5      OPC=movq_m64_r64    
  cmpl $0x0, 0x4(%rdx)                    #  74    0x61f5c  4      OPC=cmpl_m32_imm8   
  jne .L_61f02                            #  75    0x61f60  2      OPC=jne_label       
.L_61f56:                                 #        0x61f62  0      OPC=<label>         
  testb $0x20, 0xc(%rbx)                  #  76    0x61f62  4      OPC=testb_m8_imm8   
  je .L_61f63                             #  77    0x61f66  2      OPC=je_label        
  movl $0x20, 0x10(%rbx)                  #  78    0x61f68  7      OPC=movl_m32_imm32  
.L_61f63:                                 #        0x61f6f  0      OPC=<label>         
  movl $0xffffffff, 0x2c(%rbx)            #  79    0x61f6f  7      OPC=movl_m32_imm32  
  movl $0x0, 0x4(%rbx)                    #  80    0x61f76  7      OPC=movl_m32_imm32  
  movq 0x8(%rsp), %rdx                    #  81    0x61f7d  5      OPC=movq_r64_m64    
  movl (%rdx), %eax                       #  82    0x61f82  2      OPC=movl_r32_m32    
  cmpl $0x2a, %eax                        #  83    0x61f84  3      OPC=cmpl_r32_imm8   
  jne .L_61feb                            #  84    0x61f87  2      OPC=jne_label       
  leaq 0x4(%rdx), %r14                    #  85    0x61f89  4      OPC=leaq_r64_m16    
  movq %r14, 0x8(%rsp)                    #  86    0x61f8d  5      OPC=movq_m64_r64    
  movl 0x4(%rdx), %eax                    #  87    0x61f92  3      OPC=movl_r32_m32    
  subl $0x30, %eax                        #  88    0x61f95  3      OPC=subl_r32_imm8   
  cmpl $0x9, %eax                         #  89    0x61f98  3      OPC=cmpl_r32_imm8   
  ja .L_61fce                             #  90    0x61f9b  2      OPC=ja_label        
  leaq 0x8(%rsp), %rdi                    #  91    0x61f9d  5      OPC=leaq_r64_m16    
  callq .read_int                         #  92    0x61fa2  5      OPC=callq_label     
  testl %eax, %eax                        #  93    0x61fa7  2      OPC=testl_r32_r32   
  je .L_61fce                             #  94    0x61fa9  2      OPC=je_label        
  movq 0x8(%rsp), %rdx                    #  95    0x61fab  5      OPC=movq_r64_m64    
  cmpl $0x24, (%rdx)                      #  96    0x61fb0  3      OPC=cmpl_m32_imm8   
  jne .L_61fce                            #  97    0x61fb3  2      OPC=jne_label       
  cmpl $0xffffffff, %eax                  #  98    0x61fb5  6      OPC=cmpl_r32_imm32  
  nop                                     #  99    0x61fbb  1      OPC=nop             
  nop                                     #  100   0x61fbc  1      OPC=nop             
  nop                                     #  101   0x61fbd  1      OPC=nop             
  je .L_61fc5                             #  102   0x61fbe  2      OPC=je_label        
  leal -0x1(%rax), %ecx                   #  103   0x61fc0  3      OPC=leal_r32_m16    
  movl %ecx, 0x2c(%rbx)                   #  104   0x61fc3  3      OPC=movl_m32_r32    
  movl %eax, %eax                         #  105   0x61fc6  2      OPC=movl_r32_r32    
  movq (%r12), %rcx                       #  106   0x61fc8  4      OPC=movq_r64_m64    
  cmpq %rcx, %rax                         #  107   0x61fcc  3      OPC=cmpq_r64_r64    
  cmovbq %rcx, %rax                       #  108   0x61fcf  4      OPC=cmovbq_r64_r64  
  movq %rax, (%r12)                       #  109   0x61fd3  4      OPC=movq_m64_r64    
.L_61fc5:                                 #        0x61fd7  0      OPC=<label>         
  addq $0x4, %rdx                         #  110   0x61fd7  4      OPC=addq_r64_imm8   
  movq %rdx, 0x8(%rsp)                    #  111   0x61fdb  5      OPC=movq_m64_r64    
.L_61fce:                                 #        0x61fe0  0      OPC=<label>         
  movl $0x0, %r13d                        #  112   0x61fe0  6      OPC=movl_r32_imm32  
  cmpl $0x0, 0x2c(%rbx)                   #  113   0x61fe6  4      OPC=cmpl_m32_imm8   
  jns .L_6200b                            #  114   0x61fea  2      OPC=jns_label       
  movl %ebp, 0x2c(%rbx)                   #  115   0x61fec  3      OPC=movl_m32_r32    
  movq %r14, 0x8(%rsp)                    #  116   0x61fef  5      OPC=movq_m64_r64    
  leaq 0x1(%rbp), %rbp                    #  117   0x61ff4  4      OPC=leaq_r64_m16    
  movb $0x1, %r13b                        #  118   0x61ff8  3      OPC=movb_r8_imm8    
  jmpq .L_6200b                           #  119   0x61ffb  2      OPC=jmpq_label      
.L_61feb:                                 #        0x61ffd  0      OPC=<label>         
  subl $0x30, %eax                        #  120   0x61ffd  3      OPC=subl_r32_imm8   
  movl $0x0, %r13d                        #  121   0x62000  6      OPC=movl_r32_imm32  
  cmpl $0x9, %eax                         #  122   0x62006  3      OPC=cmpl_r32_imm8   
  ja .L_6200b                             #  123   0x62009  2      OPC=ja_label        
  leaq 0x8(%rsp), %rdi                    #  124   0x6200b  5      OPC=leaq_r64_m16    
  callq .read_int                         #  125   0x62010  5      OPC=callq_label     
  cmpl $0xffffffff, %eax                  #  126   0x62015  6      OPC=cmpl_r32_imm32  
  nop                                     #  127   0x6201b  1      OPC=nop             
  nop                                     #  128   0x6201c  1      OPC=nop             
  nop                                     #  129   0x6201d  1      OPC=nop             
  je .L_6200b                             #  130   0x6201e  2      OPC=je_label        
  movl %eax, 0x4(%rbx)                    #  131   0x62020  3      OPC=movl_m32_r32    
.L_6200b:                                 #        0x62023  0      OPC=<label>         
  movl $0xffffffff, 0x28(%rbx)            #  132   0x62023  7      OPC=movl_m32_imm32  
  movl $0xffffffff, (%rbx)                #  133   0x6202a  6      OPC=movl_m32_imm32  
  movq 0x8(%rsp), %rax                    #  134   0x62030  5      OPC=movq_r64_m64    
  cmpl $0x2e, (%rax)                      #  135   0x62035  3      OPC=cmpl_m32_imm8   
  jne .L_620c1                            #  136   0x62038  6      OPC=jne_label_1     
  leaq 0x4(%rax), %rdx                    #  137   0x6203e  4      OPC=leaq_r64_m16    
  movq %rdx, 0x8(%rsp)                    #  138   0x62042  5      OPC=movq_m64_r64    
  movl 0x4(%rax), %edx                    #  139   0x62047  3      OPC=movl_r32_m32    
  cmpl $0x2a, %edx                        #  140   0x6204a  3      OPC=cmpl_r32_imm8   
  jne .L_620a0                            #  141   0x6204d  2      OPC=jne_label       
  leaq 0x8(%rax), %r14                    #  142   0x6204f  4      OPC=leaq_r64_m16    
  movq %r14, 0x8(%rsp)                    #  143   0x62053  5      OPC=movq_m64_r64    
  movl 0x8(%rax), %eax                    #  144   0x62058  3      OPC=movl_r32_m32    
  subl $0x30, %eax                        #  145   0x6205b  3      OPC=subl_r32_imm8   
  cmpl $0x9, %eax                         #  146   0x6205e  3      OPC=cmpl_r32_imm8   
  ja .L_62088                             #  147   0x62061  2      OPC=ja_label        
  leaq 0x8(%rsp), %rdi                    #  148   0x62063  5      OPC=leaq_r64_m16    
  callq .read_int                         #  149   0x62068  5      OPC=callq_label     
  testl %eax, %eax                        #  150   0x6206d  2      OPC=testl_r32_r32   
  je .L_62088                             #  151   0x6206f  2      OPC=je_label        
  movq 0x8(%rsp), %rdx                    #  152   0x62071  5      OPC=movq_r64_m64    
  cmpl $0x24, (%rdx)                      #  153   0x62076  3      OPC=cmpl_m32_imm8   
  jne .L_62088                            #  154   0x62079  2      OPC=jne_label       
  cmpl $0xffffffff, %eax                  #  155   0x6207b  6      OPC=cmpl_r32_imm32  
  nop                                     #  156   0x62081  1      OPC=nop             
  nop                                     #  157   0x62082  1      OPC=nop             
  nop                                     #  158   0x62083  1      OPC=nop             
  je .L_6207f                             #  159   0x62084  2      OPC=je_label        
  leal -0x1(%rax), %ecx                   #  160   0x62086  3      OPC=leal_r32_m16    
  movl %ecx, 0x28(%rbx)                   #  161   0x62089  3      OPC=movl_m32_r32    
  movl %eax, %eax                         #  162   0x6208c  2      OPC=movl_r32_r32    
  movq (%r12), %rcx                       #  163   0x6208e  4      OPC=movq_r64_m64    
  cmpq %rcx, %rax                         #  164   0x62092  3      OPC=cmpq_r64_r64    
  cmovbq %rcx, %rax                       #  165   0x62095  4      OPC=cmovbq_r64_r64  
  movq %rax, (%r12)                       #  166   0x62099  4      OPC=movq_m64_r64    
.L_6207f:                                 #        0x6209d  0      OPC=<label>         
  addq $0x4, %rdx                         #  167   0x6209d  4      OPC=addq_r64_imm8   
  movq %rdx, 0x8(%rsp)                    #  168   0x620a1  5      OPC=movq_m64_r64    
.L_62088:                                 #        0x620a6  0      OPC=<label>         
  cmpl $0x0, 0x28(%rbx)                   #  169   0x620a6  4      OPC=cmpl_m32_imm8   
  jns .L_620c1                            #  170   0x620aa  2      OPC=jns_label       
  movl %ebp, 0x28(%rbx)                   #  171   0x620ac  3      OPC=movl_m32_r32    
  addq $0x1, %r13                         #  172   0x620af  4      OPC=addq_r64_imm8   
  movq %r14, 0x8(%rsp)                    #  173   0x620b3  5      OPC=movq_m64_r64    
  leaq 0x1(%rbp), %rbp                    #  174   0x620b8  4      OPC=leaq_r64_m16    
  jmpq .L_620c1                           #  175   0x620bc  2      OPC=jmpq_label      
.L_620a0:                                 #        0x620be  0      OPC=<label>         
  subl $0x30, %edx                        #  176   0x620be  3      OPC=subl_r32_imm8   
  cmpl $0x9, %edx                         #  177   0x620c1  3      OPC=cmpl_r32_imm8   
  ja .L_620bb                             #  178   0x620c4  2      OPC=ja_label        
  leaq 0x8(%rsp), %rdi                    #  179   0x620c6  5      OPC=leaq_r64_m16    
  callq .read_int                         #  180   0x620cb  5      OPC=callq_label     
  cmpl $0xffffffff, %eax                  #  181   0x620d0  6      OPC=cmpl_r32_imm32  
  nop                                     #  182   0x620d6  1      OPC=nop             
  nop                                     #  183   0x620d7  1      OPC=nop             
  nop                                     #  184   0x620d8  1      OPC=nop             
  je .L_620c1                             #  185   0x620d9  2      OPC=je_label        
  movl %eax, (%rbx)                       #  186   0x620db  2      OPC=movl_m32_r32    
  jmpq .L_620c1                           #  187   0x620dd  2      OPC=jmpq_label      
.L_620bb:                                 #        0x620df  0      OPC=<label>         
  movl $0x0, (%rbx)                       #  188   0x620df  6      OPC=movl_m32_imm32  
.L_620c1:                                 #        0x620e5  0      OPC=<label>         
  andb $0xf8, 0xc(%rbx)                   #  189   0x620e5  4      OPC=andb_m8_imm8    
  andb $0xfd, 0xd(%rbx)                   #  190   0x620e9  4      OPC=andb_m8_imm8    
  movw $0x0, 0xe(%rbx)                    #  191   0x620ed  6      OPC=movw_m16_imm16  
  movq 0x32e85a(%rip), %rax               #  192   0x620f3  7      OPC=movq_r64_m64    
  testq %rax, %rax                        #  193   0x620fa  3      OPC=testq_r64_r64   
  je .L_620fa                             #  194   0x620fd  2      OPC=je_label        
  movq 0x8(%rsp), %rdx                    #  195   0x620ff  5      OPC=movq_r64_m64    
  movl (%rdx), %edx                       #  196   0x62104  2      OPC=movl_r32_m32    
  cmpq $0x0, (%rax,%rdx,8)                #  197   0x62106  5      OPC=cmpq_m64_imm8   
  je .L_620fa                             #  198   0x6210b  2      OPC=je_label        
  leaq 0x8(%rsp), %rdi                    #  199   0x6210d  5      OPC=leaq_r64_m16    
  movq %rbx, %rsi                         #  200   0x62112  3      OPC=movq_r64_r64    
  callq .__handle_registered_modifier_wc  #  201   0x62115  5      OPC=callq_label     
  testl %eax, %eax                        #  202   0x6211a  2      OPC=testl_r32_r32   
  je .L_6216f                             #  203   0x6211c  2      OPC=je_label        
.L_620fa:                                 #        0x6211e  0      OPC=<label>         
  movq 0x8(%rsp), %rcx                    #  204   0x6211e  5      OPC=movq_r64_m64    
  leaq 0x4(%rcx), %rax                    #  205   0x62123  4      OPC=leaq_r64_m16    
  movq %rax, 0x8(%rsp)                    #  206   0x62127  5      OPC=movq_m64_r64    
  movl (%rcx), %eax                       #  207   0x6212c  2      OPC=movl_r32_m32    
  subl $0x4c, %eax                        #  208   0x6212e  3      OPC=subl_r32_imm8   
  cmpl $0x2e, %eax                        #  209   0x62131  3      OPC=cmpl_r32_imm8   
  ja .L_6216a                             #  210   0x62134  2      OPC=ja_label        
  movl %eax, %eax                         #  211   0x62136  2      OPC=movl_r32_r32    
  leaq 0xf09e5(%rip), %rdx                #  212   0x62138  7      OPC=leaq_r64_m16    
  movslq (%rdx,%rax,4), %rax              #  213   0x6213f  4      OPC=movslq_r64_m32  
  addq %rax, %rdx                         #  214   0x62143  3      OPC=addq_r64_r64    
  jmpq %rdx                               #  215   0x62146  2      OPC=jmpq_r64        
  cmpl $0x68, 0x4(%rcx)                   #  216   0x62148  4      OPC=cmpl_m32_imm8   
  je .L_62130                             #  217   0x6214c  2      OPC=je_label        
  orb $0x2, 0xc(%rbx)                     #  218   0x6214e  4      OPC=orb_m8_imm8     
  jmpq .L_6216f                           #  219   0x62152  2      OPC=jmpq_label      
.L_62130:                                 #        0x62154  0      OPC=<label>         
  addq $0x8, %rcx                         #  220   0x62154  4      OPC=addq_r64_imm8   
  movq %rcx, 0x8(%rsp)                    #  221   0x62158  5      OPC=movq_m64_r64    
  orb $0x2, 0xd(%rbx)                     #  222   0x6215d  4      OPC=orb_m8_imm8     
  jmpq .L_6216f                           #  223   0x62161  2      OPC=jmpq_label      
  orb $0x4, 0xc(%rbx)                     #  224   0x62163  4      OPC=orb_m8_imm8     
  cmpl $0x6c, 0x4(%rcx)                   #  225   0x62167  4      OPC=cmpl_m32_imm8   
  jne .L_6216f                            #  226   0x6216b  2      OPC=jne_label       
  addq $0x8, %rcx                         #  227   0x6216d  4      OPC=addq_r64_imm8   
  movq %rcx, 0x8(%rsp)                    #  228   0x62171  5      OPC=movq_m64_r64    
  orb $0x1, 0xc(%rbx)                     #  229   0x62176  4      OPC=orb_m8_imm8     
  jmpq .L_6216f                           #  230   0x6217a  2      OPC=jmpq_label      
  orb $0x4, 0xc(%rbx)                     #  231   0x6217c  4      OPC=orb_m8_imm8     
  jmpq .L_6216f                           #  232   0x62180  2      OPC=jmpq_label      
  orb $0x4, 0xc(%rbx)                     #  233   0x62182  4      OPC=orb_m8_imm8     
  jmpq .L_6216f                           #  234   0x62186  2      OPC=jmpq_label      
  orb $0x4, 0xc(%rbx)                     #  235   0x62188  4      OPC=orb_m8_imm8     
  jmpq .L_6216f                           #  236   0x6218c  2      OPC=jmpq_label      
.L_6216a:                                 #        0x6218e  0      OPC=<label>         
  movq %rcx, 0x8(%rsp)                    #  237   0x6218e  5      OPC=movq_m64_r64    
.L_6216f:                                 #        0x62193  0      OPC=<label>         
  movq 0x8(%rsp), %rax                    #  238   0x62193  5      OPC=movq_r64_m64    
  leaq 0x4(%rax), %rdx                    #  239   0x62198  4      OPC=leaq_r64_m16    
  movq %rdx, 0x8(%rsp)                    #  240   0x6219c  5      OPC=movq_m64_r64    
  movl (%rax), %eax                       #  241   0x621a1  2      OPC=movl_r32_m32    
  movl %eax, 0x8(%rbx)                    #  242   0x621a3  3      OPC=movl_m32_r32    
  movl $0xffffffff, 0x40(%rbx)            #  243   0x621a6  7      OPC=movl_m32_imm32  
  cmpl $0xff, %eax                        #  244   0x621ad  5      OPC=cmpl_eax_imm32  
  jg .L_621cd                             #  245   0x621b2  2      OPC=jg_label        
  cmpq $0x0, 0x32e790(%rip)               #  246   0x621b4  8      OPC=cmpq_m64_imm8   
  je .L_621cd                             #  247   0x621bc  2      OPC=je_label        
  cltq                                    #  248   0x621be  2      OPC=cltq            
  movq 0x32a6ed(%rip), %rdx               #  249   0x621c0  7      OPC=movq_r64_m64    
  movq (%rdx,%rax,8), %rax                #  250   0x621c7  4      OPC=movq_r64_m64    
  testq %rax, %rax                        #  251   0x621cb  3      OPC=testq_r64_r64   
  je .L_621cd                             #  252   0x621ce  2      OPC=je_label        
  leaq 0x40(%rbx), %rcx                   #  253   0x621d0  4      OPC=leaq_r64_m16    
  leaq 0x34(%rbx), %rdx                   #  254   0x621d4  4      OPC=leaq_r64_m16    
  movl $0x1, %esi                         #  255   0x621d8  5      OPC=movl_r32_imm32  
  movq %rbx, %rdi                         #  256   0x621dd  3      OPC=movq_r64_r64    
  callq %rax                              #  257   0x621e0  2      OPC=callq_r64       
  movslq %eax, %rdx                       #  258   0x621e2  3      OPC=movslq_r64_r32  
  movq %rdx, 0x38(%rbx)                   #  259   0x621e5  4      OPC=movq_m64_r64    
  testl %eax, %eax                        #  260   0x621e9  2      OPC=testl_r32_r32   
  jns .L_6227a                            #  261   0x621eb  6      OPC=jns_label_1     
.L_621cd:                                 #        0x621f1  0      OPC=<label>         
  movq $0x1, 0x38(%rbx)                   #  262   0x621f1  8      OPC=movq_m64_imm32  
  movl 0x8(%rbx), %eax                    #  263   0x621f9  3      OPC=movl_r32_m32    
  leal -0x41(%rax), %edx                  #  264   0x621fc  3      OPC=leal_r32_m16    
  cmpl $0x37, %edx                        #  265   0x621ff  3      OPC=cmpl_r32_imm8   
  ja .L_62270                             #  266   0x62202  6      OPC=ja_label_1      
  movl %edx, %edx                         #  267   0x62208  2      OPC=movl_r32_r32    
  leaq 0xf09cf(%rip), %rax                #  268   0x6220a  7      OPC=leaq_r64_m16    
  movslq (%rax,%rdx,4), %rdx              #  269   0x62211  4      OPC=movslq_r64_m32  
  addq %rdx, %rax                         #  270   0x62215  3      OPC=addq_r64_r64    
  jmpq %rax                               #  271   0x62218  2      OPC=jmpq_r64        
  movzbl 0xc(%rbx), %eax                  #  272   0x6221a  4      OPC=movzbl_r32_m8   
  testb $0x4, %al                         #  273   0x6221e  2      OPC=testb_al_imm8   
  je .L_62207                             #  274   0x62220  2      OPC=je_label        
  movl $0x200, 0x34(%rbx)                 #  275   0x62222  7      OPC=movl_m32_imm32  
  jmpq .L_6227a                           #  276   0x62229  2      OPC=jmpq_label      
.L_62207:                                 #        0x6222b  0      OPC=<label>         
  testb $0x2, %al                         #  277   0x6222b  2      OPC=testb_al_imm8   
  je .L_62214                             #  278   0x6222d  2      OPC=je_label        
  movl $0x400, 0x34(%rbx)                 #  279   0x6222f  7      OPC=movl_m32_imm32  
  jmpq .L_6227a                           #  280   0x62236  2      OPC=jmpq_label      
.L_62214:                                 #        0x62238  0      OPC=<label>         
  testb $0x2, 0xd(%rbx)                   #  281   0x62238  4      OPC=testb_m8_imm8   
  setne %al                               #  282   0x6223c  3      OPC=setne_r8        
  movzbl %al, %eax                        #  283   0x6223f  3      OPC=movzbl_r32_r8   
  movl %eax, 0x34(%rbx)                   #  284   0x62242  3      OPC=movl_m32_r32    
  jmpq .L_6227a                           #  285   0x62245  2      OPC=jmpq_label      
  movzbl 0xc(%rbx), %eax                  #  286   0x62247  4      OPC=movzbl_r32_m8   
  andl $0x1, %eax                         #  287   0x6224b  3      OPC=andl_r32_imm8   
  cmpb $0x1, %al                          #  288   0x6224e  2      OPC=cmpb_al_imm8    
  sbbl %eax, %eax                         #  289   0x62250  2      OPC=sbbl_r32_r32    
  movb $0x0, %al                          #  290   0x62252  2      OPC=movb_r8_imm8    
  addl $0x107, %eax                       #  291   0x62254  5      OPC=addl_eax_imm32  
  movl %eax, 0x34(%rbx)                   #  292   0x62259  3      OPC=movl_m32_r32    
  jmpq .L_6227a                           #  293   0x6225c  2      OPC=jmpq_label      
  movl $0x1, 0x34(%rbx)                   #  294   0x6225e  7      OPC=movl_m32_imm32  
  jmpq .L_6227a                           #  295   0x62265  2      OPC=jmpq_label      
  movl $0x2, 0x34(%rbx)                   #  296   0x62267  7      OPC=movl_m32_imm32  
  jmpq .L_6227a                           #  297   0x6226e  2      OPC=jmpq_label      
  movl $0x3, 0x34(%rbx)                   #  298   0x62270  7      OPC=movl_m32_imm32  
  jmpq .L_6227a                           #  299   0x62277  2      OPC=jmpq_label      
  movl $0x4, 0x34(%rbx)                   #  300   0x62279  7      OPC=movl_m32_imm32  
  jmpq .L_6227a                           #  301   0x62280  2      OPC=jmpq_label      
  movl $0x5, 0x34(%rbx)                   #  302   0x62282  7      OPC=movl_m32_imm32  
  jmpq .L_6227a                           #  303   0x62289  2      OPC=jmpq_label      
  movl $0x800, 0x34(%rbx)                 #  304   0x6228b  7      OPC=movl_m32_imm32  
  jmpq .L_6227a                           #  305   0x62292  2      OPC=jmpq_label      
.L_62270:                                 #        0x62294  0      OPC=<label>         
  movq $0x0, 0x38(%rbx)                   #  306   0x62294  8      OPC=movq_m64_imm32  
  jmpq .L_6228f                           #  307   0x6229c  2      OPC=jmpq_label      
.L_6227a:                                 #        0x6229e  0      OPC=<label>         
  cmpl $0xffffffff, 0x30(%rbx)            #  308   0x6229e  7      OPC=cmpl_m32_imm32  
  nop                                     #  309   0x622a5  1      OPC=nop             
  nop                                     #  310   0x622a6  1      OPC=nop             
  nop                                     #  311   0x622a7  1      OPC=nop             
  nop                                     #  312   0x622a8  1      OPC=nop             
  jne .L_6228f                            #  313   0x622a9  2      OPC=jne_label       
  movq 0x38(%rbx), %rax                   #  314   0x622ab  4      OPC=movq_r64_m64    
  testq %rax, %rax                        #  315   0x622af  3      OPC=testq_r64_r64   
  je .L_6228f                             #  316   0x622b2  2      OPC=je_label        
  movl %ebp, 0x30(%rbx)                   #  317   0x622b4  3      OPC=movl_m32_r32    
  addq %rax, %r13                         #  318   0x622b7  3      OPC=addq_r64_r64    
.L_6228f:                                 #        0x622ba  0      OPC=<label>         
  cmpl $0x0, 0x8(%rbx)                    #  319   0x622ba  4      OPC=cmpl_m32_imm8   
  jne .L_622a8                            #  320   0x622be  2      OPC=jne_label       
  movq 0x8(%rsp), %rax                    #  321   0x622c0  5      OPC=movq_r64_m64    
  subq $0x4, %rax                         #  322   0x622c5  4      OPC=subq_r64_imm8   
  movq %rax, 0x20(%rbx)                   #  323   0x622c9  4      OPC=movq_m64_r64    
  movq %rax, 0x18(%rbx)                   #  324   0x622cd  4      OPC=movq_m64_r64    
  jmpq .L_622bf                           #  325   0x622d1  2      OPC=jmpq_label      
.L_622a8:                                 #        0x622d3  0      OPC=<label>         
  movq 0x8(%rsp), %rdi                    #  326   0x622d3  5      OPC=movq_r64_m64    
  movq %rdi, 0x18(%rbx)                   #  327   0x622d8  4      OPC=movq_m64_r64    
  movl $0x25, %esi                        #  328   0x622dc  5      OPC=movl_r32_imm32  
  callq .wcschrnul                        #  329   0x622e1  5      OPC=callq_label     
  movq %rax, 0x20(%rbx)                   #  330   0x622e6  4      OPC=movq_m64_r64    
.L_622bf:                                 #        0x622ea  0      OPC=<label>         
  movq %r13, %rax                         #  331   0x622ea  3      OPC=movq_r64_r64    
  addq $0x10, %rsp                        #  332   0x622ed  4      OPC=addq_r64_imm8   
  popq %rbx                               #  333   0x622f1  1      OPC=popq_r64_1      
  popq %rbp                               #  334   0x622f2  1      OPC=popq_r64_1      
  popq %r12                               #  335   0x622f3  2      OPC=popq_r64_1      
  popq %r13                               #  336   0x622f5  2      OPC=popq_r64_1      
  popq %r14                               #  337   0x622f7  2      OPC=popq_r64_1      
  retq                                    #  338   0x622f9  1      OPC=retq            
                                                                                       
.size __parse_one_specwc, .-__parse_one_specwc

