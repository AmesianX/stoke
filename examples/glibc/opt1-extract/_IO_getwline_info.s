  .text
  .globl _IO_getwline_info
  .type _IO_getwline_info, @function

#! file-offset 0x65d00
#! rip-offset  0x65d00
#! capacity    426 bytes

# Text                      #  Line  RIP      Bytes  Opcode               
._IO_getwline_info:         #        0x65d00  0      OPC=<label>          
  pushq %r15                #  1     0x65d00  2      OPC=pushq_r64_1      
  pushq %r14                #  2     0x65d02  2      OPC=pushq_r64_1      
  pushq %r13                #  3     0x65d04  2      OPC=pushq_r64_1      
  pushq %r12                #  4     0x65d06  2      OPC=pushq_r64_1      
  pushq %rbp                #  5     0x65d08  1      OPC=pushq_r64_1      
  pushq %rbx                #  6     0x65d09  1      OPC=pushq_r64_1      
  subq $0x28, %rsp          #  7     0x65d0a  4      OPC=subq_r64_imm8    
  movq %rdi, %r14           #  8     0x65d0e  3      OPC=movq_r64_r64     
  movq %rsi, 0x8(%rsp)      #  9     0x65d11  5      OPC=movq_m64_r64     
  movq %rdx, %rbp           #  10    0x65d16  3      OPC=movq_r64_r64     
  movl %ecx, 0x10(%rsp)     #  11    0x65d19  4      OPC=movl_m32_r32     
  movl %r8d, 0x14(%rsp)     #  12    0x65d1d  5      OPC=movl_m32_r32     
  movq %r9, 0x18(%rsp)      #  13    0x65d22  5      OPC=movq_m64_r64     
  testq %r9, %r9            #  14    0x65d27  3      OPC=testq_r64_r64    
  je .L_65d33               #  15    0x65d2a  2      OPC=je_label         
  movl $0x0, (%r9)          #  16    0x65d2c  7      OPC=movl_m32_imm32   
.L_65d33:                   #        0x65d33  0      OPC=<label>          
  cmpl $0x0, 0xc0(%r14)     #  17    0x65d33  8      OPC=cmpl_m32_imm8    
  jne .L_65d4a              #  18    0x65d3b  2      OPC=jne_label        
  movl $0x1, %esi           #  19    0x65d3d  5      OPC=movl_r32_imm32   
  movq %r14, %rdi           #  20    0x65d42  3      OPC=movq_r64_r64     
  callq ._IO_fwide          #  21    0x65d45  5      OPC=callq_label      
.L_65d4a:                   #        0x65d4a  0      OPC=<label>          
  testq %rbp, %rbp          #  22    0x65d4a  3      OPC=testq_r64_r64    
  je .L_65e8a               #  23    0x65d4d  6      OPC=je_label_1       
  movq 0x8(%rsp), %r13      #  24    0x65d53  5      OPC=movq_r64_m64     
.L_65d58:                   #        0x65d58  0      OPC=<label>          
  movq 0xa0(%r14), %rax     #  25    0x65d58  7      OPC=movq_r64_m64     
  movq (%rax), %r12         #  26    0x65d5f  3      OPC=movq_r64_m64     
  movq %r12, (%rsp)         #  27    0x65d62  4      OPC=movq_m64_r64     
  movq 0x8(%rax), %rax      #  28    0x65d66  4      OPC=movq_r64_m64     
  subq %r12, %rax           #  29    0x65d6a  3      OPC=subq_r64_r64     
  sarq $0x2, %rax           #  30    0x65d6d  4      OPC=sarq_r64_imm8    
  movq %rax, %rbx           #  31    0x65d71  3      OPC=movq_r64_r64     
  testq %rax, %rax          #  32    0x65d74  3      OPC=testq_r64_r64    
  jg .L_65df0               #  33    0x65d77  2      OPC=jg_label         
  movq %r14, %rdi           #  34    0x65d79  3      OPC=movq_r64_r64     
  callq .__wuflow           #  35    0x65d7c  5      OPC=callq_label      
  cmpl $0xffffffff, %eax    #  36    0x65d81  6      OPC=cmpl_r32_imm32   
  nop                       #  37    0x65d87  1      OPC=nop              
  nop                       #  38    0x65d88  1      OPC=nop              
  nop                       #  39    0x65d89  1      OPC=nop              
  jne .L_65d9f              #  40    0x65d8a  2      OPC=jne_label        
  movq 0x18(%rsp), %rax     #  41    0x65d8c  5      OPC=movq_r64_m64     
  testq %rax, %rax          #  42    0x65d91  3      OPC=testq_r64_r64    
  je .L_65e8f               #  43    0x65d94  6      OPC=je_label_1       
  movl $0xffffffff, (%rax)  #  44    0x65d9a  6      OPC=movl_m32_imm32   
  jmpq .L_65e8f             #  45    0x65da0  5      OPC=jmpq_label_1     
.L_65d9f:                   #        0x65da5  0      OPC=<label>          
  cmpl %eax, 0x10(%rsp)     #  46    0x65da5  4      OPC=cmpl_m32_r32     
  jne .L_65ddf              #  47    0x65da9  2      OPC=jne_label        
  movq %r13, %rax           #  48    0x65dab  3      OPC=movq_r64_r64     
  cmpl $0x0, 0x14(%rsp)     #  49    0x65dae  5      OPC=cmpl_m32_imm8    
  jle .L_65dbb              #  50    0x65db3  2      OPC=jle_label        
  addq $0x4, %r13           #  51    0x65db5  4      OPC=addq_r64_imm8    
  movl 0x10(%rsp), %ecx     #  52    0x65db9  4      OPC=movl_r32_m32     
  movl %ecx, (%rax)         #  53    0x65dbd  2      OPC=movl_m32_r32     
  jmpq .L_65dce             #  54    0x65dbf  2      OPC=jmpq_label       
.L_65dbb:                   #        0x65dc1  0      OPC=<label>          
  cmpl $0x0, 0x14(%rsp)     #  55    0x65dc1  5      OPC=cmpl_m32_imm8    
  jns .L_65dce              #  56    0x65dc6  2      OPC=jns_label        
  movl 0x10(%rsp), %esi     #  57    0x65dc8  4      OPC=movl_r32_m32     
  movq %r14, %rdi           #  58    0x65dcc  3      OPC=movq_r64_r64     
  callq ._IO_sputbackc      #  59    0x65dcf  5      OPC=callq_label      
.L_65dce:                   #        0x65dd4  0      OPC=<label>          
  subq 0x8(%rsp), %r13      #  60    0x65dd4  5      OPC=subq_r64_m64     
  movq %r13, %rax           #  61    0x65dd9  3      OPC=movq_r64_r64     
  sarq $0x2, %rax           #  62    0x65ddc  4      OPC=sarq_r64_imm8    
  jmpq .L_65e9b             #  63    0x65de0  5      OPC=jmpq_label_1     
.L_65ddf:                   #        0x65de5  0      OPC=<label>          
  movl %eax, (%r13)         #  64    0x65de5  4      OPC=movl_m32_r32     
  subq $0x1, %rbp           #  65    0x65de9  4      OPC=subq_r64_imm8    
  leaq 0x4(%r13), %r13      #  66    0x65ded  4      OPC=leaq_r64_m16     
  jmpq .L_65e7f             #  67    0x65df1  5      OPC=jmpq_label_1     
.L_65df0:                   #        0x65df6  0      OPC=<label>          
  cmpq %rbp, %rax           #  68    0x65df6  3      OPC=cmpq_r64_r64     
  cmovaeq %rbp, %rbx        #  69    0x65df9  4      OPC=cmovaeq_r64_r64  
  movq %rbx, %rdx           #  70    0x65dfd  3      OPC=movq_r64_r64     
  movl 0x10(%rsp), %esi     #  71    0x65e00  4      OPC=movl_r32_m32     
  movq %r12, %rdi           #  72    0x65e04  3      OPC=movq_r64_r64     
  callq .wmemchr            #  73    0x65e07  5      OPC=callq_label      
  movq %rax, %r15           #  74    0x65e0c  3      OPC=movq_r64_r64     
  testq %rax, %rax          #  75    0x65e0f  3      OPC=testq_r64_r64    
  je .L_65e59               #  76    0x65e12  2      OPC=je_label         
  movq %r13, %rbp           #  77    0x65e14  3      OPC=movq_r64_r64     
  subq 0x8(%rsp), %rbp      #  78    0x65e17  5      OPC=subq_r64_m64     
  sarq $0x2, %rbp           #  79    0x65e1c  4      OPC=sarq_r64_imm8    
  subq (%rsp), %rax         #  80    0x65e20  4      OPC=subq_r64_m64     
  sarq $0x2, %rax           #  81    0x65e24  4      OPC=sarq_r64_imm8    
  movq %rax, %rbx           #  82    0x65e28  3      OPC=movq_r64_r64     
  movl 0x14(%rsp), %ecx     #  83    0x65e2b  4      OPC=movl_r32_m32     
  testl %ecx, %ecx          #  84    0x65e2f  2      OPC=testl_r32_r32    
  js .L_65e3b               #  85    0x65e31  2      OPC=js_label         
  addq $0x4, %r15           #  86    0x65e33  4      OPC=addq_r64_imm8    
  addq $0x1, %rax           #  87    0x65e37  4      OPC=addq_r64_imm8    
  testl %ecx, %ecx          #  88    0x65e3b  2      OPC=testl_r32_r32    
  cmovgq %rax, %rbx         #  89    0x65e3d  4      OPC=cmovgq_r64_r64   
.L_65e3b:                   #        0x65e41  0      OPC=<label>          
  movq %rbx, %rdx           #  90    0x65e41  3      OPC=movq_r64_r64     
  movq %r12, %rsi           #  91    0x65e44  3      OPC=movq_r64_r64     
  movq %r13, %rdi           #  92    0x65e47  3      OPC=movq_r64_r64     
  callq .wmemcpy            #  93    0x65e4a  5      OPC=callq_label      
  movq 0xa0(%r14), %rax     #  94    0x65e4f  7      OPC=movq_r64_m64     
  movq %r15, (%rax)         #  95    0x65e56  3      OPC=movq_m64_r64     
  leaq (%rbx,%rbp,1), %rax  #  96    0x65e59  4      OPC=leaq_r64_m16     
  jmpq .L_65e9b             #  97    0x65e5d  2      OPC=jmpq_label       
.L_65e59:                   #        0x65e5f  0      OPC=<label>          
  movq %rbx, %rdx           #  98    0x65e5f  3      OPC=movq_r64_r64     
  movq %r12, %rsi           #  99    0x65e62  3      OPC=movq_r64_r64     
  movq %r13, %rdi           #  100   0x65e65  3      OPC=movq_r64_r64     
  callq .wmemcpy            #  101   0x65e68  5      OPC=callq_label      
  movq 0xa0(%r14), %rdx     #  102   0x65e6d  7      OPC=movq_r64_m64     
  leaq (,%rbx,4), %rax      #  103   0x65e74  8      OPC=leaq_r64_m16     
  addq %rax, (%rdx)         #  104   0x65e7c  3      OPC=addq_m64_r64     
  addq %rax, %r13           #  105   0x65e7f  3      OPC=addq_r64_r64     
  subq %rbx, %rbp           #  106   0x65e82  3      OPC=subq_r64_r64     
.L_65e7f:                   #        0x65e85  0      OPC=<label>          
  testq %rbp, %rbp          #  107   0x65e85  3      OPC=testq_r64_r64    
  jne .L_65d58              #  108   0x65e88  6      OPC=jne_label_1      
  jmpq .L_65e8f             #  109   0x65e8e  2      OPC=jmpq_label       
.L_65e8a:                   #        0x65e90  0      OPC=<label>          
  movq 0x8(%rsp), %r13      #  110   0x65e90  5      OPC=movq_r64_m64     
.L_65e8f:                   #        0x65e95  0      OPC=<label>          
  subq 0x8(%rsp), %r13      #  111   0x65e95  5      OPC=subq_r64_m64     
  movq %r13, %rax           #  112   0x65e9a  3      OPC=movq_r64_r64     
  sarq $0x2, %rax           #  113   0x65e9d  4      OPC=sarq_r64_imm8    
.L_65e9b:                   #        0x65ea1  0      OPC=<label>          
  addq $0x28, %rsp          #  114   0x65ea1  4      OPC=addq_r64_imm8    
  popq %rbx                 #  115   0x65ea5  1      OPC=popq_r64_1       
  popq %rbp                 #  116   0x65ea6  1      OPC=popq_r64_1       
  popq %r12                 #  117   0x65ea7  2      OPC=popq_r64_1       
  popq %r13                 #  118   0x65ea9  2      OPC=popq_r64_1       
  popq %r14                 #  119   0x65eab  2      OPC=popq_r64_1       
  popq %r15                 #  120   0x65ead  2      OPC=popq_r64_1       
  retq                      #  121   0x65eaf  1      OPC=retq             
                                                                          
.size _IO_getwline_info, .-_IO_getwline_info

