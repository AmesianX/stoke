  .text
  .globl _IO_file_xsgetn
  .type _IO_file_xsgetn, @function

#! file-offset 0x6d7a8
#! rip-offset  0x6d7a8
#! capacity    428 bytes

# Text                                #  Line  RIP      Bytes  Opcode               
._IO_file_xsgetn:                     #        0x6d7a8  0      OPC=<label>          
  pushq %r14                          #  1     0x6d7a8  2      OPC=pushq_r64_1      
  pushq %r13                          #  2     0x6d7aa  2      OPC=pushq_r64_1      
  pushq %r12                          #  3     0x6d7ac  2      OPC=pushq_r64_1      
  pushq %rbp                          #  4     0x6d7ae  1      OPC=pushq_r64_1      
  pushq %rbx                          #  5     0x6d7af  1      OPC=pushq_r64_1      
  movq %rdi, %rbx                     #  6     0x6d7b0  3      OPC=movq_r64_r64     
  movq %rsi, %r13                     #  7     0x6d7b3  3      OPC=movq_r64_r64     
  movq %rdx, %r14                     #  8     0x6d7b6  3      OPC=movq_r64_r64     
  cmpq $0x0, 0x38(%rdi)               #  9     0x6d7b9  5      OPC=cmpq_m64_imm8    
  jne .L_6d7dc                        #  10    0x6d7be  2      OPC=jne_label        
  movq 0x48(%rdi), %rdi               #  11    0x6d7c0  4      OPC=movq_r64_m64     
  testq %rdi, %rdi                    #  12    0x6d7c4  3      OPC=testq_r64_r64    
  je .L_6d7d4                         #  13    0x6d7c7  2      OPC=je_label         
  callq .L_1f8d0                      #  14    0x6d7c9  5      OPC=callq_label      
  andl $0xfffffeff, (%rbx)            #  15    0x6d7ce  6      OPC=andl_m32_imm32   
.L_6d7d4:                             #        0x6d7d4  0      OPC=<label>          
  movq %rbx, %rdi                     #  16    0x6d7d4  3      OPC=movq_r64_r64     
  callq ._IO_doallocbuf               #  17    0x6d7d7  5      OPC=callq_label      
.L_6d7dc:                             #        0x6d7dc  0      OPC=<label>          
  testq %r14, %r14                    #  18    0x6d7dc  3      OPC=testq_r64_r64    
  je .L_6d8d4                         #  19    0x6d7df  6      OPC=je_label_1       
  movq %r14, %r12                     #  20    0x6d7e5  3      OPC=movq_r64_r64     
.L_6d7e8:                             #        0x6d7e8  0      OPC=<label>          
  movq 0x8(%rbx), %rsi                #  21    0x6d7e8  4      OPC=movq_r64_m64     
  movq 0x10(%rbx), %rbp               #  22    0x6d7ec  4      OPC=movq_r64_m64     
  subq %rsi, %rbp                     #  23    0x6d7f0  3      OPC=subq_r64_r64     
  cmpq %r12, %rbp                     #  24    0x6d7f3  3      OPC=cmpq_r64_r64     
  jb .L_6d812                         #  25    0x6d7f6  2      OPC=jb_label         
  movq %r12, %rdx                     #  26    0x6d7f8  3      OPC=movq_r64_r64     
  movq %r13, %rdi                     #  27    0x6d7fb  3      OPC=movq_r64_r64     
  callq .__GI_memcpy                  #  28    0x6d7fe  5      OPC=callq_label      
  addq %r12, 0x8(%rbx)                #  29    0x6d803  4      OPC=addq_m64_r64     
  movl $0x0, %r12d                    #  30    0x6d807  6      OPC=movl_r32_imm32   
  jmpq .L_6d945                       #  31    0x6d80d  5      OPC=jmpq_label_1     
.L_6d812:                             #        0x6d812  0      OPC=<label>          
  testq %rbp, %rbp                    #  32    0x6d812  3      OPC=testq_r64_r64    
  je .L_6d82e                         #  33    0x6d815  2      OPC=je_label         
  movq %rbp, %rdx                     #  34    0x6d817  3      OPC=movq_r64_r64     
  movq %r13, %rdi                     #  35    0x6d81a  3      OPC=movq_r64_r64     
  callq .__GI_memcpy                  #  36    0x6d81d  5      OPC=callq_label      
  leaq (%r13,%rbp,1), %r13            #  37    0x6d822  5      OPC=leaq_r64_m16     
  subq %rbp, %r12                     #  38    0x6d827  3      OPC=subq_r64_r64     
  addq %rbp, 0x8(%rbx)                #  39    0x6d82a  4      OPC=addq_m64_r64     
.L_6d82e:                             #        0x6d82e  0      OPC=<label>          
  testl $0x100, (%rbx)                #  40    0x6d82e  6      OPC=testl_m32_imm32  
  je .L_6d843                         #  41    0x6d834  2      OPC=je_label         
  movq %rbx, %rdi                     #  42    0x6d836  3      OPC=movq_r64_r64     
  callq ._IO_switch_to_main_get_area  #  43    0x6d839  5      OPC=callq_label      
  jmpq .L_6d8c9                       #  44    0x6d83e  5      OPC=jmpq_label_1     
.L_6d843:                             #        0x6d843  0      OPC=<label>          
  movq 0x38(%rbx), %rcx               #  45    0x6d843  4      OPC=movq_r64_m64     
  testq %rcx, %rcx                    #  46    0x6d847  3      OPC=testq_r64_r64    
  je .L_6d90d                         #  47    0x6d84a  6      OPC=je_label_1       
  movq 0x40(%rbx), %rax               #  48    0x6d850  4      OPC=movq_r64_m64     
  subq %rcx, %rax                     #  49    0x6d854  3      OPC=subq_r64_r64     
  cmpq %rax, %r12                     #  50    0x6d857  3      OPC=cmpq_r64_r64     
  jae .L_6d8d9                        #  51    0x6d85a  2      OPC=jae_label        
  movq %rbx, %rdi                     #  52    0x6d85c  3      OPC=movq_r64_r64     
  callq .__underflow                  #  53    0x6d85f  5      OPC=callq_label      
  cmpl $0xffffffff, %eax              #  54    0x6d864  6      OPC=cmpl_r32_imm32   
  nop                                 #  55    0x6d86a  1      OPC=nop              
  nop                                 #  56    0x6d86b  1      OPC=nop              
  nop                                 #  57    0x6d86c  1      OPC=nop              
  jne .L_6d8c9                        #  58    0x6d86d  2      OPC=jne_label        
  jmpq .L_6d945                       #  59    0x6d86f  5      OPC=jmpq_label_1     
.L_6d86e:                             #        0x6d874  0      OPC=<label>          
  movq %r12, %rax                     #  60    0x6d874  3      OPC=movq_r64_r64     
  movl $0x0, %edx                     #  61    0x6d877  5      OPC=movl_r32_imm32   
  divq %rcx                           #  62    0x6d87c  3      OPC=divq_r64         
  movq %r12, %rax                     #  63    0x6d87f  3      OPC=movq_r64_r64     
  subq %rdx, %rax                     #  64    0x6d882  3      OPC=subq_r64_r64     
  movq %rax, %rdx                     #  65    0x6d885  3      OPC=movq_r64_r64     
.L_6d882:                             #        0x6d888  0      OPC=<label>          
  movq 0xd8(%rbx), %rax               #  66    0x6d888  7      OPC=movq_r64_m64     
  movq %r13, %rsi                     #  67    0x6d88f  3      OPC=movq_r64_r64     
  movq %rbx, %rdi                     #  68    0x6d892  3      OPC=movq_r64_r64     
  callq 0x70(%rax)                    #  69    0x6d895  3      OPC=callq_m64        
  testq %rax, %rax                    #  70    0x6d898  3      OPC=testq_r64_r64    
  jg .L_6d8ac                         #  71    0x6d89b  2      OPC=jg_label         
  testq %rax, %rax                    #  72    0x6d89d  3      OPC=testq_r64_r64    
  jne .L_6d8a4                        #  73    0x6d8a0  2      OPC=jne_label        
  orl $0x10, (%rbx)                   #  74    0x6d8a2  3      OPC=orl_m32_imm8     
  jmpq .L_6d945                       #  75    0x6d8a5  5      OPC=jmpq_label_1     
.L_6d8a4:                             #        0x6d8aa  0      OPC=<label>          
  orl $0x20, (%rbx)                   #  76    0x6d8aa  3      OPC=orl_m32_imm8     
  jmpq .L_6d945                       #  77    0x6d8ad  5      OPC=jmpq_label_1     
.L_6d8ac:                             #        0x6d8b2  0      OPC=<label>          
  addq %rax, %r13                     #  78    0x6d8b2  3      OPC=addq_r64_r64     
  subq %rax, %r12                     #  79    0x6d8b5  3      OPC=subq_r64_r64     
  movq 0x90(%rbx), %rdx               #  80    0x6d8b8  7      OPC=movq_r64_m64     
  cmpq $0xff, %rdx                    #  81    0x6d8bf  4      OPC=cmpq_r64_imm8    
  je .L_6d8c9                         #  82    0x6d8c3  2      OPC=je_label         
  addq %rdx, %rax                     #  83    0x6d8c5  3      OPC=addq_r64_r64     
  movq %rax, 0x90(%rbx)               #  84    0x6d8c8  7      OPC=movq_m64_r64     
.L_6d8c9:                             #        0x6d8cf  0      OPC=<label>          
  testq %r12, %r12                    #  85    0x6d8cf  3      OPC=testq_r64_r64    
  jne .L_6d7e8                        #  86    0x6d8d2  6      OPC=jne_label_1      
  jmpq .L_6d945                       #  87    0x6d8d8  2      OPC=jmpq_label       
.L_6d8d4:                             #        0x6d8da  0      OPC=<label>          
  movq %r14, %r12                     #  88    0x6d8da  3      OPC=movq_r64_r64     
  jmpq .L_6d945                       #  89    0x6d8dd  2      OPC=jmpq_label       
.L_6d8d9:                             #        0x6d8df  0      OPC=<label>          
  movq %rcx, 0x18(%rbx)               #  90    0x6d8df  4      OPC=movq_m64_r64     
  movq %rcx, 0x8(%rbx)                #  91    0x6d8e3  4      OPC=movq_m64_r64     
  movq %rcx, 0x10(%rbx)               #  92    0x6d8e7  4      OPC=movq_m64_r64     
  movq %rcx, 0x28(%rbx)               #  93    0x6d8eb  4      OPC=movq_m64_r64     
  movq %rcx, 0x20(%rbx)               #  94    0x6d8ef  4      OPC=movq_m64_r64     
  movq %rcx, 0x30(%rbx)               #  95    0x6d8f3  4      OPC=movq_m64_r64     
  movq 0x40(%rbx), %rax               #  96    0x6d8f7  4      OPC=movq_r64_m64     
  subq %rcx, %rax                     #  97    0x6d8fb  3      OPC=subq_r64_r64     
  movq %rax, %rcx                     #  98    0x6d8fe  3      OPC=movq_r64_r64     
  movq %r12, %rdx                     #  99    0x6d901  3      OPC=movq_r64_r64     
  cmpq $0x7f, %rax                    #  100   0x6d904  4      OPC=cmpq_r64_imm8    
  jbe .L_6d882                        #  101   0x6d908  6      OPC=jbe_label_1      
  jmpq .L_6d86e                       #  102   0x6d90e  5      OPC=jmpq_label_1     
.L_6d90d:                             #        0x6d913  0      OPC=<label>          
  movq $0x0, 0x18(%rbx)               #  103   0x6d913  8      OPC=movq_m64_imm32   
  movq $0x0, 0x8(%rbx)                #  104   0x6d91b  8      OPC=movq_m64_imm32   
  movq $0x0, 0x10(%rbx)               #  105   0x6d923  8      OPC=movq_m64_imm32   
  movq $0x0, 0x28(%rbx)               #  106   0x6d92b  8      OPC=movq_m64_imm32   
  movq $0x0, 0x20(%rbx)               #  107   0x6d933  8      OPC=movq_m64_imm32   
  movq $0x0, 0x30(%rbx)               #  108   0x6d93b  8      OPC=movq_m64_imm32   
  movq %r12, %rdx                     #  109   0x6d943  3      OPC=movq_r64_r64     
  jmpq .L_6d882                       #  110   0x6d946  5      OPC=jmpq_label_1     
.L_6d945:                             #        0x6d94b  0      OPC=<label>          
  movq %r14, %rax                     #  111   0x6d94b  3      OPC=movq_r64_r64     
  subq %r12, %rax                     #  112   0x6d94e  3      OPC=subq_r64_r64     
  popq %rbx                           #  113   0x6d951  1      OPC=popq_r64_1       
  popq %rbp                           #  114   0x6d952  1      OPC=popq_r64_1       
  popq %r12                           #  115   0x6d953  2      OPC=popq_r64_1       
  popq %r13                           #  116   0x6d955  2      OPC=popq_r64_1       
  popq %r14                           #  117   0x6d957  2      OPC=popq_r64_1       
  retq                                #  118   0x6d959  1      OPC=retq             
                                                                                    
.size _IO_file_xsgetn, .-_IO_file_xsgetn

