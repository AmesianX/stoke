  .text
  .globl argp_failure
  .type argp_failure, @function

#! file-offset 0xe7806
#! rip-offset  0xe7806
#! capacity    495 bytes

# Text                       #  Line  RIP      Bytes  Opcode               
.argp_failure:               #        0xe7806  0      OPC=<label>          
  pushq %r14                 #  1     0xe7806  2      OPC=pushq_r64_1      
  pushq %r13                 #  2     0xe7808  2      OPC=pushq_r64_1      
  pushq %r12                 #  3     0xe780a  2      OPC=pushq_r64_1      
  pushq %rbp                 #  4     0xe780c  1      OPC=pushq_r64_1      
  pushq %rbx                 #  5     0xe780d  1      OPC=pushq_r64_1      
  subq $0x190, %rsp          #  6     0xe780e  7      OPC=subq_r64_imm32   
  movq %rdi, %rbp            #  7     0xe7815  3      OPC=movq_r64_r64     
  movl %esi, %r14d           #  8     0xe7818  3      OPC=movl_r32_r32     
  movl %edx, %r13d           #  9     0xe781b  3      OPC=movl_r32_r32     
  movq %r8, 0x100(%rsp)      #  10    0xe781e  8      OPC=movq_m64_r64     
  movq %r9, 0x108(%rsp)      #  11    0xe7826  8      OPC=movq_m64_r64     
  testb %al, %al             #  12    0xe782e  2      OPC=testb_r8_r8      
  je .L_e7872                #  13    0xe7830  2      OPC=je_label         
  movaps %xmm0, 0x110(%rsp)  #  14    0xe7832  8      OPC=movaps_m128_xmm  
  movaps %xmm1, 0x120(%rsp)  #  15    0xe783a  8      OPC=movaps_m128_xmm  
  movaps %xmm2, 0x130(%rsp)  #  16    0xe7842  8      OPC=movaps_m128_xmm  
  movaps %xmm3, 0x140(%rsp)  #  17    0xe784a  8      OPC=movaps_m128_xmm  
  movaps %xmm4, 0x150(%rsp)  #  18    0xe7852  8      OPC=movaps_m128_xmm  
  movaps %xmm5, 0x160(%rsp)  #  19    0xe785a  8      OPC=movaps_m128_xmm  
  movaps %xmm6, 0x170(%rsp)  #  20    0xe7862  8      OPC=movaps_m128_xmm  
  movaps %xmm7, 0x180(%rsp)  #  21    0xe786a  8      OPC=movaps_m128_xmm  
.L_e7872:                    #        0xe7872  0      OPC=<label>          
  movq %rcx, %r12            #  22    0xe7872  3      OPC=movq_r64_r64     
  testq %rbp, %rbp           #  23    0xe7875  3      OPC=testq_r64_r64    
  je .L_e7896                #  24    0xe7878  2      OPC=je_label         
  testb $0x2, 0x1c(%rbp)     #  25    0xe787a  4      OPC=testb_m8_imm8    
  jne .L_e79e5               #  26    0xe787e  6      OPC=jne_label_1      
  movq 0x48(%rbp), %rbx      #  27    0xe7884  4      OPC=movq_r64_m64     
  testq %rbx, %rbx           #  28    0xe7888  3      OPC=testq_r64_r64    
  jne .L_e79bd               #  29    0xe788b  6      OPC=jne_label_1      
  jmpq .L_e79e5              #  30    0xe7891  5      OPC=jmpq_label_1     
.L_e7896:                    #        0xe7896  0      OPC=<label>          
  movq 0x2a3523(%rip), %rax  #  31    0xe7896  7      OPC=movq_r64_m64     
  movq (%rax), %rbx          #  32    0xe789d  3      OPC=movq_r64_m64     
  testq %rbx, %rbx           #  33    0xe78a0  3      OPC=testq_r64_r64    
  jne .L_e79ce               #  34    0xe78a3  6      OPC=jne_label_1      
  jmpq .L_e79e5              #  35    0xe78a9  5      OPC=jmpq_label_1     
.L_e78ae:                    #        0xe78ae  0      OPC=<label>          
  leaq 0x72970(%rip), %rsi   #  36    0xe78ae  7      OPC=leaq_r64_m16     
  movq %rbx, %rdi            #  37    0xe78b5  3      OPC=movq_r64_r64     
  movl $0x0, %eax            #  38    0xe78b8  5      OPC=movl_r32_imm32   
  callq .__fxprintf          #  39    0xe78bd  5      OPC=callq_label      
  testq %r12, %r12           #  40    0xe78c2  3      OPC=testq_r64_r64    
  je .L_e7933                #  41    0xe78c5  2      OPC=je_label         
  movl $0x20, 0x10(%rsp)     #  42    0xe78c7  8      OPC=movl_m32_imm32   
  movl $0x30, 0x14(%rsp)     #  43    0xe78cf  8      OPC=movl_m32_imm32   
  leaq 0x1c0(%rsp), %rax     #  44    0xe78d7  8      OPC=leaq_r64_m16     
  movq %rax, 0x18(%rsp)      #  45    0xe78df  5      OPC=movq_m64_r64     
  leaq 0xe0(%rsp), %rax      #  46    0xe78e4  8      OPC=leaq_r64_m16     
  movq %rax, 0x20(%rsp)      #  47    0xe78ec  5      OPC=movq_m64_r64     
  leaq 0x10(%rsp), %rdx      #  48    0xe78f1  5      OPC=leaq_r64_m16     
  leaq 0x8(%rsp), %rdi       #  49    0xe78f6  5      OPC=leaq_r64_m16     
  movq %r12, %rsi            #  50    0xe78fb  3      OPC=movq_r64_r64     
  callq .vasprintf           #  51    0xe78fe  5      OPC=callq_label      
  testl %eax, %eax           #  52    0xe7903  2      OPC=testl_r32_r32    
  jns .L_e7910               #  53    0xe7905  2      OPC=jns_label        
  movq $0x0, 0x8(%rsp)       #  54    0xe7907  9      OPC=movq_m64_imm32   
.L_e7910:                    #        0xe7910  0      OPC=<label>          
  movq 0x8(%rsp), %rdx       #  55    0xe7910  5      OPC=movq_r64_m64     
  leaq 0x72907(%rip), %rsi   #  56    0xe7915  7      OPC=leaq_r64_m16     
  movq %rbx, %rdi            #  57    0xe791c  3      OPC=movq_r64_r64     
  movl $0x0, %eax            #  58    0xe791f  5      OPC=movl_r32_imm32   
  callq .__fxprintf          #  59    0xe7924  5      OPC=callq_label      
  movq 0x8(%rsp), %rdi       #  60    0xe7929  5      OPC=movq_r64_m64     
  callq .L_1f8d0             #  61    0xe792e  5      OPC=callq_label      
.L_e7933:                    #        0xe7933  0      OPC=<label>          
  testl %r13d, %r13d         #  62    0xe7933  3      OPC=testl_r32_r32    
  je .L_e7961                #  63    0xe7936  2      OPC=je_label         
  leaq 0x10(%rsp), %rsi      #  64    0xe7938  5      OPC=leaq_r64_m16     
  movl $0xc8, %edx           #  65    0xe793d  5      OPC=movl_r32_imm32   
  movl %r13d, %edi           #  66    0xe7942  3      OPC=movl_r32_r32     
  callq .__strerror_r        #  67    0xe7945  5      OPC=callq_label      
  movq %rax, %rdx            #  68    0xe794a  3      OPC=movq_r64_r64     
  leaq 0x728cf(%rip), %rsi   #  69    0xe794d  7      OPC=leaq_r64_m16     
  movq %rbx, %rdi            #  70    0xe7954  3      OPC=movq_r64_r64     
  movl $0x0, %eax            #  71    0xe7957  5      OPC=movl_r32_imm32   
  callq .__fxprintf          #  72    0xe795c  5      OPC=callq_label      
.L_e7961:                    #        0xe7961  0      OPC=<label>          
  cmpl $0x0, 0xc0(%rbx)      #  73    0xe7961  7      OPC=cmpl_m32_imm8    
  jle .L_e7979               #  74    0xe7968  2      OPC=jle_label        
  movq %rbx, %rsi            #  75    0xe796a  3      OPC=movq_r64_r64     
  movl $0xa, %edi            #  76    0xe796d  5      OPC=movl_r32_imm32   
  callq .putwc_unlocked      #  77    0xe7972  5      OPC=callq_label      
  jmpq .L_e799d              #  78    0xe7977  2      OPC=jmpq_label       
.L_e7979:                    #        0xe7979  0      OPC=<label>          
  movq 0x28(%rbx), %rax      #  79    0xe7979  4      OPC=movq_r64_m64     
  cmpq 0x30(%rbx), %rax      #  80    0xe797d  4      OPC=cmpq_r64_m64     
  jb .L_e7992                #  81    0xe7981  2      OPC=jb_label         
  movl $0xa, %esi            #  82    0xe7983  5      OPC=movl_r32_imm32   
  movq %rbx, %rdi            #  83    0xe7988  3      OPC=movq_r64_r64     
  callq .__overflow          #  84    0xe798b  5      OPC=callq_label      
  jmpq .L_e799d              #  85    0xe7990  2      OPC=jmpq_label       
.L_e7992:                    #        0xe7992  0      OPC=<label>          
  leaq 0x1(%rax), %rdx       #  86    0xe7992  4      OPC=leaq_r64_m16     
  movq %rdx, 0x28(%rbx)      #  87    0xe7996  4      OPC=movq_m64_r64     
  movb $0xa, (%rax)          #  88    0xe799a  3      OPC=movb_m8_imm8     
.L_e799d:                    #        0xe799d  0      OPC=<label>          
  movq %rbx, %rdi            #  89    0xe799d  3      OPC=movq_r64_r64     
  callq ._IO_funlockfile     #  90    0xe79a0  5      OPC=callq_label      
  testl %r14d, %r14d         #  91    0xe79a5  3      OPC=testl_r32_r32    
  je .L_e79e5                #  92    0xe79a8  2      OPC=je_label         
  testq %rbp, %rbp           #  93    0xe79aa  3      OPC=testq_r64_r64    
  je .L_e79b5                #  94    0xe79ad  2      OPC=je_label         
  testb $0x20, 0x1c(%rbp)    #  95    0xe79af  4      OPC=testb_m8_imm8    
  jne .L_e79e5               #  96    0xe79b3  2      OPC=jne_label        
.L_e79b5:                    #        0xe79b5  0      OPC=<label>          
  movl %r14d, %edi           #  97    0xe79b5  3      OPC=movl_r32_r32     
  callq .exit                #  98    0xe79b8  5      OPC=callq_label      
.L_e79bd:                    #        0xe79bd  0      OPC=<label>          
  movq %rbx, %rdi            #  99    0xe79bd  3      OPC=movq_r64_r64     
  callq ._IO_flockfile       #  100   0xe79c0  5      OPC=callq_label      
  movq 0x40(%rbp), %rdx      #  101   0xe79c5  4      OPC=movq_r64_m64     
  jmpq .L_e78ae              #  102   0xe79c9  5      OPC=jmpq_label_1     
.L_e79ce:                    #        0xe79ce  0      OPC=<label>          
  movq %rbx, %rdi            #  103   0xe79ce  3      OPC=movq_r64_r64     
  callq ._IO_flockfile       #  104   0xe79d1  5      OPC=callq_label      
  movq 0x2a356b(%rip), %rax  #  105   0xe79d6  7      OPC=movq_r64_m64     
  movq (%rax), %rdx          #  106   0xe79dd  3      OPC=movq_r64_m64     
  jmpq .L_e78ae              #  107   0xe79e0  5      OPC=jmpq_label_1     
.L_e79e5:                    #        0xe79e5  0      OPC=<label>          
  addq $0x190, %rsp          #  108   0xe79e5  7      OPC=addq_r64_imm32   
  popq %rbx                  #  109   0xe79ec  1      OPC=popq_r64_1       
  popq %rbp                  #  110   0xe79ed  1      OPC=popq_r64_1       
  popq %r12                  #  111   0xe79ee  2      OPC=popq_r64_1       
  popq %r13                  #  112   0xe79f0  2      OPC=popq_r64_1       
  popq %r14                  #  113   0xe79f2  2      OPC=popq_r64_1       
  retq                       #  114   0xe79f4  1      OPC=retq             
                                                                           
.size argp_failure, .-argp_failure

