  .text
  .globl link_nfa_nodes
  .type link_nfa_nodes, @function

#! file-offset 0xbb30a
#! rip-offset  0xbb30a
#! capacity    492 bytes

# Text                        #  Line  RIP      Bytes  Opcode              
.link_nfa_nodes:              #        0xbb30a  0      OPC=<label>         
  pushq %r12                  #  1     0xbb30a  2      OPC=pushq_r64_1     
  pushq %rbp                  #  2     0xbb30c  1      OPC=pushq_r64_1     
  pushq %rbx                  #  3     0xbb30d  1      OPC=pushq_r64_1     
  movl 0x38(%rsi), %eax       #  4     0xbb30e  3      OPC=movl_r32_m32    
  movzbl 0x30(%rsi), %r8d     #  5     0xbb311  5      OPC=movzbl_r32_m8   
  cmpb $0x10, %r8b            #  6     0xbb316  4      OPC=cmpb_r8_imm8    
  ja .L_bb4a9                 #  7     0xbb31a  6      OPC=ja_label_1      
  movzbl %r8b, %ecx           #  8     0xbb320  4      OPC=movzbl_r32_r8   
  leaq 0x99555(%rip), %rdx    #  9     0xbb324  7      OPC=leaq_r64_m16    
  movslq (%rdx,%rcx,4), %rcx  #  10    0xbb32b  4      OPC=movslq_r64_m32  
  addq %rcx, %rdx             #  11    0xbb32f  3      OPC=addq_r64_r64    
  jmpq %rdx                   #  12    0xbb332  2      OPC=jmpq_r64        
  cmpq $0x0, 0x20(%rsi)       #  13    0xbb334  5      OPC=cmpq_m64_imm8   
  je .L_bb4ec                 #  14    0xbb339  6      OPC=je_label_1      
  leaq 0x9e10c(%rip), %rcx    #  15    0xbb33f  7      OPC=leaq_r64_m16    
  movl $0x587, %edx           #  16    0xbb346  5      OPC=movl_r32_imm32  
  leaq 0x9dfcd(%rip), %rsi    #  17    0xbb34b  7      OPC=leaq_r64_m16    
  leaq 0x9dfd0(%rip), %rdi    #  18    0xbb352  7      OPC=leaq_r64_m16    
  callq .__assert_fail        #  19    0xbb359  5      OPC=callq_label     
  orb $0x1, 0xa0(%rdi)        #  20    0xbb35e  7      OPC=orb_m8_imm8     
  movq 0x8(%rsi), %rdx        #  21    0xbb365  4      OPC=movq_r64_m64    
  testq %rdx, %rdx            #  22    0xbb369  3      OPC=testq_r64_r64   
  je .L_bb377                 #  23    0xbb36c  2      OPC=je_label        
  movq 0x18(%rdx), %rdx       #  24    0xbb36e  4      OPC=movq_r64_m64    
  movl 0x38(%rdx), %ebp       #  25    0xbb372  3      OPC=movl_r32_m32    
  jmpq .L_bb37e               #  26    0xbb375  2      OPC=jmpq_label      
.L_bb377:                     #        0xbb377  0      OPC=<label>         
  movq 0x20(%rsi), %rdx       #  27    0xbb377  4      OPC=movq_r64_m64    
  movl 0x38(%rdx), %ebp       #  28    0xbb37b  3      OPC=movl_r32_m32    
.L_bb37e:                     #        0xbb37e  0      OPC=<label>         
  movq 0x10(%rsi), %rdx       #  29    0xbb37e  4      OPC=movq_r64_m64    
  testq %rdx, %rdx            #  30    0xbb382  3      OPC=testq_r64_r64   
  je .L_bb391                 #  31    0xbb385  2      OPC=je_label        
  movq 0x18(%rdx), %rdx       #  32    0xbb387  4      OPC=movq_r64_m64    
  movl 0x38(%rdx), %r12d      #  33    0xbb38b  4      OPC=movl_r32_m32    
  jmpq .L_bb399               #  34    0xbb38f  2      OPC=jmpq_label      
.L_bb391:                     #        0xbb391  0      OPC=<label>         
  movq 0x20(%rsi), %rdx       #  35    0xbb391  4      OPC=movq_r64_m64    
  movl 0x38(%rdx), %r12d      #  36    0xbb395  4      OPC=movl_r32_m32    
.L_bb399:                     #        0xbb399  0      OPC=<label>         
  testl %ebp, %ebp            #  37    0xbb399  2      OPC=testl_r32_r32   
  jns .L_bb3bc                #  38    0xbb39b  2      OPC=jns_label       
  leaq 0x9e0ae(%rip), %rcx    #  39    0xbb39d  7      OPC=leaq_r64_m16    
  movl $0x597, %edx           #  40    0xbb3a4  5      OPC=movl_r32_imm32  
  leaq 0x9df6f(%rip), %rsi    #  41    0xbb3a9  7      OPC=leaq_r64_m16    
  leaq 0x9df85(%rip), %rdi    #  42    0xbb3b0  7      OPC=leaq_r64_m16    
  callq .__assert_fail        #  43    0xbb3b7  5      OPC=callq_label     
.L_bb3bc:                     #        0xbb3bc  0      OPC=<label>         
  testl %r12d, %r12d          #  44    0xbb3bc  3      OPC=testl_r32_r32   
  jns .L_bb3e0                #  45    0xbb3bf  2      OPC=jns_label       
  leaq 0x9e08a(%rip), %rcx    #  46    0xbb3c1  7      OPC=leaq_r64_m16    
  movl $0x598, %edx           #  47    0xbb3c8  5      OPC=movl_r32_imm32  
  leaq 0x9df4b(%rip), %rsi    #  48    0xbb3cd  7      OPC=leaq_r64_m16    
  leaq 0x9df6b(%rip), %rdi    #  49    0xbb3d4  7      OPC=leaq_r64_m16    
  callq .__assert_fail        #  50    0xbb3db  5      OPC=callq_label     
.L_bb3e0:                     #        0xbb3e0  0      OPC=<label>         
  cltq                        #  51    0xbb3e0  2      OPC=cltq            
  shlq $0x4, %rax             #  52    0xbb3e2  4      OPC=shlq_r64_imm8   
  addq 0x28(%rdi), %rax       #  53    0xbb3e6  4      OPC=addq_r64_m64    
  movq %rax, %rbx             #  54    0xbb3ea  3      OPC=movq_r64_r64    
  movl $0x2, (%rax)           #  55    0xbb3ed  6      OPC=movl_m32_imm32  
  movl $0x8, %edi             #  56    0xbb3f3  5      OPC=movl_r32_imm32  
  callq .memalign_plt         #  57    0xbb3f8  5      OPC=callq_label     
  movq %rax, %rdx             #  58    0xbb3fd  3      OPC=movq_r64_r64    
  movq %rax, 0x8(%rbx)        #  59    0xbb400  4      OPC=movq_m64_r64    
  movl $0xc, %eax             #  60    0xbb404  5      OPC=movl_r32_imm32  
  testq %rdx, %rdx            #  61    0xbb409  3      OPC=testq_r64_r64   
  je .L_bb4f1                 #  62    0xbb40c  6      OPC=je_label_1      
  cmpl %r12d, %ebp            #  63    0xbb412  3      OPC=cmpl_r32_r32    
  jne .L_bb427                #  64    0xbb415  2      OPC=jne_label       
  movl $0x1, 0x4(%rbx)        #  65    0xbb417  7      OPC=movl_m32_imm32  
  movl %ebp, (%rdx)           #  66    0xbb41e  2      OPC=movl_m32_r32    
  movb $0x0, %al              #  67    0xbb420  2      OPC=movb_r8_imm8    
  jmpq .L_bb4f1               #  68    0xbb422  5      OPC=jmpq_label_1    
.L_bb427:                     #        0xbb427  0      OPC=<label>         
  movl $0x2, 0x4(%rbx)        #  69    0xbb427  7      OPC=movl_m32_imm32  
  cmpl %r12d, %ebp            #  70    0xbb42e  3      OPC=cmpl_r32_r32    
  jge .L_bb443                #  71    0xbb431  2      OPC=jge_label       
  movl %ebp, (%rdx)           #  72    0xbb433  2      OPC=movl_m32_r32    
  movl %r12d, 0x4(%rdx)       #  73    0xbb435  4      OPC=movl_m32_r32    
  movl $0x0, %eax             #  74    0xbb439  5      OPC=movl_r32_imm32  
  jmpq .L_bb4f1               #  75    0xbb43e  5      OPC=jmpq_label_1    
.L_bb443:                     #        0xbb443  0      OPC=<label>         
  movl %r12d, (%rdx)          #  76    0xbb443  3      OPC=movl_m32_r32    
  movl %ebp, 0x4(%rdx)        #  77    0xbb446  3      OPC=movl_m32_r32    
  movl $0x0, %eax             #  78    0xbb449  5      OPC=movl_r32_imm32  
  jmpq .L_bb4f1               #  79    0xbb44e  5      OPC=jmpq_label_1    
  movq 0x20(%rsi), %rdx       #  80    0xbb453  4      OPC=movq_r64_m64    
  movl 0x38(%rdx), %esi       #  81    0xbb457  3      OPC=movl_r32_m32    
  cltq                        #  82    0xbb45a  2      OPC=cltq            
  shlq $0x4, %rax             #  83    0xbb45c  4      OPC=shlq_r64_imm8   
  addq 0x28(%rdi), %rax       #  84    0xbb460  4      OPC=addq_r64_m64    
  movq %rax, %rdi             #  85    0xbb464  3      OPC=movq_r64_r64    
  callq .re_node_set_init_1   #  86    0xbb467  5      OPC=callq_label     
  jmpq .L_bb4f1               #  87    0xbb46c  5      OPC=jmpq_label_1    
  movslq %eax, %rdx           #  88    0xbb471  3      OPC=movslq_r64_r32  
  movq 0x20(%rsi), %rax       #  89    0xbb474  4      OPC=movq_r64_m64    
  movl 0x38(%rax), %ecx       #  90    0xbb478  3      OPC=movl_r32_m32    
  movq 0x18(%rdi), %rax       #  91    0xbb47b  4      OPC=movq_r64_m64    
  movl %ecx, (%rax,%rdx,4)    #  92    0xbb47f  3      OPC=movl_m32_r32    
  movl $0x0, %eax             #  93    0xbb482  5      OPC=movl_r32_imm32  
  cmpb $0x4, 0x30(%rsi)       #  94    0xbb487  4      OPC=cmpb_m8_imm8    
  jne .L_bb4f1                #  95    0xbb48b  2      OPC=jne_label       
  movq 0x18(%rdi), %rax       #  96    0xbb48d  4      OPC=movq_r64_m64    
  movl (%rax,%rdx,4), %esi    #  97    0xbb491  3      OPC=movl_r32_m32    
  movq %rdx, %rax             #  98    0xbb494  3      OPC=movq_r64_r64    
  shlq $0x4, %rax             #  99    0xbb497  4      OPC=shlq_r64_imm8   
  addq 0x28(%rdi), %rax       #  100   0xbb49b  4      OPC=addq_r64_m64    
  movq %rax, %rdi             #  101   0xbb49f  3      OPC=movq_r64_r64    
  callq .re_node_set_init_1   #  102   0xbb4a2  5      OPC=callq_label     
  jmpq .L_bb4f1               #  103   0xbb4a7  2      OPC=jmpq_label      
.L_bb4a9:                     #        0xbb4a9  0      OPC=<label>         
  testb $0x8, %r8b            #  104   0xbb4a9  4      OPC=testb_r8_imm8   
  je .L_bb4ce                 #  105   0xbb4ad  2      OPC=je_label        
  leaq 0x9df9c(%rip), %rcx    #  106   0xbb4af  7      OPC=leaq_r64_m16    
  movl $0x5aa, %edx           #  107   0xbb4b6  5      OPC=movl_r32_imm32  
  leaq 0x9de5d(%rip), %rsi    #  108   0xbb4bb  7      OPC=leaq_r64_m16    
  leaq 0xa19a7(%rip), %rdi    #  109   0xbb4c2  7      OPC=leaq_r64_m16    
  callq .__assert_fail        #  110   0xbb4c9  5      OPC=callq_label     
.L_bb4ce:                     #        0xbb4ce  0      OPC=<label>         
  movq 0x20(%rsi), %rdx       #  111   0xbb4ce  4      OPC=movq_r64_m64    
  movl 0x38(%rdx), %ecx       #  112   0xbb4d2  3      OPC=movl_r32_m32    
  cltq                        #  113   0xbb4d5  2      OPC=cltq            
  movq 0x18(%rdi), %rdx       #  114   0xbb4d7  4      OPC=movq_r64_m64    
  movl %ecx, (%rdx,%rax,4)    #  115   0xbb4db  3      OPC=movl_m32_r32    
  movl $0x0, %eax             #  116   0xbb4de  5      OPC=movl_r32_imm32  
  jmpq .L_bb4f1               #  117   0xbb4e3  2      OPC=jmpq_label      
  movl $0x0, %eax             #  118   0xbb4e5  5      OPC=movl_r32_imm32  
  jmpq .L_bb4f1               #  119   0xbb4ea  2      OPC=jmpq_label      
.L_bb4ec:                     #        0xbb4ec  0      OPC=<label>         
  movl $0x0, %eax             #  120   0xbb4ec  5      OPC=movl_r32_imm32  
.L_bb4f1:                     #        0xbb4f1  0      OPC=<label>         
  popq %rbx                   #  121   0xbb4f1  1      OPC=popq_r64_1      
  popq %rbp                   #  122   0xbb4f2  1      OPC=popq_r64_1      
  popq %r12                   #  123   0xbb4f3  2      OPC=popq_r64_1      
  retq                        #  124   0xbb4f5  1      OPC=retq            
                                                                           
.size link_nfa_nodes, .-link_nfa_nodes

