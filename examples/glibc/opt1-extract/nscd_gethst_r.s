  .text
  .globl nscd_gethst_r
  .type nscd_gethst_r, @function

#! file-offset 0x10ad17
#! rip-offset  0x10ad17
#! capacity    1928 bytes

# Text                           #  Line  RIP       Bytes  Opcode                
.nscd_gethst_r:                  #        0x10ad17  0      OPC=<label>           
  pushq %rbp                     #  1     0x10ad17  1      OPC=pushq_r64_1       
  movq %rsp, %rbp                #  2     0x10ad18  3      OPC=movq_r64_r64      
  pushq %r15                     #  3     0x10ad1b  2      OPC=pushq_r64_1       
  pushq %r14                     #  4     0x10ad1d  2      OPC=pushq_r64_1       
  pushq %r13                     #  5     0x10ad1f  2      OPC=pushq_r64_1       
  pushq %r12                     #  6     0x10ad21  2      OPC=pushq_r64_1       
  pushq %rbx                     #  7     0x10ad23  1      OPC=pushq_r64_1       
  subq $0xe8, %rsp               #  8     0x10ad24  7      OPC=subq_r64_imm32    
  movq %rdi, -0xc0(%rbp)         #  9     0x10ad2b  7      OPC=movq_m64_r64      
  movq %rsi, -0xc8(%rbp)         #  10    0x10ad32  7      OPC=movq_m64_r64      
  movl %edx, -0xac(%rbp)         #  11    0x10ad39  6      OPC=movl_m32_r32      
  movq %rcx, %r13                #  12    0x10ad3f  3      OPC=movq_r64_r64      
  movq %r8, -0xe0(%rbp)          #  13    0x10ad42  7      OPC=movq_m64_r64      
  movq %r9, -0xf0(%rbp)          #  14    0x10ad49  7      OPC=movq_m64_r64      
  movl 0x2860ee(%rip), %eax      #  15    0x10ad50  6      OPC=movl_r32_m32      
  testl %eax, %eax               #  16    0x10ad56  2      OPC=testl_r32_r32     
  js .L_10ad96                   #  17    0x10ad58  2      OPC=js_label          
  testl %eax, %eax               #  18    0x10ad5a  2      OPC=testl_r32_r32     
  jne .L_10ad79                  #  19    0x10ad5c  2      OPC=jne_label         
  leaq 0x4fb75(%rip), %rdi       #  20    0x10ad5e  7      OPC=leaq_r64_m16      
  callq .getenv                  #  21    0x10ad65  5      OPC=callq_label       
  cmpq $0x1, %rax                #  22    0x10ad6a  4      OPC=cmpq_r64_imm8     
  sbbl %eax, %eax                #  23    0x10ad6e  2      OPC=sbbl_r32_r32      
  orl $0x1, %eax                 #  24    0x10ad70  3      OPC=orl_r32_imm8      
  movl %eax, 0x2860cb(%rip)      #  25    0x10ad73  6      OPC=movl_m32_r32      
.L_10ad79:                       #        0x10ad79  0      OPC=<label>           
  cmpl $0x0, 0x2860c4(%rip)      #  26    0x10ad79  7      OPC=cmpl_m32_imm8     
  jle .L_10ad96                  #  27    0x10ad80  2      OPC=jle_label         
  movl $0x1, 0x2860b4(%rip)      #  28    0x10ad82  10     OPC=movl_m32_imm32    
  movl $0xffffffff, %eax         #  29    0x10ad8c  6      OPC=movl_r32_imm32_1  
  jmpq .L_10b490                 #  30    0x10ad92  5      OPC=jmpq_label_1      
.L_10ad96:                       #        0x10ad97  0      OPC=<label>           
  leaq -0x34(%rbp), %rcx         #  31    0x10ad97  4      OPC=leaq_r64_m16      
  leaq 0x2860af(%rip), %rdx      #  32    0x10ad9b  7      OPC=leaq_r64_m16      
  leaq 0x4e74e(%rip), %rsi       #  33    0x10ada2  7      OPC=leaq_r64_m16      
  movl $0xd, %edi                #  34    0x10ada9  5      OPC=movl_r32_imm32    
  callq .__nscd_get_map_ref      #  35    0x10adae  5      OPC=callq_label       
  movq %rax, %r15                #  36    0x10adb3  3      OPC=movq_r64_r64      
  movl $0x0, %r12d               #  37    0x10adb6  6      OPC=movl_r32_imm32    
  movq -0xe0(%rbp), %rdi         #  38    0x10adbc  7      OPC=movq_r64_m64      
  movq %rdi, %rax                #  39    0x10adc3  3      OPC=movq_r64_r64      
  negq %rax                      #  40    0x10adc6  3      OPC=negq_r64          
  andl $0x7, %eax                #  41    0x10adc9  3      OPC=andl_r32_imm8     
  movq %rax, %rbx                #  42    0x10adcc  3      OPC=movq_r64_r64      
  movq %rax, -0xf8(%rbp)         #  43    0x10adcf  7      OPC=movq_m64_r64      
  movq %rdi, %rax                #  44    0x10add6  3      OPC=movq_r64_r64      
  addq %rbx, %rax                #  45    0x10add9  3      OPC=addq_r64_r64      
  movq %rax, -0x100(%rbp)        #  46    0x10addc  7      OPC=movq_m64_r64      
  movl -0xac(%rbp), %eax         #  47    0x10ade3  6      OPC=movl_r32_m32      
  andl $0xfffffffd, %eax         #  48    0x10ade9  6      OPC=andl_r32_imm32    
  nop                            #  49    0x10adef  1      OPC=nop               
  nop                            #  50    0x10adf0  1      OPC=nop               
  nop                            #  51    0x10adf1  1      OPC=nop               
  movl %eax, -0xe4(%rbp)         #  52    0x10adf2  6      OPC=movl_m32_r32      
.L_10adf1:                       #        0x10adf8  0      OPC=<label>           
  cmpq $0xff, %r15               #  53    0x10adf8  4      OPC=cmpq_r64_imm8     
  je .L_10b442                   #  54    0x10adfc  6      OPC=je_label_1        
  movl $0x20, %r8d               #  55    0x10ae02  6      OPC=movl_r32_imm32    
  movq %r15, %rcx                #  56    0x10ae08  3      OPC=movq_r64_r64      
  movq -0xc8(%rbp), %rdx         #  57    0x10ae0b  7      OPC=movq_r64_m64      
  movq -0xc0(%rbp), %rsi         #  58    0x10ae12  7      OPC=movq_r64_m64      
  movl -0xac(%rbp), %edi         #  59    0x10ae19  6      OPC=movl_r32_m32      
  callq .__nscd_cache_search     #  60    0x10ae1f  5      OPC=callq_label       
  testq %rax, %rax               #  61    0x10ae24  3      OPC=testq_r64_r64     
  je .L_10b442                   #  62    0x10ae27  6      OPC=je_label_1        
  movq 0x18(%rax), %rdx          #  63    0x10ae2d  4      OPC=movq_r64_m64      
  movq %rdx, -0x60(%rbp)         #  64    0x10ae31  4      OPC=movq_m64_r64      
  movq 0x20(%rax), %rdx          #  65    0x10ae35  4      OPC=movq_r64_m64      
  movq %rdx, -0x58(%rbp)         #  66    0x10ae39  4      OPC=movq_m64_r64      
  movq 0x28(%rax), %rcx          #  67    0x10ae3d  4      OPC=movq_r64_m64      
  movq %rcx, -0x50(%rbp)         #  68    0x10ae41  4      OPC=movq_m64_r64      
  movq 0x30(%rax), %rsi          #  69    0x10ae45  4      OPC=movq_r64_m64      
  movq %rsi, -0x48(%rbp)         #  70    0x10ae49  4      OPC=movq_m64_r64      
  movl %edx, %edi                #  71    0x10ae4d  2      OPC=movl_r32_r32      
  shrq $0x20, %rdx               #  72    0x10ae4f  4      OPC=shrq_r64_imm8     
  movl 0x4(%rax), %r8d           #  73    0x10ae53  4      OPC=movl_r32_m32      
  movq (%r15), %rcx              #  74    0x10ae57  3      OPC=movq_r64_m64      
  movl 0x8(%rcx), %ecx           #  75    0x10ae5a  3      OPC=movl_r32_m32      
  movl $0xfffffffe, %r14d        #  76    0x10ae5d  7      OPC=movl_r32_imm32_1  
  cmpl -0x34(%rbp), %ecx         #  77    0x10ae64  3      OPC=cmpl_r32_m32      
  jne .L_10b3cd                  #  78    0x10ae67  6      OPC=jne_label_1       
  leaq 0x38(%rax), %rcx          #  79    0x10ae6d  4      OPC=leaq_r64_m16      
  movslq %edi, %rdi              #  80    0x10ae71  3      OPC=movslq_r64_r32    
  leaq (%rcx,%rdi,1), %rbx       #  81    0x10ae74  4      OPC=leaq_r64_m16      
  movq %rbx, -0xd0(%rbp)         #  82    0x10ae78  7      OPC=movq_m64_r64      
  movslq %edx, %rdx              #  83    0x10ae7f  3      OPC=movslq_r64_r32    
  leaq (%rbx,%rdx,4), %rdi       #  84    0x10ae82  4      OPC=leaq_r64_m16      
  movq %rdi, -0xa8(%rbp)         #  85    0x10ae86  7      OPC=movq_m64_r64      
  leal (,%rsi,4), %edx           #  86    0x10ae8d  7      OPC=leal_r32_m16      
  movslq %edx, %rbx              #  87    0x10ae94  3      OPC=movslq_r64_r32    
  movq %rbx, -0xb8(%rbp)         #  88    0x10ae97  7      OPC=movq_m64_r64      
  cmpl $0x4, -0xe4(%rbp)         #  89    0x10ae9e  7      OPC=cmpl_m32_imm8     
  je .L_10aec1                   #  90    0x10aea5  2      OPC=je_label          
  movq %rbx, %rdx                #  91    0x10aea7  3      OPC=movq_r64_r64      
  addq %rdi, %rdx                #  92    0x10aeaa  3      OPC=addq_r64_r64      
  cmpl $0x4, -0x4c(%rbp)         #  93    0x10aead  4      OPC=cmpl_m32_imm8     
  cmovneq %rdi, %rdx             #  94    0x10aeb1  4      OPC=cmovneq_r64_r64   
  movq %rdx, -0xa8(%rbp)         #  95    0x10aeb5  7      OPC=movq_m64_r64      
  shll $0x4, %esi                #  96    0x10aebc  3      OPC=shll_r32_imm8     
  movslq %esi, %rsi              #  97    0x10aebf  3      OPC=movslq_r64_r32    
  movq %rsi, -0xb8(%rbp)         #  98    0x10aec2  7      OPC=movq_m64_r64      
.L_10aec1:                       #        0x10aec9  0      OPC=<label>           
  movslq %r8d, %rdx              #  99    0x10aec9  3      OPC=movslq_r64_r32    
  leaq 0x18(%rax,%rdx,1), %rax   #  100   0x10aecc  5      OPC=leaq_r64_m16      
  movq %rax, %rdi                #  101   0x10aed1  3      OPC=movq_r64_r64      
  movq %rax, -0xd8(%rbp)         #  102   0x10aed4  7      OPC=movq_m64_r64      
  movq -0xa8(%rbp), %rax         #  103   0x10aedb  7      OPC=movq_r64_m64      
  addq -0xb8(%rbp), %rax         #  104   0x10aee2  7      OPC=addq_r64_m64      
  cmpq %rax, %rdi                #  105   0x10aee9  3      OPC=cmpq_r64_r64      
  jb .L_10b485                   #  106   0x10aeec  6      OPC=jb_label_1        
  testq %rcx, %rcx               #  107   0x10aef2  3      OPC=testq_r64_r64     
  jne .L_10af37                  #  108   0x10aef5  2      OPC=jne_label         
.L_10aeef:                       #        0x10aef7  0      OPC=<label>           
  leaq -0x60(%rbp), %rcx         #  109   0x10aef7  4      OPC=leaq_r64_m16      
  movl $0x20, %r8d               #  110   0x10aefb  6      OPC=movl_r32_imm32    
  movl -0xac(%rbp), %edx         #  111   0x10af01  6      OPC=movl_r32_m32      
  movq -0xc8(%rbp), %rsi         #  112   0x10af07  7      OPC=movq_r64_m64      
  movq -0xc0(%rbp), %rdi         #  113   0x10af0e  7      OPC=movq_r64_m64      
  callq .__nscd_open_socket      #  114   0x10af15  5      OPC=callq_label       
  movl %eax, -0xb0(%rbp)         #  115   0x10af1a  6      OPC=movl_m32_r32      
  movl $0x0, %ecx                #  116   0x10af20  5      OPC=movl_r32_imm32    
  cmpl $0xffffffff, %eax         #  117   0x10af25  6      OPC=cmpl_r32_imm32    
  nop                            #  118   0x10af2b  1      OPC=nop               
  nop                            #  119   0x10af2c  1      OPC=nop               
  nop                            #  120   0x10af2d  1      OPC=nop               
  jne .L_10af41                  #  121   0x10af2e  2      OPC=jne_label         
  movl $0x1, 0x285f14(%rip)      #  122   0x10af30  10     OPC=movl_m32_imm32    
  movl $0xffffffff, %r14d        #  123   0x10af3a  7      OPC=movl_r32_imm32_1  
  jmpq .L_10b3c7                 #  124   0x10af41  5      OPC=jmpq_label_1      
.L_10af37:                       #        0x10af46  0      OPC=<label>           
  movl $0xffffffff, -0xb0(%rbp)  #  125   0x10af46  10     OPC=movl_m32_imm32    
.L_10af41:                       #        0x10af50  0      OPC=<label>           
  movq 0x10(%rbp), %rax          #  126   0x10af50  4      OPC=movq_r64_m64      
  movq $0x0, (%rax)              #  127   0x10af54  7      OPC=movq_m64_imm32    
  movl -0x5c(%rbp), %eax         #  128   0x10af5b  3      OPC=movl_r32_m32      
  cmpl $0xffffffff, %eax         #  129   0x10af5e  6      OPC=cmpl_r32_imm32    
  nop                            #  130   0x10af64  1      OPC=nop               
  nop                            #  131   0x10af65  1      OPC=nop               
  nop                            #  132   0x10af66  1      OPC=nop               
  jne .L_10af69                  #  133   0x10af67  2      OPC=jne_label         
  movl $0x1, 0x285ee2(%rip)      #  134   0x10af69  10     OPC=movl_m32_imm32    
  movl $0xffffffff, %r14d        #  135   0x10af73  7      OPC=movl_r32_imm32_1  
  jmpq .L_10b3b2                 #  136   0x10af7a  5      OPC=jmpq_label_1      
.L_10af69:                       #        0x10af7f  0      OPC=<label>           
  cmpl $0x1, %eax                #  137   0x10af7f  3      OPC=cmpl_r32_imm8     
  jne .L_10b395                  #  138   0x10af82  6      OPC=jne_label_1       
  movslq -0x58(%rbp), %r8        #  139   0x10af88  4      OPC=movslq_r64_m32    
  movq -0xf8(%rbp), %rax         #  140   0x10af8c  7      OPC=movq_r64_m64      
  leaq (%rax,%r8,1), %r9         #  141   0x10af93  4      OPC=leaq_r64_m16      
  movq -0xe0(%rbp), %rax         #  142   0x10af97  7      OPC=movq_r64_m64      
  leaq (%rax,%r9,1), %rdx        #  143   0x10af9e  4      OPC=leaq_r64_m16      
  negq %rdx                      #  144   0x10afa2  3      OPC=negq_r64          
  andl $0x7, %edx                #  145   0x10afa5  3      OPC=andl_r32_imm8     
  movl -0x54(%rbp), %edi         #  146   0x10afa8  3      OPC=movl_r32_m32      
  movl -0x48(%rbp), %esi         #  147   0x10afab  3      OPC=movl_r32_m32      
  leal 0x2(%rdi,%rsi,1), %eax    #  148   0x10afae  4      OPC=leal_r32_m16      
  cltq                           #  149   0x10afb2  2      OPC=cltq              
  leaq (%r9,%rax,8), %rax        #  150   0x10afb4  4      OPC=leaq_r64_m16      
  leaq (%rax,%rdx,1), %r9        #  151   0x10afb8  4      OPC=leaq_r64_m16      
  cmpl $0x2, -0xac(%rbp)         #  152   0x10afbc  7      OPC=cmpl_m32_imm8     
  movl $0x10, %r10d              #  153   0x10afc3  6      OPC=movl_r32_imm32    
  movl $0x4, %eax                #  154   0x10afc9  5      OPC=movl_r32_imm32    
  cmovnel %r10d, %eax            #  155   0x10afce  4      OPC=cmovnel_r32_r32   
  imull %esi, %eax               #  156   0x10afd2  3      OPC=imull_r32_r32     
  cltq                           #  157   0x10afd5  2      OPC=cltq              
  addq %r9, %rax                 #  158   0x10afd7  3      OPC=addq_r64_r64      
  cmpq -0xf0(%rbp), %rax         #  159   0x10afda  7      OPC=cmpq_r64_m64      
  jbe .L_10aff0                  #  160   0x10afe1  2      OPC=jbe_label         
.L_10afcd:                       #        0x10afe3  0      OPC=<label>           
  movq 0x18(%rbp), %rax          #  161   0x10afe3  4      OPC=movq_r64_m64      
  movl $0xffffffff, (%rax)       #  162   0x10afe7  6      OPC=movl_m32_imm32    
  movq 0x27fea2(%rip), %rax      #  163   0x10afed  7      OPC=movq_r64_m64      
  movl $0x22, (%rax)             #  164   0x10aff4  6      OPC=movl_m32_imm32    
  nop                            #  165   0x10affa  1      OPC=nop               
  movl $0x22, %r14d              #  166   0x10affb  6      OPC=movl_r32_imm32    
  jmpq .L_10b3b2                 #  167   0x10b001  5      OPC=jmpq_label_1      
.L_10aff0:                       #        0x10b006  0      OPC=<label>           
  movq -0x100(%rbp), %rax        #  168   0x10b006  7      OPC=movq_r64_m64      
  movq %rax, 0x8(%r13)           #  169   0x10b00d  4      OPC=movq_m64_r64      
  addl $0x1, %edi                #  170   0x10b011  3      OPC=addl_r32_imm8     
  movslq %edi, %rdi              #  171   0x10b014  3      OPC=movslq_r64_r32    
  leaq (%rax,%rdi,8), %rax       #  172   0x10b017  4      OPC=leaq_r64_m16      
  movq %rax, 0x18(%r13)          #  173   0x10b01b  4      OPC=movq_m64_r64      
  addl $0x1, %esi                #  174   0x10b01f  3      OPC=addl_r32_imm8     
  movslq %esi, %rsi              #  175   0x10b022  3      OPC=movslq_r64_r32    
  leaq (%rax,%rsi,8), %rbx       #  176   0x10b025  4      OPC=leaq_r64_m16      
  movq %rbx, (%r13)              #  177   0x10b029  4      OPC=movq_m64_r64      
  addq %r8, %rdx                 #  178   0x10b02d  3      OPC=addq_r64_r64      
  addq %rdx, %rbx                #  179   0x10b030  3      OPC=addq_r64_r64      
  cmpl $0x4, -0xe4(%rbp)         #  180   0x10b033  7      OPC=cmpl_m32_imm8     
  sete %sil                      #  181   0x10b03a  4      OPC=sete_r8           
  jne .L_10b03c                  #  182   0x10b03e  2      OPC=jne_label         
  movl $0x2, 0x10(%r13)          #  183   0x10b040  8      OPC=movl_m32_imm32    
  movl $0x4, 0x14(%r13)          #  184   0x10b048  8      OPC=movl_m32_imm32    
  jmpq .L_10b04c                 #  185   0x10b050  2      OPC=jmpq_label        
.L_10b03c:                       #        0x10b052  0      OPC=<label>           
  movl $0xa, 0x10(%r13)          #  186   0x10b052  8      OPC=movl_m32_imm32    
  movl $0x10, 0x14(%r13)         #  187   0x10b05a  8      OPC=movl_m32_imm32    
.L_10b04c:                       #        0x10b062  0      OPC=<label>           
  cmpl $0x0, -0x48(%rbp)         #  188   0x10b062  4      OPC=cmpl_m32_imm8     
  jle .L_10b075                  #  189   0x10b066  2      OPC=jle_label         
  movl $0x0, %eax                #  190   0x10b068  5      OPC=movl_r32_imm32    
.L_10b057:                       #        0x10b06d  0      OPC=<label>           
  movq 0x18(%r13), %rdx          #  191   0x10b06d  4      OPC=movq_r64_m64      
  movq %rbx, (%rdx,%rax,8)       #  192   0x10b071  4      OPC=movq_m64_r64      
  movslq 0x14(%r13), %rdx        #  193   0x10b075  4      OPC=movslq_r64_m32    
  addq %rdx, %rbx                #  194   0x10b079  3      OPC=addq_r64_r64      
  addq $0x1, %rax                #  195   0x10b07c  4      OPC=addq_r64_imm8     
  movslq -0x48(%rbp), %rdx       #  196   0x10b080  4      OPC=movslq_r64_m32    
  cmpq %rax, %rdx                #  197   0x10b084  3      OPC=cmpq_r64_r64      
  jg .L_10b057                   #  198   0x10b087  2      OPC=jg_label          
  jmpq .L_10b07a                 #  199   0x10b089  2      OPC=jmpq_label        
.L_10b075:                       #        0x10b08b  0      OPC=<label>           
  movl $0x0, %eax                #  200   0x10b08b  5      OPC=movl_r32_imm32    
.L_10b07a:                       #        0x10b090  0      OPC=<label>           
  movq 0x18(%r13), %rdx          #  201   0x10b090  4      OPC=movq_r64_m64      
  movq $0x0, (%rdx,%rax,8)       #  202   0x10b094  8      OPC=movq_m64_imm32    
  testq %rcx, %rcx               #  203   0x10b09c  3      OPC=testq_r64_r64     
  jne .L_10b1c3                  #  204   0x10b09f  6      OPC=jne_label_1       
  movq (%r13), %rax              #  205   0x10b0a5  4      OPC=movq_r64_m64      
  movq %rax, -0xa0(%rbp)         #  206   0x10b0a9  7      OPC=movq_m64_r64      
  movslq -0x58(%rbp), %rcx       #  207   0x10b0b0  4      OPC=movslq_r64_m32    
  movq %rcx, -0x98(%rbp)         #  208   0x10b0b4  7      OPC=movq_m64_r64      
  movl -0x54(%rbp), %eax         #  209   0x10b0bb  3      OPC=movl_r32_m32      
  movl $0x1, %edx                #  210   0x10b0be  5      OPC=movl_r32_imm32    
  testl %eax, %eax               #  211   0x10b0c3  2      OPC=testl_r32_r32     
  jle .L_10b0e8                  #  212   0x10b0c5  2      OPC=jle_label         
  cltq                           #  213   0x10b0c7  2      OPC=cltq              
  shlq $0x2, %rax                #  214   0x10b0c9  4      OPC=shlq_r64_imm8     
  leaq 0x1e(%rax), %rdx          #  215   0x10b0cd  4      OPC=leaq_r64_m16      
  andq $0xf0, %rdx               #  216   0x10b0d1  4      OPC=andq_r64_imm8     
  subq %rdx, %rsp                #  217   0x10b0d5  3      OPC=subq_r64_r64      
  leaq 0xf(%rsp), %rdx           #  218   0x10b0d8  5      OPC=leaq_r64_m16      
  andq $0xf0, %rdx               #  219   0x10b0dd  4      OPC=andq_r64_imm8     
  movq %rdx, -0xd0(%rbp)         #  220   0x10b0e1  7      OPC=movq_m64_r64      
  movq %rdx, -0x90(%rbp)         #  221   0x10b0e8  7      OPC=movq_m64_r64      
  movq %rax, -0x88(%rbp)         #  222   0x10b0ef  7      OPC=movq_m64_r64      
  addq %rax, %rcx                #  223   0x10b0f6  3      OPC=addq_r64_r64      
  movl $0x2, %edx                #  224   0x10b0f9  5      OPC=movl_r32_imm32    
.L_10b0e8:                       #        0x10b0fe  0      OPC=<label>           
  testb %sil, %sil               #  225   0x10b0fe  3      OPC=testb_r8_r8       
  je .L_10b128                   #  226   0x10b101  2      OPC=je_label          
  movq 0x18(%r13), %rax          #  227   0x10b103  4      OPC=movq_r64_m64      
  movq (%rax), %rsi              #  228   0x10b107  3      OPC=movq_r64_m64      
  movslq %edx, %rax              #  229   0x10b10a  3      OPC=movslq_r64_r32    
  shlq $0x4, %rax                #  230   0x10b10d  4      OPC=shlq_r64_imm8     
  movq %rsi, -0xa0(%rbp,%rax,1)  #  231   0x10b111  8      OPC=movq_m64_r64      
  movl -0x48(%rbp), %edi         #  232   0x10b119  3      OPC=movl_r32_m32      
  leal (,%rdi,4), %esi           #  233   0x10b11c  7      OPC=leal_r32_m16      
  movslq %esi, %rsi              #  234   0x10b123  3      OPC=movslq_r64_r32    
  movq %rsi, -0x98(%rbp,%rax,1)  #  235   0x10b126  8      OPC=movq_m64_r64      
  leaq (%rcx,%rsi,1), %rax       #  236   0x10b12e  4      OPC=leaq_r64_m16      
  movq %rax, -0x108(%rbp)        #  237   0x10b132  7      OPC=movq_m64_r64      
  addl $0x1, %edx                #  238   0x10b139  3      OPC=addl_r32_imm8     
  jmpq .L_10b19c                 #  239   0x10b13c  2      OPC=jmpq_label        
.L_10b128:                       #        0x10b13e  0      OPC=<label>           
  cmpl $0x4, -0x4c(%rbp)         #  240   0x10b13e  4      OPC=cmpl_m32_imm8     
  jne .L_10b167                  #  241   0x10b142  2      OPC=jne_label         
  movl -0x48(%rbp), %eax         #  242   0x10b144  3      OPC=movl_r32_m32      
  shll $0x2, %eax                #  243   0x10b147  3      OPC=shll_r32_imm8     
  cltq                           #  244   0x10b14a  2      OPC=cltq              
  leaq 0x1e(%rax), %rsi          #  245   0x10b14c  4      OPC=leaq_r64_m16      
  andq $0xf0, %rsi               #  246   0x10b150  4      OPC=andq_r64_imm8     
  subq %rsi, %rsp                #  247   0x10b154  3      OPC=subq_r64_r64      
  leaq 0xf(%rsp), %rdi           #  248   0x10b157  5      OPC=leaq_r64_m16      
  andq $0xf0, %rdi               #  249   0x10b15c  4      OPC=andq_r64_imm8     
  movslq %edx, %rsi              #  250   0x10b160  3      OPC=movslq_r64_r32    
  shlq $0x4, %rsi                #  251   0x10b163  4      OPC=shlq_r64_imm8     
  movq %rdi, -0xa0(%rbp,%rsi,1)  #  252   0x10b167  8      OPC=movq_m64_r64      
  movq %rax, -0x98(%rbp,%rsi,1)  #  253   0x10b16f  8      OPC=movq_m64_r64      
  addq %rax, %rcx                #  254   0x10b177  3      OPC=addq_r64_r64      
  addl $0x1, %edx                #  255   0x10b17a  3      OPC=addl_r32_imm8     
.L_10b167:                       #        0x10b17d  0      OPC=<label>           
  movq 0x18(%r13), %rax          #  256   0x10b17d  4      OPC=movq_r64_m64      
  movq (%rax), %rsi              #  257   0x10b181  3      OPC=movq_r64_m64      
  movslq %edx, %rax              #  258   0x10b184  3      OPC=movslq_r64_r32    
  shlq $0x4, %rax                #  259   0x10b187  4      OPC=shlq_r64_imm8     
  movq %rsi, -0xa0(%rbp,%rax,1)  #  260   0x10b18b  8      OPC=movq_m64_r64      
  movl -0x48(%rbp), %esi         #  261   0x10b193  3      OPC=movl_r32_m32      
  shll $0x4, %esi                #  262   0x10b196  3      OPC=shll_r32_imm8     
  movslq %esi, %rsi              #  263   0x10b199  3      OPC=movslq_r64_r32    
  movq %rsi, -0x98(%rbp,%rax,1)  #  264   0x10b19c  8      OPC=movq_m64_r64      
  leaq (%rcx,%rsi,1), %rax       #  265   0x10b1a4  4      OPC=leaq_r64_m16      
  movq %rax, -0x108(%rbp)        #  266   0x10b1a8  7      OPC=movq_m64_r64      
  addl $0x1, %edx                #  267   0x10b1af  3      OPC=addl_r32_imm8     
.L_10b19c:                       #        0x10b1b2  0      OPC=<label>           
  leaq -0xa0(%rbp), %rsi         #  268   0x10b1b2  7      OPC=leaq_r64_m16      
  movl -0xb0(%rbp), %edi         #  269   0x10b1b9  6      OPC=movl_r32_m32      
  callq .__readvall              #  270   0x10b1bf  5      OPC=callq_label       
  movl $0xffffffff, %r14d        #  271   0x10b1c4  7      OPC=movl_r32_imm32_1  
  cmpq -0x108(%rbp), %rax        #  272   0x10b1cb  7      OPC=cmpq_r64_m64      
  jne .L_10b3b2                  #  273   0x10b1d2  6      OPC=jne_label_1       
  jmpq .L_10b1ed                 #  274   0x10b1d8  2      OPC=jmpq_label        
.L_10b1c3:                       #        0x10b1da  0      OPC=<label>           
  movq (%r13), %rdi              #  275   0x10b1da  4      OPC=movq_r64_m64      
  movslq -0x58(%rbp), %rdx       #  276   0x10b1de  4      OPC=movslq_r64_m32    
  movq %rcx, %rsi                #  277   0x10b1e2  3      OPC=movq_r64_r64      
  callq .__GI_memcpy             #  278   0x10b1e5  5      OPC=callq_label       
  movq 0x18(%r13), %rax          #  279   0x10b1ea  4      OPC=movq_r64_m64      
  movq (%rax), %rdi              #  280   0x10b1ee  3      OPC=movq_r64_m64      
  movq -0xb8(%rbp), %rdx         #  281   0x10b1f1  7      OPC=movq_r64_m64      
  movq -0xa8(%rbp), %rsi         #  282   0x10b1f8  7      OPC=movq_r64_m64      
  callq .__GI_memcpy             #  283   0x10b1ff  5      OPC=callq_label       
.L_10b1ed:                       #        0x10b204  0      OPC=<label>           
  cmpl $0x0, -0x54(%rbp)         #  284   0x10b204  4      OPC=cmpl_m32_imm8     
  jle .L_10b224                  #  285   0x10b208  2      OPC=jle_label         
  movl $0x0, %eax                #  286   0x10b20a  5      OPC=movl_r32_imm32    
  movl $0x0, %ecx                #  287   0x10b20f  5      OPC=movl_r32_imm32    
  movq -0xd0(%rbp), %rsi         #  288   0x10b214  7      OPC=movq_r64_m64      
.L_10b204:                       #        0x10b21b  0      OPC=<label>           
  movq 0x8(%r13), %rdx           #  289   0x10b21b  4      OPC=movq_r64_m64      
  movq %rbx, (%rdx,%rax,8)       #  290   0x10b21f  4      OPC=movq_m64_r64      
  movl (%rsi,%rax,4), %edx       #  291   0x10b223  3      OPC=movl_r32_m32      
  addq %rdx, %rbx                #  292   0x10b226  3      OPC=addq_r64_r64      
  addq %rdx, %rcx                #  293   0x10b229  3      OPC=addq_r64_r64      
  addq $0x1, %rax                #  294   0x10b22c  4      OPC=addq_r64_imm8     
  movslq -0x54(%rbp), %rdx       #  295   0x10b230  4      OPC=movslq_r64_m32    
  cmpq %rax, %rdx                #  296   0x10b234  3      OPC=cmpq_r64_r64      
  jg .L_10b204                   #  297   0x10b237  2      OPC=jg_label          
  jmpq .L_10b22e                 #  298   0x10b239  2      OPC=jmpq_label        
.L_10b224:                       #        0x10b23b  0      OPC=<label>           
  movl $0x0, %eax                #  299   0x10b23b  5      OPC=movl_r32_imm32    
  movl $0x0, %ecx                #  300   0x10b240  5      OPC=movl_r32_imm32    
.L_10b22e:                       #        0x10b245  0      OPC=<label>           
  movq 0x8(%r13), %rdx           #  301   0x10b245  4      OPC=movq_r64_m64      
  movq $0x0, (%rdx,%rax,8)       #  302   0x10b249  8      OPC=movq_m64_imm32    
  movq %rcx, %rax                #  303   0x10b251  3      OPC=movq_r64_r64      
  addq -0xb8(%rbp), %rax         #  304   0x10b254  7      OPC=addq_r64_m64      
  addq -0xa8(%rbp), %rax         #  305   0x10b25b  7      OPC=addq_r64_m64      
  cmpq %rax, -0xd8(%rbp)         #  306   0x10b262  7      OPC=cmpq_m64_r64      
  jae .L_10b282                  #  307   0x10b269  2      OPC=jae_label         
  movl $0xffffffff, %r14d        #  308   0x10b26b  7      OPC=movl_r32_imm32_1  
  cmpq $0x0, -0xa8(%rbp)         #  309   0x10b272  8      OPC=cmpq_m64_imm8     
  je .L_10b3b2                   #  310   0x10b27a  6      OPC=je_label_1        
  movq (%r15), %rax              #  311   0x10b280  3      OPC=movq_r64_m64      
  movl 0x8(%rax), %eax           #  312   0x10b283  3      OPC=movl_r32_m32      
  cmpl -0x34(%rbp), %eax         #  313   0x10b286  3      OPC=cmpl_r32_m32      
  sete %r14b                     #  314   0x10b289  4      OPC=sete_r8           
  movzbl %r14b, %r14d            #  315   0x10b28d  4      OPC=movzbl_r32_r8     
  subl $0x2, %r14d               #  316   0x10b291  4      OPC=subl_r32_imm8     
  jmpq .L_10b3b2                 #  317   0x10b295  5      OPC=jmpq_label_1      
.L_10b282:                       #        0x10b29a  0      OPC=<label>           
  movq -0xe0(%rbp), %rax         #  318   0x10b29a  7      OPC=movq_r64_m64      
  addq -0xf0(%rbp), %rax         #  319   0x10b2a1  7      OPC=addq_r64_m64      
  cmpq %rax, %rbx                #  320   0x10b2a8  3      OPC=cmpq_r64_r64      
  jbe .L_10b2bd                  #  321   0x10b2ab  2      OPC=jbe_label         
  cmpq $0x0, -0xa8(%rbp)         #  322   0x10b2ad  8      OPC=cmpq_m64_imm8     
  je .L_10afcd                   #  323   0x10b2b5  6      OPC=je_label_1        
  movq (%r15), %rax              #  324   0x10b2bb  3      OPC=movq_r64_m64      
  movl 0x8(%rax), %eax           #  325   0x10b2be  3      OPC=movl_r32_m32      
  movl $0xfffffffe, %r14d        #  326   0x10b2c1  7      OPC=movl_r32_imm32_1  
  cmpl -0x34(%rbp), %eax         #  327   0x10b2c8  3      OPC=cmpl_r32_m32      
  jne .L_10b3b2                  #  328   0x10b2cb  6      OPC=jne_label_1       
  jmpq .L_10afcd                 #  329   0x10b2d1  5      OPC=jmpq_label_1      
.L_10b2bd:                       #        0x10b2d6  0      OPC=<label>           
  cmpq $0x0, -0xa8(%rbp)         #  330   0x10b2d6  8      OPC=cmpq_m64_imm8     
  jne .L_10b305                  #  331   0x10b2de  2      OPC=jne_label         
  testq %rcx, %rcx               #  332   0x10b2e0  3      OPC=testq_r64_r64     
  je .L_10b2f3                   #  333   0x10b2e3  2      OPC=je_label          
  movq 0x8(%r13), %rax           #  334   0x10b2e5  4      OPC=movq_r64_m64      
  movq %rcx, %rbx                #  335   0x10b2e9  3      OPC=movq_r64_r64      
  movq %rcx, %rdx                #  336   0x10b2ec  3      OPC=movq_r64_r64      
  movq (%rax), %rsi              #  337   0x10b2ef  3      OPC=movq_r64_m64      
  movl -0xb0(%rbp), %edi         #  338   0x10b2f2  6      OPC=movl_r32_m32      
  callq .__readall               #  339   0x10b2f8  5      OPC=callq_label       
  movl $0xffffffff, %r14d        #  340   0x10b2fd  7      OPC=movl_r32_imm32_1  
  cmpq %rbx, %rax                #  341   0x10b304  3      OPC=cmpq_r64_r64      
  jne .L_10b3b2                  #  342   0x10b307  6      OPC=jne_label_1       
.L_10b2f3:                       #        0x10b30d  0      OPC=<label>           
  movq 0x10(%rbp), %rax          #  343   0x10b30d  4      OPC=movq_r64_m64      
  movq %r13, (%rax)              #  344   0x10b311  3      OPC=movq_m64_r64      
  movl $0x0, %r14d               #  345   0x10b314  6      OPC=movl_r32_imm32    
  jmpq .L_10b3b2                 #  346   0x10b31a  5      OPC=jmpq_label_1      
.L_10b305:                       #        0x10b31f  0      OPC=<label>           
  movq 0x8(%r13), %rax           #  347   0x10b31f  4      OPC=movq_r64_m64      
  movq (%rax), %rdi              #  348   0x10b323  3      OPC=movq_r64_m64      
  movq -0xa8(%rbp), %rsi         #  349   0x10b326  7      OPC=movq_r64_m64      
  addq -0xb8(%rbp), %rsi         #  350   0x10b32d  7      OPC=addq_r64_m64      
  movq %rcx, %rdx                #  351   0x10b334  3      OPC=movq_r64_r64      
  callq .__GI_memcpy             #  352   0x10b337  5      OPC=callq_label       
  movslq -0x58(%rbp), %rax       #  353   0x10b33c  4      OPC=movslq_r64_m32    
  movq (%r13), %rdx              #  354   0x10b340  4      OPC=movq_r64_m64      
  cmpb $0x0, -0x1(%rdx,%rax,1)   #  355   0x10b344  5      OPC=cmpb_m8_imm8      
  jne .L_10b37e                  #  356   0x10b349  2      OPC=jne_label         
  movslq -0x54(%rbp), %rsi       #  357   0x10b34b  4      OPC=movslq_r64_m32    
  testq %rsi, %rsi               #  358   0x10b34f  3      OPC=testq_r64_r64     
  jle .L_10b473                  #  359   0x10b352  6      OPC=jle_label_1       
  movq 0x8(%r13), %rdi           #  360   0x10b358  4      OPC=movq_r64_m64      
  movq -0xd0(%rbp), %r8          #  361   0x10b35c  7      OPC=movq_r64_m64      
  movl (%r8), %eax               #  362   0x10b363  3      OPC=movl_r32_m32      
  leal -0x1(%rax), %eax          #  363   0x10b366  3      OPC=leal_r32_m16      
  movq (%rdi), %rdx              #  364   0x10b369  3      OPC=movq_r64_m64      
  cmpb $0x0, (%rdx,%rax,1)       #  365   0x10b36c  4      OPC=cmpb_m8_imm8      
  jne .L_10b37e                  #  366   0x10b370  2      OPC=jne_label         
  movl $0x0, %eax                #  367   0x10b372  5      OPC=movl_r32_imm32    
  jmpq .L_10b370                 #  368   0x10b377  2      OPC=jmpq_label        
.L_10b35f:                       #        0x10b379  0      OPC=<label>           
  movl (%r8,%rax,4), %edx        #  369   0x10b379  4      OPC=movl_r32_m32      
  leal -0x1(%rdx), %edx          #  370   0x10b37d  3      OPC=leal_r32_m16      
  movq (%rdi,%rax,8), %rcx       #  371   0x10b380  4      OPC=movq_r64_m64      
  cmpb $0x0, (%rcx,%rdx,1)       #  372   0x10b384  4      OPC=cmpb_m8_imm8      
  jne .L_10b37e                  #  373   0x10b388  2      OPC=jne_label         
.L_10b370:                       #        0x10b38a  0      OPC=<label>           
  addq $0x1, %rax                #  374   0x10b38a  4      OPC=addq_r64_imm8     
  cmpq %rax, %rsi                #  375   0x10b38e  3      OPC=cmpq_r64_r64      
  jne .L_10b35f                  #  376   0x10b391  2      OPC=jne_label         
  jmpq .L_10b473                 #  377   0x10b393  5      OPC=jmpq_label_1      
.L_10b37e:                       #        0x10b398  0      OPC=<label>           
  movq (%r15), %rax              #  378   0x10b398  3      OPC=movq_r64_m64      
  movl 0x8(%rax), %eax           #  379   0x10b39b  3      OPC=movl_r32_m32      
  cmpl -0x34(%rbp), %eax         #  380   0x10b39e  3      OPC=cmpl_r32_m32      
  sete %r14b                     #  381   0x10b3a1  4      OPC=sete_r8           
  movzbl %r14b, %r14d            #  382   0x10b3a5  4      OPC=movzbl_r32_r8     
  subl $0x2, %r14d               #  383   0x10b3a9  4      OPC=subl_r32_imm8     
  jmpq .L_10b3b2                 #  384   0x10b3ad  2      OPC=jmpq_label        
.L_10b395:                       #        0x10b3af  0      OPC=<label>           
  movl -0x44(%rbp), %eax         #  385   0x10b3af  3      OPC=movl_r32_m32      
  movq 0x18(%rbp), %rbx          #  386   0x10b3b2  4      OPC=movq_r64_m64      
  movl %eax, (%rbx)              #  387   0x10b3b6  2      OPC=movl_m32_r32      
  movq 0x27fadb(%rip), %rax      #  388   0x10b3b8  7      OPC=movq_r64_m64      
  movl $0x0, (%rax)              #  389   0x10b3bf  6      OPC=movl_m32_imm32    
  nop                            #  390   0x10b3c5  1      OPC=nop               
  movl $0x0, %r14d               #  391   0x10b3c6  6      OPC=movl_r32_imm32    
.L_10b3b2:                       #        0x10b3cc  0      OPC=<label>           
  movl -0xb0(%rbp), %eax         #  392   0x10b3cc  6      OPC=movl_r32_m32      
  cmpl $0xffffffff, %eax         #  393   0x10b3d2  6      OPC=cmpl_r32_imm32    
  nop                            #  394   0x10b3d8  1      OPC=nop               
  nop                            #  395   0x10b3d9  1      OPC=nop               
  nop                            #  396   0x10b3da  1      OPC=nop               
  je .L_10b3c7                   #  397   0x10b3db  2      OPC=je_label          
  movslq %eax, %rdi              #  398   0x10b3dd  3      OPC=movslq_r64_r32    
  movl $0x3, %eax                #  399   0x10b3e0  5      OPC=movl_r32_imm32    
  syscall                        #  400   0x10b3e5  2      OPC=syscall           
.L_10b3c7:                       #        0x10b3e7  0      OPC=<label>           
  cmpq $0xff, %r15               #  401   0x10b3e7  4      OPC=cmpq_r64_imm8     
  je .L_10b43d                   #  402   0x10b3eb  2      OPC=je_label          
.L_10b3cd:                       #        0x10b3ed  0      OPC=<label>           
  movq (%r15), %rax              #  403   0x10b3ed  3      OPC=movq_r64_m64      
  movl 0x8(%rax), %eax           #  404   0x10b3f0  3      OPC=movl_r32_m32      
  cmpl -0x34(%rbp), %eax         #  405   0x10b3f3  3      OPC=cmpl_r32_m32      
  je .L_10b3e1                   #  406   0x10b3f6  2      OPC=je_label          
  movl %eax, -0x34(%rbp)         #  407   0x10b3f8  3      OPC=movl_m32_r32      
  testb $0x1, %al                #  408   0x10b3fb  2      OPC=testb_al_imm8     
  je .L_10b3fb                   #  409   0x10b3fd  2      OPC=je_label          
  jmpq .L_10b40b                 #  410   0x10b3ff  2      OPC=jmpq_label        
.L_10b3e1:                       #        0x10b401  0      OPC=<label>           
  movl $0xffffffff, %eax         #  411   0x10b401  6      OPC=movl_r32_imm32_1  
  lock                           #  412   0x10b407  1      OPC=lock              
  xaddl %eax, 0x18(%r15)         #  413   0x10b408  5      OPC=xaddl_m32_r32     
  nop                            #  414   0x10b40d  1      OPC=nop               
  cmpl $0x1, %eax                #  415   0x10b40e  3      OPC=cmpl_r32_imm8     
  jne .L_10b43d                  #  416   0x10b411  2      OPC=jne_label         
  movq %r15, %rdi                #  417   0x10b413  3      OPC=movq_r64_r64      
  callq .__nscd_unmap            #  418   0x10b416  5      OPC=callq_label       
  jmpq .L_10b43d                 #  419   0x10b41b  2      OPC=jmpq_label        
.L_10b3fb:                       #        0x10b41d  0      OPC=<label>           
  addl $0x1, %r12d               #  420   0x10b41d  4      OPC=addl_r32_imm8     
  cmpl $0xffffffff, %r14d        #  421   0x10b421  7      OPC=cmpl_r32_imm32    
  nop                            #  422   0x10b428  1      OPC=nop               
  nop                            #  423   0x10b429  1      OPC=nop               
  nop                            #  424   0x10b42a  1      OPC=nop               
  nop                            #  425   0x10b42b  1      OPC=nop               
  je .L_10b40b                   #  426   0x10b42c  2      OPC=je_label          
  cmpl $0x5, %r12d               #  427   0x10b42e  4      OPC=cmpl_r32_imm8     
  jne .L_10b433                  #  428   0x10b432  2      OPC=jne_label         
.L_10b40b:                       #        0x10b434  0      OPC=<label>           
  movl $0xffffffff, %eax         #  429   0x10b434  6      OPC=movl_r32_imm32_1  
  lock                           #  430   0x10b43a  1      OPC=lock              
  xaddl %eax, 0x18(%r15)         #  431   0x10b43b  5      OPC=xaddl_m32_r32     
  nop                            #  432   0x10b440  1      OPC=nop               
  cmpl $0x1, %eax                #  433   0x10b441  3      OPC=cmpl_r32_imm8     
  jne .L_10b42c                  #  434   0x10b444  2      OPC=jne_label         
  movq %r15, %rdi                #  435   0x10b446  3      OPC=movq_r64_r64      
  callq .__nscd_unmap            #  436   0x10b449  5      OPC=callq_label       
  movq $0xffffffff, %r15         #  437   0x10b44e  7      OPC=movq_r64_imm32    
  jmpq .L_10b433                 #  438   0x10b455  2      OPC=jmpq_label        
.L_10b42c:                       #        0x10b457  0      OPC=<label>           
  movq $0xffffffff, %r15         #  439   0x10b457  7      OPC=movq_r64_imm32    
.L_10b433:                       #        0x10b45e  0      OPC=<label>           
  cmpl $0xffffffff, %r14d        #  440   0x10b45e  7      OPC=cmpl_r32_imm32    
  nop                            #  441   0x10b465  1      OPC=nop               
  nop                            #  442   0x10b466  1      OPC=nop               
  nop                            #  443   0x10b467  1      OPC=nop               
  nop                            #  444   0x10b468  1      OPC=nop               
  jne .L_10adf1                  #  445   0x10b469  6      OPC=jne_label_1       
.L_10b43d:                       #        0x10b46f  0      OPC=<label>           
  movl %r14d, %eax               #  446   0x10b46f  3      OPC=movl_r32_r32      
  jmpq .L_10b490                 #  447   0x10b472  2      OPC=jmpq_label        
.L_10b442:                       #        0x10b474  0      OPC=<label>           
  movq $0xffffffff, -0xd8(%rbp)  #  448   0x10b474  11     OPC=movq_m64_imm32    
  movq $0x0, -0xb8(%rbp)         #  449   0x10b47f  11     OPC=movq_m64_imm32    
  movq $0x0, -0xa8(%rbp)         #  450   0x10b48a  11     OPC=movq_m64_imm32    
  movq $0x0, -0xd0(%rbp)         #  451   0x10b495  11     OPC=movq_m64_imm32    
  jmpq .L_10aeef                 #  452   0x10b4a0  5      OPC=jmpq_label_1      
.L_10b473:                       #        0x10b4a5  0      OPC=<label>           
  movq 0x10(%rbp), %rax          #  453   0x10b4a5  4      OPC=movq_r64_m64      
  movq %r13, (%rax)              #  454   0x10b4a9  3      OPC=movq_m64_r64      
  movl $0x0, %r14d               #  455   0x10b4ac  6      OPC=movl_r32_imm32    
  jmpq .L_10b3b2                 #  456   0x10b4b2  5      OPC=jmpq_label_1      
.L_10b485:                       #        0x10b4b7  0      OPC=<label>           
  movl $0xffffffff, %r14d        #  457   0x10b4b7  7      OPC=movl_r32_imm32_1  
  jmpq .L_10b3cd                 #  458   0x10b4be  5      OPC=jmpq_label_1      
.L_10b490:                       #        0x10b4c3  0      OPC=<label>           
  leaq -0x28(%rbp), %rsp         #  459   0x10b4c3  4      OPC=leaq_r64_m16      
  popq %rbx                      #  460   0x10b4c7  1      OPC=popq_r64_1        
  popq %r12                      #  461   0x10b4c8  2      OPC=popq_r64_1        
  popq %r13                      #  462   0x10b4ca  2      OPC=popq_r64_1        
  popq %r14                      #  463   0x10b4cc  2      OPC=popq_r64_1        
  popq %r15                      #  464   0x10b4ce  2      OPC=popq_r64_1        
  popq %rbp                      #  465   0x10b4d0  1      OPC=popq_r64_1        
  retq                           #  466   0x10b4d1  1      OPC=retq              
                                                                                 
.size nscd_gethst_r, .-nscd_gethst_r

