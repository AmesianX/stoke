  .text
  .globl xdr_callmsg_GLIBC_2_2_5
  .type xdr_callmsg_GLIBC_2_2_5, @function

#! file-offset 0xfeeec
#! rip-offset  0xfeeec
#! capacity    884 bytes

# Text                                #  Line  RIP      Bytes  Opcode              
.xdr_callmsg_GLIBC_2_2_5:             #        0xfeeec  0      OPC=<label>         
  pushq %r12                          #  1     0xfeeec  2      OPC=pushq_r64_1     
  pushq %rbp                          #  2     0xfeeee  1      OPC=pushq_r64_1     
  pushq %rbx                          #  3     0xfeeef  1      OPC=pushq_r64_1     
  movq %rdi, %rbp                     #  4     0xfeef0  3      OPC=movq_r64_r64    
  movq %rsi, %rbx                     #  5     0xfeef3  3      OPC=movq_r64_r64    
  cmpl $0x0, (%rdi)                   #  6     0xfeef6  3      OPC=cmpl_m32_imm8   
  jne .L_ff005                        #  7     0xfeef9  6      OPC=jne_label_1     
  movl 0x40(%rsi), %edx               #  8     0xfeeff  3      OPC=movl_r32_m32    
  movl $0x0, %eax                     #  9     0xfef02  5      OPC=movl_r32_imm32  
  cmpl $0x190, %edx                   #  10    0xfef07  6      OPC=cmpl_r32_imm32  
  ja .L_ff25b                         #  11    0xfef0d  6      OPC=ja_label_1      
  movl 0x58(%rsi), %ecx               #  12    0xfef13  3      OPC=movl_r32_m32    
  cmpl $0x190, %ecx                   #  13    0xfef16  6      OPC=cmpl_r32_imm32  
  ja .L_ff25b                         #  14    0xfef1c  6      OPC=ja_label_1      
  movq 0x8(%rdi), %rax                #  15    0xfef22  4      OPC=movq_r64_m64    
  addl $0x3, %edx                     #  16    0xfef26  3      OPC=addl_r32_imm8   
  andl $0xfffffffc, %edx              #  17    0xfef29  6      OPC=andl_r32_imm32  
  nop                                 #  18    0xfef2f  1      OPC=nop             
  nop                                 #  19    0xfef30  1      OPC=nop             
  nop                                 #  20    0xfef31  1      OPC=nop             
  addl $0x3, %ecx                     #  21    0xfef32  3      OPC=addl_r32_imm8   
  andl $0xfffffffc, %ecx              #  22    0xfef35  6      OPC=andl_r32_imm32  
  nop                                 #  23    0xfef3b  1      OPC=nop             
  nop                                 #  24    0xfef3c  1      OPC=nop             
  nop                                 #  25    0xfef3d  1      OPC=nop             
  leal 0x28(%rdx,%rcx,1), %esi        #  26    0xfef3e  4      OPC=leal_r32_m16    
  callq 0x30(%rax)                    #  27    0xfef42  3      OPC=callq_m64       
  movq %rax, %rdx                     #  28    0xfef45  3      OPC=movq_r64_r64    
  testq %rax, %rax                    #  29    0xfef48  3      OPC=testq_r64_r64   
  je .L_ff005                         #  30    0xfef4b  6      OPC=je_label_1      
  movq (%rbx), %rax                   #  31    0xfef51  3      OPC=movq_r64_m64    
  bswap %eax                          #  32    0xfef54  2      OPC=bswap_r32       
  movl %eax, (%rdx)                   #  33    0xfef56  2      OPC=movl_m32_r32    
  movl 0x8(%rbx), %eax                #  34    0xfef58  3      OPC=movl_r32_m32    
  bswap %eax                          #  35    0xfef5b  2      OPC=bswap_r32       
  movl %eax, 0x4(%rdx)                #  36    0xfef5d  3      OPC=movl_m32_r32    
  movl $0x0, %eax                     #  37    0xfef60  5      OPC=movl_r32_imm32  
  cmpl $0x0, 0x8(%rbx)                #  38    0xfef65  4      OPC=cmpl_m32_imm8   
  jne .L_ff25b                        #  39    0xfef69  6      OPC=jne_label_1     
  movq 0x10(%rbx), %rax               #  40    0xfef6f  4      OPC=movq_r64_m64    
  bswap %eax                          #  41    0xfef73  2      OPC=bswap_r32       
  movl %eax, 0x8(%rdx)                #  42    0xfef75  3      OPC=movl_m32_r32    
  movl $0x0, %eax                     #  43    0xfef78  5      OPC=movl_r32_imm32  
  cmpq $0x2, 0x10(%rbx)               #  44    0xfef7d  5      OPC=cmpq_m64_imm8   
  jne .L_ff25b                        #  45    0xfef82  6      OPC=jne_label_1     
  movq 0x18(%rbx), %rax               #  46    0xfef88  4      OPC=movq_r64_m64    
  bswap %eax                          #  47    0xfef8c  2      OPC=bswap_r32       
  movl %eax, 0xc(%rdx)                #  48    0xfef8e  3      OPC=movl_m32_r32    
  movq 0x20(%rbx), %rax               #  49    0xfef91  4      OPC=movq_r64_m64    
  bswap %eax                          #  50    0xfef95  2      OPC=bswap_r32       
  movl %eax, 0x10(%rdx)               #  51    0xfef97  3      OPC=movl_m32_r32    
  movq 0x28(%rbx), %rax               #  52    0xfef9a  4      OPC=movq_r64_m64    
  bswap %eax                          #  53    0xfef9e  2      OPC=bswap_r32       
  movl %eax, 0x14(%rdx)               #  54    0xfefa0  3      OPC=movl_m32_r32    
  movl 0x30(%rbx), %eax               #  55    0xfefa3  3      OPC=movl_r32_m32    
  bswap %eax                          #  56    0xfefa6  2      OPC=bswap_r32       
  movl %eax, 0x18(%rdx)               #  57    0xfefa8  3      OPC=movl_m32_r32    
  leaq 0x20(%rdx), %rbp               #  58    0xfefab  4      OPC=leaq_r64_m16    
  movl 0x40(%rbx), %eax               #  59    0xfefaf  3      OPC=movl_r32_m32    
  bswap %eax                          #  60    0xfefb2  2      OPC=bswap_r32       
  movl %eax, 0x1c(%rdx)               #  61    0xfefb4  3      OPC=movl_m32_r32    
  movl 0x40(%rbx), %eax               #  62    0xfefb7  3      OPC=movl_r32_m32    
  testl %eax, %eax                    #  63    0xfefba  2      OPC=testl_r32_r32   
  je .L_fefcc                         #  64    0xfefbc  2      OPC=je_label        
  movl %eax, %edx                     #  65    0xfefbe  2      OPC=movl_r32_r32    
  movq 0x38(%rbx), %rsi               #  66    0xfefc0  4      OPC=movq_r64_m64    
  movq %rbp, %rdi                     #  67    0xfefc4  3      OPC=movq_r64_r64    
  callq .__GI_memcpy                  #  68    0xfefc7  5      OPC=callq_label     
  movl 0x40(%rbx), %eax               #  69    0xfefcc  3      OPC=movl_r32_m32    
  addl $0x3, %eax                     #  70    0xfefcf  3      OPC=addl_r32_imm8   
  andl $0xfffffffc, %eax              #  71    0xfefd2  6      OPC=andl_r32_imm32  
  nop                                 #  72    0xfefd8  1      OPC=nop             
  nop                                 #  73    0xfefd9  1      OPC=nop             
  nop                                 #  74    0xfefda  1      OPC=nop             
  addq %rax, %rbp                     #  75    0xfefdb  3      OPC=addq_r64_r64    
.L_fefcc:                             #        0xfefde  0      OPC=<label>         
  movl 0x48(%rbx), %eax               #  76    0xfefde  3      OPC=movl_r32_m32    
  bswap %eax                          #  77    0xfefe1  2      OPC=bswap_r32       
  movl %eax, (%rbp)                   #  78    0xfefe3  3      OPC=movl_m32_r32    
  movl 0x58(%rbx), %eax               #  79    0xfefe6  3      OPC=movl_r32_m32    
  bswap %eax                          #  80    0xfefe9  2      OPC=bswap_r32       
  movl %eax, 0x4(%rbp)                #  81    0xfefeb  3      OPC=movl_m32_r32    
  movl 0x58(%rbx), %edx               #  82    0xfefee  3      OPC=movl_r32_m32    
  movl $0x1, %eax                     #  83    0xfeff1  5      OPC=movl_r32_imm32  
  testl %edx, %edx                    #  84    0xfeff6  2      OPC=testl_r32_r32   
  je .L_ff25b                         #  85    0xfeff8  6      OPC=je_label_1      
  leaq 0x8(%rbp), %rdi                #  86    0xfeffe  4      OPC=leaq_r64_m16    
  movl %edx, %edx                     #  87    0xff002  2      OPC=movl_r32_r32    
  movq 0x50(%rbx), %rsi               #  88    0xff004  4      OPC=movq_r64_m64    
  callq .__GI_memcpy                  #  89    0xff008  5      OPC=callq_label     
  movl $0x1, %eax                     #  90    0xff00d  5      OPC=movl_r32_imm32  
  jmpq .L_ff25b                       #  91    0xff012  5      OPC=jmpq_label_1    
.L_ff005:                             #        0xff017  0      OPC=<label>         
  cmpl $0x1, (%rbp)                   #  92    0xff017  4      OPC=cmpl_m32_imm8   
  jne .L_ff1c5                        #  93    0xff01b  6      OPC=jne_label_1     
  movq 0x8(%rbp), %rax                #  94    0xff021  4      OPC=movq_r64_m64    
  movl $0x20, %esi                    #  95    0xff025  5      OPC=movl_r32_imm32  
  movq %rbp, %rdi                     #  96    0xff02a  3      OPC=movq_r64_r64    
  callq 0x30(%rax)                    #  97    0xff02d  3      OPC=callq_m64       
  movq %rax, %rdx                     #  98    0xff030  3      OPC=movq_r64_r64    
  testq %rax, %rax                    #  99    0xff033  3      OPC=testq_r64_r64   
  je .L_ff1c5                         #  100   0xff036  6      OPC=je_label_1      
  movl (%rax), %eax                   #  101   0xff03c  2      OPC=movl_r32_m32    
  bswap %eax                          #  102   0xff03e  2      OPC=bswap_r32       
  movl %eax, %eax                     #  103   0xff040  2      OPC=movl_r32_r32    
  movq %rax, (%rbx)                   #  104   0xff042  3      OPC=movq_m64_r64    
  movl 0x4(%rdx), %ecx                #  105   0xff045  3      OPC=movl_r32_m32    
  bswap %ecx                          #  106   0xff048  2      OPC=bswap_r32       
  movl %ecx, 0x8(%rbx)                #  107   0xff04a  3      OPC=movl_m32_r32    
  movl $0x0, %eax                     #  108   0xff04d  5      OPC=movl_r32_imm32  
  testl %ecx, %ecx                    #  109   0xff052  2      OPC=testl_r32_r32   
  jne .L_ff25b                        #  110   0xff054  6      OPC=jne_label_1     
  movl 0x8(%rdx), %ecx                #  111   0xff05a  3      OPC=movl_r32_m32    
  bswap %ecx                          #  112   0xff05d  2      OPC=bswap_r32       
  movl %ecx, %ecx                     #  113   0xff05f  2      OPC=movl_r32_r32    
  movq %rcx, 0x10(%rbx)               #  114   0xff061  4      OPC=movq_m64_r64    
  cmpq $0x2, %rcx                     #  115   0xff065  4      OPC=cmpq_r64_imm8   
  jne .L_ff25b                        #  116   0xff069  6      OPC=jne_label_1     
  movl 0xc(%rdx), %eax                #  117   0xff06f  3      OPC=movl_r32_m32    
  bswap %eax                          #  118   0xff072  2      OPC=bswap_r32       
  movl %eax, %eax                     #  119   0xff074  2      OPC=movl_r32_r32    
  movq %rax, 0x18(%rbx)               #  120   0xff076  4      OPC=movq_m64_r64    
  movl 0x10(%rdx), %eax               #  121   0xff07a  3      OPC=movl_r32_m32    
  bswap %eax                          #  122   0xff07d  2      OPC=bswap_r32       
  movl %eax, %eax                     #  123   0xff07f  2      OPC=movl_r32_r32    
  movq %rax, 0x20(%rbx)               #  124   0xff081  4      OPC=movq_m64_r64    
  movl 0x14(%rdx), %eax               #  125   0xff085  3      OPC=movl_r32_m32    
  bswap %eax                          #  126   0xff088  2      OPC=bswap_r32       
  movl %eax, %eax                     #  127   0xff08a  2      OPC=movl_r32_r32    
  movq %rax, 0x28(%rbx)               #  128   0xff08c  4      OPC=movq_m64_r64    
  movl 0x18(%rdx), %eax               #  129   0xff090  3      OPC=movl_r32_m32    
  bswap %eax                          #  130   0xff093  2      OPC=bswap_r32       
  movl %eax, 0x30(%rbx)               #  131   0xff095  3      OPC=movl_m32_r32    
  movl 0x1c(%rdx), %r12d              #  132   0xff098  4      OPC=movl_r32_m32    
  bswap %r12d                         #  133   0xff09c  3      OPC=bswap_r32       
  movl %r12d, 0x40(%rbx)              #  134   0xff09f  4      OPC=movl_m32_r32    
  testl %r12d, %r12d                  #  135   0xff0a3  3      OPC=testl_r32_r32   
  je .L_ff0f9                         #  136   0xff0a6  2      OPC=je_label        
  movl $0x0, %eax                     #  137   0xff0a8  5      OPC=movl_r32_imm32  
  cmpl $0x190, %r12d                  #  138   0xff0ad  7      OPC=cmpl_r32_imm32  
  ja .L_ff25b                         #  139   0xff0b4  6      OPC=ja_label_1      
  cmpq $0x0, 0x38(%rbx)               #  140   0xff0ba  5      OPC=cmpq_m64_imm8   
  jne .L_ff0bb                        #  141   0xff0bf  2      OPC=jne_label       
  movl %r12d, %edi                    #  142   0xff0c1  3      OPC=movl_r32_r32    
  callq .memalign_plt                 #  143   0xff0c4  5      OPC=callq_label     
  movq %rax, 0x38(%rbx)               #  144   0xff0c9  4      OPC=movq_m64_r64    
.L_ff0bb:                             #        0xff0cd  0      OPC=<label>         
  movq 0x8(%rbp), %rax                #  145   0xff0cd  4      OPC=movq_r64_m64    
  leal 0x3(%r12), %esi                #  146   0xff0d1  5      OPC=leal_r32_m16    
  andl $0xfffffffc, %esi              #  147   0xff0d6  6      OPC=andl_r32_imm32  
  nop                                 #  148   0xff0dc  1      OPC=nop             
  nop                                 #  149   0xff0dd  1      OPC=nop             
  nop                                 #  150   0xff0de  1      OPC=nop             
  movq %rbp, %rdi                     #  151   0xff0df  3      OPC=movq_r64_r64    
  callq 0x30(%rax)                    #  152   0xff0e2  3      OPC=callq_m64       
  testq %rax, %rax                    #  153   0xff0e5  3      OPC=testq_r64_r64   
  jne .L_ff0ea                        #  154   0xff0e8  2      OPC=jne_label       
  movl 0x40(%rbx), %edx               #  155   0xff0ea  3      OPC=movl_r32_m32    
  movq 0x38(%rbx), %rsi               #  156   0xff0ed  4      OPC=movq_r64_m64    
  movq %rbp, %rdi                     #  157   0xff0f1  3      OPC=movq_r64_r64    
  callq .xdr_opaque_GLIBC_2_2_5       #  158   0xff0f4  5      OPC=callq_label     
  testl %eax, %eax                    #  159   0xff0f9  2      OPC=testl_r32_r32   
  jne .L_ff0f9                        #  160   0xff0fb  2      OPC=jne_label       
  jmpq .L_ff25b                       #  161   0xff0fd  5      OPC=jmpq_label_1    
.L_ff0ea:                             #        0xff102  0      OPC=<label>         
  movq 0x38(%rbx), %rdi               #  162   0xff102  4      OPC=movq_r64_m64    
  movl 0x40(%rbx), %edx               #  163   0xff106  3      OPC=movl_r32_m32    
  movq %rax, %rsi                     #  164   0xff109  3      OPC=movq_r64_r64    
  callq .__GI_memcpy                  #  165   0xff10c  5      OPC=callq_label     
.L_ff0f9:                             #        0xff111  0      OPC=<label>         
  movq 0x8(%rbp), %rax                #  166   0xff111  4      OPC=movq_r64_m64    
  movl $0x8, %esi                     #  167   0xff115  5      OPC=movl_r32_imm32  
  movq %rbp, %rdi                     #  168   0xff11a  3      OPC=movq_r64_r64    
  callq 0x30(%rax)                    #  169   0xff11d  3      OPC=callq_m64       
  testq %rax, %rax                    #  170   0xff120  3      OPC=testq_r64_r64   
  jne .L_ff136                        #  171   0xff123  2      OPC=jne_label       
  leaq 0x48(%rbx), %rsi               #  172   0xff125  4      OPC=leaq_r64_m16    
  movq %rbp, %rdi                     #  173   0xff129  3      OPC=movq_r64_r64    
  callq .xdr_enum_GLIBC_2_2_5         #  174   0xff12c  5      OPC=callq_label     
  testl %eax, %eax                    #  175   0xff131  2      OPC=testl_r32_r32   
  je .L_ff25b                         #  176   0xff133  6      OPC=je_label_1      
  leaq 0x58(%rbx), %rsi               #  177   0xff139  4      OPC=leaq_r64_m16    
  movq %rbp, %rdi                     #  178   0xff13d  3      OPC=movq_r64_r64    
  callq .xdr_u_int_GLIBC_2_2_5        #  179   0xff140  5      OPC=callq_label     
  testl %eax, %eax                    #  180   0xff145  2      OPC=testl_r32_r32   
  jne .L_ff145                        #  181   0xff147  2      OPC=jne_label       
  jmpq .L_ff25b                       #  182   0xff149  5      OPC=jmpq_label_1    
.L_ff136:                             #        0xff14e  0      OPC=<label>         
  movl (%rax), %edx                   #  183   0xff14e  2      OPC=movl_r32_m32    
  bswap %edx                          #  184   0xff150  2      OPC=bswap_r32       
  movl %edx, 0x48(%rbx)               #  185   0xff152  3      OPC=movl_m32_r32    
  movl 0x4(%rax), %eax                #  186   0xff155  3      OPC=movl_r32_m32    
  bswap %eax                          #  187   0xff158  2      OPC=bswap_r32       
  movl %eax, 0x58(%rbx)               #  188   0xff15a  3      OPC=movl_m32_r32    
.L_ff145:                             #        0xff15d  0      OPC=<label>         
  movl 0x58(%rbx), %r12d              #  189   0xff15d  4      OPC=movl_r32_m32    
  movl $0x1, %eax                     #  190   0xff161  5      OPC=movl_r32_imm32  
  testl %r12d, %r12d                  #  191   0xff166  3      OPC=testl_r32_r32   
  je .L_ff25b                         #  192   0xff169  6      OPC=je_label_1      
  movb $0x0, %al                      #  193   0xff16f  2      OPC=movb_r8_imm8    
  cmpl $0x190, %r12d                  #  194   0xff171  7      OPC=cmpl_r32_imm32  
  ja .L_ff25b                         #  195   0xff178  6      OPC=ja_label_1      
  cmpq $0x0, 0x50(%rbx)               #  196   0xff17e  5      OPC=cmpq_m64_imm8   
  jne .L_ff179                        #  197   0xff183  2      OPC=jne_label       
  movl %r12d, %edi                    #  198   0xff185  3      OPC=movl_r32_r32    
  callq .memalign_plt                 #  199   0xff188  5      OPC=callq_label     
  movq %rax, 0x50(%rbx)               #  200   0xff18d  4      OPC=movq_m64_r64    
.L_ff179:                             #        0xff191  0      OPC=<label>         
  movq 0x8(%rbp), %rax                #  201   0xff191  4      OPC=movq_r64_m64    
  leal 0x3(%r12), %esi                #  202   0xff195  5      OPC=leal_r32_m16    
  andl $0xfffffffc, %esi              #  203   0xff19a  6      OPC=andl_r32_imm32  
  nop                                 #  204   0xff1a0  1      OPC=nop             
  nop                                 #  205   0xff1a1  1      OPC=nop             
  nop                                 #  206   0xff1a2  1      OPC=nop             
  movq %rbp, %rdi                     #  207   0xff1a3  3      OPC=movq_r64_r64    
  callq 0x30(%rax)                    #  208   0xff1a6  3      OPC=callq_m64       
  testq %rax, %rax                    #  209   0xff1a9  3      OPC=testq_r64_r64   
  jne .L_ff1ac                        #  210   0xff1ac  2      OPC=jne_label       
  movl 0x58(%rbx), %edx               #  211   0xff1ae  3      OPC=movl_r32_m32    
  movq 0x50(%rbx), %rsi               #  212   0xff1b1  4      OPC=movq_r64_m64    
  movq %rbp, %rdi                     #  213   0xff1b5  3      OPC=movq_r64_r64    
  callq .xdr_opaque_GLIBC_2_2_5       #  214   0xff1b8  5      OPC=callq_label     
  testl %eax, %eax                    #  215   0xff1bd  2      OPC=testl_r32_r32   
  setne %al                           #  216   0xff1bf  3      OPC=setne_r8        
  movzbl %al, %eax                    #  217   0xff1c2  3      OPC=movzbl_r32_r8   
  jmpq .L_ff25b                       #  218   0xff1c5  5      OPC=jmpq_label_1    
.L_ff1ac:                             #        0xff1ca  0      OPC=<label>         
  movq 0x50(%rbx), %rdi               #  219   0xff1ca  4      OPC=movq_r64_m64    
  movl 0x58(%rbx), %edx               #  220   0xff1ce  3      OPC=movl_r32_m32    
  movq %rax, %rsi                     #  221   0xff1d1  3      OPC=movq_r64_r64    
  callq .__GI_memcpy                  #  222   0xff1d4  5      OPC=callq_label     
  movl $0x1, %eax                     #  223   0xff1d9  5      OPC=movl_r32_imm32  
  jmpq .L_ff25b                       #  224   0xff1de  5      OPC=jmpq_label_1    
.L_ff1c5:                             #        0xff1e3  0      OPC=<label>         
  movq %rbx, %rsi                     #  225   0xff1e3  3      OPC=movq_r64_r64    
  movq %rbp, %rdi                     #  226   0xff1e6  3      OPC=movq_r64_r64    
  callq .xdr_u_long_GLIBC_2_2_5       #  227   0xff1e9  5      OPC=callq_label     
  testl %eax, %eax                    #  228   0xff1ee  2      OPC=testl_r32_r32   
  je .L_ff25b                         #  229   0xff1f0  6      OPC=je_label_1      
  leaq 0x8(%rbx), %rsi                #  230   0xff1f6  4      OPC=leaq_r64_m16    
  movq %rbp, %rdi                     #  231   0xff1fa  3      OPC=movq_r64_r64    
  callq .xdr_enum_GLIBC_2_2_5         #  232   0xff1fd  5      OPC=callq_label     
  testl %eax, %eax                    #  233   0xff202  2      OPC=testl_r32_r32   
  je .L_ff25b                         #  234   0xff204  2      OPC=je_label        
  movl $0x0, %eax                     #  235   0xff206  5      OPC=movl_r32_imm32  
  cmpl $0x0, 0x8(%rbx)                #  236   0xff20b  4      OPC=cmpl_m32_imm8   
  jne .L_ff25b                        #  237   0xff20f  2      OPC=jne_label       
  leaq 0x10(%rbx), %rsi               #  238   0xff211  4      OPC=leaq_r64_m16    
  movq %rbp, %rdi                     #  239   0xff215  3      OPC=movq_r64_r64    
  callq .xdr_u_long_GLIBC_2_2_5       #  240   0xff218  5      OPC=callq_label     
  testl %eax, %eax                    #  241   0xff21d  2      OPC=testl_r32_r32   
  je .L_ff25b                         #  242   0xff21f  2      OPC=je_label        
  movl $0x0, %eax                     #  243   0xff221  5      OPC=movl_r32_imm32  
  cmpq $0x2, 0x10(%rbx)               #  244   0xff226  5      OPC=cmpq_m64_imm8   
  jne .L_ff25b                        #  245   0xff22b  2      OPC=jne_label       
  leaq 0x18(%rbx), %rsi               #  246   0xff22d  4      OPC=leaq_r64_m16    
  movq %rbp, %rdi                     #  247   0xff231  3      OPC=movq_r64_r64    
  callq .xdr_u_long_GLIBC_2_2_5       #  248   0xff234  5      OPC=callq_label     
  testl %eax, %eax                    #  249   0xff239  2      OPC=testl_r32_r32   
  je .L_ff25b                         #  250   0xff23b  2      OPC=je_label        
  leaq 0x20(%rbx), %rsi               #  251   0xff23d  4      OPC=leaq_r64_m16    
  movq %rbp, %rdi                     #  252   0xff241  3      OPC=movq_r64_r64    
  callq .xdr_u_long_GLIBC_2_2_5       #  253   0xff244  5      OPC=callq_label     
  testl %eax, %eax                    #  254   0xff249  2      OPC=testl_r32_r32   
  je .L_ff25b                         #  255   0xff24b  2      OPC=je_label        
  leaq 0x28(%rbx), %rsi               #  256   0xff24d  4      OPC=leaq_r64_m16    
  movq %rbp, %rdi                     #  257   0xff251  3      OPC=movq_r64_r64    
  callq .xdr_u_long_GLIBC_2_2_5       #  258   0xff254  5      OPC=callq_label     
  testl %eax, %eax                    #  259   0xff259  2      OPC=testl_r32_r32   
  je .L_ff25b                         #  260   0xff25b  2      OPC=je_label        
  leaq 0x30(%rbx), %rsi               #  261   0xff25d  4      OPC=leaq_r64_m16    
  movq %rbp, %rdi                     #  262   0xff261  3      OPC=movq_r64_r64    
  callq .xdr_opaque_auth_GLIBC_2_2_5  #  263   0xff264  5      OPC=callq_label     
  testl %eax, %eax                    #  264   0xff269  2      OPC=testl_r32_r32   
  je .L_ff25b                         #  265   0xff26b  2      OPC=je_label        
  leaq 0x48(%rbx), %rsi               #  266   0xff26d  4      OPC=leaq_r64_m16    
  movq %rbp, %rdi                     #  267   0xff271  3      OPC=movq_r64_r64    
  callq .xdr_opaque_auth_GLIBC_2_2_5  #  268   0xff274  5      OPC=callq_label     
.L_ff25b:                             #        0xff279  0      OPC=<label>         
  popq %rbx                           #  269   0xff279  1      OPC=popq_r64_1      
  popq %rbp                           #  270   0xff27a  1      OPC=popq_r64_1      
  popq %r12                           #  271   0xff27b  2      OPC=popq_r64_1      
  retq                                #  272   0xff27d  1      OPC=retq            
                                                                                   
.size xdr_callmsg_GLIBC_2_2_5, .-xdr_callmsg_GLIBC_2_2_5

