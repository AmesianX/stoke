  .text
  .globl _IO_str_seekoff
  .type _IO_str_seekoff, @function

#! file-offset 0x703ab
#! rip-offset  0x703ab
#! capacity    383 bytes

# Text                      #  Line  RIP      Bytes  Opcode              
._IO_str_seekoff:           #        0x703ab  0      OPC=<label>         
  pushq %r14                #  1     0x703ab  2      OPC=pushq_r64_1     
  pushq %r13                #  2     0x703ad  2      OPC=pushq_r64_1     
  pushq %r12                #  3     0x703af  2      OPC=pushq_r64_1     
  pushq %rbp                #  4     0x703b1  1      OPC=pushq_r64_1     
  pushq %rbx                #  5     0x703b2  1      OPC=pushq_r64_1     
  movq %rdi, %rbx           #  6     0x703b3  3      OPC=movq_r64_r64    
  movq %rsi, %r12           #  7     0x703b6  3      OPC=movq_r64_r64    
  movl %edx, %r13d          #  8     0x703b9  3      OPC=movl_r32_r32    
  movl %ecx, %ebp           #  9     0x703bc  2      OPC=movl_r32_r32    
  testl %ecx, %ecx          #  10    0x703be  2      OPC=testl_r32_r32   
  jne .L_704d8              #  11    0x703c0  6      OPC=jne_label_1     
  movl (%rdi), %eax         #  12    0x703c6  2      OPC=movl_r32_m32    
  testb $0x4, %ah           #  13    0x703c8  3      OPC=testb_rh_imm8   
  je .L_704cb               #  14    0x703cb  6      OPC=je_label_1      
  testb $0x8, %ah           #  15    0x703d1  3      OPC=testb_rh_imm8   
  jne .L_704f6              #  16    0x703d4  6      OPC=jne_label_1     
  jmpq .L_7050f             #  17    0x703da  5      OPC=jmpq_label_1    
.L_703df:                   #        0x703df  0      OPC=<label>         
  movq 0x8(%rbx), %rax      #  18    0x703df  4      OPC=movq_r64_m64    
  subq 0x18(%rbx), %rax     #  19    0x703e3  4      OPC=subq_r64_m64    
  jmpq .L_70521             #  20    0x703e7  5      OPC=jmpq_label_1    
.L_703ec:                   #        0x703ec  0      OPC=<label>         
  movq 0x28(%rbx), %rax     #  21    0x703ec  4      OPC=movq_r64_m64    
  subq 0x20(%rbx), %rax     #  22    0x703f0  4      OPC=subq_r64_m64    
  jmpq .L_70521             #  23    0x703f4  5      OPC=jmpq_label_1    
.L_703f9:                   #        0x703f9  0      OPC=<label>         
  cmpl $0x1, %r13d          #  24    0x703f9  4      OPC=cmpl_r32_imm8   
  je .L_7040d               #  25    0x703fd  2      OPC=je_label        
  leaq (%r12,%r14,1), %rax  #  26    0x703ff  4      OPC=leaq_r64_m16    
  cmpl $0x2, %r13d          #  27    0x70403  4      OPC=cmpl_r32_imm8   
  cmoveq %rax, %r12         #  28    0x70407  4      OPC=cmoveq_r64_r64  
  jmpq .L_70418             #  29    0x7040b  2      OPC=jmpq_label      
.L_7040d:                   #        0x7040d  0      OPC=<label>         
  movq 0x8(%rbx), %rax      #  30    0x7040d  4      OPC=movq_r64_m64    
  subq 0x18(%rbx), %rax     #  31    0x70411  4      OPC=subq_r64_m64    
  addq %rax, %r12           #  32    0x70415  3      OPC=addq_r64_r64    
.L_70418:                   #        0x70418  0      OPC=<label>         
  testq %r12, %r12          #  33    0x70418  3      OPC=testq_r64_r64   
  js .L_704a7               #  34    0x7041b  6      OPC=js_label_1      
  cmpq %r14, %r12           #  35    0x70421  3      OPC=cmpq_r64_r64    
  jle .L_7043a              #  36    0x70424  2      OPC=jle_label       
  movl $0x1, %edx           #  37    0x70426  5      OPC=movl_r32_imm32  
  movq %r12, %rsi           #  38    0x7042b  3      OPC=movq_r64_r64    
  movq %rbx, %rdi           #  39    0x7042e  3      OPC=movq_r64_r64    
  callq .enlarge_userbuf    #  40    0x70431  5      OPC=callq_label     
  testl %eax, %eax          #  41    0x70436  2      OPC=testl_r32_r32   
  jne .L_704b0              #  42    0x70438  2      OPC=jne_label       
.L_7043a:                   #        0x7043a  0      OPC=<label>         
  movq 0x18(%rbx), %rax     #  43    0x7043a  4      OPC=movq_r64_m64    
  leaq (%rax,%r12,1), %rdx  #  44    0x7043e  4      OPC=leaq_r64_m16    
  movq %rdx, 0x8(%rbx)      #  45    0x70442  4      OPC=movq_m64_r64    
  addq %r14, %rax           #  46    0x70446  3      OPC=addq_r64_r64    
  movq %rax, 0x10(%rbx)     #  47    0x70449  4      OPC=movq_m64_r64    
  movq %r12, %rax           #  48    0x7044d  3      OPC=movq_r64_r64    
.L_70450:                   #        0x70450  0      OPC=<label>         
  testb $0x2, %bpl          #  49    0x70450  4      OPC=testb_r8_imm8   
  je .L_70521               #  50    0x70454  6      OPC=je_label_1      
  cmpl $0x1, %r13d          #  51    0x7045a  4      OPC=cmpl_r32_imm8   
  je .L_7046e               #  52    0x7045e  2      OPC=je_label        
  leaq (%r12,%r14,1), %rax  #  53    0x70460  4      OPC=leaq_r64_m16    
  cmpl $0x2, %r13d          #  54    0x70464  4      OPC=cmpl_r32_imm8   
  cmoveq %rax, %r12         #  55    0x70468  4      OPC=cmoveq_r64_r64  
  jmpq .L_70479             #  56    0x7046c  2      OPC=jmpq_label      
.L_7046e:                   #        0x7046e  0      OPC=<label>         
  movq 0x28(%rbx), %rax     #  57    0x7046e  4      OPC=movq_r64_m64    
  subq 0x20(%rbx), %rax     #  58    0x70472  4      OPC=subq_r64_m64    
  addq %rax, %r12           #  59    0x70476  3      OPC=addq_r64_r64    
.L_70479:                   #        0x70479  0      OPC=<label>         
  testq %r12, %r12          #  60    0x70479  3      OPC=testq_r64_r64   
  js .L_704b9               #  61    0x7047c  2      OPC=js_label        
  cmpq %r14, %r12           #  62    0x7047e  3      OPC=cmpq_r64_r64    
  jle .L_70497              #  63    0x70481  2      OPC=jle_label       
  movl $0x0, %edx           #  64    0x70483  5      OPC=movl_r32_imm32  
  movq %r12, %rsi           #  65    0x70488  3      OPC=movq_r64_r64    
  movq %rbx, %rdi           #  66    0x7048b  3      OPC=movq_r64_r64    
  callq .enlarge_userbuf    #  67    0x7048e  5      OPC=callq_label     
  testl %eax, %eax          #  68    0x70493  2      OPC=testl_r32_r32   
  jne .L_704c2              #  69    0x70495  2      OPC=jne_label       
.L_70497:                   #        0x70497  0      OPC=<label>         
  movq %r12, %rax           #  70    0x70497  3      OPC=movq_r64_r64    
  addq 0x20(%rbx), %rax     #  71    0x7049a  4      OPC=addq_r64_m64    
  movq %rax, 0x28(%rbx)     #  72    0x7049e  4      OPC=movq_m64_r64    
  movq %r12, %rax           #  73    0x704a2  3      OPC=movq_r64_r64    
  jmpq .L_70521             #  74    0x704a5  2      OPC=jmpq_label      
.L_704a7:                   #        0x704a7  0      OPC=<label>         
  movq $0xffffffff, %rax    #  75    0x704a7  7      OPC=movq_r64_imm32  
  jmpq .L_70521             #  76    0x704ae  2      OPC=jmpq_label      
.L_704b0:                   #        0x704b0  0      OPC=<label>         
  movq $0xffffffff, %rax    #  77    0x704b0  7      OPC=movq_r64_imm32  
  jmpq .L_70521             #  78    0x704b7  2      OPC=jmpq_label      
.L_704b9:                   #        0x704b9  0      OPC=<label>         
  movq $0xffffffff, %rax    #  79    0x704b9  7      OPC=movq_r64_imm32  
  jmpq .L_70521             #  80    0x704c0  2      OPC=jmpq_label      
.L_704c2:                   #        0x704c2  0      OPC=<label>         
  movq $0xffffffff, %rax    #  81    0x704c2  7      OPC=movq_r64_imm32  
  jmpq .L_70521             #  82    0x704c9  2      OPC=jmpq_label      
.L_704cb:                   #        0x704cb  0      OPC=<label>         
  testb $0x8, %al           #  83    0x704cb  2      OPC=testb_al_imm8   
  jne .L_703df              #  84    0x704cd  6      OPC=jne_label_1     
  jmpq .L_703ec             #  85    0x704d3  5      OPC=jmpq_label_1    
.L_704d8:                   #        0x704d8  0      OPC=<label>         
  callq ._IO_str_count      #  86    0x704d8  5      OPC=callq_label     
  movq %rax, %r14           #  87    0x704dd  3      OPC=movq_r64_r64    
  movq $0xffffffff, %rax    #  88    0x704e0  7      OPC=movq_r64_imm32  
  testb $0x1, %bpl          #  89    0x704e7  4      OPC=testb_r8_imm8   
  je .L_70450               #  90    0x704eb  6      OPC=je_label_1      
  jmpq .L_703f9             #  91    0x704f1  5      OPC=jmpq_label_1    
.L_704f6:                   #        0x704f6  0      OPC=<label>         
  callq ._IO_str_count      #  92    0x704f6  5      OPC=callq_label     
  movq %rax, %r14           #  93    0x704fb  3      OPC=movq_r64_r64    
  movl $0x2, %ebp           #  94    0x704fe  5      OPC=movl_r32_imm32  
  movq $0xffffffff, %rax    #  95    0x70503  7      OPC=movq_r64_imm32  
  jmpq .L_70450             #  96    0x7050a  5      OPC=jmpq_label_1    
.L_7050f:                   #        0x7050f  0      OPC=<label>         
  callq ._IO_str_count      #  97    0x7050f  5      OPC=callq_label     
  movq %rax, %r14           #  98    0x70514  3      OPC=movq_r64_r64    
  movl $0x1, %ebp           #  99    0x70517  5      OPC=movl_r32_imm32  
  jmpq .L_703f9             #  100   0x7051c  5      OPC=jmpq_label_1    
.L_70521:                   #        0x70521  0      OPC=<label>         
  popq %rbx                 #  101   0x70521  1      OPC=popq_r64_1      
  popq %rbp                 #  102   0x70522  1      OPC=popq_r64_1      
  popq %r12                 #  103   0x70523  2      OPC=popq_r64_1      
  popq %r13                 #  104   0x70525  2      OPC=popq_r64_1      
  popq %r14                 #  105   0x70527  2      OPC=popq_r64_1      
  retq                      #  106   0x70529  1      OPC=retq            
                                                                         
.size _IO_str_seekoff, .-_IO_str_seekoff

