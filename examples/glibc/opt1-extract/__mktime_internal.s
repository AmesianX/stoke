  .text
  .globl __mktime_internal
  .type __mktime_internal, @function

#! file-offset 0xa243e
#! rip-offset  0xa243e
#! capacity    1286 bytes

# Text                            #  Line  RIP      Bytes  Opcode               
.__mktime_internal:               #        0xa243e  0      OPC=<label>          
  pushq %r15                      #  1     0xa243e  2      OPC=pushq_r64_1      
  pushq %r14                      #  2     0xa2440  2      OPC=pushq_r64_1      
  pushq %r13                      #  3     0xa2442  2      OPC=pushq_r64_1      
  pushq %r12                      #  4     0xa2444  2      OPC=pushq_r64_1      
  pushq %rbp                      #  5     0xa2446  1      OPC=pushq_r64_1      
  pushq %rbx                      #  6     0xa2447  1      OPC=pushq_r64_1      
  subq $0xf8, %rsp                #  7     0xa2448  7      OPC=subq_r64_imm32   
  movq %rdi, %r14                 #  8     0xa244f  3      OPC=movq_r64_r64     
  movq %rsi, 0x8(%rsp)            #  9     0xa2452  5      OPC=movq_m64_r64     
  movq %rdx, 0x20(%rsp)           #  10    0xa2457  5      OPC=movq_m64_r64     
  movl (%rdi), %eax               #  11    0xa245c  2      OPC=movl_r32_m32     
  movl %eax, 0x48(%rsp)           #  12    0xa245e  4      OPC=movl_m32_r32     
  movl 0x4(%rdi), %eax            #  13    0xa2462  3      OPC=movl_r32_m32     
  movl %eax, (%rsp)               #  14    0xa2465  3      OPC=movl_m32_r32     
  movl 0x8(%rdi), %eax            #  15    0xa2468  3      OPC=movl_r32_m32     
  movl %eax, 0x4(%rsp)            #  16    0xa246b  4      OPC=movl_m32_r32     
  movl 0xc(%rdi), %esi            #  17    0xa246f  3      OPC=movl_r32_m32     
  movl 0x10(%rdi), %edi           #  18    0xa2472  3      OPC=movl_r32_m32     
  movl 0x20(%r14), %eax           #  19    0xa2475  4      OPC=movl_r32_m32     
  movl %eax, 0x1c(%rsp)           #  20    0xa2479  4      OPC=movl_m32_r32     
  movl $0x2aaaaaab, %edx          #  21    0xa247d  5      OPC=movl_r32_imm32   
  movl %edi, %eax                 #  22    0xa2482  2      OPC=movl_r32_r32     
  imull %edx                      #  23    0xa2484  2      OPC=imull_r32        
  sarl $0x1, %edx                 #  24    0xa2486  2      OPC=sarl_r32_one     
  movl %edi, %eax                 #  25    0xa2488  2      OPC=movl_r32_r32     
  sarl $0x1f, %eax                #  26    0xa248a  3      OPC=sarl_r32_imm8    
  movl %edx, %ecx                 #  27    0xa248d  2      OPC=movl_r32_r32     
  subl %eax, %ecx                 #  28    0xa248f  2      OPC=subl_r32_r32     
  movl %ecx, %ebp                 #  29    0xa2491  2      OPC=movl_r32_r32     
  leal (%rcx,%rcx,2), %eax        #  30    0xa2493  3      OPC=leal_r32_m16     
  shll $0x2, %eax                 #  31    0xa2496  3      OPC=shll_r32_imm8    
  subl %eax, %edi                 #  32    0xa2499  2      OPC=subl_r32_r32     
  movl %edi, %ecx                 #  33    0xa249b  2      OPC=movl_r32_r32     
  shrl $0x1f, %edi                #  34    0xa249d  3      OPC=shrl_r32_imm8    
  subl %edi, %ebp                 #  35    0xa24a0  2      OPC=subl_r32_r32     
  movslq %ebp, %rax               #  36    0xa24a2  3      OPC=movslq_r64_r32   
  movslq 0x14(%r14), %rbp         #  37    0xa24a5  4      OPC=movslq_r64_m32   
  addq %rax, %rbp                 #  38    0xa24a9  3      OPC=addq_r64_r64     
  movl $0x0, %eax                 #  39    0xa24ac  5      OPC=movl_r32_imm32   
  testb $0x3, %bpl                #  40    0xa24b1  4      OPC=testb_r8_imm8    
  jne .L_a251c                    #  41    0xa24b5  2      OPC=jne_label        
  movq $0xa3d70a3d70a3d70b, %rdx  #  42    0xa24b7  10     OPC=movq_r64_imm64   
  movq %rbp, %rax                 #  43    0xa24c1  3      OPC=movq_r64_r64     
  imulq %rdx                      #  44    0xa24c4  3      OPC=imulq_r64        
  addq %rbp, %rdx                 #  45    0xa24c7  3      OPC=addq_r64_r64     
  sarq $0x6, %rdx                 #  46    0xa24ca  4      OPC=sarq_r64_imm8    
  movq %rbp, %rax                 #  47    0xa24ce  3      OPC=movq_r64_r64     
  sarq $0x3f, %rax                #  48    0xa24d1  4      OPC=sarq_r64_imm8    
  subq %rax, %rdx                 #  49    0xa24d5  3      OPC=subq_r64_r64     
  leaq (%rdx,%rdx,4), %rax        #  50    0xa24d8  4      OPC=leaq_r64_m16     
  leaq (%rax,%rax,4), %rdx        #  51    0xa24dc  4      OPC=leaq_r64_m16     
  shlq $0x2, %rdx                 #  52    0xa24e0  4      OPC=shlq_r64_imm8    
  movl $0x1, %eax                 #  53    0xa24e4  5      OPC=movl_r32_imm32   
  cmpq %rdx, %rbp                 #  54    0xa24e9  3      OPC=cmpq_r64_r64     
  jne .L_a251c                    #  55    0xa24ec  2      OPC=jne_label        
  movq $0xa3d70a3d70a3d70b, %rdx  #  56    0xa24ee  10     OPC=movq_r64_imm64   
  movq %rbp, %rax                 #  57    0xa24f8  3      OPC=movq_r64_r64     
  imulq %rdx                      #  58    0xa24fb  3      OPC=imulq_r64        
  addq %rbp, %rdx                 #  59    0xa24fe  3      OPC=addq_r64_r64     
  sarq $0x6, %rdx                 #  60    0xa2501  4      OPC=sarq_r64_imm8    
  movq %rbp, %rax                 #  61    0xa2505  3      OPC=movq_r64_r64     
  sarq $0x3f, %rax                #  62    0xa2508  4      OPC=sarq_r64_imm8    
  subq %rax, %rdx                 #  63    0xa250c  3      OPC=subq_r64_r64     
  andl $0x3, %edx                 #  64    0xa250f  3      OPC=andl_r32_imm8    
  cmpq $0x1, %rdx                 #  65    0xa2512  4      OPC=cmpq_r64_imm8    
  sete %al                        #  66    0xa2516  3      OPC=sete_r8          
  movzbl %al, %eax                #  67    0xa2519  3      OPC=movzbl_r32_r8    
.L_a251c:                         #        0xa251c  0      OPC=<label>          
  leal (%rdi,%rdi,1), %edx        #  68    0xa251c  3      OPC=leal_r32_m16     
  addl %edx, %edi                 #  69    0xa251f  2      OPC=addl_r32_r32     
  leal (%rcx,%rdi,4), %edx        #  70    0xa2521  3      OPC=leal_r32_m16     
  movslq %edx, %rdx               #  71    0xa2524  3      OPC=movslq_r64_r32   
  cltq                            #  72    0xa2527  2      OPC=cltq             
  leaq (%rax,%rax,1), %rcx        #  73    0xa2529  4      OPC=leaq_r64_m16     
  addq %rax, %rcx                 #  74    0xa252d  3      OPC=addq_r64_r64     
  leaq (%rax,%rcx,4), %rax        #  75    0xa2530  4      OPC=leaq_r64_m16     
  addq %rdx, %rax                 #  76    0xa2534  3      OPC=addq_r64_r64     
  leaq 0xb1482(%rip), %rdx        #  77    0xa2537  7      OPC=leaq_r64_m16     
  movzwl (%rdx,%rax,2), %eax      #  78    0xa253e  4      OPC=movzwl_r32_m16   
  subl $0x1, %eax                 #  79    0xa2542  3      OPC=subl_r32_imm8    
  cltq                            #  80    0xa2545  2      OPC=cltq             
  movslq %esi, %rsi               #  81    0xa2547  3      OPC=movslq_r64_r32   
  addq %rsi, %rax                 #  82    0xa254a  3      OPC=addq_r64_r64     
  movq %rax, %rsi                 #  83    0xa254d  3      OPC=movq_r64_r64     
  movq %rax, 0x10(%rsp)           #  84    0xa2550  5      OPC=movq_m64_r64     
  movq 0x20(%rsp), %rax           #  85    0xa2555  5      OPC=movq_r64_m64     
  movq (%rax), %rax               #  86    0xa255a  3      OPC=movq_r64_m64     
  movq %rax, %rbx                 #  87    0xa255d  3      OPC=movq_r64_r64     
  movq %rax, 0x28(%rsp)           #  88    0xa2560  5      OPC=movq_m64_r64     
  movl 0x48(%rsp), %edi           #  89    0xa2565  4      OPC=movl_r32_m32     
  testl %edi, %edi                #  90    0xa2569  2      OPC=testl_r32_r32    
  movl $0x0, %eax                 #  91    0xa256b  5      OPC=movl_r32_imm32   
  cmovnsl %edi, %eax              #  92    0xa2570  3      OPC=cmovnsl_r32_r32  
  cmpl $0x3b, %eax                #  93    0xa2573  3      OPC=cmpl_r32_imm8    
  movl $0x3b, %edx                #  94    0xa2576  5      OPC=movl_r32_imm32   
  cmovlel %eax, %edx              #  95    0xa257b  3      OPC=cmovlel_r32_r32  
  movl %edx, 0x18(%rsp)           #  96    0xa257e  4      OPC=movl_m32_r32     
  movl %ebx, %eax                 #  97    0xa2582  2      OPC=movl_r32_r32     
  negl %eax                       #  98    0xa2584  2      OPC=negl_r32         
  pushq %rax                      #  99    0xa2586  1      OPC=pushq_r64_1      
  pushq $0x0                      #  100   0xa2587  2      OPC=pushq_imm8       
  pushq $0x0                      #  101   0xa2589  2      OPC=pushq_imm8       
  pushq $0x0                      #  102   0xa258b  2      OPC=pushq_imm8       
  movl $0x46, %r9d                #  103   0xa258d  6      OPC=movl_r32_imm32   
  movl %edx, %r8d                 #  104   0xa2593  3      OPC=movl_r32_r32     
  movl 0x20(%rsp), %ecx           #  105   0xa2596  4      OPC=movl_r32_m32     
  movl 0x24(%rsp), %edx           #  106   0xa259a  4      OPC=movl_r32_m32     
  movq %rbp, %rdi                 #  107   0xa259e  3      OPC=movq_r64_r64     
  callq .ydhms_diff               #  108   0xa25a1  5      OPC=callq_label      
  addq $0x20, %rsp                #  109   0xa25a6  4      OPC=addq_r64_imm8    
  movq %rax, 0x30(%rsp)           #  110   0xa25aa  5      OPC=movq_m64_r64     
  movq %rax, 0xe0(%rsp)           #  111   0xa25af  8      OPC=movq_m64_r64     
  movq %rax, 0xe8(%rsp)           #  112   0xa25b7  8      OPC=movq_m64_r64     
  movq %rax, %r12                 #  113   0xa25bf  3      OPC=movq_r64_r64     
  movl $0x6, %ebx                 #  114   0xa25c2  5      OPC=movl_r32_imm32   
  movl $0x0, %eax                 #  115   0xa25c7  5      OPC=movl_r32_imm32   
  leaq 0xa0(%rsp), %r15           #  116   0xa25cc  8      OPC=leaq_r64_m16     
  leaq 0xe8(%rsp), %r13           #  117   0xa25d4  8      OPC=leaq_r64_m16     
  movq %r14, 0x38(%rsp)           #  118   0xa25dc  5      OPC=movq_m64_r64     
  movl %eax, %r14d                #  119   0xa25e1  3      OPC=movl_r32_r32     
  jmpq .L_a266d                   #  120   0xa25e4  5      OPC=jmpq_label_1     
.L_a25e9:                         #        0xa25e9  0      OPC=<label>          
  cmpq %rdx, %r12                 #  121   0xa25e9  3      OPC=cmpq_r64_r64     
  jne .L_a263c                    #  122   0xa25ec  2      OPC=jne_label        
  cmpq 0xe0(%rsp), %r12           #  123   0xa25ee  8      OPC=cmpq_r64_m64     
  je .L_a263c                     #  124   0xa25f6  2      OPC=je_label         
  movl 0xc0(%rsp), %ecx           #  125   0xa25f8  7      OPC=movl_r32_m32     
  testl %ecx, %ecx                #  126   0xa25ff  2      OPC=testl_r32_r32    
  js .L_a27a3                     #  127   0xa2601  6      OPC=js_label_1       
  cmpl $0x0, 0x1c(%rsp)           #  128   0xa2607  5      OPC=cmpl_m32_imm8    
  jns .L_a2625                    #  129   0xa260c  2      OPC=jns_label        
  testl %ecx, %ecx                #  130   0xa260e  2      OPC=testl_r32_r32    
  setne %cl                       #  131   0xa2610  3      OPC=setne_r8         
  movzbl %cl, %ecx                #  132   0xa2613  3      OPC=movzbl_r32_r8    
  cmpl %ecx, %r14d                #  133   0xa2616  3      OPC=cmpl_r32_r32     
  jg .L_a263c                     #  134   0xa2619  2      OPC=jg_label         
  movq 0x38(%rsp), %r14           #  135   0xa261b  5      OPC=movq_r64_m64     
  jmpq .L_a27af                   #  136   0xa2620  5      OPC=jmpq_label_1     
.L_a2625:                         #        0xa2625  0      OPC=<label>          
  cmpl $0x0, 0x1c(%rsp)           #  137   0xa2625  5      OPC=cmpl_m32_imm8    
  setne %sil                      #  138   0xa262a  4      OPC=setne_r8         
  testl %ecx, %ecx                #  139   0xa262e  2      OPC=testl_r32_r32    
  setne %cl                       #  140   0xa2630  3      OPC=setne_r8         
  cmpb %cl, %sil                  #  141   0xa2633  3      OPC=cmpb_r8_r8       
  jne .L_a27aa                    #  142   0xa2636  6      OPC=jne_label_1      
.L_a263c:                         #        0xa263c  0      OPC=<label>          
  subl $0x1, %ebx                 #  143   0xa263c  3      OPC=subl_r32_imm8    
  je .L_a28c3                     #  144   0xa263f  6      OPC=je_label_1       
  movq 0xe0(%rsp), %r12           #  145   0xa2645  8      OPC=movq_r64_m64     
  movq %rdx, 0xe0(%rsp)           #  146   0xa264d  8      OPC=movq_m64_r64     
  movq %rax, 0xe8(%rsp)           #  147   0xa2655  8      OPC=movq_m64_r64     
  cmpl $0x0, 0xc0(%rsp)           #  148   0xa265d  8      OPC=cmpl_m32_imm8    
  setne %r14b                     #  149   0xa2665  4      OPC=setne_r8         
  movzbl %r14b, %r14d             #  150   0xa2669  4      OPC=movzbl_r32_r8    
.L_a266d:                         #        0xa266d  0      OPC=<label>          
  movq %r15, %rdx                 #  151   0xa266d  3      OPC=movq_r64_r64     
  movq %r13, %rsi                 #  152   0xa2670  3      OPC=movq_r64_r64     
  movq 0x8(%rsp), %rdi            #  153   0xa2673  5      OPC=movq_r64_m64     
  callq .ranged_convert           #  154   0xa2678  5      OPC=callq_label      
  subq $0x8, %rsp                 #  155   0xa267d  4      OPC=subq_r64_imm8    
  pushq %rax                      #  156   0xa2681  1      OPC=pushq_r64_1      
  movq %r13, %r9                  #  157   0xa2682  3      OPC=movq_r64_r64     
  movl 0x28(%rsp), %r8d           #  158   0xa2685  5      OPC=movl_r32_m32     
  movl 0x10(%rsp), %ecx           #  159   0xa268a  4      OPC=movl_r32_m32     
  movl 0x14(%rsp), %edx           #  160   0xa268e  4      OPC=movl_r32_m32     
  movq 0x20(%rsp), %rsi           #  161   0xa2692  5      OPC=movq_r64_m64     
  movq %rbp, %rdi                 #  162   0xa2697  3      OPC=movq_r64_r64     
  callq .guess_time_tm            #  163   0xa269a  5      OPC=callq_label      
  addq $0x10, %rsp                #  164   0xa269f  4      OPC=addq_r64_imm8    
  movq 0xe8(%rsp), %rdx           #  165   0xa26a3  8      OPC=movq_r64_m64     
  cmpq %rax, %rdx                 #  166   0xa26ab  3      OPC=cmpq_r64_r64     
  jne .L_a25e9                    #  167   0xa26ae  6      OPC=jne_label_1      
  movq 0x38(%rsp), %r14           #  168   0xa26b4  5      OPC=movq_r64_m64     
  movl 0xc0(%rsp), %edx           #  169   0xa26b9  7      OPC=movl_r32_m32     
  movl 0x1c(%rsp), %ebx           #  170   0xa26c0  4      OPC=movl_r32_m32     
  testl %ebx, %ebx                #  171   0xa26c4  2      OPC=testl_r32_r32    
  sete 0x1c(%rsp)                 #  172   0xa26c6  5      OPC=sete_m8          
  movzbl 0x1c(%rsp), %esi         #  173   0xa26cb  5      OPC=movzbl_r32_m8    
  testl %edx, %edx                #  174   0xa26d0  2      OPC=testl_r32_r32    
  sete %al                        #  175   0xa26d2  3      OPC=sete_r8          
  cmpb %al, %sil                  #  176   0xa26d5  3      OPC=cmpb_r8_r8       
  je .L_a27af                     #  177   0xa26d8  6      OPC=je_label_1       
  movl %ebx, %eax                 #  178   0xa26de  2      OPC=movl_r32_r32     
  notl %eax                       #  179   0xa26e0  2      OPC=notl_r32         
  shrl $0x1f, %eax                #  180   0xa26e2  3      OPC=shrl_r32_imm8    
  movb %al, 0x4f(%rsp)            #  181   0xa26e5  4      OPC=movb_m8_r8       
  testb %al, %al                  #  182   0xa26e9  2      OPC=testb_r8_r8      
  je .L_a27af                     #  183   0xa26eb  6      OPC=je_label_1       
  movl $0x92c70, %r13d            #  184   0xa26f1  6      OPC=movl_r32_imm32   
  testl %edx, %edx                #  185   0xa26f7  2      OPC=testl_r32_r32    
  jns .L_a277a                    #  186   0xa26f9  2      OPC=jns_label        
  jmpq .L_a27af                   #  187   0xa26fb  5      OPC=jmpq_label_1     
.L_a2700:                         #        0xa2700  0      OPC=<label>          
  movq 0xe8(%rsp), %rdx           #  188   0xa2700  8      OPC=movq_r64_m64     
  movslq %ebx, %rax               #  189   0xa2708  3      OPC=movslq_r64_r32   
  addq %rdx, %rax                 #  190   0xa270b  3      OPC=addq_r64_r64     
  cmpq %rax, %rdx                 #  191   0xa270e  3      OPC=cmpq_r64_r64     
  setle %cl                       #  192   0xa2711  3      OPC=setle_r8         
  movl %ebx, %edx                 #  193   0xa2714  2      OPC=movl_r32_r32     
  shrl $0x1f, %edx                #  194   0xa2716  3      OPC=shrl_r32_imm8    
  cmpb %dl, %cl                   #  195   0xa2719  2      OPC=cmpb_r8_r8       
  je .L_a275f                     #  196   0xa271b  2      OPC=je_label         
  movq %rax, 0x58(%rsp)           #  197   0xa271d  5      OPC=movq_m64_r64     
  movq 0x38(%rsp), %rdx           #  198   0xa2722  5      OPC=movq_r64_m64     
  movq 0x40(%rsp), %rsi           #  199   0xa2727  5      OPC=movq_r64_m64     
  movq 0x8(%rsp), %rdi            #  200   0xa272c  5      OPC=movq_r64_m64     
  callq .ranged_convert           #  201   0xa2731  5      OPC=callq_label      
  movl 0x80(%rsp), %eax           #  202   0xa2736  7      OPC=movl_r32_m32     
  testl %eax, %eax                #  203   0xa273d  2      OPC=testl_r32_r32    
  sete %dl                        #  204   0xa273f  3      OPC=sete_r8          
  cmpb %dl, 0x1c(%rsp)            #  205   0xa2742  4      OPC=cmpb_m8_r8       
  je .L_a28de                     #  206   0xa2746  6      OPC=je_label_1       
  cmpb $0x0, 0x4f(%rsp)           #  207   0xa274c  5      OPC=cmpb_m8_imm8     
  je .L_a28de                     #  208   0xa2751  6      OPC=je_label_1       
  testl %eax, %eax                #  209   0xa2757  2      OPC=testl_r32_r32    
  js .L_a28de                     #  210   0xa2759  6      OPC=js_label_1       
.L_a275f:                         #        0xa275f  0      OPC=<label>          
  addl %r15d, %ebx                #  211   0xa275f  3      OPC=addl_r32_r32     
  subl $0x1, %r12d                #  212   0xa2762  4      OPC=subl_r32_imm8    
  jne .L_a2700                    #  213   0xa2766  2      OPC=jne_label        
  addl $0x92c70, %r13d            #  214   0xa2768  7      OPC=addl_r32_imm32   
  cmpl $0x100dc400, %r13d         #  215   0xa276f  7      OPC=cmpl_r32_imm32   
  jne .L_a278e                    #  216   0xa2776  2      OPC=jne_label        
  jmpq .L_a27af                   #  217   0xa2778  2      OPC=jmpq_label       
.L_a277a:                         #        0xa277a  0      OPC=<label>          
  leaq 0x60(%rsp), %rax           #  218   0xa277a  5      OPC=leaq_r64_m16     
  movq %rax, 0x38(%rsp)           #  219   0xa277f  5      OPC=movq_m64_r64     
  leaq 0x58(%rsp), %rax           #  220   0xa2784  5      OPC=leaq_r64_m16     
  movq %rax, 0x40(%rsp)           #  221   0xa2789  5      OPC=movq_m64_r64     
.L_a278e:                         #        0xa278e  0      OPC=<label>          
  leal (%r13,%r13,1), %r15d       #  222   0xa278e  5      OPC=leal_r32_m16     
  movl %r13d, %ebx                #  223   0xa2793  3      OPC=movl_r32_r32     
  negl %ebx                       #  224   0xa2796  2      OPC=negl_r32         
  movl $0x2, %r12d                #  225   0xa2798  6      OPC=movl_r32_imm32   
  jmpq .L_a2700                   #  226   0xa279e  5      OPC=jmpq_label_1     
.L_a27a3:                         #        0xa27a3  0      OPC=<label>          
  movq 0x38(%rsp), %r14           #  227   0xa27a3  5      OPC=movq_r64_m64     
  jmpq .L_a27af                   #  228   0xa27a8  2      OPC=jmpq_label       
.L_a27aa:                         #        0xa27aa  0      OPC=<label>          
  movq 0x38(%rsp), %r14           #  229   0xa27aa  5      OPC=movq_r64_m64     
.L_a27af:                         #        0xa27af  0      OPC=<label>          
  movq 0xe8(%rsp), %rcx           #  230   0xa27af  8      OPC=movq_r64_m64     
  movq 0x28(%rsp), %rax           #  231   0xa27b7  5      OPC=movq_r64_m64     
  addq %rcx, %rax                 #  232   0xa27bc  3      OPC=addq_r64_r64     
  subq 0x30(%rsp), %rax           #  233   0xa27bf  5      OPC=subq_r64_m64     
  movq 0x20(%rsp), %rbx           #  234   0xa27c4  5      OPC=movq_r64_m64     
  movq %rax, (%rbx)               #  235   0xa27c9  3      OPC=movq_m64_r64     
  movl 0xa0(%rsp), %edx           #  236   0xa27cc  7      OPC=movl_r32_m32     
  movl 0x48(%rsp), %ebx           #  237   0xa27d3  4      OPC=movl_r32_m32     
  cmpl %edx, %ebx                 #  238   0xa27d7  2      OPC=cmpl_r32_r32     
  je .L_a2866                     #  239   0xa27d9  6      OPC=je_label_1       
  movl 0x18(%rsp), %esi           #  240   0xa27df  4      OPC=movl_r32_m32     
  testl %esi, %esi                #  241   0xa27e3  2      OPC=testl_r32_r32    
  sete %al                        #  242   0xa27e5  3      OPC=sete_r8          
  cmpl $0x3c, %edx                #  243   0xa27e8  3      OPC=cmpl_r32_imm8    
  sete %dl                        #  244   0xa27eb  3      OPC=sete_r8          
  movzbl %dl, %edx                #  245   0xa27ee  3      OPC=movzbl_r32_r8    
  andl %edx, %eax                 #  246   0xa27f1  2      OPC=andl_r32_r32     
  subl %esi, %eax                 #  247   0xa27f3  2      OPC=subl_r32_r32     
  movslq %ebx, %rdx               #  248   0xa27f5  3      OPC=movslq_r64_r32   
  addq %rcx, %rdx                 #  249   0xa27f8  3      OPC=addq_r64_r64     
  cmpq %rdx, %rcx                 #  250   0xa27fb  3      OPC=cmpq_r64_r64     
  setle %sil                      #  251   0xa27fe  4      OPC=setle_r8         
  movl %ebx, %ecx                 #  252   0xa2802  2      OPC=movl_r32_r32     
  shrl $0x1f, %ecx                #  253   0xa2804  3      OPC=shrl_r32_imm8    
  cmpb %cl, %sil                  #  254   0xa2807  3      OPC=cmpb_r8_r8       
  je .L_a28cc                     #  255   0xa280a  6      OPC=je_label_1       
  movslq %eax, %rcx               #  256   0xa2810  3      OPC=movslq_r64_r32   
  addq %rdx, %rcx                 #  257   0xa2813  3      OPC=addq_r64_r64     
  cmpq %rcx, %rdx                 #  258   0xa2816  3      OPC=cmpq_r64_r64     
  setle %sil                      #  259   0xa2819  4      OPC=setle_r8         
  shrl $0x1f, %eax                #  260   0xa281d  3      OPC=shrl_r32_imm8    
  movl %eax, %edx                 #  261   0xa2820  2      OPC=movl_r32_r32     
  movq $0xffffffff, %rax          #  262   0xa2822  7      OPC=movq_r64_imm32   
  cmpb %dl, %sil                  #  263   0xa2829  3      OPC=cmpb_r8_r8       
  je .L_a2932                     #  264   0xa282c  6      OPC=je_label_1       
  movq %rcx, 0xe0(%rsp)           #  265   0xa2832  8      OPC=movq_m64_r64     
  leaq 0xa0(%rsp), %rsi           #  266   0xa283a  8      OPC=leaq_r64_m16     
  leaq 0xe0(%rsp), %rdi           #  267   0xa2842  8      OPC=leaq_r64_m16     
  movq 0x8(%rsp), %rax            #  268   0xa284a  5      OPC=movq_r64_m64     
  callq %rax                      #  269   0xa284f  2      OPC=callq_r64        
  testq %rax, %rax                #  270   0xa2851  3      OPC=testq_r64_r64    
  je .L_a28d5                     #  271   0xa2854  2      OPC=je_label         
  movq 0xe0(%rsp), %rax           #  272   0xa2856  8      OPC=movq_r64_m64     
  movq %rax, 0xe8(%rsp)           #  273   0xa285e  8      OPC=movq_m64_r64     
.L_a2866:                         #        0xa2866  0      OPC=<label>          
  movq 0xa0(%rsp), %rax           #  274   0xa2866  8      OPC=movq_r64_m64     
  movq %rax, (%r14)               #  275   0xa286e  3      OPC=movq_m64_r64     
  movq 0xa8(%rsp), %rax           #  276   0xa2871  8      OPC=movq_r64_m64     
  movq %rax, 0x8(%r14)            #  277   0xa2879  4      OPC=movq_m64_r64     
  movq 0xb0(%rsp), %rax           #  278   0xa287d  8      OPC=movq_r64_m64     
  movq %rax, 0x10(%r14)           #  279   0xa2885  4      OPC=movq_m64_r64     
  movq 0xb8(%rsp), %rax           #  280   0xa2889  8      OPC=movq_r64_m64     
  movq %rax, 0x18(%r14)           #  281   0xa2891  4      OPC=movq_m64_r64     
  movq 0xc0(%rsp), %rax           #  282   0xa2895  8      OPC=movq_r64_m64     
  movq %rax, 0x20(%r14)           #  283   0xa289d  4      OPC=movq_m64_r64     
  movq 0xc8(%rsp), %rax           #  284   0xa28a1  8      OPC=movq_r64_m64     
  movq %rax, 0x28(%r14)           #  285   0xa28a9  4      OPC=movq_m64_r64     
  movq 0xd0(%rsp), %rax           #  286   0xa28ad  8      OPC=movq_r64_m64     
  movq %rax, 0x30(%r14)           #  287   0xa28b5  4      OPC=movq_m64_r64     
  movq 0xe8(%rsp), %rax           #  288   0xa28b9  8      OPC=movq_r64_m64     
  jmpq .L_a2932                   #  289   0xa28c1  2      OPC=jmpq_label       
.L_a28c3:                         #        0xa28c3  0      OPC=<label>          
  movq $0xffffffff, %rax          #  290   0xa28c3  7      OPC=movq_r64_imm32   
  jmpq .L_a2932                   #  291   0xa28ca  2      OPC=jmpq_label       
.L_a28cc:                         #        0xa28cc  0      OPC=<label>          
  movq $0xffffffff, %rax          #  292   0xa28cc  7      OPC=movq_r64_imm32   
  jmpq .L_a2932                   #  293   0xa28d3  2      OPC=jmpq_label       
.L_a28d5:                         #        0xa28d5  0      OPC=<label>          
  movq $0xffffffff, %rax          #  294   0xa28d5  7      OPC=movq_r64_imm32   
  jmpq .L_a2932                   #  295   0xa28dc  2      OPC=jmpq_label       
.L_a28de:                         #        0xa28de  0      OPC=<label>          
  subq $0x8, %rsp                 #  296   0xa28de  4      OPC=subq_r64_imm8    
  leaq 0x68(%rsp), %rax           #  297   0xa28e2  5      OPC=leaq_r64_m16     
  pushq %rax                      #  298   0xa28e7  1      OPC=pushq_r64_1      
  leaq 0x68(%rsp), %r9            #  299   0xa28e8  5      OPC=leaq_r64_m16     
  movl 0x28(%rsp), %r8d           #  300   0xa28ed  5      OPC=movl_r32_m32     
  movl 0x10(%rsp), %ecx           #  301   0xa28f2  4      OPC=movl_r32_m32     
  movl 0x14(%rsp), %edx           #  302   0xa28f6  4      OPC=movl_r32_m32     
  movq 0x20(%rsp), %rsi           #  303   0xa28fa  5      OPC=movq_r64_m64     
  movq %rbp, %rdi                 #  304   0xa28ff  3      OPC=movq_r64_r64     
  callq .guess_time_tm            #  305   0xa2902  5      OPC=callq_label      
  addq $0x10, %rsp                #  306   0xa2907  4      OPC=addq_r64_imm8    
  movq %rax, 0xe8(%rsp)           #  307   0xa290b  8      OPC=movq_m64_r64     
  leaq 0xa0(%rsp), %rdx           #  308   0xa2913  8      OPC=leaq_r64_m16     
  leaq 0xe8(%rsp), %rsi           #  309   0xa291b  8      OPC=leaq_r64_m16     
  movq 0x8(%rsp), %rdi            #  310   0xa2923  5      OPC=movq_r64_m64     
  callq .ranged_convert           #  311   0xa2928  5      OPC=callq_label      
  jmpq .L_a27af                   #  312   0xa292d  5      OPC=jmpq_label_1     
.L_a2932:                         #        0xa2932  0      OPC=<label>          
  addq $0xf8, %rsp                #  313   0xa2932  7      OPC=addq_r64_imm32   
  popq %rbx                       #  314   0xa2939  1      OPC=popq_r64_1       
  popq %rbp                       #  315   0xa293a  1      OPC=popq_r64_1       
  popq %r12                       #  316   0xa293b  2      OPC=popq_r64_1       
  popq %r13                       #  317   0xa293d  2      OPC=popq_r64_1       
  popq %r14                       #  318   0xa293f  2      OPC=popq_r64_1       
  popq %r15                       #  319   0xa2941  2      OPC=popq_r64_1       
  retq                            #  320   0xa2943  1      OPC=retq             
                                                                                
.size __mktime_internal, .-__mktime_internal

