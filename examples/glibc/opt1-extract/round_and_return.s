  .text
  .globl round_and_return
  .type round_and_return, @function

#! file-offset 0x9bc5f
#! rip-offset  0x9bc5f
#! capacity    1075 bytes

# Text                          #  Line  RIP      Bytes  Opcode               
.round_and_return:              #        0x9bc5f  0      OPC=<label>          
  pushq %r15                    #  1     0x9bc5f  2      OPC=pushq_r64_1      
  pushq %r14                    #  2     0x9bc61  2      OPC=pushq_r64_1      
  pushq %r13                    #  3     0x9bc63  2      OPC=pushq_r64_1      
  pushq %r12                    #  4     0x9bc65  2      OPC=pushq_r64_1      
  pushq %rbp                    #  5     0x9bc67  1      OPC=pushq_r64_1      
  pushq %rbx                    #  6     0x9bc68  1      OPC=pushq_r64_1      
  subq $0x28, %rsp              #  7     0x9bc69  4      OPC=subq_r64_imm8    
  movq %rdi, %rbx               #  8     0x9bc6d  3      OPC=movq_r64_r64     
  movq %rsi, %r13               #  9     0x9bc70  3      OPC=movq_r64_r64     
  movl %edx, 0x4(%rsp)          #  10    0x9bc73  4      OPC=movl_m32_r32     
  movq %rcx, %r12               #  11    0x9bc77  3      OPC=movq_r64_r64     
  movq %r8, %r14                #  12    0x9bc7a  3      OPC=movq_r64_r64     
  movl %r9d, %ebp               #  13    0x9bc7d  3      OPC=movl_r32_r32     
  fnstcw 0x1e(%rsp)             #  14    0x9bc80  4      OPC=fnstcw_m2byte    
  movzwl 0x1e(%rsp), %eax       #  15    0x9bc84  5      OPC=movzwl_r32_m16   
  andw $0xc00, %ax              #  16    0x9bc89  4      OPC=andw_ax_imm16    
  cmpw $0x400, %ax              #  17    0x9bc8d  4      OPC=cmpw_ax_imm16    
  je .L_9bccd                   #  18    0x9bc91  2      OPC=je_label         
  cmpw $0x400, %ax              #  19    0x9bc93  4      OPC=cmpw_ax_imm16    
  ja .L_9bca8                   #  20    0x9bc97  2      OPC=ja_label         
  movl $0x0, 0x8(%rsp)          #  21    0x9bc99  8      OPC=movl_m32_imm32   
  testw %ax, %ax                #  22    0x9bca1  3      OPC=testw_r16_r16    
  je .L_9bcd5                   #  23    0x9bca4  2      OPC=je_label         
  jmpq .L_9bcc8                 #  24    0x9bca6  2      OPC=jmpq_label       
.L_9bca8:                       #        0x9bca8  0      OPC=<label>          
  cmpw $0x800, %ax              #  25    0x9bca8  4      OPC=cmpw_ax_imm16    
  je .L_9bcbe                   #  26    0x9bcac  2      OPC=je_label         
  movl $0xc00, 0x8(%rsp)        #  27    0x9bcae  8      OPC=movl_m32_imm32   
  cmpw $0xc00, %ax              #  28    0x9bcb6  4      OPC=cmpw_ax_imm16    
  je .L_9bcd5                   #  29    0x9bcba  2      OPC=je_label         
  jmpq .L_9bcc8                 #  30    0x9bcbc  2      OPC=jmpq_label       
.L_9bcbe:                       #        0x9bcbe  0      OPC=<label>          
  movl $0x800, 0x8(%rsp)        #  31    0x9bcbe  8      OPC=movl_m32_imm32   
  jmpq .L_9bcd5                 #  32    0x9bcc6  2      OPC=jmpq_label       
.L_9bcc8:                       #        0x9bcc8  0      OPC=<label>          
  callq .abort                  #  33    0x9bcc8  5      OPC=callq_label      
.L_9bccd:                       #        0x9bccd  0      OPC=<label>          
  movl $0x400, 0x8(%rsp)        #  34    0x9bccd  8      OPC=movl_m32_imm32   
.L_9bcd5:                       #        0x9bcd5  0      OPC=<label>          
  cmpq $0x82, %r13              #  35    0x9bcd5  4      OPC=cmpq_r64_imm8    
  jge .L_9bf76                  #  36    0x9bcd9  6      OPC=jge_label_1      
  cmpq $0xffffff6a, %r13        #  37    0x9bcdf  7      OPC=cmpq_r64_imm32   
  jge .L_9bd23                  #  38    0x9bce6  2      OPC=jge_label        
  movq 0x2ef191(%rip), %rax     #  39    0x9bce8  7      OPC=movq_r64_m64     
  movl $0x22, (%rax)            #  40    0x9bcef  6      OPC=movl_m32_imm32   
  nop                           #  41    0x9bcf5  1      OPC=nop              
  cmpl $0x0, 0x4(%rsp)          #  42    0x9bcf6  5      OPC=cmpl_m32_imm8    
  je .L_9bd12                   #  43    0x9bcfb  2      OPC=je_label         
  movss 0xc364b(%rip), %xmm0    #  44    0x9bcfd  8      OPC=movss_xmm_m32    
  mulss 0xc363f(%rip), %xmm0    #  45    0x9bd05  8      OPC=mulss_xmm_m32    
  jmpq .L_9c083                 #  46    0x9bd0d  5      OPC=jmpq_label_1     
.L_9bd12:                       #        0x9bd12  0      OPC=<label>          
  movss 0xc3632(%rip), %xmm0    #  47    0x9bd12  8      OPC=movss_xmm_m32    
  mulss %xmm0, %xmm0            #  48    0x9bd1a  4      OPC=mulss_xmm_xmm    
  jmpq .L_9c083                 #  49    0x9bd1e  5      OPC=jmpq_label_1     
.L_9bd23:                       #        0x9bd23  0      OPC=<label>          
  movq $0xffffff82, %r15        #  50    0x9bd23  7      OPC=movq_r64_imm32   
  subq %r13, %r15               #  51    0x9bd2a  3      OPC=subq_r64_r64     
  movl %r14d, %esi              #  52    0x9bd2d  3      OPC=movl_r32_r32     
  movl $0x1, %eax               #  53    0x9bd30  5      OPC=movl_r32_imm32   
  movl %r14d, %ecx              #  54    0x9bd35  3      OPC=movl_r32_r32     
  shlq %cl, %rax                #  55    0x9bd38  3      OPC=shlq_r64_cl      
  subq $0x1, %rax               #  56    0x9bd3b  4      OPC=subq_r64_imm8    
  testq %r12, %rax              #  57    0x9bd3f  3      OPC=testq_r64_r64    
  setne %al                     #  58    0x9bd42  3      OPC=setne_r8         
  movzbl %al, %edx              #  59    0x9bd45  3      OPC=movzbl_r32_r8    
  orl %edx, %ebp                #  60    0x9bd48  2      OPC=orl_r32_r32      
  cmpq $0x18, %r15              #  61    0x9bd4a  4      OPC=cmpq_r64_imm8    
  jne .L_9bd65                  #  62    0x9bd4e  2      OPC=jne_label        
  movq (%rbx), %r12             #  63    0x9bd50  3      OPC=movq_r64_m64     
  movq $0x0, (%rbx)             #  64    0x9bd53  7      OPC=movq_m64_imm32   
  movl $0x17, %r14d             #  65    0x9bd5a  6      OPC=movl_r32_imm32   
  jmpq .L_9bf35                 #  66    0x9bd60  5      OPC=jmpq_label_1     
.L_9bd65:                       #        0x9bd65  0      OPC=<label>          
  cmpq $0x3f, %r15              #  67    0x9bd65  4      OPC=cmpq_r64_imm8    
  jle .L_9bea0                  #  68    0x9bd69  6      OPC=jle_label_1      
  movq $0xffffff81, %rax        #  69    0x9bd6f  7      OPC=movq_r64_imm32   
  subq %r13, %rax               #  70    0x9bd76  3      OPC=subq_r64_r64     
  leaq 0x3f(%rax), %rdx         #  71    0x9bd79  4      OPC=leaq_r64_m16     
  testq %rax, %rax              #  72    0x9bd7d  3      OPC=testq_r64_r64    
  cmovnsq %rax, %rdx            #  73    0x9bd80  4      OPC=cmovnsq_r64_r64  
  sarq $0x6, %rdx               #  74    0x9bd84  4      OPC=sarq_r64_imm8    
  movq %rdx, %rsi               #  75    0x9bd88  3      OPC=movq_r64_r64     
  movq (%rbx,%rdx,8), %r12      #  76    0x9bd8b  4      OPC=movq_r64_m64     
  movq %rax, %rdi               #  77    0x9bd8f  3      OPC=movq_r64_r64     
  sarq $0x3f, %rdi              #  78    0x9bd92  4      OPC=sarq_r64_imm8    
  shrq $0x3a, %rdi              #  79    0x9bd96  4      OPC=shrq_r64_imm8    
  leaq (%rax,%rdi,1), %rcx      #  80    0x9bd9a  4      OPC=leaq_r64_m16     
  andl $0x3f, %ecx              #  81    0x9bd9e  3      OPC=andl_r32_imm8    
  subq %rdi, %rcx               #  82    0x9bda1  3      OPC=subq_r64_r64     
  movq %rcx, %r14               #  83    0x9bda4  3      OPC=movq_r64_r64     
  testq %rdx, %rdx              #  84    0x9bda7  3      OPC=testq_r64_r64    
  jle .L_9bdcc                  #  85    0x9bdaa  2      OPC=jle_label        
  movl $0x0, %eax               #  86    0x9bdac  5      OPC=movl_r32_imm32   
.L_9bdb1:                       #        0x9bdb1  0      OPC=<label>          
  movslq %eax, %rdx             #  87    0x9bdb1  3      OPC=movslq_r64_r32   
  cmpq $0x0, (%rbx,%rdx,8)      #  88    0x9bdb4  5      OPC=cmpq_m64_imm8    
  setne %dl                     #  89    0x9bdb9  3      OPC=setne_r8         
  movzbl %dl, %edx              #  90    0x9bdbc  3      OPC=movzbl_r32_r8    
  orl %edx, %ebp                #  91    0x9bdbf  2      OPC=orl_r32_r32      
  addl $0x1, %eax               #  92    0x9bdc1  3      OPC=addl_r32_imm8    
  movslq %eax, %rdx             #  93    0x9bdc4  3      OPC=movslq_r64_r32   
  cmpq %rdx, %rsi               #  94    0x9bdc7  3      OPC=cmpq_r64_r64     
  jg .L_9bdb1                   #  95    0x9bdca  2      OPC=jg_label         
.L_9bdcc:                       #        0x9bdcc  0      OPC=<label>          
  movl $0x1, %eax               #  96    0x9bdcc  5      OPC=movl_r32_imm32   
  shlq %cl, %rax                #  97    0x9bdd1  3      OPC=shlq_r64_cl      
  subq $0x1, %rax               #  98    0x9bdd4  4      OPC=subq_r64_imm8    
  testq %rax, %r12              #  99    0x9bdd8  3      OPC=testq_r64_r64    
  setne %al                     #  100   0x9bddb  3      OPC=setne_r8         
  movzbl %al, %eax              #  101   0x9bdde  3      OPC=movzbl_r32_r8    
  orl %eax, %ebp                #  102   0x9bde1  2      OPC=orl_r32_r32      
  testb $0x3f, %r15b            #  103   0x9bde3  4      OPC=testb_r8_imm8    
  jne .L_9be14                  #  104   0x9bde7  2      OPC=jne_label        
  leaq 0x3f(%r15), %rax         #  105   0x9bde9  4      OPC=leaq_r64_m16     
  testq %r15, %r15              #  106   0x9bded  3      OPC=testq_r64_r64    
  cmovnsq %r15, %rax            #  107   0x9bdf0  4      OPC=cmovnsq_r64_r64  
  sarq $0x6, %rax               #  108   0x9bdf4  4      OPC=sarq_r64_imm8    
  movq %rax, %rdi               #  109   0x9bdf8  3      OPC=movq_r64_r64     
  movl $0x1, %esi               #  110   0x9bdfb  5      OPC=movl_r32_imm32   
  subq %rax, %rsi               #  111   0x9be00  3      OPC=subq_r64_r64     
  movl $0x0, %eax               #  112   0x9be03  5      OPC=movl_r32_imm32   
  movl $0x0, %edx               #  113   0x9be08  5      OPC=movl_r32_imm32   
  testq %rsi, %rsi              #  114   0x9be0d  3      OPC=testq_r64_r64    
  jg .L_9be65                   #  115   0x9be10  2      OPC=jg_label         
  jmpq .L_9be4c                 #  116   0x9be12  2      OPC=jmpq_label       
.L_9be14:                       #        0x9be14  0      OPC=<label>          
  leaq 0x3f(%r15), %rax         #  117   0x9be14  4      OPC=leaq_r64_m16     
  testq %r15, %r15              #  118   0x9be18  3      OPC=testq_r64_r64    
  cmovnsq %r15, %rax            #  119   0x9be1b  4      OPC=cmovnsq_r64_r64  
  sarq $0x6, %rax               #  120   0x9be1f  4      OPC=sarq_r64_imm8    
  movq %r15, %rdx               #  121   0x9be23  3      OPC=movq_r64_r64     
  sarq $0x3f, %rdx              #  122   0x9be26  4      OPC=sarq_r64_imm8    
  shrq $0x3a, %rdx              #  123   0x9be2a  4      OPC=shrq_r64_imm8    
  leaq (%r15,%rdx,1), %rcx      #  124   0x9be2e  4      OPC=leaq_r64_m16     
  andl $0x3f, %ecx              #  125   0x9be32  3      OPC=andl_r32_imm8    
  subq %rdx, %rcx               #  126   0x9be35  3      OPC=subq_r64_r64     
  movl $0x1, %edx               #  127   0x9be38  5      OPC=movl_r32_imm32   
  subq %rax, %rdx               #  128   0x9be3d  3      OPC=subq_r64_r64     
  leaq (%rbx,%rax,8), %rsi      #  129   0x9be40  4      OPC=leaq_r64_m16     
  movq %rbx, %rdi               #  130   0x9be44  3      OPC=movq_r64_r64     
  callq .__mpn_rshift           #  131   0x9be47  5      OPC=callq_label      
.L_9be4c:                       #        0x9be4c  0      OPC=<label>          
  leaq 0x3f(%r15), %rax         #  132   0x9be4c  4      OPC=leaq_r64_m16     
  testq %r15, %r15              #  133   0x9be50  3      OPC=testq_r64_r64    
  cmovsq %rax, %r15             #  134   0x9be53  4      OPC=cmovsq_r64_r64   
  sarq $0x6, %r15               #  135   0x9be57  4      OPC=sarq_r64_imm8    
  testq %r15, %r15              #  136   0x9be5b  3      OPC=testq_r64_r64    
  jg .L_9be80                   #  137   0x9be5e  2      OPC=jg_label         
  jmpq .L_9bf35                 #  138   0x9be60  5      OPC=jmpq_label_1     
.L_9be65:                       #        0x9be65  0      OPC=<label>          
  addq %rdi, %rax               #  139   0x9be65  3      OPC=addq_r64_r64     
  movq (%rbx,%rax,8), %rcx      #  140   0x9be68  4      OPC=movq_r64_m64     
  movslq %edx, %rax             #  141   0x9be6c  3      OPC=movslq_r64_r32   
  movq %rcx, (%rbx,%rax,8)      #  142   0x9be6f  4      OPC=movq_m64_r64     
  addl $0x1, %edx               #  143   0x9be73  3      OPC=addl_r32_imm8    
  movslq %edx, %rax             #  144   0x9be76  3      OPC=movslq_r64_r32   
  cmpq %rsi, %rax               #  145   0x9be79  3      OPC=cmpq_r64_r64     
  jl .L_9be65                   #  146   0x9be7c  2      OPC=jl_label         
  jmpq .L_9be4c                 #  147   0x9be7e  2      OPC=jmpq_label       
.L_9be80:                       #        0x9be80  0      OPC=<label>          
  negq %r15                     #  148   0x9be80  3      OPC=negq_r64         
  leaq (%rbx,%r15,8), %rax      #  149   0x9be83  4      OPC=leaq_r64_m16     
  movq %rbx, %rdx               #  150   0x9be87  3      OPC=movq_r64_r64     
.L_9be8a:                       #        0x9be8a  0      OPC=<label>          
  movq $0x0, 0x8(%rax)          #  151   0x9be8a  8      OPC=movq_m64_imm32   
  addq $0x8, %rax               #  152   0x9be92  4      OPC=addq_r64_imm8    
  cmpq %rdx, %rax               #  153   0x9be96  3      OPC=cmpq_r64_r64     
  jne .L_9be8a                  #  154   0x9be99  2      OPC=jne_label        
  jmpq .L_9bf35                 #  155   0x9be9b  5      OPC=jmpq_label_1     
.L_9bea0:                       #        0x9bea0  0      OPC=<label>          
  testq %r15, %r15              #  156   0x9bea0  3      OPC=testq_r64_r64    
  jle .L_9bf35                  #  157   0x9bea3  6      OPC=jle_label_1      
  movb $0x1, 0xf(%rsp)          #  158   0x9bea9  5      OPC=movb_m8_imm8     
  cmpq $0x1, %r15               #  159   0x9beae  4      OPC=cmpq_r64_imm8    
  jne .L_9bf0a                  #  160   0x9beb2  2      OPC=jne_label        
  movq (%rbx), %r14             #  161   0x9beb4  3      OPC=movq_r64_m64     
  testl %ebp, %ebp              #  162   0x9beb7  2      OPC=testl_r32_r32    
  setne %dl                     #  163   0x9beb9  3      OPC=setne_r8         
  orl %edx, %eax                #  164   0x9bebc  2      OPC=orl_r32_r32      
  movzbl %al, %eax              #  165   0x9bebe  3      OPC=movzbl_r32_r8    
  movq %r12, %rdx               #  166   0x9bec1  3      OPC=movq_r64_r64     
  movl %esi, %ecx               #  167   0x9bec4  2      OPC=movl_r32_r32     
  shrq %cl, %rdx                #  168   0x9bec6  3      OPC=shrq_r64_cl      
  andl $0x1, %edx               #  169   0x9bec9  3      OPC=andl_r32_imm8    
  movl %r14d, %esi              #  170   0x9becc  3      OPC=movl_r32_r32     
  andl $0x1, %esi               #  171   0x9becf  3      OPC=andl_r32_imm8    
  cmpl $0x0, 0x4(%rsp)          #  172   0x9bed2  5      OPC=cmpl_m32_imm8    
  setne %dil                    #  173   0x9bed7  4      OPC=setne_r8         
  movzbl %dil, %edi             #  174   0x9bedb  4      OPC=movzbl_r32_r8    
  movl 0x8(%rsp), %r8d          #  175   0x9bedf  5      OPC=movl_r32_m32     
  movl %eax, %ecx               #  176   0x9bee4  2      OPC=movl_r32_r32     
  callq .round_away             #  177   0x9bee6  5      OPC=callq_label      
  movb $0x1, 0xf(%rsp)          #  178   0x9beeb  5      OPC=movb_m8_imm8     
  testb %al, %al                #  179   0x9bef0  2      OPC=testb_r8_r8      
  je .L_9bf0a                   #  180   0x9bef2  2      OPC=je_label         
  addq $0x1, %r14               #  181   0x9bef4  4      OPC=addq_r64_imm8    
  shrq $0x18, %r14              #  182   0x9bef8  4      OPC=shrq_r64_imm8    
  xorq $0x1, %r14               #  183   0x9befc  4      OPC=xorq_r64_imm8    
  movl %r14d, %eax              #  184   0x9bf00  3      OPC=movl_r32_r32     
  andl $0x1, %eax               #  185   0x9bf03  3      OPC=andl_r32_imm8    
  movb %al, 0xf(%rsp)           #  186   0x9bf06  4      OPC=movb_m8_r8       
.L_9bf0a:                       #        0x9bf0a  0      OPC=<label>          
  movq (%rbx), %r12             #  187   0x9bf0a  3      OPC=movq_r64_m64     
  movq $0xffffff81, %r14        #  188   0x9bf0d  7      OPC=movq_r64_imm32   
  subq %r13, %r14               #  189   0x9bf14  3      OPC=subq_r64_r64     
  movl %r15d, %ecx              #  190   0x9bf17  3      OPC=movl_r32_r32     
  movl $0x1, %edx               #  191   0x9bf1a  5      OPC=movl_r32_imm32   
  movq %rbx, %rsi               #  192   0x9bf1f  3      OPC=movq_r64_r64     
  movq %rbx, %rdi               #  193   0x9bf22  3      OPC=movq_r64_r64     
  callq .__mpn_rshift           #  194   0x9bf25  5      OPC=callq_label      
  cmpb $0x0, 0xf(%rsp)          #  195   0x9bf2a  5      OPC=cmpb_m8_imm8     
  je .L_9c077                   #  196   0x9bf2f  6      OPC=je_label_1       
.L_9bf35:                       #        0x9bf35  0      OPC=<label>          
  movl %r14d, %ecx              #  197   0x9bf35  3      OPC=movl_r32_r32     
  btq %r14, %r12                #  198   0x9bf38  4      OPC=btq_r64_r64      
  jb .L_9bf57                   #  199   0x9bf3c  2      OPC=jb_label         
  testl %ebp, %ebp              #  200   0x9bf3e  2      OPC=testl_r32_r32    
  jne .L_9bf57                  #  201   0x9bf40  2      OPC=jne_label        
  movl $0x1, %eax               #  202   0x9bf42  5      OPC=movl_r32_imm32   
  shlq %cl, %rax                #  203   0x9bf47  3      OPC=shlq_r64_cl      
  subq $0x1, %rax               #  204   0x9bf4a  4      OPC=subq_r64_imm8    
  testq %r12, %rax              #  205   0x9bf4e  3      OPC=testq_r64_r64    
  je .L_9c077                   #  206   0x9bf51  6      OPC=je_label_1       
.L_9bf57:                       #        0x9bf57  0      OPC=<label>          
  movq 0x2eef22(%rip), %rax     #  207   0x9bf57  7      OPC=movq_r64_m64     
  movl $0x22, (%rax)            #  208   0x9bf5e  6      OPC=movl_m32_imm32   
  nop                           #  209   0x9bf64  1      OPC=nop              
  movss 0xc33df(%rip), %xmm0    #  210   0x9bf65  8      OPC=movss_xmm_m32    
  mulss %xmm0, %xmm0            #  211   0x9bf6d  4      OPC=mulss_xmm_xmm    
  jmpq .L_9c077                 #  212   0x9bf71  5      OPC=jmpq_label_1     
.L_9bf76:                       #        0x9bf76  0      OPC=<label>          
  cmpq $0x80, %r13              #  213   0x9bf76  7      OPC=cmpq_r64_imm32   
  jg .L_9c031                   #  214   0x9bf7d  6      OPC=jg_label_1       
.L_9bf83:                       #        0x9bf83  0      OPC=<label>          
  movl $0x1, %ecx               #  215   0x9bf83  5      OPC=movl_r32_imm32   
  testl %ebp, %ebp              #  216   0x9bf88  2      OPC=testl_r32_r32    
  jne .L_9bfa4                  #  217   0x9bf8a  2      OPC=jne_label        
  movl $0x1, %eax               #  218   0x9bf8c  5      OPC=movl_r32_imm32   
  movl %r14d, %ecx              #  219   0x9bf91  3      OPC=movl_r32_r32     
  shlq %cl, %rax                #  220   0x9bf94  3      OPC=shlq_r64_cl      
  subq $0x1, %rax               #  221   0x9bf97  4      OPC=subq_r64_imm8    
  testq %r12, %rax              #  222   0x9bf9b  3      OPC=testq_r64_r64    
  setne %cl                     #  223   0x9bf9e  3      OPC=setne_r8         
  movzbl %cl, %ecx              #  224   0x9bfa1  3      OPC=movzbl_r32_r8    
.L_9bfa4:                       #        0x9bfa4  0      OPC=<label>          
  movq (%rbx), %rbp             #  225   0x9bfa4  3      OPC=movq_r64_m64     
  movl %ecx, %eax               #  226   0x9bfa7  2      OPC=movl_r32_r32     
  andl $0x1, %eax               #  227   0x9bfa9  3      OPC=andl_r32_imm8    
  movq %r12, %rdx               #  228   0x9bfac  3      OPC=movq_r64_r64     
  movl %r14d, %ecx              #  229   0x9bfaf  3      OPC=movl_r32_r32     
  shrq %cl, %rdx                #  230   0x9bfb2  3      OPC=shrq_r64_cl      
  andl $0x1, %edx               #  231   0x9bfb5  3      OPC=andl_r32_imm8    
  movl %ebp, %esi               #  232   0x9bfb8  2      OPC=movl_r32_r32     
  andl $0x1, %esi               #  233   0x9bfba  3      OPC=andl_r32_imm8    
  cmpl $0x0, 0x4(%rsp)          #  234   0x9bfbd  5      OPC=cmpl_m32_imm8    
  setne %dil                    #  235   0x9bfc2  4      OPC=setne_r8         
  movzbl %dil, %edi             #  236   0x9bfc6  4      OPC=movzbl_r32_r8    
  movl 0x8(%rsp), %r8d          #  237   0x9bfca  5      OPC=movl_r32_m32     
  movl %eax, %ecx               #  238   0x9bfcf  2      OPC=movl_r32_r32     
  callq .round_away             #  239   0x9bfd1  5      OPC=callq_label      
  testb %al, %al                #  240   0x9bfd6  2      OPC=testb_r8_r8      
  je .L_9c066                   #  241   0x9bfd8  6      OPC=je_label_1       
  addq $0x1, %rbp               #  242   0x9bfde  4      OPC=addq_r64_imm8    
  movq %rbp, (%rbx)             #  243   0x9bfe2  3      OPC=movq_m64_r64     
  testl $0x1000000, %ebp        #  244   0x9bfe5  6      OPC=testl_r32_imm32  
  je .L_9c018                   #  245   0x9bfeb  2      OPC=je_label         
  addq $0x1, %r13               #  246   0x9bfed  4      OPC=addq_r64_imm8    
  movl $0x1, %ecx               #  247   0x9bff1  5      OPC=movl_r32_imm32   
  movl $0x1, %edx               #  248   0x9bff6  5      OPC=movl_r32_imm32   
  movq %rbx, %rsi               #  249   0x9bffb  3      OPC=movq_r64_r64     
  movq %rbx, %rdi               #  250   0x9bffe  3      OPC=movq_r64_r64     
  callq .__mpn_rshift           #  251   0x9c001  5      OPC=callq_label      
  orq $0x800000, (%rbx)         #  252   0x9c006  7      OPC=orq_m64_imm32    
  cmpq $0x80, %r13              #  253   0x9c00d  7      OPC=cmpq_r64_imm32   
  jg .L_9c031                   #  254   0x9c014  2      OPC=jg_label         
  jmpq .L_9c066                 #  255   0x9c016  2      OPC=jmpq_label       
.L_9c018:                       #        0x9c018  0      OPC=<label>          
  cmpq $0x81, %r13              #  256   0x9c018  4      OPC=cmpq_r64_imm8    
  jne .L_9c066                  #  257   0x9c01c  2      OPC=jne_label        
  andl $0x800000, %ebp          #  258   0x9c01e  6      OPC=andl_r32_imm32   
  movq $0xffffff82, %rax        #  259   0x9c024  7      OPC=movq_r64_imm32   
  cmovneq %rax, %r13            #  260   0x9c02b  4      OPC=cmovneq_r64_r64  
  jmpq .L_9c066                 #  261   0x9c02f  2      OPC=jmpq_label       
.L_9c031:                       #        0x9c031  0      OPC=<label>          
  movq 0x2eee48(%rip), %rax     #  262   0x9c031  7      OPC=movq_r64_m64     
  movl $0x22, (%rax)            #  263   0x9c038  6      OPC=movl_m32_imm32   
  nop                           #  264   0x9c03e  1      OPC=nop              
  cmpl $0x0, 0x4(%rsp)          #  265   0x9c03f  5      OPC=cmpl_m32_imm8    
  je .L_9c058                   #  266   0x9c044  2      OPC=je_label         
  movss 0xc3306(%rip), %xmm0    #  267   0x9c046  8      OPC=movss_xmm_m32    
  mulss 0xc32ea(%rip), %xmm0    #  268   0x9c04e  8      OPC=mulss_xmm_m32    
  jmpq .L_9c083                 #  269   0x9c056  2      OPC=jmpq_label       
.L_9c058:                       #        0x9c058  0      OPC=<label>          
  movss 0xc32e0(%rip), %xmm0    #  270   0x9c058  8      OPC=movss_xmm_m32    
  mulss %xmm0, %xmm0            #  271   0x9c060  4      OPC=mulss_xmm_xmm    
  jmpq .L_9c083                 #  272   0x9c064  2      OPC=jmpq_label       
.L_9c066:                       #        0x9c066  0      OPC=<label>          
  movl 0x4(%rsp), %edx          #  273   0x9c066  4      OPC=movl_r32_m32     
  movl %r13d, %esi              #  274   0x9c06a  3      OPC=movl_r32_r32     
  movq %rbx, %rdi               #  275   0x9c06d  3      OPC=movq_r64_r64     
  callq .__mpn_construct_float  #  276   0x9c070  5      OPC=callq_label      
  jmpq .L_9c083                 #  277   0x9c075  2      OPC=jmpq_label       
.L_9c077:                       #        0x9c077  0      OPC=<label>          
  movq $0xffffff81, %r13        #  278   0x9c077  7      OPC=movq_r64_imm32   
  jmpq .L_9bf83                 #  279   0x9c07e  5      OPC=jmpq_label_1     
.L_9c083:                       #        0x9c083  0      OPC=<label>          
  addq $0x28, %rsp              #  280   0x9c083  4      OPC=addq_r64_imm8    
  popq %rbx                     #  281   0x9c087  1      OPC=popq_r64_1       
  popq %rbp                     #  282   0x9c088  1      OPC=popq_r64_1       
  popq %r12                     #  283   0x9c089  2      OPC=popq_r64_1       
  popq %r13                     #  284   0x9c08b  2      OPC=popq_r64_1       
  popq %r14                     #  285   0x9c08d  2      OPC=popq_r64_1       
  popq %r15                     #  286   0x9c08f  2      OPC=popq_r64_1       
  retq                          #  287   0x9c091  1      OPC=retq             
                                                                              
.size round_and_return, .-round_and_return

