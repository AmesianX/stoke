  .text
  .globl _IO_wfile_seekoff
  .type _IO_wfile_seekoff, @function

#! file-offset 0x6854b
#! rip-offset  0x6854b
#! capacity    1980 bytes

# Text                            #  Line  RIP      Bytes  Opcode                
._IO_wfile_seekoff:               #        0x6854b  0      OPC=<label>           
  pushq %r15                      #  1     0x6854b  2      OPC=pushq_r64_1       
  pushq %r14                      #  2     0x6854d  2      OPC=pushq_r64_1       
  pushq %r13                      #  3     0x6854f  2      OPC=pushq_r64_1       
  pushq %r12                      #  4     0x68551  2      OPC=pushq_r64_1       
  pushq %rbp                      #  5     0x68553  1      OPC=pushq_r64_1       
  pushq %rbx                      #  6     0x68554  1      OPC=pushq_r64_1       
  subq $0xb8, %rsp                #  7     0x68555  7      OPC=subq_r64_imm32    
  movq %rdi, %rbx                 #  8     0x6855c  3      OPC=movq_r64_r64      
  testl %ecx, %ecx                #  9     0x6855f  2      OPC=testl_r32_r32     
  jne .L_687bd                    #  10    0x68561  6      OPC=jne_label_1       
  movq 0xa0(%rdi), %rax           #  11    0x68567  7      OPC=movq_r64_m64      
  cmpq $0x0, 0x30(%rax)           #  12    0x6856e  5      OPC=cmpq_m64_imm8     
  je .L_68764                     #  13    0x68573  6      OPC=je_label_1        
  movq 0x18(%rax), %rdi           #  14    0x68579  4      OPC=movq_r64_m64      
  cmpq %rdi, 0x20(%rax)           #  15    0x6857d  4      OPC=cmpq_m64_r64      
  seta %r14b                      #  16    0x68581  4      OPC=seta_r8           
  movl (%rbx), %ebp               #  17    0x68585  2      OPC=movl_r32_m32      
  shrl $0xc, %ebp                 #  18    0x68587  3      OPC=shrl_r32_imm8     
  andl $0x1, %ebp                 #  19    0x6858a  3      OPC=andl_r32_imm8     
  je .L_685bf                     #  20    0x6858d  2      OPC=je_label          
  testb %r14b, %r14b              #  21    0x6858f  3      OPC=testb_r8_r8       
  je .L_685bf                     #  22    0x68592  2      OPC=je_label          
  movq 0xd8(%rbx), %rax           #  23    0x68594  7      OPC=movq_r64_m64      
  movl $0x2, %edx                 #  24    0x6859b  5      OPC=movl_r32_imm32    
  movl $0x0, %esi                 #  25    0x685a0  5      OPC=movl_r32_imm32    
  movq %rbx, %rdi                 #  26    0x685a5  3      OPC=movq_r64_r64      
  callq 0x80(%rax)                #  27    0x685a8  6      OPC=callq_m64         
  cmpq $0xff, %rax                #  28    0x685ae  4      OPC=cmpq_r64_imm8     
  je .L_68c70                     #  29    0x685b2  6      OPC=je_label_1        
  movq %rax, 0x90(%rbx)           #  30    0x685b8  7      OPC=movq_m64_r64      
.L_685bf:                         #        0x685bf  0      OPC=<label>           
  testl $0x100, (%rbx)            #  31    0x685bf  6      OPC=testl_m32_imm32   
  je .L_685ff                     #  32    0x685c5  2      OPC=je_label          
  movq 0xa0(%rbx), %rax           #  33    0x685c7  7      OPC=movq_r64_m64      
  movq 0x8(%rax), %rdi            #  34    0x685ce  4      OPC=movq_r64_m64      
  cmpq %rdi, (%rax)               #  35    0x685d2  3      OPC=cmpq_m64_r64      
  jae .L_685f1                    #  36    0x685d5  2      OPC=jae_label         
  movq 0x3228a2(%rip), %rax       #  37    0x685d7  7      OPC=movq_r64_m64      
  movl $0x16, (%rax)              #  38    0x685de  6      OPC=movl_m32_imm32    
  nop                             #  39    0x685e4  1      OPC=nop               
  movq $0xffffffff, %rax          #  40    0x685e5  7      OPC=movq_r64_imm32    
  jmpq .L_68cf5                   #  41    0x685ec  5      OPC=jmpq_label_1      
.L_685f1:                         #        0x685f1  0      OPC=<label>           
  movq 0x40(%rax), %r15           #  42    0x685f1  4      OPC=movq_r64_m64      
  movq 0x50(%rax), %r13           #  43    0x685f5  4      OPC=movq_r64_m64      
  movq %r15, (%rsp)               #  44    0x685f9  4      OPC=movq_m64_r64      
  jmpq .L_68615                   #  45    0x685fd  2      OPC=jmpq_label        
.L_685ff:                         #        0x685ff  0      OPC=<label>           
  movq 0xa0(%rbx), %rax           #  46    0x685ff  7      OPC=movq_r64_m64      
  movq 0x10(%rax), %rdi           #  47    0x68606  4      OPC=movq_r64_m64      
  movq %rdi, (%rsp)               #  48    0x6860a  4      OPC=movq_m64_r64      
  movq (%rax), %r15               #  49    0x6860e  3      OPC=movq_r64_m64      
  movq 0x8(%rax), %r13            #  50    0x68611  4      OPC=movq_r64_m64      
.L_68615:                         #        0x68615  0      OPC=<label>           
  movq 0x98(%rbx), %r12           #  51    0x68615  7      OPC=movq_r64_m64      
  movq %r12, %rdi                 #  52    0x6861c  3      OPC=movq_r64_r64      
  callq 0x20(%r12)                #  53    0x6861f  5      OPC=callq_m64         
  testb %r14b, %r14b              #  54    0x68624  3      OPC=testb_r8_r8       
  jne .L_68691                    #  55    0x68627  2      OPC=jne_label         
  testl %eax, %eax                #  56    0x68629  2      OPC=testl_r32_r32     
  jle .L_6864a                    #  57    0x6862b  2      OPC=jle_label         
  movq 0x8(%rbx), %rbp            #  58    0x6862d  4      OPC=movq_r64_m64      
  subq 0x10(%rbx), %rbp           #  59    0x68631  4      OPC=subq_r64_m64      
  subq %r15, %r13                 #  60    0x68635  3      OPC=subq_r64_r64      
  sarq $0x2, %r13                 #  61    0x68638  4      OPC=sarq_r64_imm8     
  cltq                            #  62    0x6863c  2      OPC=cltq              
  imulq %r13, %rax                #  63    0x6863e  4      OPC=imulq_r64_r64     
  subq %rax, %rbp                 #  64    0x68642  3      OPC=subq_r64_r64      
  jmpq .L_68769                   #  65    0x68645  5      OPC=jmpq_label_1      
.L_6864a:                         #        0x6864a  0      OPC=<label>           
  movq 0xa0(%rbx), %rax           #  66    0x6864a  7      OPC=movq_r64_m64      
  movq 0x60(%rax), %rax           #  67    0x68651  4      OPC=movq_r64_m64      
  movq %rax, 0x20(%rsp)           #  68    0x68655  5      OPC=movq_m64_r64      
  movq %r15, %r8                  #  69    0x6865a  3      OPC=movq_r64_r64      
  subq (%rsp), %r8                #  70    0x6865d  4      OPC=subq_r64_m64      
  movq 0x10(%rbx), %rcx           #  71    0x68661  4      OPC=movq_r64_m64      
  movq 0x18(%rbx), %rdx           #  72    0x68665  4      OPC=movq_r64_m64      
  leaq 0x20(%rsp), %rsi           #  73    0x68669  5      OPC=leaq_r64_m16      
  sarq $0x2, %r8                  #  74    0x6866e  4      OPC=sarq_r64_imm8     
  movq %r12, %rdi                 #  75    0x68672  3      OPC=movq_r64_r64      
  callq 0x30(%r12)                #  76    0x68675  5      OPC=callq_m64         
  movslq %eax, %rdx               #  77    0x6867a  3      OPC=movslq_r64_r32    
  movq 0x18(%rbx), %rbp           #  78    0x6867d  4      OPC=movq_r64_m64      
  movq %rbp, %rax                 #  79    0x68681  3      OPC=movq_r64_r64      
  subq 0x10(%rbx), %rax           #  80    0x68684  4      OPC=subq_r64_m64      
  leaq (%rdx,%rax,1), %rbp        #  81    0x68688  4      OPC=leaq_r64_m16      
  jmpq .L_68769                   #  82    0x6868c  5      OPC=jmpq_label_1      
.L_68691:                         #        0x68691  0      OPC=<label>           
  testl %eax, %eax                #  83    0x68691  2      OPC=testl_r32_r32     
  jle .L_686b3                    #  84    0x68693  2      OPC=jle_label         
  movq 0xa0(%rbx), %rdx           #  85    0x68695  7      OPC=movq_r64_m64      
  movq 0x20(%rdx), %r12           #  86    0x6869c  4      OPC=movq_r64_m64      
  subq 0x18(%rdx), %r12           #  87    0x686a0  4      OPC=subq_r64_m64      
  sarq $0x2, %r12                 #  88    0x686a4  4      OPC=sarq_r64_imm8     
  cltq                            #  89    0x686a8  2      OPC=cltq              
  imulq %rax, %r12                #  90    0x686aa  4      OPC=imulq_r64_r64     
  jmpq .L_68745                   #  91    0x686ae  5      OPC=jmpq_label_1      
.L_686b3:                         #        0x686b3  0      OPC=<label>           
  movq 0xa0(%rbx), %r15           #  92    0x686b3  7      OPC=movq_r64_m64      
  movq 0x20(%r15), %rax           #  93    0x686ba  4      OPC=movq_r64_m64      
  movq 0x18(%r15), %r14           #  94    0x686be  4      OPC=movq_r64_m64      
  movq %rax, (%rsp)               #  95    0x686c2  4      OPC=movq_m64_r64      
  movq %rax, %rsi                 #  96    0x686c6  3      OPC=movq_r64_r64      
  subq %r14, %rsi                 #  97    0x686c9  3      OPC=subq_r64_r64      
  movq %rsi, 0x8(%rsp)            #  98    0x686cc  5      OPC=movq_m64_r64      
  movq %rsi, %rdi                 #  99    0x686d1  3      OPC=movq_r64_r64      
  callq .memalign_plt             #  100   0x686d4  5      OPC=callq_label       
  movq %rax, %r13                 #  101   0x686d9  3      OPC=movq_r64_r64      
  movq %rax, 0x18(%rsp)           #  102   0x686dc  5      OPC=movq_m64_r64      
  movq %r14, 0x20(%rsp)           #  103   0x686e1  5      OPC=movq_m64_r64      
  movq 0x60(%r15), %rax           #  104   0x686e6  4      OPC=movq_r64_m64      
  movq %rax, 0x10(%rsp)           #  105   0x686ea  5      OPC=movq_m64_r64      
  leaq 0x10(%rsp), %rsi           #  106   0x686ef  5      OPC=leaq_r64_m16      
  leaq 0x18(%rsp), %rax           #  107   0x686f4  5      OPC=leaq_r64_m16      
  pushq %rax                      #  108   0x686f9  1      OPC=pushq_r64_1       
  movq 0x10(%rsp), %rax           #  109   0x686fa  5      OPC=movq_r64_m64      
  addq %r13, %rax                 #  110   0x686ff  3      OPC=addq_r64_r64      
  pushq %rax                      #  111   0x68702  1      OPC=pushq_r64_1       
  movq %r13, %r9                  #  112   0x68703  3      OPC=movq_r64_r64      
  leaq 0x30(%rsp), %r8            #  113   0x68706  5      OPC=leaq_r64_m16      
  movq 0x10(%rsp), %rcx           #  114   0x6870b  5      OPC=movq_r64_m64      
  movq %r14, %rdx                 #  115   0x68710  3      OPC=movq_r64_r64      
  movq %r12, %rdi                 #  116   0x68713  3      OPC=movq_r64_r64      
  callq 0x8(%r12)                 #  117   0x68716  5      OPC=callq_m64         
  addq $0x10, %rsp                #  118   0x6871b  4      OPC=addq_r64_imm8     
  testl %eax, %eax                #  119   0x6871f  2      OPC=testl_r32_r32     
  je .L_68735                     #  120   0x68721  2      OPC=je_label          
  movq %r13, %rdi                 #  121   0x68723  3      OPC=movq_r64_r64      
  callq .L_1f8d0                  #  122   0x68726  5      OPC=callq_label       
  movl $0xffffffff, %eax          #  123   0x6872b  6      OPC=movl_r32_imm32_1  
  jmpq .L_68cf5                   #  124   0x68731  5      OPC=jmpq_label_1      
.L_68735:                         #        0x68736  0      OPC=<label>           
  movq 0x18(%rsp), %r12           #  125   0x68736  5      OPC=movq_r64_m64      
  subq %r13, %r12                 #  126   0x6873b  3      OPC=subq_r64_r64      
  movq %r13, %rdi                 #  127   0x6873e  3      OPC=movq_r64_r64      
  callq .L_1f8d0                  #  128   0x68741  5      OPC=callq_label       
.L_68745:                         #        0x68746  0      OPC=<label>           
  testb %bpl, %bpl                #  129   0x68746  3      OPC=testb_r8_r8       
  je .L_68757                     #  130   0x68749  2      OPC=je_label          
  movq 0x28(%rbx), %rbp           #  131   0x6874b  4      OPC=movq_r64_m64      
  subq 0x20(%rbx), %rbp           #  132   0x6874f  4      OPC=subq_r64_m64      
  addq %r12, %rbp                 #  133   0x68753  3      OPC=addq_r64_r64      
  jmpq .L_68769                   #  134   0x68756  2      OPC=jmpq_label        
.L_68757:                         #        0x68758  0      OPC=<label>           
  movq 0x28(%rbx), %rbp           #  135   0x68758  4      OPC=movq_r64_m64      
  subq 0x10(%rbx), %rbp           #  136   0x6875c  4      OPC=subq_r64_m64      
  addq %r12, %rbp                 #  137   0x68760  3      OPC=addq_r64_r64      
  jmpq .L_68769                   #  138   0x68763  2      OPC=jmpq_label        
.L_68764:                         #        0x68765  0      OPC=<label>           
  movl $0x0, %ebp                 #  139   0x68765  5      OPC=movl_r32_imm32    
.L_68769:                         #        0x6876a  0      OPC=<label>           
  movq 0x90(%rbx), %rax           #  140   0x6876a  7      OPC=movq_r64_m64      
  cmpq $0xff, %rax                #  141   0x68771  4      OPC=cmpq_r64_imm8     
  jne .L_6879a                    #  142   0x68775  2      OPC=jne_label         
  movq 0xd8(%rbx), %rax           #  143   0x68777  7      OPC=movq_r64_m64      
  movl $0x1, %edx                 #  144   0x6877e  5      OPC=movl_r32_imm32    
  movl $0x0, %esi                 #  145   0x68783  5      OPC=movl_r32_imm32    
  movq %rbx, %rdi                 #  146   0x68788  3      OPC=movq_r64_r64      
  callq 0x80(%rax)                #  147   0x6878b  6      OPC=callq_m64         
  cmpq $0xff, %rax                #  148   0x68791  4      OPC=cmpq_r64_imm8     
  je .L_68c79                     #  149   0x68795  6      OPC=je_label_1        
.L_6879a:                         #        0x6879b  0      OPC=<label>           
  addq %rbp, %rax                 #  150   0x6879b  3      OPC=addq_r64_r64      
  jns .L_68cf5                    #  151   0x6879e  6      OPC=jns_label_1       
  movq 0x3226d6(%rip), %rax       #  152   0x687a4  7      OPC=movq_r64_m64      
  movl $0x16, (%rax)              #  153   0x687ab  6      OPC=movl_m32_imm32    
  nop                             #  154   0x687b1  1      OPC=nop               
  movq $0xffffffff, %rax          #  155   0x687b2  7      OPC=movq_r64_imm32    
  jmpq .L_68cf5                   #  156   0x687b9  5      OPC=jmpq_label_1      
.L_687bd:                         #        0x687be  0      OPC=<label>           
  movq %rsi, %rbp                 #  157   0x687be  3      OPC=movq_r64_r64      
  movl %edx, %r12d                #  158   0x687c1  3      OPC=movl_r32_r32      
  movq 0xa0(%rdi), %rax           #  159   0x687c4  7      OPC=movq_r64_m64      
  movq 0x8(%rax), %rdi            #  160   0x687cb  4      OPC=movq_r64_m64      
  cmpq %rdi, 0x10(%rax)           #  161   0x687cf  4      OPC=cmpq_m64_r64      
  jne .L_687de                    #  162   0x687d3  2      OPC=jne_label         
  movq 0x20(%rax), %rdi           #  163   0x687d5  4      OPC=movq_r64_m64      
  cmpq %rdi, 0x18(%rax)           #  164   0x687d9  4      OPC=cmpq_m64_r64      
  je .L_687f0                     #  165   0x687dd  2      OPC=je_label          
.L_687de:                         #        0x687df  0      OPC=<label>           
  movl $0x0, %r13d                #  166   0x687df  6      OPC=movl_r32_imm32    
  movq 0x18(%rax), %rsi           #  167   0x687e5  4      OPC=movq_r64_m64      
  cmpq %rsi, 0x20(%rax)           #  168   0x687e9  4      OPC=cmpq_m64_r64      
  ja .L_687fe                     #  169   0x687ed  2      OPC=ja_label          
  jmpq .L_687f6                   #  170   0x687ef  2      OPC=jmpq_label        
.L_687f0:                         #        0x687f1  0      OPC=<label>           
  movl $0x1, %r13d                #  171   0x687f1  6      OPC=movl_r32_imm32    
.L_687f6:                         #        0x687f7  0      OPC=<label>           
  testl $0x800, (%rbx)            #  172   0x687f7  6      OPC=testl_m32_imm32   
  je .L_68815                     #  173   0x687fd  2      OPC=je_label          
.L_687fe:                         #        0x687ff  0      OPC=<label>           
  movq %rbx, %rdi                 #  174   0x687ff  3      OPC=movq_r64_r64      
  callq ._IO_switch_to_wget_mode  #  175   0x68802  5      OPC=callq_label       
  movl %eax, %edx                 #  176   0x68807  2      OPC=movl_r32_r32      
  movl $0xffffffff, %eax          #  177   0x68809  6      OPC=movl_r32_imm32_1  
  testl %edx, %edx                #  178   0x6880f  2      OPC=testl_r32_r32     
  jne .L_68cf5                    #  179   0x68811  6      OPC=jne_label_1       
.L_68815:                         #        0x68817  0      OPC=<label>           
  movq 0xa0(%rbx), %rax           #  180   0x68817  7      OPC=movq_r64_m64      
  cmpq $0x0, 0x30(%rax)           #  181   0x6881e  5      OPC=cmpq_m64_imm8     
  jne .L_68caf                    #  182   0x68823  6      OPC=jne_label_1       
  movq 0x10(%rax), %rdi           #  183   0x68829  4      OPC=movq_r64_m64      
  testq %rdi, %rdi                #  184   0x6882d  3      OPC=testq_r64_r64     
  je .L_6883b                     #  185   0x68830  2      OPC=je_label          
  callq .L_1f8d0                  #  186   0x68832  5      OPC=callq_label       
  andl $0xfffffeff, (%rbx)        #  187   0x68837  6      OPC=andl_m32_imm32    
.L_6883b:                         #        0x6883d  0      OPC=<label>           
  movq %rbx, %rdi                 #  188   0x6883d  3      OPC=movq_r64_r64      
  callq ._IO_doallocbuf           #  189   0x68840  5      OPC=callq_label       
  movq 0x38(%rbx), %rax           #  190   0x68845  4      OPC=movq_r64_m64      
  movq %rax, 0x28(%rbx)           #  191   0x68849  4      OPC=movq_m64_r64      
  movq %rax, 0x20(%rbx)           #  192   0x6884d  4      OPC=movq_m64_r64      
  movq %rax, 0x30(%rbx)           #  193   0x68851  4      OPC=movq_m64_r64      
  movq %rax, 0x18(%rbx)           #  194   0x68855  4      OPC=movq_m64_r64      
  movq %rax, 0x8(%rbx)            #  195   0x68859  4      OPC=movq_m64_r64      
  movq %rax, 0x10(%rbx)           #  196   0x6885d  4      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rax           #  197   0x68861  7      OPC=movq_r64_m64      
  movq 0x30(%rax), %rdx           #  198   0x68868  4      OPC=movq_r64_m64      
  movq %rdx, 0x20(%rax)           #  199   0x6886c  4      OPC=movq_m64_r64      
  movq %rdx, 0x18(%rax)           #  200   0x68870  4      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rax           #  201   0x68874  7      OPC=movq_r64_m64      
  movq 0x30(%rax), %rdx           #  202   0x6887b  4      OPC=movq_r64_m64      
  movq %rdx, 0x28(%rax)           #  203   0x6887f  4      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rax           #  204   0x68883  7      OPC=movq_r64_m64      
  movq 0x30(%rax), %rdx           #  205   0x6888a  4      OPC=movq_r64_m64      
  movq %rdx, 0x10(%rax)           #  206   0x6888e  4      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rax           #  207   0x68892  7      OPC=movq_r64_m64      
  movq 0x30(%rax), %rdx           #  208   0x68899  4      OPC=movq_r64_m64      
  movq %rdx, (%rax)               #  209   0x6889d  3      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rax           #  210   0x688a0  7      OPC=movq_r64_m64      
  movq 0x30(%rax), %rdx           #  211   0x688a7  4      OPC=movq_r64_m64      
  movq %rdx, 0x8(%rax)            #  212   0x688ab  4      OPC=movq_m64_r64      
  jmpq .L_68caf                   #  213   0x688af  5      OPC=jmpq_label_1      
.L_688b2:                         #        0x688b4  0      OPC=<label>           
  movq 0xa0(%rbx), %rcx           #  214   0x688b4  7      OPC=movq_r64_m64      
  movq 0x8(%rcx), %rdx            #  215   0x688bb  4      OPC=movq_r64_m64      
  subq (%rcx), %rdx               #  216   0x688bf  3      OPC=subq_r64_m64      
  sarq $0x2, %rdx                 #  217   0x688c2  4      OPC=sarq_r64_imm8     
  cltq                            #  218   0x688c6  2      OPC=cltq              
  imulq %rax, %rdx                #  219   0x688c8  4      OPC=imulq_r64_r64     
  subq %rdx, %rbp                 #  220   0x688cc  3      OPC=subq_r64_r64      
  movq 0x8(%rbx), %rax            #  221   0x688cf  4      OPC=movq_r64_m64      
  subq 0x10(%rbx), %rax           #  222   0x688d3  4      OPC=subq_r64_m64      
  addq %rax, %rbp                 #  223   0x688d7  3      OPC=addq_r64_r64      
  jmpq .L_68938                   #  224   0x688da  2      OPC=jmpq_label        
.L_688da:                         #        0x688dc  0      OPC=<label>           
  movq 0xa0(%rbx), %rax           #  225   0x688dc  7      OPC=movq_r64_m64      
  movq (%rax), %r8                #  226   0x688e3  3      OPC=movq_r64_m64      
  subq 0x10(%rax), %r8            #  227   0x688e6  4      OPC=subq_r64_m64      
  movq 0x60(%rax), %rdx           #  228   0x688ea  4      OPC=movq_r64_m64      
  movq %rdx, 0x58(%rax)           #  229   0x688ee  4      OPC=movq_m64_r64      
  movq 0x10(%rbx), %rcx           #  230   0x688f2  4      OPC=movq_r64_m64      
  movq 0x18(%rbx), %rdx           #  231   0x688f6  4      OPC=movq_r64_m64      
  movq 0xa0(%rbx), %rax           #  232   0x688fa  7      OPC=movq_r64_m64      
  leaq 0x58(%rax), %rsi           #  233   0x68901  4      OPC=leaq_r64_m16      
  sarq $0x2, %r8                  #  234   0x68905  4      OPC=sarq_r64_imm8     
  movq %r14, %rdi                 #  235   0x68909  3      OPC=movq_r64_r64      
  callq 0x30(%r14)                #  236   0x6890c  4      OPC=callq_m64         
  movslq %eax, %rdx               #  237   0x68910  3      OPC=movslq_r64_r32    
  movq %rdx, %rax                 #  238   0x68913  3      OPC=movq_r64_r64      
  addq 0x18(%rbx), %rax           #  239   0x68916  4      OPC=addq_r64_m64      
  movq %rax, 0x8(%rbx)            #  240   0x6891a  4      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rax           #  241   0x6891e  7      OPC=movq_r64_m64      
  movq (%rax), %rcx               #  242   0x68925  3      OPC=movq_r64_m64      
  movq %rcx, 0x8(%rax)            #  243   0x68928  4      OPC=movq_m64_r64      
  movq 0x18(%rbx), %rax           #  244   0x6892c  4      OPC=movq_r64_m64      
  subq 0x10(%rbx), %rax           #  245   0x68930  4      OPC=subq_r64_m64      
  addq %rdx, %rax                 #  246   0x68934  3      OPC=addq_r64_r64      
  addq %rax, %rbp                 #  247   0x68937  3      OPC=addq_r64_r64      
.L_68938:                         #        0x6893a  0      OPC=<label>           
  movq 0x90(%rbx), %rax           #  248   0x6893a  7      OPC=movq_r64_m64      
  cmpq $0xff, %rax                #  249   0x68941  4      OPC=cmpq_r64_imm8     
  je .L_68bb2                     #  250   0x68945  6      OPC=je_label_1        
  addq %rax, %rbp                 #  251   0x6894b  3      OPC=addq_r64_r64      
  movl $0x0, %r12d                #  252   0x6894e  6      OPC=movl_r32_imm32    
  jmpq .L_689a1                   #  253   0x68954  2      OPC=jmpq_label        
.L_68954:                         #        0x68956  0      OPC=<label>           
  movq 0xd8(%rbx), %rax           #  254   0x68956  7      OPC=movq_r64_m64      
  leaq 0x20(%rsp), %rsi           #  255   0x6895d  5      OPC=leaq_r64_m16      
  movq %rbx, %rdi                 #  256   0x68962  3      OPC=movq_r64_r64      
  callq 0x90(%rax)                #  257   0x68965  6      OPC=callq_m64         
  testl %eax, %eax                #  258   0x6896b  2      OPC=testl_r32_r32     
  jne .L_68bb2                    #  259   0x6896d  6      OPC=jne_label_1       
  movl 0x38(%rsp), %eax           #  260   0x68973  4      OPC=movl_r32_m32      
  andl $0xf000, %eax              #  261   0x68977  5      OPC=andl_eax_imm32    
  cmpl $0x8000, %eax              #  262   0x6897c  5      OPC=cmpl_eax_imm32    
  jne .L_68bb2                    #  263   0x68981  6      OPC=jne_label_1       
  addq 0x50(%rsp), %rbp           #  264   0x68987  5      OPC=addq_r64_m64      
  movl $0x0, %r12d                #  265   0x6898c  6      OPC=movl_r32_imm32    
.L_68990:                         #        0x68992  0      OPC=<label>           
  movq 0x90(%rbx), %rax           #  266   0x68992  7      OPC=movq_r64_m64      
  cmpq $0xff, %rax                #  267   0x68999  4      OPC=cmpq_r64_imm8     
  je .L_68a73                     #  268   0x6899d  6      OPC=je_label_1        
.L_689a1:                         #        0x689a3  0      OPC=<label>           
  cmpq $0x0, 0x18(%rbx)           #  269   0x689a3  5      OPC=cmpq_m64_imm8     
  je .L_68a73                     #  270   0x689a8  6      OPC=je_label_1        
  testl $0x100, (%rbx)            #  271   0x689ae  6      OPC=testl_m32_imm32   
  jne .L_68a73                    #  272   0x689b4  6      OPC=jne_label_1       
  movq 0x38(%rbx), %rcx           #  273   0x689ba  4      OPC=movq_r64_m64      
  movq %rcx, %rdx                 #  274   0x689be  3      OPC=movq_r64_r64      
  subq 0x10(%rbx), %rdx           #  275   0x689c1  4      OPC=subq_r64_m64      
  addq %rax, %rdx                 #  276   0x689c5  3      OPC=addq_r64_r64      
  cmpq %rdx, %rbp                 #  277   0x689c8  3      OPC=cmpq_r64_r64      
  jl .L_68a73                     #  278   0x689cb  6      OPC=jl_label_1        
  cmpq %rax, %rbp                 #  279   0x689d1  3      OPC=cmpq_r64_r64      
  jge .L_68a73                    #  280   0x689d4  6      OPC=jge_label_1       
  movq %rcx, 0x18(%rbx)           #  281   0x689da  4      OPC=movq_m64_r64      
  movq %rbp, %rax                 #  282   0x689de  3      OPC=movq_r64_r64      
  subq %rdx, %rax                 #  283   0x689e1  3      OPC=subq_r64_r64      
  addq %rcx, %rax                 #  284   0x689e4  3      OPC=addq_r64_r64      
  movq %rax, 0x8(%rbx)            #  285   0x689e7  4      OPC=movq_m64_r64      
  movq %rcx, 0x28(%rbx)           #  286   0x689eb  4      OPC=movq_m64_r64      
  movq %rcx, 0x20(%rbx)           #  287   0x689ef  4      OPC=movq_m64_r64      
  movq %rcx, 0x30(%rbx)           #  288   0x689f3  4      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rax           #  289   0x689f7  7      OPC=movq_r64_m64      
  movq 0x30(%rax), %rdx           #  290   0x689fe  4      OPC=movq_r64_m64      
  movq %rdx, 0x10(%rax)           #  291   0x68a02  4      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rax           #  292   0x68a06  7      OPC=movq_r64_m64      
  movq 0x30(%rax), %rdx           #  293   0x68a0d  4      OPC=movq_r64_m64      
  movq %rdx, (%rax)               #  294   0x68a11  3      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rax           #  295   0x68a14  7      OPC=movq_r64_m64      
  movq 0x30(%rax), %rdx           #  296   0x68a1b  4      OPC=movq_r64_m64      
  movq %rdx, 0x8(%rax)            #  297   0x68a1f  4      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rax           #  298   0x68a23  7      OPC=movq_r64_m64      
  movq 0x30(%rax), %rdx           #  299   0x68a2a  4      OPC=movq_r64_m64      
  movq %rdx, 0x20(%rax)           #  300   0x68a2e  4      OPC=movq_m64_r64      
  movq %rdx, 0x18(%rax)           #  301   0x68a32  4      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rax           #  302   0x68a36  7      OPC=movq_r64_m64      
  movq 0x30(%rax), %rdx           #  303   0x68a3d  4      OPC=movq_r64_m64      
  movq %rdx, 0x28(%rax)           #  304   0x68a41  4      OPC=movq_m64_r64      
  movl $0x0, %esi                 #  305   0x68a45  5      OPC=movl_r32_imm32    
  movq %rbx, %rdi                 #  306   0x68a4a  3      OPC=movq_r64_r64      
  callq .adjust_wide_data         #  307   0x68a4d  5      OPC=callq_label       
  testl %eax, %eax                #  308   0x68a52  2      OPC=testl_r32_r32     
  jne .L_68bb2                    #  309   0x68a54  6      OPC=jne_label_1       
  andl $0xffffffef, (%rbx)        #  310   0x68a5a  6      OPC=andl_m32_imm32    
  nop                             #  311   0x68a60  1      OPC=nop               
  nop                             #  312   0x68a61  1      OPC=nop               
  nop                             #  313   0x68a62  1      OPC=nop               
  movq 0x90(%rbx), %rsi           #  314   0x68a63  7      OPC=movq_r64_m64      
  movq %rbp, %rax                 #  315   0x68a6a  3      OPC=movq_r64_r64      
  testq %rsi, %rsi                #  316   0x68a6d  3      OPC=testq_r64_r64     
  js .L_68cf5                     #  317   0x68a70  6      OPC=js_label_1        
  jmpq .L_68c53                   #  318   0x68a76  5      OPC=jmpq_label_1      
.L_68a73:                         #        0x68a7b  0      OPC=<label>           
  testb $0x4, (%rbx)              #  319   0x68a7b  3      OPC=testb_m8_imm8     
  jne .L_68bb2                    #  320   0x68a7e  6      OPC=jne_label_1       
  movq 0x38(%rbx), %rdx           #  321   0x68a84  4      OPC=movq_r64_m64      
  movq 0x40(%rbx), %rax           #  322   0x68a88  4      OPC=movq_r64_m64      
  movq %rdx, %rsi                 #  323   0x68a8c  3      OPC=movq_r64_r64      
  subq %rax, %rsi                 #  324   0x68a8f  3      OPC=subq_r64_r64      
  andq %rbp, %rsi                 #  325   0x68a92  3      OPC=andq_r64_r64      
  movq %rbp, %r14                 #  326   0x68a95  3      OPC=movq_r64_r64      
  subq %rsi, %r14                 #  327   0x68a98  3      OPC=subq_r64_r64      
  subq %rdx, %rax                 #  328   0x68a9b  3      OPC=subq_r64_r64      
  cmpq %rax, %r14                 #  329   0x68a9e  3      OPC=cmpq_r64_r64      
  jg .L_68cc4                     #  330   0x68aa1  6      OPC=jg_label_1        
  movq 0xd8(%rbx), %rax           #  331   0x68aa7  7      OPC=movq_r64_m64      
  movl $0x0, %edx                 #  332   0x68aae  5      OPC=movl_r32_imm32    
  movq %rbx, %rdi                 #  333   0x68ab3  3      OPC=movq_r64_r64      
  callq 0x80(%rax)                #  334   0x68ab6  6      OPC=callq_m64         
  movq %rax, %r15                 #  335   0x68abc  3      OPC=movq_r64_r64      
  testq %rax, %rax                #  336   0x68abf  3      OPC=testq_r64_r64     
  js .L_68c82                     #  337   0x68ac2  6      OPC=js_label_1        
  testq %r14, %r14                #  338   0x68ac8  3      OPC=testq_r64_r64     
  je .L_68b0c                     #  339   0x68acb  2      OPC=je_label          
  movq 0xd8(%rbx), %rax           #  340   0x68acd  7      OPC=movq_r64_m64      
  movq 0x70(%rax), %rax           #  341   0x68ad4  4      OPC=movq_r64_m64      
  movq %r14, %rdx                 #  342   0x68ad8  3      OPC=movq_r64_r64      
  testl %r13d, %r13d              #  343   0x68adb  3      OPC=testl_r32_r32     
  jne .L_68ae0                    #  344   0x68ade  2      OPC=jne_label         
  movq 0x40(%rbx), %rdx           #  345   0x68ae0  4      OPC=movq_r64_m64      
  subq 0x38(%rbx), %rdx           #  346   0x68ae4  4      OPC=subq_r64_m64      
.L_68ae0:                         #        0x68ae8  0      OPC=<label>           
  movq 0x38(%rbx), %rsi           #  347   0x68ae8  4      OPC=movq_r64_m64      
  movq %rbx, %rdi                 #  348   0x68aec  3      OPC=movq_r64_r64      
  callq %rax                      #  349   0x68aef  2      OPC=callq_r64         
  movq %rax, %r13                 #  350   0x68af1  3      OPC=movq_r64_r64      
  cmpq %rax, %r14                 #  351   0x68af4  3      OPC=cmpq_r64_r64      
  jle .L_68b12                    #  352   0x68af7  2      OPC=jle_label         
  cmpq $0xff, %rax                #  353   0x68af9  4      OPC=cmpq_r64_imm8     
  je .L_68ba9                     #  354   0x68afd  6      OPC=je_label_1        
  subq %rax, %r14                 #  355   0x68b03  3      OPC=subq_r64_r64      
  movq %r14, %rbp                 #  356   0x68b06  3      OPC=movq_r64_r64      
  movl $0x1, %r12d                #  357   0x68b09  6      OPC=movl_r32_imm32    
  jmpq .L_68bb2                   #  358   0x68b0f  5      OPC=jmpq_label_1      
.L_68b0c:                         #        0x68b14  0      OPC=<label>           
  movl $0x0, %r13d                #  359   0x68b14  6      OPC=movl_r32_imm32    
.L_68b12:                         #        0x68b1a  0      OPC=<label>           
  movq 0x38(%rbx), %rax           #  360   0x68b1a  4      OPC=movq_r64_m64      
  movq %rax, 0x18(%rbx)           #  361   0x68b1e  4      OPC=movq_m64_r64      
  addq %rax, %r14                 #  362   0x68b22  3      OPC=addq_r64_r64      
  movq %r14, 0x8(%rbx)            #  363   0x68b25  4      OPC=movq_m64_r64      
  leaq (%rax,%r13,1), %rdx        #  364   0x68b29  4      OPC=leaq_r64_m16      
  movq %rdx, 0x10(%rbx)           #  365   0x68b2d  4      OPC=movq_m64_r64      
  movq %rax, 0x28(%rbx)           #  366   0x68b31  4      OPC=movq_m64_r64      
  movq %rax, 0x20(%rbx)           #  367   0x68b35  4      OPC=movq_m64_r64      
  movq %rax, 0x30(%rbx)           #  368   0x68b39  4      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rax           #  369   0x68b3d  7      OPC=movq_r64_m64      
  movq 0x30(%rax), %rdx           #  370   0x68b44  4      OPC=movq_r64_m64      
  movq %rdx, 0x10(%rax)           #  371   0x68b48  4      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rax           #  372   0x68b4c  7      OPC=movq_r64_m64      
  movq 0x30(%rax), %rdx           #  373   0x68b53  4      OPC=movq_r64_m64      
  movq %rdx, (%rax)               #  374   0x68b57  3      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rax           #  375   0x68b5a  7      OPC=movq_r64_m64      
  movq 0x30(%rax), %rdx           #  376   0x68b61  4      OPC=movq_r64_m64      
  movq %rdx, 0x8(%rax)            #  377   0x68b65  4      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rax           #  378   0x68b69  7      OPC=movq_r64_m64      
  movq 0x30(%rax), %rdx           #  379   0x68b70  4      OPC=movq_r64_m64      
  movq %rdx, 0x20(%rax)           #  380   0x68b74  4      OPC=movq_m64_r64      
  movq %rdx, 0x18(%rax)           #  381   0x68b78  4      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rax           #  382   0x68b7c  7      OPC=movq_r64_m64      
  movq 0x30(%rax), %rdx           #  383   0x68b83  4      OPC=movq_r64_m64      
  movq %rdx, 0x28(%rax)           #  384   0x68b87  4      OPC=movq_m64_r64      
  movl $0x1, %esi                 #  385   0x68b8b  5      OPC=movl_r32_imm32    
  movq %rbx, %rdi                 #  386   0x68b90  3      OPC=movq_r64_r64      
  callq .adjust_wide_data         #  387   0x68b93  5      OPC=callq_label       
  testl %eax, %eax                #  388   0x68b98  2      OPC=testl_r32_r32     
  jne .L_68bb2                    #  389   0x68b9a  2      OPC=jne_label         
  addq %r13, %r15                 #  390   0x68b9c  3      OPC=addq_r64_r64      
  movq %r15, 0x90(%rbx)           #  391   0x68b9f  7      OPC=movq_m64_r64      
  andl $0xffffffef, (%rbx)        #  392   0x68ba6  6      OPC=andl_m32_imm32    
  nop                             #  393   0x68bac  1      OPC=nop               
  nop                             #  394   0x68bad  1      OPC=nop               
  nop                             #  395   0x68bae  1      OPC=nop               
  movq %rbp, %rax                 #  396   0x68baf  3      OPC=movq_r64_r64      
  jmpq .L_68cf5                   #  397   0x68bb2  5      OPC=jmpq_label_1      
.L_68ba9:                         #        0x68bb7  0      OPC=<label>           
  movq %r14, %rbp                 #  398   0x68bb7  3      OPC=movq_r64_r64      
  movl $0x1, %r12d                #  399   0x68bba  6      OPC=movl_r32_imm32    
.L_68bb2:                         #        0x68bc0  0      OPC=<label>           
  movq %rbx, %rdi                 #  400   0x68bc0  3      OPC=movq_r64_r64      
  callq ._IO_unsave_markers       #  401   0x68bc3  5      OPC=callq_label       
  movq 0xd8(%rbx), %rax           #  402   0x68bc8  7      OPC=movq_r64_m64      
  movl %r12d, %edx                #  403   0x68bcf  3      OPC=movl_r32_r32      
  movq %rbp, %rsi                 #  404   0x68bd2  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                 #  405   0x68bd5  3      OPC=movq_r64_r64      
  callq 0x80(%rax)                #  406   0x68bd8  6      OPC=callq_m64         
  cmpq $0xff, %rax                #  407   0x68bde  4      OPC=cmpq_r64_imm8     
  je .L_68cf5                     #  408   0x68be2  6      OPC=je_label_1        
  andl $0xffffffef, (%rbx)        #  409   0x68be8  6      OPC=andl_m32_imm32    
  nop                             #  410   0x68bee  1      OPC=nop               
  nop                             #  411   0x68bef  1      OPC=nop               
  nop                             #  412   0x68bf0  1      OPC=nop               
  movq %rax, 0x90(%rbx)           #  413   0x68bf1  7      OPC=movq_m64_r64      
  movq 0x38(%rbx), %rdx           #  414   0x68bf8  4      OPC=movq_r64_m64      
  movq %rdx, 0x18(%rbx)           #  415   0x68bfc  4      OPC=movq_m64_r64      
  movq %rdx, 0x8(%rbx)            #  416   0x68c00  4      OPC=movq_m64_r64      
  movq %rdx, 0x10(%rbx)           #  417   0x68c04  4      OPC=movq_m64_r64      
  movq %rdx, 0x28(%rbx)           #  418   0x68c08  4      OPC=movq_m64_r64      
  movq %rdx, 0x20(%rbx)           #  419   0x68c0c  4      OPC=movq_m64_r64      
  movq %rdx, 0x30(%rbx)           #  420   0x68c10  4      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rdx           #  421   0x68c14  7      OPC=movq_r64_m64      
  movq 0x30(%rdx), %rcx           #  422   0x68c1b  4      OPC=movq_r64_m64      
  movq %rcx, 0x10(%rdx)           #  423   0x68c1f  4      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rdx           #  424   0x68c23  7      OPC=movq_r64_m64      
  movq 0x30(%rdx), %rcx           #  425   0x68c2a  4      OPC=movq_r64_m64      
  movq %rcx, (%rdx)               #  426   0x68c2e  3      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rdx           #  427   0x68c31  7      OPC=movq_r64_m64      
  movq 0x30(%rdx), %rcx           #  428   0x68c38  4      OPC=movq_r64_m64      
  movq %rcx, 0x8(%rdx)            #  429   0x68c3c  4      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rdx           #  430   0x68c40  7      OPC=movq_r64_m64      
  movq 0x30(%rdx), %rcx           #  431   0x68c47  4      OPC=movq_r64_m64      
  movq %rcx, 0x20(%rdx)           #  432   0x68c4b  4      OPC=movq_m64_r64      
  movq %rcx, 0x18(%rdx)           #  433   0x68c4f  4      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rdx           #  434   0x68c53  7      OPC=movq_r64_m64      
  movq 0x30(%rdx), %rcx           #  435   0x68c5a  4      OPC=movq_r64_m64      
  movq %rcx, 0x28(%rdx)           #  436   0x68c5e  4      OPC=movq_m64_r64      
  jmpq .L_68cf5                   #  437   0x68c62  5      OPC=jmpq_label_1      
.L_68c53:                         #        0x68c67  0      OPC=<label>           
  movq 0xd8(%rbx), %rax           #  438   0x68c67  7      OPC=movq_r64_m64      
  movl $0x0, %edx                 #  439   0x68c6e  5      OPC=movl_r32_imm32    
  movq %rbx, %rdi                 #  440   0x68c73  3      OPC=movq_r64_r64      
  callq 0x80(%rax)                #  441   0x68c76  6      OPC=callq_m64         
  movq %rbp, %rax                 #  442   0x68c7c  3      OPC=movq_r64_r64      
  jmpq .L_68cf5                   #  443   0x68c7f  5      OPC=jmpq_label_1      
.L_68c70:                         #        0x68c84  0      OPC=<label>           
  movq $0xffffffff, %rax          #  444   0x68c84  7      OPC=movq_r64_imm32    
  jmpq .L_68cf5                   #  445   0x68c8b  2      OPC=jmpq_label        
.L_68c79:                         #        0x68c8d  0      OPC=<label>           
  movq $0xffffffff, %rax          #  446   0x68c8d  7      OPC=movq_r64_imm32    
  jmpq .L_68cf5                   #  447   0x68c94  2      OPC=jmpq_label        
.L_68c82:                         #        0x68c96  0      OPC=<label>           
  movq $0xffffffff, %rax          #  448   0x68c96  7      OPC=movq_r64_imm32    
  jmpq .L_68cf5                   #  449   0x68c9d  2      OPC=jmpq_label        
.L_68c8b:                         #        0x68c9f  0      OPC=<label>           
  movq $0xffffffff, %rax          #  450   0x68c9f  7      OPC=movq_r64_imm32    
  jmpq .L_68cf5                   #  451   0x68ca6  2      OPC=jmpq_label        
.L_68c94:                         #        0x68ca8  0      OPC=<label>           
  movq 0x98(%rbx), %r14           #  452   0x68ca8  7      OPC=movq_r64_m64      
  movq %r14, %rdi                 #  453   0x68caf  3      OPC=movq_r64_r64      
  callq 0x20(%r14)                #  454   0x68cb2  4      OPC=callq_m64         
  testl %eax, %eax                #  455   0x68cb6  2      OPC=testl_r32_r32     
  jg .L_688b2                     #  456   0x68cb8  6      OPC=jg_label_1        
  jmpq .L_688da                   #  457   0x68cbe  5      OPC=jmpq_label_1      
.L_68caf:                         #        0x68cc3  0      OPC=<label>           
  cmpl $0x1, %r12d                #  458   0x68cc3  4      OPC=cmpl_r32_imm8     
  je .L_68c94                     #  459   0x68cc7  2      OPC=je_label          
  cmpl $0x2, %r12d                #  460   0x68cc9  4      OPC=cmpl_r32_imm8     
  je .L_68954                     #  461   0x68ccd  6      OPC=je_label_1        
  jmpq .L_68990                   #  462   0x68cd3  5      OPC=jmpq_label_1      
.L_68cc4:                         #        0x68cd8  0      OPC=<label>           
  movq 0xd8(%rbx), %rax           #  463   0x68cd8  7      OPC=movq_r64_m64      
  movl $0x0, %edx                 #  464   0x68cdf  5      OPC=movl_r32_imm32    
  movq %rbp, %rsi                 #  465   0x68ce4  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                 #  466   0x68ce7  3      OPC=movq_r64_r64      
  callq 0x80(%rax)                #  467   0x68cea  6      OPC=callq_m64         
  movq %rax, %r15                 #  468   0x68cf0  3      OPC=movq_r64_r64      
  testq %rax, %rax                #  469   0x68cf3  3      OPC=testq_r64_r64     
  js .L_68c8b                     #  470   0x68cf6  2      OPC=js_label          
  movl $0x0, %r14d                #  471   0x68cf8  6      OPC=movl_r32_imm32    
  movl $0x0, %r13d                #  472   0x68cfe  6      OPC=movl_r32_imm32    
  jmpq .L_68b12                   #  473   0x68d04  5      OPC=jmpq_label_1      
.L_68cf5:                         #        0x68d09  0      OPC=<label>           
  addq $0xb8, %rsp                #  474   0x68d09  7      OPC=addq_r64_imm32    
  popq %rbx                       #  475   0x68d10  1      OPC=popq_r64_1        
  popq %rbp                       #  476   0x68d11  1      OPC=popq_r64_1        
  popq %r12                       #  477   0x68d12  2      OPC=popq_r64_1        
  popq %r13                       #  478   0x68d14  2      OPC=popq_r64_1        
  popq %r14                       #  479   0x68d16  2      OPC=popq_r64_1        
  popq %r15                       #  480   0x68d18  2      OPC=popq_r64_1        
  retq                            #  481   0x68d1a  1      OPC=retq              
                                                                                 
.size _IO_wfile_seekoff, .-_IO_wfile_seekoff

