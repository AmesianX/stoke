  .text
  .globl qsort_r
  .type qsort_r, @function

#! file-offset 0x32e5d
#! rip-offset  0x32e5d
#! capacity    705 bytes

# Text                            #  Line  RIP      Bytes  Opcode               
.qsort_r:                         #        0x32e5d  0      OPC=<label>          
  pushq %rbp                      #  1     0x32e5d  1      OPC=pushq_r64_1      
  movq %rsp, %rbp                 #  2     0x32e5e  3      OPC=movq_r64_r64     
  pushq %r15                      #  3     0x32e61  2      OPC=pushq_r64_1      
  pushq %r14                      #  4     0x32e63  2      OPC=pushq_r64_1      
  pushq %r13                      #  5     0x32e65  2      OPC=pushq_r64_1      
  pushq %r12                      #  6     0x32e67  2      OPC=pushq_r64_1      
  pushq %rbx                      #  7     0x32e69  1      OPC=pushq_r64_1      
  subq $0x68, %rsp                #  8     0x32e6a  4      OPC=subq_r64_imm8    
  movq %rdi, %r15                 #  9     0x32e6e  3      OPC=movq_r64_r64     
  movq %rsi, -0x80(%rbp)          #  10    0x32e71  4      OPC=movq_m64_r64     
  movq %rdx, %r12                 #  11    0x32e75  3      OPC=movq_r64_r64     
  movq %rcx, %r14                 #  12    0x32e78  3      OPC=movq_r64_r64     
  movq %r8, %rbx                  #  13    0x32e7b  3      OPC=movq_r64_r64     
  cmpq $0x20, %rdx                #  14    0x32e7e  4      OPC=cmpq_r64_imm8    
  ja .L_32e8d                     #  15    0x32e82  2      OPC=ja_label         
  movq %rsi, %r13                 #  16    0x32e84  3      OPC=movq_r64_r64     
  imulq %rdx, %r13                #  17    0x32e87  4      OPC=imulq_r64_r64    
  jmpq .L_32e98                   #  18    0x32e8b  2      OPC=jmpq_label       
.L_32e8d:                         #        0x32e8d  0      OPC=<label>          
  movq -0x80(%rbp), %r13          #  19    0x32e8d  4      OPC=movq_r64_m64     
  shlq $0x4, %r13                 #  20    0x32e91  4      OPC=shlq_r64_imm8    
  addq %rdx, %r13                 #  21    0x32e95  3      OPC=addq_r64_r64     
.L_32e98:                         #        0x32e98  0      OPC=<label>          
  cmpq $0x3ff, %r13               #  22    0x32e98  7      OPC=cmpq_r64_imm32   
  ja .L_32ec9                     #  23    0x32e9f  2      OPC=ja_label         
  leaq 0x1e(%r13), %rax           #  24    0x32ea1  4      OPC=leaq_r64_m16     
  andq $0xf0, %rax                #  25    0x32ea5  4      OPC=andq_r64_imm8    
  subq %rax, %rsp                 #  26    0x32ea9  3      OPC=subq_r64_r64     
  leaq 0xf(%rsp), %rax            #  27    0x32eac  5      OPC=leaq_r64_m16     
  andq $0xf0, %rax                #  28    0x32eb1  4      OPC=andq_r64_imm8    
  movq %rax, -0x40(%rbp)          #  29    0x32eb5  4      OPC=movq_m64_r64     
  movq $0x0, -0x88(%rbp)          #  30    0x32eb9  11     OPC=movq_m64_imm32   
  jmpq .L_32f9f                   #  31    0x32ec4  5      OPC=jmpq_label_1     
.L_32ec9:                         #        0x32ec9  0      OPC=<label>          
  cmpl $0x0, 0x359f00(%rip)       #  32    0x32ec9  7      OPC=cmpl_m32_imm8    
  jne .L_32f17                    #  33    0x32ed0  2      OPC=jne_label        
  movl $0x55, %edi                #  34    0x32ed2  5      OPC=movl_r32_imm32   
  callq .__sysconf                #  35    0x32ed7  5      OPC=callq_label      
  cmpq $0xff, %rax                #  36    0x32edc  4      OPC=cmpq_r64_imm8    
  movq $0x7fffffffffffffff, %rdx  #  37    0x32ee0  10     OPC=movq_r64_imm64   
  cmoveq %rdx, %rax               #  38    0x32eea  4      OPC=cmoveq_r64_r64   
  movq %rax, %rdx                 #  39    0x32eee  3      OPC=movq_r64_r64     
  leaq 0x3(%rax), %rax            #  40    0x32ef1  4      OPC=leaq_r64_m16     
  testq %rdx, %rdx                #  41    0x32ef5  3      OPC=testq_r64_r64    
  cmovnsq %rdx, %rax              #  42    0x32ef8  4      OPC=cmovnsq_r64_r64  
  sarq $0x2, %rax                 #  43    0x32efc  4      OPC=sarq_r64_imm8    
  movq %rax, 0x359ec1(%rip)       #  44    0x32f00  7      OPC=movq_m64_r64     
  movl $0x1e, %edi                #  45    0x32f07  5      OPC=movl_r32_imm32   
  callq .__sysconf                #  46    0x32f0c  5      OPC=callq_label      
  movl %eax, 0x359eb9(%rip)       #  47    0x32f11  6      OPC=movl_m32_r32     
.L_32f17:                         #        0x32f17  0      OPC=<label>          
  movslq 0x359eb2(%rip), %rcx     #  48    0x32f17  7      OPC=movslq_r64_m32   
  movq %r13, %rax                 #  49    0x32f1e  3      OPC=movq_r64_r64     
  movl $0x0, %edx                 #  50    0x32f21  5      OPC=movl_r32_imm32   
  divq %rcx                       #  51    0x32f26  3      OPC=divq_r64         
  cmpq 0x359e98(%rip), %rax       #  52    0x32f29  7      OPC=cmpq_r64_m64     
  jbe .L_32f4c                    #  53    0x32f30  2      OPC=jbe_label        
  movq %rbx, %r8                  #  54    0x32f32  3      OPC=movq_r64_r64     
  movq %r14, %rcx                 #  55    0x32f35  3      OPC=movq_r64_r64     
  movq %r12, %rdx                 #  56    0x32f38  3      OPC=movq_r64_r64     
  movq -0x80(%rbp), %rsi          #  57    0x32f3b  4      OPC=movq_r64_m64     
  movq %r15, %rdi                 #  58    0x32f3f  3      OPC=movq_r64_r64     
  callq ._quicksort               #  59    0x32f42  5      OPC=callq_label      
  jmpq .L_3310f                   #  60    0x32f47  5      OPC=jmpq_label_1     
.L_32f4c:                         #        0x32f4c  0      OPC=<label>          
  movq 0x357f2d(%rip), %rax       #  61    0x32f4c  7      OPC=movq_r64_m64     
  movl (%rax), %eax               #  62    0x32f53  2      OPC=movl_r32_m32     
  nop                             #  63    0x32f55  1      OPC=nop              
  movl %eax, -0x68(%rbp)          #  64    0x32f56  3      OPC=movl_m32_r32     
  movq %r13, %rdi                 #  65    0x32f59  3      OPC=movq_r64_r64     
  callq .memalign_plt             #  66    0x32f5c  5      OPC=callq_label      
  movq %rax, -0x88(%rbp)          #  67    0x32f61  7      OPC=movq_m64_r64     
  movq 0x357f11(%rip), %rsi       #  68    0x32f68  7      OPC=movq_r64_m64     
  movl -0x68(%rbp), %ecx          #  69    0x32f6f  3      OPC=movl_r32_m32     
  movl %ecx, (%rsi)               #  70    0x32f72  2      OPC=movl_m32_r32     
  nop                             #  71    0x32f74  1      OPC=nop              
  testq %rax, %rax                #  72    0x32f75  3      OPC=testq_r64_r64    
  jne .L_32f94                    #  73    0x32f78  2      OPC=jne_label        
  movq %rbx, %r8                  #  74    0x32f7a  3      OPC=movq_r64_r64     
  movq %r14, %rcx                 #  75    0x32f7d  3      OPC=movq_r64_r64     
  movq %r12, %rdx                 #  76    0x32f80  3      OPC=movq_r64_r64     
  movq -0x80(%rbp), %rsi          #  77    0x32f83  4      OPC=movq_r64_m64     
  movq %r15, %rdi                 #  78    0x32f87  3      OPC=movq_r64_r64     
  callq ._quicksort               #  79    0x32f8a  5      OPC=callq_label      
  jmpq .L_3310f                   #  80    0x32f8f  5      OPC=jmpq_label_1     
.L_32f94:                         #        0x32f94  0      OPC=<label>          
  movq -0x88(%rbp), %rax          #  81    0x32f94  7      OPC=movq_r64_m64     
  movq %rax, -0x40(%rbp)          #  82    0x32f9b  4      OPC=movq_m64_r64     
.L_32f9f:                         #        0x32f9f  0      OPC=<label>          
  movq %r12, -0x60(%rbp)          #  83    0x32f9f  4      OPC=movq_m64_r64     
  movq $0x4, -0x58(%rbp)          #  84    0x32fa3  8      OPC=movq_m64_imm32   
  movq %r14, -0x50(%rbp)          #  85    0x32fab  4      OPC=movq_m64_r64     
  movq %rbx, -0x48(%rbp)          #  86    0x32faf  4      OPC=movq_m64_r64     
  cmpq $0x20, %r12                #  87    0x32fb3  4      OPC=cmpq_r64_imm8    
  jbe .L_330b7                    #  88    0x32fb7  6      OPC=jbe_label_1      
  movq -0x80(%rbp), %rax          #  89    0x32fbd  4      OPC=movq_r64_m64     
  leaq (,%rax,8), %rcx            #  90    0x32fc1  8      OPC=leaq_r64_m16     
  movq %rcx, %r14                 #  91    0x32fc9  3      OPC=movq_r64_r64     
  addq -0x40(%rbp), %r14          #  92    0x32fcc  4      OPC=addq_r64_m64     
  leaq (%r14,%rcx,1), %rax        #  93    0x32fd0  4      OPC=leaq_r64_m16     
  movq %rax, -0x78(%rbp)          #  94    0x32fd4  4      OPC=movq_m64_r64     
  cmpq %rax, %r14                 #  95    0x32fd8  3      OPC=cmpq_r64_r64     
  jae .L_32ff4                    #  96    0x32fdb  2      OPC=jae_label        
  movq %r14, %rax                 #  97    0x32fdd  3      OPC=movq_r64_r64     
  movq %r15, %rdx                 #  98    0x32fe0  3      OPC=movq_r64_r64     
.L_32fe3:                         #        0x32fe3  0      OPC=<label>          
  addq $0x8, %rax                 #  99    0x32fe3  4      OPC=addq_r64_imm8    
  movq %rdx, -0x8(%rax)           #  100   0x32fe7  4      OPC=movq_m64_r64     
  addq %r12, %rdx                 #  101   0x32feb  3      OPC=addq_r64_r64     
  cmpq %rax, -0x78(%rbp)          #  102   0x32fee  4      OPC=cmpq_m64_r64     
  ja .L_32fe3                     #  103   0x32ff2  2      OPC=ja_label         
.L_32ff4:                         #        0x32ff4  0      OPC=<label>          
  movq $0x8, -0x60(%rbp)          #  104   0x32ff4  8      OPC=movq_m64_imm32   
  movq $0x3, -0x58(%rbp)          #  105   0x32ffc  8      OPC=movq_m64_imm32   
  addq -0x40(%rbp), %rcx          #  106   0x33004  4      OPC=addq_r64_m64     
  movq %rcx, %rsi                 #  107   0x33008  3      OPC=movq_r64_r64     
  leaq -0x60(%rbp), %rdi          #  108   0x3300b  4      OPC=leaq_r64_m16     
  movq -0x80(%rbp), %rbx          #  109   0x3300f  4      OPC=movq_r64_m64     
  movq %rbx, %rdx                 #  110   0x33013  3      OPC=movq_r64_r64     
  callq .msort_with_tmp           #  111   0x33016  5      OPC=callq_label      
  testq %rbx, %rbx                #  112   0x3301b  3      OPC=testq_r64_r64    
  je .L_33103                     #  113   0x3301e  6      OPC=je_label_1       
  movq %r15, -0x68(%rbp)          #  114   0x33024  4      OPC=movq_m64_r64     
  movq $0x0, -0x70(%rbp)          #  115   0x33028  8      OPC=movq_m64_imm32   
.L_33030:                         #        0x33030  0      OPC=<label>          
  movq -0x70(%rbp), %rax          #  116   0x33030  4      OPC=movq_r64_m64     
  movq (%r14,%rax,8), %rbx        #  117   0x33034  4      OPC=movq_r64_m64     
  movq -0x68(%rbp), %r13          #  118   0x33038  4      OPC=movq_r64_m64     
  cmpq %r13, %rbx                 #  119   0x3303c  3      OPC=cmpq_r64_r64     
  je .L_3309e                     #  120   0x3303f  2      OPC=je_label         
  movq %r12, %rdx                 #  121   0x33041  3      OPC=movq_r64_r64     
  movq %r13, %rsi                 #  122   0x33044  3      OPC=movq_r64_r64     
  movq -0x78(%rbp), %rdi          #  123   0x33047  4      OPC=movq_r64_m64     
  callq .__GI_memcpy              #  124   0x3304b  5      OPC=callq_label      
  movq %r13, %rdi                 #  125   0x33050  3      OPC=movq_r64_r64     
  movq -0x70(%rbp), %rcx          #  126   0x33053  4      OPC=movq_r64_m64     
  jmpq .L_3305c                   #  127   0x33057  2      OPC=jmpq_label       
.L_33059:                         #        0x33059  0      OPC=<label>          
  movq %rax, %rbx                 #  128   0x33059  3      OPC=movq_r64_r64     
.L_3305c:                         #        0x3305c  0      OPC=<label>          
  movq %rbx, %rax                 #  129   0x3305c  3      OPC=movq_r64_r64     
  subq %r15, %rax                 #  130   0x3305f  3      OPC=subq_r64_r64     
  movl $0x0, %edx                 #  131   0x33062  5      OPC=movl_r32_imm32   
  divq %r12                       #  132   0x33067  3      OPC=divq_r64         
  movq %rax, %r13                 #  133   0x3306a  3      OPC=movq_r64_r64     
  movq %rdi, (%r14,%rcx,8)        #  134   0x3306d  4      OPC=movq_m64_r64     
  movq %r12, %rdx                 #  135   0x33071  3      OPC=movq_r64_r64     
  movq %rbx, %rsi                 #  136   0x33074  3      OPC=movq_r64_r64     
  callq .__GI_memcpy              #  137   0x33077  5      OPC=callq_label      
  leaq (%r14,%r13,8), %rdx        #  138   0x3307c  4      OPC=leaq_r64_m16     
  movq (%rdx), %rax               #  139   0x33080  3      OPC=movq_r64_m64     
  movq %r13, %rcx                 #  140   0x33083  3      OPC=movq_r64_r64     
  movq %rbx, %rdi                 #  141   0x33086  3      OPC=movq_r64_r64     
  cmpq -0x68(%rbp), %rax          #  142   0x33089  4      OPC=cmpq_r64_m64     
  jne .L_33059                    #  143   0x3308d  2      OPC=jne_label        
  movq %rbx, (%rdx)               #  144   0x3308f  3      OPC=movq_m64_r64     
  movq %r12, %rdx                 #  145   0x33092  3      OPC=movq_r64_r64     
  movq -0x78(%rbp), %rsi          #  146   0x33095  4      OPC=movq_r64_m64     
  callq .__GI_memcpy              #  147   0x33099  5      OPC=callq_label      
.L_3309e:                         #        0x3309e  0      OPC=<label>          
  addq $0x1, -0x70(%rbp)          #  148   0x3309e  5      OPC=addq_m64_imm8    
  movq -0x70(%rbp), %rax          #  149   0x330a3  4      OPC=movq_r64_m64     
  addq %r12, -0x68(%rbp)          #  150   0x330a7  4      OPC=addq_m64_r64     
  cmpq -0x80(%rbp), %rax          #  151   0x330ab  4      OPC=cmpq_r64_m64     
  jne .L_33030                    #  152   0x330af  6      OPC=jne_label_1      
  jmpq .L_33103                   #  153   0x330b5  2      OPC=jmpq_label       
.L_330b7:                         #        0x330b7  0      OPC=<label>          
  movq %r12, %rax                 #  154   0x330b7  3      OPC=movq_r64_r64     
  orq %r15, %rax                  #  155   0x330ba  3      OPC=orq_r64_r64      
  testb $0x3, %al                 #  156   0x330bd  2      OPC=testb_al_imm8    
  jne .L_330f3                    #  157   0x330bf  2      OPC=jne_label        
  cmpq $0x4, %r12                 #  158   0x330c1  4      OPC=cmpq_r64_imm8    
  jne .L_330d1                    #  159   0x330c5  2      OPC=jne_label        
  movq $0x0, -0x58(%rbp)          #  160   0x330c7  8      OPC=movq_m64_imm32   
  jmpq .L_330f3                   #  161   0x330cf  2      OPC=jmpq_label       
.L_330d1:                         #        0x330d1  0      OPC=<label>          
  cmpq $0x8, %r12                 #  162   0x330d1  4      OPC=cmpq_r64_imm8    
  jne .L_330e7                    #  163   0x330d5  2      OPC=jne_label        
  testb $0x7, %r15b               #  164   0x330d7  4      OPC=testb_r8_imm8    
  jne .L_330e7                    #  165   0x330db  2      OPC=jne_label        
  movq $0x1, -0x58(%rbp)          #  166   0x330dd  8      OPC=movq_m64_imm32   
  jmpq .L_330f3                   #  167   0x330e5  2      OPC=jmpq_label       
.L_330e7:                         #        0x330e7  0      OPC=<label>          
  testb $0x7, %al                 #  168   0x330e7  2      OPC=testb_al_imm8    
  jne .L_330f3                    #  169   0x330e9  2      OPC=jne_label        
  movq $0x2, -0x58(%rbp)          #  170   0x330eb  8      OPC=movq_m64_imm32   
.L_330f3:                         #        0x330f3  0      OPC=<label>          
  leaq -0x60(%rbp), %rdi          #  171   0x330f3  4      OPC=leaq_r64_m16     
  movq -0x80(%rbp), %rdx          #  172   0x330f7  4      OPC=movq_r64_m64     
  movq %r15, %rsi                 #  173   0x330fb  3      OPC=movq_r64_r64     
  callq .msort_with_tmp           #  174   0x330fe  5      OPC=callq_label      
.L_33103:                         #        0x33103  0      OPC=<label>          
  movq -0x88(%rbp), %rdi          #  175   0x33103  7      OPC=movq_r64_m64     
  callq .L_1f8d0                  #  176   0x3310a  5      OPC=callq_label      
.L_3310f:                         #        0x3310f  0      OPC=<label>          
  leaq -0x28(%rbp), %rsp          #  177   0x3310f  4      OPC=leaq_r64_m16     
  popq %rbx                       #  178   0x33113  1      OPC=popq_r64_1       
  popq %r12                       #  179   0x33114  2      OPC=popq_r64_1       
  popq %r13                       #  180   0x33116  2      OPC=popq_r64_1       
  popq %r14                       #  181   0x33118  2      OPC=popq_r64_1       
  popq %r15                       #  182   0x3311a  2      OPC=popq_r64_1       
  popq %rbp                       #  183   0x3311c  1      OPC=popq_r64_1       
  retq                            #  184   0x3311d  1      OPC=retq             
                                                                                
.size qsort_r, .-qsort_r

