  .text
  .globl parse_bracket_element
  .type parse_bracket_element, @function

#! file-offset 0xb9f2f
#! rip-offset  0xb9f2f
#! capacity    588 bytes

# Text                             #  Line  RIP      Bytes  Opcode              
.parse_bracket_element:            #        0xb9f2f  0      OPC=<label>         
  pushq %r15                       #  1     0xb9f2f  2      OPC=pushq_r64_1     
  pushq %r14                       #  2     0xb9f31  2      OPC=pushq_r64_1     
  pushq %r13                       #  3     0xb9f33  2      OPC=pushq_r64_1     
  pushq %r12                       #  4     0xb9f35  2      OPC=pushq_r64_1     
  pushq %rbp                       #  5     0xb9f37  1      OPC=pushq_r64_1     
  pushq %rbx                       #  6     0xb9f38  1      OPC=pushq_r64_1     
  subq $0x20, %rsp                 #  7     0xb9f39  4      OPC=subq_r64_imm8   
  movq %rdi, %rbp                  #  8     0xb9f3d  3      OPC=movq_r64_r64    
  movq %rsi, %rbx                  #  9     0xb9f40  3      OPC=movq_r64_r64    
  movq %rdx, %r14                  #  10    0xb9f43  3      OPC=movq_r64_r64    
  movl %ecx, %r15d                 #  11    0xb9f46  3      OPC=movl_r32_r32    
  movq %r9, (%rsp)                 #  12    0xb9f49  4      OPC=movq_m64_r64    
  movl 0x38(%rsi), %r13d           #  13    0xb9f4d  4      OPC=movl_r32_m32    
  movl %r13d, %esi                 #  14    0xb9f51  3      OPC=movl_r32_r32    
  movq %rbx, %rdi                  #  15    0xb9f54  3      OPC=movq_r64_r64    
  callq .re_string_char_size_at    #  16    0xb9f57  5      OPC=callq_label     
  movl %eax, %r12d                 #  17    0xb9f5c  3      OPC=movl_r32_r32    
  cmpl $0x1, %eax                  #  18    0xb9f5f  3      OPC=cmpl_r32_imm8   
  jle .L_b9f87                     #  19    0xb9f62  2      OPC=jle_label       
  movl $0x1, (%rbp)                #  20    0xb9f64  7      OPC=movl_m32_imm32  
  movl 0x38(%rbx), %esi            #  21    0xb9f6b  3      OPC=movl_r32_m32    
  movq %rbx, %rdi                  #  22    0xb9f6e  3      OPC=movq_r64_r64    
  callq .re_string_wchar_at        #  23    0xb9f71  5      OPC=callq_label     
  movl %eax, 0x8(%rbp)             #  24    0xb9f76  3      OPC=movl_m32_r32    
  addl %r12d, 0x38(%rbx)           #  25    0xb9f79  4      OPC=addl_m32_r32    
  movl $0x0, %eax                  #  26    0xb9f7d  5      OPC=movl_r32_imm32  
  jmpq .L_ba16c                    #  27    0xb9f82  5      OPC=jmpq_label_1    
.L_b9f87:                          #        0xb9f87  0      OPC=<label>         
  addl %r15d, %r13d                #  28    0xb9f87  3      OPC=addl_r32_r32    
  movl %r13d, 0x38(%rbx)           #  29    0xb9f8a  4      OPC=movl_m32_r32    
  movzbl 0x8(%r14), %eax           #  30    0xb9f8e  5      OPC=movzbl_r32_m8   
  movl %eax, %edx                  #  31    0xb9f93  2      OPC=movl_r32_r32    
  andl $0xfffffffb, %edx           #  32    0xb9f95  6      OPC=andl_r32_imm32  
  nop                              #  33    0xb9f9b  1      OPC=nop             
  nop                              #  34    0xb9f9c  1      OPC=nop             
  nop                              #  35    0xb9f9d  1      OPC=nop             
  cmpb $0x1a, %dl                  #  36    0xb9f9e  3      OPC=cmpb_r8_imm8    
  je .L_b9fa5                      #  37    0xb9fa1  2      OPC=je_label        
  cmpb $0x1c, %al                  #  38    0xb9fa3  2      OPC=cmpb_al_imm8    
  jne .L_ba11a                     #  39    0xb9fa5  6      OPC=jne_label_1     
.L_b9fa5:                          #        0xb9fab  0      OPC=<label>         
  movzbl (%r14), %r15d             #  40    0xb9fab  4      OPC=movzbl_r32_m8   
  movl $0x7, %eax                  #  41    0xb9faf  5      OPC=movl_r32_imm32  
  cmpl 0x48(%rbx), %r13d           #  42    0xb9fb4  4      OPC=cmpl_r32_m32    
  jge .L_ba16c                     #  43    0xb9fb8  6      OPC=jge_label_1     
  movl $0x0, %r12d                 #  44    0xb9fbe  6      OPC=movl_r32_imm32  
.L_b9fbe:                          #        0xb9fc4  0      OPC=<label>         
  movl %r12d, (%rsp)               #  45    0xb9fc4  4      OPC=movl_m32_r32    
  cmpb $0x1e, 0x8(%r14)            #  46    0xb9fc8  5      OPC=cmpb_m8_imm8    
  jne .L_ba080                     #  47    0xb9fcd  6      OPC=jne_label_1     
  cmpb $0x0, 0x63(%rbx)            #  48    0xb9fd3  4      OPC=cmpb_m8_imm8    
  jne .L_b9fec                     #  49    0xb9fd7  2      OPC=jne_label       
  movq 0x8(%rbx), %rdx             #  50    0xb9fd9  4      OPC=movq_r64_m64    
  movl 0x38(%rbx), %eax            #  51    0xb9fdd  3      OPC=movl_r32_m32    
  leal 0x1(%rax), %ecx             #  52    0xb9fe0  3      OPC=leal_r32_m16    
  movl %ecx, 0x38(%rbx)            #  53    0xb9fe3  3      OPC=movl_m32_r32    
  cltq                             #  54    0xb9fe6  2      OPC=cltq            
  movzbl (%rdx,%rax,1), %r13d      #  55    0xb9fe8  5      OPC=movzbl_r32_m8   
  jmpq .L_ba094                    #  56    0xb9fed  5      OPC=jmpq_label_1    
.L_b9fec:                          #        0xb9ff2  0      OPC=<label>         
  cmpb $0x0, 0x64(%rbx)            #  57    0xb9ff2  4      OPC=cmpb_m8_imm8    
  je .L_ba068                      #  58    0xb9ff6  2      OPC=je_label        
  movl 0x38(%rbx), %eax            #  59    0xb9ff8  3      OPC=movl_r32_m32    
  movl %eax, 0xc(%rsp)             #  60    0xb9ffb  4      OPC=movl_m32_r32    
  cmpl 0x2c(%rbx), %eax            #  61    0xb9fff  3      OPC=cmpl_r32_m32    
  je .L_ba01f                      #  62    0xba002  2      OPC=je_label        
  cltq                             #  63    0xba004  2      OPC=cltq            
  movq 0x10(%rbx), %rdx            #  64    0xba006  4      OPC=movq_r64_m64    
  cmpl $0xffffffff, (%rdx,%rax,4)  #  65    0xba00a  7      OPC=cmpl_m32_imm32  
  nop                              #  66    0xba011  1      OPC=nop             
  nop                              #  67    0xba012  1      OPC=nop             
  nop                              #  68    0xba013  1      OPC=nop             
  nop                              #  69    0xba014  1      OPC=nop             
  jne .L_ba01f                     #  70    0xba015  2      OPC=jne_label       
  movq 0x8(%rbx), %rdx             #  71    0xba017  4      OPC=movq_r64_m64    
  movl 0xc(%rsp), %ecx             #  72    0xba01b  4      OPC=movl_r32_m32    
  addl $0x1, %ecx                  #  73    0xba01f  3      OPC=addl_r32_imm8   
  movl %ecx, 0x38(%rbx)            #  74    0xba022  3      OPC=movl_m32_r32    
  movzbl (%rdx,%rax,1), %r13d      #  75    0xba025  5      OPC=movzbl_r32_m8   
  jmpq .L_ba094                    #  76    0xba02a  2      OPC=jmpq_label      
.L_ba01f:                          #        0xba02c  0      OPC=<label>         
  movslq 0xc(%rsp), %rdx           #  77    0xba02c  5      OPC=movslq_r64_m32  
  movq 0x18(%rbx), %rcx            #  78    0xba031  4      OPC=movq_r64_m64    
  movl 0x28(%rbx), %eax            #  79    0xba035  3      OPC=movl_r32_m32    
  addl (%rcx,%rdx,4), %eax         #  80    0xba038  3      OPC=addl_r32_m32    
  cltq                             #  81    0xba03b  2      OPC=cltq            
  movq (%rbx), %rcx                #  82    0xba03d  3      OPC=movq_r64_m64    
  movzbl (%rcx,%rax,1), %r13d      #  83    0xba040  5      OPC=movzbl_r32_m8   
  testb $0x80, %r13b               #  84    0xba045  4      OPC=testb_r8_imm8   
  je .L_ba053                      #  85    0xba049  2      OPC=je_label        
  movq 0x8(%rbx), %rax             #  86    0xba04b  4      OPC=movq_r64_m64    
  movl 0xc(%rsp), %ecx             #  87    0xba04f  4      OPC=movl_r32_m32    
  addl $0x1, %ecx                  #  88    0xba053  3      OPC=addl_r32_imm8   
  movl %ecx, 0x38(%rbx)            #  89    0xba056  3      OPC=movl_m32_r32    
  movzbl (%rax,%rdx,1), %r13d      #  90    0xba059  5      OPC=movzbl_r32_m8   
  jmpq .L_ba094                    #  91    0xba05e  2      OPC=jmpq_label      
.L_ba053:                          #        0xba060  0      OPC=<label>         
  movl 0xc(%rsp), %esi             #  92    0xba060  4      OPC=movl_r32_m32    
  movq %rbx, %rdi                  #  93    0xba064  3      OPC=movq_r64_r64    
  callq .re_string_char_size_at    #  94    0xba067  5      OPC=callq_label     
  addl 0xc(%rsp), %eax             #  95    0xba06c  4      OPC=addl_r32_m32    
  movl %eax, 0x38(%rbx)            #  96    0xba070  3      OPC=movl_m32_r32    
  jmpq .L_ba094                    #  97    0xba073  2      OPC=jmpq_label      
.L_ba068:                          #        0xba075  0      OPC=<label>         
  movq (%rbx), %rdx                #  98    0xba075  3      OPC=movq_r64_m64    
  movl 0x38(%rbx), %eax            #  99    0xba078  3      OPC=movl_r32_m32    
  leal 0x1(%rax), %ecx             #  100   0xba07b  3      OPC=leal_r32_m16    
  movl %ecx, 0x38(%rbx)            #  101   0xba07e  3      OPC=movl_m32_r32    
  addl 0x28(%rbx), %eax            #  102   0xba081  3      OPC=addl_r32_m32    
  cltq                             #  103   0xba084  2      OPC=cltq            
  movzbl (%rdx,%rax,1), %r13d      #  104   0xba086  5      OPC=movzbl_r32_m8   
  jmpq .L_ba094                    #  105   0xba08b  2      OPC=jmpq_label      
.L_ba080:                          #        0xba08d  0      OPC=<label>         
  movq 0x8(%rbx), %rdx             #  106   0xba08d  4      OPC=movq_r64_m64    
  movl 0x38(%rbx), %eax            #  107   0xba091  3      OPC=movl_r32_m32    
  leal 0x1(%rax), %ecx             #  108   0xba094  3      OPC=leal_r32_m16    
  movl %ecx, 0x38(%rbx)            #  109   0xba097  3      OPC=movl_m32_r32    
  cltq                             #  110   0xba09a  2      OPC=cltq            
  movzbl (%rdx,%rax,1), %r13d      #  111   0xba09c  5      OPC=movzbl_r32_m8   
.L_ba094:                          #        0xba0a1  0      OPC=<label>         
  movl 0x38(%rbx), %eax            #  112   0xba0a1  3      OPC=movl_r32_m32    
  cmpl %eax, 0x48(%rbx)            #  113   0xba0a4  3      OPC=cmpl_m32_r32    
  jle .L_ba159                     #  114   0xba0a7  6      OPC=jle_label_1     
  cmpb %r13b, %r15b                #  115   0xba0ad  3      OPC=cmpb_r8_r8      
  jne .L_ba0b2                     #  116   0xba0b0  2      OPC=jne_label       
  movslq %eax, %rdx                #  117   0xba0b2  3      OPC=movslq_r64_r32  
  movq 0x8(%rbx), %rcx             #  118   0xba0b5  4      OPC=movq_r64_m64    
  cmpb $0x5d, (%rcx,%rdx,1)        #  119   0xba0b9  4      OPC=cmpb_m8_imm8    
  je .L_ba0cd                      #  120   0xba0bd  2      OPC=je_label        
.L_ba0b2:                          #        0xba0bf  0      OPC=<label>         
  movq 0x8(%rbp), %rax             #  121   0xba0bf  4      OPC=movq_r64_m64    
  movb %r13b, (%rax,%r12,1)        #  122   0xba0c3  4      OPC=movb_m8_r8      
  addq $0x1, %r12                  #  123   0xba0c7  4      OPC=addq_r64_imm8   
  cmpq $0x20, %r12                 #  124   0xba0cb  4      OPC=cmpq_r64_imm8   
  jne .L_b9fbe                     #  125   0xba0cf  6      OPC=jne_label_1     
  jmpq .L_ba160                    #  126   0xba0d5  5      OPC=jmpq_label_1    
.L_ba0cd:                          #        0xba0da  0      OPC=<label>         
  addl $0x1, %eax                  #  127   0xba0da  3      OPC=addl_r32_imm8   
  movl %eax, 0x38(%rbx)            #  128   0xba0dd  3      OPC=movl_m32_r32    
  movslq (%rsp), %rax              #  129   0xba0e0  4      OPC=movslq_r64_m32  
  movq 0x8(%rbp), %rdx             #  130   0xba0e4  4      OPC=movq_r64_m64    
  movb $0x0, (%rdx,%rax,1)         #  131   0xba0e8  4      OPC=movb_m8_imm8    
  movzbl 0x8(%r14), %eax           #  132   0xba0ec  5      OPC=movzbl_r32_m8   
  cmpb $0x1c, %al                  #  133   0xba0f1  2      OPC=cmpb_al_imm8    
  je .L_ba0fe                      #  134   0xba0f3  2      OPC=je_label        
  cmpb $0x1e, %al                  #  135   0xba0f5  2      OPC=cmpb_al_imm8    
  je .L_ba10c                      #  136   0xba0f7  2      OPC=je_label        
  cmpb $0x1a, %al                  #  137   0xba0f9  2      OPC=cmpb_al_imm8    
  jne .L_ba167                     #  138   0xba0fb  2      OPC=jne_label       
  movl $0x3, (%rbp)                #  139   0xba0fd  7      OPC=movl_m32_imm32  
  movl $0x0, %eax                  #  140   0xba104  5      OPC=movl_r32_imm32  
  jmpq .L_ba16c                    #  141   0xba109  2      OPC=jmpq_label      
.L_ba0fe:                          #        0xba10b  0      OPC=<label>         
  movl $0x2, (%rbp)                #  142   0xba10b  7      OPC=movl_m32_imm32  
  movl $0x0, %eax                  #  143   0xba112  5      OPC=movl_r32_imm32  
  jmpq .L_ba16c                    #  144   0xba117  2      OPC=jmpq_label      
.L_ba10c:                          #        0xba119  0      OPC=<label>         
  movl $0x4, (%rbp)                #  145   0xba119  7      OPC=movl_m32_imm32  
  movl $0x0, %eax                  #  146   0xba120  5      OPC=movl_r32_imm32  
  jmpq .L_ba16c                    #  147   0xba125  2      OPC=jmpq_label      
.L_ba11a:                          #        0xba127  0      OPC=<label>         
  cmpl $0x0, 0x58(%rsp)            #  148   0xba127  5      OPC=cmpl_m32_imm8   
  jne .L_ba144                     #  149   0xba12c  2      OPC=jne_label       
  cmpb $0x16, %al                  #  150   0xba12e  2      OPC=cmpb_al_imm8    
  jne .L_ba144                     #  151   0xba130  2      OPC=jne_label       
  leaq 0x10(%rsp), %rdi            #  152   0xba132  5      OPC=leaq_r64_m16    
  movq (%rsp), %rdx                #  153   0xba137  4      OPC=movq_r64_m64    
  movq %rbx, %rsi                  #  154   0xba13b  3      OPC=movq_r64_r64    
  callq .peek_token_bracket        #  155   0xba13e  5      OPC=callq_label     
  cmpb $0x15, 0x18(%rsp)           #  156   0xba143  5      OPC=cmpb_m8_imm8    
  je .L_ba144                      #  157   0xba148  2      OPC=je_label        
  movl $0xb, %eax                  #  158   0xba14a  5      OPC=movl_r32_imm32  
  jmpq .L_ba16c                    #  159   0xba14f  2      OPC=jmpq_label      
.L_ba144:                          #        0xba151  0      OPC=<label>         
  movl $0x0, (%rbp)                #  160   0xba151  7      OPC=movl_m32_imm32  
  movzbl (%r14), %eax              #  161   0xba158  4      OPC=movzbl_r32_m8   
  movb %al, 0x8(%rbp)              #  162   0xba15c  3      OPC=movb_m8_r8      
  movl $0x0, %eax                  #  163   0xba15f  5      OPC=movl_r32_imm32  
  jmpq .L_ba16c                    #  164   0xba164  2      OPC=jmpq_label      
.L_ba159:                          #        0xba166  0      OPC=<label>         
  movl $0x7, %eax                  #  165   0xba166  5      OPC=movl_r32_imm32  
  jmpq .L_ba16c                    #  166   0xba16b  2      OPC=jmpq_label      
.L_ba160:                          #        0xba16d  0      OPC=<label>         
  movl $0x7, %eax                  #  167   0xba16d  5      OPC=movl_r32_imm32  
  jmpq .L_ba16c                    #  168   0xba172  2      OPC=jmpq_label      
.L_ba167:                          #        0xba174  0      OPC=<label>         
  movl $0x0, %eax                  #  169   0xba174  5      OPC=movl_r32_imm32  
.L_ba16c:                          #        0xba179  0      OPC=<label>         
  addq $0x20, %rsp                 #  170   0xba179  4      OPC=addq_r64_imm8   
  popq %rbx                        #  171   0xba17d  1      OPC=popq_r64_1      
  popq %rbp                        #  172   0xba17e  1      OPC=popq_r64_1      
  popq %r12                        #  173   0xba17f  2      OPC=popq_r64_1      
  popq %r13                        #  174   0xba181  2      OPC=popq_r64_1      
  popq %r14                        #  175   0xba183  2      OPC=popq_r64_1      
  popq %r15                        #  176   0xba185  2      OPC=popq_r64_1      
  retq                             #  177   0xba187  1      OPC=retq            
                                                                                
.size parse_bracket_element, .-parse_bracket_element

