  .text
  .globl re_node_set_add_intersect
  .type re_node_set_add_intersect, @function

#! file-offset 0xbbfb8
#! rip-offset  0xbbfb8
#! capacity    405 bytes

# Text                       #  Line  RIP      Bytes  Opcode              
.re_node_set_add_intersect:  #        0xbbfb8  0      OPC=<label>         
  movl 0x4(%rsi), %r8d       #  1     0xbbfb8  4      OPC=movl_r32_m32    
  movl $0x0, %eax            #  2     0xbbfbc  5      OPC=movl_r32_imm32  
  testl %r8d, %r8d           #  3     0xbbfc1  3      OPC=testl_r32_r32   
  je .L_bc14b                #  4     0xbbfc4  6      OPC=je_label_1      
  movl 0x4(%rdx), %ecx       #  5     0xbbfca  3      OPC=movl_r32_m32    
  testl %ecx, %ecx           #  6     0xbbfcd  2      OPC=testl_r32_r32   
  je .L_bc14b                #  7     0xbbfcf  6      OPC=je_label_1      
  pushq %r13                 #  8     0xbbfd5  2      OPC=pushq_r64_1     
  pushq %r12                 #  9     0xbbfd7  2      OPC=pushq_r64_1     
  pushq %rbp                 #  10    0xbbfd9  1      OPC=pushq_r64_1     
  pushq %rbx                 #  11    0xbbfda  1      OPC=pushq_r64_1     
  subq $0x8, %rsp            #  12    0xbbfdb  4      OPC=subq_r64_imm8   
  movq %rdx, %rbp            #  13    0xbbfdf  3      OPC=movq_r64_r64    
  movq %rsi, %rbx            #  14    0xbbfe2  3      OPC=movq_r64_r64    
  movq %rdi, %r12            #  15    0xbbfe5  3      OPC=movq_r64_r64    
  addl %r8d, %ecx            #  16    0xbbfe8  3      OPC=addl_r32_r32    
  movl (%rdi), %eax          #  17    0xbbfeb  2      OPC=movl_r32_m32    
  movl %ecx, %edx            #  18    0xbbfed  2      OPC=movl_r32_r32    
  addl 0x4(%rdi), %edx       #  19    0xbbfef  3      OPC=addl_r32_m32    
  cmpl %eax, %edx            #  20    0xbbff2  2      OPC=cmpl_r32_r32    
  jle .L_bc024               #  21    0xbbff4  2      OPC=jle_label       
  leal (%rcx,%rax,1), %r13d  #  22    0xbbff6  4      OPC=leal_r32_m16    
  movslq %r13d, %rsi         #  23    0xbbffa  3      OPC=movslq_r64_r32  
  shlq $0x2, %rsi            #  24    0xbbffd  4      OPC=shlq_r64_imm8   
  movq 0x8(%rdi), %rdi       #  25    0xbc001  4      OPC=movq_r64_m64    
  callq .__tls_get_addr_plt  #  26    0xbc005  5      OPC=callq_label     
  movq %rax, %rdx            #  27    0xbc00a  3      OPC=movq_r64_r64    
  movl $0xc, %eax            #  28    0xbc00d  5      OPC=movl_r32_imm32  
  testq %rdx, %rdx           #  29    0xbc012  3      OPC=testq_r64_r64   
  je .L_bc141                #  30    0xbc015  6      OPC=je_label_1      
  movq %rdx, 0x8(%r12)       #  31    0xbc01b  5      OPC=movq_m64_r64    
  movl %r13d, (%r12)         #  32    0xbc020  4      OPC=movl_m32_r32    
.L_bc024:                    #        0xbc024  0      OPC=<label>         
  movl 0x4(%r12), %eax       #  33    0xbc024  5      OPC=movl_r32_m32    
  movl 0x4(%rbx), %esi       #  34    0xbc029  3      OPC=movl_r32_m32    
  movl 0x4(%rbp), %edi       #  35    0xbc02c  3      OPC=movl_r32_m32    
  leal (%rax,%rsi,1), %r9d   #  36    0xbc02f  4      OPC=leal_r32_m16    
  addl %edi, %r9d            #  37    0xbc033  3      OPC=addl_r32_r32    
  subl $0x1, %esi            #  38    0xbc036  3      OPC=subl_r32_imm8   
  subl $0x1, %edi            #  39    0xbc039  3      OPC=subl_r32_imm8   
  subl $0x1, %eax            #  40    0xbc03c  3      OPC=subl_r32_imm8   
.L_bc03f:                    #        0xbc03f  0      OPC=<label>         
  movslq %esi, %rdx          #  41    0xbc03f  3      OPC=movslq_r64_r32  
  movq 0x8(%rbx), %rcx       #  42    0xbc042  4      OPC=movq_r64_m64    
  movl (%rcx,%rdx,4), %ecx   #  43    0xbc046  3      OPC=movl_r32_m32    
  movslq %edi, %rdx          #  44    0xbc049  3      OPC=movslq_r64_r32  
  movq 0x8(%rbp), %r8        #  45    0xbc04c  4      OPC=movq_r64_m64    
  movl (%r8,%rdx,4), %edx    #  46    0xbc050  4      OPC=movl_r32_m32    
  cmpl %edx, %ecx            #  47    0xbc054  2      OPC=cmpl_r32_r32    
  jne .L_bc0a0               #  48    0xbc056  2      OPC=jne_label       
  testl %eax, %eax           #  49    0xbc058  2      OPC=testl_r32_r32   
  js .L_bc084                #  50    0xbc05a  2      OPC=js_label        
  movq 0x8(%r12), %rdx       #  51    0xbc05c  5      OPC=movq_r64_m64    
  movslq %eax, %r8           #  52    0xbc061  3      OPC=movslq_r64_r32  
  cmpl (%rdx,%r8,4), %ecx    #  53    0xbc064  4      OPC=cmpl_r32_m32    
  jge .L_bc12f               #  54    0xbc068  6      OPC=jge_label_1     
.L_bc06e:                    #        0xbc06e  0      OPC=<label>         
  subl $0x1, %eax            #  55    0xbc06e  3      OPC=subl_r32_imm8   
  cmpl $0xffffffff, %eax     #  56    0xbc071  6      OPC=cmpl_r32_imm32  
  nop                        #  57    0xbc077  1      OPC=nop             
  nop                        #  58    0xbc078  1      OPC=nop             
  nop                        #  59    0xbc079  1      OPC=nop             
  je .L_bc084                #  60    0xbc07a  2      OPC=je_label        
  movslq %eax, %r8           #  61    0xbc07c  3      OPC=movslq_r64_r32  
  cmpl (%rdx,%r8,4), %ecx    #  62    0xbc07f  4      OPC=cmpl_r32_m32    
  jl .L_bc06e                #  63    0xbc083  2      OPC=jl_label        
  jmpq .L_bc12f              #  64    0xbc085  5      OPC=jmpq_label_1    
.L_bc084:                    #        0xbc08a  0      OPC=<label>         
  subl $0x1, %r9d            #  65    0xbc08a  4      OPC=subl_r32_imm8   
  movslq %r9d, %r8           #  66    0xbc08e  3      OPC=movslq_r64_r32  
  movq 0x8(%r12), %rdx       #  67    0xbc091  5      OPC=movq_r64_m64    
  movl %ecx, (%rdx,%r8,4)    #  68    0xbc096  4      OPC=movl_m32_r32    
.L_bc094:                    #        0xbc09a  0      OPC=<label>         
  subl $0x1, %esi            #  69    0xbc09a  3      OPC=subl_r32_imm8   
  js .L_bc0b0                #  70    0xbc09d  2      OPC=js_label        
  subl $0x1, %edi            #  71    0xbc09f  3      OPC=subl_r32_imm8   
  jns .L_bc03f               #  72    0xbc0a2  2      OPC=jns_label       
  jmpq .L_bc0b0              #  73    0xbc0a4  2      OPC=jmpq_label      
.L_bc0a0:                    #        0xbc0a6  0      OPC=<label>         
  cmpl %edx, %ecx            #  74    0xbc0a6  2      OPC=cmpl_r32_r32    
  jge .L_bc0ab               #  75    0xbc0a8  2      OPC=jge_label       
  subl $0x1, %edi            #  76    0xbc0aa  3      OPC=subl_r32_imm8   
  jns .L_bc03f               #  77    0xbc0ad  2      OPC=jns_label       
  jmpq .L_bc0b0              #  78    0xbc0af  2      OPC=jmpq_label      
.L_bc0ab:                    #        0xbc0b1  0      OPC=<label>         
  subl $0x1, %esi            #  79    0xbc0b1  3      OPC=subl_r32_imm8   
  jns .L_bc03f               #  80    0xbc0b4  2      OPC=jns_label       
.L_bc0b0:                    #        0xbc0b6  0      OPC=<label>         
  movl 0x4(%r12), %edx       #  81    0xbc0b6  5      OPC=movl_r32_m32    
  leal -0x1(%rdx), %ecx      #  82    0xbc0bb  3      OPC=leal_r32_m16    
  movl %edx, %eax            #  83    0xbc0be  2      OPC=movl_r32_r32    
  addl 0x4(%rbx), %eax       #  84    0xbc0c0  3      OPC=addl_r32_m32    
  addl 0x4(%rbp), %eax       #  85    0xbc0c3  3      OPC=addl_r32_m32    
  leal -0x1(%rax), %r8d      #  86    0xbc0c6  4      OPC=leal_r32_m16    
  subl %r9d, %eax            #  87    0xbc0ca  3      OPC=subl_r32_r32    
  addl %eax, %edx            #  88    0xbc0cd  2      OPC=addl_r32_r32    
  movl %edx, 0x4(%r12)       #  89    0xbc0cf  5      OPC=movl_m32_r32    
  testl %eax, %eax           #  90    0xbc0d4  2      OPC=testl_r32_r32   
  jle .L_bc10d               #  91    0xbc0d6  2      OPC=jle_label       
  testl %ecx, %ecx           #  92    0xbc0d8  2      OPC=testl_r32_r32   
  js .L_bc10d                #  93    0xbc0da  2      OPC=js_label        
.L_bc0d6:                    #        0xbc0dc  0      OPC=<label>         
  movq 0x8(%r12), %rdx       #  94    0xbc0dc  5      OPC=movq_r64_m64    
  movslq %r8d, %rsi          #  95    0xbc0e1  3      OPC=movslq_r64_r32  
  movl (%rdx,%rsi,4), %edi   #  96    0xbc0e4  3      OPC=movl_r32_m32    
  movslq %ecx, %rsi          #  97    0xbc0e7  3      OPC=movslq_r64_r32  
  movl (%rdx,%rsi,4), %esi   #  98    0xbc0ea  3      OPC=movl_r32_m32    
  cmpl %esi, %edi            #  99    0xbc0ed  2      OPC=cmpl_r32_r32    
  jle .L_bc0ff               #  100   0xbc0ef  2      OPC=jle_label       
  subl $0x1, %r8d            #  101   0xbc0f1  4      OPC=subl_r32_imm8   
  leal (%rcx,%rax,1), %esi   #  102   0xbc0f5  3      OPC=leal_r32_m16    
  movslq %esi, %rsi          #  103   0xbc0f8  3      OPC=movslq_r64_r32  
  movl %edi, (%rdx,%rsi,4)   #  104   0xbc0fb  3      OPC=movl_m32_r32    
  subl $0x1, %eax            #  105   0xbc0fe  3      OPC=subl_r32_imm8   
  je .L_bc10d                #  106   0xbc101  2      OPC=je_label        
  jmpq .L_bc0d6              #  107   0xbc103  2      OPC=jmpq_label      
.L_bc0ff:                    #        0xbc105  0      OPC=<label>         
  leal (%rcx,%rax,1), %edi   #  108   0xbc105  3      OPC=leal_r32_m16    
  movslq %edi, %rdi          #  109   0xbc108  3      OPC=movslq_r64_r32  
  movl %esi, (%rdx,%rdi,4)   #  110   0xbc10b  3      OPC=movl_m32_r32    
  subl $0x1, %ecx            #  111   0xbc10e  3      OPC=subl_r32_imm8   
  jns .L_bc0d6               #  112   0xbc111  2      OPC=jns_label       
.L_bc10d:                    #        0xbc113  0      OPC=<label>         
  movq 0x8(%r12), %rdi       #  113   0xbc113  5      OPC=movq_r64_m64    
  cltq                       #  114   0xbc118  2      OPC=cltq            
  leaq (,%rax,4), %rdx       #  115   0xbc11a  8      OPC=leaq_r64_m16    
  movslq %r9d, %r9           #  116   0xbc122  3      OPC=movslq_r64_r32  
  leaq (%rdi,%r9,4), %rsi    #  117   0xbc125  4      OPC=leaq_r64_m16    
  callq .__GI_memcpy         #  118   0xbc129  5      OPC=callq_label     
  movl $0x0, %eax            #  119   0xbc12e  5      OPC=movl_r32_imm32  
  jmpq .L_bc141              #  120   0xbc133  2      OPC=jmpq_label      
.L_bc12f:                    #        0xbc135  0      OPC=<label>         
  movslq %eax, %r8           #  121   0xbc135  3      OPC=movslq_r64_r32  
  cmpl (%rdx,%r8,4), %ecx    #  122   0xbc138  4      OPC=cmpl_r32_m32    
  jne .L_bc084               #  123   0xbc13c  6      OPC=jne_label_1     
  jmpq .L_bc094              #  124   0xbc142  5      OPC=jmpq_label_1    
.L_bc141:                    #        0xbc147  0      OPC=<label>         
  addq $0x8, %rsp            #  125   0xbc147  4      OPC=addq_r64_imm8   
  popq %rbx                  #  126   0xbc14b  1      OPC=popq_r64_1      
  popq %rbp                  #  127   0xbc14c  1      OPC=popq_r64_1      
  popq %r12                  #  128   0xbc14d  2      OPC=popq_r64_1      
  popq %r13                  #  129   0xbc14f  2      OPC=popq_r64_1      
.L_bc14b:                    #        0xbc151  0      OPC=<label>         
  retq                       #  130   0xbc151  1      OPC=retq            
  nop                        #  131   0xbc152  1      OPC=nop             
                                                                          
.size re_node_set_add_intersect, .-re_node_set_add_intersect

