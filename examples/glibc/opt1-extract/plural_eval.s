  .text
  .globl plural_eval
  .type plural_eval, @function

#! file-offset 0x2b4a8
#! rip-offset  0x2b4a8
#! capacity    502 bytes

# Text                         #  Line  RIP      Bytes  Opcode              
.plural_eval:                  #        0x2b4a8  0      OPC=<label>         
  pushq %r12                   #  1     0x2b4a8  2      OPC=pushq_r64_1     
  pushq %rbp                   #  2     0x2b4aa  1      OPC=pushq_r64_1     
  pushq %rbx                   #  3     0x2b4ab  1      OPC=pushq_r64_1     
  movq %rdi, %rbp              #  4     0x2b4ac  3      OPC=movq_r64_r64    
  movq %rsi, %rbx              #  5     0x2b4af  3      OPC=movq_r64_r64    
  movl (%rdi), %eax            #  6     0x2b4b2  2      OPC=movl_r32_m32    
  cmpl $0x1, %eax              #  7     0x2b4b4  3      OPC=cmpl_r32_imm8   
  je .L_2b4fc                  #  8     0x2b4b7  2      OPC=je_label        
  cmpl $0x1, %eax              #  9     0x2b4b9  3      OPC=cmpl_r32_imm8   
  jg .L_2b4c7                  #  10    0x2b4bc  2      OPC=jg_label        
  testl %eax, %eax             #  11    0x2b4be  2      OPC=testl_r32_r32   
  je .L_2b4da                  #  12    0x2b4c0  2      OPC=je_label        
  jmpq .L_2b68a                #  13    0x2b4c2  5      OPC=jmpq_label_1    
.L_2b4c7:                      #        0x2b4c7  0      OPC=<label>         
  cmpl $0x2, %eax              #  14    0x2b4c7  3      OPC=cmpl_r32_imm8   
  je .L_2b515                  #  15    0x2b4ca  2      OPC=je_label        
  cmpl $0x3, %eax              #  16    0x2b4cc  3      OPC=cmpl_r32_imm8   
  je .L_2b662                  #  17    0x2b4cf  6      OPC=je_label_1      
  jmpq .L_2b68a                #  18    0x2b4d5  5      OPC=jmpq_label_1    
.L_2b4da:                      #        0x2b4da  0      OPC=<label>         
  movl 0x4(%rdi), %eax         #  19    0x2b4da  3      OPC=movl_r32_m32    
  testl %eax, %eax             #  20    0x2b4dd  2      OPC=testl_r32_r32   
  je .L_2b696                  #  21    0x2b4df  6      OPC=je_label_1      
  movl $0x0, %esi              #  22    0x2b4e5  5      OPC=movl_r32_imm32  
  cmpl $0x1, %eax              #  23    0x2b4ea  3      OPC=cmpl_r32_imm8   
  jne .L_2b696                 #  24    0x2b4ed  6      OPC=jne_label_1     
  movq 0x8(%rdi), %rsi         #  25    0x2b4f3  4      OPC=movq_r64_m64    
  jmpq .L_2b696                #  26    0x2b4f7  5      OPC=jmpq_label_1    
.L_2b4fc:                      #        0x2b4fc  0      OPC=<label>         
  movq 0x8(%rdi), %rdi         #  27    0x2b4fc  4      OPC=movq_r64_m64    
  callq .plural_eval           #  28    0x2b500  5      OPC=callq_label     
  testq %rax, %rax             #  29    0x2b505  3      OPC=testq_r64_r64   
  sete %sil                    #  30    0x2b508  4      OPC=sete_r8         
  movzbl %sil, %esi            #  31    0x2b50c  4      OPC=movzbl_r32_r8   
  jmpq .L_2b696                #  32    0x2b510  5      OPC=jmpq_label_1    
.L_2b515:                      #        0x2b515  0      OPC=<label>         
  movq 0x8(%rdi), %rdi         #  33    0x2b515  4      OPC=movq_r64_m64    
  callq .plural_eval           #  34    0x2b519  5      OPC=callq_label     
  movq %rax, %r12              #  35    0x2b51e  3      OPC=movq_r64_r64    
  movl 0x4(%rbp), %ecx         #  36    0x2b521  3      OPC=movl_r32_m32    
  cmpl $0xf, %ecx              #  37    0x2b524  3      OPC=cmpl_r32_imm8   
  jne .L_2b552                 #  38    0x2b527  2      OPC=jne_label       
  movl $0x1, %esi              #  39    0x2b529  5      OPC=movl_r32_imm32  
  testq %rax, %rax             #  40    0x2b52e  3      OPC=testq_r64_r64   
  jne .L_2b54a                 #  41    0x2b531  2      OPC=jne_label       
  movq 0x10(%rbp), %rdi        #  42    0x2b533  4      OPC=movq_r64_m64    
  movq %rbx, %rsi              #  43    0x2b537  3      OPC=movq_r64_r64    
  callq .plural_eval           #  44    0x2b53a  5      OPC=callq_label     
  testq %rax, %rax             #  45    0x2b53f  3      OPC=testq_r64_r64   
  setne %sil                   #  46    0x2b542  4      OPC=setne_r8        
  movzbl %sil, %esi            #  47    0x2b546  4      OPC=movzbl_r32_r8   
.L_2b54a:                      #        0x2b54a  0      OPC=<label>         
  movslq %esi, %rsi            #  48    0x2b54a  3      OPC=movslq_r64_r32  
  jmpq .L_2b696                #  49    0x2b54d  5      OPC=jmpq_label_1    
.L_2b552:                      #        0x2b552  0      OPC=<label>         
  cmpl $0xe, %ecx              #  50    0x2b552  3      OPC=cmpl_r32_imm8   
  jne .L_2b580                 #  51    0x2b555  2      OPC=jne_label       
  movl $0x0, %esi              #  52    0x2b557  5      OPC=movl_r32_imm32  
  testq %rax, %rax             #  53    0x2b55c  3      OPC=testq_r64_r64   
  je .L_2b578                  #  54    0x2b55f  2      OPC=je_label        
  movq 0x10(%rbp), %rdi        #  55    0x2b561  4      OPC=movq_r64_m64    
  movq %rbx, %rsi              #  56    0x2b565  3      OPC=movq_r64_r64    
  callq .plural_eval           #  57    0x2b568  5      OPC=callq_label     
  testq %rax, %rax             #  58    0x2b56d  3      OPC=testq_r64_r64   
  setne %sil                   #  59    0x2b570  4      OPC=setne_r8        
  movzbl %sil, %esi            #  60    0x2b574  4      OPC=movzbl_r32_r8   
.L_2b578:                      #        0x2b578  0      OPC=<label>         
  movslq %esi, %rsi            #  61    0x2b578  3      OPC=movslq_r64_r32  
  jmpq .L_2b696                #  62    0x2b57b  5      OPC=jmpq_label_1    
.L_2b580:                      #        0x2b580  0      OPC=<label>         
  movq 0x10(%rbp), %rdi        #  63    0x2b580  4      OPC=movq_r64_m64    
  movq %rbx, %rsi              #  64    0x2b584  3      OPC=movq_r64_r64    
  callq .plural_eval           #  65    0x2b587  5      OPC=callq_label     
  movq %rax, %rbx              #  66    0x2b58c  3      OPC=movq_r64_r64    
  movl 0x4(%rbp), %ecx         #  67    0x2b58f  3      OPC=movl_r32_m32    
  subl $0x3, %ecx              #  68    0x2b592  3      OPC=subl_r32_imm8   
  cmpl $0xa, %ecx              #  69    0x2b595  3      OPC=cmpl_r32_imm8   
  ja .L_2b691                  #  70    0x2b598  6      OPC=ja_label_1      
  movl %ecx, %ecx              #  71    0x2b59e  2      OPC=movl_r32_r32    
  leaq 0x121919(%rip), %rax    #  72    0x2b5a0  7      OPC=leaq_r64_m16    
  movslq (%rax,%rcx,4), %rdx   #  73    0x2b5a7  4      OPC=movslq_r64_m32  
  addq %rdx, %rax              #  74    0x2b5ab  3      OPC=addq_r64_r64    
  jmpq %rax                    #  75    0x2b5ae  2      OPC=jmpq_r64        
  imulq %r12, %rbx             #  76    0x2b5b0  4      OPC=imulq_r64_r64   
  movq %rbx, %rsi              #  77    0x2b5b4  3      OPC=movq_r64_r64    
  jmpq .L_2b696                #  78    0x2b5b7  5      OPC=jmpq_label_1    
  testq %rbx, %rbx             #  79    0x2b5bc  3      OPC=testq_r64_r64   
  jne .L_2b5cb                 #  80    0x2b5bf  2      OPC=jne_label       
  movl $0x8, %edi              #  81    0x2b5c1  5      OPC=movl_r32_imm32  
  callq .raise                 #  82    0x2b5c6  5      OPC=callq_label     
.L_2b5cb:                      #        0x2b5cb  0      OPC=<label>         
  movq %r12, %rax              #  83    0x2b5cb  3      OPC=movq_r64_r64    
  movl $0x0, %edx              #  84    0x2b5ce  5      OPC=movl_r32_imm32  
  divq %rbx                    #  85    0x2b5d3  3      OPC=divq_r64        
  movq %rax, %rsi              #  86    0x2b5d6  3      OPC=movq_r64_r64    
  jmpq .L_2b696                #  87    0x2b5d9  5      OPC=jmpq_label_1    
  testq %rbx, %rbx             #  88    0x2b5de  3      OPC=testq_r64_r64   
  jne .L_2b5ed                 #  89    0x2b5e1  2      OPC=jne_label       
  movl $0x8, %edi              #  90    0x2b5e3  5      OPC=movl_r32_imm32  
  callq .raise                 #  91    0x2b5e8  5      OPC=callq_label     
.L_2b5ed:                      #        0x2b5ed  0      OPC=<label>         
  movq %r12, %rax              #  92    0x2b5ed  3      OPC=movq_r64_r64    
  movl $0x0, %edx              #  93    0x2b5f0  5      OPC=movl_r32_imm32  
  divq %rbx                    #  94    0x2b5f5  3      OPC=divq_r64        
  movq %rdx, %rsi              #  95    0x2b5f8  3      OPC=movq_r64_r64    
  jmpq .L_2b696                #  96    0x2b5fb  5      OPC=jmpq_label_1    
  leaq (%rbx,%r12,1), %rsi     #  97    0x2b600  4      OPC=leaq_r64_m16    
  jmpq .L_2b696                #  98    0x2b604  5      OPC=jmpq_label_1    
  movq %r12, %rsi              #  99    0x2b609  3      OPC=movq_r64_r64    
  subq %rbx, %rsi              #  100   0x2b60c  3      OPC=subq_r64_r64    
  jmpq .L_2b696                #  101   0x2b60f  5      OPC=jmpq_label_1    
  cmpq %rbx, %r12              #  102   0x2b614  3      OPC=cmpq_r64_r64    
  setb %sil                    #  103   0x2b617  4      OPC=setb_r8         
  movzbl %sil, %esi            #  104   0x2b61b  4      OPC=movzbl_r32_r8   
  jmpq .L_2b696                #  105   0x2b61f  2      OPC=jmpq_label      
  cmpq %rbx, %r12              #  106   0x2b621  3      OPC=cmpq_r64_r64    
  seta %sil                    #  107   0x2b624  4      OPC=seta_r8         
  movzbl %sil, %esi            #  108   0x2b628  4      OPC=movzbl_r32_r8   
  jmpq .L_2b696                #  109   0x2b62c  2      OPC=jmpq_label      
  cmpq %rbx, %r12              #  110   0x2b62e  3      OPC=cmpq_r64_r64    
  setbe %sil                   #  111   0x2b631  4      OPC=setbe_r8        
  movzbl %sil, %esi            #  112   0x2b635  4      OPC=movzbl_r32_r8   
  jmpq .L_2b696                #  113   0x2b639  2      OPC=jmpq_label      
  cmpq %rbx, %r12              #  114   0x2b63b  3      OPC=cmpq_r64_r64    
  setae %sil                   #  115   0x2b63e  4      OPC=setae_r8        
  movzbl %sil, %esi            #  116   0x2b642  4      OPC=movzbl_r32_r8   
  jmpq .L_2b696                #  117   0x2b646  2      OPC=jmpq_label      
  cmpq %rbx, %r12              #  118   0x2b648  3      OPC=cmpq_r64_r64    
  sete %sil                    #  119   0x2b64b  4      OPC=sete_r8         
  movzbl %sil, %esi            #  120   0x2b64f  4      OPC=movzbl_r32_r8   
  jmpq .L_2b696                #  121   0x2b653  2      OPC=jmpq_label      
  cmpq %rbx, %r12              #  122   0x2b655  3      OPC=cmpq_r64_r64    
  setne %sil                   #  123   0x2b658  4      OPC=setne_r8        
  movzbl %sil, %esi            #  124   0x2b65c  4      OPC=movzbl_r32_r8   
  jmpq .L_2b696                #  125   0x2b660  2      OPC=jmpq_label      
.L_2b662:                      #        0x2b662  0      OPC=<label>         
  movq 0x8(%rdi), %rdi         #  126   0x2b662  4      OPC=movq_r64_m64    
  callq .plural_eval           #  127   0x2b666  5      OPC=callq_label     
  cmpq $0x1, %rax              #  128   0x2b66b  4      OPC=cmpq_r64_imm8   
  sbbl %eax, %eax              #  129   0x2b66f  2      OPC=sbbl_r32_r32    
  notl %eax                    #  130   0x2b671  2      OPC=notl_r32        
  addl $0x2, %eax              #  131   0x2b673  3      OPC=addl_r32_imm8   
  cltq                         #  132   0x2b676  2      OPC=cltq            
  movq 0x8(%rbp,%rax,8), %rdi  #  133   0x2b678  5      OPC=movq_r64_m64    
  movq %rbx, %rsi              #  134   0x2b67d  3      OPC=movq_r64_r64    
  callq .plural_eval           #  135   0x2b680  5      OPC=callq_label     
  movq %rax, %rsi              #  136   0x2b685  3      OPC=movq_r64_r64    
  jmpq .L_2b696                #  137   0x2b688  2      OPC=jmpq_label      
.L_2b68a:                      #        0x2b68a  0      OPC=<label>         
  movl $0x0, %esi              #  138   0x2b68a  5      OPC=movl_r32_imm32  
  jmpq .L_2b696                #  139   0x2b68f  2      OPC=jmpq_label      
.L_2b691:                      #        0x2b691  0      OPC=<label>         
  movl $0x0, %esi              #  140   0x2b691  5      OPC=movl_r32_imm32  
.L_2b696:                      #        0x2b696  0      OPC=<label>         
  movq %rsi, %rax              #  141   0x2b696  3      OPC=movq_r64_r64    
  popq %rbx                    #  142   0x2b699  1      OPC=popq_r64_1      
  popq %rbp                    #  143   0x2b69a  1      OPC=popq_r64_1      
  popq %r12                    #  144   0x2b69b  2      OPC=popq_r64_1      
  retq                         #  145   0x2b69d  1      OPC=retq            
                                                                            
.size plural_eval, .-plural_eval

