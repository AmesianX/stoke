  .text
  .globl expand_bkref_cache
  .type expand_bkref_cache, @function

#! file-offset 0xbd792
#! rip-offset  0xbd792
#! capacity    553 bytes

# Text                             #  Line  RIP      Bytes  Opcode               
.expand_bkref_cache:               #        0xbd792  0      OPC=<label>          
  pushq %r15                       #  1     0xbd792  2      OPC=pushq_r64_1      
  pushq %r14                       #  2     0xbd794  2      OPC=pushq_r64_1      
  pushq %r13                       #  3     0xbd796  2      OPC=pushq_r64_1      
  pushq %r12                       #  4     0xbd798  2      OPC=pushq_r64_1      
  pushq %rbp                       #  5     0xbd79a  1      OPC=pushq_r64_1      
  pushq %rbx                       #  6     0xbd79b  1      OPC=pushq_r64_1      
  subq $0x68, %rsp                 #  7     0xbd79c  4      OPC=subq_r64_imm8    
  movq %rdi, %r14                  #  8     0xbd7a0  3      OPC=movq_r64_r64     
  movq %rsi, 0x8(%rsp)             #  9     0xbd7a3  5      OPC=movq_m64_r64     
  movl %edx, %r15d                 #  10    0xbd7a8  3      OPC=movl_r32_r32     
  movl %ecx, 0x38(%rsp)            #  11    0xbd7ab  4      OPC=movl_m32_r32     
  movl %r8d, 0x3c(%rsp)            #  12    0xbd7af  5      OPC=movl_m32_r32     
  movq 0x70(%rdi), %r13            #  13    0xbd7b4  4      OPC=movq_r64_m64     
  movl %edx, %esi                  #  14    0xbd7b8  2      OPC=movl_r32_r32     
  callq .search_cur_bkref_entry    #  15    0xbd7ba  5      OPC=callq_label      
  cmpl $0xffffffff, %eax           #  16    0xbd7bf  6      OPC=cmpl_r32_imm32   
  nop                              #  17    0xbd7c5  1      OPC=nop              
  nop                              #  18    0xbd7c6  1      OPC=nop              
  nop                              #  19    0xbd7c7  1      OPC=nop              
  je .L_bd9a7                      #  20    0xbd7c8  6      OPC=je_label_1       
  cltq                             #  21    0xbd7ce  2      OPC=cltq             
  leaq (%rax,%rax,4), %rax         #  22    0xbd7d0  4      OPC=leaq_r64_m16     
  shlq $0x2, %rax                  #  23    0xbd7d4  4      OPC=shlq_r64_imm8    
  movq %rax, 0x30(%rsp)            #  24    0xbd7d8  5      OPC=movq_m64_r64     
  leaq 0x40(%rsp), %rax            #  25    0xbd7dd  5      OPC=leaq_r64_m16     
  movq %rax, 0x20(%rsp)            #  26    0xbd7e2  5      OPC=movq_m64_r64     
  leaq 0x5c(%rsp), %rax            #  27    0xbd7e7  5      OPC=leaq_r64_m16     
  movq %rax, 0x28(%rsp)            #  28    0xbd7ec  5      OPC=movq_m64_r64     
.L_bd7eb:                          #        0xbd7f1  0      OPC=<label>          
  movq 0x30(%rsp), %rbx            #  29    0xbd7f1  5      OPC=movq_r64_m64     
  addq 0xa0(%r14), %rbx            #  30    0xbd7f6  7      OPC=addq_r64_m64     
.L_bd7f7:                          #        0xbd7fd  0      OPC=<label>          
  movl (%rbx), %r12d               #  31    0xbd7fd  3      OPC=movl_r32_m32     
  movl %r12d, %esi                 #  32    0xbd800  3      OPC=movl_r32_r32     
  movq 0x8(%rsp), %rdi             #  33    0xbd803  5      OPC=movq_r64_m64     
  callq .re_node_set_contains      #  34    0xbd808  5      OPC=callq_label      
  testl %eax, %eax                 #  35    0xbd80d  2      OPC=testl_r32_r32    
  je .L_bd992                      #  36    0xbd80f  6      OPC=je_label_1       
  movl %r15d, %ebp                 #  37    0xbd815  3      OPC=movl_r32_r32     
  addl 0xc(%rbx), %ebp             #  38    0xbd818  3      OPC=addl_r32_m32     
  subl 0x8(%rbx), %ebp             #  39    0xbd81b  3      OPC=subl_r32_m32     
  cmpl %r15d, %ebp                 #  40    0xbd81e  3      OPC=cmpl_r32_r32     
  jne .L_bd8ac                     #  41    0xbd821  6      OPC=jne_label_1      
  movslq %r12d, %r12               #  42    0xbd827  3      OPC=movslq_r64_r32   
  shlq $0x4, %r12                  #  43    0xbd82a  4      OPC=shlq_r64_imm8    
  addq 0x28(%r13), %r12            #  44    0xbd82e  4      OPC=addq_r64_m64     
  movq 0x8(%r12), %rax             #  45    0xbd832  5      OPC=movq_r64_m64     
  movl (%rax), %ebp                #  46    0xbd837  2      OPC=movl_r32_m32     
  movl %ebp, %esi                  #  47    0xbd839  2      OPC=movl_r32_r32     
  movq 0x8(%rsp), %rdi             #  48    0xbd83b  5      OPC=movq_r64_m64     
  callq .re_node_set_contains      #  49    0xbd840  5      OPC=callq_label      
  testl %eax, %eax                 #  50    0xbd845  2      OPC=testl_r32_r32    
  jne .L_bd992                     #  51    0xbd847  6      OPC=jne_label_1      
  movl %ebp, %esi                  #  52    0xbd84d  2      OPC=movl_r32_r32     
  movq 0x20(%rsp), %rbp            #  53    0xbd84f  5      OPC=movq_r64_m64     
  movq %rbp, %rdi                  #  54    0xbd854  3      OPC=movq_r64_r64     
  callq .re_node_set_init_1        #  55    0xbd857  5      OPC=callq_label      
  movl %eax, 0x5c(%rsp)            #  56    0xbd85c  4      OPC=movl_m32_r32     
  movl 0x3c(%rsp), %ecx            #  57    0xbd860  4      OPC=movl_r32_m32     
  movl 0x38(%rsp), %edx            #  58    0xbd864  4      OPC=movl_r32_m32     
  movq %rbp, %rsi                  #  59    0xbd868  3      OPC=movq_r64_r64     
  movq %r13, %rdi                  #  60    0xbd86b  3      OPC=movq_r64_r64     
  callq .check_arrival_expand_ecl  #  61    0xbd86e  5      OPC=callq_label      
  movl %eax, %ebx                  #  62    0xbd873  2      OPC=movl_r32_r32     
  movq %rbp, %rsi                  #  63    0xbd875  3      OPC=movq_r64_r64     
  movq 0x8(%rsp), %rdi             #  64    0xbd878  5      OPC=movq_r64_m64     
  callq .re_node_set_merge         #  65    0xbd87d  5      OPC=callq_label      
  movl %eax, %ebp                  #  66    0xbd882  2      OPC=movl_r32_r32     
  movq 0x48(%rsp), %rdi            #  67    0xbd884  5      OPC=movq_r64_m64     
  callq .L_1f8d0                   #  68    0xbd889  5      OPC=callq_label      
  movl 0x5c(%rsp), %eax            #  69    0xbd88e  4      OPC=movl_r32_m32     
  movl %ebx, %edx                  #  70    0xbd892  2      OPC=movl_r32_r32     
  orl %ebp, %edx                   #  71    0xbd894  2      OPC=orl_r32_r32      
  orl %eax, %edx                   #  72    0xbd896  2      OPC=orl_r32_r32      
  je .L_bd7eb                      #  73    0xbd898  6      OPC=je_label_1       
  testl %eax, %eax                 #  74    0xbd89e  2      OPC=testl_r32_r32    
  jne .L_bd9ac                     #  75    0xbd8a0  6      OPC=jne_label_1      
  testl %ebx, %ebx                 #  76    0xbd8a6  2      OPC=testl_r32_r32    
  movl %ebp, %eax                  #  77    0xbd8a8  2      OPC=movl_r32_r32     
  cmovnel %ebx, %eax               #  78    0xbd8aa  3      OPC=cmovnel_r32_r32  
  jmpq .L_bd9ac                    #  79    0xbd8ad  5      OPC=jmpq_label_1     
.L_bd8ac:                          #        0xbd8b2  0      OPC=<label>          
  movslq %r12d, %r12               #  80    0xbd8b2  3      OPC=movslq_r64_r32   
  movq 0x18(%r13), %rax            #  81    0xbd8b5  4      OPC=movq_r64_m64     
  movl (%rax,%r12,4), %r12d        #  82    0xbd8b9  4      OPC=movl_r32_m32     
  movslq %ebp, %rbp                #  83    0xbd8bd  3      OPC=movslq_r64_r32   
  leaq (,%rbp,8), %rax             #  84    0xbd8c0  8      OPC=leaq_r64_m16     
  movq %rax, 0x10(%rsp)            #  85    0xbd8c8  5      OPC=movq_m64_r64     
  movq 0x88(%r14), %rax            #  86    0xbd8cd  7      OPC=movq_r64_m64     
  movq (%rax,%rbp,8), %rax         #  87    0xbd8d4  4      OPC=movq_r64_m64     
  testq %rax, %rax                 #  88    0xbd8d8  3      OPC=testq_r64_r64    
  je .L_bd93b                      #  89    0xbd8db  2      OPC=je_label         
  addq $0x8, %rax                  #  90    0xbd8dd  4      OPC=addq_r64_imm8    
  movq %rax, 0x18(%rsp)            #  91    0xbd8e1  5      OPC=movq_m64_r64     
  movl %r12d, %esi                 #  92    0xbd8e6  3      OPC=movl_r32_r32     
  movq %rax, %rdi                  #  93    0xbd8e9  3      OPC=movq_r64_r64     
  callq .re_node_set_contains      #  94    0xbd8ec  5      OPC=callq_label      
  testl %eax, %eax                 #  95    0xbd8f1  2      OPC=testl_r32_r32    
  jne .L_bd992                     #  96    0xbd8f3  6      OPC=jne_label_1      
  movq 0x18(%rsp), %rsi            #  97    0xbd8f9  5      OPC=movq_r64_m64     
  movq 0x20(%rsp), %rdi            #  98    0xbd8fe  5      OPC=movq_r64_m64     
  callq .re_node_set_init_copy     #  99    0xbd903  5      OPC=callq_label      
  movl %eax, 0x5c(%rsp)            #  100   0xbd908  4      OPC=movl_m32_r32     
  movl %r12d, %esi                 #  101   0xbd90c  3      OPC=movl_r32_r32     
  movq 0x20(%rsp), %rdi            #  102   0xbd90f  5      OPC=movq_r64_m64     
  callq .re_node_set_insert        #  103   0xbd914  5      OPC=callq_label      
  shrl $0x1f, %eax                 #  104   0xbd919  3      OPC=shrl_r32_imm8    
  testb %al, %al                   #  105   0xbd91c  2      OPC=testb_r8_r8      
  jne .L_bd921                     #  106   0xbd91e  2      OPC=jne_label        
  cmpl $0x0, 0x5c(%rsp)            #  107   0xbd920  5      OPC=cmpl_m32_imm8    
  je .L_bd950                      #  108   0xbd925  2      OPC=je_label         
.L_bd921:                          #        0xbd927  0      OPC=<label>          
  movq 0x48(%rsp), %rdi            #  109   0xbd927  5      OPC=movq_r64_m64     
  callq .L_1f8d0                   #  110   0xbd92c  5      OPC=callq_label      
  movl 0x5c(%rsp), %eax            #  111   0xbd931  4      OPC=movl_r32_m32     
  testl %eax, %eax                 #  112   0xbd935  2      OPC=testl_r32_r32    
  movl $0xc, %edx                  #  113   0xbd937  5      OPC=movl_r32_imm32   
  cmovel %edx, %eax                #  114   0xbd93c  3      OPC=cmovel_r32_r32   
  jmpq .L_bd9ac                    #  115   0xbd93f  2      OPC=jmpq_label       
.L_bd93b:                          #        0xbd941  0      OPC=<label>          
  movl %r12d, %esi                 #  116   0xbd941  3      OPC=movl_r32_r32     
  movq 0x20(%rsp), %rdi            #  117   0xbd944  5      OPC=movq_r64_m64     
  callq .re_node_set_init_1        #  118   0xbd949  5      OPC=callq_label      
  movl %eax, 0x5c(%rsp)            #  119   0xbd94e  4      OPC=movl_m32_r32     
  testl %eax, %eax                 #  120   0xbd952  2      OPC=testl_r32_r32    
  jne .L_bd9ac                     #  121   0xbd954  2      OPC=jne_label        
.L_bd950:                          #        0xbd956  0      OPC=<label>          
  movq 0x10(%rsp), %r12            #  122   0xbd956  5      OPC=movq_r64_m64     
  addq 0x88(%r14), %r12            #  123   0xbd95b  7      OPC=addq_r64_m64     
  movq 0x20(%rsp), %rdx            #  124   0xbd962  5      OPC=movq_r64_m64     
  movq %r13, %rsi                  #  125   0xbd967  3      OPC=movq_r64_r64     
  movq 0x28(%rsp), %rdi            #  126   0xbd96a  5      OPC=movq_r64_m64     
  callq .re_acquire_state          #  127   0xbd96f  5      OPC=callq_label      
  movq %rax, (%r12)                #  128   0xbd974  4      OPC=movq_m64_r64     
  movq 0x48(%rsp), %rdi            #  129   0xbd978  5      OPC=movq_r64_m64     
  callq .L_1f8d0                   #  130   0xbd97d  5      OPC=callq_label      
  movq 0x88(%r14), %rax            #  131   0xbd982  7      OPC=movq_r64_m64     
  cmpq $0x0, (%rax,%rbp,8)         #  132   0xbd989  5      OPC=cmpq_m64_imm8    
  jne .L_bd992                     #  133   0xbd98e  2      OPC=jne_label        
  movl 0x5c(%rsp), %eax            #  134   0xbd990  4      OPC=movl_r32_m32     
  testl %eax, %eax                 #  135   0xbd994  2      OPC=testl_r32_r32    
  jne .L_bd9ac                     #  136   0xbd996  2      OPC=jne_label        
.L_bd992:                          #        0xbd998  0      OPC=<label>          
  addq $0x14, %rbx                 #  137   0xbd998  4      OPC=addq_r64_imm8    
  cmpb $0x0, -0x4(%rbx)            #  138   0xbd99c  4      OPC=cmpb_m8_imm8     
  jne .L_bd7f7                     #  139   0xbd9a0  6      OPC=jne_label_1      
  movl $0x0, %eax                  #  140   0xbd9a6  5      OPC=movl_r32_imm32   
  jmpq .L_bd9ac                    #  141   0xbd9ab  2      OPC=jmpq_label       
.L_bd9a7:                          #        0xbd9ad  0      OPC=<label>          
  movl $0x0, %eax                  #  142   0xbd9ad  5      OPC=movl_r32_imm32   
.L_bd9ac:                          #        0xbd9b2  0      OPC=<label>          
  addq $0x68, %rsp                 #  143   0xbd9b2  4      OPC=addq_r64_imm8    
  popq %rbx                        #  144   0xbd9b6  1      OPC=popq_r64_1       
  popq %rbp                        #  145   0xbd9b7  1      OPC=popq_r64_1       
  popq %r12                        #  146   0xbd9b8  2      OPC=popq_r64_1       
  popq %r13                        #  147   0xbd9ba  2      OPC=popq_r64_1       
  popq %r14                        #  148   0xbd9bc  2      OPC=popq_r64_1       
  popq %r15                        #  149   0xbd9be  2      OPC=popq_r64_1       
  retq                             #  150   0xbd9c0  1      OPC=retq             
                                                                                 
.size expand_bkref_cache, .-expand_bkref_cache

