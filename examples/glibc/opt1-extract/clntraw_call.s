  .text
  .globl clntraw_call
  .type clntraw_call, @function

#! file-offset 0xfd75e
#! rip-offset  0xfd75e
#! capacity    559 bytes

# Text                                #  Line  RIP      Bytes  Opcode              
.clntraw_call:                        #        0xfd75e  0      OPC=<label>         
  pushq %r15                          #  1     0xfd75e  2      OPC=pushq_r64_1     
  pushq %r14                          #  2     0xfd760  2      OPC=pushq_r64_1     
  pushq %r13                          #  3     0xfd762  2      OPC=pushq_r64_1     
  pushq %r12                          #  4     0xfd764  2      OPC=pushq_r64_1     
  pushq %rbp                          #  5     0xfd766  1      OPC=pushq_r64_1     
  pushq %rbx                          #  6     0xfd767  1      OPC=pushq_r64_1     
  subq $0xc8, %rsp                    #  7     0xfd768  7      OPC=subq_r64_imm32  
  movq %rdi, %r12                     #  8     0xfd76f  3      OPC=movq_r64_r64    
  movq %rsi, 0x38(%rsp)               #  9     0xfd772  5      OPC=movq_m64_r64    
  movq %rdx, %r15                     #  10    0xfd777  3      OPC=movq_r64_r64    
  movq %rcx, 0x10(%rsp)               #  11    0xfd77a  5      OPC=movq_m64_r64    
  movq %r8, 0x20(%rsp)                #  12    0xfd77f  5      OPC=movq_m64_r64    
  movq %r9, 0x28(%rsp)                #  13    0xfd784  5      OPC=movq_m64_r64    
  callq .__rpc_thread_variables       #  14    0xfd789  5      OPC=callq_label     
  movq 0xb8(%rax), %rbx               #  15    0xfd78e  7      OPC=movq_r64_m64    
  movl $0x10, %eax                    #  16    0xfd795  5      OPC=movl_r32_imm32  
  testq %rbx, %rbx                    #  17    0xfd79a  3      OPC=testq_r64_r64   
  je .L_fd97b                         #  18    0xfd79d  6      OPC=je_label_1      
  leaq 0x18(%rbx), %rbp               #  19    0xfd7a3  4      OPC=leaq_r64_m16    
  leaq 0x22a8(%rbx), %rax             #  20    0xfd7a7  7      OPC=leaq_r64_m16    
  movq %rax, 0x8(%rsp)                #  21    0xfd7ae  5      OPC=movq_m64_r64    
  leaq 0x38(%rsp), %rax               #  22    0xfd7b3  5      OPC=leaq_r64_m16    
  movq %rax, 0x18(%rsp)               #  23    0xfd7b8  5      OPC=movq_m64_r64    
  leaq 0x60(%rsp), %r13               #  24    0xfd7bd  5      OPC=leaq_r64_m16    
  leaq 0x40(%rsp), %rax               #  25    0xfd7c2  5      OPC=leaq_r64_m16    
  movq %rax, 0x30(%rsp)               #  26    0xfd7c7  5      OPC=movq_m64_r64    
.L_fd7cc:                             #        0xfd7cc  0      OPC=<label>         
  movl $0x0, 0x18(%rbx)               #  27    0xfd7cc  7      OPC=movl_m32_imm32  
  movq 0x20(%rbx), %rax               #  28    0xfd7d3  4      OPC=movq_r64_m64    
  movl $0x0, %esi                     #  29    0xfd7d7  5      OPC=movl_r32_imm32  
  movq %rbp, %rdi                     #  30    0xfd7dc  3      OPC=movq_r64_r64    
  callq 0x28(%rax)                    #  31    0xfd7df  3      OPC=callq_m64       
  addq $0x1, 0x22a8(%rbx)             #  32    0xfd7e2  8      OPC=addq_m64_imm8   
  movq 0x20(%rbx), %rax               #  33    0xfd7ea  4      OPC=movq_r64_m64    
  movl 0x22c0(%rbx), %edx             #  34    0xfd7ee  6      OPC=movl_r32_m32    
  movq 0x8(%rsp), %rsi                #  35    0xfd7f4  5      OPC=movq_r64_m64    
  movq %rbp, %rdi                     #  36    0xfd7f9  3      OPC=movq_r64_r64    
  callq 0x18(%rax)                    #  37    0xfd7fc  3      OPC=callq_m64       
  testl %eax, %eax                    #  38    0xfd7ff  2      OPC=testl_r32_r32   
  je .L_fd924                         #  39    0xfd801  6      OPC=je_label_1      
  movq 0x20(%rbx), %rax               #  40    0xfd807  4      OPC=movq_r64_m64    
  movq 0x18(%rsp), %rsi               #  41    0xfd80b  5      OPC=movq_r64_m64    
  movq %rbp, %rdi                     #  42    0xfd810  3      OPC=movq_r64_r64    
  callq 0x8(%rax)                     #  43    0xfd813  3      OPC=callq_m64       
  testl %eax, %eax                    #  44    0xfd816  2      OPC=testl_r32_r32   
  je .L_fd92b                         #  45    0xfd818  6      OPC=je_label_1      
  movq (%r12), %rdi                   #  46    0xfd81e  4      OPC=movq_r64_m64    
  movq 0x38(%rdi), %rax               #  47    0xfd822  4      OPC=movq_r64_m64    
  movq %rbp, %rsi                     #  48    0xfd826  3      OPC=movq_r64_r64    
  callq 0x8(%rax)                     #  49    0xfd829  3      OPC=callq_m64       
  testl %eax, %eax                    #  50    0xfd82c  2      OPC=testl_r32_r32   
  je .L_fd932                         #  51    0xfd82e  6      OPC=je_label_1      
  movq 0x10(%rsp), %rsi               #  52    0xfd834  5      OPC=movq_r64_m64    
  movq %rbp, %rdi                     #  53    0xfd839  3      OPC=movq_r64_r64    
  movl $0x0, %eax                     #  54    0xfd83c  5      OPC=movl_r32_imm32  
  callq %r15                          #  55    0xfd841  3      OPC=callq_r64       
  testl %eax, %eax                    #  56    0xfd844  2      OPC=testl_r32_r32   
  je .L_fd939                         #  57    0xfd846  6      OPC=je_label_1      
  movq 0x20(%rbx), %rax               #  58    0xfd84c  4      OPC=movq_r64_m64    
  movq %rbp, %rdi                     #  59    0xfd850  3      OPC=movq_r64_r64    
  callq 0x20(%rax)                    #  60    0xfd853  3      OPC=callq_m64       
  movl $0x1, %edi                     #  61    0xfd856  5      OPC=movl_r32_imm32  
  callq .svc_getreq_GLIBC_2_2_5       #  62    0xfd85b  5      OPC=callq_label     
  movl $0x1, 0x18(%rbx)               #  63    0xfd860  7      OPC=movl_m32_imm32  
  movq 0x20(%rbx), %rax               #  64    0xfd867  4      OPC=movq_r64_m64    
  movl $0x0, %esi                     #  65    0xfd86b  5      OPC=movl_r32_imm32  
  movq %rbp, %rdi                     #  66    0xfd870  3      OPC=movq_r64_r64    
  callq 0x28(%rax)                    #  67    0xfd873  3      OPC=callq_m64       
  movq 0x2929b3(%rip), %rax           #  68    0xfd876  7      OPC=movq_r64_m64    
  movq %rax, 0x78(%rsp)               #  69    0xfd87d  5      OPC=movq_m64_r64    
  movq 0x2929af(%rip), %rax           #  70    0xfd882  7      OPC=movq_r64_m64    
  movq %rax, 0x80(%rsp)               #  71    0xfd889  8      OPC=movq_m64_r64    
  movq 0x2929a8(%rip), %rax           #  72    0xfd891  7      OPC=movq_r64_m64    
  movq %rax, 0x88(%rsp)               #  73    0xfd898  8      OPC=movq_m64_r64    
  movq 0x28(%rsp), %rax               #  74    0xfd8a0  5      OPC=movq_r64_m64    
  movq %rax, 0x98(%rsp)               #  75    0xfd8a5  8      OPC=movq_m64_r64    
  movq 0x20(%rsp), %rax               #  76    0xfd8ad  5      OPC=movq_r64_m64    
  movq %rax, 0xa0(%rsp)               #  77    0xfd8b2  8      OPC=movq_m64_r64    
  movq %r13, %rsi                     #  78    0xfd8ba  3      OPC=movq_r64_r64    
  movq %rbp, %rdi                     #  79    0xfd8bd  3      OPC=movq_r64_r64    
  callq .xdr_replymsg_GLIBC_2_2_5     #  80    0xfd8c0  5      OPC=callq_label     
  testl %eax, %eax                    #  81    0xfd8c5  2      OPC=testl_r32_r32   
  je .L_fd940                         #  82    0xfd8c7  2      OPC=je_label        
  movq 0x30(%rsp), %rsi               #  83    0xfd8c9  5      OPC=movq_r64_m64    
  movq %r13, %rdi                     #  84    0xfd8ce  3      OPC=movq_r64_r64    
  callq ._seterr_reply_GLIBC_2_2_5    #  85    0xfd8d1  5      OPC=callq_label     
  movl 0x40(%rsp), %r14d              #  86    0xfd8d6  5      OPC=movl_r32_m32    
  testl %r14d, %r14d                  #  87    0xfd8db  3      OPC=testl_r32_r32   
  jne .L_fd8f6                        #  88    0xfd8de  2      OPC=jne_label       
  movq (%r12), %rdi                   #  89    0xfd8e0  4      OPC=movq_r64_m64    
  movq 0x38(%rdi), %rax               #  90    0xfd8e4  4      OPC=movq_r64_m64    
  leaq 0x78(%rsp), %rsi               #  91    0xfd8e8  5      OPC=leaq_r64_m16    
  callq 0x10(%rax)                    #  92    0xfd8ed  3      OPC=callq_m64       
  testl %eax, %eax                    #  93    0xfd8f0  2      OPC=testl_r32_r32   
  je .L_fd972                         #  94    0xfd8f2  2      OPC=je_label        
  jmpq .L_fd947                       #  95    0xfd8f4  2      OPC=jmpq_label      
.L_fd8f6:                             #        0xfd8f6  0      OPC=<label>         
  movq (%r12), %rdi                   #  96    0xfd8f6  4      OPC=movq_r64_m64    
  movq 0x38(%rdi), %rax               #  97    0xfd8fa  4      OPC=movq_r64_m64    
  callq 0x18(%rax)                    #  98    0xfd8fe  3      OPC=callq_m64       
  testl %eax, %eax                    #  99    0xfd901  2      OPC=testl_r32_r32   
  jne .L_fd7cc                        #  100   0xfd903  6      OPC=jne_label_1     
  jmpq .L_fd978                       #  101   0xfd909  2      OPC=jmpq_label      
.L_fd90b:                             #        0xfd90b  0      OPC=<label>         
  movl $0x2, 0x18(%rbx)               #  102   0xfd90b  7      OPC=movl_m32_imm32  
  leaq 0x78(%rsp), %rsi               #  103   0xfd912  5      OPC=leaq_r64_m16    
  movq %rbp, %rdi                     #  104   0xfd917  3      OPC=movq_r64_r64    
  callq .xdr_opaque_auth_GLIBC_2_2_5  #  105   0xfd91a  5      OPC=callq_label     
  movl %r14d, %eax                    #  106   0xfd91f  3      OPC=movl_r32_r32    
  jmpq .L_fd97b                       #  107   0xfd922  2      OPC=jmpq_label      
.L_fd924:                             #        0xfd924  0      OPC=<label>         
  movl $0x1, %eax                     #  108   0xfd924  5      OPC=movl_r32_imm32  
  jmpq .L_fd97b                       #  109   0xfd929  2      OPC=jmpq_label      
.L_fd92b:                             #        0xfd92b  0      OPC=<label>         
  movl $0x1, %eax                     #  110   0xfd92b  5      OPC=movl_r32_imm32  
  jmpq .L_fd97b                       #  111   0xfd930  2      OPC=jmpq_label      
.L_fd932:                             #        0xfd932  0      OPC=<label>         
  movl $0x1, %eax                     #  112   0xfd932  5      OPC=movl_r32_imm32  
  jmpq .L_fd97b                       #  113   0xfd937  2      OPC=jmpq_label      
.L_fd939:                             #        0xfd939  0      OPC=<label>         
  movl $0x1, %eax                     #  114   0xfd939  5      OPC=movl_r32_imm32  
  jmpq .L_fd97b                       #  115   0xfd93e  2      OPC=jmpq_label      
.L_fd940:                             #        0xfd940  0      OPC=<label>         
  movl $0x2, %eax                     #  116   0xfd940  5      OPC=movl_r32_imm32  
  jmpq .L_fd97b                       #  117   0xfd945  2      OPC=jmpq_label      
.L_fd947:                             #        0xfd947  0      OPC=<label>         
  movq (%r12), %rdi                   #  118   0xfd947  4      OPC=movq_r64_m64    
  movq 0x38(%rdi), %rax               #  119   0xfd94b  4      OPC=movq_r64_m64    
  leaq 0x78(%rsp), %rsi               #  120   0xfd94f  5      OPC=leaq_r64_m16    
  callq 0x10(%rax)                    #  121   0xfd954  3      OPC=callq_m64       
  testl %eax, %eax                    #  122   0xfd957  2      OPC=testl_r32_r32   
  movl $0x7, %eax                     #  123   0xfd959  5      OPC=movl_r32_imm32  
  cmovel %eax, %r14d                  #  124   0xfd95e  4      OPC=cmovel_r32_r32  
  movl %r14d, %eax                    #  125   0xfd962  3      OPC=movl_r32_r32    
  cmpq $0x0, 0x80(%rsp)               #  126   0xfd965  9      OPC=cmpq_m64_imm8   
  jne .L_fd90b                        #  127   0xfd96e  2      OPC=jne_label       
  jmpq .L_fd97b                       #  128   0xfd970  2      OPC=jmpq_label      
.L_fd972:                             #        0xfd972  0      OPC=<label>         
  movl $0x7, %r14d                    #  129   0xfd972  6      OPC=movl_r32_imm32  
.L_fd978:                             #        0xfd978  0      OPC=<label>         
  movl %r14d, %eax                    #  130   0xfd978  3      OPC=movl_r32_r32    
.L_fd97b:                             #        0xfd97b  0      OPC=<label>         
  addq $0xc8, %rsp                    #  131   0xfd97b  7      OPC=addq_r64_imm32  
  popq %rbx                           #  132   0xfd982  1      OPC=popq_r64_1      
  popq %rbp                           #  133   0xfd983  1      OPC=popq_r64_1      
  popq %r12                           #  134   0xfd984  2      OPC=popq_r64_1      
  popq %r13                           #  135   0xfd986  2      OPC=popq_r64_1      
  popq %r14                           #  136   0xfd988  2      OPC=popq_r64_1      
  popq %r15                           #  137   0xfd98a  2      OPC=popq_r64_1      
  retq                                #  138   0xfd98c  1      OPC=retq            
                                                                                   
.size clntraw_call, .-clntraw_call

