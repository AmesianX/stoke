  .text
  .globl __parse_one_specmb
  .type __parse_one_specmb, @function

#! file-offset 0x619ba
#! rip-offset  0x619ba
#! capacity    1128 bytes

# Text                                    #  Line  RIP      Bytes  Opcode              
.__parse_one_specmb:                      #        0x619ba  0      OPC=<label>         
  pushq %r14                              #  1     0x619ba  2      OPC=pushq_r64_1     
  pushq %r13                              #  2     0x619bc  2      OPC=pushq_r64_1     
  pushq %r12                              #  3     0x619be  2      OPC=pushq_r64_1     
  pushq %rbp                              #  4     0x619c0  1      OPC=pushq_r64_1     
  pushq %rbx                              #  5     0x619c1  1      OPC=pushq_r64_1     
  subq $0x10, %rsp                        #  6     0x619c2  4      OPC=subq_r64_imm8   
  movq %rsi, %rbp                         #  7     0x619c6  3      OPC=movq_r64_r64    
  movq %rdx, %rbx                         #  8     0x619c9  3      OPC=movq_r64_r64    
  movq %rcx, %r12                         #  9     0x619cc  3      OPC=movq_r64_r64    
  leaq 0x1(%rdi), %r13                    #  10    0x619cf  4      OPC=leaq_r64_m16    
  movq %r13, 0x8(%rsp)                    #  11    0x619d3  5      OPC=movq_m64_r64    
  movl $0xffffffff, 0x30(%rdx)            #  12    0x619d8  7      OPC=movl_m32_imm32  
  andb $0x7, 0xc(%rdx)                    #  13    0x619df  4      OPC=andb_m8_imm8    
  movl $0x20, 0x10(%rdx)                  #  14    0x619e3  7      OPC=movl_m32_imm32  
  movzbl 0xd(%rdx), %eax                  #  15    0x619ea  4      OPC=movzbl_r32_m8   
  andl $0xfffffff2, %eax                  #  16    0x619ee  6      OPC=andl_r32_imm32  
  nop                                     #  17    0x619f4  1      OPC=nop             
  nop                                     #  18    0x619f5  1      OPC=nop             
  nop                                     #  19    0x619f6  1      OPC=nop             
  movb %al, 0xd(%rdx)                     #  20    0x619f7  3      OPC=movb_m8_r8      
  movzbl 0x1(%rdi), %eax                  #  21    0x619fa  4      OPC=movzbl_r32_m8   
  subl $0x30, %eax                        #  22    0x619fe  3      OPC=subl_r32_imm8   
  cmpl $0x9, %eax                         #  23    0x61a01  3      OPC=cmpl_r32_imm8   
  ja .L_61a44                             #  24    0x61a04  2      OPC=ja_label        
  leaq 0x8(%rsp), %rdi                    #  25    0x61a06  5      OPC=leaq_r64_m16    
  callq .read_int                         #  26    0x61a0b  5      OPC=callq_label     
  testl %eax, %eax                        #  27    0x61a10  2      OPC=testl_r32_r32   
  je .L_61a3f                             #  28    0x61a12  2      OPC=je_label        
  movq 0x8(%rsp), %rdx                    #  29    0x61a14  5      OPC=movq_r64_m64    
  cmpb $0x24, (%rdx)                      #  30    0x61a19  3      OPC=cmpb_m8_imm8    
  jne .L_61a3f                            #  31    0x61a1c  2      OPC=jne_label       
  addq $0x1, %rdx                         #  32    0x61a1e  4      OPC=addq_r64_imm8   
  movq %rdx, 0x8(%rsp)                    #  33    0x61a22  5      OPC=movq_m64_r64    
  cmpl $0xffffffff, %eax                  #  34    0x61a27  6      OPC=cmpl_r32_imm32  
  nop                                     #  35    0x61a2d  1      OPC=nop             
  nop                                     #  36    0x61a2e  1      OPC=nop             
  nop                                     #  37    0x61a2f  1      OPC=nop             
  je .L_61a44                             #  38    0x61a30  2      OPC=je_label        
  leal -0x1(%rax), %edx                   #  39    0x61a32  3      OPC=leal_r32_m16    
  movl %edx, 0x30(%rbx)                   #  40    0x61a35  3      OPC=movl_m32_r32    
  movl %eax, %eax                         #  41    0x61a38  2      OPC=movl_r32_r32    
  movq (%r12), %rdx                       #  42    0x61a3a  4      OPC=movq_r64_m64    
  cmpq %rdx, %rax                         #  43    0x61a3e  3      OPC=cmpq_r64_r64    
  cmovbq %rdx, %rax                       #  44    0x61a41  4      OPC=cmovbq_r64_r64  
  movq %rax, (%r12)                       #  45    0x61a45  4      OPC=movq_m64_r64    
  jmpq .L_61a44                           #  46    0x61a49  2      OPC=jmpq_label      
.L_61a3f:                                 #        0x61a4b  0      OPC=<label>         
  movq %r13, 0x8(%rsp)                    #  47    0x61a4b  5      OPC=movq_m64_r64    
.L_61a44:                                 #        0x61a50  0      OPC=<label>         
  leaq 0xf0dc9(%rip), %rcx                #  48    0x61a50  7      OPC=leaq_r64_m16    
.L_61a4b:                                 #        0x61a57  0      OPC=<label>         
  movq 0x8(%rsp), %rdx                    #  49    0x61a57  5      OPC=movq_r64_m64    
  movzbl (%rdx), %eax                     #  50    0x61a5c  3      OPC=movzbl_r32_m8   
  subl $0x20, %eax                        #  51    0x61a5f  3      OPC=subl_r32_imm8   
  cmpb $0x29, %al                         #  52    0x61a62  2      OPC=cmpb_al_imm8    
  ja .L_61aa0                             #  53    0x61a64  2      OPC=ja_label        
  movzbl %al, %eax                        #  54    0x61a66  3      OPC=movzbl_r32_r8   
  movslq (%rcx,%rax,4), %rax              #  55    0x61a69  4      OPC=movslq_r64_m32  
  addq %rcx, %rax                         #  56    0x61a6d  3      OPC=addq_r64_r64    
  jmpq %rax                               #  57    0x61a70  2      OPC=jmpq_r64        
  orb $0x10, 0xc(%rbx)                    #  58    0x61a72  4      OPC=orb_m8_imm8     
  jmpq .L_61a91                           #  59    0x61a76  2      OPC=jmpq_label      
  orb $0x40, 0xc(%rbx)                    #  60    0x61a78  4      OPC=orb_m8_imm8     
  jmpq .L_61a91                           #  61    0x61a7c  2      OPC=jmpq_label      
  orb $0x20, 0xc(%rbx)                    #  62    0x61a7e  4      OPC=orb_m8_imm8     
  jmpq .L_61a91                           #  63    0x61a82  2      OPC=jmpq_label      
  orb $0x8, 0xc(%rbx)                     #  64    0x61a84  4      OPC=orb_m8_imm8     
  jmpq .L_61a91                           #  65    0x61a88  2      OPC=jmpq_label      
  movl $0x30, 0x10(%rbx)                  #  66    0x61a8a  7      OPC=movl_m32_imm32  
  jmpq .L_61a91                           #  67    0x61a91  2      OPC=jmpq_label      
  orb $0x80, 0xc(%rbx)                    #  68    0x61a93  4      OPC=orb_m8_imm8     
  jmpq .L_61a91                           #  69    0x61a97  2      OPC=jmpq_label      
  orb $0x8, 0xd(%rbx)                     #  70    0x61a99  4      OPC=orb_m8_imm8     
.L_61a91:                                 #        0x61a9d  0      OPC=<label>         
  leaq 0x1(%rdx), %rax                    #  71    0x61a9d  4      OPC=leaq_r64_m16    
  movq %rax, 0x8(%rsp)                    #  72    0x61aa1  5      OPC=movq_m64_r64    
  cmpb $0x0, 0x1(%rdx)                    #  73    0x61aa6  4      OPC=cmpb_m8_imm8    
  jne .L_61a4b                            #  74    0x61aaa  2      OPC=jne_label       
.L_61aa0:                                 #        0x61aac  0      OPC=<label>         
  testb $0x20, 0xc(%rbx)                  #  75    0x61aac  4      OPC=testb_m8_imm8   
  je .L_61aad                             #  76    0x61ab0  2      OPC=je_label        
  movl $0x20, 0x10(%rbx)                  #  77    0x61ab2  7      OPC=movl_m32_imm32  
.L_61aad:                                 #        0x61ab9  0      OPC=<label>         
  movl $0xffffffff, 0x2c(%rbx)            #  78    0x61ab9  7      OPC=movl_m32_imm32  
  movl $0x0, 0x4(%rbx)                    #  79    0x61ac0  7      OPC=movl_m32_imm32  
  movq 0x8(%rsp), %rdx                    #  80    0x61ac7  5      OPC=movq_r64_m64    
  movzbl (%rdx), %eax                     #  81    0x61acc  3      OPC=movzbl_r32_m8   
  cmpb $0x2a, %al                         #  82    0x61acf  2      OPC=cmpb_al_imm8    
  jne .L_61b36                            #  83    0x61ad1  2      OPC=jne_label       
  leaq 0x1(%rdx), %r14                    #  84    0x61ad3  4      OPC=leaq_r64_m16    
  movq %r14, 0x8(%rsp)                    #  85    0x61ad7  5      OPC=movq_m64_r64    
  movzbl 0x1(%rdx), %eax                  #  86    0x61adc  4      OPC=movzbl_r32_m8   
  subl $0x30, %eax                        #  87    0x61ae0  3      OPC=subl_r32_imm8   
  cmpl $0x9, %eax                         #  88    0x61ae3  3      OPC=cmpl_r32_imm8   
  ja .L_61b19                             #  89    0x61ae6  2      OPC=ja_label        
  leaq 0x8(%rsp), %rdi                    #  90    0x61ae8  5      OPC=leaq_r64_m16    
  callq .read_int                         #  91    0x61aed  5      OPC=callq_label     
  testl %eax, %eax                        #  92    0x61af2  2      OPC=testl_r32_r32   
  je .L_61b19                             #  93    0x61af4  2      OPC=je_label        
  movq 0x8(%rsp), %rdx                    #  94    0x61af6  5      OPC=movq_r64_m64    
  cmpb $0x24, (%rdx)                      #  95    0x61afb  3      OPC=cmpb_m8_imm8    
  jne .L_61b19                            #  96    0x61afe  2      OPC=jne_label       
  cmpl $0xffffffff, %eax                  #  97    0x61b00  6      OPC=cmpl_r32_imm32  
  nop                                     #  98    0x61b06  1      OPC=nop             
  nop                                     #  99    0x61b07  1      OPC=nop             
  nop                                     #  100   0x61b08  1      OPC=nop             
  je .L_61b10                             #  101   0x61b09  2      OPC=je_label        
  leal -0x1(%rax), %ecx                   #  102   0x61b0b  3      OPC=leal_r32_m16    
  movl %ecx, 0x2c(%rbx)                   #  103   0x61b0e  3      OPC=movl_m32_r32    
  movl %eax, %eax                         #  104   0x61b11  2      OPC=movl_r32_r32    
  movq (%r12), %rcx                       #  105   0x61b13  4      OPC=movq_r64_m64    
  cmpq %rcx, %rax                         #  106   0x61b17  3      OPC=cmpq_r64_r64    
  cmovbq %rcx, %rax                       #  107   0x61b1a  4      OPC=cmovbq_r64_r64  
  movq %rax, (%r12)                       #  108   0x61b1e  4      OPC=movq_m64_r64    
.L_61b10:                                 #        0x61b22  0      OPC=<label>         
  addq $0x1, %rdx                         #  109   0x61b22  4      OPC=addq_r64_imm8   
  movq %rdx, 0x8(%rsp)                    #  110   0x61b26  5      OPC=movq_m64_r64    
.L_61b19:                                 #        0x61b2b  0      OPC=<label>         
  movl $0x0, %r13d                        #  111   0x61b2b  6      OPC=movl_r32_imm32  
  cmpl $0x0, 0x2c(%rbx)                   #  112   0x61b31  4      OPC=cmpl_m32_imm8   
  jns .L_61b59                            #  113   0x61b35  2      OPC=jns_label       
  movl %ebp, 0x2c(%rbx)                   #  114   0x61b37  3      OPC=movl_m32_r32    
  movq %r14, 0x8(%rsp)                    #  115   0x61b3a  5      OPC=movq_m64_r64    
  leaq 0x1(%rbp), %rbp                    #  116   0x61b3f  4      OPC=leaq_r64_m16    
  movb $0x1, %r13b                        #  117   0x61b43  3      OPC=movb_r8_imm8    
  jmpq .L_61b59                           #  118   0x61b46  2      OPC=jmpq_label      
.L_61b36:                                 #        0x61b48  0      OPC=<label>         
  movzbl %al, %eax                        #  119   0x61b48  3      OPC=movzbl_r32_r8   
  leal -0x30(%rax), %edx                  #  120   0x61b4b  3      OPC=leal_r32_m16    
  movl $0x0, %r13d                        #  121   0x61b4e  6      OPC=movl_r32_imm32  
  cmpl $0x9, %edx                         #  122   0x61b54  3      OPC=cmpl_r32_imm8   
  ja .L_61b59                             #  123   0x61b57  2      OPC=ja_label        
  leaq 0x8(%rsp), %rdi                    #  124   0x61b59  5      OPC=leaq_r64_m16    
  callq .read_int                         #  125   0x61b5e  5      OPC=callq_label     
  cmpl $0xffffffff, %eax                  #  126   0x61b63  6      OPC=cmpl_r32_imm32  
  nop                                     #  127   0x61b69  1      OPC=nop             
  nop                                     #  128   0x61b6a  1      OPC=nop             
  nop                                     #  129   0x61b6b  1      OPC=nop             
  je .L_61b59                             #  130   0x61b6c  2      OPC=je_label        
  movl %eax, 0x4(%rbx)                    #  131   0x61b6e  3      OPC=movl_m32_r32    
.L_61b59:                                 #        0x61b71  0      OPC=<label>         
  movl $0xffffffff, 0x28(%rbx)            #  132   0x61b71  7      OPC=movl_m32_imm32  
  movl $0xffffffff, (%rbx)                #  133   0x61b78  6      OPC=movl_m32_imm32  
  movq 0x8(%rsp), %rax                    #  134   0x61b7e  5      OPC=movq_r64_m64    
  cmpb $0x2e, (%rax)                      #  135   0x61b83  3      OPC=cmpb_m8_imm8    
  jne .L_61c14                            #  136   0x61b86  6      OPC=jne_label_1     
  leaq 0x1(%rax), %rdx                    #  137   0x61b8c  4      OPC=leaq_r64_m16    
  movq %rdx, 0x8(%rsp)                    #  138   0x61b90  5      OPC=movq_m64_r64    
  movzbl 0x1(%rax), %edx                  #  139   0x61b95  4      OPC=movzbl_r32_m8   
  cmpb $0x2a, %dl                         #  140   0x61b99  3      OPC=cmpb_r8_imm8    
  jne .L_61bf0                            #  141   0x61b9c  2      OPC=jne_label       
  leaq 0x2(%rax), %r14                    #  142   0x61b9e  4      OPC=leaq_r64_m16    
  movq %r14, 0x8(%rsp)                    #  143   0x61ba2  5      OPC=movq_m64_r64    
  movzbl 0x2(%rax), %eax                  #  144   0x61ba7  4      OPC=movzbl_r32_m8   
  subl $0x30, %eax                        #  145   0x61bab  3      OPC=subl_r32_imm8   
  cmpl $0x9, %eax                         #  146   0x61bae  3      OPC=cmpl_r32_imm8   
  ja .L_61bd8                             #  147   0x61bb1  2      OPC=ja_label        
  leaq 0x8(%rsp), %rdi                    #  148   0x61bb3  5      OPC=leaq_r64_m16    
  callq .read_int                         #  149   0x61bb8  5      OPC=callq_label     
  testl %eax, %eax                        #  150   0x61bbd  2      OPC=testl_r32_r32   
  je .L_61bd8                             #  151   0x61bbf  2      OPC=je_label        
  movq 0x8(%rsp), %rdx                    #  152   0x61bc1  5      OPC=movq_r64_m64    
  cmpb $0x24, (%rdx)                      #  153   0x61bc6  3      OPC=cmpb_m8_imm8    
  jne .L_61bd8                            #  154   0x61bc9  2      OPC=jne_label       
  cmpl $0xffffffff, %eax                  #  155   0x61bcb  6      OPC=cmpl_r32_imm32  
  nop                                     #  156   0x61bd1  1      OPC=nop             
  nop                                     #  157   0x61bd2  1      OPC=nop             
  nop                                     #  158   0x61bd3  1      OPC=nop             
  je .L_61bcf                             #  159   0x61bd4  2      OPC=je_label        
  leal -0x1(%rax), %ecx                   #  160   0x61bd6  3      OPC=leal_r32_m16    
  movl %ecx, 0x28(%rbx)                   #  161   0x61bd9  3      OPC=movl_m32_r32    
  movl %eax, %eax                         #  162   0x61bdc  2      OPC=movl_r32_r32    
  movq (%r12), %rcx                       #  163   0x61bde  4      OPC=movq_r64_m64    
  cmpq %rcx, %rax                         #  164   0x61be2  3      OPC=cmpq_r64_r64    
  cmovbq %rcx, %rax                       #  165   0x61be5  4      OPC=cmovbq_r64_r64  
  movq %rax, (%r12)                       #  166   0x61be9  4      OPC=movq_m64_r64    
.L_61bcf:                                 #        0x61bed  0      OPC=<label>         
  addq $0x1, %rdx                         #  167   0x61bed  4      OPC=addq_r64_imm8   
  movq %rdx, 0x8(%rsp)                    #  168   0x61bf1  5      OPC=movq_m64_r64    
.L_61bd8:                                 #        0x61bf6  0      OPC=<label>         
  cmpl $0x0, 0x28(%rbx)                   #  169   0x61bf6  4      OPC=cmpl_m32_imm8   
  jns .L_61c14                            #  170   0x61bfa  2      OPC=jns_label       
  movl %ebp, 0x28(%rbx)                   #  171   0x61bfc  3      OPC=movl_m32_r32    
  addq $0x1, %r13                         #  172   0x61bff  4      OPC=addq_r64_imm8   
  movq %r14, 0x8(%rsp)                    #  173   0x61c03  5      OPC=movq_m64_r64    
  leaq 0x1(%rbp), %rbp                    #  174   0x61c08  4      OPC=leaq_r64_m16    
  jmpq .L_61c14                           #  175   0x61c0c  2      OPC=jmpq_label      
.L_61bf0:                                 #        0x61c0e  0      OPC=<label>         
  movzbl %dl, %edx                        #  176   0x61c0e  3      OPC=movzbl_r32_r8   
  subl $0x30, %edx                        #  177   0x61c11  3      OPC=subl_r32_imm8   
  cmpl $0x9, %edx                         #  178   0x61c14  3      OPC=cmpl_r32_imm8   
  ja .L_61c0e                             #  179   0x61c17  2      OPC=ja_label        
  leaq 0x8(%rsp), %rdi                    #  180   0x61c19  5      OPC=leaq_r64_m16    
  callq .read_int                         #  181   0x61c1e  5      OPC=callq_label     
  cmpl $0xffffffff, %eax                  #  182   0x61c23  6      OPC=cmpl_r32_imm32  
  nop                                     #  183   0x61c29  1      OPC=nop             
  nop                                     #  184   0x61c2a  1      OPC=nop             
  nop                                     #  185   0x61c2b  1      OPC=nop             
  je .L_61c14                             #  186   0x61c2c  2      OPC=je_label        
  movl %eax, (%rbx)                       #  187   0x61c2e  2      OPC=movl_m32_r32    
  jmpq .L_61c14                           #  188   0x61c30  2      OPC=jmpq_label      
.L_61c0e:                                 #        0x61c32  0      OPC=<label>         
  movl $0x0, (%rbx)                       #  189   0x61c32  6      OPC=movl_m32_imm32  
.L_61c14:                                 #        0x61c38  0      OPC=<label>         
  andb $0xf8, 0xc(%rbx)                   #  190   0x61c38  4      OPC=andb_m8_imm8    
  andb $0xfd, 0xd(%rbx)                   #  191   0x61c3c  4      OPC=andb_m8_imm8    
  movw $0x0, 0xe(%rbx)                    #  192   0x61c40  6      OPC=movw_m16_imm16  
  movq 0x32ed07(%rip), %rax               #  193   0x61c46  7      OPC=movq_r64_m64    
  testq %rax, %rax                        #  194   0x61c4d  3      OPC=testq_r64_r64   
  je .L_61c4e                             #  195   0x61c50  2      OPC=je_label        
  movq 0x8(%rsp), %rdx                    #  196   0x61c52  5      OPC=movq_r64_m64    
  movzbl (%rdx), %edx                     #  197   0x61c57  3      OPC=movzbl_r32_m8   
  cmpq $0x0, (%rax,%rdx,8)                #  198   0x61c5a  5      OPC=cmpq_m64_imm8   
  je .L_61c4e                             #  199   0x61c5f  2      OPC=je_label        
  leaq 0x8(%rsp), %rdi                    #  200   0x61c61  5      OPC=leaq_r64_m16    
  movq %rbx, %rsi                         #  201   0x61c66  3      OPC=movq_r64_r64    
  callq .__handle_registered_modifier_mb  #  202   0x61c69  5      OPC=callq_label     
  testl %eax, %eax                        #  203   0x61c6e  2      OPC=testl_r32_r32   
  je .L_61cc4                             #  204   0x61c70  2      OPC=je_label        
.L_61c4e:                                 #        0x61c72  0      OPC=<label>         
  movq 0x8(%rsp), %rcx                    #  205   0x61c72  5      OPC=movq_r64_m64    
  leaq 0x1(%rcx), %rax                    #  206   0x61c77  4      OPC=leaq_r64_m16    
  movq %rax, 0x8(%rsp)                    #  207   0x61c7b  5      OPC=movq_m64_r64    
  movzbl (%rcx), %eax                     #  208   0x61c80  3      OPC=movzbl_r32_m8   
  subl $0x4c, %eax                        #  209   0x61c83  3      OPC=subl_r32_imm8   
  cmpb $0x2e, %al                         #  210   0x61c86  2      OPC=cmpb_al_imm8    
  ja .L_61cbf                             #  211   0x61c88  2      OPC=ja_label        
  movzbl %al, %eax                        #  212   0x61c8a  3      OPC=movzbl_r32_r8   
  leaq 0xf0c4c(%rip), %rdx                #  213   0x61c8d  7      OPC=leaq_r64_m16    
  movslq (%rdx,%rax,4), %rax              #  214   0x61c94  4      OPC=movslq_r64_m32  
  addq %rax, %rdx                         #  215   0x61c98  3      OPC=addq_r64_r64    
  jmpq %rdx                               #  216   0x61c9b  2      OPC=jmpq_r64        
  cmpb $0x68, 0x1(%rcx)                   #  217   0x61c9d  4      OPC=cmpb_m8_imm8    
  je .L_61c85                             #  218   0x61ca1  2      OPC=je_label        
  orb $0x2, 0xc(%rbx)                     #  219   0x61ca3  4      OPC=orb_m8_imm8     
  jmpq .L_61cc4                           #  220   0x61ca7  2      OPC=jmpq_label      
.L_61c85:                                 #        0x61ca9  0      OPC=<label>         
  addq $0x2, %rcx                         #  221   0x61ca9  4      OPC=addq_r64_imm8   
  movq %rcx, 0x8(%rsp)                    #  222   0x61cad  5      OPC=movq_m64_r64    
  orb $0x2, 0xd(%rbx)                     #  223   0x61cb2  4      OPC=orb_m8_imm8     
  jmpq .L_61cc4                           #  224   0x61cb6  2      OPC=jmpq_label      
  orb $0x4, 0xc(%rbx)                     #  225   0x61cb8  4      OPC=orb_m8_imm8     
  cmpb $0x6c, 0x1(%rcx)                   #  226   0x61cbc  4      OPC=cmpb_m8_imm8    
  jne .L_61cc4                            #  227   0x61cc0  2      OPC=jne_label       
  addq $0x2, %rcx                         #  228   0x61cc2  4      OPC=addq_r64_imm8   
  movq %rcx, 0x8(%rsp)                    #  229   0x61cc6  5      OPC=movq_m64_r64    
  orb $0x1, 0xc(%rbx)                     #  230   0x61ccb  4      OPC=orb_m8_imm8     
  jmpq .L_61cc4                           #  231   0x61ccf  2      OPC=jmpq_label      
  orb $0x4, 0xc(%rbx)                     #  232   0x61cd1  4      OPC=orb_m8_imm8     
  jmpq .L_61cc4                           #  233   0x61cd5  2      OPC=jmpq_label      
  orb $0x4, 0xc(%rbx)                     #  234   0x61cd7  4      OPC=orb_m8_imm8     
  jmpq .L_61cc4                           #  235   0x61cdb  2      OPC=jmpq_label      
  orb $0x4, 0xc(%rbx)                     #  236   0x61cdd  4      OPC=orb_m8_imm8     
  jmpq .L_61cc4                           #  237   0x61ce1  2      OPC=jmpq_label      
.L_61cbf:                                 #        0x61ce3  0      OPC=<label>         
  movq %rcx, 0x8(%rsp)                    #  238   0x61ce3  5      OPC=movq_m64_r64    
.L_61cc4:                                 #        0x61ce8  0      OPC=<label>         
  movq 0x8(%rsp), %rax                    #  239   0x61ce8  5      OPC=movq_r64_m64    
  leaq 0x1(%rax), %rdx                    #  240   0x61ced  4      OPC=leaq_r64_m16    
  movq %rdx, 0x8(%rsp)                    #  241   0x61cf1  5      OPC=movq_m64_r64    
  movzbl (%rax), %eax                     #  242   0x61cf6  3      OPC=movzbl_r32_m8   
  movzbl %al, %edx                        #  243   0x61cf9  3      OPC=movzbl_r32_r8   
  movl %edx, 0x8(%rbx)                    #  244   0x61cfc  3      OPC=movl_m32_r32    
  movl $0xffffffff, 0x40(%rbx)            #  245   0x61cff  7      OPC=movl_m32_imm32  
  cmpq $0x0, 0x32ec3e(%rip)               #  246   0x61d06  8      OPC=cmpq_m64_imm8   
  je .L_61d20                             #  247   0x61d0e  2      OPC=je_label        
  movzbl %al, %eax                        #  248   0x61d10  3      OPC=movzbl_r32_r8   
  movq 0x32ab9a(%rip), %rdx               #  249   0x61d13  7      OPC=movq_r64_m64    
  movq (%rdx,%rax,8), %rax                #  250   0x61d1a  4      OPC=movq_r64_m64    
  testq %rax, %rax                        #  251   0x61d1e  3      OPC=testq_r64_r64   
  je .L_61d20                             #  252   0x61d21  2      OPC=je_label        
  leaq 0x40(%rbx), %rcx                   #  253   0x61d23  4      OPC=leaq_r64_m16    
  leaq 0x34(%rbx), %rdx                   #  254   0x61d27  4      OPC=leaq_r64_m16    
  movl $0x1, %esi                         #  255   0x61d2b  5      OPC=movl_r32_imm32  
  movq %rbx, %rdi                         #  256   0x61d30  3      OPC=movq_r64_r64    
  callq %rax                              #  257   0x61d33  2      OPC=callq_r64       
  movslq %eax, %rdx                       #  258   0x61d35  3      OPC=movslq_r64_r32  
  movq %rdx, 0x38(%rbx)                   #  259   0x61d38  4      OPC=movq_m64_r64    
  testl %eax, %eax                        #  260   0x61d3c  2      OPC=testl_r32_r32   
  jns .L_61dcd                            #  261   0x61d3e  6      OPC=jns_label_1     
.L_61d20:                                 #        0x61d44  0      OPC=<label>         
  movq $0x1, 0x38(%rbx)                   #  262   0x61d44  8      OPC=movq_m64_imm32  
  movl 0x8(%rbx), %eax                    #  263   0x61d4c  3      OPC=movl_r32_m32    
  leal -0x41(%rax), %edx                  #  264   0x61d4f  3      OPC=leal_r32_m16    
  cmpl $0x37, %edx                        #  265   0x61d52  3      OPC=cmpl_r32_imm8   
  ja .L_61dc3                             #  266   0x61d55  6      OPC=ja_label_1      
  movl %edx, %edx                         #  267   0x61d5b  2      OPC=movl_r32_r32    
  leaq 0xf0c38(%rip), %rax                #  268   0x61d5d  7      OPC=leaq_r64_m16    
  movslq (%rax,%rdx,4), %rdx              #  269   0x61d64  4      OPC=movslq_r64_m32  
  addq %rdx, %rax                         #  270   0x61d68  3      OPC=addq_r64_r64    
  jmpq %rax                               #  271   0x61d6b  2      OPC=jmpq_r64        
  movzbl 0xc(%rbx), %eax                  #  272   0x61d6d  4      OPC=movzbl_r32_m8   
  testb $0x4, %al                         #  273   0x61d71  2      OPC=testb_al_imm8   
  je .L_61d5a                             #  274   0x61d73  2      OPC=je_label        
  movl $0x200, 0x34(%rbx)                 #  275   0x61d75  7      OPC=movl_m32_imm32  
  jmpq .L_61dcd                           #  276   0x61d7c  2      OPC=jmpq_label      
.L_61d5a:                                 #        0x61d7e  0      OPC=<label>         
  testb $0x2, %al                         #  277   0x61d7e  2      OPC=testb_al_imm8   
  je .L_61d67                             #  278   0x61d80  2      OPC=je_label        
  movl $0x400, 0x34(%rbx)                 #  279   0x61d82  7      OPC=movl_m32_imm32  
  jmpq .L_61dcd                           #  280   0x61d89  2      OPC=jmpq_label      
.L_61d67:                                 #        0x61d8b  0      OPC=<label>         
  testb $0x2, 0xd(%rbx)                   #  281   0x61d8b  4      OPC=testb_m8_imm8   
  setne %al                               #  282   0x61d8f  3      OPC=setne_r8        
  movzbl %al, %eax                        #  283   0x61d92  3      OPC=movzbl_r32_r8   
  movl %eax, 0x34(%rbx)                   #  284   0x61d95  3      OPC=movl_m32_r32    
  jmpq .L_61dcd                           #  285   0x61d98  2      OPC=jmpq_label      
  movzbl 0xc(%rbx), %eax                  #  286   0x61d9a  4      OPC=movzbl_r32_m8   
  andl $0x1, %eax                         #  287   0x61d9e  3      OPC=andl_r32_imm8   
  cmpb $0x1, %al                          #  288   0x61da1  2      OPC=cmpb_al_imm8    
  sbbl %eax, %eax                         #  289   0x61da3  2      OPC=sbbl_r32_r32    
  movb $0x0, %al                          #  290   0x61da5  2      OPC=movb_r8_imm8    
  addl $0x107, %eax                       #  291   0x61da7  5      OPC=addl_eax_imm32  
  movl %eax, 0x34(%rbx)                   #  292   0x61dac  3      OPC=movl_m32_r32    
  jmpq .L_61dcd                           #  293   0x61daf  2      OPC=jmpq_label      
  movl $0x1, 0x34(%rbx)                   #  294   0x61db1  7      OPC=movl_m32_imm32  
  jmpq .L_61dcd                           #  295   0x61db8  2      OPC=jmpq_label      
  movl $0x2, 0x34(%rbx)                   #  296   0x61dba  7      OPC=movl_m32_imm32  
  jmpq .L_61dcd                           #  297   0x61dc1  2      OPC=jmpq_label      
  movl $0x3, 0x34(%rbx)                   #  298   0x61dc3  7      OPC=movl_m32_imm32  
  jmpq .L_61dcd                           #  299   0x61dca  2      OPC=jmpq_label      
  movl $0x4, 0x34(%rbx)                   #  300   0x61dcc  7      OPC=movl_m32_imm32  
  jmpq .L_61dcd                           #  301   0x61dd3  2      OPC=jmpq_label      
  movl $0x5, 0x34(%rbx)                   #  302   0x61dd5  7      OPC=movl_m32_imm32  
  jmpq .L_61dcd                           #  303   0x61ddc  2      OPC=jmpq_label      
  movl $0x800, 0x34(%rbx)                 #  304   0x61dde  7      OPC=movl_m32_imm32  
  jmpq .L_61dcd                           #  305   0x61de5  2      OPC=jmpq_label      
.L_61dc3:                                 #        0x61de7  0      OPC=<label>         
  movq $0x0, 0x38(%rbx)                   #  306   0x61de7  8      OPC=movq_m64_imm32  
  jmpq .L_61de2                           #  307   0x61def  2      OPC=jmpq_label      
.L_61dcd:                                 #        0x61df1  0      OPC=<label>         
  cmpl $0xffffffff, 0x30(%rbx)            #  308   0x61df1  7      OPC=cmpl_m32_imm32  
  nop                                     #  309   0x61df8  1      OPC=nop             
  nop                                     #  310   0x61df9  1      OPC=nop             
  nop                                     #  311   0x61dfa  1      OPC=nop             
  nop                                     #  312   0x61dfb  1      OPC=nop             
  jne .L_61de2                            #  313   0x61dfc  2      OPC=jne_label       
  movq 0x38(%rbx), %rax                   #  314   0x61dfe  4      OPC=movq_r64_m64    
  testq %rax, %rax                        #  315   0x61e02  3      OPC=testq_r64_r64   
  je .L_61de2                             #  316   0x61e05  2      OPC=je_label        
  movl %ebp, 0x30(%rbx)                   #  317   0x61e07  3      OPC=movl_m32_r32    
  addq %rax, %r13                         #  318   0x61e0a  3      OPC=addq_r64_r64    
.L_61de2:                                 #        0x61e0d  0      OPC=<label>         
  cmpl $0x0, 0x8(%rbx)                    #  319   0x61e0d  4      OPC=cmpl_m32_imm8   
  jne .L_61dfb                            #  320   0x61e11  2      OPC=jne_label       
  movq 0x8(%rsp), %rax                    #  321   0x61e13  5      OPC=movq_r64_m64    
  subq $0x1, %rax                         #  322   0x61e18  4      OPC=subq_r64_imm8   
  movq %rax, 0x20(%rbx)                   #  323   0x61e1c  4      OPC=movq_m64_r64    
  movq %rax, 0x18(%rbx)                   #  324   0x61e20  4      OPC=movq_m64_r64    
  jmpq .L_61e12                           #  325   0x61e24  2      OPC=jmpq_label      
.L_61dfb:                                 #        0x61e26  0      OPC=<label>         
  movq 0x8(%rsp), %rdi                    #  326   0x61e26  5      OPC=movq_r64_m64    
  movq %rdi, 0x18(%rbx)                   #  327   0x61e2b  4      OPC=movq_m64_r64    
  movl $0x25, %esi                        #  328   0x61e2f  5      OPC=movl_r32_imm32  
  callq .strchrnul                        #  329   0x61e34  5      OPC=callq_label     
  movq %rax, 0x20(%rbx)                   #  330   0x61e39  4      OPC=movq_m64_r64    
.L_61e12:                                 #        0x61e3d  0      OPC=<label>         
  movq %r13, %rax                         #  331   0x61e3d  3      OPC=movq_r64_r64    
  addq $0x10, %rsp                        #  332   0x61e40  4      OPC=addq_r64_imm8   
  popq %rbx                               #  333   0x61e44  1      OPC=popq_r64_1      
  popq %rbp                               #  334   0x61e45  1      OPC=popq_r64_1      
  popq %r12                               #  335   0x61e46  2      OPC=popq_r64_1      
  popq %r13                               #  336   0x61e48  2      OPC=popq_r64_1      
  popq %r14                               #  337   0x61e4a  2      OPC=popq_r64_1      
  retq                                    #  338   0x61e4c  1      OPC=retq            
                                                                                       
.size __parse_one_specmb, .-__parse_one_specmb

