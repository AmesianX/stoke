  .text
  .globl svctcp_create_GLIBC_2_2_5
  .type svctcp_create_GLIBC_2_2_5, @function

#! file-offset 0x107dfc
#! rip-offset  0x107dfc
#! capacity    492 bytes

# Text                              #  Line  RIP       Bytes  Opcode              
.svctcp_create_GLIBC_2_2_5:         #        0x107dfc  0      OPC=<label>         
  pushq %r14                        #  1     0x107dfc  2      OPC=pushq_r64_1     
  pushq %r13                        #  2     0x107dfe  2      OPC=pushq_r64_1     
  pushq %r12                        #  3     0x107e00  2      OPC=pushq_r64_1     
  pushq %rbp                        #  4     0x107e02  1      OPC=pushq_r64_1     
  pushq %rbx                        #  5     0x107e03  1      OPC=pushq_r64_1     
  subq $0x20, %rsp                  #  6     0x107e04  4      OPC=subq_r64_imm8   
  movl %edi, %ebx                   #  7     0x107e08  2      OPC=movl_r32_r32    
  movl %esi, %r13d                  #  8     0x107e0a  3      OPC=movl_r32_r32    
  movl %edx, %r12d                  #  9     0x107e0d  3      OPC=movl_r32_r32    
  movl $0x10, 0xc(%rsp)             #  10    0x107e10  8      OPC=movl_m32_imm32  
  movl $0x0, %ebp                   #  11    0x107e18  5      OPC=movl_r32_imm32  
  cmpl $0xffffffff, %edi            #  12    0x107e1d  6      OPC=cmpl_r32_imm32  
  nop                               #  13    0x107e23  1      OPC=nop             
  nop                               #  14    0x107e24  1      OPC=nop             
  nop                               #  15    0x107e25  1      OPC=nop             
  jne .L_107e6b                     #  16    0x107e26  2      OPC=jne_label       
  movl $0x6, %edx                   #  17    0x107e28  5      OPC=movl_r32_imm32  
  movl $0x1, %esi                   #  18    0x107e2d  5      OPC=movl_r32_imm32  
  movl $0x2, %edi                   #  19    0x107e32  5      OPC=movl_r32_imm32  
  callq .__socket                   #  20    0x107e37  5      OPC=callq_label     
  movl %eax, %ebx                   #  21    0x107e3c  2      OPC=movl_r32_r32    
  testl %eax, %eax                  #  22    0x107e3e  2      OPC=testl_r32_r32   
  jns .L_107e66                     #  23    0x107e40  2      OPC=jns_label       
  movl $0x5, %edx                   #  24    0x107e42  5      OPC=movl_r32_imm32  
  leaq 0x55f50(%rip), %rsi          #  25    0x107e47  7      OPC=leaq_r64_m16    
  leaq 0x4fa0b(%rip), %rdi          #  26    0x107e4e  7      OPC=leaq_r64_m16    
  callq .__dcgettext                #  27    0x107e55  5      OPC=callq_label     
  movq %rax, %rdi                   #  28    0x107e5a  3      OPC=movq_r64_r64    
  callq .perror                     #  29    0x107e5d  5      OPC=callq_label     
  movl $0x0, %eax                   #  30    0x107e62  5      OPC=movl_r32_imm32  
  jmpq .L_107fdb                    #  31    0x107e67  5      OPC=jmpq_label_1    
.L_107e66:                          #        0x107e6c  0      OPC=<label>         
  movl $0x1, %ebp                   #  32    0x107e6c  5      OPC=movl_r32_imm32  
.L_107e6b:                          #        0x107e71  0      OPC=<label>         
  leaq 0x10(%rsp), %rsi             #  33    0x107e71  5      OPC=leaq_r64_m16    
  movq $0x0, 0x10(%rsp)             #  34    0x107e76  9      OPC=movq_m64_imm32  
  movq $0x0, 0x18(%rsp)             #  35    0x107e7f  9      OPC=movq_m64_imm32  
  movw $0x2, 0x10(%rsp)             #  36    0x107e88  7      OPC=movw_m16_imm16  
  movl %ebx, %edi                   #  37    0x107e8f  2      OPC=movl_r32_r32    
  callq .bindresvport               #  38    0x107e91  5      OPC=callq_label     
  testl %eax, %eax                  #  39    0x107e96  2      OPC=testl_r32_r32   
  je .L_107eab                      #  40    0x107e98  2      OPC=je_label        
  movw $0x0, 0x12(%rsp)             #  41    0x107e9a  7      OPC=movw_m16_imm16  
  leaq 0x10(%rsp), %rsi             #  42    0x107ea1  5      OPC=leaq_r64_m16    
  movl 0xc(%rsp), %edx              #  43    0x107ea6  4      OPC=movl_r32_m32    
  movl %ebx, %edi                   #  44    0x107eaa  2      OPC=movl_r32_r32    
  callq .bind                       #  45    0x107eac  5      OPC=callq_label     
.L_107eab:                          #        0x107eb1  0      OPC=<label>         
  leaq 0x10(%rsp), %rsi             #  46    0x107eb1  5      OPC=leaq_r64_m16    
  leaq 0xc(%rsp), %rdx              #  47    0x107eb6  5      OPC=leaq_r64_m16    
  movl %ebx, %edi                   #  48    0x107ebb  2      OPC=movl_r32_r32    
  callq .getsockname                #  49    0x107ebd  5      OPC=callq_label     
  testl %eax, %eax                  #  50    0x107ec2  2      OPC=testl_r32_r32   
  jne .L_107ed0                     #  51    0x107ec4  2      OPC=jne_label       
  movl $0x80, %esi                  #  52    0x107ec6  5      OPC=movl_r32_imm32  
  movl %ebx, %edi                   #  53    0x107ecb  2      OPC=movl_r32_r32    
  callq .listen                     #  54    0x107ecd  5      OPC=callq_label     
  testl %eax, %eax                  #  55    0x107ed2  2      OPC=testl_r32_r32   
  je .L_107f0e                      #  56    0x107ed4  2      OPC=je_label        
.L_107ed0:                          #        0x107ed6  0      OPC=<label>         
  movl $0x5, %edx                   #  57    0x107ed6  5      OPC=movl_r32_imm32  
  leaq 0x55ee4(%rip), %rsi          #  58    0x107edb  7      OPC=leaq_r64_m16    
  leaq 0x4f977(%rip), %rdi          #  59    0x107ee2  7      OPC=leaq_r64_m16    
  callq .__dcgettext                #  60    0x107ee9  5      OPC=callq_label     
  movq %rax, %rdi                   #  61    0x107eee  3      OPC=movq_r64_r64    
  callq .perror                     #  62    0x107ef1  5      OPC=callq_label     
  movl $0x0, %eax                   #  63    0x107ef6  5      OPC=movl_r32_imm32  
  testl %ebp, %ebp                  #  64    0x107efb  2      OPC=testl_r32_r32   
  je .L_107fdb                      #  65    0x107efd  6      OPC=je_label_1      
  movl %ebx, %edi                   #  66    0x107f03  2      OPC=movl_r32_r32    
  callq .__close                    #  67    0x107f05  5      OPC=callq_label     
  movl $0x0, %eax                   #  68    0x107f0a  5      OPC=movl_r32_imm32  
  jmpq .L_107fdb                    #  69    0x107f0f  5      OPC=jmpq_label_1    
.L_107f0e:                          #        0x107f14  0      OPC=<label>         
  movl $0x8, %edi                   #  70    0x107f14  5      OPC=movl_r32_imm32  
  callq .memalign_plt               #  71    0x107f19  5      OPC=callq_label     
  movq %rax, %r14                   #  72    0x107f1e  3      OPC=movq_r64_r64    
  movl $0x150, %edi                 #  73    0x107f21  5      OPC=movl_r32_imm32  
  callq .memalign_plt               #  74    0x107f26  5      OPC=callq_label     
  movq %rax, %rbp                   #  75    0x107f2b  3      OPC=movq_r64_r64    
  testq %rax, %rax                  #  76    0x107f2e  3      OPC=testq_r64_r64   
  je .L_107f32                      #  77    0x107f31  2      OPC=je_label        
  testq %r14, %r14                  #  78    0x107f33  3      OPC=testq_r64_r64   
  jne .L_107f81                     #  79    0x107f36  2      OPC=jne_label       
.L_107f32:                          #        0x107f38  0      OPC=<label>         
  movl $0x5, %edx                   #  80    0x107f38  5      OPC=movl_r32_imm32  
  leaq 0x52c66(%rip), %rsi          #  81    0x107f3d  7      OPC=leaq_r64_m16    
  leaq 0x4f915(%rip), %rdi          #  82    0x107f44  7      OPC=leaq_r64_m16    
  callq .__dcgettext                #  83    0x107f4b  5      OPC=callq_label     
  movq %rax, %rcx                   #  84    0x107f50  3      OPC=movq_r64_r64    
  leaq 0x52dc3(%rip), %rdx          #  85    0x107f53  7      OPC=leaq_r64_m16    
  leaq 0x5233e(%rip), %rsi          #  86    0x107f5a  7      OPC=leaq_r64_m16    
  movl $0x0, %edi                   #  87    0x107f61  5      OPC=movl_r32_imm32  
  movl $0x0, %eax                   #  88    0x107f66  5      OPC=movl_r32_imm32  
  callq .__fxprintf                 #  89    0x107f6b  5      OPC=callq_label     
  movq %r14, %rdi                   #  90    0x107f70  3      OPC=movq_r64_r64    
  callq .L_1f8d0                    #  91    0x107f73  5      OPC=callq_label     
  movq %rbp, %rdi                   #  92    0x107f78  3      OPC=movq_r64_r64    
  callq .L_1f8d0                    #  93    0x107f7b  5      OPC=callq_label     
  movl $0x0, %eax                   #  94    0x107f80  5      OPC=movl_r32_imm32  
  jmpq .L_107fdb                    #  95    0x107f85  2      OPC=jmpq_label      
.L_107f81:                          #        0x107f87  0      OPC=<label>         
  movl %r13d, (%r14)                #  96    0x107f87  3      OPC=movl_m32_r32    
  movl %r12d, 0x4(%r14)             #  97    0x107f8a  4      OPC=movl_m32_r32    
  movq $0x0, 0x48(%rax)             #  98    0x107f8e  8      OPC=movq_m64_imm32  
  movq %r14, 0x40(%rax)             #  99    0x107f96  4      OPC=movq_m64_r64    
  movq 0x288295(%rip), %rax         #  100   0x107f9a  7      OPC=movq_r64_m64    
  movq %rax, 0x28(%rbp)             #  101   0x107fa1  4      OPC=movq_m64_r64    
  movq 0x288292(%rip), %rax         #  102   0x107fa5  7      OPC=movq_r64_m64    
  movq %rax, 0x30(%rbp)             #  103   0x107fac  4      OPC=movq_m64_r64    
  movq 0x28828f(%rip), %rax         #  104   0x107fb0  7      OPC=movq_r64_m64    
  movq %rax, 0x38(%rbp)             #  105   0x107fb7  4      OPC=movq_m64_r64    
  leaq 0x2818a4(%rip), %rax         #  106   0x107fbb  7      OPC=leaq_r64_m16    
  movq %rax, 0x8(%rbp)              #  107   0x107fc2  4      OPC=movq_m64_r64    
  movzwl 0x12(%rsp), %eax           #  108   0x107fc6  5      OPC=movzwl_r32_m16  
  rorw $0x8, %ax                    #  109   0x107fcb  4      OPC=rorw_r16_imm8   
  movw %ax, 0x4(%rbp)               #  110   0x107fcf  4      OPC=movw_m16_r16    
  movl %ebx, (%rbp)                 #  111   0x107fd3  3      OPC=movl_m32_r32    
  movq %rbp, %rdi                   #  112   0x107fd6  3      OPC=movq_r64_r64    
  callq .xprt_register_GLIBC_2_2_5  #  113   0x107fd9  5      OPC=callq_label     
  movq %rbp, %rax                   #  114   0x107fde  3      OPC=movq_r64_r64    
.L_107fdb:                          #        0x107fe1  0      OPC=<label>         
  addq $0x20, %rsp                  #  115   0x107fe1  4      OPC=addq_r64_imm8   
  popq %rbx                         #  116   0x107fe5  1      OPC=popq_r64_1      
  popq %rbp                         #  117   0x107fe6  1      OPC=popq_r64_1      
  popq %r12                         #  118   0x107fe7  2      OPC=popq_r64_1      
  popq %r13                         #  119   0x107fe9  2      OPC=popq_r64_1      
  popq %r14                         #  120   0x107feb  2      OPC=popq_r64_1      
  retq                              #  121   0x107fed  1      OPC=retq            
                                                                                  
.size svctcp_create_GLIBC_2_2_5, .-svctcp_create_GLIBC_2_2_5

