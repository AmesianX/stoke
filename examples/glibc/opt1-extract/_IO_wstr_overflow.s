  .text
  .globl _IO_wstr_overflow
  .type _IO_wstr_overflow, @function

#! file-offset 0x677f3
#! rip-offset  0x677f3
#! capacity    505 bytes

# Text                            #  Line  RIP      Bytes  Opcode                
._IO_wstr_overflow:               #        0x677f3  0      OPC=<label>           
  pushq %r15                      #  1     0x677f3  2      OPC=pushq_r64_1       
  pushq %r14                      #  2     0x677f5  2      OPC=pushq_r64_1       
  pushq %r13                      #  3     0x677f7  2      OPC=pushq_r64_1       
  pushq %r12                      #  4     0x677f9  2      OPC=pushq_r64_1       
  pushq %rbp                      #  5     0x677fb  1      OPC=pushq_r64_1       
  pushq %rbx                      #  6     0x677fc  1      OPC=pushq_r64_1       
  subq $0x28, %rsp                #  7     0x677fd  4      OPC=subq_r64_imm8     
  cmpl $0xffffffff, %esi          #  8     0x67801  6      OPC=cmpl_r32_imm32    
  nop                             #  9     0x67807  1      OPC=nop               
  nop                             #  10    0x67808  1      OPC=nop               
  nop                             #  11    0x67809  1      OPC=nop               
  sete %al                        #  12    0x6780a  3      OPC=sete_r8           
  movzbl %al, %r13d               #  13    0x6780d  4      OPC=movzbl_r32_r8     
  movl (%rdi), %edx               #  14    0x67811  2      OPC=movl_r32_m32      
  testb $0x8, %dl                 #  15    0x67813  3      OPC=testb_r8_imm8     
  je .L_6781f                     #  16    0x67816  2      OPC=je_label          
  movl %r13d, %eax                #  17    0x67818  3      OPC=movl_r32_r32      
  xorl $0x1, %eax                 #  18    0x6781b  3      OPC=xorl_r32_imm8     
  negl %eax                       #  19    0x6781e  2      OPC=negl_r32          
  jmpq .L_679dd                   #  20    0x67820  5      OPC=jmpq_label_1      
.L_6781f:                         #        0x67825  0      OPC=<label>           
  movl (%rdi), %ecx               #  21    0x67825  2      OPC=movl_r32_m32      
  andl $0xc00, %ecx               #  22    0x67827  6      OPC=andl_r32_imm32    
  cmpl $0x400, %ecx               #  23    0x6782d  6      OPC=cmpl_r32_imm32    
  jne .L_67850                    #  24    0x67833  2      OPC=jne_label         
  orb $0x8, %dh                   #  25    0x67835  3      OPC=orb_rh_imm8       
  movl %edx, (%rdi)               #  26    0x67838  2      OPC=movl_m32_r32      
  movq 0xa0(%rdi), %rdx           #  27    0x6783a  7      OPC=movq_r64_m64      
  movq (%rdx), %rcx               #  28    0x67841  3      OPC=movq_r64_m64      
  movq %rcx, 0x20(%rdx)           #  29    0x67844  4      OPC=movq_m64_r64      
  movq 0xa0(%rdi), %rdx           #  30    0x67848  7      OPC=movq_r64_m64      
  movq 0x8(%rdx), %rcx            #  31    0x6784f  4      OPC=movq_r64_m64      
  movq %rcx, (%rdx)               #  32    0x67853  3      OPC=movq_m64_r64      
.L_67850:                         #        0x67856  0      OPC=<label>           
  movl %esi, %ebp                 #  33    0x67856  2      OPC=movl_r32_r32      
  movq %rdi, %rbx                 #  34    0x67858  3      OPC=movq_r64_r64      
  movq 0xa0(%rdi), %rcx           #  35    0x6785b  7      OPC=movq_r64_m64      
  movq 0x30(%rcx), %r14           #  36    0x67862  4      OPC=movq_r64_m64      
  movq 0x38(%rcx), %r12           #  37    0x67866  4      OPC=movq_r64_m64      
  subq %r14, %r12                 #  38    0x6786a  3      OPC=subq_r64_r64      
  movq %r12, %r15                 #  39    0x6786d  3      OPC=movq_r64_r64      
  sarq $0x2, %r15                 #  40    0x67870  4      OPC=sarq_r64_imm8     
  movq 0x20(%rcx), %rdx           #  41    0x67874  4      OPC=movq_r64_m64      
  subq 0x18(%rcx), %rdx           #  42    0x67878  4      OPC=subq_r64_m64      
  sarq $0x2, %rdx                 #  43    0x6787c  4      OPC=sarq_r64_imm8     
  movzbl %al, %eax                #  44    0x67880  3      OPC=movzbl_r32_r8     
  addq %r15, %rax                 #  45    0x67883  3      OPC=addq_r64_r64      
  cmpq %rax, %rdx                 #  46    0x67886  3      OPC=cmpq_r64_r64      
  jb .L_679a5                     #  47    0x67889  6      OPC=jb_label_1        
  movl $0xffffffff, %eax          #  48    0x6788f  6      OPC=movl_r32_imm32_1  
  testb $0x8, 0x74(%rdi)          #  49    0x67895  4      OPC=testb_m8_imm8     
  jne .L_679dd                    #  50    0x67899  6      OPC=jne_label_1       
  leaq 0x64(%r15,%r15,1), %rax    #  51    0x6789f  5      OPC=leaq_r64_m16      
  movq %rax, %rsi                 #  52    0x678a4  3      OPC=movq_r64_r64      
  movq %rax, 0x8(%rsp)            #  53    0x678a7  5      OPC=movq_m64_r64      
  cmpq %rax, %r15                 #  54    0x678ac  3      OPC=cmpq_r64_r64      
  ja .L_679d8                     #  55    0x678af  6      OPC=ja_label_1        
  movq $0x3fffffffffffffff, %rax  #  56    0x678b5  10     OPC=movq_r64_imm64    
  cmpq %rax, %rsi                 #  57    0x678bf  3      OPC=cmpq_r64_r64      
  ja .L_679d8                     #  58    0x678c2  6      OPC=ja_label_1        
  leaq (,%rsi,4), %rax            #  59    0x678c8  8      OPC=leaq_r64_m16      
  movq %rax, 0x10(%rsp)           #  60    0x678d0  5      OPC=movq_m64_r64      
  movq %rax, %rdi                 #  61    0x678d5  3      OPC=movq_r64_r64      
  callq 0xe0(%rbx)                #  62    0x678d8  6      OPC=callq_m64         
  movq %rax, %rdi                 #  63    0x678de  3      OPC=movq_r64_r64      
  movq %rax, 0x18(%rsp)           #  64    0x678e1  5      OPC=movq_m64_r64      
  movl $0xffffffff, %eax          #  65    0x678e6  6      OPC=movl_r32_imm32_1  
  testq %rdi, %rdi                #  66    0x678ec  3      OPC=testq_r64_r64     
  je .L_679dd                     #  67    0x678ef  6      OPC=je_label_1        
  testq %r14, %r14                #  68    0x678f5  3      OPC=testq_r64_r64     
  je .L_67915                     #  69    0x678f8  2      OPC=je_label          
  movq %r15, %rdx                 #  70    0x678fa  3      OPC=movq_r64_r64      
  movq %r14, %rsi                 #  71    0x678fd  3      OPC=movq_r64_r64      
  callq .wmemcpy                  #  72    0x67900  5      OPC=callq_label       
  movq %r14, %rdi                 #  73    0x67905  3      OPC=movq_r64_r64      
  callq 0xe8(%rbx)                #  74    0x67908  6      OPC=callq_m64         
  movq 0xa0(%rbx), %rax           #  75    0x6790e  7      OPC=movq_r64_m64      
  movq $0x0, 0x30(%rax)           #  76    0x67915  8      OPC=movq_m64_imm32    
.L_67915:                         #        0x6791d  0      OPC=<label>           
  movq 0x8(%rsp), %rdx            #  77    0x6791d  5      OPC=movq_r64_m64      
  subq %r15, %rdx                 #  78    0x67922  3      OPC=subq_r64_r64      
  movq 0x18(%rsp), %r15           #  79    0x67925  5      OPC=movq_r64_m64      
  leaq (%r15,%r12,1), %rdi        #  80    0x6792a  4      OPC=leaq_r64_m16      
  movl $0x0, %esi                 #  81    0x6792e  5      OPC=movl_r32_imm32    
  callq .wmemset                  #  82    0x67933  5      OPC=callq_label       
  movq 0x10(%rsp), %rdx           #  83    0x67938  5      OPC=movq_r64_m64      
  addq %r15, %rdx                 #  84    0x6793d  3      OPC=addq_r64_r64      
  movl $0x1, %ecx                 #  85    0x67940  5      OPC=movl_r32_imm32    
  movq %r15, %rsi                 #  86    0x67945  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                 #  87    0x67948  3      OPC=movq_r64_r64      
  callq ._IO_wsetb                #  88    0x6794b  5      OPC=callq_label       
  movq 0xa0(%rbx), %rax           #  89    0x67950  7      OPC=movq_r64_m64      
  movq %r15, %rdx                 #  90    0x67957  3      OPC=movq_r64_r64      
  subq %r14, %rdx                 #  91    0x6795a  3      OPC=subq_r64_r64      
  addq %rdx, 0x10(%rax)           #  92    0x6795d  4      OPC=addq_m64_r64      
  movq 0xa0(%rbx), %rax           #  93    0x67961  7      OPC=movq_r64_m64      
  movq %r15, %rdx                 #  94    0x67968  3      OPC=movq_r64_r64      
  subq %r14, %rdx                 #  95    0x6796b  3      OPC=subq_r64_r64      
  addq %rdx, (%rax)               #  96    0x6796e  3      OPC=addq_m64_r64      
  movq 0xa0(%rbx), %rax           #  97    0x67971  7      OPC=movq_r64_m64      
  movq %r15, %rdx                 #  98    0x67978  3      OPC=movq_r64_r64      
  subq %r14, %rdx                 #  99    0x6797b  3      OPC=subq_r64_r64      
  addq %rdx, 0x8(%rax)            #  100   0x6797e  4      OPC=addq_m64_r64      
  movq 0xa0(%rbx), %rax           #  101   0x67982  7      OPC=movq_r64_m64      
  movq %r15, %rdx                 #  102   0x67989  3      OPC=movq_r64_r64      
  subq %r14, %rdx                 #  103   0x6798c  3      OPC=subq_r64_r64      
  addq %rdx, 0x20(%rax)           #  104   0x6798f  4      OPC=addq_m64_r64      
  movq 0xa0(%rbx), %rax           #  105   0x67993  7      OPC=movq_r64_m64      
  movq %r15, 0x18(%rax)           #  106   0x6799a  4      OPC=movq_m64_r64      
  movq 0xa0(%rbx), %rax           #  107   0x6799e  7      OPC=movq_r64_m64      
  movq 0x38(%rax), %rdx           #  108   0x679a5  4      OPC=movq_r64_m64      
  movq %rdx, 0x28(%rax)           #  109   0x679a9  4      OPC=movq_m64_r64      
.L_679a5:                         #        0x679ad  0      OPC=<label>           
  testl %r13d, %r13d              #  110   0x679ad  3      OPC=testl_r32_r32     
  jne .L_679bf                    #  111   0x679b0  2      OPC=jne_label         
  movq 0xa0(%rbx), %rdx           #  112   0x679b2  7      OPC=movq_r64_m64      
  movq 0x20(%rdx), %rax           #  113   0x679b9  4      OPC=movq_r64_m64      
  leaq 0x4(%rax), %rcx            #  114   0x679bd  4      OPC=leaq_r64_m16      
  movq %rcx, 0x20(%rdx)           #  115   0x679c1  4      OPC=movq_m64_r64      
  movl %ebp, (%rax)               #  116   0x679c5  2      OPC=movl_m32_r32      
.L_679bf:                         #        0x679c7  0      OPC=<label>           
  movq 0xa0(%rbx), %rdx           #  117   0x679c7  7      OPC=movq_r64_m64      
  movq 0x20(%rdx), %rcx           #  118   0x679ce  4      OPC=movq_r64_m64      
  movl %ebp, %eax                 #  119   0x679d2  2      OPC=movl_r32_r32      
  cmpq 0x8(%rdx), %rcx            #  120   0x679d4  4      OPC=cmpq_r64_m64      
  jbe .L_679dd                    #  121   0x679d8  2      OPC=jbe_label         
  movq %rcx, 0x8(%rdx)            #  122   0x679da  4      OPC=movq_m64_r64      
  jmpq .L_679dd                   #  123   0x679de  2      OPC=jmpq_label        
.L_679d8:                         #        0x679e0  0      OPC=<label>           
  movl $0xffffffff, %eax          #  124   0x679e0  6      OPC=movl_r32_imm32_1  
.L_679dd:                         #        0x679e6  0      OPC=<label>           
  addq $0x28, %rsp                #  125   0x679e6  4      OPC=addq_r64_imm8     
  popq %rbx                       #  126   0x679ea  1      OPC=popq_r64_1        
  popq %rbp                       #  127   0x679eb  1      OPC=popq_r64_1        
  popq %r12                       #  128   0x679ec  2      OPC=popq_r64_1        
  popq %r13                       #  129   0x679ee  2      OPC=popq_r64_1        
  popq %r14                       #  130   0x679f0  2      OPC=popq_r64_1        
  popq %r15                       #  131   0x679f2  2      OPC=popq_r64_1        
  retq                            #  132   0x679f4  1      OPC=retq              
                                                                                 
.size _IO_wstr_overflow, .-_IO_wstr_overflow

