  .text
  .globl save_for_wbackup
  .type save_for_wbackup, @function

#! file-offset 0x66b2c
#! rip-offset  0x66b2c
#! capacity    449 bytes

# Text                       #  Line  RIP      Bytes  Opcode                
.save_for_wbackup:           #        0x66b2c  0      OPC=<label>           
  pushq %r15                 #  1     0x66b2c  2      OPC=pushq_r64_1       
  pushq %r14                 #  2     0x66b2e  2      OPC=pushq_r64_1       
  pushq %r13                 #  3     0x66b30  2      OPC=pushq_r64_1       
  pushq %r12                 #  4     0x66b32  2      OPC=pushq_r64_1       
  pushq %rbp                 #  5     0x66b34  1      OPC=pushq_r64_1       
  pushq %rbx                 #  6     0x66b35  1      OPC=pushq_r64_1       
  subq $0x28, %rsp           #  7     0x66b36  4      OPC=subq_r64_imm8     
  movq %rdi, %r12            #  8     0x66b3a  3      OPC=movq_r64_r64      
  movq %rsi, %rbx            #  9     0x66b3d  3      OPC=movq_r64_r64      
  callq ._IO_least_wmarker   #  10    0x66b40  5      OPC=callq_label       
  movq %rax, %r14            #  11    0x66b45  3      OPC=movq_r64_r64      
  movq 0xa0(%r12), %rax      #  12    0x66b48  8      OPC=movq_r64_m64      
  movq 0x10(%rax), %r15      #  13    0x66b50  4      OPC=movq_r64_m64      
  movq %rbx, %rbp            #  14    0x66b54  3      OPC=movq_r64_r64      
  subq %r15, %rbp            #  15    0x66b57  3      OPC=subq_r64_r64      
  sarq $0x2, %rbp            #  16    0x66b5a  4      OPC=sarq_r64_imm8     
  movq %rbp, %r13            #  17    0x66b5e  3      OPC=movq_r64_r64      
  subq %r14, %r13            #  18    0x66b61  3      OPC=subq_r64_r64      
  movq 0x50(%rax), %rcx      #  19    0x66b64  4      OPC=movq_r64_m64      
  movq %rcx, %rsi            #  20    0x66b68  3      OPC=movq_r64_r64      
  movq %rcx, 0x8(%rsp)       #  21    0x66b6b  5      OPC=movq_m64_r64      
  movq 0x40(%rax), %rcx      #  22    0x66b70  4      OPC=movq_r64_m64      
  movq %rsi, %rax            #  23    0x66b74  3      OPC=movq_r64_r64      
  subq %rcx, %rax            #  24    0x66b77  3      OPC=subq_r64_r64      
  sarq $0x2, %rax            #  25    0x66b7a  4      OPC=sarq_r64_imm8     
  cmpq %rax, %r13            #  26    0x66b7e  3      OPC=cmpq_r64_r64      
  jbe .L_66c34               #  27    0x66b81  6      OPC=jbe_label_1       
  leaq 0x190(,%r13,4), %rax  #  28    0x66b87  8      OPC=leaq_r64_m16      
  movq %rax, 0x18(%rsp)      #  29    0x66b8f  5      OPC=movq_m64_r64      
  movq %rax, %rdi            #  30    0x66b94  3      OPC=movq_r64_r64      
  callq .memalign_plt        #  31    0x66b97  5      OPC=callq_label       
  movq %rax, 0x10(%rsp)      #  32    0x66b9c  5      OPC=movq_m64_r64      
  testq %rax, %rax           #  33    0x66ba1  3      OPC=testq_r64_r64     
  je .L_66cd2                #  34    0x66ba4  6      OPC=je_label_1        
  testq %r14, %r14           #  35    0x66baa  3      OPC=testq_r64_r64     
  jns .L_66bdf               #  36    0x66bad  2      OPC=jns_label         
  movq %r14, %rdx            #  37    0x66baf  3      OPC=movq_r64_r64      
  negq %rdx                  #  38    0x66bb2  3      OPC=negq_r64          
  movq 0x8(%rsp), %rax       #  39    0x66bb5  5      OPC=movq_r64_m64      
  leaq (%rax,%r14,4), %rsi   #  40    0x66bba  4      OPC=leaq_r64_m16      
  movq 0x10(%rsp), %rax      #  41    0x66bbe  5      OPC=movq_r64_m64      
  leaq 0x190(%rax), %rdi     #  42    0x66bc3  7      OPC=leaq_r64_m16      
  callq .wmempcpy            #  43    0x66bca  5      OPC=callq_label       
  movq %rbp, %rdx            #  44    0x66bcf  3      OPC=movq_r64_r64      
  movq %r15, %rsi            #  45    0x66bd2  3      OPC=movq_r64_r64      
  movq %rax, %rdi            #  46    0x66bd5  3      OPC=movq_r64_r64      
  callq .wmempcpy            #  47    0x66bd8  5      OPC=callq_label       
  jmpq .L_66bf7              #  48    0x66bdd  2      OPC=jmpq_label        
.L_66bdf:                    #        0x66bdf  0      OPC=<label>           
  leaq (%r15,%r14,4), %rsi   #  49    0x66bdf  4      OPC=leaq_r64_m16      
  movq 0x10(%rsp), %rax      #  50    0x66be3  5      OPC=movq_r64_m64      
  leaq 0x190(%rax), %rdi     #  51    0x66be8  7      OPC=leaq_r64_m16      
  movq %r13, %rdx            #  52    0x66bef  3      OPC=movq_r64_r64      
  callq .wmemcpy             #  53    0x66bf2  5      OPC=callq_label       
.L_66bf7:                    #        0x66bf7  0      OPC=<label>           
  movq 0xa0(%r12), %rax      #  54    0x66bf7  8      OPC=movq_r64_m64      
  movq 0x40(%rax), %rdi      #  55    0x66bff  4      OPC=movq_r64_m64      
  callq .L_1f8d0             #  56    0x66c03  5      OPC=callq_label       
  movq 0xa0(%r12), %rax      #  57    0x66c08  8      OPC=movq_r64_m64      
  movq 0x10(%rsp), %rcx      #  58    0x66c10  5      OPC=movq_r64_m64      
  movq %rcx, 0x40(%rax)      #  59    0x66c15  4      OPC=movq_m64_r64      
  movq 0xa0(%r12), %rdx      #  60    0x66c19  8      OPC=movq_r64_m64      
  movq %rcx, %rax            #  61    0x66c21  3      OPC=movq_r64_r64      
  addq 0x18(%rsp), %rax      #  62    0x66c24  5      OPC=addq_r64_m64      
  movq %rax, 0x50(%rdx)      #  63    0x66c29  4      OPC=movq_m64_r64      
  movl $0x64, %ebp           #  64    0x66c2d  5      OPC=movl_r32_imm32    
  jmpq .L_66c97              #  65    0x66c32  2      OPC=jmpq_label        
.L_66c34:                    #        0x66c34  0      OPC=<label>           
  subq %r13, %rax            #  66    0x66c34  3      OPC=subq_r64_r64      
  movq %rax, %rbp            #  67    0x66c37  3      OPC=movq_r64_r64      
  testq %r14, %r14           #  68    0x66c3a  3      OPC=testq_r64_r64     
  jns .L_66c82               #  69    0x66c3d  2      OPC=jns_label         
  movq %r14, %rdx            #  70    0x66c3f  3      OPC=movq_r64_r64      
  negq %rdx                  #  71    0x66c42  3      OPC=negq_r64          
  movq 0x8(%rsp), %rax       #  72    0x66c45  5      OPC=movq_r64_m64      
  leaq (%rax,%r14,4), %rsi   #  73    0x66c4a  4      OPC=leaq_r64_m16      
  leaq (%rcx,%rbp,4), %rdi   #  74    0x66c4e  4      OPC=leaq_r64_m16      
  callq .wmemmove            #  75    0x66c52  5      OPC=callq_label       
  movq 0xa0(%r12), %rax      #  76    0x66c57  8      OPC=movq_r64_m64      
  movq 0x10(%rax), %rsi      #  77    0x66c5f  4      OPC=movq_r64_m64      
  movq %rbx, %rdx            #  78    0x66c63  3      OPC=movq_r64_r64      
  subq %rsi, %rdx            #  79    0x66c66  3      OPC=subq_r64_r64      
  sarq $0x2, %rdx            #  80    0x66c69  4      OPC=sarq_r64_imm8     
  movq %rbp, %rcx            #  81    0x66c6d  3      OPC=movq_r64_r64      
  subq %r14, %rcx            #  82    0x66c70  3      OPC=subq_r64_r64      
  movq 0x40(%rax), %rax      #  83    0x66c73  4      OPC=movq_r64_m64      
  leaq (%rax,%rcx,4), %rdi   #  84    0x66c77  4      OPC=leaq_r64_m16      
  callq .wmemcpy             #  85    0x66c7b  5      OPC=callq_label       
  jmpq .L_66c97              #  86    0x66c80  2      OPC=jmpq_label        
.L_66c82:                    #        0x66c82  0      OPC=<label>           
  testq %r13, %r13           #  87    0x66c82  3      OPC=testq_r64_r64     
  je .L_66c97                #  88    0x66c85  2      OPC=je_label          
  leaq (%r15,%r14,4), %rsi   #  89    0x66c87  4      OPC=leaq_r64_m16      
  leaq (%rcx,%rax,4), %rdi   #  90    0x66c8b  4      OPC=leaq_r64_m16      
  movq %r13, %rdx            #  91    0x66c8f  3      OPC=movq_r64_r64      
  callq .wmemcpy             #  92    0x66c92  5      OPC=callq_label       
.L_66c97:                    #        0x66c97  0      OPC=<label>           
  movq 0xa0(%r12), %rax      #  93    0x66c97  8      OPC=movq_r64_m64      
  movq 0x40(%rax), %rdx      #  94    0x66c9f  4      OPC=movq_r64_m64      
  leaq (%rdx,%rbp,4), %rdx   #  95    0x66ca3  4      OPC=leaq_r64_m16      
  movq %rdx, 0x48(%rax)      #  96    0x66ca7  4      OPC=movq_m64_r64      
  movq 0xa0(%r12), %rax      #  97    0x66cab  8      OPC=movq_r64_m64      
  subq 0x10(%rax), %rbx      #  98    0x66cb3  4      OPC=subq_r64_m64      
  sarq $0x2, %rbx            #  99    0x66cb7  4      OPC=sarq_r64_imm8     
  movq 0x60(%r12), %rax      #  100   0x66cbb  5      OPC=movq_r64_m64      
  testq %rax, %rax           #  101   0x66cc0  3      OPC=testq_r64_r64     
  je .L_66cd9                #  102   0x66cc3  2      OPC=je_label          
.L_66cc5:                    #        0x66cc5  0      OPC=<label>           
  subl %ebx, 0x10(%rax)      #  103   0x66cc5  3      OPC=subl_m32_r32      
  movq (%rax), %rax          #  104   0x66cc8  3      OPC=movq_r64_m64      
  testq %rax, %rax           #  105   0x66ccb  3      OPC=testq_r64_r64     
  jne .L_66cc5               #  106   0x66cce  2      OPC=jne_label         
  jmpq .L_66cde              #  107   0x66cd0  2      OPC=jmpq_label        
.L_66cd2:                    #        0x66cd2  0      OPC=<label>           
  movl $0xffffffff, %eax     #  108   0x66cd2  6      OPC=movl_r32_imm32_1  
  jmpq .L_66cde              #  109   0x66cd8  2      OPC=jmpq_label        
.L_66cd9:                    #        0x66cda  0      OPC=<label>           
  movl $0x0, %eax            #  110   0x66cda  5      OPC=movl_r32_imm32    
.L_66cde:                    #        0x66cdf  0      OPC=<label>           
  addq $0x28, %rsp           #  111   0x66cdf  4      OPC=addq_r64_imm8     
  popq %rbx                  #  112   0x66ce3  1      OPC=popq_r64_1        
  popq %rbp                  #  113   0x66ce4  1      OPC=popq_r64_1        
  popq %r12                  #  114   0x66ce5  2      OPC=popq_r64_1        
  popq %r13                  #  115   0x66ce7  2      OPC=popq_r64_1        
  popq %r14                  #  116   0x66ce9  2      OPC=popq_r64_1        
  popq %r15                  #  117   0x66ceb  2      OPC=popq_r64_1        
  retq                       #  118   0x66ced  1      OPC=retq              
                                                                            
.size save_for_wbackup, .-save_for_wbackup

