  .text
  .globl grantpt
  .type grantpt, @function

#! file-offset 0x10f665
#! rip-offset  0x10f665
#! capacity    589 bytes

# Text                            #  Line  RIP       Bytes  Opcode                
.grantpt:                         #        0x10f665  0      OPC=<label>           
  pushq %rbp                      #  1     0x10f665  1      OPC=pushq_r64_1       
  movq %rsp, %rbp                 #  2     0x10f666  3      OPC=movq_r64_r64      
  pushq %r15                      #  3     0x10f669  2      OPC=pushq_r64_1       
  pushq %r14                      #  4     0x10f66b  2      OPC=pushq_r64_1       
  pushq %r13                      #  5     0x10f66d  2      OPC=pushq_r64_1       
  pushq %r12                      #  6     0x10f66f  2      OPC=pushq_r64_1       
  pushq %rbx                      #  7     0x10f671  1      OPC=pushq_r64_1       
  subq $0x10c8, %rsp              #  8     0x10f672  7      OPC=subq_r64_imm32    
  movl %edi, %r14d                #  9     0x10f679  3      OPC=movl_r32_r32      
  leaq -0x1030(%rbp), %r12        #  10    0x10f67c  7      OPC=leaq_r64_m16      
  movl $0x1000, %ebx              #  11    0x10f683  5      OPC=movl_r32_imm32    
  leaq -0x10c0(%rbp), %r15        #  12    0x10f688  7      OPC=leaq_r64_m16      
  movq %r12, %r13                 #  13    0x10f68f  3      OPC=movq_r64_r64      
  jmpq .L_10f697                  #  14    0x10f692  2      OPC=jmpq_label        
.L_10f694:                        #        0x10f694  0      OPC=<label>           
  movq %rax, %r12                 #  15    0x10f694  3      OPC=movq_r64_r64      
.L_10f697:                        #        0x10f697  0      OPC=<label>           
  testq %rbx, %rbx                #  16    0x10f697  3      OPC=testq_r64_r64     
  je .L_10f6fa                    #  17    0x10f69a  2      OPC=je_label          
  movq %r15, %rcx                 #  18    0x10f69c  3      OPC=movq_r64_r64      
  movq %rbx, %rdx                 #  19    0x10f69f  3      OPC=movq_r64_r64      
  movq %r12, %rsi                 #  20    0x10f6a2  3      OPC=movq_r64_r64      
  movl %r14d, %edi                #  21    0x10f6a5  3      OPC=movl_r32_r32      
  callq .__ptsname_internal       #  22    0x10f6a8  5      OPC=callq_label       
  testl %eax, %eax                #  23    0x10f6ad  2      OPC=testl_r32_r32     
  je .L_10f6c8                    #  24    0x10f6af  2      OPC=je_label          
  cmpl $0x19, %eax                #  25    0x10f6b1  3      OPC=cmpl_r32_imm8     
  movl $0x16, %edx                #  26    0x10f6b4  5      OPC=movl_r32_imm32    
  cmovel %edx, %eax               #  27    0x10f6b9  3      OPC=cmovel_r32_r32    
  movq 0x27b7bd(%rip), %rdx       #  28    0x10f6bc  7      OPC=movq_r64_m64      
  movl %eax, (%rdx)               #  29    0x10f6c3  2      OPC=movl_m32_r32      
  nop                             #  30    0x10f6c5  1      OPC=nop               
  jmpq .L_10f730                  #  31    0x10f6c6  2      OPC=jmpq_label        
.L_10f6c8:                        #        0x10f6c8  0      OPC=<label>           
  movq %rbx, %rdx                 #  32    0x10f6c8  3      OPC=movq_r64_r64      
  movl $0x0, %esi                 #  33    0x10f6cb  5      OPC=movl_r32_imm32    
  movq %r12, %rdi                 #  34    0x10f6d0  3      OPC=movq_r64_r64      
  callq .memchr                   #  35    0x10f6d3  5      OPC=callq_label       
  testq %rax, %rax                #  36    0x10f6d8  3      OPC=testq_r64_r64     
  je .L_10f6f5                    #  37    0x10f6db  2      OPC=je_label          
  callq .getuid                   #  38    0x10f6dd  5      OPC=callq_label       
  movl %eax, %esi                 #  39    0x10f6e2  2      OPC=movl_r32_r32      
  cmpl %eax, -0x10a4(%rbp)        #  40    0x10f6e4  6      OPC=cmpl_m32_r32      
  jne .L_10f78f                   #  41    0x10f6ea  6      OPC=jne_label_1       
  jmpq .L_10f7aa                  #  42    0x10f6f0  5      OPC=jmpq_label_1      
.L_10f6f5:                        #        0x10f6f5  0      OPC=<label>           
  addq %rbx, %rbx                 #  43    0x10f6f5  3      OPC=addq_r64_r64      
  jmpq .L_10f6ff                  #  44    0x10f6f8  2      OPC=jmpq_label        
.L_10f6fa:                        #        0x10f6fa  0      OPC=<label>           
  movl $0x80, %ebx                #  45    0x10f6fa  5      OPC=movl_r32_imm32    
.L_10f6ff:                        #        0x10f6ff  0      OPC=<label>           
  cmpq %r13, %r12                 #  46    0x10f6ff  3      OPC=cmpq_r64_r64      
  je .L_10f711                    #  47    0x10f702  2      OPC=je_label          
  movq %rbx, %rsi                 #  48    0x10f704  3      OPC=movq_r64_r64      
  movq %r12, %rdi                 #  49    0x10f707  3      OPC=movq_r64_r64      
  callq .__tls_get_addr_plt       #  50    0x10f70a  5      OPC=callq_label       
  jmpq .L_10f719                  #  51    0x10f70f  2      OPC=jmpq_label        
.L_10f711:                        #        0x10f711  0      OPC=<label>           
  movq %rbx, %rdi                 #  52    0x10f711  3      OPC=movq_r64_r64      
  callq .memalign_plt             #  53    0x10f714  5      OPC=callq_label       
.L_10f719:                        #        0x10f719  0      OPC=<label>           
  testq %rax, %rax                #  54    0x10f719  3      OPC=testq_r64_r64     
  jne .L_10f694                   #  55    0x10f71c  6      OPC=jne_label_1       
  movq 0x27b757(%rip), %rax       #  56    0x10f722  7      OPC=movq_r64_m64      
  movl $0xc, (%rax)               #  57    0x10f729  6      OPC=movl_m32_imm32    
  nop                             #  58    0x10f72f  1      OPC=nop               
.L_10f730:                        #        0x10f730  0      OPC=<label>           
  leaq -0x1030(%rbp), %rax        #  59    0x10f730  7      OPC=leaq_r64_m16      
  cmpq %rax, %r12                 #  60    0x10f737  3      OPC=cmpq_r64_r64      
  je .L_10f879                    #  61    0x10f73a  6      OPC=je_label_1        
  movq %r12, %rdi                 #  62    0x10f740  3      OPC=movq_r64_r64      
  callq .L_1f8d0                  #  63    0x10f743  5      OPC=callq_label       
  jmpq .L_10f879                  #  64    0x10f748  5      OPC=jmpq_label_1      
.L_10f74d:                        #        0x10f74d  0      OPC=<label>           
  movq 0x27b72c(%rip), %rdx       #  65    0x10f74d  7      OPC=movq_r64_m64      
  cmpl $0x9, (%rdx)               #  66    0x10f754  3      OPC=cmpl_m32_imm8     
  nop                             #  67    0x10f757  1      OPC=nop               
  je .L_10f8a3                    #  68    0x10f758  6      OPC=je_label_1        
.L_10f75e:                        #        0x10f75e  0      OPC=<label>           
  cmpl $0x19, %ebx                #  69    0x10f75e  3      OPC=cmpl_r32_imm8     
  jne .L_10f77b                   #  70    0x10f761  2      OPC=jne_label         
  movq 0x27b716(%rip), %rax       #  71    0x10f763  7      OPC=movq_r64_m64      
  movl $0x16, (%rax)              #  72    0x10f76a  6      OPC=movl_m32_imm32    
  nop                             #  73    0x10f770  1      OPC=nop               
  movl $0xffffffff, %eax          #  74    0x10f771  6      OPC=movl_r32_imm32_1  
  jmpq .L_10f8a3                  #  75    0x10f777  5      OPC=jmpq_label_1      
.L_10f77b:                        #        0x10f77c  0      OPC=<label>           
  movq 0x27b6fe(%rip), %rax       #  76    0x10f77c  7      OPC=movq_r64_m64      
  movl %ebx, (%rax)               #  77    0x10f783  2      OPC=movl_m32_r32      
  nop                             #  78    0x10f785  1      OPC=nop               
  movl $0xffffffff, %eax          #  79    0x10f786  6      OPC=movl_r32_imm32_1  
  jmpq .L_10f8a3                  #  80    0x10f78c  5      OPC=jmpq_label_1      
.L_10f78f:                        #        0x10f791  0      OPC=<label>           
  movl -0x10a0(%rbp), %edx        #  81    0x10f791  6      OPC=movl_r32_m32      
  movq %r12, %rdi                 #  82    0x10f797  3      OPC=movq_r64_r64      
  callq .chown                    #  83    0x10f79a  5      OPC=callq_label       
  movl $0xffffffff, %ebx          #  84    0x10f79f  6      OPC=movl_r32_imm32_1  
  testl %eax, %eax                #  85    0x10f7a5  2      OPC=testl_r32_r32     
  js .L_10f85f                    #  86    0x10f7a7  6      OPC=js_label_1        
.L_10f7aa:                        #        0x10f7ad  0      OPC=<label>           
  movl 0x27bc24(%rip), %eax       #  87    0x10f7ad  6      OPC=movl_r32_m32      
  cmpl $0xffffffff, %eax          #  88    0x10f7b3  6      OPC=cmpl_r32_imm32    
  nop                             #  89    0x10f7b9  1      OPC=nop               
  nop                             #  90    0x10f7ba  1      OPC=nop               
  nop                             #  91    0x10f7bb  1      OPC=nop               
  jne .L_10f822                   #  92    0x10f7bc  2      OPC=jne_label         
  movl $0x45, %edi                #  93    0x10f7be  5      OPC=movl_r32_imm32    
  callq .__sysconf                #  94    0x10f7c3  5      OPC=callq_label       
  cmpq $0xff, %rax                #  95    0x10f7c8  4      OPC=cmpq_r64_imm8     
  movl $0x400, %edx               #  96    0x10f7cc  5      OPC=movl_r32_imm32    
  cmoveq %rdx, %rax               #  97    0x10f7d1  4      OPC=cmoveq_r64_r64    
  leaq 0x1e(%rax), %rdx           #  98    0x10f7d5  4      OPC=leaq_r64_m16      
  andq $0xf0, %rdx                #  99    0x10f7d9  4      OPC=andq_r64_imm8     
  subq %rdx, %rsp                 #  100   0x10f7dd  3      OPC=subq_r64_r64      
  leaq 0xf(%rsp), %rdx            #  101   0x10f7e0  5      OPC=leaq_r64_m16      
  andq $0xf0, %rdx                #  102   0x10f7e5  4      OPC=andq_r64_imm8     
  leaq -0x10e0(%rbp), %rsi        #  103   0x10f7e9  7      OPC=leaq_r64_m16      
  leaq -0x10e8(%rbp), %r8         #  104   0x10f7f0  7      OPC=leaq_r64_m16      
  movq %rax, %rcx                 #  105   0x10f7f7  3      OPC=movq_r64_r64      
  leaq 0x48282(%rip), %rdi        #  106   0x10f7fa  7      OPC=leaq_r64_m16      
  callq .getgrnam_r__GLIBC_2_2_5  #  107   0x10f801  5      OPC=callq_label       
  movq -0x10e8(%rbp), %rax        #  108   0x10f806  7      OPC=movq_r64_m64      
  testq %rax, %rax                #  109   0x10f80d  3      OPC=testq_r64_r64     
  je .L_10f812                    #  110   0x10f810  2      OPC=je_label          
  movl 0x10(%rax), %eax           #  111   0x10f812  3      OPC=movl_r32_m32      
  movl %eax, 0x27bbc2(%rip)       #  112   0x10f815  6      OPC=movl_m32_r32      
.L_10f812:                        #        0x10f81b  0      OPC=<label>           
  movl 0x27bbbc(%rip), %eax       #  113   0x10f81b  6      OPC=movl_r32_m32      
  cmpl $0xffffffff, %eax          #  114   0x10f821  6      OPC=cmpl_r32_imm32    
  nop                             #  115   0x10f827  1      OPC=nop               
  nop                             #  116   0x10f828  1      OPC=nop               
  nop                             #  117   0x10f829  1      OPC=nop               
  jne .L_10f822                   #  118   0x10f82a  2      OPC=jne_label         
  callq .getgid                   #  119   0x10f82c  5      OPC=callq_label       
.L_10f822:                        #        0x10f831  0      OPC=<label>           
  movl $0x180, %esi               #  120   0x10f831  5      OPC=movl_r32_imm32    
  cmpl -0x10a0(%rbp), %eax        #  121   0x10f836  6      OPC=cmpl_r32_m32      
  jne .L_10f83e                   #  122   0x10f83c  2      OPC=jne_label         
  movl -0x10a8(%rbp), %esi        #  123   0x10f83e  6      OPC=movl_r32_m32      
  andl $0x10, %esi                #  124   0x10f844  3      OPC=andl_r32_imm8     
  orl $0x180, %esi                #  125   0x10f847  6      OPC=orl_r32_imm32     
.L_10f83e:                        #        0x10f84d  0      OPC=<label>           
  movl -0x10a8(%rbp), %eax        #  126   0x10f84d  6      OPC=movl_r32_m32      
  andl $0x1ff, %eax               #  127   0x10f853  5      OPC=andl_eax_imm32    
  movl $0x0, %ebx                 #  128   0x10f858  5      OPC=movl_r32_imm32    
  cmpl %eax, %esi                 #  129   0x10f85d  2      OPC=cmpl_r32_r32      
  je .L_10f85f                    #  130   0x10f85f  2      OPC=je_label          
  movq %r12, %rdi                 #  131   0x10f861  3      OPC=movq_r64_r64      
  callq .chmod                    #  132   0x10f864  5      OPC=callq_label       
  sarl $0x1f, %eax                #  133   0x10f869  3      OPC=sarl_r32_imm8     
  movl %eax, %ebx                 #  134   0x10f86c  2      OPC=movl_r32_r32      
.L_10f85f:                        #        0x10f86e  0      OPC=<label>           
  leaq -0x1030(%rbp), %rdx        #  135   0x10f86e  7      OPC=leaq_r64_m16      
  movl %ebx, %eax                 #  136   0x10f875  2      OPC=movl_r32_r32      
  cmpq %rdx, %r12                 #  137   0x10f877  3      OPC=cmpq_r64_r64      
  je .L_10f8a3                    #  138   0x10f87a  2      OPC=je_label          
  movq %r12, %rdi                 #  139   0x10f87c  3      OPC=movq_r64_r64      
  callq .L_1f8d0                  #  140   0x10f87f  5      OPC=callq_label       
  movl %ebx, %eax                 #  141   0x10f884  2      OPC=movl_r32_r32      
  jmpq .L_10f8a3                  #  142   0x10f886  2      OPC=jmpq_label        
.L_10f879:                        #        0x10f888  0      OPC=<label>           
  movq 0x27b600(%rip), %rax       #  143   0x10f888  7      OPC=movq_r64_m64      
  movl (%rax), %ebx               #  144   0x10f88f  2      OPC=movl_r32_m32      
  nop                             #  145   0x10f891  1      OPC=nop               
  movl $0x1, %esi                 #  146   0x10f892  5      OPC=movl_r32_imm32    
  movl %r14d, %edi                #  147   0x10f897  3      OPC=movl_r32_r32      
  movl $0x0, %eax                 #  148   0x10f89a  5      OPC=movl_r32_imm32    
  callq .__fcntl                  #  149   0x10f89f  5      OPC=callq_label       
  cmpl $0xffffffff, %eax          #  150   0x10f8a4  6      OPC=cmpl_r32_imm32    
  nop                             #  151   0x10f8aa  1      OPC=nop               
  nop                             #  152   0x10f8ab  1      OPC=nop               
  nop                             #  153   0x10f8ac  1      OPC=nop               
  jne .L_10f75e                   #  154   0x10f8ad  6      OPC=jne_label_1       
  jmpq .L_10f74d                  #  155   0x10f8b3  5      OPC=jmpq_label_1      
.L_10f8a3:                        #        0x10f8b8  0      OPC=<label>           
  leaq -0x28(%rbp), %rsp          #  156   0x10f8b8  4      OPC=leaq_r64_m16      
  popq %rbx                       #  157   0x10f8bc  1      OPC=popq_r64_1        
  popq %r12                       #  158   0x10f8bd  2      OPC=popq_r64_1        
  popq %r13                       #  159   0x10f8bf  2      OPC=popq_r64_1        
  popq %r14                       #  160   0x10f8c1  2      OPC=popq_r64_1        
  popq %r15                       #  161   0x10f8c3  2      OPC=popq_r64_1        
  popq %rbp                       #  162   0x10f8c5  1      OPC=popq_r64_1        
  retq                            #  163   0x10f8c6  1      OPC=retq              
                                                                                  
.size grantpt, .-grantpt

