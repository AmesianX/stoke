  .text
  .globl authdes_marshal
  .type authdes_marshal, @function

#! file-offset 0x103d25
#! rip-offset  0x103d25
#! capacity    491 bytes

# Text                                 #  Line  RIP       Bytes  Opcode              
.authdes_marshal:                      #        0x103d25  0      OPC=<label>         
  pushq %r12                           #  1     0x103d25  2      OPC=pushq_r64_1     
  pushq %rbp                           #  2     0x103d27  1      OPC=pushq_r64_1     
  pushq %rbx                           #  3     0x103d28  1      OPC=pushq_r64_1     
  subq $0x40, %rsp                     #  4     0x103d29  4      OPC=subq_r64_imm8   
  movq %rdi, %r12                      #  5     0x103d2d  3      OPC=movq_r64_r64    
  movq %rsi, %rbp                      #  6     0x103d30  3      OPC=movq_r64_r64    
  movq 0x40(%rdi), %rbx                #  7     0x103d33  4      OPC=movq_r64_m64    
  movq %rsp, %rdi                      #  8     0x103d37  3      OPC=movq_r64_r64    
  movl $0x0, %esi                      #  9     0x103d3a  5      OPC=movl_r32_imm32  
  callq .malloc_plt                    #  10    0x103d3f  5      OPC=callq_label     
  movl 0x34(%rbx), %edx                #  11    0x103d44  3      OPC=movl_r32_m32    
  addl (%rsp), %edx                    #  12    0x103d47  3      OPC=addl_r32_m32    
  movl %edx, 0x74(%rbx)                #  13    0x103d4a  3      OPC=movl_m32_r32    
  movl 0x38(%rbx), %eax                #  14    0x103d4d  3      OPC=movl_r32_m32    
  addl 0x8(%rsp), %eax                 #  15    0x103d50  4      OPC=addl_r32_m32    
  cmpl $0xf423f, %eax                  #  16    0x103d54  5      OPC=cmpl_eax_imm32  
  ja .L_103d60                         #  17    0x103d59  2      OPC=ja_label        
  movl %eax, 0x78(%rbx)                #  18    0x103d5b  3      OPC=movl_m32_r32    
  jmpq .L_103d6e                       #  19    0x103d5e  2      OPC=jmpq_label      
.L_103d60:                             #        0x103d60  0      OPC=<label>         
  subl $0xf4240, %eax                  #  20    0x103d60  5      OPC=subl_eax_imm32  
  movl %eax, 0x78(%rbx)                #  21    0x103d65  3      OPC=movl_m32_r32    
  addl $0x1, %edx                      #  22    0x103d68  3      OPC=addl_r32_imm8   
  movl %edx, 0x74(%rbx)                #  23    0x103d6b  3      OPC=movl_m32_r32    
.L_103d6e:                             #        0x103d6e  0      OPC=<label>         
  movl 0x74(%rbx), %eax                #  24    0x103d6e  3      OPC=movl_r32_m32    
  bswap %eax                           #  25    0x103d71  2      OPC=bswap_r32       
  movl %eax, 0x30(%rsp)                #  26    0x103d73  4      OPC=movl_m32_r32    
  movl 0x78(%rbx), %eax                #  27    0x103d77  3      OPC=movl_r32_m32    
  bswap %eax                           #  28    0x103d7a  2      OPC=bswap_r32       
  movl %eax, 0x34(%rsp)                #  29    0x103d7c  4      OPC=movl_m32_r32    
  cmpl $0x0, 0x40(%rbx)                #  30    0x103d80  4      OPC=cmpl_m32_imm8   
  jne .L_103dca                        #  31    0x103d84  2      OPC=jne_label       
  movl 0x1c(%rbx), %eax                #  32    0x103d86  3      OPC=movl_r32_m32    
  movl %eax, %edx                      #  33    0x103d89  2      OPC=movl_r32_r32    
  bswap %edx                           #  34    0x103d8b  2      OPC=bswap_r32       
  movl %edx, 0x38(%rsp)                #  35    0x103d8d  4      OPC=movl_m32_r32    
  subl $0x1, %eax                      #  36    0x103d91  3      OPC=subl_r32_imm8   
  bswap %eax                           #  37    0x103d94  2      OPC=bswap_r32       
  movl %eax, 0x3c(%rsp)                #  38    0x103d96  4      OPC=movl_m32_r32    
  movl $0x0, 0x24(%rsp)                #  39    0x103d9a  8      OPC=movl_m32_imm32  
  movl $0x0, 0x20(%rsp)                #  40    0x103da2  8      OPC=movl_m32_imm32  
  leaq 0x30(%rsp), %rsi                #  41    0x103daa  5      OPC=leaq_r64_m16    
  leaq 0x30(%r12), %rdi                #  42    0x103daf  5      OPC=leaq_r64_m16    
  leaq 0x20(%rsp), %r8                 #  43    0x103db4  5      OPC=leaq_r64_m16    
  movl $0x0, %ecx                      #  44    0x103db9  5      OPC=movl_r32_imm32  
  movl $0x10, %edx                     #  45    0x103dbe  5      OPC=movl_r32_imm32  
  callq .cbc_crypt_GLIBC_2_2_5         #  46    0x103dc3  5      OPC=callq_label     
  jmpq .L_103de3                       #  47    0x103dc8  2      OPC=jmpq_label      
.L_103dca:                             #        0x103dca  0      OPC=<label>         
  leaq 0x30(%rsp), %rsi                #  48    0x103dca  5      OPC=leaq_r64_m16    
  leaq 0x30(%r12), %rdi                #  49    0x103dcf  5      OPC=leaq_r64_m16    
  movl $0x0, %ecx                      #  50    0x103dd4  5      OPC=movl_r32_imm32  
  movl $0x8, %edx                      #  51    0x103dd9  5      OPC=movl_r32_imm32  
  callq .ecb_crypt_GLIBC_2_2_5         #  52    0x103dde  5      OPC=callq_label     
.L_103de3:                             #        0x103de3  0      OPC=<label>         
  movl $0x0, %edx                      #  53    0x103de3  5      OPC=movl_r32_imm32  
  cmpl $0x1, %eax                      #  54    0x103de8  3      OPC=cmpl_r32_imm8   
  jg .L_103f05                         #  55    0x103deb  6      OPC=jg_label_1      
  movq 0x30(%rsp), %rax                #  56    0x103df1  5      OPC=movq_r64_m64    
  movq %rax, 0x68(%rbx)                #  57    0x103df6  4      OPC=movq_m64_r64    
  cmpl $0x0, 0x40(%rbx)                #  58    0x103dfa  4      OPC=cmpl_m32_imm8   
  jne .L_103e10                        #  59    0x103dfe  2      OPC=jne_label       
  movl 0x38(%rsp), %eax                #  60    0x103e00  4      OPC=movl_r32_m32    
  movl %eax, 0x58(%rbx)                #  61    0x103e04  3      OPC=movl_m32_r32    
  movl 0x3c(%rsp), %eax                #  62    0x103e07  4      OPC=movl_r32_m32    
  movl %eax, 0x70(%rbx)                #  63    0x103e0b  3      OPC=movl_m32_r32    
  jmpq .L_103e1d                       #  64    0x103e0e  2      OPC=jmpq_label      
.L_103e10:                             #        0x103e10  0      OPC=<label>         
  movl 0x3c(%rbx), %eax                #  65    0x103e10  3      OPC=movl_r32_m32    
  movl %eax, 0x60(%rbx)                #  66    0x103e13  3      OPC=movl_m32_r32    
  movl $0x0, 0x70(%rbx)                #  67    0x103e16  7      OPC=movl_m32_imm32  
.L_103e1d:                             #        0x103e1d  0      OPC=<label>         
  cmpl $0x0, 0x40(%rbx)                #  68    0x103e1d  4      OPC=cmpl_m32_imm8   
  jne .L_103e2f                        #  69    0x103e21  2      OPC=jne_label       
  movl 0x8(%rbx), %eax                 #  70    0x103e23  3      OPC=movl_r32_m32    
  addl $0x14, %eax                     #  71    0x103e26  3      OPC=addl_r32_imm8   
  movl %eax, 0x1c(%rsp)                #  72    0x103e29  4      OPC=movl_m32_r32    
  jmpq .L_103e37                       #  73    0x103e2d  2      OPC=jmpq_label      
.L_103e2f:                             #        0x103e2f  0      OPC=<label>         
  movl $0x8, 0x1c(%rsp)                #  74    0x103e2f  8      OPC=movl_m32_imm32  
.L_103e37:                             #        0x103e37  0      OPC=<label>         
  movq 0x8(%rbp), %rax                 #  75    0x103e37  4      OPC=movq_r64_m64    
  movl $0x8, %esi                      #  76    0x103e3b  5      OPC=movl_r32_imm32  
  movq %rbp, %rdi                      #  77    0x103e40  3      OPC=movq_r64_r64    
  callq 0x30(%rax)                     #  78    0x103e43  3      OPC=callq_m64       
  testq %rax, %rax                     #  79    0x103e46  3      OPC=testq_r64_r64   
  je .L_103e5c                         #  80    0x103e49  2      OPC=je_label        
  movl $0x3000000, (%rax)              #  81    0x103e4b  6      OPC=movl_m32_imm32  
  movl 0x1c(%rsp), %edx                #  82    0x103e51  4      OPC=movl_r32_m32    
  bswap %edx                           #  83    0x103e55  2      OPC=bswap_r32       
  movl %edx, 0x4(%rax)                 #  84    0x103e57  3      OPC=movl_m32_r32    
  jmpq .L_103e88                       #  85    0x103e5a  2      OPC=jmpq_label      
.L_103e5c:                             #        0x103e5c  0      OPC=<label>         
  movq 0x8(%rbp), %rax                 #  86    0x103e5c  4      OPC=movq_r64_m64    
  movq %r12, %rsi                      #  87    0x103e60  3      OPC=movq_r64_r64    
  movq %rbp, %rdi                      #  88    0x103e63  3      OPC=movq_r64_r64    
  callq 0x48(%rax)                     #  89    0x103e66  3      OPC=callq_m64       
  movl %eax, %edx                      #  90    0x103e69  2      OPC=movl_r32_r32    
  testl %eax, %eax                     #  91    0x103e6b  2      OPC=testl_r32_r32   
  je .L_103f05                         #  92    0x103e6d  6      OPC=je_label_1      
  movq 0x8(%rbp), %rax                 #  93    0x103e73  4      OPC=movq_r64_m64    
  leaq 0x1c(%rsp), %rsi                #  94    0x103e77  5      OPC=leaq_r64_m16    
  movq %rbp, %rdi                      #  95    0x103e7c  3      OPC=movq_r64_r64    
  callq 0x48(%rax)                     #  96    0x103e7f  3      OPC=callq_m64       
  movl %eax, %edx                      #  97    0x103e82  2      OPC=movl_r32_r32    
  testl %eax, %eax                     #  98    0x103e84  2      OPC=testl_r32_r32   
  je .L_103f05                         #  99    0x103e86  2      OPC=je_label        
.L_103e88:                             #        0x103e88  0      OPC=<label>         
  leaq 0x40(%rbx), %rsi                #  100   0x103e88  4      OPC=leaq_r64_m16    
  movq %rbp, %rdi                      #  101   0x103e8c  3      OPC=movq_r64_r64    
  callq .xdr_authdes_cred_GLIBC_2_2_5  #  102   0x103e8f  5      OPC=callq_label     
  movl %eax, %edx                      #  103   0x103e94  2      OPC=movl_r32_r32    
  testl %eax, %eax                     #  104   0x103e96  2      OPC=testl_r32_r32   
  je .L_103f05                         #  105   0x103e98  2      OPC=je_label        
  movl $0xc, 0x1c(%rsp)                #  106   0x103e9a  8      OPC=movl_m32_imm32  
  movq 0x8(%rbp), %rax                 #  107   0x103ea2  4      OPC=movq_r64_m64    
  movl $0x8, %esi                      #  108   0x103ea6  5      OPC=movl_r32_imm32  
  movq %rbp, %rdi                      #  109   0x103eab  3      OPC=movq_r64_r64    
  callq 0x30(%rax)                     #  110   0x103eae  3      OPC=callq_m64       
  testq %rax, %rax                     #  111   0x103eb1  3      OPC=testq_r64_r64   
  je .L_103ec7                         #  112   0x103eb4  2      OPC=je_label        
  movl $0x3000000, (%rax)              #  113   0x103eb6  6      OPC=movl_m32_imm32  
  movl 0x1c(%rsp), %edx                #  114   0x103ebc  4      OPC=movl_r32_m32    
  bswap %edx                           #  115   0x103ec0  2      OPC=bswap_r32       
  movl %edx, 0x4(%rax)                 #  116   0x103ec2  3      OPC=movl_m32_r32    
  jmpq .L_103ef1                       #  117   0x103ec5  2      OPC=jmpq_label      
.L_103ec7:                             #        0x103ec7  0      OPC=<label>         
  movq 0x8(%rbp), %rax                 #  118   0x103ec7  4      OPC=movq_r64_m64    
  leaq 0x18(%r12), %rsi                #  119   0x103ecb  5      OPC=leaq_r64_m16    
  movq %rbp, %rdi                      #  120   0x103ed0  3      OPC=movq_r64_r64    
  callq 0x48(%rax)                     #  121   0x103ed3  3      OPC=callq_m64       
  movl %eax, %edx                      #  122   0x103ed6  2      OPC=movl_r32_r32    
  testl %eax, %eax                     #  123   0x103ed8  2      OPC=testl_r32_r32   
  je .L_103f05                         #  124   0x103eda  2      OPC=je_label        
  movq 0x8(%rbp), %rax                 #  125   0x103edc  4      OPC=movq_r64_m64    
  leaq 0x1c(%rsp), %rsi                #  126   0x103ee0  5      OPC=leaq_r64_m16    
  movq %rbp, %rdi                      #  127   0x103ee5  3      OPC=movq_r64_r64    
  callq 0x48(%rax)                     #  128   0x103ee8  3      OPC=callq_m64       
  movl %eax, %edx                      #  129   0x103eeb  2      OPC=movl_r32_r32    
  testl %eax, %eax                     #  130   0x103eed  2      OPC=testl_r32_r32   
  je .L_103f05                         #  131   0x103eef  2      OPC=je_label        
.L_103ef1:                             #        0x103ef1  0      OPC=<label>         
  leaq 0x68(%rbx), %rsi                #  132   0x103ef1  4      OPC=leaq_r64_m16    
  movq %rbp, %rdi                      #  133   0x103ef5  3      OPC=movq_r64_r64    
  callq .xdr_authdes_verf_GLIBC_2_2_5  #  134   0x103ef8  5      OPC=callq_label     
  testl %eax, %eax                     #  135   0x103efd  2      OPC=testl_r32_r32   
  setne %dl                            #  136   0x103eff  3      OPC=setne_r8        
  movzbl %dl, %edx                     #  137   0x103f02  3      OPC=movzbl_r32_r8   
.L_103f05:                             #        0x103f05  0      OPC=<label>         
  movl %edx, %eax                      #  138   0x103f05  2      OPC=movl_r32_r32    
  addq $0x40, %rsp                     #  139   0x103f07  4      OPC=addq_r64_imm8   
  popq %rbx                            #  140   0x103f0b  1      OPC=popq_r64_1      
  popq %rbp                            #  141   0x103f0c  1      OPC=popq_r64_1      
  popq %r12                            #  142   0x103f0d  2      OPC=popq_r64_1      
  retq                                 #  143   0x103f0f  1      OPC=retq            
                                                                                     
.size authdes_marshal, .-authdes_marshal

