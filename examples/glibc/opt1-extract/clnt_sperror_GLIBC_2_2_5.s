  .text
  .globl clnt_sperror_GLIBC_2_2_5
  .type clnt_sperror_GLIBC_2_2_5, @function

#! file-offset 0x104b7b
#! rip-offset  0x104b7b
#! capacity    636 bytes

# Text                           #  Line  RIP       Bytes  Opcode              
.clnt_sperror_GLIBC_2_2_5:       #        0x104b7b  0      OPC=<label>         
  pushq %r13                     #  1     0x104b7b  2      OPC=pushq_r64_1     
  pushq %r12                     #  2     0x104b7d  2      OPC=pushq_r64_1     
  pushq %rbp                     #  3     0x104b7f  1      OPC=pushq_r64_1     
  pushq %rbx                     #  4     0x104b80  1      OPC=pushq_r64_1     
  subq $0x438, %rsp              #  5     0x104b81  7      OPC=subq_r64_imm32  
  movq %rsi, %rbx                #  6     0x104b88  3      OPC=movq_r64_r64    
  movq 0x8(%rdi), %rax           #  7     0x104b8b  4      OPC=movq_r64_m64    
  leaq 0x410(%rsp), %rsi         #  8     0x104b8f  8      OPC=leaq_r64_m16    
  callq 0x10(%rax)               #  9     0x104b97  3      OPC=callq_m64       
  movl 0x410(%rsp), %edi         #  10    0x104b9a  7      OPC=movl_r32_m32    
  callq .clnt_sperrno            #  11    0x104ba1  5      OPC=callq_label     
  movq %rax, %rbp                #  12    0x104ba6  3      OPC=movq_r64_r64    
  cmpl $0x11, 0x410(%rsp)        #  13    0x104ba9  8      OPC=cmpl_m32_imm8   
  ja .L_104d90                   #  14    0x104bb1  6      OPC=ja_label_1      
  movl 0x410(%rsp), %eax         #  15    0x104bb7  7      OPC=movl_r32_m32    
  leaq 0x521fb(%rip), %rdi       #  16    0x104bbe  7      OPC=leaq_r64_m16    
  movslq (%rdi,%rax,4), %rax     #  17    0x104bc5  4      OPC=movslq_r64_m32  
  addq %rax, %rdi                #  18    0x104bc9  3      OPC=addq_r64_r64    
  jmpq %rdi                      #  19    0x104bcc  2      OPC=jmpq_r64        
  leaq 0x8(%rsp), %rdi           #  20    0x104bce  5      OPC=leaq_r64_m16    
  movq %rbp, %rcx                #  21    0x104bd3  3      OPC=movq_r64_r64    
  movq %rbx, %rdx                #  22    0x104bd6  3      OPC=movq_r64_r64    
  leaq 0x54a2a(%rip), %rsi       #  23    0x104bd9  7      OPC=leaq_r64_m16    
  movl $0x0, %eax                #  24    0x104be0  5      OPC=movl_r32_imm32  
  callq .__asprintf              #  25    0x104be5  5      OPC=callq_label     
  jmpq .L_104dbc                 #  26    0x104bea  5      OPC=jmpq_label_1    
  leaq 0x10(%rsp), %rsi          #  27    0x104bef  5      OPC=leaq_r64_m16    
  movl $0x400, %edx              #  28    0x104bf4  5      OPC=movl_r32_imm32  
  movl 0x418(%rsp), %edi         #  29    0x104bf9  7      OPC=movl_r32_m32    
  callq .__strerror_r            #  30    0x104c00  5      OPC=callq_label     
  movq %rax, %r8                 #  31    0x104c05  3      OPC=movq_r64_r64    
  leaq 0x8(%rsp), %rdi           #  32    0x104c08  5      OPC=leaq_r64_m16    
  movq %rbp, %rcx                #  33    0x104c0d  3      OPC=movq_r64_r64    
  movq %rbx, %rdx                #  34    0x104c10  3      OPC=movq_r64_r64    
  leaq 0x56045(%rip), %rsi       #  35    0x104c13  7      OPC=leaq_r64_m16    
  movl $0x0, %eax                #  36    0x104c1a  5      OPC=movl_r32_imm32  
  callq .__asprintf              #  37    0x104c1f  5      OPC=callq_label     
  jmpq .L_104dbc                 #  38    0x104c24  5      OPC=jmpq_label_1    
  movq 0x420(%rsp), %r13         #  39    0x104c29  8      OPC=movq_r64_m64    
  movq 0x418(%rsp), %r12         #  40    0x104c31  8      OPC=movq_r64_m64    
  movl $0x5, %edx                #  41    0x104c39  5      OPC=movl_r32_imm32  
  leaq 0x590eb(%rip), %rsi       #  42    0x104c3e  7      OPC=leaq_r64_m16    
  leaq 0x52c0e(%rip), %rdi       #  43    0x104c45  7      OPC=leaq_r64_m16    
  callq .__dcgettext             #  44    0x104c4c  5      OPC=callq_label     
  leaq 0x8(%rsp), %rdi           #  45    0x104c51  5      OPC=leaq_r64_m16    
  movq %r13, %r9                 #  46    0x104c56  3      OPC=movq_r64_r64    
  movq %r12, %r8                 #  47    0x104c59  3      OPC=movq_r64_r64    
  movq %rbp, %rcx                #  48    0x104c5c  3      OPC=movq_r64_r64    
  movq %rbx, %rdx                #  49    0x104c5f  3      OPC=movq_r64_r64    
  movq %rax, %rsi                #  50    0x104c62  3      OPC=movq_r64_r64    
  movl $0x0, %eax                #  51    0x104c65  5      OPC=movl_r32_imm32  
  callq .__asprintf              #  52    0x104c6a  5      OPC=callq_label     
  jmpq .L_104dbc                 #  53    0x104c6f  5      OPC=jmpq_label_1    
  movl 0x418(%rsp), %edx         #  54    0x104c74  7      OPC=movl_r32_m32    
  testl %edx, %edx               #  55    0x104c7b  2      OPC=testl_r32_r32   
  je .L_104c92                   #  56    0x104c7d  2      OPC=je_label        
  movl $0x1, %edi                #  57    0x104c7f  5      OPC=movl_r32_imm32  
.L_104c84:                       #        0x104c84  0      OPC=<label>         
  leaq 0x521b5(%rip), %rax       #  58    0x104c84  7      OPC=leaq_r64_m16    
  cmpl (%rax,%rdi,8), %edx       #  59    0x104c8b  3      OPC=cmpl_r32_m32    
  jne .L_104cc7                  #  60    0x104c8e  2      OPC=jne_label       
  jmpq .L_104c97                 #  61    0x104c90  2      OPC=jmpq_label      
.L_104c92:                       #        0x104c92  0      OPC=<label>         
  movl $0x0, %edi                #  62    0x104c92  5      OPC=movl_r32_imm32  
.L_104c97:                       #        0x104c97  0      OPC=<label>         
  leaq 0x521a2(%rip), %rax       #  63    0x104c97  7      OPC=leaq_r64_m16    
  movl 0x4(%rax,%rdi,8), %esi    #  64    0x104c9e  4      OPC=movl_r32_m32    
  leaq 0x521d7(%rip), %rax       #  65    0x104ca2  7      OPC=leaq_r64_m16    
  addq %rax, %rsi                #  66    0x104ca9  3      OPC=addq_r64_r64    
  movl $0x5, %edx                #  67    0x104cac  5      OPC=movl_r32_imm32  
  leaq 0x52ba2(%rip), %rdi       #  68    0x104cb1  7      OPC=leaq_r64_m16    
  callq .__dcgettext             #  69    0x104cb8  5      OPC=callq_label     
  movq %rax, %r12                #  70    0x104cbd  3      OPC=movq_r64_r64    
  testq %rax, %rax               #  71    0x104cc0  3      OPC=testq_r64_r64   
  jne .L_104cd3                  #  72    0x104cc3  2      OPC=jne_label       
  jmpq .L_104d0b                 #  73    0x104cc5  2      OPC=jmpq_label      
.L_104cc7:                       #        0x104cc7  0      OPC=<label>         
  addq $0x1, %rdi                #  74    0x104cc7  4      OPC=addq_r64_imm8   
  cmpq $0x8, %rdi                #  75    0x104ccb  4      OPC=cmpq_r64_imm8   
  jne .L_104c84                  #  76    0x104ccf  2      OPC=jne_label       
  jmpq .L_104d0b                 #  77    0x104cd1  2      OPC=jmpq_label      
.L_104cd3:                       #        0x104cd3  0      OPC=<label>         
  movl $0x5, %edx                #  78    0x104cd3  5      OPC=movl_r32_imm32  
  leaq 0x55f94(%rip), %rsi       #  79    0x104cd8  7      OPC=leaq_r64_m16    
  leaq 0x52b74(%rip), %rdi       #  80    0x104cdf  7      OPC=leaq_r64_m16    
  callq .__dcgettext             #  81    0x104ce6  5      OPC=callq_label     
  movq %rax, %rsi                #  82    0x104ceb  3      OPC=movq_r64_r64    
  leaq 0x8(%rsp), %rdi           #  83    0x104cee  5      OPC=leaq_r64_m16    
  movq %r12, %r8                 #  84    0x104cf3  3      OPC=movq_r64_r64    
  movq %rbp, %rcx                #  85    0x104cf6  3      OPC=movq_r64_r64    
  movq %rbx, %rdx                #  86    0x104cf9  3      OPC=movq_r64_r64    
  movl $0x0, %eax                #  87    0x104cfc  5      OPC=movl_r32_imm32  
  callq .__asprintf              #  88    0x104d01  5      OPC=callq_label     
  jmpq .L_104dbc                 #  89    0x104d06  5      OPC=jmpq_label_1    
.L_104d0b:                       #        0x104d0b  0      OPC=<label>         
  movl 0x418(%rsp), %r12d        #  90    0x104d0b  8      OPC=movl_r32_m32    
  movl $0x5, %edx                #  91    0x104d13  5      OPC=movl_r32_imm32  
  leaq 0x59041(%rip), %rsi       #  92    0x104d18  7      OPC=leaq_r64_m16    
  leaq 0x52b34(%rip), %rdi       #  93    0x104d1f  7      OPC=leaq_r64_m16    
  callq .__dcgettext             #  94    0x104d26  5      OPC=callq_label     
  leaq 0x8(%rsp), %rdi           #  95    0x104d2b  5      OPC=leaq_r64_m16    
  movl %r12d, %r8d               #  96    0x104d30  3      OPC=movl_r32_r32    
  movq %rbp, %rcx                #  97    0x104d33  3      OPC=movq_r64_r64    
  movq %rbx, %rdx                #  98    0x104d36  3      OPC=movq_r64_r64    
  movq %rax, %rsi                #  99    0x104d39  3      OPC=movq_r64_r64    
  movl $0x0, %eax                #  100   0x104d3c  5      OPC=movl_r32_imm32  
  callq .__asprintf              #  101   0x104d41  5      OPC=callq_label     
  jmpq .L_104dbc                 #  102   0x104d46  2      OPC=jmpq_label      
  movq 0x420(%rsp), %r13         #  103   0x104d48  8      OPC=movq_r64_m64    
  movq 0x418(%rsp), %r12         #  104   0x104d50  8      OPC=movq_r64_m64    
  movl $0x5, %edx                #  105   0x104d58  5      OPC=movl_r32_imm32  
  leaq 0x58fcc(%rip), %rsi       #  106   0x104d5d  7      OPC=leaq_r64_m16    
  leaq 0x52aef(%rip), %rdi       #  107   0x104d64  7      OPC=leaq_r64_m16    
  callq .__dcgettext             #  108   0x104d6b  5      OPC=callq_label     
  leaq 0x8(%rsp), %rdi           #  109   0x104d70  5      OPC=leaq_r64_m16    
  movq %r13, %r9                 #  110   0x104d75  3      OPC=movq_r64_r64    
  movq %r12, %r8                 #  111   0x104d78  3      OPC=movq_r64_r64    
  movq %rbp, %rcx                #  112   0x104d7b  3      OPC=movq_r64_r64    
  movq %rbx, %rdx                #  113   0x104d7e  3      OPC=movq_r64_r64    
  movq %rax, %rsi                #  114   0x104d81  3      OPC=movq_r64_r64    
  movl $0x0, %eax                #  115   0x104d84  5      OPC=movl_r32_imm32  
  callq .__asprintf              #  116   0x104d89  5      OPC=callq_label     
  jmpq .L_104dbc                 #  117   0x104d8e  2      OPC=jmpq_label      
.L_104d90:                       #        0x104d90  0      OPC=<label>         
  leaq 0x8(%rsp), %rdi           #  118   0x104d90  5      OPC=leaq_r64_m16    
  movq 0x420(%rsp), %r9          #  119   0x104d95  8      OPC=movq_r64_m64    
  movq 0x418(%rsp), %r8          #  120   0x104d9d  8      OPC=movq_r64_m64    
  movq %rax, %rcx                #  121   0x104da5  3      OPC=movq_r64_r64    
  movq %rbx, %rdx                #  122   0x104da8  3      OPC=movq_r64_r64    
  leaq 0x55ed3(%rip), %rsi       #  123   0x104dab  7      OPC=leaq_r64_m16    
  movl $0x0, %eax                #  124   0x104db2  5      OPC=movl_r32_imm32  
  callq .__asprintf              #  125   0x104db7  5      OPC=callq_label     
.L_104dbc:                       #        0x104dbc  0      OPC=<label>         
  testl %eax, %eax               #  126   0x104dbc  2      OPC=testl_r32_r32   
  js .L_104de4                   #  127   0x104dbe  2      OPC=js_label        
  callq .__rpc_thread_variables  #  128   0x104dc0  5      OPC=callq_label     
  movq 0xb0(%rax), %rdi          #  129   0x104dc5  7      OPC=movq_r64_m64    
  movq 0x8(%rsp), %rdx           #  130   0x104dcc  5      OPC=movq_r64_m64    
  movq %rdx, 0xb0(%rax)          #  131   0x104dd1  7      OPC=movq_m64_r64    
  callq .L_1f8d0                 #  132   0x104dd8  5      OPC=callq_label     
  movq 0x8(%rsp), %rax           #  133   0x104ddd  5      OPC=movq_r64_m64    
  jmpq .L_104de9                 #  134   0x104de2  2      OPC=jmpq_label      
.L_104de4:                       #        0x104de4  0      OPC=<label>         
  movl $0x0, %eax                #  135   0x104de4  5      OPC=movl_r32_imm32  
.L_104de9:                       #        0x104de9  0      OPC=<label>         
  addq $0x438, %rsp              #  136   0x104de9  7      OPC=addq_r64_imm32  
  popq %rbx                      #  137   0x104df0  1      OPC=popq_r64_1      
  popq %rbp                      #  138   0x104df1  1      OPC=popq_r64_1      
  popq %r12                      #  139   0x104df2  2      OPC=popq_r64_1      
  popq %r13                      #  140   0x104df4  2      OPC=popq_r64_1      
  retq                           #  141   0x104df6  1      OPC=retq            
                                                                               
.size clnt_sperror_GLIBC_2_2_5, .-clnt_sperror_GLIBC_2_2_5

