  .text
  .globl __check_native
  .type __check_native, @function

#! file-offset 0xf8773
#! rip-offset  0xf8773
#! capacity    824 bytes

# Text                              #  Line  RIP      Bytes  Opcode              
.__check_native:                    #        0xf8773  0      OPC=<label>         
  pushq %rbp                        #  1     0xf8773  1      OPC=pushq_r64_1     
  movq %rsp, %rbp                   #  2     0xf8774  3      OPC=movq_r64_r64    
  pushq %r15                        #  3     0xf8777  2      OPC=pushq_r64_1     
  pushq %r14                        #  4     0xf8779  2      OPC=pushq_r64_1     
  pushq %r13                        #  5     0xf877b  2      OPC=pushq_r64_1     
  pushq %r12                        #  6     0xf877d  2      OPC=pushq_r64_1     
  pushq %rbx                        #  7     0xf877f  1      OPC=pushq_r64_1     
  subq $0xb8, %rsp                  #  8     0xf8780  7      OPC=subq_r64_imm32  
  movl %edi, -0xb8(%rbp)            #  9     0xf8787  6      OPC=movl_m32_r32    
  movq %rsi, -0xc0(%rbp)            #  10    0xf878d  7      OPC=movq_m64_r64    
  movl %edx, -0xb4(%rbp)            #  11    0xf8794  6      OPC=movl_m32_r32    
  movq %rcx, -0xc8(%rbp)            #  12    0xf879a  7      OPC=movq_m64_r64    
  movl $0x0, %edx                   #  13    0xf87a1  5      OPC=movl_r32_imm32  
  movl $0x3, %esi                   #  14    0xf87a6  5      OPC=movl_r32_imm32  
  movl $0x10, %edi                  #  15    0xf87ab  5      OPC=movl_r32_imm32  
  callq .__socket                   #  16    0xf87b0  5      OPC=callq_label     
  movl %eax, %r12d                  #  17    0xf87b5  3      OPC=movl_r32_r32    
  movq $0x0, -0x40(%rbp)            #  18    0xf87b8  8      OPC=movq_m64_imm32  
  movl $0x0, -0x38(%rbp)            #  19    0xf87c0  7      OPC=movl_m32_imm32  
  movw $0x10, -0x40(%rbp)           #  20    0xf87c7  6      OPC=movw_m16_imm16  
  movl $0xc, -0x44(%rbp)            #  21    0xf87cd  7      OPC=movl_m32_imm32  
  testl %eax, %eax                  #  22    0xf87d4  2      OPC=testl_r32_r32   
  js .L_f8a9c                       #  23    0xf87d6  6      OPC=js_label_1      
  leaq -0x40(%rbp), %rsi            #  24    0xf87dc  4      OPC=leaq_r64_m16    
  movl $0xc, %edx                   #  25    0xf87e0  5      OPC=movl_r32_imm32  
  movl %eax, %edi                   #  26    0xf87e5  2      OPC=movl_r32_r32    
  callq .bind                       #  27    0xf87e7  5      OPC=callq_label     
  testl %eax, %eax                  #  28    0xf87ec  2      OPC=testl_r32_r32   
  jne .L_f8a9c                      #  29    0xf87ee  6      OPC=jne_label_1     
  leaq -0x40(%rbp), %rsi            #  30    0xf87f4  4      OPC=leaq_r64_m16    
  leaq -0x44(%rbp), %rdx            #  31    0xf87f8  4      OPC=leaq_r64_m16    
  movl %r12d, %edi                  #  32    0xf87fc  3      OPC=movl_r32_r32    
  callq .getsockname                #  33    0xf87ff  5      OPC=callq_label     
  testl %eax, %eax                  #  34    0xf8804  2      OPC=testl_r32_r32   
  jne .L_f8a9c                      #  35    0xf8806  6      OPC=jne_label_1     
  movl -0x3c(%rbp), %r14d           #  36    0xf880c  4      OPC=movl_r32_m32    
  movl $0x14, -0x60(%rbp)           #  37    0xf8810  7      OPC=movl_m32_imm32  
  movw $0x12, -0x5c(%rbp)           #  38    0xf8817  6      OPC=movw_m16_imm16  
  movw $0x301, -0x5a(%rbp)          #  39    0xf881d  6      OPC=movw_m16_imm16  
  movl $0x0, -0x54(%rbp)            #  40    0xf8823  7      OPC=movl_m32_imm32  
  movl $0x0, %edi                   #  41    0xf882a  5      OPC=movl_r32_imm32  
  callq .L_1f8e0                    #  42    0xf882f  5      OPC=callq_label     
  movl %eax, -0x58(%rbp)            #  43    0xf8834  3      OPC=movl_m32_r32    
  movb $0x0, -0x50(%rbp)            #  44    0xf8837  4      OPC=movb_m8_imm8    
  movw $0x0, -0x4f(%rbp)            #  45    0xf883b  6      OPC=movw_m16_imm16  
  movb $0x0, -0x4d(%rbp)            #  46    0xf8841  4      OPC=movb_m8_imm8    
  movq $0x0, -0x40(%rbp)            #  47    0xf8845  8      OPC=movq_m64_imm32  
  movl $0x0, -0x38(%rbp)            #  48    0xf884d  7      OPC=movl_m32_imm32  
  movw $0x10, -0x40(%rbp)           #  49    0xf8854  6      OPC=movw_m16_imm16  
  subq $0x1010, %rsp                #  50    0xf885a  7      OPC=subq_r64_imm32  
  leaq 0xf(%rsp), %rax              #  51    0xf8861  5      OPC=leaq_r64_m16    
  andq $0xf0, %rax                  #  52    0xf8866  4      OPC=andq_r64_imm8   
  movq %rax, %r15                   #  53    0xf886a  3      OPC=movq_r64_r64    
  movq %rax, -0x70(%rbp)            #  54    0xf886d  4      OPC=movq_m64_r64    
  movq $0x1000, -0x68(%rbp)         #  55    0xf8871  8      OPC=movq_m64_imm32  
  leaq -0x40(%rbp), %r13            #  56    0xf8879  4      OPC=leaq_r64_m16    
  leaq -0x60(%rbp), %rbx            #  57    0xf887d  4      OPC=leaq_r64_m16    
.L_f8881:                           #        0xf8881  0      OPC=<label>         
  movl $0xc, %r9d                   #  58    0xf8881  6      OPC=movl_r32_imm32  
  movq %r13, %r8                    #  59    0xf8887  3      OPC=movq_r64_r64    
  movl $0x0, %ecx                   #  60    0xf888a  5      OPC=movl_r32_imm32  
  movl $0x14, %edx                  #  61    0xf888f  5      OPC=movl_r32_imm32  
  movq %rbx, %rsi                   #  62    0xf8894  3      OPC=movq_r64_r64    
  movl %r12d, %edi                  #  63    0xf8897  3      OPC=movl_r32_r32    
  callq .sendto                     #  64    0xf889a  5      OPC=callq_label     
  cmpq $0xff, %rax                  #  65    0xf889f  4      OPC=cmpq_r64_imm8   
  jne .L_f88b7                      #  66    0xf88a3  2      OPC=jne_label       
  movq 0x2925d4(%rip), %rax         #  67    0xf88a5  7      OPC=movq_r64_m64    
  cmpl $0x4, (%rax)                 #  68    0xf88ac  3      OPC=cmpl_m32_imm8   
  nop                               #  69    0xf88af  1      OPC=nop             
  je .L_f8881                       #  70    0xf88b0  2      OPC=je_label        
  jmpq .L_f8a9c                     #  71    0xf88b2  5      OPC=jmpq_label_1    
.L_f88b7:                           #        0xf88b7  0      OPC=<label>         
  testq %rax, %rax                  #  72    0xf88b7  3      OPC=testq_r64_r64   
  js .L_f8a9c                       #  73    0xf88ba  6      OPC=js_label_1      
  leaq -0x40(%rbp), %rax            #  74    0xf88c0  4      OPC=leaq_r64_m16    
  movq %rax, -0xd8(%rbp)            #  75    0xf88c4  7      OPC=movq_m64_r64    
  leaq -0x70(%rbp), %rax            #  76    0xf88cb  4      OPC=leaq_r64_m16    
  movq %rax, -0xe0(%rbp)            #  77    0xf88cf  7      OPC=movq_m64_r64    
  leaq -0xb0(%rbp), %r13            #  78    0xf88d6  7      OPC=leaq_r64_m16    
.L_f88dd:                           #        0xf88dd  0      OPC=<label>         
  movq -0xd8(%rbp), %rax            #  79    0xf88dd  7      OPC=movq_r64_m64    
  movq %rax, -0xb0(%rbp)            #  80    0xf88e4  7      OPC=movq_m64_r64    
  movl $0xc, -0xa8(%rbp)            #  81    0xf88eb  10     OPC=movl_m32_imm32  
  movq -0xe0(%rbp), %rax            #  82    0xf88f5  7      OPC=movq_r64_m64    
  movq %rax, -0xa0(%rbp)            #  83    0xf88fc  7      OPC=movq_m64_r64    
  movq $0x1, -0x98(%rbp)            #  84    0xf8903  11     OPC=movq_m64_imm32  
  movq $0x0, -0x90(%rbp)            #  85    0xf890e  11     OPC=movq_m64_imm32  
  movq $0x0, -0x88(%rbp)            #  86    0xf8919  11     OPC=movq_m64_imm32  
  movl $0x0, -0x80(%rbp)            #  87    0xf8924  7      OPC=movl_m32_imm32  
.L_f892b:                           #        0xf892b  0      OPC=<label>         
  movl $0x0, %edx                   #  88    0xf892b  5      OPC=movl_r32_imm32  
  movq %r13, %rsi                   #  89    0xf8930  3      OPC=movq_r64_r64    
  movl %r12d, %edi                  #  90    0xf8933  3      OPC=movl_r32_r32    
  callq .recvmsg                    #  91    0xf8936  5      OPC=callq_label     
  cmpq $0xff, %rax                  #  92    0xf893b  4      OPC=cmpq_r64_imm8   
  jne .L_f8953                      #  93    0xf893f  2      OPC=jne_label       
  movq 0x292538(%rip), %rax         #  94    0xf8941  7      OPC=movq_r64_m64    
  cmpl $0x4, (%rax)                 #  95    0xf8948  3      OPC=cmpl_m32_imm8   
  nop                               #  96    0xf894b  1      OPC=nop             
  je .L_f892b                       #  97    0xf894c  2      OPC=je_label        
  jmpq .L_f8a8d                     #  98    0xf894e  5      OPC=jmpq_label_1    
.L_f8953:                           #        0xf8953  0      OPC=<label>         
  movq %rax, %rbx                   #  99    0xf8953  3      OPC=movq_r64_r64    
  movq %rax, -0xd0(%rbp)            #  100   0xf8956  7      OPC=movq_m64_r64    
  movq %rax, %rsi                   #  101   0xf895d  3      OPC=movq_r64_r64    
  movl %r12d, %edi                  #  102   0xf8960  3      OPC=movl_r32_r32    
  callq .__netlink_assert_response  #  103   0xf8963  5      OPC=callq_label     
  testq %rbx, %rbx                  #  104   0xf8968  3      OPC=testq_r64_r64   
  js .L_f8a9c                       #  105   0xf896b  6      OPC=js_label_1      
  testb $0x20, -0x80(%rbp)          #  106   0xf8971  4      OPC=testb_m8_imm8   
  jne .L_f8a9c                      #  107   0xf8975  6      OPC=jne_label_1     
  movq -0xd0(%rbp), %rcx            #  108   0xf897b  7      OPC=movq_r64_m64    
  cmpq $0xf, %rcx                   #  109   0xf8982  4      OPC=cmpq_r64_imm8   
  jbe .L_f88dd                      #  110   0xf8986  6      OPC=jbe_label_1     
  movl (%r15), %eax                 #  111   0xf898c  3      OPC=movl_r32_m32    
  cmpl $0xf, %eax                   #  112   0xf898f  3      OPC=cmpl_r32_imm8   
  jbe .L_f88dd                      #  113   0xf8992  6      OPC=jbe_label_1     
  movl %eax, %edx                   #  114   0xf8998  2      OPC=movl_r32_r32    
  cmpq %rdx, %rcx                   #  115   0xf899a  3      OPC=cmpq_r64_r64    
  jb .L_f88dd                       #  116   0xf899d  6      OPC=jb_label_1      
  movl -0x3c(%rbp), %edi            #  117   0xf89a3  3      OPC=movl_r32_m32    
  movl -0x58(%rbp), %r8d            #  118   0xf89a6  4      OPC=movl_r32_m32    
  movq %r15, %rdx                   #  119   0xf89aa  3      OPC=movq_r64_r64    
  movl $0x0, %r9d                   #  120   0xf89ad  6      OPC=movl_r32_imm32  
.L_f89b3:                           #        0xf89b3  0      OPC=<label>         
  testl %edi, %edi                  #  121   0xf89b3  2      OPC=testl_r32_r32   
  jne .L_f8a54                      #  122   0xf89b5  6      OPC=jne_label_1     
  cmpl 0xc(%rdx), %r14d             #  123   0xf89bb  4      OPC=cmpl_r32_m32    
  jne .L_f8a54                      #  124   0xf89bf  6      OPC=jne_label_1     
  cmpl %r8d, 0x8(%rdx)              #  125   0xf89c5  4      OPC=cmpl_m32_r32    
  jne .L_f8a54                      #  126   0xf89c9  6      OPC=jne_label_1     
  movzwl 0x4(%rdx), %ecx            #  127   0xf89cf  4      OPC=movzwl_r32_m16  
  cmpw $0x10, %cx                   #  128   0xf89d3  4      OPC=cmpw_r16_imm8   
  jne .L_f8a47                      #  129   0xf89d7  2      OPC=jne_label       
  movzwl 0x12(%rdx), %esi           #  130   0xf89d9  4      OPC=movzwl_r32_m16  
  leal -0x300(%rsi), %ecx           #  131   0xf89dd  6      OPC=leal_r32_m16    
  cmpw $0x1, %cx                    #  132   0xf89e3  4      OPC=cmpw_r16_imm8   
  seta %cl                          #  133   0xf89e7  3      OPC=seta_r8         
  cmpw $0x308, %si                  #  134   0xf89ea  5      OPC=cmpw_r16_imm16  
  setne %sil                        #  135   0xf89ef  4      OPC=setne_r8        
  movzbl %sil, %esi                 #  136   0xf89f3  4      OPC=movzbl_r32_r8   
  andl %esi, %ecx                   #  137   0xf89f7  2      OPC=andl_r32_r32    
  movl 0x14(%rdx), %esi             #  138   0xf89f9  3      OPC=movl_r32_m32    
  cmpl -0xb8(%rbp), %esi            #  139   0xf89fc  6      OPC=cmpl_r32_m32    
  jne .L_f8a18                      #  140   0xf8a02  2      OPC=jne_label       
  movq -0xc0(%rbp), %r10            #  141   0xf8a04  7      OPC=movq_r64_m64    
  movl %ecx, (%r10)                 #  142   0xf8a0b  3      OPC=movl_m32_r32    
  movl $0xffffffff, -0xb8(%rbp)     #  143   0xf8a0e  10     OPC=movl_m32_imm32  
.L_f8a18:                           #        0xf8a18  0      OPC=<label>         
  cmpl %esi, -0xb4(%rbp)            #  144   0xf8a18  6      OPC=cmpl_m32_r32    
  jne .L_f8a33                      #  145   0xf8a1e  2      OPC=jne_label       
  movq -0xc8(%rbp), %rsi            #  146   0xf8a20  7      OPC=movq_r64_m64    
  movl %ecx, (%rsi)                 #  147   0xf8a27  2      OPC=movl_m32_r32    
  movl $0xffffffff, -0xb4(%rbp)     #  148   0xf8a29  10     OPC=movl_m32_imm32  
.L_f8a33:                           #        0xf8a33  0      OPC=<label>         
  cmpl $0xffffffff, -0xb4(%rbp)     #  149   0xf8a33  10     OPC=cmpl_m32_imm32  
  nop                               #  150   0xf8a3d  1      OPC=nop             
  nop                               #  151   0xf8a3e  1      OPC=nop             
  nop                               #  152   0xf8a3f  1      OPC=nop             
  nop                               #  153   0xf8a40  1      OPC=nop             
  nop                               #  154   0xf8a41  1      OPC=nop             
  nop                               #  155   0xf8a42  1      OPC=nop             
  nop                               #  156   0xf8a43  1      OPC=nop             
  jne .L_f8a54                      #  157   0xf8a44  2      OPC=jne_label       
  cmpl $0xffffffff, -0xb8(%rbp)     #  158   0xf8a46  10     OPC=cmpl_m32_imm32  
  nop                               #  159   0xf8a50  1      OPC=nop             
  nop                               #  160   0xf8a51  1      OPC=nop             
  nop                               #  161   0xf8a52  1      OPC=nop             
  nop                               #  162   0xf8a53  1      OPC=nop             
  nop                               #  163   0xf8a54  1      OPC=nop             
  nop                               #  164   0xf8a55  1      OPC=nop             
  nop                               #  165   0xf8a56  1      OPC=nop             
  jne .L_f8a54                      #  166   0xf8a57  2      OPC=jne_label       
  jmpq .L_f8a81                     #  167   0xf8a59  2      OPC=jmpq_label      
.L_f8a47:                           #        0xf8a5b  0      OPC=<label>         
  cmpw $0x3, %cx                    #  168   0xf8a5b  4      OPC=cmpw_r16_imm8   
  movl $0x1, %ecx                   #  169   0xf8a5f  5      OPC=movl_r32_imm32  
  cmovel %ecx, %r9d                 #  170   0xf8a64  4      OPC=cmovel_r32_r32  
.L_f8a54:                           #        0xf8a68  0      OPC=<label>         
  addl $0x3, %eax                   #  171   0xf8a68  3      OPC=addl_r32_imm8   
  andl $0xfffffffc, %eax            #  172   0xf8a6b  6      OPC=andl_r32_imm32  
  nop                               #  173   0xf8a71  1      OPC=nop             
  nop                               #  174   0xf8a72  1      OPC=nop             
  nop                               #  175   0xf8a73  1      OPC=nop             
  subq %rax, %rbx                   #  176   0xf8a74  3      OPC=subq_r64_r64    
  addq %rax, %rdx                   #  177   0xf8a77  3      OPC=addq_r64_r64    
  cmpq $0xf, %rbx                   #  178   0xf8a7a  4      OPC=cmpq_r64_imm8   
  jbe .L_f8a78                      #  179   0xf8a7e  2      OPC=jbe_label       
  movl (%rdx), %eax                 #  180   0xf8a80  2      OPC=movl_r32_m32    
  cmpl $0xf, %eax                   #  181   0xf8a82  3      OPC=cmpl_r32_imm8   
  jbe .L_f8a78                      #  182   0xf8a85  2      OPC=jbe_label       
  movl %eax, %esi                   #  183   0xf8a87  2      OPC=movl_r32_r32    
  cmpq %rsi, %rbx                   #  184   0xf8a89  3      OPC=cmpq_r64_r64    
  jae .L_f89b3                      #  185   0xf8a8c  6      OPC=jae_label_1     
.L_f8a78:                           #        0xf8a92  0      OPC=<label>         
  testb %r9b, %r9b                  #  186   0xf8a92  3      OPC=testb_r8_r8     
  je .L_f88dd                       #  187   0xf8a95  6      OPC=je_label_1      
.L_f8a81:                           #        0xf8a9b  0      OPC=<label>         
  movslq %r12d, %rdi                #  188   0xf8a9b  3      OPC=movslq_r64_r32  
  movl $0x3, %eax                   #  189   0xf8a9e  5      OPC=movl_r32_imm32  
  syscall                           #  190   0xf8aa3  2      OPC=syscall         
  jmpq .L_f8a9c                     #  191   0xf8aa5  2      OPC=jmpq_label      
.L_f8a8d:                           #        0xf8aa7  0      OPC=<label>         
  movq $0xffffffff, %rsi            #  192   0xf8aa7  7      OPC=movq_r64_imm32  
  movl %r12d, %edi                  #  193   0xf8aae  3      OPC=movl_r32_r32    
  callq .__netlink_assert_response  #  194   0xf8ab1  5      OPC=callq_label     
.L_f8a9c:                           #        0xf8ab6  0      OPC=<label>         
  leaq -0x28(%rbp), %rsp            #  195   0xf8ab6  4      OPC=leaq_r64_m16    
  popq %rbx                         #  196   0xf8aba  1      OPC=popq_r64_1      
  popq %r12                         #  197   0xf8abb  2      OPC=popq_r64_1      
  popq %r13                         #  198   0xf8abd  2      OPC=popq_r64_1      
  popq %r14                         #  199   0xf8abf  2      OPC=popq_r64_1      
  popq %r15                         #  200   0xf8ac1  2      OPC=popq_r64_1      
  popq %rbp                         #  201   0xf8ac3  1      OPC=popq_r64_1      
  retq                              #  202   0xf8ac4  1      OPC=retq            
                                                                                 
.size __check_native, .-__check_native

