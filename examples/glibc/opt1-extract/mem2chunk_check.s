  .text
  .globl mem2chunk_check
  .type mem2chunk_check, @function

#! file-offset 0x71a72
#! rip-offset  0x71a72
#! capacity    657 bytes

# Text                             #  Line  RIP      Bytes  Opcode               
.mem2chunk_check:                  #        0x71a72  0      OPC=<label>          
  testb $0xf, %dil                 #  1     0x71a72  4      OPC=testb_r8_imm8    
  jne .L_71c92                     #  2     0x71a76  6      OPC=jne_label_1      
  leaq -0x10(%rdi), %r8            #  3     0x71a7c  4      OPC=leaq_r64_m16     
  movq -0x8(%rdi), %r9             #  4     0x71a80  4      OPC=movq_r64_m64     
  movq %r9, %rdx                   #  5     0x71a84  3      OPC=movq_r64_r64     
  andq $0xf8, %rdx                 #  6     0x71a87  4      OPC=andq_r64_imm8    
  movq %r8, %rcx                   #  7     0x71a8b  3      OPC=movq_r64_r64     
  shrq $0xb, %rcx                  #  8     0x71a8e  4      OPC=shrq_r64_imm8    
  movq %r8, %rax                   #  9     0x71a92  3      OPC=movq_r64_r64     
  shrq $0x3, %rax                  #  10    0x71a95  4      OPC=shrq_r64_imm8    
  xorl %eax, %ecx                  #  11    0x71a99  2      OPC=xorl_r32_r32     
  cmpb $0x1, %cl                   #  12    0x71a9b  3      OPC=cmpb_r8_imm8     
  movl $0x2, %eax                  #  13    0x71a9e  5      OPC=movl_r32_imm32   
  cmovel %eax, %ecx                #  14    0x71aa3  3      OPC=cmovel_r32_r32   
  testb $0x2, %r9b                 #  15    0x71aa6  4      OPC=testb_r8_imm8    
  jne .L_71b9e                     #  16    0x71aaa  6      OPC=jne_label_1      
  movl 0x31a18e(%rip), %eax        #  17    0x71ab0  6      OPC=movl_r32_m32     
  shrl $0x1, %eax                  #  18    0x71ab6  2      OPC=shrl_r32_one     
  xorl $0x1, %eax                  #  19    0x71ab8  3      OPC=xorl_r32_imm8    
  andl $0x1, %eax                  #  20    0x71abb  3      OPC=andl_r32_imm8    
  je .L_71ae4                      #  21    0x71abe  2      OPC=je_label         
  movq 0x319789(%rip), %r10        #  22    0x71ac0  7      OPC=movq_r64_m64     
  cmpq %r10, %r8                   #  23    0x71ac7  3      OPC=cmpq_r64_r64     
  jb .L_71c98                      #  24    0x71aca  6      OPC=jb_label_1       
  leaq (%r8,%rdx,1), %r11          #  25    0x71ad0  4      OPC=leaq_r64_m16     
  addq 0x31a9e5(%rip), %r10        #  26    0x71ad4  7      OPC=addq_r64_m64     
  cmpq %r10, %r11                  #  27    0x71adb  3      OPC=cmpq_r64_r64     
  jae .L_71c9e                     #  28    0x71ade  6      OPC=jae_label_1      
.L_71ae4:                          #        0x71ae4  0      OPC=<label>          
  cmpq $0x1f, %rdx                 #  29    0x71ae4  4      OPC=cmpq_r64_imm8    
  jbe .L_71ca4                     #  30    0x71ae8  6      OPC=jbe_label_1      
  testb $0x8, %r9b                 #  31    0x71aee  4      OPC=testb_r8_imm8    
  jne .L_71caa                     #  32    0x71af2  6      OPC=jne_label_1      
  testb $0x1, -0x8(%rdi,%rdx,1)    #  33    0x71af8  5      OPC=testb_m8_imm8    
  je .L_71cb0                      #  34    0x71afd  6      OPC=je_label_1       
  testb $0x1, %r9b                 #  35    0x71b03  4      OPC=testb_r8_imm8    
  jne .L_71b4a                     #  36    0x71b07  2      OPC=jne_label        
  movq -0x10(%rdi), %r9            #  37    0x71b09  4      OPC=movq_r64_m64     
  testb $0xf, %r9b                 #  38    0x71b0d  4      OPC=testb_r8_imm8    
  jne .L_71cb6                     #  39    0x71b11  6      OPC=jne_label_1      
  testl %eax, %eax                 #  40    0x71b17  2      OPC=testl_r32_r32    
  je .L_71b2e                      #  41    0x71b19  2      OPC=je_label         
  movq %r8, %rax                   #  42    0x71b1b  3      OPC=movq_r64_r64     
  subq %r9, %rax                   #  43    0x71b1e  3      OPC=subq_r64_r64     
  cmpq %rax, 0x319728(%rip)        #  44    0x71b21  7      OPC=cmpq_m64_r64     
  ja .L_71cbc                      #  45    0x71b28  6      OPC=ja_label_1       
.L_71b2e:                          #        0x71b2e  0      OPC=<label>          
  movq %r8, %rax                   #  46    0x71b2e  3      OPC=movq_r64_r64     
  subq %r9, %rax                   #  47    0x71b31  3      OPC=subq_r64_r64     
  movq 0x8(%rax), %r10             #  48    0x71b34  4      OPC=movq_r64_m64     
  andq $0xf8, %r10                 #  49    0x71b38  4      OPC=andq_r64_imm8    
  movl $0x0, %eax                  #  50    0x71b3c  5      OPC=movl_r32_imm32   
  cmpq %r10, %r9                   #  51    0x71b41  3      OPC=cmpq_r64_r64     
  jne .L_71d01                     #  52    0x71b44  6      OPC=jne_label_1      
.L_71b4a:                          #        0x71b4a  0      OPC=<label>          
  leaq 0x7(%rdx), %rax             #  53    0x71b4a  4      OPC=leaq_r64_m16     
  movzbl -0x10(%rdi,%rax,1), %edx  #  54    0x71b4e  5      OPC=movzbl_r32_m8    
  movzbl %cl, %ecx                 #  55    0x71b53  3      OPC=movzbl_r32_r8    
  cmpq %rcx, %rdx                  #  56    0x71b56  3      OPC=cmpq_r64_r64     
  je .L_71c81                      #  57    0x71b59  6      OPC=je_label_1       
  testq %rdx, %rdx                 #  58    0x71b5f  3      OPC=testq_r64_r64    
  je .L_71cc2                      #  59    0x71b62  6      OPC=je_label_1       
  leaq 0x10(%rdx), %rdi            #  60    0x71b68  4      OPC=leaq_r64_m16     
  cmpq %rdi, %rax                  #  61    0x71b6c  3      OPC=cmpq_r64_r64     
  jae .L_71b8c                     #  62    0x71b6f  2      OPC=jae_label        
  jmpq .L_71cc8                    #  63    0x71b71  5      OPC=jmpq_label_1     
.L_71b76:                          #        0x71b76  0      OPC=<label>          
  testq %rdx, %rdx                 #  64    0x71b76  3      OPC=testq_r64_r64    
  je .L_71cce                      #  65    0x71b79  6      OPC=je_label_1       
  leaq 0x10(%rdx), %rdi            #  66    0x71b7f  4      OPC=leaq_r64_m16     
  cmpq %rax, %rdi                  #  67    0x71b83  3      OPC=cmpq_r64_r64     
  ja .L_71cd4                      #  68    0x71b86  6      OPC=ja_label_1       
.L_71b8c:                          #        0x71b8c  0      OPC=<label>          
  subq %rdx, %rax                  #  69    0x71b8c  3      OPC=subq_r64_r64     
  movzbl (%r8,%rax,1), %edx        #  70    0x71b8f  5      OPC=movzbl_r32_m8    
  cmpq %rcx, %rdx                  #  71    0x71b94  3      OPC=cmpq_r64_r64     
  jne .L_71b76                     #  72    0x71b97  2      OPC=jne_label        
  jmpq .L_71c81                    #  73    0x71b99  5      OPC=jmpq_label_1     
.L_71b9e:                          #        0x71b9e  0      OPC=<label>          
  movq 0x3192d3(%rip), %rax        #  74    0x71b9e  7      OPC=movq_r64_m64     
  movq 0x18(%rax), %r9             #  75    0x71ba5  4      OPC=movq_r64_m64     
  subq $0x1, %r9                   #  76    0x71ba9  4      OPC=subq_r64_imm8    
  movq %rdi, %rax                  #  77    0x71bad  3      OPC=movq_r64_r64     
  andq %r9, %rax                   #  78    0x71bb0  3      OPC=andq_r64_r64     
  leaq -0x10(%rax), %r10           #  79    0x71bb3  4      OPC=leaq_r64_m16     
  testq $0xffffffef, %r10          #  80    0x71bb7  7      OPC=testq_r64_imm32  
  je .L_71c06                      #  81    0x71bbe  2      OPC=je_label         
  leaq -0x1(%rax), %r10            #  82    0x71bc0  4      OPC=leaq_r64_m16     
  cmpq $0x1ffe, %r10               #  83    0x71bc4  7      OPC=cmpq_r64_imm32   
  ja .L_71c06                      #  84    0x71bcb  2      OPC=ja_label         
  leaq -0x40(%rax), %r10           #  85    0x71bcd  4      OPC=leaq_r64_m16     
  testq $0xffffffbf, %r10          #  86    0x71bd1  7      OPC=testq_r64_imm32  
  je .L_71c06                      #  87    0x71bd8  2      OPC=je_label         
  leaq -0x100(%rax), %r10          #  88    0x71bda  7      OPC=leaq_r64_m16     
  testq $0xfffffeff, %r10          #  89    0x71be1  7      OPC=testq_r64_imm32  
  je .L_71c06                      #  90    0x71be8  2      OPC=je_label         
  leaq -0x400(%rax), %r10          #  91    0x71bea  7      OPC=leaq_r64_m16     
  testq $0xfffffbff, %r10          #  92    0x71bf1  7      OPC=testq_r64_imm32  
  je .L_71c06                      #  93    0x71bf8  2      OPC=je_label         
  cmpq $0x1000, %rax               #  94    0x71bfa  6      OPC=cmpq_rax_imm32   
  jne .L_71cda                     #  95    0x71c00  6      OPC=jne_label_1      
.L_71c06:                          #        0x71c06  0      OPC=<label>          
  movq -0x8(%rdi), %r10            #  96    0x71c06  4      OPC=movq_r64_m64     
  andl $0x3, %r10d                 #  97    0x71c0a  4      OPC=andl_r32_imm8    
  movl $0x0, %eax                  #  98    0x71c0e  5      OPC=movl_r32_imm32   
  cmpq $0x2, %r10                  #  99    0x71c13  4      OPC=cmpq_r64_imm8    
  jne .L_71d01                     #  100   0x71c17  6      OPC=jne_label_1      
  movq -0x10(%rdi), %rax           #  101   0x71c1d  4      OPC=movq_r64_m64     
  movq %r8, %r10                   #  102   0x71c21  3      OPC=movq_r64_r64     
  subq %rax, %r10                  #  103   0x71c24  3      OPC=subq_r64_r64     
  addq %rdx, %rax                  #  104   0x71c27  3      OPC=addq_r64_r64     
  orq %r10, %rax                   #  105   0x71c2a  3      OPC=orq_r64_r64      
  testq %r9, %rax                  #  106   0x71c2d  3      OPC=testq_r64_r64    
  jne .L_71ce0                     #  107   0x71c30  6      OPC=jne_label_1      
  leaq -0x1(%rdx), %rax            #  108   0x71c36  4      OPC=leaq_r64_m16     
  movzbl -0x10(%rdi,%rax,1), %edx  #  109   0x71c3a  5      OPC=movzbl_r32_m8    
  movzbl %cl, %ecx                 #  110   0x71c3f  3      OPC=movzbl_r32_r8    
  cmpq %rcx, %rdx                  #  111   0x71c42  3      OPC=cmpq_r64_r64     
  je .L_71c81                      #  112   0x71c45  2      OPC=je_label         
  testq %rdx, %rdx                 #  113   0x71c47  3      OPC=testq_r64_r64    
  je .L_71ce6                      #  114   0x71c4a  6      OPC=je_label_1       
  leaq 0x10(%rdx), %rdi            #  115   0x71c50  4      OPC=leaq_r64_m16     
  cmpq %rdi, %rax                  #  116   0x71c54  3      OPC=cmpq_r64_r64     
  jae .L_71c74                     #  117   0x71c57  2      OPC=jae_label        
  jmpq .L_71cec                    #  118   0x71c59  5      OPC=jmpq_label_1     
.L_71c5e:                          #        0x71c5e  0      OPC=<label>          
  testq %rdx, %rdx                 #  119   0x71c5e  3      OPC=testq_r64_r64    
  je .L_71cf2                      #  120   0x71c61  6      OPC=je_label_1       
  leaq 0x10(%rdx), %rdi            #  121   0x71c67  4      OPC=leaq_r64_m16     
  cmpq %rax, %rdi                  #  122   0x71c6b  3      OPC=cmpq_r64_r64     
  ja .L_71cf8                      #  123   0x71c6e  6      OPC=ja_label_1       
.L_71c74:                          #        0x71c74  0      OPC=<label>          
  subq %rdx, %rax                  #  124   0x71c74  3      OPC=subq_r64_r64     
  movzbl (%r8,%rax,1), %edx        #  125   0x71c77  5      OPC=movzbl_r32_m8    
  cmpq %rcx, %rdx                  #  126   0x71c7c  3      OPC=cmpq_r64_r64     
  jne .L_71c5e                     #  127   0x71c7f  2      OPC=jne_label        
.L_71c81:                          #        0x71c81  0      OPC=<label>          
  addq %r8, %rax                   #  128   0x71c81  3      OPC=addq_r64_r64     
  notb (%rax)                      #  129   0x71c84  2      OPC=notb_m8          
  testq %rsi, %rsi                 #  130   0x71c86  3      OPC=testq_r64_r64    
  je .L_71cfe                      #  131   0x71c89  2      OPC=je_label         
  movq %rax, (%rsi)                #  132   0x71c8b  3      OPC=movq_m64_r64     
  movq %r8, %rax                   #  133   0x71c8e  3      OPC=movq_r64_r64     
  retq                             #  134   0x71c91  1      OPC=retq             
.L_71c92:                          #        0x71c92  0      OPC=<label>          
  movl $0x0, %eax                  #  135   0x71c92  5      OPC=movl_r32_imm32   
  retq                             #  136   0x71c97  1      OPC=retq             
.L_71c98:                          #        0x71c98  0      OPC=<label>          
  movl $0x0, %eax                  #  137   0x71c98  5      OPC=movl_r32_imm32   
  retq                             #  138   0x71c9d  1      OPC=retq             
.L_71c9e:                          #        0x71c9e  0      OPC=<label>          
  movl $0x0, %eax                  #  139   0x71c9e  5      OPC=movl_r32_imm32   
  retq                             #  140   0x71ca3  1      OPC=retq             
.L_71ca4:                          #        0x71ca4  0      OPC=<label>          
  movl $0x0, %eax                  #  141   0x71ca4  5      OPC=movl_r32_imm32   
  retq                             #  142   0x71ca9  1      OPC=retq             
.L_71caa:                          #        0x71caa  0      OPC=<label>          
  movl $0x0, %eax                  #  143   0x71caa  5      OPC=movl_r32_imm32   
  retq                             #  144   0x71caf  1      OPC=retq             
.L_71cb0:                          #        0x71cb0  0      OPC=<label>          
  movl $0x0, %eax                  #  145   0x71cb0  5      OPC=movl_r32_imm32   
  retq                             #  146   0x71cb5  1      OPC=retq             
.L_71cb6:                          #        0x71cb6  0      OPC=<label>          
  movl $0x0, %eax                  #  147   0x71cb6  5      OPC=movl_r32_imm32   
  retq                             #  148   0x71cbb  1      OPC=retq             
.L_71cbc:                          #        0x71cbc  0      OPC=<label>          
  movl $0x0, %eax                  #  149   0x71cbc  5      OPC=movl_r32_imm32   
  retq                             #  150   0x71cc1  1      OPC=retq             
.L_71cc2:                          #        0x71cc2  0      OPC=<label>          
  movl $0x0, %eax                  #  151   0x71cc2  5      OPC=movl_r32_imm32   
  retq                             #  152   0x71cc7  1      OPC=retq             
.L_71cc8:                          #        0x71cc8  0      OPC=<label>          
  movl $0x0, %eax                  #  153   0x71cc8  5      OPC=movl_r32_imm32   
  retq                             #  154   0x71ccd  1      OPC=retq             
.L_71cce:                          #        0x71cce  0      OPC=<label>          
  movl $0x0, %eax                  #  155   0x71cce  5      OPC=movl_r32_imm32   
  retq                             #  156   0x71cd3  1      OPC=retq             
.L_71cd4:                          #        0x71cd4  0      OPC=<label>          
  movl $0x0, %eax                  #  157   0x71cd4  5      OPC=movl_r32_imm32   
  retq                             #  158   0x71cd9  1      OPC=retq             
.L_71cda:                          #        0x71cda  0      OPC=<label>          
  movl $0x0, %eax                  #  159   0x71cda  5      OPC=movl_r32_imm32   
  retq                             #  160   0x71cdf  1      OPC=retq             
.L_71ce0:                          #        0x71ce0  0      OPC=<label>          
  movl $0x0, %eax                  #  161   0x71ce0  5      OPC=movl_r32_imm32   
  retq                             #  162   0x71ce5  1      OPC=retq             
.L_71ce6:                          #        0x71ce6  0      OPC=<label>          
  movl $0x0, %eax                  #  163   0x71ce6  5      OPC=movl_r32_imm32   
  retq                             #  164   0x71ceb  1      OPC=retq             
.L_71cec:                          #        0x71cec  0      OPC=<label>          
  movl $0x0, %eax                  #  165   0x71cec  5      OPC=movl_r32_imm32   
  retq                             #  166   0x71cf1  1      OPC=retq             
.L_71cf2:                          #        0x71cf2  0      OPC=<label>          
  movl $0x0, %eax                  #  167   0x71cf2  5      OPC=movl_r32_imm32   
  retq                             #  168   0x71cf7  1      OPC=retq             
.L_71cf8:                          #        0x71cf8  0      OPC=<label>          
  movl $0x0, %eax                  #  169   0x71cf8  5      OPC=movl_r32_imm32   
  retq                             #  170   0x71cfd  1      OPC=retq             
.L_71cfe:                          #        0x71cfe  0      OPC=<label>          
  movq %r8, %rax                   #  171   0x71cfe  3      OPC=movq_r64_r64     
.L_71d01:                          #        0x71d01  0      OPC=<label>          
  retq                             #  172   0x71d01  1      OPC=retq             
  nop                              #  173   0x71d02  1      OPC=nop              
                                                                                 
.size mem2chunk_check, .-mem2chunk_check

