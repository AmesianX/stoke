  .text
  .globl parse_tilde
  .type parse_tilde, @function

#! file-offset 0xcea19
#! rip-offset  0xcea19
#! capacity    978 bytes

# Text                            #  Line  RIP      Bytes  Opcode              
.parse_tilde:                     #        0xcea19  0      OPC=<label>         
  pushq %rbp                      #  1     0xcea19  1      OPC=pushq_r64_1     
  movq %rsp, %rbp                 #  2     0xcea1a  3      OPC=movq_r64_r64    
  pushq %r15                      #  3     0xcea1d  2      OPC=pushq_r64_1     
  pushq %r14                      #  4     0xcea1f  2      OPC=pushq_r64_1     
  pushq %r13                      #  5     0xcea21  2      OPC=pushq_r64_1     
  pushq %r12                      #  6     0xcea23  2      OPC=pushq_r64_1     
  pushq %rbx                      #  7     0xcea25  1      OPC=pushq_r64_1     
  subq $0x78, %rsp                #  8     0xcea26  4      OPC=subq_r64_imm8   
  movq %rdi, -0x78(%rbp)          #  9     0xcea2a  4      OPC=movq_m64_r64    
  movq %rsi, -0x88(%rbp)          #  10    0xcea2e  7      OPC=movq_m64_r64    
  movq %rdx, -0x90(%rbp)          #  11    0xcea35  7      OPC=movq_m64_r64    
  movq %rcx, %rbx                 #  12    0xcea3c  3      OPC=movq_r64_r64    
  movq %r8, -0x80(%rbp)           #  13    0xcea3f  4      OPC=movq_m64_r64    
  movq (%rsi), %rax               #  14    0xcea43  3      OPC=movq_r64_m64    
  testq %rax, %rax                #  15    0xcea46  3      OPC=testq_r64_r64   
  je .L_ceaaf                     #  16    0xcea49  2      OPC=je_label        
  movq (%rdi), %r12               #  17    0xcea4b  3      OPC=movq_r64_m64    
  movzbl -0x1(%r12,%rax,1), %eax  #  18    0xcea4e  6      OPC=movzbl_r32_m8   
  testq %r9, %r9                  #  19    0xcea54  3      OPC=testq_r64_r64   
  setne %r13b                     #  20    0xcea57  4      OPC=setne_r8        
  cmpb $0x3d, %al                 #  21    0xcea5b  2      OPC=cmpb_al_imm8    
  jne .L_cea64                    #  22    0xcea5d  2      OPC=jne_label       
  testb %r13b, %r13b              #  23    0xcea5f  3      OPC=testb_r8_r8     
  je .L_ceaaf                     #  24    0xcea62  2      OPC=je_label        
.L_cea64:                         #        0xcea64  0      OPC=<label>         
  cmpb $0x3a, %al                 #  25    0xcea64  2      OPC=cmpb_al_imm8    
  jne .L_cea7f                    #  26    0xcea66  2      OPC=jne_label       
  movl $0x3d, %esi                #  27    0xcea68  5      OPC=movl_r32_imm32  
  movq %r12, %rdi                 #  28    0xcea6d  3      OPC=movq_r64_r64    
  callq .__GI_strchr              #  29    0xcea70  5      OPC=callq_label     
  testq %rax, %rax                #  30    0xcea75  3      OPC=testq_r64_r64   
  je .L_cea7f                     #  31    0xcea78  2      OPC=je_label        
  testb %r13b, %r13b              #  32    0xcea7a  3      OPC=testb_r8_r8     
  je .L_ceaaf                     #  33    0xcea7d  2      OPC=je_label        
.L_cea7f:                         #        0xcea7f  0      OPC=<label>         
  movl $0x7e, %ecx                #  34    0xcea7f  5      OPC=movl_r32_imm32  
  movq -0x90(%rbp), %rdx          #  35    0xcea84  7      OPC=movq_r64_m64    
  movq -0x88(%rbp), %rsi          #  36    0xcea8b  7      OPC=movq_r64_m64    
  movq %r12, %rdi                 #  37    0xcea92  3      OPC=movq_r64_r64    
  callq .w_addchar                #  38    0xcea95  5      OPC=callq_label     
  movq -0x78(%rbp), %rdi          #  39    0xcea9a  4      OPC=movq_r64_m64    
  movq %rax, (%rdi)               #  40    0xcea9e  3      OPC=movq_m64_r64    
  testq %rax, %rax                #  41    0xceaa1  3      OPC=testq_r64_r64   
  sete %al                        #  42    0xceaa4  3      OPC=sete_r8         
  movzbl %al, %eax                #  43    0xceaa7  3      OPC=movzbl_r32_r8   
  jmpq .L_ceddc                   #  44    0xceaaa  5      OPC=jmpq_label_1    
.L_ceaaf:                         #        0xceaaf  0      OPC=<label>         
  movq -0x80(%rbp), %rax          #  45    0xceaaf  4      OPC=movq_r64_m64    
  movq (%rax), %rsi               #  46    0xceab3  3      OPC=movq_r64_m64    
  leaq 0x1(%rsi), %rdi            #  47    0xceab6  4      OPC=leaq_r64_m16    
  leaq (%rbx,%rdi,1), %r12        #  48    0xceaba  4      OPC=leaq_r64_m16    
  movzbl (%r12), %eax             #  49    0xceabe  5      OPC=movzbl_r32_m8   
  testb $0xdf, %al                #  50    0xceac3  3      OPC=testb_r8_imm8   
  je .L_ceb45                     #  51    0xceac6  2      OPC=je_label        
  cmpb $0x2f, %al                 #  52    0xceac8  2      OPC=cmpb_al_imm8    
  sete %cl                        #  53    0xceaca  3      OPC=sete_r8         
  cmpb $0x3a, %al                 #  54    0xceacd  2      OPC=cmpb_al_imm8    
  sete %dl                        #  55    0xceacf  3      OPC=sete_r8         
  orb %dl, %cl                    #  56    0xcead2  2      OPC=orb_r8_r8       
  jne .L_ceb45                    #  57    0xcead4  2      OPC=jne_label       
  cmpb $0x9, %al                  #  58    0xcead6  2      OPC=cmpb_al_imm8    
  je .L_ceb45                     #  59    0xcead8  2      OPC=je_label        
  cmpb $0x5c, %al                 #  60    0xceada  2      OPC=cmpb_al_imm8    
  je .L_ceaff                     #  61    0xceadc  2      OPC=je_label        
  movq %rdi, %r13                 #  62    0xceade  3      OPC=movq_r64_r64    
  jmpq .L_ceb2f                   #  63    0xceae1  2      OPC=jmpq_label      
.L_ceae2:                         #        0xceae3  0      OPC=<label>         
  cmpb $0x2f, %al                 #  64    0xceae3  2      OPC=cmpb_al_imm8    
  sete %cl                        #  65    0xceae5  3      OPC=sete_r8         
  cmpb $0x3a, %al                 #  66    0xceae8  2      OPC=cmpb_al_imm8    
  sete %dl                        #  67    0xceaea  3      OPC=sete_r8         
  orl %ecx, %edx                  #  68    0xceaed  2      OPC=orl_r32_r32     
  cmpb $0x20, %al                 #  69    0xceaef  2      OPC=cmpb_al_imm8    
  sete %cl                        #  70    0xceaf1  3      OPC=sete_r8         
  orb %cl, %dl                    #  71    0xceaf4  2      OPC=orb_r8_r8       
  jne .L_ceb3c                    #  72    0xceaf6  2      OPC=jne_label       
  cmpb $0x9, %al                  #  73    0xceaf8  2      OPC=cmpb_al_imm8    
  je .L_ceb3c                     #  74    0xceafa  2      OPC=je_label        
  cmpb $0x5c, %al                 #  75    0xceafc  2      OPC=cmpb_al_imm8    
  jne .L_ceb2f                    #  76    0xceafe  2      OPC=jne_label       
.L_ceaff:                         #        0xceb00  0      OPC=<label>         
  movl $0x7e, %ecx                #  77    0xceb00  5      OPC=movl_r32_imm32  
  movq -0x90(%rbp), %rdx          #  78    0xceb05  7      OPC=movq_r64_m64    
  movq -0x88(%rbp), %rsi          #  79    0xceb0c  7      OPC=movq_r64_m64    
  movq -0x78(%rbp), %rbx          #  80    0xceb13  4      OPC=movq_r64_m64    
  movq (%rbx), %rdi               #  81    0xceb17  3      OPC=movq_r64_m64    
  callq .w_addchar                #  82    0xceb1a  5      OPC=callq_label     
  movq %rax, (%rbx)               #  83    0xceb1f  3      OPC=movq_m64_r64    
  testq %rax, %rax                #  84    0xceb22  3      OPC=testq_r64_r64   
  sete %al                        #  85    0xceb25  3      OPC=sete_r8         
  movzbl %al, %eax                #  86    0xceb28  3      OPC=movzbl_r32_r8   
  jmpq .L_ceddc                   #  87    0xceb2b  5      OPC=jmpq_label_1    
.L_ceb2f:                         #        0xceb30  0      OPC=<label>         
  addq $0x1, %r13                 #  88    0xceb30  4      OPC=addq_r64_imm8   
  movzbl (%rbx,%r13,1), %eax      #  89    0xceb34  5      OPC=movzbl_r32_m8   
  testb %al, %al                  #  90    0xceb39  2      OPC=testb_r8_r8     
  jne .L_ceae2                    #  91    0xceb3b  2      OPC=jne_label       
.L_ceb3c:                         #        0xceb3d  0      OPC=<label>         
  cmpq %rdi, %r13                 #  92    0xceb3d  3      OPC=cmpq_r64_r64    
  jne .L_cec7c                    #  93    0xceb40  6      OPC=jne_label_1     
.L_ceb45:                         #        0xceb46  0      OPC=<label>         
  leaq 0x8a74f(%rip), %rdi        #  94    0xceb46  7      OPC=leaq_r64_m16    
  callq .getenv                   #  95    0xceb4d  5      OPC=callq_label     
  testq %rax, %rax                #  96    0xceb52  3      OPC=testq_r64_r64   
  je .L_ceb84                     #  97    0xceb55  2      OPC=je_label        
  movq %rax, %rcx                 #  98    0xceb57  3      OPC=movq_r64_r64    
  movq -0x90(%rbp), %rdx          #  99    0xceb5a  7      OPC=movq_r64_m64    
  movq -0x88(%rbp), %rsi          #  100   0xceb61  7      OPC=movq_r64_m64    
  movq -0x78(%rbp), %rbx          #  101   0xceb68  4      OPC=movq_r64_m64    
  movq (%rbx), %rdi               #  102   0xceb6c  3      OPC=movq_r64_m64    
  callq .w_addstr                 #  103   0xceb6f  5      OPC=callq_label     
  movq %rax, (%rbx)               #  104   0xceb74  3      OPC=movq_m64_r64    
  testq %rax, %rax                #  105   0xceb77  3      OPC=testq_r64_r64   
  jne .L_cedce                    #  106   0xceb7a  6      OPC=jne_label_1     
  jmpq .L_cec72                   #  107   0xceb80  5      OPC=jmpq_label_1    
.L_ceb84:                         #        0xceb85  0      OPC=<label>         
  callq .getuid                   #  108   0xceb85  5      OPC=callq_label     
  movl %eax, %r15d                #  109   0xceb8a  3      OPC=movl_r32_r32    
  subq $0x400, %rsp               #  110   0xceb8d  7      OPC=subq_r64_imm32  
  leaq 0xf(%rsp), %r12            #  111   0xceb94  5      OPC=leaq_r64_m16    
  andq $0xf0, %r12                #  112   0xceb99  4      OPC=andq_r64_imm8   
  movl $0x3e8, %ebx               #  113   0xceb9d  5      OPC=movl_r32_imm32  
  leaq -0x68(%rbp), %r13          #  114   0xceba2  4      OPC=leaq_r64_m16    
  leaq -0x60(%rbp), %r14          #  115   0xceba6  4      OPC=leaq_r64_m16    
  jmpq .L_cebe8                   #  116   0xcebaa  2      OPC=jmpq_label      
.L_cebab:                         #        0xcebac  0      OPC=<label>         
  leal 0x3f7(%rbx), %ecx          #  117   0xcebac  6      OPC=leal_r32_m16    
  andl $0xfffffff0, %ecx          #  118   0xcebb2  6      OPC=andl_r32_imm32  
  nop                             #  119   0xcebb8  1      OPC=nop             
  nop                             #  120   0xcebb9  1      OPC=nop             
  nop                             #  121   0xcebba  1      OPC=nop             
  movslq %ecx, %rsi               #  122   0xcebbb  3      OPC=movslq_r64_r32  
  leaq 0x1e(%rsi), %rax           #  123   0xcebbe  4      OPC=leaq_r64_m16    
  movl $0x10, %edi                #  124   0xcebc2  5      OPC=movl_r32_imm32  
  movl $0x0, %edx                 #  125   0xcebc7  5      OPC=movl_r32_imm32  
  divq %rdi                       #  126   0xcebcc  3      OPC=divq_r64        
  shlq $0x4, %rax                 #  127   0xcebcf  4      OPC=shlq_r64_imm8   
  subq %rax, %rsp                 #  128   0xcebd3  3      OPC=subq_r64_r64    
  leaq 0xf(%rsp), %rax            #  129   0xcebd6  5      OPC=leaq_r64_m16    
  andq $0xf0, %rax                #  130   0xcebdb  4      OPC=andq_r64_imm8   
  addq %rax, %rsi                 #  131   0xcebdf  3      OPC=addq_r64_r64    
  addl %ecx, %ebx                 #  132   0xcebe2  2      OPC=addl_r32_r32    
  cmpq %rsi, %r12                 #  133   0xcebe4  3      OPC=cmpq_r64_r64    
  cmovel %ebx, %ecx               #  134   0xcebe7  3      OPC=cmovel_r32_r32  
  movq %rax, %r12                 #  135   0xcebea  3      OPC=movq_r64_r64    
  movl %ecx, %ebx                 #  136   0xcebed  2      OPC=movl_r32_r32    
.L_cebe8:                         #        0xcebef  0      OPC=<label>         
  movslq %ebx, %rcx               #  137   0xcebef  3      OPC=movslq_r64_r32  
  movq %r13, %r8                  #  138   0xcebf2  3      OPC=movq_r64_r64    
  movq %r12, %rdx                 #  139   0xcebf5  3      OPC=movq_r64_r64    
  movq %r14, %rsi                 #  140   0xcebf8  3      OPC=movq_r64_r64    
  movl %r15d, %edi                #  141   0xcebfb  3      OPC=movl_r32_r32    
  callq .getpwuid_r__GLIBC_2_2_5  #  142   0xcebfe  5      OPC=callq_label     
  testl %eax, %eax                #  143   0xcec03  2      OPC=testl_r32_r32   
  je .L_cec0f                     #  144   0xcec05  2      OPC=je_label        
  movq 0x2bc279(%rip), %rax       #  145   0xcec07  7      OPC=movq_r64_m64    
  cmpl $0x22, (%rax)              #  146   0xcec0e  3      OPC=cmpl_m32_imm8   
  nop                             #  147   0xcec11  1      OPC=nop             
  je .L_cebab                     #  148   0xcec12  2      OPC=je_label        
  jmpq .L_cec47                   #  149   0xcec14  2      OPC=jmpq_label      
.L_cec0f:                         #        0xcec16  0      OPC=<label>         
  cmpq $0x0, -0x68(%rbp)          #  150   0xcec16  5      OPC=cmpq_m64_imm8   
  je .L_cec47                     #  151   0xcec1b  2      OPC=je_label        
  movq -0x40(%rbp), %rcx          #  152   0xcec1d  4      OPC=movq_r64_m64    
  testq %rcx, %rcx                #  153   0xcec21  3      OPC=testq_r64_r64   
  je .L_cec47                     #  154   0xcec24  2      OPC=je_label        
  movq -0x90(%rbp), %rdx          #  155   0xcec26  7      OPC=movq_r64_m64    
  movq -0x88(%rbp), %rsi          #  156   0xcec2d  7      OPC=movq_r64_m64    
  movq -0x78(%rbp), %rbx          #  157   0xcec34  4      OPC=movq_r64_m64    
  movq (%rbx), %rdi               #  158   0xcec38  3      OPC=movq_r64_m64    
  callq .w_addstr                 #  159   0xcec3b  5      OPC=callq_label     
  movq %rax, (%rbx)               #  160   0xcec40  3      OPC=movq_m64_r64    
  testq %rax, %rax                #  161   0xcec43  3      OPC=testq_r64_r64   
  jne .L_cedce                    #  162   0xcec46  6      OPC=jne_label_1     
  jmpq .L_cec72                   #  163   0xcec4c  2      OPC=jmpq_label      
.L_cec47:                         #        0xcec4e  0      OPC=<label>         
  movl $0x7e, %ecx                #  164   0xcec4e  5      OPC=movl_r32_imm32  
  movq -0x90(%rbp), %rdx          #  165   0xcec53  7      OPC=movq_r64_m64    
  movq -0x88(%rbp), %rsi          #  166   0xcec5a  7      OPC=movq_r64_m64    
  movq -0x78(%rbp), %rbx          #  167   0xcec61  4      OPC=movq_r64_m64    
  movq (%rbx), %rdi               #  168   0xcec65  3      OPC=movq_r64_m64    
  callq .w_addchar                #  169   0xcec68  5      OPC=callq_label     
  movq %rax, (%rbx)               #  170   0xcec6d  3      OPC=movq_m64_r64    
  testq %rax, %rax                #  171   0xcec70  3      OPC=testq_r64_r64   
  jne .L_cedce                    #  172   0xcec73  6      OPC=jne_label_1     
.L_cec72:                         #        0xcec79  0      OPC=<label>         
  movl $0x1, %eax                 #  173   0xcec79  5      OPC=movl_r32_imm32  
  jmpq .L_ceddc                   #  174   0xcec7e  5      OPC=jmpq_label_1    
.L_cec7c:                         #        0xcec83  0      OPC=<label>         
  notq %rsi                       #  175   0xcec83  3      OPC=notq_r64        
  addq %r13, %rsi                 #  176   0xcec86  3      OPC=addq_r64_r64    
  movq %r12, %rdi                 #  177   0xcec89  3      OPC=movq_r64_r64    
  callq .strnlen                  #  178   0xcec8c  5      OPC=callq_label     
  leaq 0x1f(%rax), %rdx           #  179   0xcec91  4      OPC=leaq_r64_m16    
  andq $0xf0, %rdx                #  180   0xcec95  4      OPC=andq_r64_imm8   
  subq %rdx, %rsp                 #  181   0xcec99  3      OPC=subq_r64_r64    
  leaq 0xf(%rsp), %rdi            #  182   0xcec9c  5      OPC=leaq_r64_m16    
  andq $0xf0, %rdi                #  183   0xceca1  4      OPC=andq_r64_imm8   
  movb $0x0, (%rdi,%rax,1)        #  184   0xceca5  4      OPC=movb_m8_imm8    
  movq %rax, %rdx                 #  185   0xceca9  3      OPC=movq_r64_r64    
  movq %r12, %rsi                 #  186   0xcecac  3      OPC=movq_r64_r64    
  callq .__GI_memcpy              #  187   0xcecaf  5      OPC=callq_label     
  movq %rax, -0xa0(%rbp)          #  188   0xcecb4  7      OPC=movq_m64_r64    
  subq $0x400, %rsp               #  189   0xcecbb  7      OPC=subq_r64_imm32  
  leaq 0xf(%rsp), %r12            #  190   0xcecc2  5      OPC=leaq_r64_m16    
  andq $0xf0, %r12                #  191   0xcecc7  4      OPC=andq_r64_imm8   
  movl $0x3e8, %ebx               #  192   0xceccb  5      OPC=movl_r32_imm32  
  leaq -0x68(%rbp), %r15          #  193   0xcecd0  4      OPC=leaq_r64_m16    
  leaq -0x60(%rbp), %r14          #  194   0xcecd4  4      OPC=leaq_r64_m16    
  movq %r13, -0x98(%rbp)          #  195   0xcecd8  7      OPC=movq_m64_r64    
  movq %rax, %r13                 #  196   0xcecdf  3      OPC=movq_r64_r64    
  jmpq .L_ced1a                   #  197   0xcece2  2      OPC=jmpq_label      
.L_cecdd:                         #        0xcece4  0      OPC=<label>         
  leal 0x3f7(%rbx), %ecx          #  198   0xcece4  6      OPC=leal_r32_m16    
  andl $0xfffffff0, %ecx          #  199   0xcecea  6      OPC=andl_r32_imm32  
  nop                             #  200   0xcecf0  1      OPC=nop             
  nop                             #  201   0xcecf1  1      OPC=nop             
  nop                             #  202   0xcecf2  1      OPC=nop             
  movslq %ecx, %rsi               #  203   0xcecf3  3      OPC=movslq_r64_r32  
  leaq 0x1e(%rsi), %rax           #  204   0xcecf6  4      OPC=leaq_r64_m16    
  movl $0x10, %edi                #  205   0xcecfa  5      OPC=movl_r32_imm32  
  movl $0x0, %edx                 #  206   0xcecff  5      OPC=movl_r32_imm32  
  divq %rdi                       #  207   0xced04  3      OPC=divq_r64        
  shlq $0x4, %rax                 #  208   0xced07  4      OPC=shlq_r64_imm8   
  subq %rax, %rsp                 #  209   0xced0b  3      OPC=subq_r64_r64    
  leaq 0xf(%rsp), %rax            #  210   0xced0e  5      OPC=leaq_r64_m16    
  andq $0xf0, %rax                #  211   0xced13  4      OPC=andq_r64_imm8   
  addq %rax, %rsi                 #  212   0xced17  3      OPC=addq_r64_r64    
  addl %ecx, %ebx                 #  213   0xced1a  2      OPC=addl_r32_r32    
  cmpq %rsi, %r12                 #  214   0xced1c  3      OPC=cmpq_r64_r64    
  cmovel %ebx, %ecx               #  215   0xced1f  3      OPC=cmovel_r32_r32  
  movq %rax, %r12                 #  216   0xced22  3      OPC=movq_r64_r64    
  movl %ecx, %ebx                 #  217   0xced25  2      OPC=movl_r32_r32    
.L_ced1a:                         #        0xced27  0      OPC=<label>         
  movslq %ebx, %rcx               #  218   0xced27  3      OPC=movslq_r64_r32  
  movq %r15, %r8                  #  219   0xced2a  3      OPC=movq_r64_r64    
  movq %r12, %rdx                 #  220   0xced2d  3      OPC=movq_r64_r64    
  movq %r14, %rsi                 #  221   0xced30  3      OPC=movq_r64_r64    
  movq %r13, %rdi                 #  222   0xced33  3      OPC=movq_r64_r64    
  callq .getpwnam_r__GLIBC_2_2_5  #  223   0xced36  5      OPC=callq_label     
  testl %eax, %eax                #  224   0xced3b  2      OPC=testl_r32_r32   
  je .L_ced48                     #  225   0xced3d  2      OPC=je_label        
  movq 0x2bc147(%rip), %rax       #  226   0xced3f  7      OPC=movq_r64_m64    
  cmpl $0x22, (%rax)              #  227   0xced46  3      OPC=cmpl_m32_imm8   
  nop                             #  228   0xced49  1      OPC=nop             
  je .L_cecdd                     #  229   0xced4a  2      OPC=je_label        
  movq -0x98(%rbp), %r13          #  230   0xced4c  7      OPC=movq_r64_m64    
  jmpq .L_ced7e                   #  231   0xced53  2      OPC=jmpq_label      
.L_ced48:                         #        0xced55  0      OPC=<label>         
  movq -0x98(%rbp), %r13          #  232   0xced55  7      OPC=movq_r64_m64    
  cmpq $0x0, -0x68(%rbp)          #  233   0xced5c  5      OPC=cmpq_m64_imm8   
  je .L_ced7e                     #  234   0xced61  2      OPC=je_label        
  movq -0x40(%rbp), %rcx          #  235   0xced63  4      OPC=movq_r64_m64    
  testq %rcx, %rcx                #  236   0xced67  3      OPC=testq_r64_r64   
  je .L_ced7e                     #  237   0xced6a  2      OPC=je_label        
  movq -0x90(%rbp), %rdx          #  238   0xced6c  7      OPC=movq_r64_m64    
  movq -0x88(%rbp), %rsi          #  239   0xced73  7      OPC=movq_r64_m64    
  movq -0x78(%rbp), %rbx          #  240   0xced7a  4      OPC=movq_r64_m64    
  movq (%rbx), %rdi               #  241   0xced7e  3      OPC=movq_r64_m64    
  callq .w_addstr                 #  242   0xced81  5      OPC=callq_label     
  movq %rax, (%rbx)               #  243   0xced86  3      OPC=movq_m64_r64    
  jmpq .L_cedc3                   #  244   0xced89  2      OPC=jmpq_label      
.L_ced7e:                         #        0xced8b  0      OPC=<label>         
  movl $0x7e, %ecx                #  245   0xced8b  5      OPC=movl_r32_imm32  
  movq -0x90(%rbp), %r15          #  246   0xced90  7      OPC=movq_r64_m64    
  movq %r15, %rdx                 #  247   0xced97  3      OPC=movq_r64_r64    
  movq -0x88(%rbp), %r14          #  248   0xced9a  7      OPC=movq_r64_m64    
  movq %r14, %rsi                 #  249   0xceda1  3      OPC=movq_r64_r64    
  movq -0x78(%rbp), %rbx          #  250   0xceda4  4      OPC=movq_r64_m64    
  movq (%rbx), %rdi               #  251   0xceda8  3      OPC=movq_r64_m64    
  callq .w_addchar                #  252   0xcedab  5      OPC=callq_label     
  movq %rax, (%rbx)               #  253   0xcedb0  3      OPC=movq_m64_r64    
  testq %rax, %rax                #  254   0xcedb3  3      OPC=testq_r64_r64   
  je .L_cedc3                     #  255   0xcedb6  2      OPC=je_label        
  movq -0xa0(%rbp), %rcx          #  256   0xcedb8  7      OPC=movq_r64_m64    
  movq %r15, %rdx                 #  257   0xcedbf  3      OPC=movq_r64_r64    
  movq %r14, %rsi                 #  258   0xcedc2  3      OPC=movq_r64_r64    
  movq %rax, %rdi                 #  259   0xcedc5  3      OPC=movq_r64_r64    
  callq .w_addstr                 #  260   0xcedc8  5      OPC=callq_label     
  movq %rax, (%rbx)               #  261   0xcedcd  3      OPC=movq_m64_r64    
.L_cedc3:                         #        0xcedd0  0      OPC=<label>         
  subq $0x1, %r13                 #  262   0xcedd0  4      OPC=subq_r64_imm8   
  movq -0x80(%rbp), %rax          #  263   0xcedd4  4      OPC=movq_r64_m64    
  movq %r13, (%rax)               #  264   0xcedd8  3      OPC=movq_m64_r64    
.L_cedce:                         #        0xceddb  0      OPC=<label>         
  movq -0x78(%rbp), %rax          #  265   0xceddb  4      OPC=movq_r64_m64    
  cmpq $0x0, (%rax)               #  266   0xceddf  4      OPC=cmpq_m64_imm8   
  sete %al                        #  267   0xcede3  3      OPC=sete_r8         
  movzbl %al, %eax                #  268   0xcede6  3      OPC=movzbl_r32_r8   
.L_ceddc:                         #        0xcede9  0      OPC=<label>         
  leaq -0x28(%rbp), %rsp          #  269   0xcede9  4      OPC=leaq_r64_m16    
  popq %rbx                       #  270   0xceded  1      OPC=popq_r64_1      
  popq %r12                       #  271   0xcedee  2      OPC=popq_r64_1      
  popq %r13                       #  272   0xcedf0  2      OPC=popq_r64_1      
  popq %r14                       #  273   0xcedf2  2      OPC=popq_r64_1      
  popq %r15                       #  274   0xcedf4  2      OPC=popq_r64_1      
  popq %rbp                       #  275   0xcedf6  1      OPC=popq_r64_1      
  retq                            #  276   0xcedf7  1      OPC=retq            
                                                                               
.size parse_tilde, .-parse_tilde

