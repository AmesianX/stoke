  .text
  .globl __vsyslog_chk
  .type __vsyslog_chk, @function

#! file-offset 0xda7c6
#! rip-offset  0xda7c6
#! capacity    1266 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
.__vsyslog_chk:                     #        0xda7c6  0      OPC=<label>           
  pushq %r15                        #  1     0xda7c6  2      OPC=pushq_r64_1       
  pushq %r14                        #  2     0xda7c8  2      OPC=pushq_r64_1       
  pushq %r13                        #  3     0xda7ca  2      OPC=pushq_r64_1       
  pushq %r12                        #  4     0xda7cc  2      OPC=pushq_r64_1       
  pushq %rbp                        #  5     0xda7ce  1      OPC=pushq_r64_1       
  pushq %rbx                        #  6     0xda7cf  1      OPC=pushq_r64_1       
  subq $0xb8, %rsp                  #  7     0xda7d0  7      OPC=subq_r64_imm32    
  movl %edi, %ebp                   #  8     0xda7d7  2      OPC=movl_r32_r32      
  movl %esi, %r12d                  #  9     0xda7d9  3      OPC=movl_r32_r32      
  movq %rdx, %r14                   #  10    0xda7dc  3      OPC=movq_r64_r64      
  movq %rcx, %r15                   #  11    0xda7df  3      OPC=movq_r64_r64      
  movq $0x0, 0x60(%rsp)             #  12    0xda7e2  9      OPC=movq_m64_imm32    
  movq $0x0, 0x58(%rsp)             #  13    0xda7eb  9      OPC=movq_m64_imm32    
  movq 0x2b0685(%rip), %rax         #  14    0xda7f4  7      OPC=movq_r64_m64      
  movl (%rax), %r13d                #  15    0xda7fb  3      OPC=movl_r32_m32      
  nop                               #  16    0xda7fe  1      OPC=nop               
  testl $0xfffffc00, %edi           #  17    0xda7ff  6      OPC=testl_r32_imm32   
  je .L_da825                       #  18    0xda805  2      OPC=je_label          
  movl %edi, %edx                   #  19    0xda807  2      OPC=movl_r32_r32      
  leaq 0x82c40(%rip), %rsi          #  20    0xda809  7      OPC=leaq_r64_m16      
  movl $0x23, %edi                  #  21    0xda810  5      OPC=movl_r32_imm32    
  movl $0x0, %eax                   #  22    0xda815  5      OPC=movl_r32_imm32    
  callq .syslog                     #  23    0xda81a  5      OPC=callq_label       
  andl $0x3ff, %ebp                 #  24    0xda81f  6      OPC=andl_r32_imm32    
.L_da825:                           #        0xda825  0      OPC=<label>           
  movl %ebp, %eax                   #  25    0xda825  2      OPC=movl_r32_r32      
  andl $0x7, %eax                   #  26    0xda827  3      OPC=andl_r32_imm8     
  movl 0x2b0a80(%rip), %edx         #  27    0xda82a  6      OPC=movl_r32_m32      
  btl %eax, %edx                    #  28    0xda830  3      OPC=btl_r32_r32       
  jae .L_daca6                      #  29    0xda833  6      OPC=jae_label_1       
  movl %ebp, %edx                   #  30    0xda839  2      OPC=movl_r32_r32      
  andl $0x3f8, %edx                 #  31    0xda83b  6      OPC=andl_r32_imm32    
  movl %ebp, %eax                   #  32    0xda841  2      OPC=movl_r32_r32      
  orl 0x2b0a6b(%rip), %eax          #  33    0xda843  6      OPC=orl_r32_m32       
  testl %edx, %edx                  #  34    0xda849  2      OPC=testl_r32_r32     
  cmovel %eax, %ebp                 #  35    0xda84b  3      OPC=cmovel_r32_r32    
  leaq 0x58(%rsp), %rsi             #  36    0xda84e  5      OPC=leaq_r64_m16      
  leaq 0x60(%rsp), %rdi             #  37    0xda853  5      OPC=leaq_r64_m16      
  callq .open_memstream             #  38    0xda858  5      OPC=callq_label       
  movq %rax, %rbx                   #  39    0xda85d  3      OPC=movq_r64_r64      
  testq %rax, %rax                  #  40    0xda860  3      OPC=testq_r64_r64     
  jne .L_da8fe                      #  41    0xda863  6      OPC=jne_label_1       
  movq $0x6d20666f2074756f, %rax    #  42    0xda869  10     OPC=movq_r64_imm64    
  movq %rax, 0x30(%rsp)             #  43    0xda873  5      OPC=movq_m64_r64      
  movq $0x5b2079726f6d65, %rax      #  44    0xda878  10     OPC=movq_r64_imm64    
  movq %rax, 0x38(%rsp)             #  45    0xda882  5      OPC=movq_m64_r64      
  callq .__getpid                   #  46    0xda887  5      OPC=callq_label       
  movl %eax, %ecx                   #  47    0xda88c  2      OPC=movl_r32_r32      
  leaq 0xc(%rsp), %rsi              #  48    0xda88e  5      OPC=leaq_r64_m16      
  movl $0x66666667, %edi            #  49    0xda893  5      OPC=movl_r32_imm32    
.L_da898:                           #        0xda898  0      OPC=<label>           
  subq $0x1, %rsi                   #  50    0xda898  4      OPC=subq_r64_imm8     
  movl %ecx, %eax                   #  51    0xda89c  2      OPC=movl_r32_r32      
  imull %edi                        #  52    0xda89e  2      OPC=imull_r32         
  sarl $0x2, %edx                   #  53    0xda8a0  3      OPC=sarl_r32_imm8     
  movl %ecx, %eax                   #  54    0xda8a3  2      OPC=movl_r32_r32      
  sarl $0x1f, %eax                  #  55    0xda8a5  3      OPC=sarl_r32_imm8     
  subl %eax, %edx                   #  56    0xda8a8  2      OPC=subl_r32_r32      
  leal (%rdx,%rdx,4), %eax          #  57    0xda8aa  3      OPC=leal_r32_m16      
  addl %eax, %eax                   #  58    0xda8ad  2      OPC=addl_r32_r32      
  subl %eax, %ecx                   #  59    0xda8af  2      OPC=subl_r32_r32      
  addl $0x30, %ecx                  #  60    0xda8b1  3      OPC=addl_r32_imm8     
  movb %cl, (%rsi)                  #  61    0xda8b4  2      OPC=movb_m8_r8        
  movl %edx, %ecx                   #  62    0xda8b6  2      OPC=movl_r32_r32      
  testl %edx, %edx                  #  63    0xda8b8  2      OPC=testl_r32_r32     
  jne .L_da898                      #  64    0xda8ba  2      OPC=jne_label         
  leaq 0xc(%rsp), %rax              #  65    0xda8bc  5      OPC=leaq_r64_m16      
  subq %rsi, %rax                   #  66    0xda8c1  3      OPC=subq_r64_r64      
  movq %rax, %rbx                   #  67    0xda8c4  3      OPC=movq_r64_r64      
  leaq 0x30(%rsp), %rbp             #  68    0xda8c7  5      OPC=leaq_r64_m16      
  leaq 0x3f(%rsp), %rdi             #  69    0xda8cc  5      OPC=leaq_r64_m16      
  movq %rax, %rdx                   #  70    0xda8d1  3      OPC=movq_r64_r64      
  callq .__GI_memcpy                #  71    0xda8d4  5      OPC=callq_label       
  addq %rbx, %rax                   #  72    0xda8d9  3      OPC=addq_r64_r64      
  movb $0x5d, (%rax)                #  73    0xda8dc  3      OPC=movb_m8_imm8      
  movb $0x0, 0x1(%rax)              #  74    0xda8df  4      OPC=movb_m8_imm8      
  movq %rbp, 0x60(%rsp)             #  75    0xda8e3  5      OPC=movq_m64_r64      
  addq $0x1, %rax                   #  76    0xda8e8  4      OPC=addq_r64_imm8     
  subq %rbp, %rax                   #  77    0xda8ec  3      OPC=subq_r64_r64      
  movq %rax, 0x58(%rsp)             #  78    0xda8ef  5      OPC=movq_m64_r64      
  movl $0x0, %ebp                   #  79    0xda8f4  5      OPC=movl_r32_imm32    
  jmpq .L_daa42                     #  80    0xda8f9  5      OPC=jmpq_label_1      
.L_da8fe:                           #        0xda8fe  0      OPC=<label>           
  orl $0x8000, (%rax)               #  81    0xda8fe  6      OPC=orl_m32_imm32     
  movl %ebp, %edx                   #  82    0xda904  2      OPC=movl_r32_r32      
  leaq 0x7ef5e(%rip), %rsi          #  83    0xda906  7      OPC=leaq_r64_m16      
  movq %rax, %rdi                   #  84    0xda90d  3      OPC=movq_r64_r64      
  movl $0x0, %eax                   #  85    0xda910  5      OPC=movl_r32_imm32    
  callq .fprintf                    #  86    0xda915  5      OPC=callq_label       
  leaq 0x68(%rsp), %rbp             #  87    0xda91a  5      OPC=leaq_r64_m16      
  movq %rbp, %rdi                   #  88    0xda91f  3      OPC=movq_r64_r64      
  callq .L_1f8e0                    #  89    0xda922  5      OPC=callq_label       
  leaq 0x70(%rsp), %rsi             #  90    0xda927  5      OPC=leaq_r64_m16      
  movq %rbp, %rdi                   #  91    0xda92c  3      OPC=movq_r64_r64      
  callq .localtime_r                #  92    0xda92f  5      OPC=callq_label       
  movq 0x28(%rbx), %rdi             #  93    0xda934  4      OPC=movq_r64_m64      
  movq 0x30(%rbx), %rsi             #  94    0xda938  4      OPC=movq_r64_m64      
  subq %rdi, %rsi                   #  95    0xda93c  3      OPC=subq_r64_r64      
  leaq 0x2af37a(%rip), %r8          #  96    0xda93f  7      OPC=leaq_r64_m16      
  movq %rax, %rcx                   #  97    0xda946  3      OPC=movq_r64_r64      
  leaq 0x7ef20(%rip), %rdx          #  98    0xda949  7      OPC=leaq_r64_m16      
  callq .__strftime_l               #  99    0xda950  5      OPC=callq_label       
  addq %rax, 0x28(%rbx)             #  100   0xda955  4      OPC=addq_m64_r64      
  movq %rbx, %rdi                   #  101   0xda959  3      OPC=movq_r64_r64      
  callq ._IO_ftell                  #  102   0xda95c  5      OPC=callq_label       
  movq %rax, %rbp                   #  103   0xda961  3      OPC=movq_r64_r64      
  movq 0x2b3b8d(%rip), %rdi         #  104   0xda964  7      OPC=movq_r64_m64      
  testq %rdi, %rdi                  #  105   0xda96b  3      OPC=testq_r64_r64     
  jne .L_da98a                      #  106   0xda96e  2      OPC=jne_label         
  movq 0x2b0499(%rip), %rax         #  107   0xda970  7      OPC=movq_r64_m64      
  movq (%rax), %rdi                 #  108   0xda977  3      OPC=movq_r64_m64      
  movq %rdi, 0x2b3b77(%rip)         #  109   0xda97a  7      OPC=movq_m64_r64      
  testq %rdi, %rdi                  #  110   0xda981  3      OPC=testq_r64_r64     
  je .L_dac82                       #  111   0xda984  6      OPC=je_label_1        
.L_da98a:                           #        0xda98a  0      OPC=<label>           
  movq %rbx, %rsi                   #  112   0xda98a  3      OPC=movq_r64_r64      
  callq .fputs_unlocked             #  113   0xda98d  5      OPC=callq_label       
  testb $0x1, 0x2b3b67(%rip)        #  114   0xda992  7      OPC=testb_m8_imm8     
  je .L_da9b6                       #  115   0xda999  2      OPC=je_label          
.L_da99b:                           #        0xda99b  0      OPC=<label>           
  callq .__getpid                   #  116   0xda99b  5      OPC=callq_label       
  movl %eax, %edx                   #  117   0xda9a0  2      OPC=movl_r32_r32      
  leaq 0x7eed1(%rip), %rsi          #  118   0xda9a2  7      OPC=leaq_r64_m16      
  movq %rbx, %rdi                   #  119   0xda9a9  3      OPC=movq_r64_r64      
  movl $0x0, %eax                   #  120   0xda9ac  5      OPC=movl_r32_imm32    
  callq .fprintf                    #  121   0xda9b1  5      OPC=callq_label       
.L_da9b6:                           #        0xda9b6  0      OPC=<label>           
  cmpq $0x0, 0x2b3b3a(%rip)         #  122   0xda9b6  8      OPC=cmpq_m64_imm8     
  je .L_daa08                       #  123   0xda9be  2      OPC=je_label          
  movq 0x28(%rbx), %rax             #  124   0xda9c0  4      OPC=movq_r64_m64      
  cmpq 0x30(%rbx), %rax             #  125   0xda9c4  4      OPC=cmpq_r64_m64      
  jb .L_da9d9                       #  126   0xda9c8  2      OPC=jb_label          
  movl $0x3a, %esi                  #  127   0xda9ca  5      OPC=movl_r32_imm32    
  movq %rbx, %rdi                   #  128   0xda9cf  3      OPC=movq_r64_r64      
  callq .__overflow                 #  129   0xda9d2  5      OPC=callq_label       
  jmpq .L_da9e4                     #  130   0xda9d7  2      OPC=jmpq_label        
.L_da9d9:                           #        0xda9d9  0      OPC=<label>           
  leaq 0x1(%rax), %rdx              #  131   0xda9d9  4      OPC=leaq_r64_m16      
  movq %rdx, 0x28(%rbx)             #  132   0xda9dd  4      OPC=movq_m64_r64      
  movb $0x3a, (%rax)                #  133   0xda9e1  3      OPC=movb_m8_imm8      
.L_da9e4:                           #        0xda9e4  0      OPC=<label>           
  movq 0x28(%rbx), %rax             #  134   0xda9e4  4      OPC=movq_r64_m64      
  cmpq 0x30(%rbx), %rax             #  135   0xda9e8  4      OPC=cmpq_r64_m64      
  jb .L_da9fd                       #  136   0xda9ec  2      OPC=jb_label          
  movl $0x20, %esi                  #  137   0xda9ee  5      OPC=movl_r32_imm32    
  movq %rbx, %rdi                   #  138   0xda9f3  3      OPC=movq_r64_r64      
  callq .__overflow                 #  139   0xda9f6  5      OPC=callq_label       
  jmpq .L_daa08                     #  140   0xda9fb  2      OPC=jmpq_label        
.L_da9fd:                           #        0xda9fd  0      OPC=<label>           
  leaq 0x1(%rax), %rdx              #  141   0xda9fd  4      OPC=leaq_r64_m16      
  movq %rdx, 0x28(%rbx)             #  142   0xdaa01  4      OPC=movq_m64_r64      
  movb $0x20, (%rax)                #  143   0xdaa05  3      OPC=movb_m8_imm8      
.L_daa08:                           #        0xdaa08  0      OPC=<label>           
  movq 0x2b0471(%rip), %rax         #  144   0xdaa08  7      OPC=movq_r64_m64      
  movl %r13d, (%rax)                #  145   0xdaa0f  3      OPC=movl_m32_r32      
  nop                               #  146   0xdaa12  1      OPC=nop               
  cmpl $0xffffffff, %r12d           #  147   0xdaa13  7      OPC=cmpl_r32_imm32    
  nop                               #  148   0xdaa1a  1      OPC=nop               
  nop                               #  149   0xdaa1b  1      OPC=nop               
  nop                               #  150   0xdaa1c  1      OPC=nop               
  nop                               #  151   0xdaa1d  1      OPC=nop               
  jne .L_daa29                      #  152   0xdaa1e  2      OPC=jne_label         
  movq %r15, %rdx                   #  153   0xdaa20  3      OPC=movq_r64_r64      
  movq %r14, %rsi                   #  154   0xdaa23  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                   #  155   0xdaa26  3      OPC=movq_r64_r64      
  callq ._IO_vfprintf               #  156   0xdaa29  5      OPC=callq_label       
  jmpq .L_daa3a                     #  157   0xdaa2e  2      OPC=jmpq_label        
.L_daa29:                           #        0xdaa30  0      OPC=<label>           
  movq %r15, %rcx                   #  158   0xdaa30  3      OPC=movq_r64_r64      
  movq %r14, %rdx                   #  159   0xdaa33  3      OPC=movq_r64_r64      
  movl %r12d, %esi                  #  160   0xdaa36  3      OPC=movl_r32_r32      
  movq %rbx, %rdi                   #  161   0xdaa39  3      OPC=movq_r64_r64      
  callq .__vfprintf_chk             #  162   0xdaa3c  5      OPC=callq_label       
.L_daa3a:                           #        0xdaa41  0      OPC=<label>           
  movq %rbx, %rdi                   #  163   0xdaa41  3      OPC=movq_r64_r64      
  callq ._IO_fclose__GLIBC_2_2_5    #  164   0xdaa44  5      OPC=callq_label       
.L_daa42:                           #        0xdaa49  0      OPC=<label>           
  testb $0x20, 0x2b3ab7(%rip)       #  165   0xdaa49  7      OPC=testb_m8_imm8     
  je .L_daab6                       #  166   0xdaa50  2      OPC=je_label          
  movq 0x60(%rsp), %rax             #  167   0xdaa52  5      OPC=movq_r64_m64      
  leaq (%rax,%rbp,1), %rdx          #  168   0xdaa57  4      OPC=leaq_r64_m16      
  movq %rdx, (%rsp)                 #  169   0xdaa5b  4      OPC=movq_m64_r64      
  movq 0x58(%rsp), %rdx             #  170   0xdaa5f  5      OPC=movq_r64_m64      
  movq %rdx, %rcx                   #  171   0xdaa64  3      OPC=movq_r64_r64      
  subq %rbp, %rcx                   #  172   0xdaa67  3      OPC=subq_r64_r64      
  movq %rcx, 0x8(%rsp)              #  173   0xdaa6a  5      OPC=movq_m64_r64      
  cmpb $0xa, -0x1(%rax,%rdx,1)      #  174   0xdaa6f  5      OPC=cmpb_m8_imm8      
  je .L_daa8b                       #  175   0xdaa74  2      OPC=je_label          
  leaq 0x7c893(%rip), %rbx          #  176   0xdaa76  7      OPC=leaq_r64_m16      
  movq %rbx, 0x10(%rsp)             #  177   0xdaa7d  5      OPC=movq_m64_r64      
  movq $0x1, 0x18(%rsp)             #  178   0xdaa82  9      OPC=movq_m64_imm32    
  leaq 0x10(%rsp), %rdx             #  179   0xdaa8b  5      OPC=leaq_r64_m16      
  jmpq .L_daa8e                     #  180   0xdaa90  2      OPC=jmpq_label        
.L_daa8b:                           #        0xdaa92  0      OPC=<label>           
  movq %rsp, %rdx                   #  181   0xdaa92  3      OPC=movq_r64_r64      
.L_daa8e:                           #        0xdaa95  0      OPC=<label>           
  leaq 0x30(%rsp), %rcx             #  182   0xdaa95  5      OPC=leaq_r64_m16      
  cmpq %rcx, %rax                   #  183   0xdaa9a  3      OPC=cmpq_r64_r64      
  movl $0x0, %ebx                   #  184   0xdaa9d  5      OPC=movl_r32_imm32    
  cmovneq %rax, %rbx                #  185   0xdaaa2  4      OPC=cmovneq_r64_r64   
  movq %rsp, %rsi                   #  186   0xdaaa6  3      OPC=movq_r64_r64      
  subq %rsp, %rdx                   #  187   0xdaaa9  3      OPC=subq_r64_r64      
  sarq $0x4, %rdx                   #  188   0xdaaac  4      OPC=sarq_r64_imm8     
  addl $0x1, %edx                   #  189   0xdaab0  3      OPC=addl_r32_imm8     
  movl $0x2, %edi                   #  190   0xdaab3  5      OPC=movl_r32_imm32    
  callq .writev                     #  191   0xdaab8  5      OPC=callq_label       
.L_daab6:                           #        0xdaabd  0      OPC=<label>           
  movq 0x60(%rsp), %rax             #  192   0xdaabd  5      OPC=movq_r64_m64      
  movq %rax, 0x20(%rsp)             #  193   0xdaac2  5      OPC=movq_m64_r64      
  movq $0x0, 0x28(%rsp)             #  194   0xdaac7  9      OPC=movq_m64_imm32    
  movl $0x1, %esi                   #  195   0xdaad0  5      OPC=movl_r32_imm32    
  movl $0x0, %eax                   #  196   0xdaad5  5      OPC=movl_r32_imm32    
  cmpl $0x0, 0x2b6126(%rip)         #  197   0xdaada  7      OPC=cmpl_m32_imm8     
  je .L_daae8                       #  198   0xdaae1  2      OPC=je_label          
  lock                              #  199   0xdaae3  1      OPC=lock              
  cmpxchgl %esi, 0x2b3a0c(%rip)     #  200   0xdaae4  7      OPC=cmpxchgl_m32_r32  
  nop                               #  201   0xdaaeb  1      OPC=nop               
  jne .L_daaf1                      #  202   0xdaaec  2      OPC=jne_label         
  jmpq .L_dab0b                     #  203   0xdaaee  2      OPC=jmpq_label        
.L_daae8:                           #        0xdaaf0  0      OPC=<label>           
  cmpxchgl %esi, 0x2b3a01(%rip)     #  204   0xdaaf0  7      OPC=cmpxchgl_m32_r32  
  je .L_dab0b                       #  205   0xdaaf7  2      OPC=je_label          
.L_daaf1:                           #        0xdaaf9  0      OPC=<label>           
  leaq 0x2b39f8(%rip), %rdi         #  206   0xdaaf9  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  207   0xdab00  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  208   0xdab07  5      OPC=callq_label       
  addq $0x80, %rsp                  #  209   0xdab0c  7      OPC=addq_r64_imm32    
.L_dab0b:                           #        0xdab13  0      OPC=<label>           
  cmpl $0x0, 0x2b39f2(%rip)         #  210   0xdab13  7      OPC=cmpl_m32_imm8     
  jne .L_dac94                      #  211   0xdab1a  6      OPC=jne_label_1       
  movl 0x2b39e2(%rip), %esi         #  212   0xdab20  6      OPC=movl_r32_m32      
  orl $0x8, %esi                    #  213   0xdab26  3      OPC=orl_r32_imm8      
  movl $0x0, %edx                   #  214   0xdab29  5      OPC=movl_r32_imm32    
  movq 0x2b39cb(%rip), %rdi         #  215   0xdab2e  7      OPC=movq_r64_m64      
  callq .openlog_internal           #  216   0xdab35  5      OPC=callq_label       
  cmpl $0x1, 0x2b0783(%rip)         #  217   0xdab3a  7      OPC=cmpl_m32_imm8     
  jne .L_dab41                      #  218   0xdab41  2      OPC=jne_label         
.L_dab3b:                           #        0xdab43  0      OPC=<label>           
  addq $0x1, 0x58(%rsp)             #  219   0xdab43  6      OPC=addq_m64_imm8     
.L_dab41:                           #        0xdab49  0      OPC=<label>           
  cmpl $0x0, 0x2b39bc(%rip)         #  220   0xdab49  7      OPC=cmpl_m32_imm8     
  je .L_dabbd                       #  221   0xdab50  2      OPC=je_label          
.L_dab4a:                           #        0xdab52  0      OPC=<label>           
  movl $0x4000, %ecx                #  222   0xdab52  5      OPC=movl_r32_imm32    
  movq 0x58(%rsp), %rdx             #  223   0xdab57  5      OPC=movq_r64_m64      
  movq 0x60(%rsp), %rsi             #  224   0xdab5c  5      OPC=movq_r64_m64      
  movl 0x2b0759(%rip), %edi         #  225   0xdab61  6      OPC=movl_r32_m32      
  callq .__send                     #  226   0xdab67  5      OPC=callq_label       
  testq %rax, %rax                  #  227   0xdab6c  3      OPC=testq_r64_r64     
  jns .L_dac0e                      #  228   0xdab6f  6      OPC=jns_label_1       
  cmpl $0x0, 0x2b3990(%rip)         #  229   0xdab75  7      OPC=cmpl_m32_imm8     
  je .L_dabbd                       #  230   0xdab7c  2      OPC=je_label          
  callq .closelog_internal          #  231   0xdab7e  5      OPC=callq_label       
  movl 0x2b397f(%rip), %esi         #  232   0xdab83  6      OPC=movl_r32_m32      
  orl $0x8, %esi                    #  233   0xdab89  3      OPC=orl_r32_imm8      
  movl $0x0, %edx                   #  234   0xdab8c  5      OPC=movl_r32_imm32    
  movq 0x2b3968(%rip), %rdi         #  235   0xdab91  7      OPC=movq_r64_m64      
  callq .openlog_internal           #  236   0xdab98  5      OPC=callq_label       
  cmpl $0x0, 0x2b3968(%rip)         #  237   0xdab9d  7      OPC=cmpl_m32_imm8     
  je .L_dabbd                       #  238   0xdaba4  2      OPC=je_label          
  movl $0x4000, %ecx                #  239   0xdaba6  5      OPC=movl_r32_imm32    
  movq 0x58(%rsp), %rdx             #  240   0xdabab  5      OPC=movq_r64_m64      
  movq 0x60(%rsp), %rsi             #  241   0xdabb0  5      OPC=movq_r64_m64      
  movl 0x2b0705(%rip), %edi         #  242   0xdabb5  6      OPC=movl_r32_m32      
  callq .__send                     #  243   0xdabbb  5      OPC=callq_label       
  testq %rax, %rax                  #  244   0xdabc0  3      OPC=testq_r64_r64     
  jns .L_dac0e                      #  245   0xdabc3  2      OPC=jns_label         
.L_dabbd:                           #        0xdabc5  0      OPC=<label>           
  callq .closelog_internal          #  246   0xdabc5  5      OPC=callq_label       
  testb $0x2, 0x2b3937(%rip)        #  247   0xdabca  7      OPC=testb_m8_imm8     
  je .L_dac0e                       #  248   0xdabd1  2      OPC=je_label          
  movl $0x0, %edx                   #  249   0xdabd3  5      OPC=movl_r32_imm32    
  movl $0x101, %esi                 #  250   0xdabd8  5      OPC=movl_r32_imm32    
  leaq 0x7eca3(%rip), %rdi          #  251   0xdabdd  7      OPC=leaq_r64_m16      
  movl $0x0, %eax                   #  252   0xdabe4  5      OPC=movl_r32_imm32    
  callq .__open                     #  253   0xdabe9  5      OPC=callq_label       
  movl %eax, %ebx                   #  254   0xdabee  2      OPC=movl_r32_r32      
  testl %eax, %eax                  #  255   0xdabf0  2      OPC=testl_r32_r32     
  js .L_dac0e                       #  256   0xdabf2  2      OPC=js_label          
  movq %rbp, %rdx                   #  257   0xdabf4  3      OPC=movq_r64_r64      
  addq 0x60(%rsp), %rdx             #  258   0xdabf7  5      OPC=addq_r64_m64      
  leaq 0x7ec91(%rip), %rsi          #  259   0xdabfc  7      OPC=leaq_r64_m16      
  movl %eax, %edi                   #  260   0xdac03  2      OPC=movl_r32_r32      
  movl $0x0, %eax                   #  261   0xdac05  5      OPC=movl_r32_imm32    
  callq .dprintf                    #  262   0xdac0a  5      OPC=callq_label       
  movl %ebx, %edi                   #  263   0xdac0f  2      OPC=movl_r32_r32      
  callq .__close                    #  264   0xdac11  5      OPC=callq_label       
.L_dac0e:                           #        0xdac16  0      OPC=<label>           
  cmpl $0x0, 0x2b5feb(%rip)         #  265   0xdac16  7      OPC=cmpl_m32_imm8     
  je .L_dac22                       #  266   0xdac1d  2      OPC=je_label          
  lock                              #  267   0xdac1f  1      OPC=lock              
  decl 0x2b38d2(%rip)               #  268   0xdac20  6      OPC=decl_m32          
  nop                               #  269   0xdac26  1      OPC=nop               
  jne .L_dac2a                      #  270   0xdac27  2      OPC=jne_label         
  jmpq .L_dac44                     #  271   0xdac29  2      OPC=jmpq_label        
.L_dac22:                           #        0xdac2b  0      OPC=<label>           
  decl 0x2b38c8(%rip)               #  272   0xdac2b  6      OPC=decl_m32          
  je .L_dac44                       #  273   0xdac31  2      OPC=je_label          
.L_dac2a:                           #        0xdac33  0      OPC=<label>           
  leaq 0x2b38bf(%rip), %rdi         #  274   0xdac33  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  275   0xdac3a  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  276   0xdac41  5      OPC=callq_label       
  addq $0x80, %rsp                  #  277   0xdac46  7      OPC=addq_r64_imm32    
.L_dac44:                           #        0xdac4d  0      OPC=<label>           
  movq 0x60(%rsp), %rdi             #  278   0xdac4d  5      OPC=movq_r64_m64      
  leaq 0x30(%rsp), %rax             #  279   0xdac52  5      OPC=leaq_r64_m16      
  cmpq %rax, %rdi                   #  280   0xdac57  3      OPC=cmpq_r64_r64      
  je .L_daca6                       #  281   0xdac5a  2      OPC=je_label          
  callq .L_1f8d0                    #  282   0xdac5c  5      OPC=callq_label       
  jmpq .L_daca6                     #  283   0xdac61  2      OPC=jmpq_label        
  movq %rax, %rbp                   #  284   0xdac63  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                   #  285   0xdac66  3      OPC=movq_r64_r64      
  callq .L_1f8d0                    #  286   0xdac69  5      OPC=callq_label       
  movq %rbp, %rdi                   #  287   0xdac6e  3      OPC=movq_r64_r64      
  callq ._Unwind_Resume             #  288   0xdac71  5      OPC=callq_label       
  movq %rax, %rbx                   #  289   0xdac76  3      OPC=movq_r64_r64      
  leaq 0x20(%rsp), %rdi             #  290   0xdac79  5      OPC=leaq_r64_m16      
  callq .cancel_handler             #  291   0xdac7e  5      OPC=callq_label       
  movq %rbx, %rdi                   #  292   0xdac83  3      OPC=movq_r64_r64      
  callq ._Unwind_Resume             #  293   0xdac86  5      OPC=callq_label       
.L_dac82:                           #        0xdac8b  0      OPC=<label>           
  testb $0x1, 0x2b3877(%rip)        #  294   0xdac8b  7      OPC=testb_m8_imm8     
  je .L_daa08                       #  295   0xdac92  6      OPC=je_label_1        
  jmpq .L_da99b                     #  296   0xdac98  5      OPC=jmpq_label_1      
.L_dac94:                           #        0xdac9d  0      OPC=<label>           
  cmpl $0x1, 0x2b0621(%rip)         #  297   0xdac9d  7      OPC=cmpl_m32_imm8     
  jne .L_dab4a                      #  298   0xdaca4  6      OPC=jne_label_1       
  jmpq .L_dab3b                     #  299   0xdacaa  5      OPC=jmpq_label_1      
.L_daca6:                           #        0xdacaf  0      OPC=<label>           
  addq $0xb8, %rsp                  #  300   0xdacaf  7      OPC=addq_r64_imm32    
  popq %rbx                         #  301   0xdacb6  1      OPC=popq_r64_1        
  popq %rbp                         #  302   0xdacb7  1      OPC=popq_r64_1        
  popq %r12                         #  303   0xdacb8  2      OPC=popq_r64_1        
  popq %r13                         #  304   0xdacba  2      OPC=popq_r64_1        
  popq %r14                         #  305   0xdacbc  2      OPC=popq_r64_1        
  popq %r15                         #  306   0xdacbe  2      OPC=popq_r64_1        
  retq                              #  307   0xdacc0  1      OPC=retq              
                                                                                   
.size __vsyslog_chk, .-__vsyslog_chk

