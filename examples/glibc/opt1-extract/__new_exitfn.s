  .text
  .globl __new_exitfn
  .type __new_exitfn, @function

#! file-offset 0x33a90
#! rip-offset  0x33a90
#! capacity    423 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
.__new_exitfn:                      #        0x33a90  0      OPC=<label>           
  pushq %rbx                        #  1     0x33a90  1      OPC=pushq_r64_1       
  movq %rdi, %rbx                   #  2     0x33a91  3      OPC=movq_r64_r64      
  movl $0x1, %esi                   #  3     0x33a94  5      OPC=movl_r32_imm32    
  movl $0x0, %eax                   #  4     0x33a99  5      OPC=movl_r32_imm32    
  cmpl $0x0, 0x35d15b(%rip)         #  5     0x33a9e  7      OPC=cmpl_m32_imm8     
  je .L_33ab3                       #  6     0x33aa5  2      OPC=je_label          
  lock                              #  7     0x33aa7  1      OPC=lock              
  cmpxchgl %esi, 0x359761(%rip)     #  8     0x33aa8  7      OPC=cmpxchgl_m32_r32  
  nop                               #  9     0x33aaf  1      OPC=nop               
  jne .L_33abc                      #  10    0x33ab0  2      OPC=jne_label         
  jmpq .L_33ad6                     #  11    0x33ab2  2      OPC=jmpq_label        
.L_33ab3:                           #        0x33ab4  0      OPC=<label>           
  cmpxchgl %esi, 0x359756(%rip)     #  12    0x33ab4  7      OPC=cmpxchgl_m32_r32  
  je .L_33ad6                       #  13    0x33abb  2      OPC=je_label          
.L_33abc:                           #        0x33abd  0      OPC=<label>           
  leaq 0x35974d(%rip), %rdi         #  14    0x33abd  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  15    0x33ac4  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  16    0x33acb  5      OPC=callq_label       
  addq $0x80, %rsp                  #  17    0x33ad0  7      OPC=addq_r64_imm32    
.L_33ad6:                           #        0x33ad7  0      OPC=<label>           
  movq (%rbx), %r8                  #  18    0x33ad7  3      OPC=movq_r64_m64      
  testq %r8, %r8                    #  19    0x33ada  3      OPC=testq_r64_r64     
  je .L_33b56                       #  20    0x33add  2      OPC=je_label          
  movl $0x0, %edi                   #  21    0x33adf  5      OPC=movl_r32_imm32    
  jmpq .L_33ae8                     #  22    0x33ae4  2      OPC=jmpq_label        
.L_33ae5:                           #        0x33ae6  0      OPC=<label>           
  movq %rax, %r8                    #  23    0x33ae6  3      OPC=movq_r64_r64      
.L_33ae8:                           #        0x33ae9  0      OPC=<label>           
  movq 0x8(%r8), %rax               #  24    0x33ae9  4      OPC=movq_r64_m64      
  testq %rax, %rax                  #  25    0x33aed  3      OPC=testq_r64_r64     
  je .L_33b2e                       #  26    0x33af0  2      OPC=je_label          
  leaq -0x1(%rax), %rdx             #  27    0x33af2  4      OPC=leaq_r64_m16      
  movq %rdx, %rcx                   #  28    0x33af6  3      OPC=movq_r64_r64      
  shlq $0x5, %rcx                   #  29    0x33af9  4      OPC=shlq_r64_imm8     
  cmpq $0x0, 0x10(%r8,%rcx,1)       #  30    0x33afd  6      OPC=cmpq_m64_imm8     
  jne .L_33bc8                      #  31    0x33b03  6      OPC=jne_label_1       
  shlq $0x5, %rax                   #  32    0x33b09  4      OPC=shlq_r64_imm8     
  leaq -0x30(%r8,%rax,1), %rcx      #  33    0x33b0d  5      OPC=leaq_r64_m16      
  jmpq .L_33b29                     #  34    0x33b12  2      OPC=jmpq_label        
.L_33b13:                           #        0x33b14  0      OPC=<label>           
  leaq -0x1(%rdx), %rsi             #  35    0x33b14  4      OPC=leaq_r64_m16      
  subq $0x20, %rcx                  #  36    0x33b18  4      OPC=subq_r64_imm8     
  cmpq $0x0, 0x20(%rcx)             #  37    0x33b1c  5      OPC=cmpq_m64_imm8     
  jne .L_33bcb                      #  38    0x33b21  6      OPC=jne_label_1       
  movq %rsi, %rdx                   #  39    0x33b27  3      OPC=movq_r64_r64      
.L_33b29:                           #        0x33b2a  0      OPC=<label>           
  testq %rdx, %rdx                  #  40    0x33b2a  3      OPC=testq_r64_r64     
  jne .L_33b13                      #  41    0x33b2d  2      OPC=jne_label         
.L_33b2e:                           #        0x33b2f  0      OPC=<label>           
  movq $0x0, 0x8(%r8)               #  42    0x33b2f  8      OPC=movq_m64_imm32    
  movq (%r8), %rax                  #  43    0x33b37  3      OPC=movq_r64_m64      
  movq %r8, %rdi                    #  44    0x33b3a  3      OPC=movq_r64_r64      
  testq %rax, %rax                  #  45    0x33b3d  3      OPC=testq_r64_r64     
  jne .L_33ae5                      #  46    0x33b40  2      OPC=jne_label         
  jmpq .L_33bf2                     #  47    0x33b42  5      OPC=jmpq_label_1      
.L_33b46:                           #        0x33b47  0      OPC=<label>           
  movq %rdi, %r8                    #  48    0x33b47  3      OPC=movq_r64_r64      
  testq %rdi, %rdi                  #  49    0x33b4a  3      OPC=testq_r64_r64     
  jne .L_33be4                      #  50    0x33b4d  6      OPC=jne_label_1       
  testb %al, %al                    #  51    0x33b53  2      OPC=testb_r8_r8       
  je .L_33b75                       #  52    0x33b55  2      OPC=je_label          
.L_33b56:                           #        0x33b57  0      OPC=<label>           
  leaq 0x123d96(%rip), %rcx         #  53    0x33b57  7      OPC=leaq_r64_m16      
  movl $0x64, %edx                  #  54    0x33b5e  5      OPC=movl_r32_imm32    
  leaq 0x123d73(%rip), %rsi         #  55    0x33b63  7      OPC=leaq_r64_m16      
  leaq 0x123d79(%rip), %rdi         #  56    0x33b6a  7      OPC=leaq_r64_m16      
  callq .__assert_fail              #  57    0x33b71  5      OPC=callq_label       
.L_33b75:                           #        0x33b76  0      OPC=<label>           
  movl $0x410, %esi                 #  58    0x33b76  5      OPC=movl_r32_imm32    
  movl $0x1, %edi                   #  59    0x33b7b  5      OPC=movl_r32_imm32    
  callq .L_1f8c0                    #  60    0x33b80  5      OPC=callq_label       
  movq %rax, %r8                    #  61    0x33b85  3      OPC=movq_r64_r64      
  testq %rax, %rax                  #  62    0x33b88  3      OPC=testq_r64_r64     
  je .L_33bc1                       #  63    0x33b8b  2      OPC=je_label          
  movq (%rbx), %rax                 #  64    0x33b8d  3      OPC=movq_r64_m64      
  movq %rax, (%r8)                  #  65    0x33b90  3      OPC=movq_m64_r64      
  movq %r8, (%rbx)                  #  66    0x33b93  3      OPC=movq_m64_r64      
  jmpq .L_33be4                     #  67    0x33b96  2      OPC=jmpq_label        
.L_33b97:                           #        0x33b98  0      OPC=<label>           
  movq %rdx, %rax                   #  68    0x33b98  3      OPC=movq_r64_r64      
  shlq $0x5, %rax                   #  69    0x33b9b  4      OPC=shlq_r64_imm8     
  leaq 0x10(%r8,%rax,1), %rsi       #  70    0x33b9f  5      OPC=leaq_r64_m16      
  addq $0x1, %rdx                   #  71    0x33ba4  4      OPC=addq_r64_imm8     
  movq %rdx, 0x8(%r8)               #  72    0x33ba8  4      OPC=movq_m64_r64      
.L_33bab:                           #        0x33bac  0      OPC=<label>           
  testq %rsi, %rsi                  #  73    0x33bac  3      OPC=testq_r64_r64     
  je .L_33bfc                       #  74    0x33baf  2      OPC=je_label          
  movq $0x1, (%rsi)                 #  75    0x33bb1  7      OPC=movq_m64_imm32    
  addq $0x1, 0x35cd41(%rip)         #  76    0x33bb8  8      OPC=addq_m64_imm8     
  jmpq .L_33bfc                     #  77    0x33bc0  2      OPC=jmpq_label        
.L_33bc1:                           #        0x33bc2  0      OPC=<label>           
  movl $0x0, %esi                   #  78    0x33bc2  5      OPC=movl_r32_imm32    
  jmpq .L_33bfc                     #  79    0x33bc7  2      OPC=jmpq_label        
.L_33bc8:                           #        0x33bc9  0      OPC=<label>           
  movq %rax, %rdx                   #  80    0x33bc9  3      OPC=movq_r64_r64      
.L_33bcb:                           #        0x33bcc  0      OPC=<label>           
  testq %r8, %r8                    #  81    0x33bcc  3      OPC=testq_r64_r64     
  sete %al                          #  82    0x33bcf  3      OPC=sete_r8           
  cmpq $0x20, %rdx                  #  83    0x33bd2  4      OPC=cmpq_r64_imm8     
  je .L_33b46                       #  84    0x33bd6  6      OPC=je_label_1        
  testb %al, %al                    #  85    0x33bdc  2      OPC=testb_r8_r8       
  je .L_33b97                       #  86    0x33bde  2      OPC=je_label          
  jmpq .L_33b46                     #  87    0x33be0  5      OPC=jmpq_label_1      
.L_33be4:                           #        0x33be5  0      OPC=<label>           
  leaq 0x10(%r8), %rsi              #  88    0x33be5  4      OPC=leaq_r64_m16      
  movq $0x1, 0x8(%r8)               #  89    0x33be9  8      OPC=movq_m64_imm32    
  jmpq .L_33bab                     #  90    0x33bf1  2      OPC=jmpq_label        
.L_33bf2:                           #        0x33bf3  0      OPC=<label>           
  testq %r8, %r8                    #  91    0x33bf3  3      OPC=testq_r64_r64     
  jne .L_33be4                      #  92    0x33bf6  2      OPC=jne_label         
  jmpq .L_33b56                     #  93    0x33bf8  5      OPC=jmpq_label_1      
.L_33bfc:                           #        0x33bfd  0      OPC=<label>           
  cmpl $0x0, 0x35cffd(%rip)         #  94    0x33bfd  7      OPC=cmpl_m32_imm8     
  je .L_33c10                       #  95    0x33c04  2      OPC=je_label          
  lock                              #  96    0x33c06  1      OPC=lock              
  decl 0x359604(%rip)               #  97    0x33c07  6      OPC=decl_m32          
  nop                               #  98    0x33c0d  1      OPC=nop               
  jne .L_33c18                      #  99    0x33c0e  2      OPC=jne_label         
  jmpq .L_33c32                     #  100   0x33c10  2      OPC=jmpq_label        
.L_33c10:                           #        0x33c12  0      OPC=<label>           
  decl 0x3595fa(%rip)               #  101   0x33c12  6      OPC=decl_m32          
  je .L_33c32                       #  102   0x33c18  2      OPC=je_label          
.L_33c18:                           #        0x33c1a  0      OPC=<label>           
  leaq 0x3595f1(%rip), %rdi         #  103   0x33c1a  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  104   0x33c21  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  105   0x33c28  5      OPC=callq_label       
  addq $0x80, %rsp                  #  106   0x33c2d  7      OPC=addq_r64_imm32    
.L_33c32:                           #        0x33c34  0      OPC=<label>           
  movq %rsi, %rax                   #  107   0x33c34  3      OPC=movq_r64_r64      
  popq %rbx                         #  108   0x33c37  1      OPC=popq_r64_1        
  retq                              #  109   0x33c38  1      OPC=retq              
                                                                                   
.size __new_exitfn, .-__new_exitfn

