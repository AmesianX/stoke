  .text
  .globl compat_call
  .type compat_call, @function

#! file-offset 0xae092
#! rip-offset  0xae092
#! capacity    630 bytes

# Text                               #  Line  RIP      Bytes  Opcode                
.compat_call:                        #        0xae092  0      OPC=<label>           
  pushq %r15                         #  1     0xae092  2      OPC=pushq_r64_1       
  pushq %r14                         #  2     0xae094  2      OPC=pushq_r64_1       
  pushq %r13                         #  3     0xae096  2      OPC=pushq_r64_1       
  pushq %r12                         #  4     0xae098  2      OPC=pushq_r64_1       
  pushq %rbp                         #  5     0xae09a  1      OPC=pushq_r64_1       
  pushq %rbx                         #  6     0xae09b  1      OPC=pushq_r64_1       
  subq $0x478, %rsp                  #  7     0xae09c  7      OPC=subq_r64_imm32    
  movq %rdi, %r12                    #  8     0xae0a3  3      OPC=movq_r64_r64      
  movq %rsi, %rbp                    #  9     0xae0a6  3      OPC=movq_r64_r64      
  movl %edx, 0x14(%rsp)              #  10    0xae0a9  4      OPC=movl_m32_r32      
  movq %rcx, 0x18(%rsp)              #  11    0xae0ad  5      OPC=movq_m64_r64      
  movq %r8, 0x20(%rsp)               #  12    0xae0b2  5      OPC=movq_m64_r64      
  movq %r9, 0x28(%rsp)               #  13    0xae0b7  5      OPC=movq_m64_r64      
  movq 0x4b8(%rsp), %r15             #  14    0xae0bc  8      OPC=movq_r64_m64      
  movq (%r9), %r13                   #  15    0xae0c4  3      OPC=movq_r64_m64      
  leaq 0xaafa7(%rip), %rsi           #  16    0xae0c7  7      OPC=leaq_r64_m16      
  callq .__nss_lookup_function       #  17    0xae0ce  5      OPC=callq_label       
  movq %rax, %r14                    #  18    0xae0d3  3      OPC=movq_r64_r64      
  testq %rax, %rax                   #  19    0xae0d6  3      OPC=testq_r64_r64     
  je .L_ae2ef                        #  20    0xae0d9  6      OPC=je_label_1        
  leaq 0xaaf9a(%rip), %rsi           #  21    0xae0df  7      OPC=leaq_r64_m16      
  movq %r12, %rdi                    #  22    0xae0e6  3      OPC=movq_r64_r64      
  callq .__nss_lookup_function       #  23    0xae0e9  5      OPC=callq_label       
  movq %rax, %rbx                    #  24    0xae0ee  3      OPC=movq_r64_r64      
  testq %rax, %rax                   #  25    0xae0f1  3      OPC=testq_r64_r64     
  je .L_ae10b                        #  26    0xae0f4  2      OPC=je_label          
  movq %rax, %rdi                    #  27    0xae0f6  3      OPC=movq_r64_r64      
  callq ._dl_mcount_wrapper_check    #  28    0xae0f9  5      OPC=callq_label       
  callq %rbx                         #  29    0xae0fe  2      OPC=callq_r64         
  movl %eax, %edx                    #  30    0xae100  2      OPC=movl_r32_r32      
  cmpl $0x1, %eax                    #  31    0xae102  3      OPC=cmpl_r32_imm8     
  jne .L_ae2f4                       #  32    0xae105  6      OPC=jne_label_1       
.L_ae10b:                            #        0xae10b  0      OPC=<label>           
  leaq 0xaaf77(%rip), %rsi           #  33    0xae10b  7      OPC=leaq_r64_m16      
  movq %r12, %rdi                    #  34    0xae112  3      OPC=movq_r64_r64      
  callq .__nss_lookup_function       #  35    0xae115  5      OPC=callq_label       
  movq %rax, 0x30(%rsp)              #  36    0xae11a  5      OPC=movq_m64_r64      
  leaq 0x50(%rsp), %rax              #  37    0xae11f  5      OPC=leaq_r64_m16      
  movq %rax, 0x40(%rsp)              #  38    0xae124  5      OPC=movq_m64_r64      
  movq $0x400, 0x48(%rsp)            #  39    0xae129  9      OPC=movq_m64_imm32    
  leaq 0x450(%rsp), %rax             #  40    0xae132  8      OPC=leaq_r64_m16      
  movq %rax, 0x8(%rsp)               #  41    0xae13a  5      OPC=movq_m64_r64      
  leaq 0x40(%rsp), %rax              #  42    0xae13f  5      OPC=leaq_r64_m16      
  movq %rax, 0x38(%rsp)              #  43    0xae144  5      OPC=movq_m64_r64      
  jmpq .L_ae15d                      #  44    0xae149  2      OPC=jmpq_label        
.L_ae14b:                            #        0xae14b  0      OPC=<label>           
  movq 0x38(%rsp), %rdi              #  45    0xae14b  5      OPC=movq_r64_m64      
  callq .__libc_scratch_buffer_grow  #  46    0xae150  5      OPC=callq_label       
  testb %al, %al                     #  47    0xae155  2      OPC=testb_r8_r8       
  je .L_ae2a4                        #  48    0xae157  6      OPC=je_label_1        
.L_ae15d:                            #        0xae15d  0      OPC=<label>           
  movq %r14, %rdi                    #  49    0xae15d  3      OPC=movq_r64_r64      
  callq ._dl_mcount_wrapper_check    #  50    0xae160  5      OPC=callq_label       
  movq %r15, %rcx                    #  51    0xae165  3      OPC=movq_r64_r64      
  movq 0x48(%rsp), %rdx              #  52    0xae168  5      OPC=movq_r64_m64      
  movq 0x40(%rsp), %rsi              #  53    0xae16d  5      OPC=movq_r64_m64      
  movq 0x8(%rsp), %rdi               #  54    0xae172  5      OPC=movq_r64_m64      
  callq %r14                         #  55    0xae177  3      OPC=callq_r64         
  cmpl $0xfffffffe, %eax             #  56    0xae17a  6      OPC=cmpl_r32_imm32    
  nop                                #  57    0xae180  1      OPC=nop               
  nop                                #  58    0xae181  1      OPC=nop               
  nop                                #  59    0xae182  1      OPC=nop               
  jne .L_ae18f                       #  60    0xae183  2      OPC=jne_label         
  cmpl $0x22, (%r15)                 #  61    0xae185  4      OPC=cmpl_m32_imm8     
  je .L_ae14b                        #  62    0xae189  2      OPC=je_label          
  movl $0x1, %ebx                    #  63    0xae18b  5      OPC=movl_r32_imm32    
  jmpq .L_ae2be                      #  64    0xae190  5      OPC=jmpq_label_1      
.L_ae18f:                            #        0xae195  0      OPC=<label>           
  cmpl $0x1, %eax                    #  65    0xae195  3      OPC=cmpl_r32_imm8     
  jne .L_ae2ab                       #  66    0xae198  6      OPC=jne_label_1       
  movl 0x460(%rsp), %r12d            #  67    0xae19e  8      OPC=movl_r32_m32      
  cmpl 0x14(%rsp), %r12d             #  68    0xae1a6  5      OPC=cmpl_r32_m32      
  je .L_ae15d                        #  69    0xae1ab  2      OPC=je_label          
  movq 0x468(%rsp), %rbx             #  70    0xae1ad  8      OPC=movq_r64_m64      
  movq (%rbx), %rdi                  #  71    0xae1b5  3      OPC=movq_r64_m64      
  testq %rdi, %rdi                   #  72    0xae1b8  3      OPC=testq_r64_r64     
  je .L_ae15d                        #  73    0xae1bb  2      OPC=je_label          
.L_ae1b7:                            #        0xae1bd  0      OPC=<label>           
  movq %rbp, %rsi                    #  74    0xae1bd  3      OPC=movq_r64_r64      
  callq .__GI_strcmp                 #  75    0xae1c0  5      OPC=callq_label       
  testl %eax, %eax                   #  76    0xae1c5  2      OPC=testl_r32_r32     
  jne .L_ae28f                       #  77    0xae1c7  6      OPC=jne_label_1       
  movq 0x18(%rsp), %rax              #  78    0xae1cd  5      OPC=movq_r64_m64      
  movq (%rax), %rdx                  #  79    0xae1d2  3      OPC=movq_r64_m64      
  testq %rdx, %rdx                   #  80    0xae1d5  3      OPC=testq_r64_r64     
  jle .L_ae1f7                       #  81    0xae1d8  2      OPC=jle_label         
  cmpl (%r13), %r12d                 #  82    0xae1da  4      OPC=cmpl_r32_m32      
  je .L_ae1f7                        #  83    0xae1de  2      OPC=je_label          
  movl $0x0, %eax                    #  84    0xae1e0  5      OPC=movl_r32_imm32    
  jmpq .L_ae1ec                      #  85    0xae1e5  2      OPC=jmpq_label        
.L_ae1e1:                            #        0xae1e7  0      OPC=<label>           
  cmpl (%r13,%rax,4), %r12d          #  86    0xae1e7  5      OPC=cmpl_r32_m32      
  je .L_ae15d                        #  87    0xae1ec  6      OPC=je_label_1        
.L_ae1ec:                            #        0xae1f2  0      OPC=<label>           
  addq $0x1, %rax                    #  88    0xae1f2  4      OPC=addq_r64_imm8     
  cmpq %rdx, %rax                    #  89    0xae1f6  3      OPC=cmpq_r64_r64      
  jne .L_ae1e1                       #  90    0xae1f9  2      OPC=jne_label         
  jmpq .L_ae200                      #  91    0xae1fb  2      OPC=jmpq_label        
.L_ae1f7:                            #        0xae1fd  0      OPC=<label>           
  testq %rdx, %rdx                   #  92    0xae1fd  3      OPC=testq_r64_r64     
  jne .L_ae15d                       #  93    0xae200  6      OPC=jne_label_1       
.L_ae200:                            #        0xae206  0      OPC=<label>           
  movq 0x20(%rsp), %rax              #  94    0xae206  5      OPC=movq_r64_m64      
  movq (%rax), %rbx                  #  95    0xae20b  3      OPC=movq_r64_m64      
  cmpq %rdx, %rbx                    #  96    0xae20e  3      OPC=cmpq_r64_r64      
  jne .L_ae272                       #  97    0xae211  2      OPC=jne_label         
  cmpq 0x4b0(%rsp), %rbx             #  98    0xae213  8      OPC=cmpq_r64_m64      
  jne .L_ae226                       #  99    0xae21b  2      OPC=jne_label         
  cmpq $0x0, 0x4b0(%rsp)             #  100   0xae21d  9      OPC=cmpq_m64_imm8     
  jg .L_ae2b2                        #  101   0xae226  6      OPC=jg_label_1        
.L_ae226:                            #        0xae22c  0      OPC=<label>           
  cmpq $0x0, 0x4b0(%rsp)             #  102   0xae22c  9      OPC=cmpq_m64_imm8     
  jg .L_ae236                        #  103   0xae235  2      OPC=jg_label          
  addq %rbx, %rbx                    #  104   0xae237  3      OPC=addq_r64_r64      
  jmpq .L_ae24a                      #  105   0xae23a  2      OPC=jmpq_label        
.L_ae236:                            #        0xae23c  0      OPC=<label>           
  addq %rbx, %rbx                    #  106   0xae23c  3      OPC=addq_r64_r64      
  cmpq 0x4b0(%rsp), %rbx             #  107   0xae23f  8      OPC=cmpq_r64_m64      
  cmovgq 0x4b0(%rsp), %rbx           #  108   0xae247  9      OPC=cmovgq_r64_m64    
.L_ae24a:                            #        0xae250  0      OPC=<label>           
  leaq (,%rbx,4), %rsi               #  109   0xae250  8      OPC=leaq_r64_m16      
  movq %r13, %rdi                    #  110   0xae258  3      OPC=movq_r64_r64      
  callq .__tls_get_addr_plt          #  111   0xae25b  5      OPC=callq_label       
  movq %rax, %r13                    #  112   0xae260  3      OPC=movq_r64_r64      
  testq %rax, %rax                   #  113   0xae263  3      OPC=testq_r64_r64     
  je .L_ae2b9                        #  114   0xae266  2      OPC=je_label          
  movq 0x28(%rsp), %rax              #  115   0xae268  5      OPC=movq_r64_m64      
  movq %r13, (%rax)                  #  116   0xae26d  3      OPC=movq_m64_r64      
  movq 0x20(%rsp), %rax              #  117   0xae270  5      OPC=movq_r64_m64      
  movq %rbx, (%rax)                  #  118   0xae275  3      OPC=movq_m64_r64      
.L_ae272:                            #        0xae278  0      OPC=<label>           
  movq 0x18(%rsp), %rcx              #  119   0xae278  5      OPC=movq_r64_m64      
  movq (%rcx), %rax                  #  120   0xae27d  3      OPC=movq_r64_m64      
  movl 0x460(%rsp), %edx             #  121   0xae280  7      OPC=movl_r32_m32      
  movl %edx, (%r13,%rax,4)           #  122   0xae287  5      OPC=movl_m32_r32      
  addq $0x1, (%rcx)                  #  123   0xae28c  4      OPC=addq_m64_imm8     
  jmpq .L_ae15d                      #  124   0xae290  5      OPC=jmpq_label_1      
.L_ae28f:                            #        0xae295  0      OPC=<label>           
  addq $0x8, %rbx                    #  125   0xae295  4      OPC=addq_r64_imm8     
  movq (%rbx), %rdi                  #  126   0xae299  3      OPC=movq_r64_m64      
  testq %rdi, %rdi                   #  127   0xae29c  3      OPC=testq_r64_r64     
  jne .L_ae1b7                       #  128   0xae29f  6      OPC=jne_label_1       
  jmpq .L_ae15d                      #  129   0xae2a5  5      OPC=jmpq_label_1      
.L_ae2a4:                            #        0xae2aa  0      OPC=<label>           
  movl $0xfffffffe, %ebx             #  130   0xae2aa  6      OPC=movl_r32_imm32_1  
  jmpq .L_ae2be                      #  131   0xae2b0  2      OPC=jmpq_label        
.L_ae2ab:                            #        0xae2b2  0      OPC=<label>           
  movl $0x1, %ebx                    #  132   0xae2b2  5      OPC=movl_r32_imm32    
  jmpq .L_ae2be                      #  133   0xae2b7  2      OPC=jmpq_label        
.L_ae2b2:                            #        0xae2b9  0      OPC=<label>           
  movl $0x1, %ebx                    #  134   0xae2b9  5      OPC=movl_r32_imm32    
  jmpq .L_ae2be                      #  135   0xae2be  2      OPC=jmpq_label        
.L_ae2b9:                            #        0xae2c0  0      OPC=<label>           
  movl $0x1, %ebx                    #  136   0xae2c0  5      OPC=movl_r32_imm32    
.L_ae2be:                            #        0xae2c5  0      OPC=<label>           
  movq 0x40(%rsp), %rdi              #  137   0xae2c5  5      OPC=movq_r64_m64      
  leaq 0x50(%rsp), %rax              #  138   0xae2ca  5      OPC=leaq_r64_m16      
  cmpq %rax, %rdi                    #  139   0xae2cf  3      OPC=cmpq_r64_r64      
  je .L_ae2d2                        #  140   0xae2d2  2      OPC=je_label          
  callq .L_1f8d0                     #  141   0xae2d4  5      OPC=callq_label       
.L_ae2d2:                            #        0xae2d9  0      OPC=<label>           
  movl %ebx, %edx                    #  142   0xae2d9  2      OPC=movl_r32_r32      
  movq 0x30(%rsp), %r15              #  143   0xae2db  5      OPC=movq_r64_m64      
  testq %r15, %r15                   #  144   0xae2e0  3      OPC=testq_r64_r64     
  je .L_ae2f4                        #  145   0xae2e3  2      OPC=je_label          
  movq %r15, %rdi                    #  146   0xae2e5  3      OPC=movq_r64_r64      
  callq ._dl_mcount_wrapper_check    #  147   0xae2e8  5      OPC=callq_label       
  movq %r15, %rax                    #  148   0xae2ed  3      OPC=movq_r64_r64      
  callq %rax                         #  149   0xae2f0  2      OPC=callq_r64         
  movl %ebx, %edx                    #  150   0xae2f2  2      OPC=movl_r32_r32      
  jmpq .L_ae2f4                      #  151   0xae2f4  2      OPC=jmpq_label        
.L_ae2ef:                            #        0xae2f6  0      OPC=<label>           
  movl $0xffffffff, %edx             #  152   0xae2f6  6      OPC=movl_r32_imm32_1  
.L_ae2f4:                            #        0xae2fc  0      OPC=<label>           
  movl %edx, %eax                    #  153   0xae2fc  2      OPC=movl_r32_r32      
  addq $0x478, %rsp                  #  154   0xae2fe  7      OPC=addq_r64_imm32    
  popq %rbx                          #  155   0xae305  1      OPC=popq_r64_1        
  popq %rbp                          #  156   0xae306  1      OPC=popq_r64_1        
  popq %r12                          #  157   0xae307  2      OPC=popq_r64_1        
  popq %r13                          #  158   0xae309  2      OPC=popq_r64_1        
  popq %r14                          #  159   0xae30b  2      OPC=popq_r64_1        
  popq %r15                          #  160   0xae30d  2      OPC=popq_r64_1        
  retq                               #  161   0xae30f  1      OPC=retq              
                                                                                    
.size compat_call, .-compat_call

