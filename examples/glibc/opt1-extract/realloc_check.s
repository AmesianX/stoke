  .text
  .globl realloc_check
  .type realloc_check, @function

#! file-offset 0x7450c
#! rip-offset  0x7450c
#! capacity    685 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
.realloc_check:                     #        0x7450c  0      OPC=<label>           
  pushq %r15                        #  1     0x7450c  2      OPC=pushq_r64_1       
  pushq %r14                        #  2     0x7450e  2      OPC=pushq_r64_1       
  pushq %r13                        #  3     0x74510  2      OPC=pushq_r64_1       
  pushq %r12                        #  4     0x74512  2      OPC=pushq_r64_1       
  pushq %rbp                        #  5     0x74514  1      OPC=pushq_r64_1       
  pushq %rbx                        #  6     0x74515  1      OPC=pushq_r64_1       
  subq $0x28, %rsp                  #  7     0x74516  4      OPC=subq_r64_imm8     
  movq %rsi, %rbx                   #  8     0x7451a  3      OPC=movq_r64_r64      
  cmpq $0xff, %rsi                  #  9     0x7451d  4      OPC=cmpq_r64_imm8     
  jne .L_7453b                      #  10    0x74521  2      OPC=jne_label         
  movq 0x316956(%rip), %rax         #  11    0x74523  7      OPC=movq_r64_m64      
  movl $0xc, (%rax)                 #  12    0x7452a  6      OPC=movl_m32_imm32    
  nop                               #  13    0x74530  1      OPC=nop               
  movl $0x0, %eax                   #  14    0x74531  5      OPC=movl_r32_imm32    
  jmpq .L_747aa                     #  15    0x74536  5      OPC=jmpq_label_1      
.L_7453b:                           #        0x7453b  0      OPC=<label>           
  movq %rdi, %rbp                   #  16    0x7453b  3      OPC=movq_r64_r64      
  testq %rdi, %rdi                  #  17    0x7453e  3      OPC=testq_r64_r64     
  jne .L_74555                      #  18    0x74541  2      OPC=jne_label         
  movl $0x0, %esi                   #  19    0x74543  5      OPC=movl_r32_imm32    
  movq %rbx, %rdi                   #  20    0x74548  3      OPC=movq_r64_r64      
  callq .malloc_check               #  21    0x7454b  5      OPC=callq_label       
  jmpq .L_747aa                     #  22    0x74550  5      OPC=jmpq_label_1      
.L_74555:                           #        0x74555  0      OPC=<label>           
  testq %rsi, %rsi                  #  23    0x74555  3      OPC=testq_r64_r64     
  jne .L_7456e                      #  24    0x74558  2      OPC=jne_label         
  movl $0x0, %esi                   #  25    0x7455a  5      OPC=movl_r32_imm32    
  callq .free_check                 #  26    0x7455f  5      OPC=callq_label       
  movl $0x0, %eax                   #  27    0x74564  5      OPC=movl_r32_imm32    
  jmpq .L_747aa                     #  28    0x74569  5      OPC=jmpq_label_1      
.L_7456e:                           #        0x7456e  0      OPC=<label>           
  movl $0x1, %esi                   #  29    0x7456e  5      OPC=movl_r32_imm32    
  movl $0x0, %eax                   #  30    0x74573  5      OPC=movl_r32_imm32    
  cmpl $0x0, 0x31c681(%rip)         #  31    0x74578  7      OPC=cmpl_m32_imm8     
  je .L_7458d                       #  32    0x7457f  2      OPC=je_label          
  lock                              #  33    0x74581  1      OPC=lock              
  cmpxchgl %esi, 0x3176b7(%rip)     #  34    0x74582  7      OPC=cmpxchgl_m32_r32  
  nop                               #  35    0x74589  1      OPC=nop               
  jne .L_74596                      #  36    0x7458a  2      OPC=jne_label         
  jmpq .L_745b0                     #  37    0x7458c  2      OPC=jmpq_label        
.L_7458d:                           #        0x7458e  0      OPC=<label>           
  cmpxchgl %esi, 0x3176ac(%rip)     #  38    0x7458e  7      OPC=cmpxchgl_m32_r32  
  je .L_745b0                       #  39    0x74595  2      OPC=je_label          
.L_74596:                           #        0x74597  0      OPC=<label>           
  leaq 0x3176a3(%rip), %rdi         #  40    0x74597  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  41    0x7459e  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  42    0x745a5  5      OPC=callq_label       
  addq $0x80, %rsp                  #  43    0x745aa  7      OPC=addq_r64_imm32    
.L_745b0:                           #        0x745b1  0      OPC=<label>           
  leaq 0x18(%rsp), %rsi             #  44    0x745b1  5      OPC=leaq_r64_m16      
  movq %rbp, %rdi                   #  45    0x745b6  3      OPC=movq_r64_r64      
  callq .mem2chunk_check            #  46    0x745b9  5      OPC=callq_label       
  movq %rax, %r12                   #  47    0x745be  3      OPC=movq_r64_r64      
  cmpl $0x0, 0x31c639(%rip)         #  48    0x745c1  7      OPC=cmpl_m32_imm8     
  je .L_745d4                       #  49    0x745c8  2      OPC=je_label          
  lock                              #  50    0x745ca  1      OPC=lock              
  decl 0x317670(%rip)               #  51    0x745cb  6      OPC=decl_m32          
  nop                               #  52    0x745d1  1      OPC=nop               
  jne .L_745dc                      #  53    0x745d2  2      OPC=jne_label         
  jmpq .L_745f6                     #  54    0x745d4  2      OPC=jmpq_label        
.L_745d4:                           #        0x745d6  0      OPC=<label>           
  decl 0x317666(%rip)               #  55    0x745d6  6      OPC=decl_m32          
  je .L_745f6                       #  56    0x745dc  2      OPC=je_label          
.L_745dc:                           #        0x745de  0      OPC=<label>           
  leaq 0x31765d(%rip), %rdi         #  57    0x745de  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  58    0x745e5  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  59    0x745ec  5      OPC=callq_label       
  addq $0x80, %rsp                  #  60    0x745f1  7      OPC=addq_r64_imm32    
.L_745f6:                           #        0x745f8  0      OPC=<label>           
  testq %r12, %r12                  #  61    0x745f8  3      OPC=testq_r64_r64     
  jne .L_74629                      #  62    0x745fb  2      OPC=jne_label         
  leaq 0x31763e(%rip), %rcx         #  63    0x745fd  7      OPC=leaq_r64_m16      
  movq %rbp, %rdx                   #  64    0x74604  3      OPC=movq_r64_r64      
  leaq 0xe44b3(%rip), %rsi          #  65    0x74607  7      OPC=leaq_r64_m16      
  movl 0x316bbe(%rip), %edi         #  66    0x7460e  6      OPC=movl_r32_m32      
  callq .malloc_printerr            #  67    0x74614  5      OPC=callq_label       
  movl $0x0, %esi                   #  68    0x74619  5      OPC=movl_r32_imm32    
  movq %rbx, %rdi                   #  69    0x7461e  3      OPC=movq_r64_r64      
  callq .malloc_check               #  70    0x74621  5      OPC=callq_label       
  jmpq .L_747aa                     #  71    0x74626  5      OPC=jmpq_label_1      
.L_74629:                           #        0x7462b  0      OPC=<label>           
  movq 0x8(%r12), %rax              #  72    0x7462b  5      OPC=movq_r64_m64      
  andq $0xf8, %rax                  #  73    0x74630  4      OPC=andq_r64_imm8     
  movq %rax, 0x8(%rsp)              #  74    0x74634  5      OPC=movq_m64_r64      
  leaq 0x1(%rbx), %r15              #  75    0x74639  4      OPC=leaq_r64_m16      
  cmpq $0xbf, %r15                  #  76    0x7463d  4      OPC=cmpq_r64_imm8     
  jbe .L_74659                      #  77    0x74641  2      OPC=jbe_label         
  movq 0x316838(%rip), %rax         #  78    0x74643  7      OPC=movq_r64_m64      
  movl $0xc, (%rax)                 #  79    0x7464a  6      OPC=movl_m32_imm32    
  nop                               #  80    0x74650  1      OPC=nop               
  movl $0x0, %eax                   #  81    0x74651  5      OPC=movl_r32_imm32    
  jmpq .L_747aa                     #  82    0x74656  5      OPC=jmpq_label_1      
.L_74659:                           #        0x7465b  0      OPC=<label>           
  leaq 0x18(%rbx), %r13             #  83    0x7465b  4      OPC=leaq_r64_m16      
  movq %r13, %r14                   #  84    0x7465f  3      OPC=movq_r64_r64      
  andq $0xf0, %r14                  #  85    0x74662  4      OPC=andq_r64_imm8     
  cmpq $0x20, %r13                  #  86    0x74666  4      OPC=cmpq_r64_imm8     
  movl $0x20, %eax                  #  87    0x7466a  5      OPC=movl_r32_imm32    
  cmovbq %rax, %r14                 #  88    0x7466f  4      OPC=cmovbq_r64_r64    
  movl $0x1, %esi                   #  89    0x74673  5      OPC=movl_r32_imm32    
  movb $0x0, %al                    #  90    0x74678  2      OPC=movb_r8_imm8      
  cmpl $0x0, 0x31c581(%rip)         #  91    0x7467a  7      OPC=cmpl_m32_imm8     
  je .L_7468d                       #  92    0x74681  2      OPC=je_label          
  lock                              #  93    0x74683  1      OPC=lock              
  cmpxchgl %esi, 0x3175b7(%rip)     #  94    0x74684  7      OPC=cmpxchgl_m32_r32  
  nop                               #  95    0x7468b  1      OPC=nop               
  jne .L_74696                      #  96    0x7468c  2      OPC=jne_label         
  jmpq .L_746b0                     #  97    0x7468e  2      OPC=jmpq_label        
.L_7468d:                           #        0x74690  0      OPC=<label>           
  cmpxchgl %esi, 0x3175ac(%rip)     #  98    0x74690  7      OPC=cmpxchgl_m32_r32  
  je .L_746b0                       #  99    0x74697  2      OPC=je_label          
.L_74696:                           #        0x74699  0      OPC=<label>           
  leaq 0x3175a3(%rip), %rdi         #  100   0x74699  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  101   0x746a0  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  102   0x746a7  5      OPC=callq_label       
  addq $0x80, %rsp                  #  103   0x746ac  7      OPC=addq_r64_imm32    
.L_746b0:                           #        0x746b3  0      OPC=<label>           
  testb $0x2, 0x8(%r12)             #  104   0x746b3  6      OPC=testb_m8_imm8     
  je .L_74724                       #  105   0x746b9  2      OPC=je_label          
  movq %r14, %rsi                   #  106   0x746bb  3      OPC=movq_r64_r64      
  movq %r12, %rdi                   #  107   0x746be  3      OPC=movq_r64_r64      
  callq .mremap_chunk               #  108   0x746c1  5      OPC=callq_label       
  testq %rax, %rax                  #  109   0x746c6  3      OPC=testq_r64_r64     
  je .L_746d1                       #  110   0x746c9  2      OPC=je_label          
  leaq 0x10(%rax), %rbp             #  111   0x746cb  4      OPC=leaq_r64_m16      
  jmpq .L_74758                     #  112   0x746cf  5      OPC=jmpq_label_1      
.L_746d1:                           #        0x746d4  0      OPC=<label>           
  movq 0x8(%rsp), %rax              #  113   0x746d4  5      OPC=movq_r64_m64      
  subq $0x8, %rax                   #  114   0x746d9  4      OPC=subq_r64_imm8     
  cmpq %rax, %r14                   #  115   0x746dd  3      OPC=cmpq_r64_r64      
  jbe .L_74769                      #  116   0x746e0  6      OPC=jbe_label_1       
  callq .top_check                  #  117   0x746e6  5      OPC=callq_label       
  testl %eax, %eax                  #  118   0x746eb  2      OPC=testl_r32_r32     
  js .L_7475d                       #  119   0x746ed  2      OPC=js_label          
  movq %r15, %rsi                   #  120   0x746ef  3      OPC=movq_r64_r64      
  leaq 0x31754a(%rip), %rdi         #  121   0x746f2  7      OPC=leaq_r64_m16      
  callq ._int_malloc                #  122   0x746f9  5      OPC=callq_label       
  movq %rax, %r13                   #  123   0x746fe  3      OPC=movq_r64_r64      
  testq %rax, %rax                  #  124   0x74701  3      OPC=testq_r64_r64     
  je .L_7475d                       #  125   0x74704  2      OPC=je_label          
  movq 0x8(%rsp), %rdx              #  126   0x74706  5      OPC=movq_r64_m64      
  subq $0x10, %rdx                  #  127   0x7470b  4      OPC=subq_r64_imm8     
  movq %rbp, %rsi                   #  128   0x7470f  3      OPC=movq_r64_r64      
  movq %rax, %rdi                   #  129   0x74712  3      OPC=movq_r64_r64      
  callq .__GI_memcpy                #  130   0x74715  5      OPC=callq_label       
  movq %r12, %rdi                   #  131   0x7471a  3      OPC=movq_r64_r64      
  callq .munmap_chunk               #  132   0x7471d  5      OPC=callq_label       
  movq %r13, %rbp                   #  133   0x74722  3      OPC=movq_r64_r64      
  jmpq .L_74769                     #  134   0x74725  2      OPC=jmpq_label        
.L_74724:                           #        0x74727  0      OPC=<label>           
  callq .top_check                  #  135   0x74727  5      OPC=callq_label       
  testl %eax, %eax                  #  136   0x7472c  2      OPC=testl_r32_r32     
  js .L_7475d                       #  137   0x7472e  2      OPC=js_label          
  movq %r13, %rax                   #  138   0x74730  3      OPC=movq_r64_r64      
  andq $0xf0, %rax                  #  139   0x74733  4      OPC=andq_r64_imm8     
  cmpq $0x20, %r13                  #  140   0x74737  4      OPC=cmpq_r64_imm8     
  movl $0x20, %ecx                  #  141   0x7473b  5      OPC=movl_r32_imm32    
  cmovaeq %rax, %rcx                #  142   0x74740  4      OPC=cmovaeq_r64_r64   
  movq 0x8(%rsp), %rdx              #  143   0x74744  5      OPC=movq_r64_m64      
  movq %r12, %rsi                   #  144   0x74749  3      OPC=movq_r64_r64      
  leaq 0x3174f0(%rip), %rdi         #  145   0x7474c  7      OPC=leaq_r64_m16      
  callq ._int_realloc               #  146   0x74753  5      OPC=callq_label       
  movq %rax, %rbp                   #  147   0x74758  3      OPC=movq_r64_r64      
.L_74758:                           #        0x7475b  0      OPC=<label>           
  testq %rbp, %rbp                  #  148   0x7475b  3      OPC=testq_r64_r64     
  jne .L_74769                      #  149   0x7475e  2      OPC=jne_label         
.L_7475d:                           #        0x74760  0      OPC=<label>           
  movq 0x18(%rsp), %rax             #  150   0x74760  5      OPC=movq_r64_m64      
  notb (%rax)                       #  151   0x74765  2      OPC=notb_m8           
  movl $0x0, %ebp                   #  152   0x74767  5      OPC=movl_r32_imm32    
.L_74769:                           #        0x7476c  0      OPC=<label>           
  cmpl $0x0, 0x31c490(%rip)         #  153   0x7476c  7      OPC=cmpl_m32_imm8     
  je .L_7477d                       #  154   0x74773  2      OPC=je_label          
  lock                              #  155   0x74775  1      OPC=lock              
  decl 0x3174c7(%rip)               #  156   0x74776  6      OPC=decl_m32          
  nop                               #  157   0x7477c  1      OPC=nop               
  jne .L_74785                      #  158   0x7477d  2      OPC=jne_label         
  jmpq .L_7479f                     #  159   0x7477f  2      OPC=jmpq_label        
.L_7477d:                           #        0x74781  0      OPC=<label>           
  decl 0x3174bd(%rip)               #  160   0x74781  6      OPC=decl_m32          
  je .L_7479f                       #  161   0x74787  2      OPC=je_label          
.L_74785:                           #        0x74789  0      OPC=<label>           
  leaq 0x3174b4(%rip), %rdi         #  162   0x74789  7      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  163   0x74790  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  164   0x74797  5      OPC=callq_label       
  addq $0x80, %rsp                  #  165   0x7479c  7      OPC=addq_r64_imm32    
.L_7479f:                           #        0x747a3  0      OPC=<label>           
  movq %rbx, %rsi                   #  166   0x747a3  3      OPC=movq_r64_r64      
  movq %rbp, %rdi                   #  167   0x747a6  3      OPC=movq_r64_r64      
  callq .mem2mem_check              #  168   0x747a9  5      OPC=callq_label       
.L_747aa:                           #        0x747ae  0      OPC=<label>           
  addq $0x28, %rsp                  #  169   0x747ae  4      OPC=addq_r64_imm8     
  popq %rbx                         #  170   0x747b2  1      OPC=popq_r64_1        
  popq %rbp                         #  171   0x747b3  1      OPC=popq_r64_1        
  popq %r12                         #  172   0x747b4  2      OPC=popq_r64_1        
  popq %r13                         #  173   0x747b6  2      OPC=popq_r64_1        
  popq %r14                         #  174   0x747b8  2      OPC=popq_r64_1        
  popq %r15                         #  175   0x747ba  2      OPC=popq_r64_1        
  retq                              #  176   0x747bc  1      OPC=retq              
                                                                                   
.size realloc_check, .-realloc_check

