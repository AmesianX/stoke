  .text
  .globl add_module
  .type add_module, @function

#! file-offset 0x21be7
#! rip-offset  0x21be7
#! capacity    823 bytes

# Text                               #  Line  RIP      Bytes  Opcode               
.add_module:                         #        0x21be7  0      OPC=<label>          
  pushq %rbp                         #  1     0x21be7  1      OPC=pushq_r64_1      
  movq %rsp, %rbp                    #  2     0x21be8  3      OPC=movq_r64_r64     
  pushq %r15                         #  3     0x21beb  2      OPC=pushq_r64_1      
  pushq %r14                         #  4     0x21bed  2      OPC=pushq_r64_1      
  pushq %r13                         #  5     0x21bef  2      OPC=pushq_r64_1      
  pushq %r12                         #  6     0x21bf1  2      OPC=pushq_r64_1      
  pushq %rbx                         #  7     0x21bf3  1      OPC=pushq_r64_1      
  subq $0x58, %rsp                   #  8     0x21bf4  4      OPC=subq_r64_imm8    
  movq %rdi, %r12                    #  9     0x21bf8  3      OPC=movq_r64_r64     
  movq %rsi, -0x60(%rbp)             #  10    0x21bfb  4      OPC=movq_m64_r64     
  movq %rdx, -0x58(%rbp)             #  11    0x21bff  4      OPC=movq_m64_r64     
  movl %r9d, -0x64(%rbp)             #  12    0x21c03  4      OPC=movl_m32_r32     
  movq 0x36811a(%rip), %rcx          #  13    0x21c07  7      OPC=movq_r64_m64     
  movsbq (%rdi), %rax                #  14    0x21c0e  4      OPC=movsbq_r64_m8    
  testb $0x20, 0x1(%rcx,%rax,2)      #  15    0x21c12  5      OPC=testb_m8_imm8    
  je .L_21e6c                        #  16    0x21c17  6      OPC=je_label_1       
.L_21c1d:                            #        0x21c1d  0      OPC=<label>          
  addq $0x1, %r12                    #  17    0x21c1d  4      OPC=addq_r64_imm8    
  movsbq (%r12), %rax                #  18    0x21c21  5      OPC=movsbq_r64_m8    
  testb $0x20, 0x1(%rcx,%rax,2)      #  19    0x21c26  5      OPC=testb_m8_imm8    
  jne .L_21c1d                       #  20    0x21c2b  2      OPC=jne_label        
  jmpq .L_21e6c                      #  21    0x21c2d  5      OPC=jmpq_label_1     
.L_21c32:                            #        0x21c32  0      OPC=<label>          
  movl (%rsi,%rax,4), %eax           #  22    0x21c32  3      OPC=movl_r32_m32     
  movb %al, (%rdx)                   #  23    0x21c35  2      OPC=movb_m8_r8       
  addq $0x1, %rdx                    #  24    0x21c37  4      OPC=addq_r64_imm8    
  movzbl (%rdx), %eax                #  25    0x21c3b  3      OPC=movzbl_r32_m8    
  testb %al, %al                     #  26    0x21c3e  2      OPC=testb_r8_r8      
  je .L_21f0f                        #  27    0x21c40  6      OPC=je_label_1       
  movsbq %al, %rax                   #  28    0x21c46  4      OPC=movsbq_r64_r8    
  testb $0x20, 0x1(%rcx,%rax,2)      #  29    0x21c4a  5      OPC=testb_m8_imm8    
  je .L_21c32                        #  30    0x21c4f  2      OPC=je_label         
  jmpq .L_21e7a                      #  31    0x21c51  5      OPC=jmpq_label_1     
.L_21c56:                            #        0x21c56  0      OPC=<label>          
  addq $0x1, %rbx                    #  32    0x21c56  4      OPC=addq_r64_imm8    
  movsbq (%rbx), %rax                #  33    0x21c5a  4      OPC=movsbq_r64_m8    
  testb $0x20, 0x1(%rcx,%rax,2)      #  34    0x21c5e  5      OPC=testb_m8_imm8    
  jne .L_21c56                       #  35    0x21c63  2      OPC=jne_label        
  jmpq .L_21ea9                      #  36    0x21c65  5      OPC=jmpq_label_1     
.L_21c6a:                            #        0x21c6a  0      OPC=<label>          
  addq $0x1, %r13                    #  37    0x21c6a  4      OPC=addq_r64_imm8    
  addq $0x1, %rbx                    #  38    0x21c6e  4      OPC=addq_r64_imm8    
  movl (%rdx,%rax,4), %eax           #  39    0x21c72  3      OPC=movl_r32_m32     
  movb %al, -0x1(%r13)               #  40    0x21c75  4      OPC=movb_m8_r8       
  movzbl (%rbx), %eax                #  41    0x21c79  3      OPC=movzbl_r32_m8    
  testb %al, %al                     #  42    0x21c7c  2      OPC=testb_r8_r8      
  je .L_21f0f                        #  43    0x21c7e  6      OPC=je_label_1       
  movsbq %al, %rax                   #  44    0x21c84  4      OPC=movsbq_r64_r8    
  testb $0x20, 0x1(%rcx,%rax,2)      #  45    0x21c88  5      OPC=testb_m8_imm8    
  je .L_21c6a                        #  46    0x21c8d  2      OPC=je_label         
  jmpq .L_21eb2                      #  47    0x21c8f  5      OPC=jmpq_label_1     
.L_21c94:                            #        0x21c94  0      OPC=<label>          
  addq $0x1, %rbx                    #  48    0x21c94  4      OPC=addq_r64_imm8    
  movsbq (%rbx), %rax                #  49    0x21c98  4      OPC=movsbq_r64_m8    
  testb $0x20, 0x1(%rcx,%rax,2)      #  50    0x21c9c  5      OPC=testb_m8_imm8    
  jne .L_21c94                       #  51    0x21ca1  2      OPC=jne_label        
  movzbl (%rbx), %eax                #  52    0x21ca3  3      OPC=movzbl_r32_m8    
  testb %al, %al                     #  53    0x21ca6  2      OPC=testb_r8_r8      
  je .L_21ec4                        #  54    0x21ca8  6      OPC=je_label_1       
  movsbq %al, %rdx                   #  55    0x21cae  4      OPC=movsbq_r64_r8    
  testb $0x20, 0x1(%rcx,%rdx,2)      #  56    0x21cb2  5      OPC=testb_m8_imm8    
  jne .L_21edc                       #  57    0x21cb7  6      OPC=jne_label_1      
  movq -0x70(%rbp), %r14             #  58    0x21cbd  4      OPC=movq_r64_m64     
.L_21cc1:                            #        0x21cc1  0      OPC=<label>          
  addq $0x1, %r14                    #  59    0x21cc1  4      OPC=addq_r64_imm8    
  addq $0x1, %rbx                    #  60    0x21cc5  4      OPC=addq_r64_imm8    
  movb %al, -0x1(%r14)               #  61    0x21cc9  4      OPC=movb_m8_r8       
  movzbl (%rbx), %eax                #  62    0x21ccd  3      OPC=movzbl_r32_m8    
  testb %al, %al                     #  63    0x21cd0  2      OPC=testb_r8_r8      
  je .L_21ec8                        #  64    0x21cd2  6      OPC=je_label_1       
  movsbq %al, %rdx                   #  65    0x21cd8  4      OPC=movsbq_r64_r8    
  testb $0x20, 0x1(%rcx,%rdx,2)      #  66    0x21cdc  5      OPC=testb_m8_imm8    
  je .L_21cc1                        #  67    0x21ce1  2      OPC=je_label         
  jmpq .L_21ee0                      #  68    0x21ce3  5      OPC=jmpq_label_1     
.L_21ce8:                            #        0x21ce8  0      OPC=<label>          
  movl $0x1, -0x68(%rbp)             #  69    0x21ce8  7      OPC=movl_m32_imm32   
.L_21cef:                            #        0x21cef  0      OPC=<label>          
  leaq 0x1(%r14), %rdx               #  70    0x21cef  4      OPC=leaq_r64_m16     
.L_21cf3:                            #        0x21cf3  0      OPC=<label>          
  movzbl 0x1(%r13), %eax             #  71    0x21cf3  5      OPC=movzbl_r32_m8    
  testb %al, %al                     #  72    0x21cf8  2      OPC=testb_r8_r8      
  je .L_21f0f                        #  73    0x21cfa  6      OPC=je_label_1       
  cmpb $0x2f, %al                    #  74    0x21d00  2      OPC=cmpb_al_imm8     
  movl $0x0, %eax                    #  75    0x21d02  5      OPC=movl_r32_imm32   
  cmovneq -0x58(%rbp), %rax          #  76    0x21d07  5      OPC=cmovneq_r64_m64  
  movq %rax, -0x58(%rbp)             #  77    0x21d0c  4      OPC=movq_m64_r64     
  movq %rdx, -0x78(%rbp)             #  78    0x21d10  4      OPC=movq_m64_r64     
  movq %rdx, %r13                    #  79    0x21d14  3      OPC=movq_r64_r64     
  subq -0x70(%rbp), %r13             #  80    0x21d17  4      OPC=subq_r64_m64     
  movl $0x3, %ebx                    #  81    0x21d1b  5      OPC=movl_r32_imm32   
  cmpq $0x3, %r13                    #  82    0x21d20  4      OPC=cmpq_r64_imm8    
  jle .L_21d45                       #  83    0x21d24  2      OPC=jle_label        
  leaq -0x4(%rdx), %rdi              #  84    0x21d26  4      OPC=leaq_r64_m16     
  movl $0x4, %edx                    #  85    0x21d2a  5      OPC=movl_r32_imm32   
  leaq 0x1357e2(%rip), %rsi          #  86    0x21d2f  7      OPC=leaq_r64_m16     
  callq .__GI_memcmp                 #  87    0x21d36  5      OPC=callq_label      
  cmpl $0x1, %eax                    #  88    0x21d3b  3      OPC=cmpl_r32_imm8    
  sbbl %ebx, %ebx                    #  89    0x21d3e  2      OPC=sbbl_r32_r32     
  notl %ebx                          #  90    0x21d40  2      OPC=notl_r32         
  andl $0x3, %ebx                    #  91    0x21d42  3      OPC=andl_r32_imm8    
.L_21d45:                            #        0x21d45  0      OPC=<label>          
  movq %r15, %r14                    #  92    0x21d45  3      OPC=movq_r64_r64     
  subq %r12, %r14                    #  93    0x21d48  3      OPC=subq_r64_r64     
  movq %r14, %rsi                    #  94    0x21d4b  3      OPC=movq_r64_r64     
  movq %r12, %rdi                    #  95    0x21d4e  3      OPC=movq_r64_r64     
  callq .strnlen                     #  96    0x21d51  5      OPC=callq_label      
  leaq 0x1f(%rax), %rdx              #  97    0x21d56  4      OPC=leaq_r64_m16     
  andq $0xf0, %rdx                   #  98    0x21d5a  4      OPC=andq_r64_imm8    
  subq %rdx, %rsp                    #  99    0x21d5e  3      OPC=subq_r64_r64     
  leaq 0xf(%rsp), %rdi               #  100   0x21d61  5      OPC=leaq_r64_m16     
  andq $0xf0, %rdi                   #  101   0x21d66  4      OPC=andq_r64_imm8    
  movb $0x0, (%rdi,%rax,1)           #  102   0x21d6a  4      OPC=movb_m8_imm8     
  movq %rax, %rdx                    #  103   0x21d6e  3      OPC=movq_r64_r64     
  movq %r12, %rsi                    #  104   0x21d71  3      OPC=movq_r64_r64     
  callq .__GI_memcpy                 #  105   0x21d74  5      OPC=callq_label      
  movq %rax, -0x40(%rbp)             #  106   0x21d79  4      OPC=movq_m64_r64     
  leaq -0x40(%rbp), %rdi             #  107   0x21d7d  4      OPC=leaq_r64_m16     
  leaq -0x129d(%rip), %rdx           #  108   0x21d81  7      OPC=leaq_r64_m16     
  leaq 0x36ea21(%rip), %rsi          #  109   0x21d88  7      OPC=leaq_r64_m16     
  callq .__tfind                     #  110   0x21d8f  5      OPC=callq_label      
  testq %rax, %rax                   #  111   0x21d94  3      OPC=testq_r64_r64    
  jne .L_21f0f                       #  112   0x21d97  6      OPC=jne_label_1      
  movq -0x78(%rbp), %rax             #  113   0x21d9d  4      OPC=movq_r64_m64     
  subq %r12, %rax                    #  114   0x21da1  3      OPC=subq_r64_r64     
  movq -0x58(%rbp), %rdi             #  115   0x21da4  4      OPC=movq_r64_m64     
  leaq 0x38(%rdi,%rax,1), %rsi       #  116   0x21da8  5      OPC=leaq_r64_m16     
  movslq %ebx, %rax                  #  117   0x21dad  3      OPC=movslq_r64_r32   
  addq %rax, %rsi                    #  118   0x21db0  3      OPC=addq_r64_r64     
  movl $0x1, %edi                    #  119   0x21db3  5      OPC=movl_r32_imm32   
  callq .L_1f8c0                     #  120   0x21db8  5      OPC=callq_label      
  testq %rax, %rax                   #  121   0x21dbd  3      OPC=testq_r64_r64    
  je .L_21f0f                        #  122   0x21dc0  6      OPC=je_label_1       
  leaq 0x38(%rax), %rdi              #  123   0x21dc6  4      OPC=leaq_r64_m16     
  movq %rax, -0x78(%rbp)             #  124   0x21dca  4      OPC=movq_m64_r64     
  movq %rdi, (%rax)                  #  125   0x21dce  3      OPC=movq_m64_r64     
  movq %r14, %rdx                    #  126   0x21dd1  3      OPC=movq_r64_r64     
  movq %r12, %rsi                    #  127   0x21dd4  3      OPC=movq_r64_r64     
  callq .__GI_memcpy                 #  128   0x21dd7  5      OPC=callq_label      
  leaq (%rax,%r14,1), %rdi           #  129   0x21ddc  4      OPC=leaq_r64_m16     
  movq -0x78(%rbp), %r14             #  130   0x21de0  4      OPC=movq_r64_m64     
  movq %rdi, 0x8(%r14)               #  131   0x21de4  4      OPC=movq_m64_r64     
  movq -0x70(%rbp), %r12             #  132   0x21de8  4      OPC=movq_r64_m64     
  subq %r15, %r12                    #  133   0x21dec  3      OPC=subq_r64_r64     
  movq %r12, %rdx                    #  134   0x21def  3      OPC=movq_r64_r64     
  movq %r15, %rsi                    #  135   0x21df2  3      OPC=movq_r64_r64     
  callq .__GI_memcpy                 #  136   0x21df5  5      OPC=callq_label      
  leaq (%rax,%r12,1), %rdi           #  137   0x21dfa  4      OPC=leaq_r64_m16     
  movl -0x68(%rbp), %esi             #  138   0x21dfe  3      OPC=movl_r32_m32     
  movl %esi, 0x10(%r14)              #  139   0x21e01  4      OPC=movl_m32_r32     
  movl -0x64(%rbp), %esi             #  140   0x21e05  3      OPC=movl_r32_m32     
  movl %esi, 0x14(%r14)              #  141   0x21e08  4      OPC=movl_m32_r32     
  movq %rdi, 0x18(%r14)              #  142   0x21e0c  4      OPC=movq_m64_r64     
  cmpq $0x0, -0x58(%rbp)             #  143   0x21e10  5      OPC=cmpq_m64_imm8    
  je .L_21e2d                        #  144   0x21e15  2      OPC=je_label         
  movq -0x58(%rbp), %r15             #  145   0x21e17  4      OPC=movq_r64_m64     
  movq %r15, %rdx                    #  146   0x21e1b  3      OPC=movq_r64_r64     
  movq -0x60(%rbp), %rsi             #  147   0x21e1e  4      OPC=movq_r64_m64     
  callq .__GI_memcpy                 #  148   0x21e22  5      OPC=callq_label      
  movq %r15, %rdi                    #  149   0x21e27  3      OPC=movq_r64_r64     
  addq %rax, %rdi                    #  150   0x21e2a  3      OPC=addq_r64_r64     
.L_21e2d:                            #        0x21e2d  0      OPC=<label>          
  movq %r13, %rdx                    #  151   0x21e2d  3      OPC=movq_r64_r64     
  movq -0x70(%rbp), %rsi             #  152   0x21e30  4      OPC=movq_r64_m64     
  callq .__GI_memcpy                 #  153   0x21e34  5      OPC=callq_label      
  testl %ebx, %ebx                   #  154   0x21e39  2      OPC=testl_r32_r32    
  je .L_21e46                        #  155   0x21e3b  2      OPC=je_label         
  movl $0x6f732e, -0x1(%r13,%rax,1)  #  156   0x21e3d  9      OPC=movl_m32_imm32   
.L_21e46:                            #        0x21e46  0      OPC=<label>          
  movl $0x1, %esi                    #  157   0x21e46  5      OPC=movl_r32_imm32   
  movq -0x78(%rbp), %rdi             #  158   0x21e4b  4      OPC=movq_r64_m64     
  callq .insert_module               #  159   0x21e4f  5      OPC=callq_label      
  jmpq .L_21f0f                      #  160   0x21e54  5      OPC=jmpq_label_1     
.L_21e59:                            #        0x21e59  0      OPC=<label>          
  movsbq %al, %rax                   #  161   0x21e59  4      OPC=movsbq_r64_r8    
  movq 0x367ed4(%rip), %rsi          #  162   0x21e5d  7      OPC=movq_r64_m64     
  movq %r12, %rdx                    #  163   0x21e64  3      OPC=movq_r64_r64     
  jmpq .L_21c32                      #  164   0x21e67  5      OPC=jmpq_label_1     
.L_21e6c:                            #        0x21e6c  0      OPC=<label>          
  movzbl (%r12), %eax                #  165   0x21e6c  5      OPC=movzbl_r32_m8    
  testb %al, %al                     #  166   0x21e71  2      OPC=testb_r8_r8      
  jne .L_21e59                       #  167   0x21e73  2      OPC=jne_label        
  jmpq .L_21f0f                      #  168   0x21e75  5      OPC=jmpq_label_1     
.L_21e7a:                            #        0x21e7a  0      OPC=<label>          
  leaq 0x1(%rdx), %r15               #  169   0x21e7a  4      OPC=leaq_r64_m16     
  movb $0x0, (%rdx)                  #  170   0x21e7e  3      OPC=movb_m8_imm8     
  movsbq 0x1(%rdx), %rax             #  171   0x21e81  5      OPC=movsbq_r64_m8    
  movq %r15, %rbx                    #  172   0x21e86  3      OPC=movq_r64_r64     
  testb $0x20, 0x1(%rcx,%rax,2)      #  173   0x21e89  5      OPC=testb_m8_imm8    
  jne .L_21c56                       #  174   0x21e8e  6      OPC=jne_label_1      
  jmpq .L_21ea9                      #  175   0x21e94  2      OPC=jmpq_label       
.L_21e96:                            #        0x21e96  0      OPC=<label>          
  movsbq %al, %rax                   #  176   0x21e96  4      OPC=movsbq_r64_r8    
  movq 0x367e97(%rip), %rdx          #  177   0x21e9a  7      OPC=movq_r64_m64     
  movq %r15, %r13                    #  178   0x21ea1  3      OPC=movq_r64_r64     
  jmpq .L_21c6a                      #  179   0x21ea4  5      OPC=jmpq_label_1     
.L_21ea9:                            #        0x21ea9  0      OPC=<label>          
  movzbl (%rbx), %eax                #  180   0x21ea9  3      OPC=movzbl_r32_m8    
  testb %al, %al                     #  181   0x21eac  2      OPC=testb_r8_r8      
  jne .L_21e96                       #  182   0x21eae  2      OPC=jne_label        
  jmpq .L_21f0f                      #  183   0x21eb0  2      OPC=jmpq_label       
.L_21eb2:                            #        0x21eb2  0      OPC=<label>          
  leaq 0x1(%r13), %rax               #  184   0x21eb2  4      OPC=leaq_r64_m16     
  movq %rax, -0x70(%rbp)             #  185   0x21eb6  4      OPC=movq_m64_r64     
  movb $0x0, (%r13)                  #  186   0x21eba  5      OPC=movb_m8_imm8     
  jmpq .L_21c94                      #  187   0x21ebf  5      OPC=jmpq_label_1     
.L_21ec4:                            #        0x21ec4  0      OPC=<label>          
  movq -0x70(%rbp), %r14             #  188   0x21ec4  4      OPC=movq_r64_m64     
.L_21ec8:                            #        0x21ec8  0      OPC=<label>          
  leaq 0x1(%r14), %rdx               #  189   0x21ec8  4      OPC=leaq_r64_m16     
  movb $0x0, (%r14)                  #  190   0x21ecc  4      OPC=movb_m8_imm8     
  movl $0x1, -0x68(%rbp)             #  191   0x21ed0  7      OPC=movl_m32_imm32   
  jmpq .L_21cf3                      #  192   0x21ed7  5      OPC=jmpq_label_1     
.L_21edc:                            #        0x21edc  0      OPC=<label>          
  movq -0x70(%rbp), %r14             #  193   0x21edc  4      OPC=movq_r64_m64     
.L_21ee0:                            #        0x21ee0  0      OPC=<label>          
  movb $0x0, (%r14)                  #  194   0x21ee0  4      OPC=movb_m8_imm8     
  leaq -0x48(%rbp), %rsi             #  195   0x21ee4  4      OPC=leaq_r64_m16     
  movl $0xa, %edx                    #  196   0x21ee8  5      OPC=movl_r32_imm32   
  movq %rbx, %rdi                    #  197   0x21eed  3      OPC=movq_r64_r64     
  callq .strtol                      #  198   0x21ef0  5      OPC=callq_label      
  movl %eax, -0x68(%rbp)             #  199   0x21ef5  3      OPC=movl_m32_r32     
  testl %eax, %eax                   #  200   0x21ef8  2      OPC=testl_r32_r32    
  jle .L_21ce8                       #  201   0x21efa  6      OPC=jle_label_1      
  cmpq -0x48(%rbp), %rbx             #  202   0x21f00  4      OPC=cmpq_r64_m64     
  jne .L_21cef                       #  203   0x21f04  6      OPC=jne_label_1      
  jmpq .L_21ce8                      #  204   0x21f0a  5      OPC=jmpq_label_1     
.L_21f0f:                            #        0x21f0f  0      OPC=<label>          
  leaq -0x28(%rbp), %rsp             #  205   0x21f0f  4      OPC=leaq_r64_m16     
  popq %rbx                          #  206   0x21f13  1      OPC=popq_r64_1       
  popq %r12                          #  207   0x21f14  2      OPC=popq_r64_1       
  popq %r13                          #  208   0x21f16  2      OPC=popq_r64_1       
  popq %r14                          #  209   0x21f18  2      OPC=popq_r64_1       
  popq %r15                          #  210   0x21f1a  2      OPC=popq_r64_1       
  popq %rbp                          #  211   0x21f1c  1      OPC=popq_r64_1       
  retq                               #  212   0x21f1d  1      OPC=retq             
                                                                                   
.size add_module, .-add_module

