  .text
  .globl sysmalloc
  .type sysmalloc, @function

#! file-offset 0x729e7
#! rip-offset  0x729e7
#! capacity    1990 bytes

# Text                           #  Line  RIP      Bytes  Opcode                
.sysmalloc:                      #        0x729e7  0      OPC=<label>           
  pushq %r15                     #  1     0x729e7  2      OPC=pushq_r64_1       
  pushq %r14                     #  2     0x729e9  2      OPC=pushq_r64_1       
  pushq %r13                     #  3     0x729eb  2      OPC=pushq_r64_1       
  pushq %r12                     #  4     0x729ed  2      OPC=pushq_r64_1       
  pushq %rbp                     #  5     0x729ef  1      OPC=pushq_r64_1       
  pushq %rbx                     #  6     0x729f0  1      OPC=pushq_r64_1       
  subq $0x38, %rsp               #  7     0x729f1  4      OPC=subq_r64_imm8     
  movq %rdi, %rbp                #  8     0x729f5  3      OPC=movq_r64_r64      
  movq %rsi, %rbx                #  9     0x729f8  3      OPC=movq_r64_r64      
  movq 0x318476(%rip), %rax      #  10    0x729fb  7      OPC=movq_r64_m64      
  movq 0x18(%rax), %r13          #  11    0x72a02  4      OPC=movq_r64_m64      
  testq %rsi, %rsi               #  12    0x72a06  3      OPC=testq_r64_r64     
  je .L_730df                    #  13    0x72a09  6      OPC=je_label_1        
  cmpq %rdi, 0x3187fa(%rip)      #  14    0x72a0f  7      OPC=cmpq_m64_r64      
  ja .L_72b0c                    #  15    0x72a16  6      OPC=ja_label_1        
  movl 0x31880a(%rip), %eax      #  16    0x72a1c  6      OPC=movl_r32_m32      
  cmpl %eax, 0x318800(%rip)      #  17    0x72a22  6      OPC=cmpl_m32_r32      
  jl .L_7312b                    #  18    0x72a28  6      OPC=jl_label_1        
  movb $0x0, 0x1f(%rsp)          #  19    0x72a2e  5      OPC=movb_m8_imm8      
  jmpq .L_72b11                  #  20    0x72a33  5      OPC=jmpq_label_1      
.L_72a38:                        #        0x72a38  0      OPC=<label>           
  movq 0x28(%rsp), %rax          #  21    0x72a38  5      OPC=movq_r64_m64      
  movq %rax, %r12                #  22    0x72a3d  3      OPC=movq_r64_r64      
  cmpq %rax, %rbp                #  23    0x72a40  3      OPC=cmpq_r64_r64      
  jae .L_72afd                   #  24    0x72a43  6      OPC=jae_label_1       
  movq %rax, %rsi                #  25    0x72a49  3      OPC=movq_r64_r64      
  movq %rax, %r14                #  26    0x72a4c  3      OPC=movq_r64_r64      
  movl $0x0, %r9d                #  27    0x72a4f  6      OPC=movl_r32_imm32    
  movl $0xffffffff, %r8d         #  28    0x72a55  7      OPC=movl_r32_imm32_1  
  movl $0x22, %ecx               #  29    0x72a5c  5      OPC=movl_r32_imm32    
  movl $0x3, %edx                #  30    0x72a61  5      OPC=movl_r32_imm32    
  movl $0x0, %edi                #  31    0x72a66  5      OPC=movl_r32_imm32    
  callq .mmap                    #  32    0x72a6b  5      OPC=callq_label       
  cmpq $0xff, %rax               #  33    0x72a70  4      OPC=cmpq_r64_imm8     
  je .L_72afd                    #  34    0x72a74  6      OPC=je_label_1        
.L_72a79:                        #        0x72a7a  0      OPC=<label>           
  leaq 0x10(%rax), %rdx          #  35    0x72a7a  4      OPC=leaq_r64_m16      
  testb $0xf, %dl                #  36    0x72a7e  3      OPC=testb_r8_imm8     
  je .L_72aa1                    #  37    0x72a81  2      OPC=je_label          
  leaq 0xe6205(%rip), %rcx       #  38    0x72a83  7      OPC=leaq_r64_m16      
  movl $0x925, %edx              #  39    0x72a8a  5      OPC=movl_r32_imm32    
  leaq 0xe5e8a(%rip), %rsi       #  40    0x72a8f  7      OPC=leaq_r64_m16      
  leaq 0xe963c(%rip), %rdi       #  41    0x72a96  7      OPC=leaq_r64_m16      
  callq .__malloc_assert         #  42    0x72a9d  5      OPC=callq_label       
.L_72aa1:                        #        0x72aa2  0      OPC=<label>           
  orq $0x2, %r14                 #  43    0x72aa2  4      OPC=orq_r64_imm8      
  movq %r14, 0x8(%rax)           #  44    0x72aa6  4      OPC=movq_m64_r64      
  movl $0x1, %ecx                #  45    0x72aaa  5      OPC=movl_r32_imm32    
  lock                           #  46    0x72aaf  1      OPC=lock              
  xaddl %ecx, 0x318772(%rip)     #  47    0x72ab0  7      OPC=xaddl_m32_r32     
  nop                            #  48    0x72ab7  1      OPC=nop               
  addl $0x1, %ecx                #  49    0x72ab8  3      OPC=addl_r32_imm8     
.L_72ab9:                        #        0x72abb  0      OPC=<label>           
  movl 0x318771(%rip), %eax      #  50    0x72abb  6      OPC=movl_r32_m32      
  cmpl %eax, %ecx                #  51    0x72ac1  2      OPC=cmpl_r32_r32      
  jle .L_72acd                   #  52    0x72ac3  2      OPC=jle_label         
  lock                           #  53    0x72ac5  1      OPC=lock              
  cmpxchgl %ecx, 0x318765(%rip)  #  54    0x72ac6  7      OPC=cmpxchgl_m32_r32  
  nop                            #  55    0x72acd  1      OPC=nop               
  jne .L_72ab9                   #  56    0x72ace  2      OPC=jne_label         
.L_72acd:                        #        0x72ad0  0      OPC=<label>           
  movq %r12, %r13                #  57    0x72ad0  3      OPC=movq_r64_r64      
  lock                           #  58    0x72ad3  1      OPC=lock              
  xaddq %r13, 0x31875f(%rip)     #  59    0x72ad4  8      OPC=xaddq_m64_r64     
  nop                            #  60    0x72adc  1      OPC=nop               
  addq %r13, %r12                #  61    0x72add  3      OPC=addq_r64_r64      
.L_72adc:                        #        0x72ae0  0      OPC=<label>           
  movq 0x31875d(%rip), %rax      #  62    0x72ae0  7      OPC=movq_r64_m64      
  cmpq %rax, %r12                #  63    0x72ae7  3      OPC=cmpq_r64_r64      
  jbe .L_7319b                   #  64    0x72aea  6      OPC=jbe_label_1       
  lock                           #  65    0x72af0  1      OPC=lock              
  cmpxchgq %r12, 0x31874b(%rip)  #  66    0x72af1  8      OPC=cmpxchgq_m64_r64  
  nop                            #  67    0x72af9  1      OPC=nop               
  je .L_7319b                    #  68    0x72afa  6      OPC=je_label_1        
  jmpq .L_72adc                  #  69    0x72b00  2      OPC=jmpq_label        
.L_72afd:                        #        0x72b02  0      OPC=<label>           
  movb $0x1, 0x1f(%rsp)          #  70    0x72b02  5      OPC=movb_m8_imm8      
  testq %rbx, %rbx               #  71    0x72b07  3      OPC=testq_r64_r64     
  jne .L_72b2c                   #  72    0x72b0a  2      OPC=jne_label         
  jmpq .L_730d5                  #  73    0x72b0c  5      OPC=jmpq_label_1      
.L_72b0c:                        #        0x72b11  0      OPC=<label>           
  movb $0x0, 0x1f(%rsp)          #  74    0x72b11  5      OPC=movb_m8_imm8      
.L_72b11:                        #        0x72b16  0      OPC=<label>           
  movq %r13, %rax                #  75    0x72b16  3      OPC=movq_r64_r64      
  negq %rax                      #  76    0x72b19  3      OPC=negq_r64          
  movq %rax, %rsi                #  77    0x72b1c  3      OPC=movq_r64_r64      
  movq %rax, 0x20(%rsp)          #  78    0x72b1f  5      OPC=movq_m64_r64      
  leaq 0x7(%r13,%rbp,1), %rax    #  79    0x72b24  5      OPC=leaq_r64_m16      
  andq %rsi, %rax                #  80    0x72b29  3      OPC=andq_r64_r64      
  movq %rax, 0x28(%rsp)          #  81    0x72b2c  5      OPC=movq_m64_r64      
.L_72b2c:                        #        0x72b31  0      OPC=<label>           
  movq 0x58(%rbx), %r15          #  82    0x72b31  4      OPC=movq_r64_m64      
  movq 0x8(%r15), %rax           #  83    0x72b35  4      OPC=movq_r64_m64      
  movq %rax, %r12                #  84    0x72b39  3      OPC=movq_r64_r64      
  andq $0xf8, %r12               #  85    0x72b3c  4      OPC=andq_r64_imm8     
  leaq (%r15,%r12,1), %r14       #  86    0x72b40  4      OPC=leaq_r64_m16      
  testq %r12, %r12               #  87    0x72b44  3      OPC=testq_r64_r64     
  setne %cl                      #  88    0x72b47  3      OPC=setne_r8          
  jne .L_72b50                   #  89    0x72b4a  2      OPC=jne_label         
  leaq 0x58(%rbx), %rdx          #  90    0x72b4c  4      OPC=leaq_r64_m16      
  cmpq %rdx, %r15                #  91    0x72b50  3      OPC=cmpq_r64_r64      
  je .L_72b82                    #  92    0x72b53  2      OPC=je_label          
.L_72b50:                        #        0x72b55  0      OPC=<label>           
  cmpq $0x1f, %r12               #  93    0x72b55  4      OPC=cmpq_r64_imm8     
  jbe .L_72b63                   #  94    0x72b59  2      OPC=jbe_label         
  testb $0x1, %al                #  95    0x72b5b  2      OPC=testb_al_imm8     
  je .L_72b63                    #  96    0x72b5d  2      OPC=je_label          
  leaq -0x1(%r13), %rax          #  97    0x72b5f  4      OPC=leaq_r64_m16      
  testq %rax, %r14               #  98    0x72b63  3      OPC=testq_r64_r64     
  je .L_72b82                    #  99    0x72b66  2      OPC=je_label          
.L_72b63:                        #        0x72b68  0      OPC=<label>           
  leaq 0xe6124(%rip), %rcx       #  100   0x72b68  7      OPC=leaq_r64_m16      
  movl $0x95b, %edx              #  101   0x72b6f  5      OPC=movl_r32_imm32    
  leaq 0xe5da9(%rip), %rsi       #  102   0x72b74  7      OPC=leaq_r64_m16      
  leaq 0xe959b(%rip), %rdi       #  103   0x72b7b  7      OPC=leaq_r64_m16      
  callq .__malloc_assert         #  104   0x72b82  5      OPC=callq_label       
.L_72b82:                        #        0x72b87  0      OPC=<label>           
  leaq 0x20(%rbp), %rax          #  105   0x72b87  4      OPC=leaq_r64_m16      
  movq %rax, (%rsp)              #  106   0x72b8b  4      OPC=movq_m64_r64      
  cmpq %rax, %r12                #  107   0x72b8f  3      OPC=cmpq_r64_r64      
  jb .L_72bae                    #  108   0x72b92  2      OPC=jb_label          
  leaq 0xe60f8(%rip), %rcx       #  109   0x72b94  7      OPC=leaq_r64_m16      
  movl $0x95e, %edx              #  110   0x72b9b  5      OPC=movl_r32_imm32    
  leaq 0xe5d7d(%rip), %rsi       #  111   0x72ba0  7      OPC=leaq_r64_m16      
  leaq 0xe9617(%rip), %rdi       #  112   0x72ba7  7      OPC=leaq_r64_m16      
  callq .__malloc_assert         #  113   0x72bae  5      OPC=callq_label       
.L_72bae:                        #        0x72bb3  0      OPC=<label>           
  leaq 0x31908b(%rip), %rax      #  114   0x72bb3  7      OPC=leaq_r64_m16      
  cmpq %rax, %rbx                #  115   0x72bba  3      OPC=cmpq_r64_r64      
  je .L_72d26                    #  116   0x72bbd  6      OPC=je_label_1        
  movq %r15, %r14                #  117   0x72bc3  3      OPC=movq_r64_r64      
  andq $0xfc000000, %r14         #  118   0x72bc6  7      OPC=andq_r64_imm32    
  movq 0x10(%r14), %rax          #  119   0x72bcd  4      OPC=movq_r64_m64      
  movq %rax, %rdi                #  120   0x72bd1  3      OPC=movq_r64_r64      
  movq %rax, 0x10(%rsp)          #  121   0x72bd4  5      OPC=movq_m64_r64      
  movq %rbp, %rax                #  122   0x72bd9  3      OPC=movq_r64_r64      
  subq %r12, %rax                #  123   0x72bdc  3      OPC=subq_r64_r64      
  addq $0x20, %rax               #  124   0x72bdf  4      OPC=addq_r64_imm8     
  testq %rax, %rax               #  125   0x72be3  3      OPC=testq_r64_r64     
  jle .L_72c69                   #  126   0x72be6  6      OPC=jle_label_1       
  leaq -0x1(%r13,%rax,1), %rax   #  127   0x72bec  5      OPC=leaq_r64_m16      
  andq 0x20(%rsp), %rax          #  128   0x72bf1  5      OPC=andq_r64_m64      
  addq %rdi, %rax                #  129   0x72bf6  3      OPC=addq_r64_r64      
  movq %rax, 0x8(%rsp)           #  130   0x72bf9  5      OPC=movq_m64_r64      
  cmpq $0x4000000, %rax          #  131   0x72bfe  6      OPC=cmpq_rax_imm32    
  ja .L_72c69                    #  132   0x72c04  2      OPC=ja_label          
  movq 0x18(%r14), %rdi          #  133   0x72c06  4      OPC=movq_r64_m64      
  cmpq %rdi, %rax                #  134   0x72c0a  3      OPC=cmpq_r64_r64      
  jbe .L_72c2a                   #  135   0x72c0d  2      OPC=jbe_label         
  movq %rax, %rsi                #  136   0x72c0f  3      OPC=movq_r64_r64      
  subq %rdi, %rsi                #  137   0x72c12  3      OPC=subq_r64_r64      
  addq %r14, %rdi                #  138   0x72c15  3      OPC=addq_r64_r64      
  movl $0x3, %edx                #  139   0x72c18  5      OPC=movl_r32_imm32    
  callq .mprotect                #  140   0x72c1d  5      OPC=callq_label       
  testl %eax, %eax               #  141   0x72c22  2      OPC=testl_r32_r32     
  jne .L_72c69                   #  142   0x72c24  2      OPC=jne_label         
  movq 0x8(%rsp), %rsi           #  143   0x72c26  5      OPC=movq_r64_m64      
  movq %rsi, 0x18(%r14)          #  144   0x72c2b  4      OPC=movq_m64_r64      
.L_72c2a:                        #        0x72c2f  0      OPC=<label>           
  movq 0x8(%rsp), %rax           #  145   0x72c2f  5      OPC=movq_r64_m64      
  movq %rax, 0x10(%r14)          #  146   0x72c34  4      OPC=movq_m64_r64      
  movq %rax, %r12                #  147   0x72c38  3      OPC=movq_r64_r64      
  movq 0x10(%rsp), %rdi          #  148   0x72c3b  5      OPC=movq_r64_m64      
  subq %rdi, %r12                #  149   0x72c40  3      OPC=subq_r64_r64      
  addq %r12, 0x880(%rbx)         #  150   0x72c43  7      OPC=addq_m64_r64      
  movq 0x10(%r14), %rax          #  151   0x72c4a  4      OPC=movq_r64_m64      
  movq %rax, %rdx                #  152   0x72c4e  3      OPC=movq_r64_r64      
  subq %rdi, %rdx                #  153   0x72c51  3      OPC=subq_r64_r64      
  addq %rdx, 0x31ae12(%rip)      #  154   0x72c54  7      OPC=addq_m64_r64      
  addq %rax, %r14                #  155   0x72c5b  3      OPC=addq_r64_r64      
  subq %r15, %r14                #  156   0x72c5e  3      OPC=subq_r64_r64      
  orq $0x1, %r14                 #  157   0x72c61  4      OPC=orq_r64_imm8      
  movq %r14, 0x8(%r15)           #  158   0x72c65  4      OPC=movq_m64_r64      
  jmpq .L_73059                  #  159   0x72c69  5      OPC=jmpq_label_1      
.L_72c69:                        #        0x72c6e  0      OPC=<label>           
  leaq 0x40(%rbp), %rdi          #  160   0x72c6e  4      OPC=leaq_r64_m16      
  movq 0x318594(%rip), %rsi      #  161   0x72c72  7      OPC=movq_r64_m64      
  callq .new_heap                #  162   0x72c79  5      OPC=callq_label       
  testq %rax, %rax               #  163   0x72c7e  3      OPC=testq_r64_r64     
  je .L_72d16                    #  164   0x72c81  6      OPC=je_label_1        
  movq %rbx, (%rax)              #  165   0x72c87  3      OPC=movq_m64_r64      
  movq %r14, 0x8(%rax)           #  166   0x72c8a  4      OPC=movq_m64_r64      
  movq 0x10(%rax), %rdx          #  167   0x72c8e  4      OPC=movq_r64_m64      
  addq %rdx, 0x880(%rbx)         #  168   0x72c92  7      OPC=addq_m64_r64      
  movq 0x10(%rax), %rdx          #  169   0x72c99  4      OPC=movq_r64_m64      
  addq %rdx, 0x31adc9(%rip)      #  170   0x72c9d  7      OPC=addq_m64_r64      
  leaq 0x20(%rax), %rdx          #  171   0x72ca4  4      OPC=leaq_r64_m16      
  movq %rdx, 0x58(%rbx)          #  172   0x72ca8  4      OPC=movq_m64_r64      
  movq 0x10(%rax), %rsi          #  173   0x72cac  4      OPC=movq_r64_m64      
  leaq -0x20(%rsi), %rdx         #  174   0x72cb0  4      OPC=leaq_r64_m16      
  orq $0x1, %rdx                 #  175   0x72cb4  4      OPC=orq_r64_imm8      
  movq %rdx, 0x28(%rax)          #  176   0x72cb8  4      OPC=movq_m64_r64      
  leaq -0x20(%r12), %rax         #  177   0x72cbc  5      OPC=leaq_r64_m16      
  andq $0xf0, %rax               #  178   0x72cc1  4      OPC=andq_r64_imm8     
  leaq 0x10(%rax), %rdx          #  179   0x72cc5  4      OPC=leaq_r64_m16      
  leaq (%r15,%rdx,1), %rcx       #  180   0x72cc9  4      OPC=leaq_r64_m16      
  movq $0x1, 0x8(%rcx)           #  181   0x72ccd  8      OPC=movq_m64_imm32    
  cmpq $0x1f, %rax               #  182   0x72cd5  4      OPC=cmpq_r64_imm8     
  jbe .L_72d03                   #  183   0x72cd9  2      OPC=jbe_label         
  movq $0x11, 0x8(%r15,%rax,1)   #  184   0x72cdb  9      OPC=movq_m64_imm32    
  movq $0x10, (%rcx)             #  185   0x72ce4  7      OPC=movq_m64_imm32    
  orq $0x5, %rax                 #  186   0x72ceb  4      OPC=orq_r64_imm8      
  movq %rax, 0x8(%r15)           #  187   0x72cef  4      OPC=movq_m64_r64      
  movl $0x1, %edx                #  188   0x72cf3  5      OPC=movl_r32_imm32    
  movq %r15, %rsi                #  189   0x72cf8  3      OPC=movq_r64_r64      
  movq %rbx, %rdi                #  190   0x72cfb  3      OPC=movq_r64_r64      
  callq ._int_free               #  191   0x72cfe  5      OPC=callq_label       
  jmpq .L_73059                  #  192   0x72d03  5      OPC=jmpq_label_1      
.L_72d03:                        #        0x72d08  0      OPC=<label>           
  movq %rdx, %rax                #  193   0x72d08  3      OPC=movq_r64_r64      
  orq $0x1, %rax                 #  194   0x72d0b  4      OPC=orq_r64_imm8      
  movq %rax, 0x8(%r15)           #  195   0x72d0f  4      OPC=movq_m64_r64      
  movq %rdx, (%rcx)              #  196   0x72d13  3      OPC=movq_m64_r64      
  jmpq .L_73059                  #  197   0x72d16  5      OPC=jmpq_label_1      
.L_72d16:                        #        0x72d1b  0      OPC=<label>           
  cmpb $0x0, 0x1f(%rsp)          #  198   0x72d1b  5      OPC=cmpb_m8_imm8      
  jne .L_73059                   #  199   0x72d20  6      OPC=jne_label_1       
  jmpq .L_72a38                  #  200   0x72d26  5      OPC=jmpq_label_1      
.L_72d26:                        #        0x72d2b  0      OPC=<label>           
  movb %cl, 0x1f(%rsp)           #  201   0x72d2b  4      OPC=movb_m8_r8        
  movq 0x3184d7(%rip), %rax      #  202   0x72d2f  7      OPC=movq_r64_m64      
  leaq 0x20(%rbp,%rax,1), %rax   #  203   0x72d36  5      OPC=leaq_r64_m16      
  testb $0x2, 0x318f07(%rip)     #  204   0x72d3b  7      OPC=testb_m8_imm8     
  je .L_72d69                    #  205   0x72d42  2      OPC=je_label          
  leaq -0x1(%r13), %rcx          #  206   0x72d44  4      OPC=leaq_r64_m16      
  movq %rcx, %rdi                #  207   0x72d48  3      OPC=movq_r64_r64      
  movq %rcx, 0x28(%rsp)          #  208   0x72d4b  5      OPC=movq_m64_r64      
  negq %r13                      #  209   0x72d50  3      OPC=negq_r64          
  movq %r13, %rcx                #  210   0x72d53  3      OPC=movq_r64_r64      
  movq %r13, 0x20(%rsp)          #  211   0x72d56  5      OPC=movq_m64_r64      
  leaq (%rdi,%rax,1), %r13       #  212   0x72d5b  4      OPC=leaq_r64_m16      
  andq %rcx, %r13                #  213   0x72d5f  3      OPC=andq_r64_r64      
  movq %r13, 0x10(%rsp)          #  214   0x72d62  5      OPC=movq_m64_r64      
  testq %r13, %r13               #  215   0x72d67  3      OPC=testq_r64_r64     
  jg .L_72d94                    #  216   0x72d6a  2      OPC=jg_label          
  jmpq .L_72de4                  #  217   0x72d6c  2      OPC=jmpq_label        
.L_72d69:                        #        0x72d6e  0      OPC=<label>           
  leaq -0x1(%r13), %rcx          #  218   0x72d6e  4      OPC=leaq_r64_m16      
  movq %rcx, %rdi                #  219   0x72d72  3      OPC=movq_r64_r64      
  movq %rcx, 0x28(%rsp)          #  220   0x72d75  5      OPC=movq_m64_r64      
  negq %r13                      #  221   0x72d7a  3      OPC=negq_r64          
  movq %r13, %rcx                #  222   0x72d7d  3      OPC=movq_r64_r64      
  movq %r13, 0x20(%rsp)          #  223   0x72d80  5      OPC=movq_m64_r64      
  subq %r12, %rax                #  224   0x72d85  3      OPC=subq_r64_r64      
  leaq (%rdi,%rax,1), %r13       #  225   0x72d88  4      OPC=leaq_r64_m16      
  andq %rcx, %r13                #  226   0x72d8c  3      OPC=andq_r64_r64      
  movq %r13, 0x10(%rsp)          #  227   0x72d8f  5      OPC=movq_m64_r64      
  testq %r13, %r13               #  228   0x72d94  3      OPC=testq_r64_r64     
  jle .L_72dcf                   #  229   0x72d97  2      OPC=jle_label         
.L_72d94:                        #        0x72d99  0      OPC=<label>           
  movq 0x10(%rsp), %rdi          #  230   0x72d99  5      OPC=movq_r64_m64      
  movq 0x318038(%rip), %rax      #  231   0x72d9e  7      OPC=movq_r64_m64      
  callq (%rax)                   #  232   0x72da5  2      OPC=callq_m64         
  movq %rax, 0x8(%rsp)           #  233   0x72da7  5      OPC=movq_m64_r64      
  testq %rax, %rax               #  234   0x72dac  3      OPC=testq_r64_r64     
  je .L_72dc6                    #  235   0x72daf  2      OPC=je_label          
  movq 0x318105(%rip), %rax      #  236   0x72db1  7      OPC=movq_r64_m64      
  movq (%rax), %rax              #  237   0x72db8  3      OPC=movq_r64_m64      
  testq %rax, %rax               #  238   0x72dbb  3      OPC=testq_r64_r64     
  je .L_73181                    #  239   0x72dbe  6      OPC=je_label_1        
  callq %rax                     #  240   0x72dc4  2      OPC=callq_r64         
  jmpq .L_73181                  #  241   0x72dc6  5      OPC=jmpq_label_1      
.L_72dc6:                        #        0x72dcb  0      OPC=<label>           
  testb $0x2, 0x318e77(%rip)     #  242   0x72dcb  7      OPC=testb_m8_imm8     
  jne .L_72de4                   #  243   0x72dd2  2      OPC=jne_label         
.L_72dcf:                        #        0x72dd4  0      OPC=<label>           
  movq 0x28(%rsp), %rax          #  244   0x72dd4  5      OPC=movq_r64_m64      
  addq %r12, %rax                #  245   0x72dd9  3      OPC=addq_r64_r64      
  addq %rax, %r13                #  246   0x72ddc  3      OPC=addq_r64_r64      
  andq 0x20(%rsp), %r13          #  247   0x72ddf  5      OPC=andq_r64_m64      
  movq %r13, 0x10(%rsp)          #  248   0x72de4  5      OPC=movq_m64_r64      
.L_72de4:                        #        0x72de9  0      OPC=<label>           
  movq 0x10(%rsp), %rcx          #  249   0x72de9  5      OPC=movq_r64_m64      
  cmpq $0xfffff, %rcx            #  250   0x72dee  7      OPC=cmpq_r64_imm32    
  movl $0x100000, %eax           #  251   0x72df5  5      OPC=movl_r32_imm32    
  cmovaq %rcx, %rax              #  252   0x72dfa  4      OPC=cmovaq_r64_r64    
  movq %rax, 0x10(%rsp)          #  253   0x72dfe  5      OPC=movq_m64_r64      
  movq %rax, %r13                #  254   0x72e03  3      OPC=movq_r64_r64      
  cmpq %rax, %rbp                #  255   0x72e06  3      OPC=cmpq_r64_r64      
  jae .L_73059                   #  256   0x72e09  6      OPC=jae_label_1       
  movl $0x0, %r9d                #  257   0x72e0f  6      OPC=movl_r32_imm32    
  movl $0xffffffff, %r8d         #  258   0x72e15  7      OPC=movl_r32_imm32_1  
  movl $0x22, %ecx               #  259   0x72e1c  5      OPC=movl_r32_imm32    
  movl $0x3, %edx                #  260   0x72e21  5      OPC=movl_r32_imm32    
  movq %rax, %rsi                #  261   0x72e26  3      OPC=movq_r64_r64      
  movl $0x0, %edi                #  262   0x72e29  5      OPC=movl_r32_imm32    
  callq .mmap                    #  263   0x72e2e  5      OPC=callq_label       
  movq %rax, 0x8(%rsp)           #  264   0x72e33  5      OPC=movq_m64_r64      
  cmpq $0xff, %rax               #  265   0x72e38  4      OPC=cmpq_r64_imm8     
  je .L_73059                    #  266   0x72e3c  6      OPC=je_label_1        
  orl $0x2, 0x318e01(%rip)       #  267   0x72e42  7      OPC=orl_m32_imm8      
  testq %rax, %rax               #  268   0x72e49  3      OPC=testq_r64_r64     
  je .L_73059                    #  269   0x72e4c  6      OPC=je_label_1        
  addq %rax, %r13                #  270   0x72e52  3      OPC=addq_r64_r64      
.L_72e4f:                        #        0x72e55  0      OPC=<label>           
  cmpq $0x0, 0x3183f9(%rip)      #  271   0x72e55  8      OPC=cmpq_m64_imm8     
  jne .L_72e65                   #  272   0x72e5d  2      OPC=jne_label         
  movq 0x8(%rsp), %rax           #  273   0x72e5f  5      OPC=movq_r64_m64      
  movq %rax, 0x3183eb(%rip)      #  274   0x72e64  7      OPC=movq_m64_r64      
.L_72e65:                        #        0x72e6b  0      OPC=<label>           
  movq 0x10(%rsp), %rdx          #  275   0x72e6b  5      OPC=movq_r64_m64      
  movq %rdx, %rax                #  276   0x72e70  3      OPC=movq_r64_r64      
  addq 0x31964c(%rip), %rdx      #  277   0x72e73  7      OPC=addq_r64_m64      
  movq %rdx, 0x319645(%rip)      #  278   0x72e7a  7      OPC=movq_m64_r64      
  testq %r13, %r13               #  279   0x72e81  3      OPC=testq_r64_r64     
  sete %cl                       #  280   0x72e84  3      OPC=sete_r8           
  jne .L_72e9a                   #  281   0x72e87  2      OPC=jne_label         
  cmpq %r14, 0x8(%rsp)           #  282   0x72e89  5      OPC=cmpq_m64_r64      
  jne .L_72e9a                   #  283   0x72e8e  2      OPC=jne_label         
  addq %r12, %rax                #  284   0x72e90  3      OPC=addq_r64_r64      
  orq $0x1, %rax                 #  285   0x72e93  4      OPC=orq_r64_imm8      
  movq %rax, 0x8(%r15)           #  286   0x72e97  4      OPC=movq_m64_r64      
  jmpq .L_73059                  #  287   0x72e9b  5      OPC=jmpq_label_1      
.L_72e9a:                        #        0x72ea0  0      OPC=<label>           
  testb $0x2, 0x318da3(%rip)     #  288   0x72ea0  7      OPC=testb_m8_imm8     
  jne .L_72fab                   #  289   0x72ea7  6      OPC=jne_label_1       
  cmpq %r14, 0x8(%rsp)           #  290   0x72ead  5      OPC=cmpq_m64_r64      
  jae .L_72ed7                   #  291   0x72eb2  2      OPC=jae_label         
  cmpb $0x0, 0x1f(%rsp)          #  292   0x72eb4  5      OPC=cmpb_m8_imm8      
  je .L_72ed7                    #  293   0x72eb9  2      OPC=je_label          
  leaq 0x318d84(%rip), %rcx      #  294   0x72ebb  7      OPC=leaq_r64_m16      
  movq 0x8(%rsp), %rdx           #  295   0x72ec2  5      OPC=movq_r64_m64      
  leaq 0xe9338(%rip), %rsi       #  296   0x72ec7  7      OPC=leaq_r64_m16      
  movl $0x3, %edi                #  297   0x72ece  5      OPC=movl_r32_imm32    
  callq .malloc_printerr         #  298   0x72ed3  5      OPC=callq_label       
  jmpq .L_73059                  #  299   0x72ed8  5      OPC=jmpq_label_1      
.L_72ed7:                        #        0x72edd  0      OPC=<label>           
  cmpb $0x0, 0x1f(%rsp)          #  300   0x72edd  5      OPC=cmpb_m8_imm8      
  je .L_72ef0                    #  301   0x72ee2  2      OPC=je_label          
  movq 0x8(%rsp), %rcx           #  302   0x72ee4  5      OPC=movq_r64_m64      
  subq %r14, %rcx                #  303   0x72ee9  3      OPC=subq_r64_r64      
  addq %rcx, %rdx                #  304   0x72eec  3      OPC=addq_r64_r64      
  movq %rdx, 0x3195d0(%rip)      #  305   0x72eef  7      OPC=movq_m64_r64      
.L_72ef0:                        #        0x72ef6  0      OPC=<label>           
  movq 0x8(%rsp), %rcx           #  306   0x72ef6  5      OPC=movq_r64_m64      
  andl $0xf, %ecx                #  307   0x72efb  3      OPC=andl_r32_imm8     
  je .L_72f11                    #  308   0x72efe  2      OPC=je_label          
  movl $0x10, %edx               #  309   0x72f00  5      OPC=movl_r32_imm32    
  subq %rcx, %rdx                #  310   0x72f05  3      OPC=subq_r64_r64      
  movq %rdx, %r14                #  311   0x72f08  3      OPC=movq_r64_r64      
  addq 0x8(%rsp), %rdx           #  312   0x72f0b  5      OPC=addq_r64_m64      
  movq %rdx, 0x10(%rsp)          #  313   0x72f10  5      OPC=movq_m64_r64      
  jmpq .L_72f21                  #  314   0x72f15  2      OPC=jmpq_label        
.L_72f11:                        #        0x72f17  0      OPC=<label>           
  movq 0x8(%rsp), %rcx           #  315   0x72f17  5      OPC=movq_r64_m64      
  movq %rcx, 0x10(%rsp)          #  316   0x72f1c  5      OPC=movq_m64_r64      
  movl $0x0, %r14d               #  317   0x72f21  6      OPC=movl_r32_imm32    
.L_72f21:                        #        0x72f27  0      OPC=<label>           
  addq %r12, %r14                #  318   0x72f27  3      OPC=addq_r64_r64      
  addq %r14, %rax                #  319   0x72f2a  3      OPC=addq_r64_r64      
  addq 0x8(%rsp), %rax           #  320   0x72f2d  5      OPC=addq_r64_m64      
  subq %rax, %r14                #  321   0x72f32  3      OPC=subq_r64_r64      
  addq 0x28(%rsp), %rax          #  322   0x72f35  5      OPC=addq_r64_m64      
  movq 0x20(%rsp), %r13          #  323   0x72f3a  5      OPC=movq_r64_m64      
  andq %rax, %r13                #  324   0x72f3f  3      OPC=andq_r64_r64      
  addq %r13, %r14                #  325   0x72f42  3      OPC=addq_r64_r64      
  jns .L_72f60                   #  326   0x72f45  2      OPC=jns_label         
  leaq 0xe5d46(%rip), %rcx       #  327   0x72f47  7      OPC=leaq_r64_m16      
  movl $0xa3a, %edx              #  328   0x72f4e  5      OPC=movl_r32_imm32    
  leaq 0xe59cb(%rip), %rsi       #  329   0x72f53  7      OPC=leaq_r64_m16      
  leaq 0xe5ad0(%rip), %rdi       #  330   0x72f5a  7      OPC=leaq_r64_m16      
  callq .__malloc_assert         #  331   0x72f61  5      OPC=callq_label       
.L_72f60:                        #        0x72f66  0      OPC=<label>           
  movq %r14, %rdi                #  332   0x72f66  3      OPC=movq_r64_r64      
  movq 0x317e6e(%rip), %rax      #  333   0x72f69  7      OPC=movq_r64_m64      
  callq (%rax)                   #  334   0x72f70  2      OPC=callq_m64         
  movq %rax, %r13                #  335   0x72f72  3      OPC=movq_r64_r64      
  testq %rax, %rax               #  336   0x72f75  3      OPC=testq_r64_r64     
  jne .L_72f91                   #  337   0x72f78  2      OPC=jne_label         
  movl $0x0, %edi                #  338   0x72f7a  5      OPC=movl_r32_imm32    
  movq 0x317e58(%rip), %rax      #  339   0x72f7f  7      OPC=movq_r64_m64      
  callq (%rax)                   #  340   0x72f86  2      OPC=callq_m64         
  movq %rax, %r13                #  341   0x72f88  3      OPC=movq_r64_r64      
  movq 0x10(%rsp), %rax          #  342   0x72f8b  5      OPC=movq_r64_m64      
  movq %rax, 0x8(%rsp)           #  343   0x72f90  5      OPC=movq_m64_r64      
  jmpq .L_72fe6                  #  344   0x72f95  2      OPC=jmpq_label        
.L_72f91:                        #        0x72f97  0      OPC=<label>           
  movq 0x317f20(%rip), %rax      #  345   0x72f97  7      OPC=movq_r64_m64      
  movq (%rax), %rax              #  346   0x72f9e  3      OPC=movq_r64_m64      
  testq %rax, %rax               #  347   0x72fa1  3      OPC=testq_r64_r64     
  je .L_7318c                    #  348   0x72fa4  6      OPC=je_label_1        
  callq %rax                     #  349   0x72faa  2      OPC=callq_r64         
  jmpq .L_7318c                  #  350   0x72fac  5      OPC=jmpq_label_1      
.L_72fab:                        #        0x72fb1  0      OPC=<label>           
  testb $0xf, 0x8(%rsp)          #  351   0x72fb1  5      OPC=testb_m8_imm8     
  je .L_72fd1                    #  352   0x72fb6  2      OPC=je_label          
  leaq 0xe5cd5(%rip), %rcx       #  353   0x72fb8  7      OPC=leaq_r64_m16      
  movl $0xa5a, %edx              #  354   0x72fbf  5      OPC=movl_r32_imm32    
  leaq 0xe595a(%rip), %rsi       #  355   0x72fc4  7      OPC=leaq_r64_m16      
  leaq 0xe925c(%rip), %rdi       #  356   0x72fcb  7      OPC=leaq_r64_m16      
  callq .__malloc_assert         #  357   0x72fd2  5      OPC=callq_label       
.L_72fd1:                        #        0x72fd7  0      OPC=<label>           
  testb %cl, %cl                 #  358   0x72fd7  2      OPC=testb_r8_r8       
  je .L_72fe6                    #  359   0x72fd9  2      OPC=je_label          
  movl $0x0, %edi                #  360   0x72fdb  5      OPC=movl_r32_imm32    
  movq 0x317df7(%rip), %rax      #  361   0x72fe0  7      OPC=movq_r64_m64      
  callq (%rax)                   #  362   0x72fe7  2      OPC=callq_m64         
  movq %rax, %r13                #  363   0x72fe9  3      OPC=movq_r64_r64      
.L_72fe6:                        #        0x72fec  0      OPC=<label>           
  testq %r13, %r13               #  364   0x72fec  3      OPC=testq_r64_r64     
  je .L_73059                    #  365   0x72fef  2      OPC=je_label          
  movl $0x0, %r14d               #  366   0x72ff1  6      OPC=movl_r32_imm32    
.L_72ff1:                        #        0x72ff7  0      OPC=<label>           
  movq 0x8(%rsp), %rax           #  367   0x72ff7  5      OPC=movq_r64_m64      
  movq %rax, 0x318c9b(%rip)      #  368   0x72ffc  7      OPC=movq_m64_r64      
  subq %rax, %r13                #  369   0x73003  3      OPC=subq_r64_r64      
  addq %r14, %r13                #  370   0x73006  3      OPC=addq_r64_r64      
  orq $0x1, %r13                 #  371   0x73009  4      OPC=orq_r64_imm8      
  movq %r13, 0x8(%rax)           #  372   0x7300d  4      OPC=movq_m64_r64      
  addq %r14, 0x3194ae(%rip)      #  373   0x73011  7      OPC=addq_m64_r64      
  cmpb $0x0, 0x1f(%rsp)          #  374   0x73018  5      OPC=cmpb_m8_imm8      
  je .L_73059                    #  375   0x7301d  2      OPC=je_label          
  leaq -0x20(%r12), %rax         #  376   0x7301f  5      OPC=leaq_r64_m16      
  andq $0xf0, %rax               #  377   0x73024  4      OPC=andq_r64_imm8     
  movq %rax, %rdx                #  378   0x73028  3      OPC=movq_r64_r64      
  orq $0x1, %rdx                 #  379   0x7302b  4      OPC=orq_r64_imm8      
  movq %rdx, 0x8(%r15)           #  380   0x7302f  4      OPC=movq_m64_r64      
  movq $0x11, 0x8(%r15,%rax,1)   #  381   0x73033  9      OPC=movq_m64_imm32    
  movq $0x11, 0x18(%r15,%rax,1)  #  382   0x7303c  9      OPC=movq_m64_imm32    
  cmpq $0x1f, %rax               #  383   0x73045  4      OPC=cmpq_r64_imm8     
  jbe .L_73059                   #  384   0x73049  2      OPC=jbe_label         
  movl $0x1, %edx                #  385   0x7304b  5      OPC=movl_r32_imm32    
  movq %r15, %rsi                #  386   0x73050  3      OPC=movq_r64_r64      
  leaq 0x318bec(%rip), %rdi      #  387   0x73053  7      OPC=leaq_r64_m16      
  callq ._int_free               #  388   0x7305a  5      OPC=callq_label       
.L_73059:                        #        0x7305f  0      OPC=<label>           
  movq 0x880(%rbx), %rax         #  389   0x7305f  7      OPC=movq_r64_m64      
  cmpq 0x888(%rbx), %rax         #  390   0x73066  7      OPC=cmpq_r64_m64      
  jbe .L_73070                   #  391   0x7306d  2      OPC=jbe_label         
  movq %rax, 0x888(%rbx)         #  392   0x7306f  7      OPC=movq_m64_r64      
.L_73070:                        #        0x73076  0      OPC=<label>           
  movq 0x58(%rbx), %rax          #  393   0x73076  4      OPC=movq_r64_m64      
  movq 0x8(%rax), %rdx           #  394   0x7307a  4      OPC=movq_r64_m64      
  andq $0xf8, %rdx               #  395   0x7307e  4      OPC=andq_r64_imm8     
  cmpq %rdx, (%rsp)              #  396   0x73082  4      OPC=cmpq_m64_r64      
  ja .L_730bd                    #  397   0x73086  2      OPC=ja_label          
  subq %rbp, %rdx                #  398   0x73088  3      OPC=subq_r64_r64      
  leaq (%rax,%rbp,1), %rsi       #  399   0x7308b  4      OPC=leaq_r64_m16      
  movq %rsi, 0x58(%rbx)          #  400   0x7308f  4      OPC=movq_m64_r64      
  leaq 0x318bac(%rip), %rcx      #  401   0x73093  7      OPC=leaq_r64_m16      
  cmpq %rcx, %rbx                #  402   0x7309a  3      OPC=cmpq_r64_r64      
  setne %cl                      #  403   0x7309d  3      OPC=setne_r8          
  movzbl %cl, %ecx               #  404   0x730a0  3      OPC=movzbl_r32_r8     
  shlq $0x2, %rcx                #  405   0x730a3  4      OPC=shlq_r64_imm8     
  orq $0x1, %rbp                 #  406   0x730a7  4      OPC=orq_r64_imm8      
  orq %rbp, %rcx                 #  407   0x730ab  3      OPC=orq_r64_r64       
  movq %rcx, 0x8(%rax)           #  408   0x730ae  4      OPC=movq_m64_r64      
  orq $0x1, %rdx                 #  409   0x730b2  4      OPC=orq_r64_imm8      
  movq %rdx, 0x8(%rsi)           #  410   0x730b6  4      OPC=movq_m64_r64      
  leaq 0x10(%rax), %rdx          #  411   0x730ba  4      OPC=leaq_r64_m16      
  jmpq .L_7319b                  #  412   0x730be  5      OPC=jmpq_label_1      
.L_730bd:                        #        0x730c3  0      OPC=<label>           
  movq 0x317dbc(%rip), %rax      #  413   0x730c3  7      OPC=movq_r64_m64      
  movl $0xc, (%rax)              #  414   0x730ca  6      OPC=movl_m32_imm32    
  nop                            #  415   0x730d0  1      OPC=nop               
  movl $0x0, %edx                #  416   0x730d1  5      OPC=movl_r32_imm32    
  jmpq .L_7319b                  #  417   0x730d6  5      OPC=jmpq_label_1      
.L_730d5:                        #        0x730db  0      OPC=<label>           
  movl $0x0, %edx                #  418   0x730db  5      OPC=movl_r32_imm32    
  jmpq .L_7319b                  #  419   0x730e0  5      OPC=jmpq_label_1      
.L_730df:                        #        0x730e5  0      OPC=<label>           
  leaq 0x7(%r13,%rdi,1), %r12    #  420   0x730e5  5      OPC=leaq_r64_m16      
  negq %r13                      #  421   0x730ea  3      OPC=negq_r64          
  andq %r13, %r12                #  422   0x730ed  3      OPC=andq_r64_r64      
  movl $0x0, %edx                #  423   0x730f0  5      OPC=movl_r32_imm32    
  cmpq %r12, %rdi                #  424   0x730f5  3      OPC=cmpq_r64_r64      
  jae .L_7319b                   #  425   0x730f8  6      OPC=jae_label_1       
  movq %r12, %r14                #  426   0x730fe  3      OPC=movq_r64_r64      
  movl $0x0, %r9d                #  427   0x73101  6      OPC=movl_r32_imm32    
  movl $0xffffffff, %r8d         #  428   0x73107  7      OPC=movl_r32_imm32_1  
  movl $0x22, %ecx               #  429   0x7310e  5      OPC=movl_r32_imm32    
  movb $0x3, %dl                 #  430   0x73113  2      OPC=movb_r8_imm8      
  movq %r12, %rsi                #  431   0x73115  3      OPC=movq_r64_r64      
  movl $0x0, %edi                #  432   0x73118  5      OPC=movl_r32_imm32    
  callq .mmap                    #  433   0x7311d  5      OPC=callq_label       
  movl $0x0, %edx                #  434   0x73122  5      OPC=movl_r32_imm32    
  cmpq $0xff, %rax               #  435   0x73127  4      OPC=cmpq_r64_imm8     
  je .L_7319b                    #  436   0x7312b  2      OPC=je_label          
  jmpq .L_72a79                  #  437   0x7312d  5      OPC=jmpq_label_1      
.L_7312b:                        #        0x73132  0      OPC=<label>           
  leaq 0x7(%r13,%rdi,1), %r12    #  438   0x73132  5      OPC=leaq_r64_m16      
  movq %r13, %rax                #  439   0x73137  3      OPC=movq_r64_r64      
  negq %rax                      #  440   0x7313a  3      OPC=negq_r64          
  andq %rax, %r12                #  441   0x7313d  3      OPC=andq_r64_r64      
  movb $0x1, 0x1f(%rsp)          #  442   0x73140  5      OPC=movb_m8_imm8      
  cmpq %r12, %rdi                #  443   0x73145  3      OPC=cmpq_r64_r64      
  jae .L_72b11                   #  444   0x73148  6      OPC=jae_label_1       
  movq %r12, %r14                #  445   0x7314e  3      OPC=movq_r64_r64      
  movl $0x0, %r9d                #  446   0x73151  6      OPC=movl_r32_imm32    
  movl $0xffffffff, %r8d         #  447   0x73157  7      OPC=movl_r32_imm32_1  
  movl $0x22, %ecx               #  448   0x7315e  5      OPC=movl_r32_imm32    
  movl $0x3, %edx                #  449   0x73163  5      OPC=movl_r32_imm32    
  movq %r12, %rsi                #  450   0x73168  3      OPC=movq_r64_r64      
  movl $0x0, %edi                #  451   0x7316b  5      OPC=movl_r32_imm32    
  callq .mmap                    #  452   0x73170  5      OPC=callq_label       
  cmpq $0xff, %rax               #  453   0x73175  4      OPC=cmpq_r64_imm8     
  jne .L_72a79                   #  454   0x73179  6      OPC=jne_label_1       
  movb $0x1, 0x1f(%rsp)          #  455   0x7317f  5      OPC=movb_m8_imm8      
  jmpq .L_72b11                  #  456   0x73184  5      OPC=jmpq_label_1      
.L_73181:                        #        0x73189  0      OPC=<label>           
  movl $0x0, %r13d               #  457   0x73189  6      OPC=movl_r32_imm32    
  jmpq .L_72e4f                  #  458   0x7318f  5      OPC=jmpq_label_1      
.L_7318c:                        #        0x73194  0      OPC=<label>           
  movq 0x10(%rsp), %rax          #  459   0x73194  5      OPC=movq_r64_m64      
  movq %rax, 0x8(%rsp)           #  460   0x73199  5      OPC=movq_m64_r64      
  jmpq .L_72ff1                  #  461   0x7319e  5      OPC=jmpq_label_1      
.L_7319b:                        #        0x731a3  0      OPC=<label>           
  movq %rdx, %rax                #  462   0x731a3  3      OPC=movq_r64_r64      
  addq $0x38, %rsp               #  463   0x731a6  4      OPC=addq_r64_imm8     
  popq %rbx                      #  464   0x731aa  1      OPC=popq_r64_1        
  popq %rbp                      #  465   0x731ab  1      OPC=popq_r64_1        
  popq %r12                      #  466   0x731ac  2      OPC=popq_r64_1        
  popq %r13                      #  467   0x731ae  2      OPC=popq_r64_1        
  popq %r14                      #  468   0x731b0  2      OPC=popq_r64_1        
  popq %r15                      #  469   0x731b2  2      OPC=popq_r64_1        
  retq                           #  470   0x731b4  1      OPC=retq              
                                                                                
.size sysmalloc, .-sysmalloc

