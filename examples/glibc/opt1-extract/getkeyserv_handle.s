  .text
  .globl getkeyserv_handle
  .type getkeyserv_handle, @function

#! file-offset 0x106342
#! rip-offset  0x106342
#! capacity    618 bytes

# Text                                #  Line  RIP       Bytes  Opcode              
.getkeyserv_handle:                   #        0x106342  0      OPC=<label>         
  pushq %rbp                          #  1     0x106342  1      OPC=pushq_r64_1     
  pushq %rbx                          #  2     0x106343  1      OPC=pushq_r64_1     
  subq $0xb8, %rsp                    #  3     0x106344  7      OPC=subq_r64_imm32  
  movl %edi, 0xc(%rsp)                #  4     0x10634b  4      OPC=movl_m32_r32    
  callq .__rpc_thread_variables       #  5     0x10634f  5      OPC=callq_label     
  movq %rax, %rbp                     #  6     0x106354  3      OPC=movq_r64_r64    
  movq 0xc8(%rax), %rbx               #  7     0x106357  7      OPC=movq_r64_m64    
  movl $0x6e, 0x1c(%rsp)              #  8     0x10635e  8      OPC=movl_m32_imm32  
  testq %rbx, %rbx                    #  9     0x106366  3      OPC=testq_r64_r64   
  jne .L_106394                       #  10    0x106369  2      OPC=jne_label       
  movl $0x10, %edi                    #  11    0x10636b  5      OPC=movl_r32_imm32  
  callq .memalign_plt                 #  12    0x106370  5      OPC=callq_label     
  movq %rax, %rbx                     #  13    0x106375  3      OPC=movq_r64_r64    
  testq %rax, %rax                    #  14    0x106378  3      OPC=testq_r64_r64   
  je .L_10659d                        #  15    0x10637b  6      OPC=je_label_1      
  movq %rax, 0xc8(%rbp)               #  16    0x106381  7      OPC=movq_m64_r64    
  movq $0x0, (%rax)                   #  17    0x106388  7      OPC=movq_m64_imm32  
  jmpq .L_1064b6                      #  18    0x10638f  5      OPC=jmpq_label_1    
.L_106394:                            #        0x106394  0      OPC=<label>         
  cmpq $0x0, (%rbx)                   #  19    0x106394  4      OPC=cmpq_m64_imm8   
  je .L_106428                        #  20    0x106398  6      OPC=je_label_1      
  movl 0x8(%rbx), %ebp                #  21    0x10639e  3      OPC=movl_r32_m32    
  callq .__getpid                     #  22    0x1063a1  5      OPC=callq_label     
  cmpl %eax, %ebp                     #  23    0x1063a6  2      OPC=cmpl_r32_r32    
  je .L_1063ca                        #  24    0x1063a8  2      OPC=je_label        
  movq (%rbx), %rax                   #  25    0x1063aa  3      OPC=movq_r64_m64    
  movq (%rax), %rdi                   #  26    0x1063ad  3      OPC=movq_r64_m64    
  movq 0x38(%rdi), %rax               #  27    0x1063b0  4      OPC=movq_r64_m64    
  callq 0x20(%rax)                    #  28    0x1063b4  3      OPC=callq_m64       
  movq (%rbx), %rdi                   #  29    0x1063b7  3      OPC=movq_r64_m64    
  movq 0x8(%rdi), %rax                #  30    0x1063ba  4      OPC=movq_r64_m64    
  callq 0x20(%rax)                    #  31    0x1063be  3      OPC=callq_m64       
  movq $0x0, (%rbx)                   #  32    0x1063c1  7      OPC=movq_m64_imm32  
  jmpq .L_106428                      #  33    0x1063c8  2      OPC=jmpq_label      
.L_1063ca:                            #        0x1063ca  0      OPC=<label>         
  movq (%rbx), %rdi                   #  34    0x1063ca  3      OPC=movq_r64_m64    
  testq %rdi, %rdi                    #  35    0x1063cd  3      OPC=testq_r64_r64   
  je .L_1064b6                        #  36    0x1063d0  6      OPC=je_label_1      
  movq 0x8(%rdi), %rax                #  37    0x1063d6  4      OPC=movq_r64_m64    
  leaq 0x9c(%rsp), %rdx               #  38    0x1063da  8      OPC=leaq_r64_m16    
  movl $0x6, %esi                     #  39    0x1063e2  5      OPC=movl_r32_imm32  
  callq 0x28(%rax)                    #  40    0x1063e7  3      OPC=callq_m64       
  leaq 0x20(%rsp), %rsi               #  41    0x1063ea  5      OPC=leaq_r64_m16    
  leaq 0x1c(%rsp), %rdx               #  42    0x1063ef  5      OPC=leaq_r64_m16    
  movl 0x9c(%rsp), %edi               #  43    0x1063f4  7      OPC=movl_r32_m32    
  callq .getpeername                  #  44    0x1063fb  5      OPC=callq_label     
  cmpl $0xffffffff, %eax              #  45    0x106400  6      OPC=cmpl_r32_imm32  
  nop                                 #  46    0x106406  1      OPC=nop             
  nop                                 #  47    0x106407  1      OPC=nop             
  nop                                 #  48    0x106408  1      OPC=nop             
  jne .L_106428                       #  49    0x106409  2      OPC=jne_label       
  movq (%rbx), %rax                   #  50    0x10640b  3      OPC=movq_r64_m64    
  movq (%rax), %rdi                   #  51    0x10640e  3      OPC=movq_r64_m64    
  movq 0x38(%rdi), %rax               #  52    0x106411  4      OPC=movq_r64_m64    
  callq 0x20(%rax)                    #  53    0x106415  3      OPC=callq_m64       
  movq (%rbx), %rdi                   #  54    0x106418  3      OPC=movq_r64_m64    
  movq 0x8(%rdi), %rax                #  55    0x10641b  4      OPC=movq_r64_m64    
  callq 0x20(%rax)                    #  56    0x10641f  3      OPC=callq_m64       
  movq $0x0, (%rbx)                   #  57    0x106422  7      OPC=movq_m64_imm32  
  jmpq .L_1064b6                      #  58    0x106429  5      OPC=jmpq_label_1    
.L_106428:                            #        0x10642e  0      OPC=<label>         
  cmpq $0x0, (%rbx)                   #  59    0x10642e  4      OPC=cmpq_m64_imm8   
  je .L_1064b6                        #  60    0x106432  6      OPC=je_label_1      
  movl 0xc(%rbx), %ebp                #  61    0x106438  3      OPC=movl_r32_m32    
  callq .geteuid                      #  62    0x10643b  5      OPC=callq_label     
  cmpl %eax, %ebp                     #  63    0x106440  2      OPC=cmpl_r32_r32    
  je .L_10649a                        #  64    0x106442  2      OPC=je_label        
  callq .geteuid                      #  65    0x106444  5      OPC=callq_label     
  movl %eax, 0xc(%rbx)                #  66    0x106449  3      OPC=movl_m32_r32    
  movq (%rbx), %rax                   #  67    0x10644c  3      OPC=movq_r64_m64    
  movq (%rax), %rdi                   #  68    0x10644f  3      OPC=movq_r64_m64    
  movq 0x38(%rdi), %rax               #  69    0x106452  4      OPC=movq_r64_m64    
  callq 0x20(%rax)                    #  70    0x106456  3      OPC=callq_m64       
  movq (%rbx), %rbp                   #  71    0x106459  3      OPC=movq_r64_m64    
  movl 0xc(%rbx), %esi                #  72    0x10645c  3      OPC=movl_r32_m32    
  movl $0x0, %r8d                     #  73    0x10645f  6      OPC=movl_r32_imm32  
  movl $0x0, %ecx                     #  74    0x106465  5      OPC=movl_r32_imm32  
  movl $0x0, %edx                     #  75    0x10646a  5      OPC=movl_r32_imm32  
  leaq 0x5134f(%rip), %rdi            #  76    0x10646f  7      OPC=leaq_r64_m16    
  callq .authunix_create_GLIBC_2_2_5  #  77    0x106476  5      OPC=callq_label     
  movq %rax, (%rbp)                   #  78    0x10647b  4      OPC=movq_m64_r64    
  movq (%rbx), %rdi                   #  79    0x10647f  3      OPC=movq_r64_m64    
  cmpq $0x0, (%rdi)                   #  80    0x106482  4      OPC=cmpq_m64_imm8   
  jne .L_10649a                       #  81    0x106486  2      OPC=jne_label       
  movq 0x8(%rdi), %rax                #  82    0x106488  4      OPC=movq_r64_m64    
  callq 0x20(%rax)                    #  83    0x10648c  3      OPC=callq_m64       
  movq $0x0, (%rbx)                   #  84    0x10648f  7      OPC=movq_m64_imm32  
  movl $0x0, %eax                     #  85    0x106496  5      OPC=movl_r32_imm32  
  jmpq .L_1065a2                      #  86    0x10649b  5      OPC=jmpq_label_1    
.L_10649a:                            #        0x1064a0  0      OPC=<label>         
  movq (%rbx), %rdi                   #  87    0x1064a0  3      OPC=movq_r64_m64    
  movq 0x8(%rdi), %rax                #  88    0x1064a3  4      OPC=movq_r64_m64    
  leaq 0xc(%rsp), %rdx                #  89    0x1064a7  5      OPC=leaq_r64_m16    
  movl $0xd, %esi                     #  90    0x1064ac  5      OPC=movl_r32_imm32  
  callq 0x28(%rax)                    #  91    0x1064b1  3      OPC=callq_m64       
  movq (%rbx), %rax                   #  92    0x1064b4  3      OPC=movq_r64_m64    
  jmpq .L_1065a2                      #  93    0x1064b7  5      OPC=jmpq_label_1    
.L_1064b6:                            #        0x1064bc  0      OPC=<label>         
  movslq 0xc(%rsp), %rdx              #  94    0x1064bc  5      OPC=movslq_r64_m32  
  leaq 0x5477e(%rip), %rcx            #  95    0x1064c1  7      OPC=leaq_r64_m16    
  movl $0x186bd, %esi                 #  96    0x1064c8  5      OPC=movl_r32_imm32  
  leaq 0x54800(%rip), %rdi            #  97    0x1064cd  7      OPC=leaq_r64_m16    
  callq .clnt_create_GLIBC_2_2_5      #  98    0x1064d4  5      OPC=callq_label     
  movq %rax, (%rbx)                   #  99    0x1064d9  3      OPC=movq_m64_r64    
  testq %rax, %rax                    #  100   0x1064dc  3      OPC=testq_r64_r64   
  je .L_1065a2                        #  101   0x1064df  6      OPC=je_label_1      
  callq .geteuid                      #  102   0x1064e5  5      OPC=callq_label     
  movl %eax, 0xc(%rbx)                #  103   0x1064ea  3      OPC=movl_m32_r32    
  callq .__getpid                     #  104   0x1064ed  5      OPC=callq_label     
  movl %eax, 0x8(%rbx)                #  105   0x1064f2  3      OPC=movl_m32_r32    
  movq (%rbx), %rbp                   #  106   0x1064f5  3      OPC=movq_r64_m64    
  movl 0xc(%rbx), %esi                #  107   0x1064f8  3      OPC=movl_r32_m32    
  movl $0x0, %r8d                     #  108   0x1064fb  6      OPC=movl_r32_imm32  
  movl $0x0, %ecx                     #  109   0x106501  5      OPC=movl_r32_imm32  
  movl $0x0, %edx                     #  110   0x106506  5      OPC=movl_r32_imm32  
  leaq 0x512b3(%rip), %rdi            #  111   0x10650b  7      OPC=leaq_r64_m16    
  callq .authunix_create_GLIBC_2_2_5  #  112   0x106512  5      OPC=callq_label     
  movq %rax, (%rbp)                   #  113   0x106517  4      OPC=movq_m64_r64    
  movq (%rbx), %rdi                   #  114   0x10651b  3      OPC=movq_r64_m64    
  cmpq $0x0, (%rdi)                   #  115   0x10651e  4      OPC=cmpq_m64_imm8   
  jne .L_106533                       #  116   0x106522  2      OPC=jne_label       
  movq 0x8(%rdi), %rax                #  117   0x106524  4      OPC=movq_r64_m64    
  callq 0x20(%rax)                    #  118   0x106528  3      OPC=callq_m64       
  movq $0x0, (%rbx)                   #  119   0x10652b  7      OPC=movq_m64_imm32  
  movl $0x0, %eax                     #  120   0x106532  5      OPC=movl_r32_imm32  
  jmpq .L_1065a2                      #  121   0x106537  2      OPC=jmpq_label      
.L_106533:                            #        0x106539  0      OPC=<label>         
  movq $0x6, 0xa0(%rsp)               #  122   0x106539  12     OPC=movq_m64_imm32  
  movq $0x0, 0xa8(%rsp)               #  123   0x106545  12     OPC=movq_m64_imm32  
  movq (%rbx), %rdi                   #  124   0x106551  3      OPC=movq_r64_m64    
  movq 0x8(%rdi), %rax                #  125   0x106554  4      OPC=movq_r64_m64    
  leaq 0xa0(%rsp), %rdx               #  126   0x106558  8      OPC=leaq_r64_m16    
  movl $0x4, %esi                     #  127   0x106560  5      OPC=movl_r32_imm32  
  callq 0x28(%rax)                    #  128   0x106565  3      OPC=callq_m64       
  movq (%rbx), %rdi                   #  129   0x106568  3      OPC=movq_r64_m64    
  movq 0x8(%rdi), %rax                #  130   0x10656b  4      OPC=movq_r64_m64    
  leaq 0x9c(%rsp), %rdx               #  131   0x10656f  8      OPC=leaq_r64_m16    
  movl $0x6, %esi                     #  132   0x106577  5      OPC=movl_r32_imm32  
  callq 0x28(%rax)                    #  133   0x10657c  3      OPC=callq_m64       
  testl %eax, %eax                    #  134   0x10657f  2      OPC=testl_r32_r32   
  je .L_106598                        #  135   0x106581  2      OPC=je_label        
  movl $0x1, %edx                     #  136   0x106583  5      OPC=movl_r32_imm32  
  movl $0x2, %esi                     #  137   0x106588  5      OPC=movl_r32_imm32  
  movl 0x9c(%rsp), %edi               #  138   0x10658d  7      OPC=movl_r32_m32    
  movl $0x0, %eax                     #  139   0x106594  5      OPC=movl_r32_imm32  
  callq .__fcntl                      #  140   0x106599  5      OPC=callq_label     
.L_106598:                            #        0x10659e  0      OPC=<label>         
  movq (%rbx), %rax                   #  141   0x10659e  3      OPC=movq_r64_m64    
  jmpq .L_1065a2                      #  142   0x1065a1  2      OPC=jmpq_label      
.L_10659d:                            #        0x1065a3  0      OPC=<label>         
  movl $0x0, %eax                     #  143   0x1065a3  5      OPC=movl_r32_imm32  
.L_1065a2:                            #        0x1065a8  0      OPC=<label>         
  addq $0xb8, %rsp                    #  144   0x1065a8  7      OPC=addq_r64_imm32  
  popq %rbx                           #  145   0x1065af  1      OPC=popq_r64_1      
  popq %rbp                           #  146   0x1065b0  1      OPC=popq_r64_1      
  retq                                #  147   0x1065b1  1      OPC=retq            
                                                                                    
.size getkeyserv_handle, .-getkeyserv_handle

