  .text
  .globl malloc_trim
  .type malloc_trim, @function

#! file-offset 0x76189
#! rip-offset  0x76189
#! capacity    661 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
.malloc_trim:                       #        0x76189  0      OPC=<label>           
  pushq %r15                        #  1     0x76189  2      OPC=pushq_r64_1       
  pushq %r14                        #  2     0x7618b  2      OPC=pushq_r64_1       
  pushq %r13                        #  3     0x7618d  2      OPC=pushq_r64_1       
  pushq %r12                        #  4     0x7618f  2      OPC=pushq_r64_1       
  pushq %rbp                        #  5     0x76191  1      OPC=pushq_r64_1       
  pushq %rbx                        #  6     0x76192  1      OPC=pushq_r64_1       
  subq $0x28, %rsp                  #  7     0x76193  4      OPC=subq_r64_imm8     
  movq %rdi, 0x18(%rsp)             #  8     0x76197  5      OPC=movq_m64_r64      
  cmpl $0x0, 0x315021(%rip)         #  9     0x7619c  7      OPC=cmpl_m32_imm8     
  jns .L_761aa                      #  10    0x761a3  2      OPC=jns_label         
  callq .ptmalloc_init              #  11    0x761a5  5      OPC=callq_label       
.L_761aa:                           #        0x761aa  0      OPC=<label>           
  leaq 0x315a8f(%rip), %rax         #  12    0x761aa  7      OPC=leaq_r64_m16      
  movq %rax, 0x8(%rsp)              #  13    0x761b1  5      OPC=movq_m64_r64      
  movl $0x0, 0x14(%rsp)             #  14    0x761b6  8      OPC=movl_m32_imm32    
.L_761be:                           #        0x761be  0      OPC=<label>           
  movl $0x1, %esi                   #  15    0x761be  5      OPC=movl_r32_imm32    
  movl $0x0, %eax                   #  16    0x761c3  5      OPC=movl_r32_imm32    
  movq 0x8(%rsp), %rdx              #  17    0x761c8  5      OPC=movq_r64_m64      
  cmpl $0x0, 0x31aa2c(%rip)         #  18    0x761cd  7      OPC=cmpl_m32_imm8     
  je .L_761de                       #  19    0x761d4  2      OPC=je_label          
  lock                              #  20    0x761d6  1      OPC=lock              
  cmpxchgl %esi, (%rdx)             #  21    0x761d7  3      OPC=cmpxchgl_m32_r32  
  nop                               #  22    0x761da  1      OPC=nop               
  jne .L_761e3                      #  23    0x761db  2      OPC=jne_label         
  jmpq .L_761f9                     #  24    0x761dd  2      OPC=jmpq_label        
.L_761de:                           #        0x761df  0      OPC=<label>           
  cmpxchgl %esi, (%rdx)             #  25    0x761df  3      OPC=cmpxchgl_m32_r32  
  je .L_761f9                       #  26    0x761e2  2      OPC=je_label          
.L_761e3:                           #        0x761e4  0      OPC=<label>           
  leaq (%rdx), %rdi                 #  27    0x761e4  3      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  28    0x761e7  7      OPC=subq_r64_imm32    
  callq .__lll_lock_wait_private    #  29    0x761ee  5      OPC=callq_label       
  addq $0x80, %rsp                  #  30    0x761f3  7      OPC=addq_r64_imm32    
.L_761f9:                           #        0x761fa  0      OPC=<label>           
  movl $0x0, %eax                   #  31    0x761fa  5      OPC=movl_r32_imm32    
  testb $0x4, 0x4(%rdx)             #  32    0x761ff  4      OPC=testb_m8_imm8     
  jne .L_763bc                      #  33    0x76203  6      OPC=jne_label_1       
  movq 0x8(%rsp), %rdi              #  34    0x76209  5      OPC=movq_r64_m64      
  callq .malloc_consolidate         #  35    0x7620e  5      OPC=callq_label       
  movq 0x314c5f(%rip), %rax         #  36    0x76213  7      OPC=movq_r64_m64      
  movq 0x18(%rax), %rbp             #  37    0x7621a  4      OPC=movq_r64_m64      
  cmpq $0x3ff, %rbp                 #  38    0x7621e  7      OPC=cmpq_r64_imm32    
  ja .L_76231                       #  39    0x76225  2      OPC=ja_label          
  movl %ebp, %eax                   #  40    0x76227  2      OPC=movl_r32_r32      
  shrl $0x4, %eax                   #  41    0x76229  3      OPC=shrl_r32_imm8     
  movl %eax, 0x10(%rsp)             #  42    0x7622c  4      OPC=movl_m32_r32      
  jmpq .L_762a3                     #  43    0x76230  2      OPC=jmpq_label        
.L_76231:                           #        0x76232  0      OPC=<label>           
  movq %rbp, %rax                   #  44    0x76232  3      OPC=movq_r64_r64      
  shrq $0x6, %rax                   #  45    0x76235  4      OPC=shrq_r64_imm8     
  cmpq $0x30, %rax                  #  46    0x76239  4      OPC=cmpq_r64_imm8     
  ja .L_76247                       #  47    0x7623d  2      OPC=ja_label          
  addl $0x30, %eax                  #  48    0x7623f  3      OPC=addl_r32_imm8     
  movl %eax, 0x10(%rsp)             #  49    0x76242  4      OPC=movl_m32_r32      
  jmpq .L_762a3                     #  50    0x76246  2      OPC=jmpq_label        
.L_76247:                           #        0x76248  0      OPC=<label>           
  movq %rbp, %rax                   #  51    0x76248  3      OPC=movq_r64_r64      
  shrq $0x9, %rax                   #  52    0x7624b  4      OPC=shrq_r64_imm8     
  cmpq $0x14, %rax                  #  53    0x7624f  4      OPC=cmpq_r64_imm8     
  ja .L_7625d                       #  54    0x76253  2      OPC=ja_label          
  addl $0x5b, %eax                  #  55    0x76255  3      OPC=addl_r32_imm8     
  movl %eax, 0x10(%rsp)             #  56    0x76258  4      OPC=movl_m32_r32      
  jmpq .L_762a3                     #  57    0x7625c  2      OPC=jmpq_label        
.L_7625d:                           #        0x7625e  0      OPC=<label>           
  movq %rbp, %rax                   #  58    0x7625e  3      OPC=movq_r64_r64      
  shrq $0xc, %rax                   #  59    0x76261  4      OPC=shrq_r64_imm8     
  cmpq $0xa, %rax                   #  60    0x76265  4      OPC=cmpq_r64_imm8     
  ja .L_76273                       #  61    0x76269  2      OPC=ja_label          
  addl $0x6e, %eax                  #  62    0x7626b  3      OPC=addl_r32_imm8     
  movl %eax, 0x10(%rsp)             #  63    0x7626e  4      OPC=movl_m32_r32      
  jmpq .L_762a3                     #  64    0x76272  2      OPC=jmpq_label        
.L_76273:                           #        0x76274  0      OPC=<label>           
  movq %rbp, %rax                   #  65    0x76274  3      OPC=movq_r64_r64      
  shrq $0xf, %rax                   #  66    0x76277  4      OPC=shrq_r64_imm8     
  cmpq $0x4, %rax                   #  67    0x7627b  4      OPC=cmpq_r64_imm8     
  ja .L_76289                       #  68    0x7627f  2      OPC=ja_label          
  addl $0x77, %eax                  #  69    0x76281  3      OPC=addl_r32_imm8     
  movl %eax, 0x10(%rsp)             #  70    0x76284  4      OPC=movl_m32_r32      
  jmpq .L_762a3                     #  71    0x76288  2      OPC=jmpq_label        
.L_76289:                           #        0x7628a  0      OPC=<label>           
  movq %rbp, %rax                   #  72    0x7628a  3      OPC=movq_r64_r64      
  shrq $0x12, %rax                  #  73    0x7628d  4      OPC=shrq_r64_imm8     
  leal 0x7c(%rax), %edx             #  74    0x76291  3      OPC=leal_r32_m16      
  cmpq $0x2, %rax                   #  75    0x76294  4      OPC=cmpq_r64_imm8     
  movl $0x7e, %eax                  #  76    0x76298  5      OPC=movl_r32_imm32    
  cmovbel %edx, %eax                #  77    0x7629d  3      OPC=cmovbel_r32_r32   
  movl %eax, 0x10(%rsp)             #  78    0x762a0  4      OPC=movl_m32_r32      
.L_762a3:                           #        0x762a4  0      OPC=<label>           
  leaq -0x1(%rbp), %r14             #  79    0x762a4  4      OPC=leaq_r64_m16      
  movq 0x8(%rsp), %rax              #  80    0x762a8  5      OPC=movq_r64_m64      
  addq $0x58, %rax                  #  81    0x762ad  4      OPC=addq_r64_imm8     
  movq %rax, (%rsp)                 #  82    0x762b1  4      OPC=movq_m64_r64      
  movl $0x0, %ecx                   #  83    0x762b5  5      OPC=movl_r32_imm32    
  movl $0x1, %r15d                  #  84    0x762ba  6      OPC=movl_r32_imm32    
  addq $0x2f, %rbp                  #  85    0x762c0  4      OPC=addq_r64_imm8     
  movq %r14, %r13                   #  86    0x762c4  3      OPC=movq_r64_r64      
  notq %r13                         #  87    0x762c7  3      OPC=notq_r64          
.L_762c9:                           #        0x762ca  0      OPC=<label>           
  cmpl 0x10(%rsp), %r15d            #  88    0x762ca  5      OPC=cmpl_r32_m32      
  jge .L_762da                      #  89    0x762cf  2      OPC=jge_label         
  cmpl $0x1, %r15d                  #  90    0x762d1  4      OPC=cmpl_r32_imm8     
  jne .L_76382                      #  91    0x762d5  6      OPC=jne_label_1       
.L_762da:                           #        0x762db  0      OPC=<label>           
  movq (%rsp), %rax                 #  92    0x762db  4      OPC=movq_r64_m64      
  movq %rax, %r12                   #  93    0x762df  3      OPC=movq_r64_r64      
  movq 0x18(%rax), %rbx             #  94    0x762e2  4      OPC=movq_r64_m64      
  cmpq %rbx, %rax                   #  95    0x762e6  3      OPC=cmpq_r64_r64      
  je .L_76382                       #  96    0x762e9  6      OPC=je_label_1        
.L_762ee:                           #        0x762ef  0      OPC=<label>           
  movq 0x8(%rbx), %rax              #  97    0x762ef  4      OPC=movq_r64_m64      
  andq $0xf8, %rax                  #  98    0x762f3  4      OPC=andq_r64_imm8     
  cmpq %rbp, %rax                   #  99    0x762f7  3      OPC=cmpq_r64_r64      
  jbe .L_76375                      #  100   0x762fa  2      OPC=jbe_label         
  leaq (%rbx,%rbp,1), %rdi          #  101   0x762fc  4      OPC=leaq_r64_m16      
  andq %r13, %rdi                   #  102   0x76300  3      OPC=andq_r64_r64      
  leaq 0x30(%rbx), %rdx             #  103   0x76303  4      OPC=leaq_r64_m16      
  cmpq %rdx, %rdi                   #  104   0x76307  3      OPC=cmpq_r64_r64      
  jae .L_7632a                      #  105   0x7630a  2      OPC=jae_label         
  leaq 0xe2908(%rip), %rcx          #  106   0x7630c  7      OPC=leaq_r64_m16      
  movl $0x11aa, %edx                #  107   0x76313  5      OPC=movl_r32_imm32    
  leaq 0xe2601(%rip), %rsi          #  108   0x76318  7      OPC=leaq_r64_m16      
  leaq 0xe6293(%rip), %rdi          #  109   0x7631f  7      OPC=leaq_r64_m16      
  callq .__malloc_assert            #  110   0x76326  5      OPC=callq_label       
.L_7632a:                           #        0x7632b  0      OPC=<label>           
  leaq (%rbx,%rax,1), %rdx          #  111   0x7632b  4      OPC=leaq_r64_m16      
  cmpq %rdx, %rdi                   #  112   0x7632f  3      OPC=cmpq_r64_r64      
  jb .L_76352                       #  113   0x76332  2      OPC=jb_label          
  leaq 0xe28e0(%rip), %rcx          #  114   0x76334  7      OPC=leaq_r64_m16      
  movl $0x11ab, %edx                #  115   0x7633b  5      OPC=movl_r32_imm32    
  leaq 0xe25d9(%rip), %rsi          #  116   0x76340  7      OPC=leaq_r64_m16      
  leaq 0xe62a3(%rip), %rdi          #  117   0x76347  7      OPC=leaq_r64_m16      
  callq .__malloc_assert            #  118   0x7634e  5      OPC=callq_label       
.L_76352:                           #        0x76353  0      OPC=<label>           
  movq %rbx, %rsi                   #  119   0x76353  3      OPC=movq_r64_r64      
  subq %rdi, %rsi                   #  120   0x76356  3      OPC=subq_r64_r64      
  addq %rsi, %rax                   #  121   0x76359  3      OPC=addq_r64_r64      
  cmpq %rax, %r14                   #  122   0x7635c  3      OPC=cmpq_r64_r64      
  jae .L_76375                      #  123   0x7635f  2      OPC=jae_label         
  andq %r13, %rax                   #  124   0x76361  3      OPC=andq_r64_r64      
  movq %rax, %rsi                   #  125   0x76364  3      OPC=movq_r64_r64      
  movl $0x4, %edx                   #  126   0x76367  5      OPC=movl_r32_imm32    
  callq .__madvise                  #  127   0x7636c  5      OPC=callq_label       
  movl $0x1, %ecx                   #  128   0x76371  5      OPC=movl_r32_imm32    
.L_76375:                           #        0x76376  0      OPC=<label>           
  movq 0x18(%rbx), %rbx             #  129   0x76376  4      OPC=movq_r64_m64      
  cmpq %rbx, %r12                   #  130   0x7637a  3      OPC=cmpq_r64_r64      
  jne .L_762ee                      #  131   0x7637d  6      OPC=jne_label_1       
.L_76382:                           #        0x76383  0      OPC=<label>           
  addl $0x1, %r15d                  #  132   0x76383  4      OPC=addl_r32_imm8     
  addq $0x10, (%rsp)                #  133   0x76387  5      OPC=addq_m64_imm8     
  cmpl $0x80, %r15d                 #  134   0x7638c  7      OPC=cmpl_r32_imm32    
  jne .L_762c9                      #  135   0x76393  6      OPC=jne_label_1       
  movl %ecx, %ebx                   #  136   0x76399  2      OPC=movl_r32_r32      
  movl $0x0, %eax                   #  137   0x7639b  5      OPC=movl_r32_imm32    
  leaq 0x31589a(%rip), %rdx         #  138   0x763a0  7      OPC=leaq_r64_m16      
  cmpq %rdx, 0x8(%rsp)              #  139   0x763a7  5      OPC=cmpq_m64_r64      
  jne .L_763ba                      #  140   0x763ac  2      OPC=jne_label         
  movq %rdx, %rsi                   #  141   0x763ae  3      OPC=movq_r64_r64      
  movq 0x18(%rsp), %rdi             #  142   0x763b1  5      OPC=movq_r64_m64      
  callq .systrim                    #  143   0x763b6  5      OPC=callq_label       
.L_763ba:                           #        0x763bb  0      OPC=<label>           
  orl %ebx, %eax                    #  144   0x763bb  2      OPC=orl_r32_r32       
.L_763bc:                           #        0x763bd  0      OPC=<label>           
  orl %eax, 0x14(%rsp)              #  145   0x763bd  4      OPC=orl_m32_r32       
  movq 0x8(%rsp), %rdx              #  146   0x763c1  5      OPC=movq_r64_m64      
  cmpl $0x0, 0x31a834(%rip)         #  147   0x763c6  7      OPC=cmpl_m32_imm8     
  je .L_763d5                       #  148   0x763cd  2      OPC=je_label          
  lock                              #  149   0x763cf  1      OPC=lock              
  decl (%rdx)                       #  150   0x763d0  2      OPC=decl_m32          
  nop                               #  151   0x763d2  1      OPC=nop               
  jne .L_763d9                      #  152   0x763d3  2      OPC=jne_label         
  jmpq .L_763ef                     #  153   0x763d5  2      OPC=jmpq_label        
.L_763d5:                           #        0x763d7  0      OPC=<label>           
  decl (%rdx)                       #  154   0x763d7  2      OPC=decl_m32          
  je .L_763ef                       #  155   0x763d9  2      OPC=je_label          
.L_763d9:                           #        0x763db  0      OPC=<label>           
  leaq (%rdx), %rdi                 #  156   0x763db  3      OPC=leaq_r64_m16      
  subq $0x80, %rsp                  #  157   0x763de  7      OPC=subq_r64_imm32    
  callq .__lll_unlock_wake_private  #  158   0x763e5  5      OPC=callq_label       
  addq $0x80, %rsp                  #  159   0x763ea  7      OPC=addq_r64_imm32    
.L_763ef:                           #        0x763f1  0      OPC=<label>           
  movq 0x868(%rdx), %rax            #  160   0x763f1  7      OPC=movq_r64_m64      
  movq %rax, 0x8(%rsp)              #  161   0x763f8  5      OPC=movq_m64_r64      
  leaq 0x31583e(%rip), %rcx         #  162   0x763fd  7      OPC=leaq_r64_m16      
  cmpq %rcx, %rax                   #  163   0x76404  3      OPC=cmpq_r64_r64      
  jne .L_761be                      #  164   0x76407  6      OPC=jne_label_1       
  movl 0x14(%rsp), %eax             #  165   0x7640d  4      OPC=movl_r32_m32      
  addq $0x28, %rsp                  #  166   0x76411  4      OPC=addq_r64_imm8     
  popq %rbx                         #  167   0x76415  1      OPC=popq_r64_1        
  popq %rbp                         #  168   0x76416  1      OPC=popq_r64_1        
  popq %r12                         #  169   0x76417  2      OPC=popq_r64_1        
  popq %r13                         #  170   0x76419  2      OPC=popq_r64_1        
  popq %r14                         #  171   0x7641b  2      OPC=popq_r64_1        
  popq %r15                         #  172   0x7641d  2      OPC=popq_r64_1        
  retq                              #  173   0x7641f  1      OPC=retq              
                                                                                   
.size malloc_trim, .-malloc_trim

