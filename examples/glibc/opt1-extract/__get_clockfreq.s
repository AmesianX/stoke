  .text
  .globl __get_clockfreq
  .type __get_clockfreq, @function

#! file-offset 0xea8ba
#! rip-offset  0xea8ba
#! capacity    386 bytes

# Text                       #  Line  RIP      Bytes  Opcode              
.__get_clockfreq:            #        0xea8ba  0      OPC=<label>         
  movq 0x2a4c87(%rip), %rax  #  1     0xea8ba  7      OPC=movq_r64_m64    
  testq %rax, %rax           #  2     0xea8c1  3      OPC=testq_r64_r64   
  jne .L_eaa3a               #  3     0xea8c4  6      OPC=jne_label_1     
  pushq %rbp                 #  4     0xea8ca  1      OPC=pushq_r64_1     
  pushq %rbx                 #  5     0xea8cb  1      OPC=pushq_r64_1     
  subq $0x1008, %rsp         #  6     0xea8cc  7      OPC=subq_r64_imm32  
  movl $0x0, %esi            #  7     0xea8d3  5      OPC=movl_r32_imm32  
  leaq 0x6efe6(%rip), %rdi   #  8     0xea8d8  7      OPC=leaq_r64_m16    
  callq .__open              #  9     0xea8df  5      OPC=callq_label     
  movl %eax, %ebx            #  10    0xea8e4  2      OPC=movl_r32_r32    
  cmpl $0xffffffff, %eax     #  11    0xea8e6  6      OPC=cmpl_r32_imm32  
  nop                        #  12    0xea8ec  1      OPC=nop             
  nop                        #  13    0xea8ed  1      OPC=nop             
  nop                        #  14    0xea8ee  1      OPC=nop             
  je .L_eaa02                #  15    0xea8ef  6      OPC=je_label_1      
  movq %rsp, %rsi            #  16    0xea8f5  3      OPC=movq_r64_r64    
  movl $0x1000, %edx         #  17    0xea8f8  5      OPC=movl_r32_imm32  
  movl %eax, %edi            #  18    0xea8fd  2      OPC=movl_r32_r32    
  callq .__read              #  19    0xea8ff  5      OPC=callq_label     
  movq %rax, %rbp            #  20    0xea904  3      OPC=movq_r64_r64    
  testq %rax, %rax           #  21    0xea907  3      OPC=testq_r64_r64   
  jle .L_ea9fb               #  22    0xea90a  6      OPC=jle_label_1     
  movq %rsp, %rdi            #  23    0xea910  3      OPC=movq_r64_r64    
  movl $0x7, %ecx            #  24    0xea913  5      OPC=movl_r32_imm32  
  leaq 0x6fa1b(%rip), %rdx   #  25    0xea918  7      OPC=leaq_r64_m16    
  movq %rax, %rsi            #  26    0xea91f  3      OPC=movq_r64_r64    
  callq .memmem              #  27    0xea922  5      OPC=callq_label     
  movq %rax, %rdx            #  28    0xea927  3      OPC=movq_r64_r64    
  testq %rax, %rax           #  29    0xea92a  3      OPC=testq_r64_r64   
  je .L_ea9fb                #  30    0xea92d  6      OPC=je_label_1      
  leaq (%rsp,%rbp,1), %rsi   #  31    0xea933  4      OPC=leaq_r64_m16    
  cmpq %rsi, %rax            #  32    0xea937  3      OPC=cmpq_r64_r64    
  jae .L_ea9c8               #  33    0xea93a  6      OPC=jae_label_1     
  movzbl (%rax), %eax        #  34    0xea940  3      OPC=movzbl_r32_m8   
  leal -0x30(%rax), %ecx     #  35    0xea943  3      OPC=leal_r32_m16    
  cmpb $0x9, %cl             #  36    0xea946  3      OPC=cmpb_r8_imm8    
  jbe .L_eaa0b               #  37    0xea949  6      OPC=jbe_label_1     
  cmpb $0xa, %al             #  38    0xea94f  2      OPC=cmpb_al_imm8    
  je .L_eaa0b                #  39    0xea951  6      OPC=je_label_1      
.L_ea951:                    #        0xea957  0      OPC=<label>         
  addq $0x1, %rdx            #  40    0xea957  4      OPC=addq_r64_imm8   
  cmpq %rsi, %rdx            #  41    0xea95b  3      OPC=cmpq_r64_r64    
  je .L_ea9cf                #  42    0xea95e  2      OPC=je_label        
  movzbl (%rdx), %eax        #  43    0xea960  3      OPC=movzbl_r32_m8   
  leal -0x30(%rax), %ecx     #  44    0xea963  3      OPC=leal_r32_m16    
  cmpb $0x9, %cl             #  45    0xea966  3      OPC=cmpb_r8_imm8    
  jbe .L_eaa0b               #  46    0xea969  6      OPC=jbe_label_1     
  cmpb $0xa, %al             #  47    0xea96f  2      OPC=cmpb_al_imm8    
  jne .L_ea951               #  48    0xea971  2      OPC=jne_label       
  jmpq .L_eaa0b              #  49    0xea973  5      OPC=jmpq_label_1    
.L_ea972:                    #        0xea978  0      OPC=<label>         
  leal -0x30(%rcx), %eax     #  50    0xea978  3      OPC=leal_r32_m16    
  cmpb $0x9, %al             #  51    0xea97b  2      OPC=cmpb_al_imm8    
  ja .L_ea994                #  52    0xea97d  2      OPC=ja_label        
  movsbl %cl, %ecx           #  53    0xea97f  3      OPC=movsbl_r32_r8   
  subl $0x30, %ecx           #  54    0xea982  3      OPC=subl_r32_imm8   
  movslq %ecx, %rcx          #  55    0xea985  3      OPC=movslq_r64_r32  
  leaq (%rdi,%rdi,4), %rax   #  56    0xea988  4      OPC=leaq_r64_m16    
  leaq (%rcx,%rax,2), %rdi   #  57    0xea98c  4      OPC=leaq_r64_m16    
  cmpl $0x1, %r8d            #  58    0xea990  4      OPC=cmpl_r32_imm8   
  sbbl $0xffffffff, %r9d     #  59    0xea994  7      OPC=sbbl_r32_imm32  
  nop                        #  60    0xea99b  1      OPC=nop             
  nop                        #  61    0xea99c  1      OPC=nop             
  nop                        #  62    0xea99d  1      OPC=nop             
  nop                        #  63    0xea99e  1      OPC=nop             
  jmpq .L_ea99b              #  64    0xea99f  2      OPC=jmpq_label      
.L_ea994:                    #        0xea9a1  0      OPC=<label>         
  cmpb $0x2e, %cl            #  65    0xea9a1  3      OPC=cmpb_r8_imm8    
  cmovel %r10d, %r8d         #  66    0xea9a4  4      OPC=cmovel_r32_r32  
.L_ea99b:                    #        0xea9a8  0      OPC=<label>         
  addq $0x1, %rdx            #  67    0xea9a8  4      OPC=addq_r64_imm8   
  cmpq %rdx, %rsi            #  68    0xea9ac  3      OPC=cmpq_r64_r64    
  ja .L_ea9b7                #  69    0xea9af  2      OPC=ja_label        
  movq %rdi, 0x2a4b9d(%rip)  #  70    0xea9b1  7      OPC=movq_m64_r64    
.L_ea9ab:                    #        0xea9b8  0      OPC=<label>         
  leal 0x1(%r9), %edx        #  71    0xea9b8  4      OPC=leal_r32_m16    
  cmpl $0x5, %r9d            #  72    0xea9bc  4      OPC=cmpl_r32_imm8   
  jle .L_ea9db               #  73    0xea9c0  2      OPC=jle_label       
  jmpq .L_ea9fb              #  74    0xea9c2  2      OPC=jmpq_label      
.L_ea9b7:                    #        0xea9c4  0      OPC=<label>         
  movzbl (%rdx), %ecx        #  75    0xea9c4  3      OPC=movzbl_r32_m8   
  cmpb $0xa, %cl             #  76    0xea9c7  3      OPC=cmpb_r8_imm8    
  jne .L_ea972               #  77    0xea9ca  2      OPC=jne_label       
  movq %rdi, 0x2a4b82(%rip)  #  78    0xea9cc  7      OPC=movq_m64_r64    
  jmpq .L_ea9ab              #  79    0xea9d3  2      OPC=jmpq_label      
.L_ea9c8:                    #        0xea9d5  0      OPC=<label>         
  movl $0x1, %edx            #  80    0xea9d5  5      OPC=movl_r32_imm32  
  jmpq .L_ea9db              #  81    0xea9da  2      OPC=jmpq_label      
.L_ea9cf:                    #        0xea9dc  0      OPC=<label>         
  movl $0x1, %edx            #  82    0xea9dc  5      OPC=movl_r32_imm32  
  jmpq .L_ea9db              #  83    0xea9e1  2      OPC=jmpq_label      
.L_ea9d6:                    #        0xea9e3  0      OPC=<label>         
  movl $0x1, %edx            #  84    0xea9e3  5      OPC=movl_r32_imm32  
.L_ea9db:                    #        0xea9e8  0      OPC=<label>         
  movq 0x2a4b66(%rip), %rax  #  85    0xea9e8  7      OPC=movq_r64_m64    
.L_ea9e2:                    #        0xea9ef  0      OPC=<label>         
  leaq (%rax,%rax,4), %rax   #  86    0xea9ef  4      OPC=leaq_r64_m16    
  addq %rax, %rax            #  87    0xea9f3  3      OPC=addq_r64_r64    
  addl $0x1, %edx            #  88    0xea9f6  3      OPC=addl_r32_imm8   
  leal -0x1(%rdx), %ecx      #  89    0xea9f9  3      OPC=leal_r32_m16    
  cmpl $0x5, %ecx            #  90    0xea9fc  3      OPC=cmpl_r32_imm8   
  jle .L_ea9e2               #  91    0xea9ff  2      OPC=jle_label       
  movq %rax, 0x2a4b4d(%rip)  #  92    0xeaa01  7      OPC=movq_m64_r64    
.L_ea9fb:                    #        0xeaa08  0      OPC=<label>         
  movl %ebx, %edi            #  93    0xeaa08  2      OPC=movl_r32_r32    
  callq .__close             #  94    0xeaa0a  5      OPC=callq_label     
.L_eaa02:                    #        0xeaa0f  0      OPC=<label>         
  movq 0x2a4b3f(%rip), %rax  #  95    0xeaa0f  7      OPC=movq_r64_m64    
  jmpq .L_eaa31              #  96    0xeaa16  2      OPC=jmpq_label      
.L_eaa0b:                    #        0xeaa18  0      OPC=<label>         
  movzbl (%rdx), %ecx        #  97    0xeaa18  3      OPC=movzbl_r32_m8   
  cmpb $0xa, %cl             #  98    0xeaa1b  3      OPC=cmpb_r8_imm8    
  je .L_ea9d6                #  99    0xeaa1e  2      OPC=je_label        
  movq 0x2a4b2e(%rip), %rdi  #  100   0xeaa20  7      OPC=movq_r64_m64    
  movl $0x0, %r9d            #  101   0xeaa27  6      OPC=movl_r32_imm32  
  movl $0x0, %r8d            #  102   0xeaa2d  6      OPC=movl_r32_imm32  
  movl $0x1, %r10d           #  103   0xeaa33  6      OPC=movl_r32_imm32  
  jmpq .L_ea972              #  104   0xeaa39  5      OPC=jmpq_label_1    
.L_eaa31:                    #        0xeaa3e  0      OPC=<label>         
  addq $0x1008, %rsp         #  105   0xeaa3e  7      OPC=addq_r64_imm32  
  popq %rbx                  #  106   0xeaa45  1      OPC=popq_r64_1      
  popq %rbp                  #  107   0xeaa46  1      OPC=popq_r64_1      
.L_eaa3a:                    #        0xeaa47  0      OPC=<label>         
  retq                       #  108   0xeaa47  1      OPC=retq            
  nop                        #  109   0xeaa48  1      OPC=nop             
                                                                          
.size __get_clockfreq, .-__get_clockfreq

