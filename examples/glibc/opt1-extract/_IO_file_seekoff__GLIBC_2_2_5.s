  .text
  .globl _IO_file_seekoff__GLIBC_2_2_5
  .type _IO_file_seekoff__GLIBC_2_2_5, @function

#! file-offset 0x6cba4
#! rip-offset  0x6cba4
#! capacity    1043 bytes

# Text                           #  Line  RIP      Bytes  Opcode               
._IO_file_seekoff__GLIBC_2_2_5:  #        0x6cba4  0      OPC=<label>          
  pushq %r14                     #  1     0x6cba4  2      OPC=pushq_r64_1      
  pushq %r13                     #  2     0x6cba6  2      OPC=pushq_r64_1      
  pushq %r12                     #  3     0x6cba8  2      OPC=pushq_r64_1      
  pushq %rbp                     #  4     0x6cbaa  1      OPC=pushq_r64_1      
  pushq %rbx                     #  5     0x6cbab  1      OPC=pushq_r64_1      
  subq $0x90, %rsp               #  6     0x6cbac  7      OPC=subq_r64_imm32   
  movq %rdi, %rbx                #  7     0x6cbb3  3      OPC=movq_r64_r64     
  testl %ecx, %ecx               #  8     0x6cbb6  2      OPC=testl_r32_r32    
  jne .L_6cc8b                   #  9     0x6cbb8  6      OPC=jne_label_1      
  cmpq $0x0, 0x38(%rdi)          #  10    0x6cbbe  5      OPC=cmpq_m64_imm8    
  je .L_6cc32                    #  11    0x6cbc3  2      OPC=je_label         
  movq 0x20(%rdi), %rax          #  12    0x6cbc5  4      OPC=movq_r64_m64     
  cmpq %rax, 0x28(%rdi)          #  13    0x6cbc9  4      OPC=cmpq_m64_r64     
  seta %r12b                     #  14    0x6cbcd  4      OPC=seta_r8          
  movl (%rdi), %eax              #  15    0x6cbd1  2      OPC=movl_r32_m32     
  shrl $0xc, %eax                #  16    0x6cbd3  3      OPC=shrl_r32_imm8    
  movl %eax, %ebp                #  17    0x6cbd6  2      OPC=movl_r32_r32     
  andl $0x1, %ebp                #  18    0x6cbd8  3      OPC=andl_r32_imm8    
  je .L_6cc0a                    #  19    0x6cbdb  2      OPC=je_label         
  testb %r12b, %r12b             #  20    0x6cbdd  3      OPC=testb_r8_r8      
  je .L_6cc0a                    #  21    0x6cbe0  2      OPC=je_label         
  movq 0xd8(%rdi), %rax          #  22    0x6cbe2  7      OPC=movq_r64_m64     
  movl $0x2, %edx                #  23    0x6cbe9  5      OPC=movl_r32_imm32   
  movl $0x0, %esi                #  24    0x6cbee  5      OPC=movl_r32_imm32   
  callq 0x80(%rax)               #  25    0x6cbf3  6      OPC=callq_m64        
  cmpq $0xff, %rax               #  26    0x6cbf9  4      OPC=cmpq_r64_imm8    
  je .L_6cf4a                    #  27    0x6cbfd  6      OPC=je_label_1       
  movq %rax, 0x90(%rbx)          #  28    0x6cc03  7      OPC=movq_m64_r64     
.L_6cc0a:                        #        0x6cc0a  0      OPC=<label>          
  testb %r12b, %r12b             #  29    0x6cc0a  3      OPC=testb_r8_r8      
  jne .L_6cc19                   #  30    0x6cc0d  2      OPC=jne_label        
  movq 0x8(%rbx), %rbp           #  31    0x6cc0f  4      OPC=movq_r64_m64     
  subq 0x10(%rbx), %rbp          #  32    0x6cc13  4      OPC=subq_r64_m64     
  jmpq .L_6cc37                  #  33    0x6cc17  2      OPC=jmpq_label       
.L_6cc19:                        #        0x6cc19  0      OPC=<label>          
  testb %bpl, %bpl               #  34    0x6cc19  3      OPC=testb_r8_r8      
  je .L_6cc28                    #  35    0x6cc1c  2      OPC=je_label         
  movq 0x28(%rbx), %rbp          #  36    0x6cc1e  4      OPC=movq_r64_m64     
  subq 0x20(%rbx), %rbp          #  37    0x6cc22  4      OPC=subq_r64_m64     
  jmpq .L_6cc37                  #  38    0x6cc26  2      OPC=jmpq_label       
.L_6cc28:                        #        0x6cc28  0      OPC=<label>          
  movq 0x28(%rbx), %rbp          #  39    0x6cc28  4      OPC=movq_r64_m64     
  subq 0x10(%rbx), %rbp          #  40    0x6cc2c  4      OPC=subq_r64_m64     
  jmpq .L_6cc37                  #  41    0x6cc30  2      OPC=jmpq_label       
.L_6cc32:                        #        0x6cc32  0      OPC=<label>          
  movl $0x0, %ebp                #  42    0x6cc32  5      OPC=movl_r32_imm32   
.L_6cc37:                        #        0x6cc37  0      OPC=<label>          
  movq 0x90(%rbx), %rax          #  43    0x6cc37  7      OPC=movq_r64_m64     
  cmpq $0xff, %rax               #  44    0x6cc3e  4      OPC=cmpq_r64_imm8    
  jne .L_6cc68                   #  45    0x6cc42  2      OPC=jne_label        
  movq 0xd8(%rbx), %rax          #  46    0x6cc44  7      OPC=movq_r64_m64     
  movl $0x1, %edx                #  47    0x6cc4b  5      OPC=movl_r32_imm32   
  movl $0x0, %esi                #  48    0x6cc50  5      OPC=movl_r32_imm32   
  movq %rbx, %rdi                #  49    0x6cc55  3      OPC=movq_r64_r64     
  callq 0x80(%rax)               #  50    0x6cc58  6      OPC=callq_m64        
  cmpq $0xff, %rax               #  51    0x6cc5e  4      OPC=cmpq_r64_imm8    
  je .L_6cf53                    #  52    0x6cc62  6      OPC=je_label_1       
.L_6cc68:                        #        0x6cc68  0      OPC=<label>          
  addq %rbp, %rax                #  53    0x6cc68  3      OPC=addq_r64_r64     
  jns .L_6cfa7                   #  54    0x6cc6b  6      OPC=jns_label_1      
  movq 0x31e208(%rip), %rax      #  55    0x6cc71  7      OPC=movq_r64_m64     
  movl $0x16, (%rax)             #  56    0x6cc78  6      OPC=movl_m32_imm32   
  nop                            #  57    0x6cc7e  1      OPC=nop              
  movq $0xffffffff, %rax         #  58    0x6cc7f  7      OPC=movq_r64_imm32   
  jmpq .L_6cfa7                  #  59    0x6cc86  5      OPC=jmpq_label_1     
.L_6cc8b:                        #        0x6cc8b  0      OPC=<label>          
  movq %rsi, %rbp                #  60    0x6cc8b  3      OPC=movq_r64_r64     
  movl %edx, %r12d               #  61    0x6cc8e  3      OPC=movl_r32_r32     
  movq 0x10(%rdi), %rax          #  62    0x6cc91  4      OPC=movq_r64_m64     
  cmpq %rax, 0x18(%rdi)          #  63    0x6cc95  4      OPC=cmpq_m64_r64     
  jne .L_6cca5                   #  64    0x6cc99  2      OPC=jne_label        
  movq 0x28(%rdi), %rax          #  65    0x6cc9b  4      OPC=movq_r64_m64     
  cmpq %rax, 0x20(%rdi)          #  66    0x6cc9f  4      OPC=cmpq_m64_r64     
  je .L_6ccb7                    #  67    0x6cca3  2      OPC=je_label         
.L_6cca5:                        #        0x6cca5  0      OPC=<label>          
  movl $0x0, %r13d               #  68    0x6cca5  6      OPC=movl_r32_imm32   
  movq 0x20(%rbx), %rax          #  69    0x6ccab  4      OPC=movq_r64_m64     
  cmpq %rax, 0x28(%rbx)          #  70    0x6ccaf  4      OPC=cmpq_m64_r64     
  ja .L_6ccc5                    #  71    0x6ccb3  2      OPC=ja_label         
  jmpq .L_6ccbd                  #  72    0x6ccb5  2      OPC=jmpq_label       
.L_6ccb7:                        #        0x6ccb7  0      OPC=<label>          
  movl $0x1, %r13d               #  73    0x6ccb7  6      OPC=movl_r32_imm32   
.L_6ccbd:                        #        0x6ccbd  0      OPC=<label>          
  testl $0x800, (%rbx)           #  74    0x6ccbd  6      OPC=testl_m32_imm32  
  je .L_6ccd5                    #  75    0x6ccc3  2      OPC=je_label         
.L_6ccc5:                        #        0x6ccc5  0      OPC=<label>          
  movq %rbx, %rdi                #  76    0x6ccc5  3      OPC=movq_r64_r64     
  callq ._IO_switch_to_get_mode  #  77    0x6ccc8  5      OPC=callq_label      
  testl %eax, %eax               #  78    0x6cccd  2      OPC=testl_r32_r32    
  jne .L_6cf5c                   #  79    0x6cccf  6      OPC=jne_label_1      
.L_6ccd5:                        #        0x6ccd5  0      OPC=<label>          
  cmpq $0x0, 0x38(%rbx)          #  80    0x6ccd5  5      OPC=cmpq_m64_imm8    
  jne .L_6cd14                   #  81    0x6ccda  2      OPC=jne_label        
  movq 0x18(%rbx), %rdi          #  82    0x6ccdc  4      OPC=movq_r64_m64     
  testq %rdi, %rdi               #  83    0x6cce0  3      OPC=testq_r64_r64    
  je .L_6ccf0                    #  84    0x6cce3  2      OPC=je_label         
  callq .L_1f8d0                 #  85    0x6cce5  5      OPC=callq_label      
  andl $0xfffffeff, (%rbx)       #  86    0x6ccea  6      OPC=andl_m32_imm32   
.L_6ccf0:                        #        0x6ccf0  0      OPC=<label>          
  movq %rbx, %rdi                #  87    0x6ccf0  3      OPC=movq_r64_r64     
  callq ._IO_doallocbuf          #  88    0x6ccf3  5      OPC=callq_label      
  movq 0x38(%rbx), %rax          #  89    0x6ccf8  4      OPC=movq_r64_m64     
  movq %rax, 0x28(%rbx)          #  90    0x6ccfc  4      OPC=movq_m64_r64     
  movq %rax, 0x20(%rbx)          #  91    0x6cd00  4      OPC=movq_m64_r64     
  movq %rax, 0x30(%rbx)          #  92    0x6cd04  4      OPC=movq_m64_r64     
  movq %rax, 0x18(%rbx)          #  93    0x6cd08  4      OPC=movq_m64_r64     
  movq %rax, 0x8(%rbx)           #  94    0x6cd0c  4      OPC=movq_m64_r64     
  movq %rax, 0x10(%rbx)          #  95    0x6cd10  4      OPC=movq_m64_r64     
.L_6cd14:                        #        0x6cd14  0      OPC=<label>          
  cmpl $0x1, %r12d               #  96    0x6cd14  4      OPC=cmpl_r32_imm8    
  je .L_6cd22                    #  97    0x6cd18  2      OPC=je_label         
  cmpl $0x2, %r12d               #  98    0x6cd1a  4      OPC=cmpl_r32_imm8    
  je .L_6cd5d                    #  99    0x6cd1e  2      OPC=je_label         
  jmpq .L_6cd97                  #  100   0x6cd20  2      OPC=jmpq_label       
.L_6cd22:                        #        0x6cd22  0      OPC=<label>          
  movq 0x8(%rbx), %rax           #  101   0x6cd22  4      OPC=movq_r64_m64     
  subq 0x10(%rbx), %rax          #  102   0x6cd26  4      OPC=subq_r64_m64     
  addq %rax, %rbp                #  103   0x6cd2a  3      OPC=addq_r64_r64     
  movq 0x90(%rbx), %rsi          #  104   0x6cd2d  7      OPC=movq_r64_m64     
  cmpq $0xff, %rsi               #  105   0x6cd34  4      OPC=cmpq_r64_imm8    
  je .L_6cee0                    #  106   0x6cd38  6      OPC=je_label_1       
  addq %rsi, %rbp                #  107   0x6cd3e  3      OPC=addq_r64_r64     
  jns .L_6cda6                   #  108   0x6cd41  2      OPC=jns_label        
  movq 0x31e136(%rip), %rax      #  109   0x6cd43  7      OPC=movq_r64_m64     
  movl $0x16, (%rax)             #  110   0x6cd4a  6      OPC=movl_m32_imm32   
  nop                            #  111   0x6cd50  1      OPC=nop              
  movq $0xffffffff, %rax         #  112   0x6cd51  7      OPC=movq_r64_imm32   
  jmpq .L_6cfa7                  #  113   0x6cd58  5      OPC=jmpq_label_1     
.L_6cd5d:                        #        0x6cd5d  0      OPC=<label>          
  movq 0xd8(%rbx), %rax          #  114   0x6cd5d  7      OPC=movq_r64_m64     
  movq %rsp, %rsi                #  115   0x6cd64  3      OPC=movq_r64_r64     
  movq %rbx, %rdi                #  116   0x6cd67  3      OPC=movq_r64_r64     
  callq 0x90(%rax)               #  117   0x6cd6a  6      OPC=callq_m64        
  testl %eax, %eax               #  118   0x6cd70  2      OPC=testl_r32_r32    
  jne .L_6cee0                   #  119   0x6cd72  6      OPC=jne_label_1      
  movl 0x18(%rsp), %eax          #  120   0x6cd78  4      OPC=movl_r32_m32     
  andl $0xf000, %eax             #  121   0x6cd7c  5      OPC=andl_eax_imm32   
  cmpl $0x8000, %eax             #  122   0x6cd81  5      OPC=cmpl_eax_imm32   
  jne .L_6cee0                   #  123   0x6cd86  6      OPC=jne_label_1      
  addq 0x30(%rsp), %rbp          #  124   0x6cd8c  5      OPC=addq_r64_m64     
  movl $0x0, %r12d               #  125   0x6cd91  6      OPC=movl_r32_imm32   
.L_6cd97:                        #        0x6cd97  0      OPC=<label>          
  movq 0x90(%rbx), %rsi          #  126   0x6cd97  7      OPC=movq_r64_m64     
  cmpq $0xff, %rsi               #  127   0x6cd9e  4      OPC=cmpq_r64_imm8    
  jne .L_6cdac                   #  128   0x6cda2  2      OPC=jne_label        
  jmpq .L_6ce08                  #  129   0x6cda4  2      OPC=jmpq_label       
.L_6cda6:                        #        0x6cda6  0      OPC=<label>          
  movl $0x0, %r12d               #  130   0x6cda6  6      OPC=movl_r32_imm32   
.L_6cdac:                        #        0x6cdac  0      OPC=<label>          
  cmpq $0x0, 0x18(%rbx)          #  131   0x6cdac  5      OPC=cmpq_m64_imm8    
  je .L_6ce08                    #  132   0x6cdb1  2      OPC=je_label         
  movl (%rbx), %eax              #  133   0x6cdb3  2      OPC=movl_r32_m32     
  testb $0x1, %ah                #  134   0x6cdb5  3      OPC=testb_rh_imm8    
  jne .L_6ce08                   #  135   0x6cdb8  2      OPC=jne_label        
  movq 0x38(%rbx), %rcx          #  136   0x6cdba  4      OPC=movq_r64_m64     
  movq %rcx, %rdx                #  137   0x6cdbe  3      OPC=movq_r64_r64     
  subq 0x10(%rbx), %rdx          #  138   0x6cdc1  4      OPC=subq_r64_m64     
  addq %rsi, %rdx                #  139   0x6cdc5  3      OPC=addq_r64_r64     
  cmpq %rdx, %rbp                #  140   0x6cdc8  3      OPC=cmpq_r64_r64     
  jl .L_6ce08                    #  141   0x6cdcb  2      OPC=jl_label         
  cmpq %rsi, %rbp                #  142   0x6cdcd  3      OPC=cmpq_r64_r64     
  jge .L_6ce08                   #  143   0x6cdd0  2      OPC=jge_label        
  movq %rcx, 0x18(%rbx)          #  144   0x6cdd2  4      OPC=movq_m64_r64     
  movq %rbp, %rdi                #  145   0x6cdd6  3      OPC=movq_r64_r64     
  subq %rdx, %rdi                #  146   0x6cdd9  3      OPC=subq_r64_r64     
  movq %rdi, %rdx                #  147   0x6cddc  3      OPC=movq_r64_r64     
  addq %rcx, %rdx                #  148   0x6cddf  3      OPC=addq_r64_r64     
  movq %rdx, 0x8(%rbx)           #  149   0x6cde2  4      OPC=movq_m64_r64     
  movq %rcx, 0x28(%rbx)          #  150   0x6cde6  4      OPC=movq_m64_r64     
  movq %rcx, 0x20(%rbx)          #  151   0x6cdea  4      OPC=movq_m64_r64     
  movq %rcx, 0x30(%rbx)          #  152   0x6cdee  4      OPC=movq_m64_r64     
  andl $0xffffffef, %eax         #  153   0x6cdf2  6      OPC=andl_r32_imm32   
  nop                            #  154   0x6cdf8  1      OPC=nop              
  nop                            #  155   0x6cdf9  1      OPC=nop              
  nop                            #  156   0x6cdfa  1      OPC=nop              
  movl %eax, (%rbx)              #  157   0x6cdfb  2      OPC=movl_m32_r32     
  movq %rbp, %rax                #  158   0x6cdfd  3      OPC=movq_r64_r64     
  testq %rsi, %rsi               #  159   0x6ce00  3      OPC=testq_r64_r64    
  js .L_6cfa7                    #  160   0x6ce03  6      OPC=js_label_1       
  jmpq .L_6cf30                  #  161   0x6ce09  5      OPC=jmpq_label_1     
.L_6ce08:                        #        0x6ce0e  0      OPC=<label>          
  testb $0x4, (%rbx)             #  162   0x6ce0e  3      OPC=testb_m8_imm8    
  jne .L_6cee0                   #  163   0x6ce11  6      OPC=jne_label_1      
  movq 0x38(%rbx), %rdx          #  164   0x6ce17  4      OPC=movq_r64_m64     
  movq 0x40(%rbx), %rax          #  165   0x6ce1b  4      OPC=movq_r64_m64     
  movq %rdx, %rsi                #  166   0x6ce1f  3      OPC=movq_r64_r64     
  subq %rax, %rsi                #  167   0x6ce22  3      OPC=subq_r64_r64     
  andq %rbp, %rsi                #  168   0x6ce25  3      OPC=andq_r64_r64     
  movq %rbp, %r12                #  169   0x6ce28  3      OPC=movq_r64_r64     
  subq %rsi, %r12                #  170   0x6ce2b  3      OPC=subq_r64_r64     
  subq %rdx, %rax                #  171   0x6ce2e  3      OPC=subq_r64_r64     
  cmpq %rax, %r12                #  172   0x6ce31  3      OPC=cmpq_r64_r64     
  jg .L_6cf77                    #  173   0x6ce34  6      OPC=jg_label_1       
  movq 0xd8(%rbx), %rax          #  174   0x6ce3a  7      OPC=movq_r64_m64     
  movl $0x0, %edx                #  175   0x6ce41  5      OPC=movl_r32_imm32   
  movq %rbx, %rdi                #  176   0x6ce46  3      OPC=movq_r64_r64     
  callq 0x80(%rax)               #  177   0x6ce49  6      OPC=callq_m64        
  movq %rax, %r14                #  178   0x6ce4f  3      OPC=movq_r64_r64     
  testq %rax, %rax               #  179   0x6ce52  3      OPC=testq_r64_r64    
  js .L_6cf65                    #  180   0x6ce55  6      OPC=js_label_1       
  testq %r12, %r12               #  181   0x6ce5b  3      OPC=testq_r64_r64    
  je .L_6ce9a                    #  182   0x6ce5e  2      OPC=je_label         
  movq 0xd8(%rbx), %rax          #  183   0x6ce60  7      OPC=movq_r64_m64     
  movq 0x70(%rax), %rax          #  184   0x6ce67  4      OPC=movq_r64_m64     
  movq %r12, %rdx                #  185   0x6ce6b  3      OPC=movq_r64_r64     
  testl %r13d, %r13d             #  186   0x6ce6e  3      OPC=testl_r32_r32    
  jne .L_6ce75                   #  187   0x6ce71  2      OPC=jne_label        
  movq 0x40(%rbx), %rdx          #  188   0x6ce73  4      OPC=movq_r64_m64     
  subq 0x38(%rbx), %rdx          #  189   0x6ce77  4      OPC=subq_r64_m64     
.L_6ce75:                        #        0x6ce7b  0      OPC=<label>          
  movq 0x38(%rbx), %rsi          #  190   0x6ce7b  4      OPC=movq_r64_m64     
  movq %rbx, %rdi                #  191   0x6ce7f  3      OPC=movq_r64_r64     
  callq %rax                     #  192   0x6ce82  2      OPC=callq_r64        
  movq %rax, %rdx                #  193   0x6ce84  3      OPC=movq_r64_r64     
  cmpq %rax, %r12                #  194   0x6ce87  3      OPC=cmpq_r64_r64     
  jle .L_6ce9f                   #  195   0x6ce8a  2      OPC=jle_label        
  cmpq $0xff, %rax               #  196   0x6ce8c  4      OPC=cmpq_r64_imm8    
  je .L_6ced7                    #  197   0x6ce90  2      OPC=je_label         
  movq %r12, %rbp                #  198   0x6ce92  3      OPC=movq_r64_r64     
  subq %rax, %rbp                #  199   0x6ce95  3      OPC=subq_r64_r64     
  movl $0x1, %r12d               #  200   0x6ce98  6      OPC=movl_r32_imm32   
  jmpq .L_6cee0                  #  201   0x6ce9e  2      OPC=jmpq_label       
.L_6ce9a:                        #        0x6cea0  0      OPC=<label>          
  movl $0x0, %edx                #  202   0x6cea0  5      OPC=movl_r32_imm32   
.L_6ce9f:                        #        0x6cea5  0      OPC=<label>          
  movq 0x38(%rbx), %rax          #  203   0x6cea5  4      OPC=movq_r64_m64     
  movq %rax, 0x18(%rbx)          #  204   0x6cea9  4      OPC=movq_m64_r64     
  addq %rax, %r12                #  205   0x6cead  3      OPC=addq_r64_r64     
  movq %r12, 0x8(%rbx)           #  206   0x6ceb0  4      OPC=movq_m64_r64     
  leaq (%rax,%rdx,1), %rcx       #  207   0x6ceb4  4      OPC=leaq_r64_m16     
  movq %rcx, 0x10(%rbx)          #  208   0x6ceb8  4      OPC=movq_m64_r64     
  movq %rax, 0x28(%rbx)          #  209   0x6cebc  4      OPC=movq_m64_r64     
  movq %rax, 0x20(%rbx)          #  210   0x6cec0  4      OPC=movq_m64_r64     
  movq %rax, 0x30(%rbx)          #  211   0x6cec4  4      OPC=movq_m64_r64     
  addq %r14, %rdx                #  212   0x6cec8  3      OPC=addq_r64_r64     
  movq %rdx, 0x90(%rbx)          #  213   0x6cecb  7      OPC=movq_m64_r64     
  andl $0xffffffef, (%rbx)       #  214   0x6ced2  6      OPC=andl_m32_imm32   
  nop                            #  215   0x6ced8  1      OPC=nop              
  nop                            #  216   0x6ced9  1      OPC=nop              
  nop                            #  217   0x6ceda  1      OPC=nop              
  movq %rbp, %rax                #  218   0x6cedb  3      OPC=movq_r64_r64     
  jmpq .L_6cfa7                  #  219   0x6cede  5      OPC=jmpq_label_1     
.L_6ced7:                        #        0x6cee3  0      OPC=<label>          
  movq %r12, %rbp                #  220   0x6cee3  3      OPC=movq_r64_r64     
  movl $0x1, %r12d               #  221   0x6cee6  6      OPC=movl_r32_imm32   
.L_6cee0:                        #        0x6ceec  0      OPC=<label>          
  movq %rbx, %rdi                #  222   0x6ceec  3      OPC=movq_r64_r64     
  callq ._IO_unsave_markers      #  223   0x6ceef  5      OPC=callq_label      
  movq 0xd8(%rbx), %rax          #  224   0x6cef4  7      OPC=movq_r64_m64     
  movl %r12d, %edx               #  225   0x6cefb  3      OPC=movl_r32_r32     
  movq %rbp, %rsi                #  226   0x6cefe  3      OPC=movq_r64_r64     
  movq %rbx, %rdi                #  227   0x6cf01  3      OPC=movq_r64_r64     
  callq 0x80(%rax)               #  228   0x6cf04  6      OPC=callq_m64        
  cmpq $0xff, %rax               #  229   0x6cf0a  4      OPC=cmpq_r64_imm8    
  je .L_6cfa7                    #  230   0x6cf0e  6      OPC=je_label_1       
  andl $0xffffffef, (%rbx)       #  231   0x6cf14  6      OPC=andl_m32_imm32   
  nop                            #  232   0x6cf1a  1      OPC=nop              
  nop                            #  233   0x6cf1b  1      OPC=nop              
  nop                            #  234   0x6cf1c  1      OPC=nop              
  movq %rax, 0x90(%rbx)          #  235   0x6cf1d  7      OPC=movq_m64_r64     
  movq 0x38(%rbx), %rdx          #  236   0x6cf24  4      OPC=movq_r64_m64     
  movq %rdx, 0x18(%rbx)          #  237   0x6cf28  4      OPC=movq_m64_r64     
  movq %rdx, 0x8(%rbx)           #  238   0x6cf2c  4      OPC=movq_m64_r64     
  movq %rdx, 0x10(%rbx)          #  239   0x6cf30  4      OPC=movq_m64_r64     
  movq %rdx, 0x28(%rbx)          #  240   0x6cf34  4      OPC=movq_m64_r64     
  movq %rdx, 0x20(%rbx)          #  241   0x6cf38  4      OPC=movq_m64_r64     
  movq %rdx, 0x30(%rbx)          #  242   0x6cf3c  4      OPC=movq_m64_r64     
  jmpq .L_6cfa7                  #  243   0x6cf40  2      OPC=jmpq_label       
.L_6cf30:                        #        0x6cf42  0      OPC=<label>          
  movq 0xd8(%rbx), %rax          #  244   0x6cf42  7      OPC=movq_r64_m64     
  movl $0x0, %edx                #  245   0x6cf49  5      OPC=movl_r32_imm32   
  movq %rbx, %rdi                #  246   0x6cf4e  3      OPC=movq_r64_r64     
  callq 0x80(%rax)               #  247   0x6cf51  6      OPC=callq_m64        
  movq %rbp, %rax                #  248   0x6cf57  3      OPC=movq_r64_r64     
  jmpq .L_6cfa7                  #  249   0x6cf5a  2      OPC=jmpq_label       
.L_6cf4a:                        #        0x6cf5c  0      OPC=<label>          
  movq $0xffffffff, %rax         #  250   0x6cf5c  7      OPC=movq_r64_imm32   
  jmpq .L_6cfa7                  #  251   0x6cf63  2      OPC=jmpq_label       
.L_6cf53:                        #        0x6cf65  0      OPC=<label>          
  movq $0xffffffff, %rax         #  252   0x6cf65  7      OPC=movq_r64_imm32   
  jmpq .L_6cfa7                  #  253   0x6cf6c  2      OPC=jmpq_label       
.L_6cf5c:                        #        0x6cf6e  0      OPC=<label>          
  movq $0xffffffff, %rax         #  254   0x6cf6e  7      OPC=movq_r64_imm32   
  jmpq .L_6cfa7                  #  255   0x6cf75  2      OPC=jmpq_label       
.L_6cf65:                        #        0x6cf77  0      OPC=<label>          
  movq $0xffffffff, %rax         #  256   0x6cf77  7      OPC=movq_r64_imm32   
  jmpq .L_6cfa7                  #  257   0x6cf7e  2      OPC=jmpq_label       
.L_6cf6e:                        #        0x6cf80  0      OPC=<label>          
  movq $0xffffffff, %rax         #  258   0x6cf80  7      OPC=movq_r64_imm32   
  jmpq .L_6cfa7                  #  259   0x6cf87  2      OPC=jmpq_label       
.L_6cf77:                        #        0x6cf89  0      OPC=<label>          
  movq 0xd8(%rbx), %rax          #  260   0x6cf89  7      OPC=movq_r64_m64     
  movl $0x0, %edx                #  261   0x6cf90  5      OPC=movl_r32_imm32   
  movq %rbp, %rsi                #  262   0x6cf95  3      OPC=movq_r64_r64     
  movq %rbx, %rdi                #  263   0x6cf98  3      OPC=movq_r64_r64     
  callq 0x80(%rax)               #  264   0x6cf9b  6      OPC=callq_m64        
  movq %rax, %r14                #  265   0x6cfa1  3      OPC=movq_r64_r64     
  testq %rax, %rax               #  266   0x6cfa4  3      OPC=testq_r64_r64    
  js .L_6cf6e                    #  267   0x6cfa7  2      OPC=js_label         
  movl $0x0, %r12d               #  268   0x6cfa9  6      OPC=movl_r32_imm32   
  movl $0x0, %edx                #  269   0x6cfaf  5      OPC=movl_r32_imm32   
  jmpq .L_6ce9f                  #  270   0x6cfb4  5      OPC=jmpq_label_1     
.L_6cfa7:                        #        0x6cfb9  0      OPC=<label>          
  addq $0x90, %rsp               #  271   0x6cfb9  7      OPC=addq_r64_imm32   
  popq %rbx                      #  272   0x6cfc0  1      OPC=popq_r64_1       
  popq %rbp                      #  273   0x6cfc1  1      OPC=popq_r64_1       
  popq %r12                      #  274   0x6cfc2  2      OPC=popq_r64_1       
  popq %r13                      #  275   0x6cfc4  2      OPC=popq_r64_1       
  popq %r14                      #  276   0x6cfc6  2      OPC=popq_r64_1       
  retq                           #  277   0x6cfc8  1      OPC=retq             
                                                                               
.size _IO_file_seekoff__GLIBC_2_2_5, .-_IO_file_seekoff__GLIBC_2_2_5

