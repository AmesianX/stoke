  .text
  .globl parse_rule
  .type parse_rule, @function

#! file-offset 0xa32d0
#! rip-offset  0xa32d0
#! capacity    890 bytes

# Text                                 #  Line  RIP      Bytes  Opcode                   
.parse_rule:                           #        0xa32d0  0      OPC=<label>              
  pushq %r13                           #  1     0xa32d0  2      OPC=pushq_r64_1          
  pushq %r12                           #  2     0xa32d2  2      OPC=pushq_r64_1          
  pushq %rbp                           #  3     0xa32d4  1      OPC=pushq_r64_1          
  pushq %rbx                           #  4     0xa32d5  1      OPC=pushq_r64_1          
  subq $0x18, %rsp                     #  5     0xa32d6  4      OPC=subq_r64_imm8        
  movq %rdi, %r12                      #  6     0xa32da  3      OPC=movq_r64_r64         
  movl %esi, %ebp                      #  7     0xa32dd  2      OPC=movl_r32_r32         
  movq (%rdi), %rax                    #  8     0xa32df  3      OPC=movq_r64_m64         
  cmpb $0x2c, (%rax)                   #  9     0xa32e2  3      OPC=cmpb_m8_imm8         
  sete %bl                             #  10    0xa32e5  3      OPC=sete_r8              
  movzbl %bl, %ebx                     #  11    0xa32e8  3      OPC=movzbl_r32_r8        
  addq %rax, %rbx                      #  12    0xa32eb  3      OPC=addq_r64_r64         
  movzbl (%rbx), %edx                  #  13    0xa32ee  3      OPC=movzbl_r32_m8        
  cmpb $0x4a, %dl                      #  14    0xa32f1  3      OPC=cmpb_r8_imm8         
  je .L_a35ed                          #  15    0xa32f4  6      OPC=je_label_1           
  movsbl %dl, %eax                     #  16    0xa32fa  3      OPC=movsbl_r32_r8        
  subl $0x30, %eax                     #  17    0xa32fd  3      OPC=subl_r32_imm8        
  cmpl $0x9, %eax                      #  18    0xa3300  3      OPC=cmpl_r32_imm8        
  jbe .L_a3620                         #  19    0xa3303  6      OPC=jbe_label_1          
  jmpq .L_a3373                        #  20    0xa3309  2      OPC=jmpq_label           
.L_a330b:                              #        0xa330b  0      OPC=<label>              
  leaq 0x8(%rsp), %rsi                 #  21    0xa330b  5      OPC=leaq_r64_m16         
  movl $0xa, %edx                      #  22    0xa3310  5      OPC=movl_r32_imm32       
  movq %rbx, %rdi                      #  23    0xa3315  3      OPC=movq_r64_r64         
  callq .strtoul                       #  24    0xa3318  5      OPC=callq_label          
  movq 0x8(%rsp), %rcx                 #  25    0xa331d  5      OPC=movq_r64_m64         
  cmpq %rcx, %rbx                      #  26    0xa3322  3      OPC=cmpq_r64_r64         
  je .L_a3369                          #  27    0xa3325  2      OPC=je_label             
  cmpq $0x16d, %rax                    #  28    0xa3327  6      OPC=cmpq_rax_imm32       
  ja .L_a3369                          #  29    0xa332d  2      OPC=ja_label             
  testq %rax, %rax                     #  30    0xa332f  3      OPC=testq_r64_r64        
  jne .L_a334d                         #  31    0xa3332  2      OPC=jne_label            
  movslq %ebp, %rdx                    #  32    0xa3334  3      OPC=movslq_r64_r32       
  leaq (%rdx,%rdx,2), %rdx             #  33    0xa3337  4      OPC=leaq_r64_m16         
  shlq $0x4, %rdx                      #  34    0xa333b  4      OPC=shlq_r64_imm8        
  leaq 0x2eaa3a(%rip), %rsi            #  35    0xa333f  7      OPC=leaq_r64_m16         
  cmpl $0x1, 0x8(%rsi,%rdx,1)          #  36    0xa3346  5      OPC=cmpl_m32_imm8        
  je .L_a3369                          #  37    0xa334b  2      OPC=je_label             
.L_a334d:                              #        0xa334d  0      OPC=<label>              
  movslq %ebp, %rdx                    #  38    0xa334d  3      OPC=movslq_r64_r32       
  leaq (%rdx,%rdx,2), %rdx             #  39    0xa3350  4      OPC=leaq_r64_m16         
  shlq $0x4, %rdx                      #  40    0xa3354  4      OPC=shlq_r64_imm8        
  leaq 0x2eaa21(%rip), %rsi            #  41    0xa3358  7      OPC=leaq_r64_m16         
  movw %ax, 0x10(%rsi,%rdx,1)          #  42    0xa335f  5      OPC=movw_m16_r16         
  jmpq .L_a34c9                        #  43    0xa3364  5      OPC=jmpq_label_1         
.L_a3369:                              #        0xa3369  0      OPC=<label>              
  movl $0x0, %eax                      #  44    0xa3369  5      OPC=movl_r32_imm32       
  jmpq .L_a363f                        #  45    0xa336e  5      OPC=jmpq_label_1         
.L_a3373:                              #        0xa3373  0      OPC=<label>              
  cmpb $0x4d, %dl                      #  46    0xa3373  3      OPC=cmpb_r8_imm8         
  jne .L_a342d                         #  47    0xa3376  6      OPC=jne_label_1          
  leaq 0x2ea9fd(%rip), %rsi            #  48    0xa337c  7      OPC=leaq_r64_m16         
  movslq %ebp, %rax                    #  49    0xa3383  3      OPC=movslq_r64_r32       
  leaq (%rax,%rax,1), %rdx             #  50    0xa3386  4      OPC=leaq_r64_m16         
  leaq (%rdx,%rax,1), %rcx             #  51    0xa338a  4      OPC=leaq_r64_m16         
  shlq $0x4, %rcx                      #  52    0xa338e  4      OPC=shlq_r64_imm8        
  movl $0x2, 0x8(%rsi,%rcx,1)          #  53    0xa3392  8      OPC=movl_m32_imm32       
  movq %rcx, %rdi                      #  54    0xa339a  3      OPC=movq_r64_r64         
  leaq 0xe(%rsi,%rdi,1), %rcx          #  55    0xa339d  5      OPC=leaq_r64_m16         
  leaq 0xc(%rsi,%rdi,1), %rdx          #  56    0xa33a2  5      OPC=leaq_r64_m16         
  leaq 0x8(%rsp), %r9                  #  57    0xa33a7  5      OPC=leaq_r64_m16         
  leaq 0x10(%rsi,%rdi,1), %r8          #  58    0xa33ac  5      OPC=leaq_r64_m16         
  leaq 0xb5bf6(%rip), %rsi             #  59    0xa33b1  7      OPC=leaq_r64_m16         
  movq %rbx, %rdi                      #  60    0xa33b8  3      OPC=movq_r64_r64         
  movl $0x0, %eax                      #  61    0xa33bb  5      OPC=movl_r32_imm32       
  callq ._IO_sscanf                    #  62    0xa33c0  5      OPC=callq_label          
  cmpl $0x3, %eax                      #  63    0xa33c5  3      OPC=cmpl_r32_imm8        
  jne .L_a3416                         #  64    0xa33c8  2      OPC=jne_label            
  movslq %ebp, %rax                    #  65    0xa33ca  3      OPC=movslq_r64_r32       
  leaq (%rax,%rax,2), %rax             #  66    0xa33cd  4      OPC=leaq_r64_m16         
  shlq $0x4, %rax                      #  67    0xa33d1  4      OPC=shlq_r64_imm8        
  leaq 0x2ea9a4(%rip), %rdx            #  68    0xa33d5  7      OPC=leaq_r64_m16         
  movzwl 0xc(%rdx,%rax,1), %eax        #  69    0xa33dc  5      OPC=movzwl_r32_m16       
  subl $0x1, %eax                      #  70    0xa33e1  3      OPC=subl_r32_imm8        
  cmpw $0xb, %ax                       #  71    0xa33e4  4      OPC=cmpw_ax_imm16        
  ja .L_a3416                          #  72    0xa33e8  2      OPC=ja_label             
  movslq %ebp, %rax                    #  73    0xa33ea  3      OPC=movslq_r64_r32       
  leaq (%rax,%rax,2), %rax             #  74    0xa33ed  4      OPC=leaq_r64_m16         
  shlq $0x4, %rax                      #  75    0xa33f1  4      OPC=shlq_r64_imm8        
  movzwl 0xe(%rdx,%rax,1), %eax        #  76    0xa33f5  5      OPC=movzwl_r32_m16       
  subl $0x1, %eax                      #  77    0xa33fa  3      OPC=subl_r32_imm8        
  cmpw $0x4, %ax                       #  78    0xa33fd  4      OPC=cmpw_ax_imm16        
  ja .L_a3416                          #  79    0xa3401  2      OPC=ja_label             
  movslq %ebp, %rax                    #  80    0xa3403  3      OPC=movslq_r64_r32       
  leaq (%rax,%rax,2), %rax             #  81    0xa3406  4      OPC=leaq_r64_m16         
  shlq $0x4, %rax                      #  82    0xa340a  4      OPC=shlq_r64_imm8        
  cmpw $0x6, 0x10(%rdx,%rax,1)         #  83    0xa340e  6      OPC=cmpw_m16_imm8        
  jbe .L_a3420                         #  84    0xa3414  2      OPC=jbe_label            
.L_a3416:                              #        0xa3416  0      OPC=<label>              
  movl $0x0, %eax                      #  85    0xa3416  5      OPC=movl_r32_imm32       
  jmpq .L_a363f                        #  86    0xa341b  5      OPC=jmpq_label_1         
.L_a3420:                              #        0xa3420  0      OPC=<label>              
  movslq 0x8(%rsp), %rcx               #  87    0xa3420  5      OPC=movslq_r64_m32       
  addq %rbx, %rcx                      #  88    0xa3425  3      OPC=addq_r64_r64         
  jmpq .L_a34c9                        #  89    0xa3428  5      OPC=jmpq_label_1         
.L_a342d:                              #        0xa342d  0      OPC=<label>              
  movl $0x0, %eax                      #  90    0xa342d  5      OPC=movl_r32_imm32       
  testb %dl, %dl                       #  91    0xa3432  2      OPC=testb_r8_r8          
  jne .L_a363f                         #  92    0xa3434  6      OPC=jne_label_1          
  leaq 0x2ea93f(%rip), %rdx            #  93    0xa343a  7      OPC=leaq_r64_m16         
  movslq %esi, %rax                    #  94    0xa3441  3      OPC=movslq_r64_r32       
  leaq (%rax,%rax,1), %rsi             #  95    0xa3444  4      OPC=leaq_r64_m16         
  leaq (%rsi,%rax,1), %rcx             #  96    0xa3448  4      OPC=leaq_r64_m16         
  shlq $0x4, %rcx                      #  97    0xa344c  4      OPC=shlq_r64_imm8        
  movl $0x2, 0x8(%rdx,%rcx,1)          #  98    0xa3450  8      OPC=movl_m32_imm32       
  movq %rcx, %rax                      #  99    0xa3458  3      OPC=movq_r64_r64         
  addq %rdx, %rax                      #  100   0xa345b  3      OPC=addq_r64_r64         
  cmpq %rdx, %rax                      #  101   0xa345e  3      OPC=cmpq_r64_r64         
  jne .L_a3493                         #  102   0xa3461  2      OPC=jne_label            
  movslq %ebp, %rax                    #  103   0xa3463  3      OPC=movslq_r64_r32       
  movq %rsi, %rcx                      #  104   0xa3466  3      OPC=movq_r64_r64         
  leaq (%rsi,%rax,1), %rsi             #  105   0xa3469  4      OPC=leaq_r64_m16         
  shlq $0x4, %rsi                      #  106   0xa346d  4      OPC=shlq_r64_imm8        
  movw $0x3, 0xc(%rdx,%rsi,1)          #  107   0xa3471  7      OPC=movw_m16_imm16       
  leaq (%rcx,%rax,1), %rsi             #  108   0xa3478  4      OPC=leaq_r64_m16         
  shlq $0x4, %rsi                      #  109   0xa347c  4      OPC=shlq_r64_imm8        
  movw $0x2, 0xe(%rdx,%rsi,1)          #  110   0xa3480  7      OPC=movw_m16_imm16       
  movw $0x0, 0x10(%rdx,%rsi,1)         #  111   0xa3487  7      OPC=movw_m16_imm16       
  movq %rbx, %rcx                      #  112   0xa348e  3      OPC=movq_r64_r64         
  jmpq .L_a34c9                        #  113   0xa3491  2      OPC=jmpq_label           
.L_a3493:                              #        0xa3493  0      OPC=<label>              
  leaq 0x2ea8e6(%rip), %rdx            #  114   0xa3493  7      OPC=leaq_r64_m16         
  movslq %ebp, %rax                    #  115   0xa349a  3      OPC=movslq_r64_r32       
  leaq (%rax,%rax,1), %rcx             #  116   0xa349d  4      OPC=leaq_r64_m16         
  leaq (%rcx,%rax,1), %rsi             #  117   0xa34a1  4      OPC=leaq_r64_m16         
  shlq $0x4, %rsi                      #  118   0xa34a5  4      OPC=shlq_r64_imm8        
  movw $0xb, 0xc(%rdx,%rsi,1)          #  119   0xa34a9  7      OPC=movw_m16_imm16       
  leaq (%rcx,%rax,1), %rsi             #  120   0xa34b0  4      OPC=leaq_r64_m16         
  shlq $0x4, %rsi                      #  121   0xa34b4  4      OPC=shlq_r64_imm8        
  movw $0x1, 0xe(%rdx,%rsi,1)          #  122   0xa34b8  7      OPC=movw_m16_imm16       
  movw $0x0, 0x10(%rdx,%rsi,1)         #  123   0xa34bf  7      OPC=movw_m16_imm16       
  movq %rbx, %rcx                      #  124   0xa34c6  3      OPC=movq_r64_r64         
.L_a34c9:                              #        0xa34c9  0      OPC=<label>              
  movzbl (%rcx), %esi                  #  125   0xa34c9  3      OPC=movzbl_r32_m8        
  cmpb $0x2f, %sil                     #  126   0xa34cc  4      OPC=cmpb_r8_imm8         
  setne %dl                            #  127   0xa34d0  3      OPC=setne_r8             
  testb %sil, %sil                     #  128   0xa34d3  3      OPC=testb_r8_r8          
  setne %al                            #  129   0xa34d6  3      OPC=setne_r8             
  andl %edx, %eax                      #  130   0xa34d9  2      OPC=andl_r32_r32         
  cmpb $0x2c, %sil                     #  131   0xa34db  4      OPC=cmpb_r8_imm8         
  setne %dl                            #  132   0xa34df  3      OPC=setne_r8             
  andb %dl, %al                        #  133   0xa34e2  2      OPC=andb_r8_r8           
  jne .L_a35e6                         #  134   0xa34e4  6      OPC=jne_label_1          
  cmpb $0x2f, %sil                     #  135   0xa34ea  4      OPC=cmpb_r8_imm8         
  jne .L_a35a6                         #  136   0xa34ee  6      OPC=jne_label_1          
  movzbl 0x1(%rcx), %edx               #  137   0xa34f4  4      OPC=movzbl_r32_m8        
  testb %dl, %dl                       #  138   0xa34f8  2      OPC=testb_r8_r8          
  je .L_a363f                          #  139   0xa34fa  6      OPC=je_label_1           
  cmpb $0x2d, %dl                      #  140   0xa3500  3      OPC=cmpb_r8_imm8         
  sete %bl                             #  141   0xa3503  3      OPC=sete_r8              
  movzbl %bl, %eax                     #  142   0xa3506  3      OPC=movzbl_r32_r8        
  leaq 0x1(%rcx,%rax,1), %r13          #  143   0xa3509  5      OPC=leaq_r64_m16         
  movw $0x2, 0x2(%rsp)                 #  144   0xa350e  7      OPC=movw_m16_imm16       
  movw $0x0, 0x4(%rsp)                 #  145   0xa3515  7      OPC=movw_m16_imm16       
  movw $0x0, 0x6(%rsp)                 #  146   0xa351c  7      OPC=movw_m16_imm16       
  movl $0x0, 0x8(%rsp)                 #  147   0xa3523  8      OPC=movl_m32_imm32       
  leaq 0x8(%rsp), %rcx                 #  148   0xa352b  5      OPC=leaq_r64_m16         
  leaq 0x2(%rsp), %rdx                 #  149   0xa3530  5      OPC=leaq_r64_m16         
  pushq %rcx                           #  150   0xa3535  1      OPC=pushq_r64_1          
  leaq 0xe(%rsp), %rax                 #  151   0xa3536  5      OPC=leaq_r64_m16         
  pushq %rax                           #  152   0xa353b  1      OPC=pushq_r64_1          
  movq %rcx, %r9                       #  153   0xa353c  3      OPC=movq_r64_r64         
  leaq 0x14(%rsp), %r8                 #  154   0xa353f  5      OPC=leaq_r64_m16         
  leaq 0xb5a51(%rip), %rsi             #  155   0xa3544  7      OPC=leaq_r64_m16         
  movq %r13, %rdi                      #  156   0xa354b  3      OPC=movq_r64_r64         
  movl $0x0, %eax                      #  157   0xa354e  5      OPC=movl_r32_imm32       
  callq ._IO_sscanf                    #  158   0xa3553  5      OPC=callq_label          
  movslq 0x18(%rsp), %rcx              #  159   0xa3558  5      OPC=movslq_r64_m32       
  addq %r13, %rcx                      #  160   0xa355d  3      OPC=addq_r64_r64         
  addq $0x10, %rsp                     #  161   0xa3560  4      OPC=addq_r64_imm8        
  cmpb $0x1, %bl                       #  162   0xa3564  3      OPC=cmpb_r8_imm8         
  sbbl %esi, %esi                      #  163   0xa3567  2      OPC=sbbl_r32_r32         
  andl $0x2, %esi                      #  164   0xa3569  3      OPC=andl_r32_imm8        
  subl $0x1, %esi                      #  165   0xa356c  3      OPC=subl_r32_imm8        
  movslq %ebp, %rax                    #  166   0xa356f  3      OPC=movslq_r64_r32       
  leaq (%rax,%rax,2), %rdi             #  167   0xa3572  4      OPC=leaq_r64_m16         
  shlq $0x4, %rdi                      #  168   0xa3576  4      OPC=shlq_r64_imm8        
  movzwl 0x2(%rsp), %eax               #  169   0xa357a  5      OPC=movzwl_r32_m16       
  imull $0xe10, %eax, %edx             #  170   0xa357f  6      OPC=imull_r32_r32_imm32  
  movzwl 0x4(%rsp), %eax               #  171   0xa3585  5      OPC=movzwl_r32_m16       
  imull $0x3c, %eax, %eax              #  172   0xa358a  3      OPC=imull_r32_r32_imm8   
  addl %edx, %eax                      #  173   0xa358d  2      OPC=addl_r32_r32         
  movzwl 0x6(%rsp), %edx               #  174   0xa358f  5      OPC=movzwl_r32_m16       
  addl %edx, %eax                      #  175   0xa3594  2      OPC=addl_r32_r32         
  imull %esi, %eax                     #  176   0xa3596  3      OPC=imull_r32_r32        
  leaq 0x2ea7e0(%rip), %rdx            #  177   0xa3599  7      OPC=leaq_r64_m16         
  movl %eax, 0x14(%rdx,%rdi,1)         #  178   0xa35a0  4      OPC=movl_m32_r32         
  jmpq .L_a35c0                        #  179   0xa35a4  2      OPC=jmpq_label           
.L_a35a6:                              #        0xa35a6  0      OPC=<label>              
  movslq %ebp, %rax                    #  180   0xa35a6  3      OPC=movslq_r64_r32       
  leaq (%rax,%rax,2), %rax             #  181   0xa35a9  4      OPC=leaq_r64_m16         
  shlq $0x4, %rax                      #  182   0xa35ad  4      OPC=shlq_r64_imm8        
  leaq 0x2ea7c8(%rip), %rdx            #  183   0xa35b1  7      OPC=leaq_r64_m16         
  movl $0x1c20, 0x14(%rdx,%rax,1)      #  184   0xa35b8  8      OPC=movl_m32_imm32       
.L_a35c0:                              #        0xa35c0  0      OPC=<label>              
  movslq %ebp, %rbp                    #  185   0xa35c0  3      OPC=movslq_r64_r32       
  leaq (%rbp,%rbp,2), %rax             #  186   0xa35c3  5      OPC=leaq_r64_m16         
  shlq $0x4, %rax                      #  187   0xa35c8  4      OPC=shlq_r64_imm8        
  leaq 0x2ea7ad(%rip), %rdx            #  188   0xa35cc  7      OPC=leaq_r64_m16         
  movl $0xffffffff, 0x28(%rdx,%rax,1)  #  189   0xa35d3  8      OPC=movl_m32_imm32       
  movq %rcx, (%r12)                    #  190   0xa35db  4      OPC=movq_m64_r64         
  movl $0x1, %eax                      #  191   0xa35df  5      OPC=movl_r32_imm32       
  jmpq .L_a363f                        #  192   0xa35e4  2      OPC=jmpq_label           
.L_a35e6:                              #        0xa35e6  0      OPC=<label>              
  movl $0x0, %eax                      #  193   0xa35e6  5      OPC=movl_r32_imm32       
  jmpq .L_a363f                        #  194   0xa35eb  2      OPC=jmpq_label           
.L_a35ed:                              #        0xa35ed  0      OPC=<label>              
  movslq %esi, %rax                    #  195   0xa35ed  3      OPC=movslq_r64_r32       
  leaq (%rax,%rax,2), %rax             #  196   0xa35f0  4      OPC=leaq_r64_m16         
  shlq $0x4, %rax                      #  197   0xa35f4  4      OPC=shlq_r64_imm8        
  leaq 0x2ea781(%rip), %rdx            #  198   0xa35f8  7      OPC=leaq_r64_m16         
  movl $0x1, 0x8(%rdx,%rax,1)          #  199   0xa35ff  8      OPC=movl_m32_imm32       
  movsbl 0x1(%rbx), %eax               #  200   0xa3607  4      OPC=movsbl_r32_m8        
  subl $0x30, %eax                     #  201   0xa360b  3      OPC=subl_r32_imm8        
  addq $0x1, %rbx                      #  202   0xa360e  4      OPC=addq_r64_imm8        
  cmpl $0x9, %eax                      #  203   0xa3612  3      OPC=cmpl_r32_imm8        
  jbe .L_a330b                         #  204   0xa3615  6      OPC=jbe_label_1          
  jmpq .L_a3369                        #  205   0xa361b  5      OPC=jmpq_label_1         
.L_a3620:                              #        0xa3620  0      OPC=<label>              
  movslq %esi, %rax                    #  206   0xa3620  3      OPC=movslq_r64_r32       
  leaq (%rax,%rax,2), %rax             #  207   0xa3623  4      OPC=leaq_r64_m16         
  shlq $0x4, %rax                      #  208   0xa3627  4      OPC=shlq_r64_imm8        
  leaq 0x2ea74e(%rip), %rdx            #  209   0xa362b  7      OPC=leaq_r64_m16         
  movl $0x0, 0x8(%rdx,%rax,1)          #  210   0xa3632  8      OPC=movl_m32_imm32       
  jmpq .L_a330b                        #  211   0xa363a  5      OPC=jmpq_label_1         
.L_a363f:                              #        0xa363f  0      OPC=<label>              
  addq $0x18, %rsp                     #  212   0xa363f  4      OPC=addq_r64_imm8        
  popq %rbx                            #  213   0xa3643  1      OPC=popq_r64_1           
  popq %rbp                            #  214   0xa3644  1      OPC=popq_r64_1           
  popq %r12                            #  215   0xa3645  2      OPC=popq_r64_1           
  popq %r13                            #  216   0xa3647  2      OPC=popq_r64_1           
  retq                                 #  217   0xa3649  1      OPC=retq                 
                                                                                         
.size parse_rule, .-parse_rule

