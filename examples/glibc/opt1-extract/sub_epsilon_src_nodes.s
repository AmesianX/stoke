  .text
  .globl sub_epsilon_src_nodes
  .type sub_epsilon_src_nodes, @function

#! file-offset 0xbda77
#! rip-offset  0xbda77
#! capacity    443 bytes

# Text                              #  Line  RIP      Bytes  Opcode              
.sub_epsilon_src_nodes:             #        0xbda77  0      OPC=<label>         
  pushq %r15                        #  1     0xbda77  2      OPC=pushq_r64_1     
  pushq %r14                        #  2     0xbda79  2      OPC=pushq_r64_1     
  pushq %r13                        #  3     0xbda7b  2      OPC=pushq_r64_1     
  pushq %r12                        #  4     0xbda7d  2      OPC=pushq_r64_1     
  pushq %rbp                        #  5     0xbda7f  1      OPC=pushq_r64_1     
  pushq %rbx                        #  6     0xbda80  1      OPC=pushq_r64_1     
  subq $0x38, %rsp                  #  7     0xbda81  4      OPC=subq_r64_imm8   
  movq %rdi, %r13                   #  8     0xbda85  3      OPC=movq_r64_r64    
  movl %esi, %r14d                  #  9     0xbda88  3      OPC=movl_r32_r32    
  movq %rdx, 0x8(%rsp)              #  10    0xbda8b  5      OPC=movq_m64_r64    
  movq %rcx, 0x10(%rsp)             #  11    0xbda90  5      OPC=movq_m64_r64    
  movslq %esi, %r12                 #  12    0xbda95  3      OPC=movslq_r64_r32  
  shlq $0x4, %r12                   #  13    0xbda98  4      OPC=shlq_r64_imm8   
  addq 0x38(%rdi), %r12             #  14    0xbda9c  4      OPC=addq_r64_m64    
  movq $0x0, 0x20(%rsp)             #  15    0xbdaa0  9      OPC=movq_m64_imm32  
  movq $0x0, 0x28(%rsp)             #  16    0xbdaa9  9      OPC=movq_m64_imm32  
  cmpl $0x0, 0x4(%r12)              #  17    0xbdab2  6      OPC=cmpl_m32_imm8   
  jle .L_bdbe9                      #  18    0xbdab8  6      OPC=jle_label_1     
  movl $0x0, %ebp                   #  19    0xbdabe  5      OPC=movl_r32_imm32  
  leaq 0x20(%rsp), %rax             #  20    0xbdac3  5      OPC=leaq_r64_m16    
  movq %rax, 0x18(%rsp)             #  21    0xbdac8  5      OPC=movq_m64_r64    
.L_bdacd:                           #        0xbdacd  0      OPC=<label>         
  movslq %ebp, %rax                 #  22    0xbdacd  3      OPC=movslq_r64_r32  
  movq 0x8(%r12), %rdx              #  23    0xbdad0  5      OPC=movq_r64_m64    
  movl (%rdx,%rax,4), %ebx          #  24    0xbdad5  3      OPC=movl_r32_m32    
  cmpl %r14d, %ebx                  #  25    0xbdad8  3      OPC=cmpl_r32_r32    
  je .L_bdb8b                       #  26    0xbdadb  6      OPC=je_label_1      
  movslq %ebx, %rbx                 #  27    0xbdae1  3      OPC=movslq_r64_r32  
  shlq $0x4, %rbx                   #  28    0xbdae4  4      OPC=shlq_r64_imm8   
  movq (%r13), %rax                 #  29    0xbdae8  4      OPC=movq_r64_m64    
  testb $0x8, 0x8(%rax,%rbx,1)      #  30    0xbdaec  5      OPC=testb_m8_imm8   
  je .L_bdb8b                       #  31    0xbdaf1  6      OPC=je_label_1      
  movq %rbx, %rax                   #  32    0xbdaf7  3      OPC=movq_r64_r64    
  addq 0x28(%r13), %rax             #  33    0xbdafa  4      OPC=addq_r64_m64    
  movq 0x8(%rax), %rdx              #  34    0xbdafe  4      OPC=movq_r64_m64    
  movl (%rdx), %r15d                #  35    0xbdb02  3      OPC=movl_r32_m32    
  cmpl $0x1, 0x4(%rax)              #  36    0xbdb05  4      OPC=cmpl_m32_imm8   
  jle .L_bdbfa                      #  37    0xbdb09  6      OPC=jle_label_1     
  movl 0x4(%rdx), %eax              #  38    0xbdb0f  3      OPC=movl_r32_m32    
  movl %eax, 0x4(%rsp)              #  39    0xbdb12  4      OPC=movl_m32_r32    
  movl %r15d, %esi                  #  40    0xbdb16  3      OPC=movl_r32_r32    
  movq %r12, %rdi                   #  41    0xbdb19  3      OPC=movq_r64_r64    
  callq .re_node_set_contains       #  42    0xbdb1c  5      OPC=callq_label     
  testl %eax, %eax                  #  43    0xbdb21  2      OPC=testl_r32_r32   
  jne .L_bdb36                      #  44    0xbdb23  2      OPC=jne_label       
  movl %r15d, %esi                  #  45    0xbdb25  3      OPC=movl_r32_r32    
  movq 0x8(%rsp), %rdi              #  46    0xbdb28  5      OPC=movq_r64_m64    
  callq .re_node_set_contains       #  47    0xbdb2d  5      OPC=callq_label     
  testl %eax, %eax                  #  48    0xbdb32  2      OPC=testl_r32_r32   
  jne .L_bdb5e                      #  49    0xbdb34  2      OPC=jne_label       
.L_bdb36:                           #        0xbdb36  0      OPC=<label>         
  movl 0x4(%rsp), %eax              #  50    0xbdb36  4      OPC=movl_r32_m32    
  testl %eax, %eax                  #  51    0xbdb3a  2      OPC=testl_r32_r32   
  jle .L_bdb8b                      #  52    0xbdb3c  2      OPC=jle_label       
  movl %eax, %esi                   #  53    0xbdb3e  2      OPC=movl_r32_r32    
  movq %r12, %rdi                   #  54    0xbdb40  3      OPC=movq_r64_r64    
  callq .re_node_set_contains       #  55    0xbdb43  5      OPC=callq_label     
  testl %eax, %eax                  #  56    0xbdb48  2      OPC=testl_r32_r32   
  jne .L_bdb8b                      #  57    0xbdb4a  2      OPC=jne_label       
  movl 0x4(%rsp), %esi              #  58    0xbdb4c  4      OPC=movl_r32_m32    
  movq 0x8(%rsp), %rdi              #  59    0xbdb50  5      OPC=movq_r64_m64    
  callq .re_node_set_contains       #  60    0xbdb55  5      OPC=callq_label     
  testl %eax, %eax                  #  61    0xbdb5a  2      OPC=testl_r32_r32   
  je .L_bdb8b                       #  62    0xbdb5c  2      OPC=je_label        
.L_bdb5e:                           #        0xbdb5e  0      OPC=<label>         
  movq %rbx, %rdx                   #  63    0xbdb5e  3      OPC=movq_r64_r64    
  addq 0x38(%r13), %rdx             #  64    0xbdb61  4      OPC=addq_r64_m64    
  movq 0x10(%rsp), %rsi             #  65    0xbdb65  5      OPC=movq_r64_m64    
  movq 0x18(%rsp), %rdi             #  66    0xbdb6a  5      OPC=movq_r64_m64    
  callq .re_node_set_add_intersect  #  67    0xbdb6f  5      OPC=callq_label     
  movl %eax, %ebx                   #  68    0xbdb74  2      OPC=movl_r32_r32    
  testl %eax, %eax                  #  69    0xbdb76  2      OPC=testl_r32_r32   
  je .L_bdb8b                       #  70    0xbdb78  2      OPC=je_label        
  movq 0x28(%rsp), %rdi             #  71    0xbdb7a  5      OPC=movq_r64_m64    
  callq .L_1f8d0                    #  72    0xbdb7f  5      OPC=callq_label     
  movl %ebx, %eax                   #  73    0xbdb84  2      OPC=movl_r32_r32    
  jmpq .L_bdc23                     #  74    0xbdb86  5      OPC=jmpq_label_1    
.L_bdb8b:                           #        0xbdb8b  0      OPC=<label>         
  addl $0x1, %ebp                   #  75    0xbdb8b  3      OPC=addl_r32_imm8   
  movl 0x4(%r12), %eax              #  76    0xbdb8e  5      OPC=movl_r32_m32    
  cmpl %ebp, %eax                   #  77    0xbdb93  2      OPC=cmpl_r32_r32    
  jg .L_bdacd                       #  78    0xbdb95  6      OPC=jg_label_1      
  testl %eax, %eax                  #  79    0xbdb9b  2      OPC=testl_r32_r32   
  jle .L_bdbe9                      #  80    0xbdb9d  2      OPC=jle_label       
  movl $0x0, %ebx                   #  81    0xbdb9f  5      OPC=movl_r32_imm32  
  leaq 0x20(%rsp), %rbp             #  82    0xbdba4  5      OPC=leaq_r64_m16    
.L_bdba9:                           #        0xbdba9  0      OPC=<label>         
  movslq %ebx, %rax                 #  83    0xbdba9  3      OPC=movslq_r64_r32  
  movq 0x8(%r12), %rdx              #  84    0xbdbac  5      OPC=movq_r64_m64    
  movl (%rdx,%rax,4), %r13d         #  85    0xbdbb1  4      OPC=movl_r32_m32    
  movl %r13d, %esi                  #  86    0xbdbb5  3      OPC=movl_r32_r32    
  movq %rbp, %rdi                   #  87    0xbdbb8  3      OPC=movq_r64_r64    
  callq .re_node_set_contains       #  88    0xbdbbb  5      OPC=callq_label     
  testl %eax, %eax                  #  89    0xbdbc0  2      OPC=testl_r32_r32   
  jne .L_bdbdf                      #  90    0xbdbc2  2      OPC=jne_label       
  movl %r13d, %esi                  #  91    0xbdbc4  3      OPC=movl_r32_r32    
  movq 0x8(%rsp), %r15              #  92    0xbdbc7  5      OPC=movq_r64_m64    
  movq %r15, %rdi                   #  93    0xbdbcc  3      OPC=movq_r64_r64    
  callq .re_node_set_contains       #  94    0xbdbcf  5      OPC=callq_label     
  leal -0x1(%rax), %esi             #  95    0xbdbd4  3      OPC=leal_r32_m16    
  movq %r15, %rdi                   #  96    0xbdbd7  3      OPC=movq_r64_r64    
  callq .re_node_set_remove_at      #  97    0xbdbda  5      OPC=callq_label     
.L_bdbdf:                           #        0xbdbdf  0      OPC=<label>         
  addl $0x1, %ebx                   #  98    0xbdbdf  3      OPC=addl_r32_imm8   
  cmpl %ebx, 0x4(%r12)              #  99    0xbdbe2  5      OPC=cmpl_m32_r32    
  jg .L_bdba9                       #  100   0xbdbe7  2      OPC=jg_label        
.L_bdbe9:                           #        0xbdbe9  0      OPC=<label>         
  movq 0x28(%rsp), %rdi             #  101   0xbdbe9  5      OPC=movq_r64_m64    
  callq .L_1f8d0                    #  102   0xbdbee  5      OPC=callq_label     
  movl $0x0, %eax                   #  103   0xbdbf3  5      OPC=movl_r32_imm32  
  jmpq .L_bdc23                     #  104   0xbdbf8  2      OPC=jmpq_label      
.L_bdbfa:                           #        0xbdbfa  0      OPC=<label>         
  movl %r15d, %esi                  #  105   0xbdbfa  3      OPC=movl_r32_r32    
  movq %r12, %rdi                   #  106   0xbdbfd  3      OPC=movq_r64_r64    
  callq .re_node_set_contains       #  107   0xbdc00  5      OPC=callq_label     
  testl %eax, %eax                  #  108   0xbdc05  2      OPC=testl_r32_r32   
  jne .L_bdb8b                      #  109   0xbdc07  2      OPC=jne_label       
  movl %r15d, %esi                  #  110   0xbdc09  3      OPC=movl_r32_r32    
  movq 0x8(%rsp), %rdi              #  111   0xbdc0c  5      OPC=movq_r64_m64    
  callq .re_node_set_contains       #  112   0xbdc11  5      OPC=callq_label     
  testl %eax, %eax                  #  113   0xbdc16  2      OPC=testl_r32_r32   
  jne .L_bdb5e                      #  114   0xbdc18  6      OPC=jne_label_1     
  jmpq .L_bdb8b                     #  115   0xbdc1e  5      OPC=jmpq_label_1    
.L_bdc23:                           #        0xbdc23  0      OPC=<label>         
  addq $0x38, %rsp                  #  116   0xbdc23  4      OPC=addq_r64_imm8   
  popq %rbx                         #  117   0xbdc27  1      OPC=popq_r64_1      
  popq %rbp                         #  118   0xbdc28  1      OPC=popq_r64_1      
  popq %r12                         #  119   0xbdc29  2      OPC=popq_r64_1      
  popq %r13                         #  120   0xbdc2b  2      OPC=popq_r64_1      
  popq %r14                         #  121   0xbdc2d  2      OPC=popq_r64_1      
  popq %r15                         #  122   0xbdc2f  2      OPC=popq_r64_1      
  retq                              #  123   0xbdc31  1      OPC=retq            
                                                                                 
.size sub_epsilon_src_nodes, .-sub_epsilon_src_nodes

