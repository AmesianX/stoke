  .text
  .globl universal
  .type universal, @function

#! file-offset 0xff642
#! rip-offset  0xff642
#! capacity    484 bytes

# Text                              #  Line  RIP      Bytes  Opcode              
.universal:                         #        0xff642  0      OPC=<label>         
  pushq %r14                        #  1     0xff642  2      OPC=pushq_r64_1     
  pushq %r13                        #  2     0xff644  2      OPC=pushq_r64_1     
  pushq %r12                        #  3     0xff646  2      OPC=pushq_r64_1     
  pushq %rbp                        #  4     0xff648  1      OPC=pushq_r64_1     
  pushq %rbx                        #  5     0xff649  1      OPC=pushq_r64_1     
  subq $0x2270, %rsp                #  6     0xff64a  7      OPC=subq_r64_imm32  
  movq %rsi, %r13                   #  7     0xff651  3      OPC=movq_r64_r64    
  movq $0x0, 0x8(%rsp)              #  8     0xff654  9      OPC=movq_m64_imm32  
  movq 0x10(%rdi), %r12             #  9     0xff65d  4      OPC=movq_r64_m64    
  testq %r12, %r12                  #  10    0xff661  3      OPC=testq_r64_r64   
  jne .L_ff6a2                      #  11    0xff664  2      OPC=jne_label       
  movl $0x0, %edx                   #  12    0xff666  5      OPC=movl_r32_imm32  
  leaq 0x9838(%rip), %rsi           #  13    0xff66b  7      OPC=leaq_r64_m16    
  movq %r13, %rdi                   #  14    0xff672  3      OPC=movq_r64_r64    
  callq .svc_sendreply_GLIBC_2_2_5  #  15    0xff675  5      OPC=callq_label     
  testl %eax, %eax                  #  16    0xff67a  2      OPC=testl_r32_r32   
  jne .L_ff816                      #  17    0xff67c  6      OPC=jne_label_1     
  movl $0x4, %edx                   #  18    0xff682  5      OPC=movl_r32_imm32  
  leaq 0x5b4cd(%rip), %rsi          #  19    0xff687  7      OPC=leaq_r64_m16    
  movl $0x2, %edi                   #  20    0xff68e  5      OPC=movl_r32_imm32  
  callq .__write                    #  21    0xff693  5      OPC=callq_label     
  movl $0x1, %edi                   #  22    0xff698  5      OPC=movl_r32_imm32  
  callq .exit                       #  23    0xff69d  5      OPC=callq_label     
.L_ff6a2:                           #        0xff6a2  0      OPC=<label>         
  movq (%rdi), %r14                 #  24    0xff6a2  3      OPC=movq_r64_m64    
  movl %r14d, %ebp                  #  25    0xff6a5  3      OPC=movl_r32_r32    
  callq .__rpc_thread_variables     #  26    0xff6a8  5      OPC=callq_label     
  movq 0xf8(%rax), %rbx             #  27    0xff6ad  7      OPC=movq_r64_m64    
  testq %rbx, %rbx                  #  28    0xff6b4  3      OPC=testq_r64_r64   
  je .L_ff79c                       #  29    0xff6b7  6      OPC=je_label_1      
.L_ff6bd:                           #        0xff6bd  0      OPC=<label>         
  cmpl %ebp, 0x8(%rbx)              #  30    0xff6bd  3      OPC=cmpl_m32_r32    
  jne .L_ff78f                      #  31    0xff6c0  6      OPC=jne_label_1     
  cmpl %r12d, 0xc(%rbx)             #  32    0xff6c6  4      OPC=cmpl_m32_r32    
  jne .L_ff78f                      #  33    0xff6ca  6      OPC=jne_label_1     
  leaq 0x10(%rsp), %rbp             #  34    0xff6d0  5      OPC=leaq_r64_m16    
  movl $0x2260, %edx                #  35    0xff6d5  5      OPC=movl_r32_imm32  
  movl $0x0, %esi                   #  36    0xff6da  5      OPC=movl_r32_imm32  
  movq %rbp, %rdi                   #  37    0xff6df  3      OPC=movq_r64_r64    
  callq .__GI_memset                #  38    0xff6e2  5      OPC=callq_label     
  movq 0x8(%r13), %rax              #  39    0xff6e7  4      OPC=movq_r64_m64    
  movq 0x10(%rbx), %rsi             #  40    0xff6eb  4      OPC=movq_r64_m64    
  movq %rbp, %rdx                   #  41    0xff6ef  3      OPC=movq_r64_r64    
  movq %r13, %rdi                   #  42    0xff6f2  3      OPC=movq_r64_r64    
  callq 0x10(%rax)                  #  43    0xff6f5  3      OPC=callq_m64       
  testl %eax, %eax                  #  44    0xff6f8  2      OPC=testl_r32_r32   
  jne .L_ff709                      #  45    0xff6fa  2      OPC=jne_label       
  movq %r13, %rdi                   #  46    0xff6fc  3      OPC=movq_r64_r64    
  callq .svcerr_decode_GLIBC_2_2_5  #  47    0xff6ff  5      OPC=callq_label     
  jmpq .L_ff816                     #  48    0xff704  5      OPC=jmpq_label_1    
.L_ff709:                           #        0xff709  0      OPC=<label>         
  leaq 0x10(%rsp), %rdi             #  49    0xff709  5      OPC=leaq_r64_m16    
  callq (%rbx)                      #  50    0xff70e  2      OPC=callq_m64       
  testq %rax, %rax                  #  51    0xff710  3      OPC=testq_r64_r64   
  jne .L_ff726                      #  52    0xff713  2      OPC=jne_label       
  leaq 0x978e(%rip), %rdx           #  53    0xff715  7      OPC=leaq_r64_m16    
  cmpq %rdx, 0x18(%rbx)             #  54    0xff71c  4      OPC=cmpq_m64_r64    
  jne .L_ff816                      #  55    0xff720  6      OPC=jne_label_1     
.L_ff726:                           #        0xff726  0      OPC=<label>         
  movq 0x18(%rbx), %rsi             #  56    0xff726  4      OPC=movq_r64_m64    
  movq %rax, %rdx                   #  57    0xff72a  3      OPC=movq_r64_r64    
  movq %r13, %rdi                   #  58    0xff72d  3      OPC=movq_r64_r64    
  callq .svc_sendreply_GLIBC_2_2_5  #  59    0xff730  5      OPC=callq_label     
  testl %eax, %eax                  #  60    0xff735  2      OPC=testl_r32_r32   
  jne .L_ff777                      #  61    0xff737  2      OPC=jne_label       
  movl 0x8(%rbx), %ebx              #  62    0xff739  3      OPC=movl_r32_m32    
  movl $0x5, %edx                   #  63    0xff73c  5      OPC=movl_r32_imm32  
  leaq 0x5b418(%rip), %rsi          #  64    0xff741  7      OPC=leaq_r64_m16    
  leaq 0x5810b(%rip), %rdi          #  65    0xff748  7      OPC=leaq_r64_m16    
  callq .__dcgettext                #  66    0xff74f  5      OPC=callq_label     
  leaq 0x8(%rsp), %rdi              #  67    0xff754  5      OPC=leaq_r64_m16    
  movl %ebx, %edx                   #  68    0xff759  2      OPC=movl_r32_r32    
  movq %rax, %rsi                   #  69    0xff75b  3      OPC=movq_r64_r64    
  movl $0x0, %eax                   #  70    0xff75e  5      OPC=movl_r32_imm32  
  callq .__asprintf                 #  71    0xff763  5      OPC=callq_label     
  testl %eax, %eax                  #  72    0xff768  2      OPC=testl_r32_r32   
  jns .L_ff7d8                      #  73    0xff76a  2      OPC=jns_label       
  movq $0x0, 0x8(%rsp)              #  74    0xff76c  9      OPC=movq_m64_imm32  
  jmpq .L_ff7e2                     #  75    0xff775  2      OPC=jmpq_label      
.L_ff777:                           #        0xff777  0      OPC=<label>         
  movq 0x8(%r13), %rax              #  76    0xff777  4      OPC=movq_r64_m64    
  leaq 0x10(%rsp), %rdx             #  77    0xff77b  5      OPC=leaq_r64_m16    
  movq 0x10(%rbx), %rsi             #  78    0xff780  4      OPC=movq_r64_m64    
  movq %r13, %rdi                   #  79    0xff784  3      OPC=movq_r64_r64    
  callq 0x20(%rax)                  #  80    0xff787  3      OPC=callq_m64       
  jmpq .L_ff816                     #  81    0xff78a  5      OPC=jmpq_label_1    
.L_ff78f:                           #        0xff78f  0      OPC=<label>         
  movq 0x20(%rbx), %rbx             #  82    0xff78f  4      OPC=movq_r64_m64    
  testq %rbx, %rbx                  #  83    0xff793  3      OPC=testq_r64_r64   
  jne .L_ff6bd                      #  84    0xff796  6      OPC=jne_label_1     
.L_ff79c:                           #        0xff79c  0      OPC=<label>         
  movl $0x5, %edx                   #  85    0xff79c  5      OPC=movl_r32_imm32  
  leaq 0x5b3d5(%rip), %rsi          #  86    0xff7a1  7      OPC=leaq_r64_m16    
  leaq 0x580ab(%rip), %rdi          #  87    0xff7a8  7      OPC=leaq_r64_m16    
  callq .__dcgettext                #  88    0xff7af  5      OPC=callq_label     
  leaq 0x8(%rsp), %rdi              #  89    0xff7b4  5      OPC=leaq_r64_m16    
  movl %r14d, %edx                  #  90    0xff7b9  3      OPC=movl_r32_r32    
  movq %rax, %rsi                   #  91    0xff7bc  3      OPC=movq_r64_r64    
  movl $0x0, %eax                   #  92    0xff7bf  5      OPC=movl_r32_imm32  
  callq .__asprintf                 #  93    0xff7c4  5      OPC=callq_label     
  testl %eax, %eax                  #  94    0xff7c9  2      OPC=testl_r32_r32   
  jns .L_ff7d8                      #  95    0xff7cb  2      OPC=jns_label       
  movq $0x0, 0x8(%rsp)              #  96    0xff7cd  9      OPC=movq_m64_imm32  
  jmpq .L_ff7e2                     #  97    0xff7d6  2      OPC=jmpq_label      
.L_ff7d8:                           #        0xff7d8  0      OPC=<label>         
  movq 0x8(%rsp), %rdx              #  98    0xff7d8  5      OPC=movq_r64_m64    
  testq %rdx, %rdx                  #  99    0xff7dd  3      OPC=testq_r64_r64   
  jne .L_ff7ec                      #  100   0xff7e0  2      OPC=jne_label       
.L_ff7e2:                           #        0xff7e2  0      OPC=<label>         
  movl $0x1, %edi                   #  101   0xff7e2  5      OPC=movl_r32_imm32  
  callq .exit                       #  102   0xff7e7  5      OPC=callq_label     
.L_ff7ec:                           #        0xff7ec  0      OPC=<label>         
  leaq 0x5aa32(%rip), %rsi          #  103   0xff7ec  7      OPC=leaq_r64_m16    
  movl $0x0, %edi                   #  104   0xff7f3  5      OPC=movl_r32_imm32  
  movl $0x0, %eax                   #  105   0xff7f8  5      OPC=movl_r32_imm32  
  callq .__fxprintf                 #  106   0xff7fd  5      OPC=callq_label     
  movq 0x8(%rsp), %rdi              #  107   0xff802  5      OPC=movq_r64_m64    
  callq .L_1f8d0                    #  108   0xff807  5      OPC=callq_label     
  movl $0x1, %edi                   #  109   0xff80c  5      OPC=movl_r32_imm32  
  callq .exit                       #  110   0xff811  5      OPC=callq_label     
.L_ff816:                           #        0xff816  0      OPC=<label>         
  addq $0x2270, %rsp                #  111   0xff816  7      OPC=addq_r64_imm32  
  popq %rbx                         #  112   0xff81d  1      OPC=popq_r64_1      
  popq %rbp                         #  113   0xff81e  1      OPC=popq_r64_1      
  popq %r12                         #  114   0xff81f  2      OPC=popq_r64_1      
  popq %r13                         #  115   0xff821  2      OPC=popq_r64_1      
  popq %r14                         #  116   0xff823  2      OPC=popq_r64_1      
  retq                              #  117   0xff825  1      OPC=retq            
                                                                                 
.size universal, .-universal

