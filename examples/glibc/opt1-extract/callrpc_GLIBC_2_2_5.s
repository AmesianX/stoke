  .text
  .globl callrpc_GLIBC_2_2_5
  .type callrpc_GLIBC_2_2_5, @function

#! file-offset 0xfdaa1
#! rip-offset  0xfdaa1
#! capacity    636 bytes

# Text                                       #  Line  RIP      Bytes  Opcode              
.callrpc_GLIBC_2_2_5:                        #        0xfdaa1  0      OPC=<label>         
  pushq %rbp                                 #  1     0xfdaa1  1      OPC=pushq_r64_1     
  movq %rsp, %rbp                            #  2     0xfdaa2  3      OPC=movq_r64_r64    
  pushq %r15                                 #  3     0xfdaa5  2      OPC=pushq_r64_1     
  pushq %r14                                 #  4     0xfdaa7  2      OPC=pushq_r64_1     
  pushq %r13                                 #  5     0xfdaa9  2      OPC=pushq_r64_1     
  pushq %r12                                 #  6     0xfdaab  2      OPC=pushq_r64_1     
  pushq %rbx                                 #  7     0xfdaad  1      OPC=pushq_r64_1     
  subq $0x88, %rsp                           #  8     0xfdaae  7      OPC=subq_r64_imm32  
  movq %rdi, -0x78(%rbp)                     #  9     0xfdab5  4      OPC=movq_m64_r64    
  movq %rsi, -0x80(%rbp)                     #  10    0xfdab9  4      OPC=movq_m64_r64    
  movq %rdx, -0x88(%rbp)                     #  11    0xfdabd  7      OPC=movq_m64_r64    
  movq %rcx, -0x98(%rbp)                     #  12    0xfdac4  7      OPC=movq_m64_r64    
  movq %r8, -0xa0(%rbp)                      #  13    0xfdacb  7      OPC=movq_m64_r64    
  movq %r9, -0xa8(%rbp)                      #  14    0xfdad2  7      OPC=movq_m64_r64    
  callq .__rpc_thread_variables              #  15    0xfdad9  5      OPC=callq_label     
  movq %rax, %rbx                            #  16    0xfdade  3      OPC=movq_r64_r64    
  movq 0xc0(%rax), %r15                      #  17    0xfdae1  7      OPC=movq_r64_m64    
  testq %r15, %r15                           #  18    0xfdae8  3      OPC=testq_r64_r64   
  jne .L_fdb0f                               #  19    0xfdaeb  2      OPC=jne_label       
  movl $0x30, %esi                           #  20    0xfdaed  5      OPC=movl_r32_imm32  
  movl $0x1, %edi                            #  21    0xfdaf2  5      OPC=movl_r32_imm32  
  callq .L_1f8c0                             #  22    0xfdaf7  5      OPC=callq_label     
  movq %rax, %r15                            #  23    0xfdafc  3      OPC=movq_r64_r64    
  testq %rax, %rax                           #  24    0xfdaff  3      OPC=testq_r64_r64   
  je .L_fdd09                                #  25    0xfdb02  6      OPC=je_label_1      
  movq %rax, 0xc0(%rbx)                      #  26    0xfdb08  7      OPC=movq_m64_r64    
.L_fdb0f:                                    #        0xfdb0f  0      OPC=<label>         
  cmpq $0x0, 0x28(%r15)                      #  27    0xfdb0f  5      OPC=cmpq_m64_imm8   
  jne .L_fdb2f                               #  28    0xfdb14  2      OPC=jne_label       
  movl $0x100, %edi                          #  29    0xfdb16  5      OPC=movl_r32_imm32  
  callq .memalign_plt                        #  30    0xfdb1b  5      OPC=callq_label     
  movq %rax, 0x28(%r15)                      #  31    0xfdb20  4      OPC=movq_m64_r64    
  movb $0x0, (%rax)                          #  32    0xfdb24  3      OPC=movb_m8_imm8    
  movl $0xffffffff, 0x8(%r15)                #  33    0xfdb27  8      OPC=movl_m32_imm32  
.L_fdb2f:                                    #        0xfdb2f  0      OPC=<label>         
  cmpq $0x0, 0x20(%r15)                      #  34    0xfdb2f  5      OPC=cmpq_m64_imm8   
  je .L_fdb62                                #  35    0xfdb34  2      OPC=je_label        
  movq -0x80(%rbp), %rax                     #  36    0xfdb36  4      OPC=movq_r64_m64    
  cmpq %rax, 0x10(%r15)                      #  37    0xfdb3a  4      OPC=cmpq_m64_r64    
  jne .L_fdb62                               #  38    0xfdb3e  2      OPC=jne_label       
  movq -0x88(%rbp), %rax                     #  39    0xfdb40  7      OPC=movq_r64_m64    
  cmpq %rax, 0x18(%r15)                      #  40    0xfdb47  4      OPC=cmpq_m64_r64    
  jne .L_fdb62                               #  41    0xfdb4b  2      OPC=jne_label       
  movq 0x28(%r15), %rdi                      #  42    0xfdb4d  4      OPC=movq_r64_m64    
  movq -0x78(%rbp), %rsi                     #  43    0xfdb51  4      OPC=movq_r64_m64    
  callq .__GI_strcmp                         #  44    0xfdb55  5      OPC=callq_label     
  testl %eax, %eax                           #  45    0xfdb5a  2      OPC=testl_r32_r32   
  je .L_fdccd                                #  46    0xfdb5c  6      OPC=je_label_1      
.L_fdb62:                                    #        0xfdb62  0      OPC=<label>         
  movq $0x0, 0x20(%r15)                      #  47    0xfdb62  8      OPC=movq_m64_imm32  
  movl 0x8(%r15), %edi                       #  48    0xfdb6a  4      OPC=movl_r32_m32    
  cmpl $0xffffffff, %edi                     #  49    0xfdb6e  6      OPC=cmpl_r32_imm32  
  nop                                        #  50    0xfdb74  1      OPC=nop             
  nop                                        #  51    0xfdb75  1      OPC=nop             
  nop                                        #  52    0xfdb76  1      OPC=nop             
  je .L_fdb80                                #  53    0xfdb77  2      OPC=je_label        
  callq .__close                             #  54    0xfdb79  5      OPC=callq_label     
  movl $0xffffffff, 0x8(%r15)                #  55    0xfdb7e  8      OPC=movl_m32_imm32  
.L_fdb80:                                    #        0xfdb86  0      OPC=<label>         
  movq (%r15), %rdi                          #  56    0xfdb86  3      OPC=movq_r64_m64    
  testq %rdi, %rdi                           #  57    0xfdb89  3      OPC=testq_r64_r64   
  je .L_fdb96                                #  58    0xfdb8c  2      OPC=je_label        
  movq 0x8(%rdi), %rax                       #  59    0xfdb8e  4      OPC=movq_r64_m64    
  callq 0x20(%rax)                           #  60    0xfdb92  3      OPC=callq_m64       
  movq $0x0, (%r15)                          #  61    0xfdb95  7      OPC=movq_m64_imm32  
.L_fdb96:                                    #        0xfdb9c  0      OPC=<label>         
  subq $0x410, %rsp                          #  62    0xfdb9c  7      OPC=subq_r64_imm32  
  leaq 0xf(%rsp), %rdx                       #  63    0xfdba3  5      OPC=leaq_r64_m16    
  andq $0xf0, %rdx                           #  64    0xfdba8  4      OPC=andq_r64_imm8   
  movl $0x400, %ebx                          #  65    0xfdbac  5      OPC=movl_r32_imm32  
  leaq -0x6c(%rbp), %r14                     #  66    0xfdbb1  4      OPC=leaq_r64_m16    
  leaq -0x68(%rbp), %r13                     #  67    0xfdbb5  4      OPC=leaq_r64_m16    
  leaq -0x60(%rbp), %r12                     #  68    0xfdbb9  4      OPC=leaq_r64_m16    
  movq %r15, -0x90(%rbp)                     #  69    0xfdbbd  7      OPC=movq_m64_r64    
  movq -0x78(%rbp), %r15                     #  70    0xfdbc4  4      OPC=movq_r64_m64    
  jmpq .L_fdc03                              #  71    0xfdbc8  2      OPC=jmpq_label      
.L_fdbc4:                                    #        0xfdbca  0      OPC=<label>         
  cmpl $0xffffffff, -0x6c(%rbp)              #  72    0xfdbca  7      OPC=cmpl_m32_imm32  
  nop                                        #  73    0xfdbd1  1      OPC=nop             
  nop                                        #  74    0xfdbd2  1      OPC=nop             
  nop                                        #  75    0xfdbd3  1      OPC=nop             
  nop                                        #  76    0xfdbd4  1      OPC=nop             
  jne .L_fdcbf                               #  77    0xfdbd5  6      OPC=jne_label_1     
  movq 0x28d2ab(%rip), %rax                  #  78    0xfdbdb  7      OPC=movq_r64_m64    
  cmpl $0x22, (%rax)                         #  79    0xfdbe2  3      OPC=cmpl_m32_imm8   
  nop                                        #  80    0xfdbe5  1      OPC=nop             
  jne .L_fdcc6                               #  81    0xfdbe6  6      OPC=jne_label_1     
  addq %rbx, %rbx                            #  82    0xfdbec  3      OPC=addq_r64_r64    
  leaq 0x1e(%rbx), %rax                      #  83    0xfdbef  4      OPC=leaq_r64_m16    
  movl $0x10, %ecx                           #  84    0xfdbf3  5      OPC=movl_r32_imm32  
  movl $0x0, %edx                            #  85    0xfdbf8  5      OPC=movl_r32_imm32  
  divq %rcx                                  #  86    0xfdbfd  3      OPC=divq_r64        
  shlq $0x4, %rax                            #  87    0xfdc00  4      OPC=shlq_r64_imm8   
  subq %rax, %rsp                            #  88    0xfdc04  3      OPC=subq_r64_r64    
  leaq 0xf(%rsp), %rdx                       #  89    0xfdc07  5      OPC=leaq_r64_m16    
  andq $0xf0, %rdx                           #  90    0xfdc0c  4      OPC=andq_r64_imm8   
.L_fdc03:                                    #        0xfdc10  0      OPC=<label>         
  movq %r14, %r9                             #  91    0xfdc10  3      OPC=movq_r64_r64    
  movq %r13, %r8                             #  92    0xfdc13  3      OPC=movq_r64_r64    
  movq %rbx, %rcx                            #  93    0xfdc16  3      OPC=movq_r64_r64    
  movq %r12, %rsi                            #  94    0xfdc19  3      OPC=movq_r64_r64    
  movq %r15, %rdi                            #  95    0xfdc1c  3      OPC=movq_r64_r64    
  callq .gethostbyname_r__GLIBC_2_2_5        #  96    0xfdc1f  5      OPC=callq_label     
  testl %eax, %eax                           #  97    0xfdc24  2      OPC=testl_r32_r32   
  jne .L_fdbc4                               #  98    0xfdc26  2      OPC=jne_label       
  movq -0x68(%rbp), %rax                     #  99    0xfdc28  4      OPC=movq_r64_m64    
  testq %rax, %rax                           #  100   0xfdc2c  3      OPC=testq_r64_r64   
  je .L_fdbc4                                #  101   0xfdc2f  2      OPC=je_label        
  movq -0x90(%rbp), %r15                     #  102   0xfdc31  7      OPC=movq_r64_m64    
  leaq -0x40(%rbp), %rbx                     #  103   0xfdc38  4      OPC=leaq_r64_m16    
  leaq 0x4(%rbx), %rdi                       #  104   0xfdc3c  4      OPC=leaq_r64_m16    
  movslq 0x14(%rax), %rdx                    #  105   0xfdc40  4      OPC=movslq_r64_m32  
  movq 0x18(%rax), %rax                      #  106   0xfdc44  4      OPC=movq_r64_m64    
  movq (%rax), %rsi                          #  107   0xfdc48  3      OPC=movq_r64_m64    
  callq .__GI_memcpy                         #  108   0xfdc4b  5      OPC=callq_label     
  movw $0x2, -0x40(%rbp)                     #  109   0xfdc50  6      OPC=movw_m16_imm16  
  movw $0x0, -0x3e(%rbp)                     #  110   0xfdc56  6      OPC=movw_m16_imm16  
  leaq 0x8(%r15), %r9                        #  111   0xfdc5c  4      OPC=leaq_r64_m16    
  movl $0x5, %ecx                            #  112   0xfdc60  5      OPC=movl_r32_imm32  
  movl $0x0, %r8d                            #  113   0xfdc65  6      OPC=movl_r32_imm32  
  movq -0x88(%rbp), %rdx                     #  114   0xfdc6b  7      OPC=movq_r64_m64    
  movq -0x80(%rbp), %rsi                     #  115   0xfdc72  4      OPC=movq_r64_m64    
  movq %rbx, %rdi                            #  116   0xfdc76  3      OPC=movq_r64_r64    
  callq .clntudp_create_GLIBC_2_2_5          #  117   0xfdc79  5      OPC=callq_label     
  movq %rax, (%r15)                          #  118   0xfdc7e  3      OPC=movq_m64_r64    
  testq %rax, %rax                           #  119   0xfdc81  3      OPC=testq_r64_r64   
  jne .L_fdc85                               #  120   0xfdc84  2      OPC=jne_label       
  callq .__rpc_thread_createerr_GLIBC_2_2_5  #  121   0xfdc86  5      OPC=callq_label     
  movl (%rax), %eax                          #  122   0xfdc8b  2      OPC=movl_r32_m32    
  jmpq .L_fdd0e                              #  123   0xfdc8d  5      OPC=jmpq_label_1    
.L_fdc85:                                    #        0xfdc92  0      OPC=<label>         
  movq $0x1, 0x20(%r15)                      #  124   0xfdc92  8      OPC=movq_m64_imm32  
  movq -0x80(%rbp), %rax                     #  125   0xfdc9a  4      OPC=movq_r64_m64    
  movq %rax, 0x10(%r15)                      #  126   0xfdc9e  4      OPC=movq_m64_r64    
  movq -0x88(%rbp), %rax                     #  127   0xfdca2  7      OPC=movq_r64_m64    
  movq %rax, 0x18(%r15)                      #  128   0xfdca9  4      OPC=movq_m64_r64    
  movq 0x28(%r15), %rdi                      #  129   0xfdcad  4      OPC=movq_r64_m64    
  movl $0xff, %edx                           #  130   0xfdcb1  5      OPC=movl_r32_imm32  
  movq -0x78(%rbp), %rsi                     #  131   0xfdcb6  4      OPC=movq_r64_m64    
  callq .__GI_strncpy                        #  132   0xfdcba  5      OPC=callq_label     
  movq 0x28(%r15), %rax                      #  133   0xfdcbf  4      OPC=movq_r64_m64    
  movb $0x0, 0xff(%rax)                      #  134   0xfdcc3  7      OPC=movb_m8_imm8    
  jmpq .L_fdccd                              #  135   0xfdcca  2      OPC=jmpq_label      
.L_fdcbf:                                    #        0xfdccc  0      OPC=<label>         
  movl $0xd, %eax                            #  136   0xfdccc  5      OPC=movl_r32_imm32  
  jmpq .L_fdd0e                              #  137   0xfdcd1  2      OPC=jmpq_label      
.L_fdcc6:                                    #        0xfdcd3  0      OPC=<label>         
  movl $0xd, %eax                            #  138   0xfdcd3  5      OPC=movl_r32_imm32  
  jmpq .L_fdd0e                              #  139   0xfdcd8  2      OPC=jmpq_label      
.L_fdccd:                                    #        0xfdcda  0      OPC=<label>         
  movq (%r15), %rdi                          #  140   0xfdcda  3      OPC=movq_r64_m64    
  movq 0x8(%rdi), %rax                       #  141   0xfdcdd  4      OPC=movq_r64_m64    
  pushq $0x0                                 #  142   0xfdce1  2      OPC=pushq_imm8      
  pushq $0x19                                #  143   0xfdce3  2      OPC=pushq_imm8      
  movq 0x18(%rbp), %r9                       #  144   0xfdce5  4      OPC=movq_r64_m64    
  movq 0x10(%rbp), %r8                       #  145   0xfdce9  4      OPC=movq_r64_m64    
  movq -0xa8(%rbp), %rcx                     #  146   0xfdced  7      OPC=movq_r64_m64    
  movq -0xa0(%rbp), %rdx                     #  147   0xfdcf4  7      OPC=movq_r64_m64    
  movq -0x98(%rbp), %rsi                     #  148   0xfdcfb  7      OPC=movq_r64_m64    
  callq (%rax)                               #  149   0xfdd02  2      OPC=callq_m64       
  addq $0x10, %rsp                           #  150   0xfdd04  4      OPC=addq_r64_imm8   
  testl %eax, %eax                           #  151   0xfdd08  2      OPC=testl_r32_r32   
  je .L_fdd0e                                #  152   0xfdd0a  2      OPC=je_label        
  movq $0x0, 0x20(%r15)                      #  153   0xfdd0c  8      OPC=movq_m64_imm32  
  jmpq .L_fdd0e                              #  154   0xfdd14  2      OPC=jmpq_label      
.L_fdd09:                                    #        0xfdd16  0      OPC=<label>         
  movl $0x0, %eax                            #  155   0xfdd16  5      OPC=movl_r32_imm32  
.L_fdd0e:                                    #        0xfdd1b  0      OPC=<label>         
  leaq -0x28(%rbp), %rsp                     #  156   0xfdd1b  4      OPC=leaq_r64_m16    
  popq %rbx                                  #  157   0xfdd1f  1      OPC=popq_r64_1      
  popq %r12                                  #  158   0xfdd20  2      OPC=popq_r64_1      
  popq %r13                                  #  159   0xfdd22  2      OPC=popq_r64_1      
  popq %r14                                  #  160   0xfdd24  2      OPC=popq_r64_1      
  popq %r15                                  #  161   0xfdd26  2      OPC=popq_r64_1      
  popq %rbp                                  #  162   0xfdd28  1      OPC=popq_r64_1      
  retq                                       #  163   0xfdd29  1      OPC=retq            
                                                                                          
.size callrpc_GLIBC_2_2_5, .-callrpc_GLIBC_2_2_5

