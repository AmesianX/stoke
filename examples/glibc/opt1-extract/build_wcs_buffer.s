  .text
  .globl build_wcs_buffer
  .type build_wcs_buffer, @function

#! file-offset 0xbb4f6
#! rip-offset  0xbb4f6
#! capacity    398 bytes

# Text                             #  Line  RIP      Bytes  Opcode               
.build_wcs_buffer:                 #        0xbb4f6  0      OPC=<label>          
  pushq %r15                       #  1     0xbb4f6  2      OPC=pushq_r64_1      
  pushq %r14                       #  2     0xbb4f8  2      OPC=pushq_r64_1      
  pushq %r13                       #  3     0xbb4fa  2      OPC=pushq_r64_1      
  pushq %r12                       #  4     0xbb4fc  2      OPC=pushq_r64_1      
  pushq %rbp                       #  5     0xbb4fe  1      OPC=pushq_r64_1      
  pushq %rbx                       #  6     0xbb4ff  1      OPC=pushq_r64_1      
  subq $0x28, %rsp                 #  7     0xbb500  4      OPC=subq_r64_imm8    
  movq %rdi, %rbx                  #  8     0xbb504  3      OPC=movq_r64_r64     
  cmpl $0x10, 0x68(%rdi)           #  9     0xbb507  4      OPC=cmpl_m32_imm8    
  jle .L_bb52c                     #  10    0xbb50b  2      OPC=jle_label        
  leaq 0xa300c(%rip), %rcx         #  11    0xbb50d  7      OPC=leaq_r64_m16     
  movl $0xce, %edx                 #  12    0xbb514  5      OPC=movl_r32_imm32   
  leaq 0x9de31(%rip), %rsi         #  13    0xbb519  7      OPC=leaq_r64_m16     
  leaq 0xa1971(%rip), %rdi         #  14    0xbb520  7      OPC=leaq_r64_m16     
  callq .__assert_fail             #  15    0xbb527  5      OPC=callq_label      
.L_bb52c:                          #        0xbb52c  0      OPC=<label>          
  movl 0x34(%rdi), %r12d           #  16    0xbb52c  4      OPC=movl_r32_m32     
  cmpl %r12d, 0x40(%rdi)           #  17    0xbb530  4      OPC=cmpl_m32_r32     
  cmovlel 0x40(%rdi), %r12d        #  18    0xbb534  5      OPC=cmovlel_r32_m32  
  movl 0x2c(%rdi), %ebp            #  19    0xbb539  3      OPC=movl_r32_m32     
  cmpl %ebp, %r12d                 #  20    0xbb53c  3      OPC=cmpl_r32_r32     
  jle .L_bb66f                     #  21    0xbb53f  6      OPC=jle_label_1      
  leaq 0x20(%rdi), %r15            #  22    0xbb545  4      OPC=leaq_r64_m16     
  leaq 0xc(%rsp), %r14             #  23    0xbb549  5      OPC=leaq_r64_m16     
.L_bb54e:                          #        0xbb54e  0      OPC=<label>          
  movl %r12d, %edx                 #  24    0xbb54e  3      OPC=movl_r32_r32     
  subl %ebp, %edx                  #  25    0xbb551  2      OPC=subl_r32_r32     
  movq 0x20(%rbx), %r13            #  26    0xbb553  4      OPC=movq_r64_m64     
  cmpq $0x0, 0x50(%rbx)            #  27    0xbb557  5      OPC=cmpq_m64_imm8    
  je .L_bb5b3                      #  28    0xbb55c  2      OPC=je_label         
  testl %edx, %edx                 #  29    0xbb55e  2      OPC=testl_r32_r32    
  jle .L_bb5c2                     #  30    0xbb560  2      OPC=jle_label        
  cmpl $0x0, 0x68(%rbx)            #  31    0xbb562  4      OPC=cmpl_m32_imm8    
  jle .L_bb5c2                     #  32    0xbb566  2      OPC=jle_label        
  leaq 0x10(%rsp), %rsi            #  33    0xbb568  5      OPC=leaq_r64_m16     
  movl $0x0, %eax                  #  34    0xbb56d  5      OPC=movl_r32_imm32   
.L_bb572:                          #        0xbb572  0      OPC=<label>          
  movl %ebp, %ecx                  #  35    0xbb572  2      OPC=movl_r32_r32     
  addl 0x28(%rbx), %ecx            #  36    0xbb574  3      OPC=addl_r32_m32     
  addl %eax, %ecx                  #  37    0xbb577  2      OPC=addl_r32_r32     
  movslq %ecx, %rcx                #  38    0xbb579  3      OPC=movslq_r64_r32   
  movq (%rbx), %rdi                #  39    0xbb57c  3      OPC=movq_r64_m64     
  movzbl (%rdi,%rcx,1), %ecx       #  40    0xbb57f  4      OPC=movzbl_r32_m8    
  movq 0x50(%rbx), %rdi            #  41    0xbb583  4      OPC=movq_r64_m64     
  movzbl (%rdi,%rcx,1), %edi       #  42    0xbb587  4      OPC=movzbl_r32_m8    
  leal (%rax,%rbp,1), %ecx         #  43    0xbb58b  3      OPC=leal_r32_m16     
  movslq %ecx, %rcx                #  44    0xbb58e  3      OPC=movslq_r64_r32   
  movq 0x8(%rbx), %r8              #  45    0xbb591  4      OPC=movq_r64_m64     
  movb %dil, (%r8,%rcx,1)          #  46    0xbb595  4      OPC=movb_m8_r8       
  movb %dil, (%rsi)                #  47    0xbb599  3      OPC=movb_m8_r8       
  addl $0x1, %eax                  #  48    0xbb59c  3      OPC=addl_r32_imm8    
  addq $0x1, %rsi                  #  49    0xbb59f  4      OPC=addq_r64_imm8    
  cmpl %eax, 0x68(%rbx)            #  50    0xbb5a3  3      OPC=cmpl_m32_r32     
  jle .L_bb5ac                     #  51    0xbb5a6  2      OPC=jle_label        
  cmpl %eax, %edx                  #  52    0xbb5a8  2      OPC=cmpl_r32_r32     
  jg .L_bb572                      #  53    0xbb5aa  2      OPC=jg_label         
.L_bb5ac:                          #        0xbb5ac  0      OPC=<label>          
  leaq 0x10(%rsp), %rsi            #  54    0xbb5ac  5      OPC=leaq_r64_m16     
  jmpq .L_bb5c7                    #  55    0xbb5b1  2      OPC=jmpq_label       
.L_bb5b3:                          #        0xbb5b3  0      OPC=<label>          
  movslq %ebp, %rsi                #  56    0xbb5b3  3      OPC=movslq_r64_r32   
  movslq 0x28(%rbx), %rax          #  57    0xbb5b6  4      OPC=movslq_r64_m32   
  addq %rax, %rsi                  #  58    0xbb5ba  3      OPC=addq_r64_r64     
  addq (%rbx), %rsi                #  59    0xbb5bd  3      OPC=addq_r64_m64     
  jmpq .L_bb5c7                    #  60    0xbb5c0  2      OPC=jmpq_label       
.L_bb5c2:                          #        0xbb5c2  0      OPC=<label>          
  leaq 0x10(%rsp), %rsi            #  61    0xbb5c2  5      OPC=leaq_r64_m16     
.L_bb5c7:                          #        0xbb5c7  0      OPC=<label>          
  movslq %edx, %rdx                #  62    0xbb5c7  3      OPC=movslq_r64_r32   
  movq %r15, %rcx                  #  63    0xbb5ca  3      OPC=movq_r64_r64     
  movq %r14, %rdi                  #  64    0xbb5cd  3      OPC=movq_r64_r64     
  callq .__mbrtowc                 #  65    0xbb5d0  5      OPC=callq_label      
  leaq -0x1(%rax), %rdx            #  66    0xbb5d5  4      OPC=leaq_r64_m16     
  cmpq $0xfd, %rdx                 #  67    0xbb5d9  4      OPC=cmpq_r64_imm8    
  ja .L_bb5ed                      #  68    0xbb5dd  2      OPC=ja_label         
  cmpq $0xfe, %rax                 #  69    0xbb5df  4      OPC=cmpq_r64_imm8    
  jne .L_bb627                     #  70    0xbb5e3  2      OPC=jne_label        
  movl 0x40(%rbx), %eax            #  71    0xbb5e5  3      OPC=movl_r32_m32     
  cmpl %eax, 0x34(%rbx)            #  72    0xbb5e8  3      OPC=cmpl_m32_r32     
  jl .L_bb621                      #  73    0xbb5eb  2      OPC=jl_label         
.L_bb5ed:                          #        0xbb5ed  0      OPC=<label>          
  movl %ebp, %eax                  #  74    0xbb5ed  2      OPC=movl_r32_r32     
  addl 0x28(%rbx), %eax            #  75    0xbb5ef  3      OPC=addl_r32_m32     
  cltq                             #  76    0xbb5f2  2      OPC=cltq             
  movq (%rbx), %rdx                #  77    0xbb5f4  3      OPC=movq_r64_m64     
  movzbl (%rdx,%rax,1), %eax       #  78    0xbb5f7  4      OPC=movzbl_r32_m8    
  movzbl %al, %edx                 #  79    0xbb5fb  3      OPC=movzbl_r32_r8    
  movl %edx, 0xc(%rsp)             #  80    0xbb5fe  4      OPC=movl_m32_r32     
  movq 0x50(%rbx), %rdx            #  81    0xbb602  4      OPC=movq_r64_m64     
  testq %rdx, %rdx                 #  82    0xbb606  3      OPC=testq_r64_r64    
  je .L_bb616                      #  83    0xbb609  2      OPC=je_label         
  movzbl %al, %eax                 #  84    0xbb60b  3      OPC=movzbl_r32_r8    
  movzbl (%rdx,%rax,1), %eax       #  85    0xbb60e  4      OPC=movzbl_r32_m8    
  movl %eax, 0xc(%rsp)             #  86    0xbb612  4      OPC=movl_m32_r32     
.L_bb616:                          #        0xbb616  0      OPC=<label>          
  movq %r13, 0x20(%rbx)            #  87    0xbb616  4      OPC=movq_m64_r64     
  movl $0x1, %eax                  #  88    0xbb61a  5      OPC=movl_r32_imm32   
  jmpq .L_bb627                    #  89    0xbb61f  2      OPC=jmpq_label       
.L_bb621:                          #        0xbb621  0      OPC=<label>          
  movq %r13, 0x20(%rbx)            #  90    0xbb621  4      OPC=movq_m64_r64     
  jmpq .L_bb66f                    #  91    0xbb625  2      OPC=jmpq_label       
.L_bb627:                          #        0xbb627  0      OPC=<label>          
  leal 0x1(%rbp), %edx             #  92    0xbb627  3      OPC=leal_r32_m16     
  movslq %ebp, %rcx                #  93    0xbb62a  3      OPC=movslq_r64_r32   
  movq 0x10(%rbx), %rsi            #  94    0xbb62d  4      OPC=movq_r64_m64     
  movl 0xc(%rsp), %edi             #  95    0xbb631  4      OPC=movl_r32_m32     
  movl %edi, (%rsi,%rcx,4)         #  96    0xbb635  3      OPC=movl_m32_r32     
  movl %edx, %r8d                  #  97    0xbb638  3      OPC=movl_r32_r32     
  addl %ebp, %eax                  #  98    0xbb63b  2      OPC=addl_r32_r32     
  movl %eax, %edi                  #  99    0xbb63d  2      OPC=movl_r32_r32     
  cmpl %eax, %edx                  #  100   0xbb63f  2      OPC=cmpl_r32_r32     
  jge .L_bb664                     #  101   0xbb641  2      OPC=jge_label        
.L_bb643:                          #        0xbb643  0      OPC=<label>          
  leal 0x1(%rdx), %ecx             #  102   0xbb643  3      OPC=leal_r32_m16     
  movslq %edx, %rdx                #  103   0xbb646  3      OPC=movslq_r64_r32   
  movq 0x10(%rbx), %rsi            #  104   0xbb649  4      OPC=movq_r64_m64     
  movl $0xffffffff, (%rsi,%rdx,4)  #  105   0xbb64d  7      OPC=movl_m32_imm32   
  movl %ecx, %edx                  #  106   0xbb654  2      OPC=movl_r32_r32     
  cmpl %ecx, %edi                  #  107   0xbb656  2      OPC=cmpl_r32_r32     
  jne .L_bb643                     #  108   0xbb658  2      OPC=jne_label        
  subl %ebp, %r8d                  #  109   0xbb65a  3      OPC=subl_r32_r32     
  leal -0x1(%rax,%r8,1), %ebp      #  110   0xbb65d  5      OPC=leal_r32_m16     
  jmpq .L_bb666                    #  111   0xbb662  2      OPC=jmpq_label       
.L_bb664:                          #        0xbb664  0      OPC=<label>          
  movl %edx, %ebp                  #  112   0xbb664  2      OPC=movl_r32_r32     
.L_bb666:                          #        0xbb666  0      OPC=<label>          
  cmpl %ebp, %r12d                 #  113   0xbb666  3      OPC=cmpl_r32_r32     
  jg .L_bb54e                      #  114   0xbb669  6      OPC=jg_label_1       
.L_bb66f:                          #        0xbb66f  0      OPC=<label>          
  movl %ebp, 0x2c(%rbx)            #  115   0xbb66f  3      OPC=movl_m32_r32     
  movl %ebp, 0x30(%rbx)            #  116   0xbb672  3      OPC=movl_m32_r32     
  addq $0x28, %rsp                 #  117   0xbb675  4      OPC=addq_r64_imm8    
  popq %rbx                        #  118   0xbb679  1      OPC=popq_r64_1       
  popq %rbp                        #  119   0xbb67a  1      OPC=popq_r64_1       
  popq %r12                        #  120   0xbb67b  2      OPC=popq_r64_1       
  popq %r13                        #  121   0xbb67d  2      OPC=popq_r64_1       
  popq %r14                        #  122   0xbb67f  2      OPC=popq_r64_1       
  popq %r15                        #  123   0xbb681  2      OPC=popq_r64_1       
  retq                             #  124   0xbb683  1      OPC=retq             
                                                                                 
.size build_wcs_buffer, .-build_wcs_buffer

