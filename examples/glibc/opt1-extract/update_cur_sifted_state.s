  .text
  .globl update_cur_sifted_state
  .type update_cur_sifted_state, @function

#! file-offset 0xc297c
#! rip-offset  0xc297c
#! capacity    1817 bytes

# Text                              #  Line  RIP      Bytes  Opcode                
.update_cur_sifted_state:           #        0xc297c  0      OPC=<label>           
  pushq %r15                        #  1     0xc297c  2      OPC=pushq_r64_1       
  pushq %r14                        #  2     0xc297e  2      OPC=pushq_r64_1       
  pushq %r13                        #  3     0xc2980  2      OPC=pushq_r64_1       
  pushq %r12                        #  4     0xc2982  2      OPC=pushq_r64_1       
  pushq %rbp                        #  5     0xc2984  1      OPC=pushq_r64_1       
  pushq %rbx                        #  6     0xc2985  1      OPC=pushq_r64_1       
  subq $0xa8, %rsp                  #  7     0xc2986  7      OPC=subq_r64_imm32    
  movq %rdi, 0x38(%rsp)             #  8     0xc298d  5      OPC=movq_m64_r64      
  movq %rsi, %r14                   #  9     0xc2992  3      OPC=movq_r64_r64      
  movl %edx, 0x14(%rsp)             #  10    0xc2995  4      OPC=movl_m32_r32      
  movq %rcx, %rbx                   #  11    0xc2999  3      OPC=movq_r64_r64      
  movq 0x70(%rdi), %r15             #  12    0xc299c  4      OPC=movq_r64_m64      
  movl $0x0, 0x9c(%rsp)             #  13    0xc29a0  11     OPC=movl_m32_imm32    
  movslq %edx, %rcx                 #  14    0xc29ab  3      OPC=movslq_r64_r32    
  movq %rcx, 0x18(%rsp)             #  15    0xc29ae  5      OPC=movq_m64_r64      
  leaq (,%rcx,8), %rsi              #  16    0xc29b3  8      OPC=leaq_r64_m16      
  movq %rsi, 0x40(%rsp)             #  17    0xc29bb  5      OPC=movq_m64_r64      
  movq 0x88(%rdi), %rax             #  18    0xc29c0  7      OPC=movq_r64_m64      
  movq (%rax,%rcx,8), %rax          #  19    0xc29c7  4      OPC=movq_r64_m64      
  leaq 0x8(%rax), %rdx              #  20    0xc29cb  4      OPC=leaq_r64_m16      
  testq %rax, %rax                  #  21    0xc29cf  3      OPC=testq_r64_r64     
  movl $0x0, %eax                   #  22    0xc29d2  5      OPC=movl_r32_imm32    
  cmovneq %rdx, %rax                #  23    0xc29d7  4      OPC=cmovneq_r64_r64   
  movq %rax, 0x28(%rsp)             #  24    0xc29db  5      OPC=movq_m64_r64      
  cmpl $0x0, 0x4(%rbx)              #  25    0xc29e0  4      OPC=cmpl_m32_imm8     
  jne .L_c29f6                      #  26    0xc29e4  2      OPC=jne_label         
  movq (%r14), %rax                 #  27    0xc29e6  3      OPC=movq_r64_m64      
  movq $0x0, (%rax,%rcx,8)          #  28    0xc29e9  8      OPC=movq_m64_imm32    
  jmpq .L_c2cc4                     #  29    0xc29f1  5      OPC=jmpq_label_1      
.L_c29f6:                           #        0xc29f6  0      OPC=<label>           
  cmpq $0x0, 0x28(%rsp)             #  30    0xc29f6  6      OPC=cmpq_m64_imm8     
  je .L_c2c96                       #  31    0xc29fc  6      OPC=je_label_1        
  movl $0x0, 0x70(%rsp)             #  32    0xc2a02  8      OPC=movl_m32_imm32    
  leaq 0x70(%rsp), %rdi             #  33    0xc2a0a  5      OPC=leaq_r64_m16      
  movq %rbx, %rdx                   #  34    0xc2a0f  3      OPC=movq_r64_r64      
  movq %r15, %rsi                   #  35    0xc2a12  3      OPC=movq_r64_r64      
  callq .re_acquire_state           #  36    0xc2a15  5      OPC=callq_label       
  movq %rax, %r12                   #  37    0xc2a1a  3      OPC=movq_r64_r64      
  movl 0x70(%rsp), %eax             #  38    0xc2a1d  4      OPC=movl_r32_m32      
  testl %eax, %eax                  #  39    0xc2a21  2      OPC=testl_r32_r32     
  jne .L_c3083                      #  40    0xc2a23  6      OPC=jne_label_1       
  cmpl $0x0, 0x28(%r12)             #  41    0xc2a29  6      OPC=cmpl_m32_imm8     
  jne .L_c2a8e                      #  42    0xc2a2f  2      OPC=jne_label         
  leaq 0x28(%r12), %r13             #  43    0xc2a31  5      OPC=leaq_r64_m16      
  movl 0x4(%rbx), %esi              #  44    0xc2a36  3      OPC=movl_r32_m32      
  movq %r13, %rdi                   #  45    0xc2a39  3      OPC=movq_r64_r64      
  callq .re_node_set_alloc          #  46    0xc2a3c  5      OPC=callq_label       
  movl %eax, %edx                   #  47    0xc2a41  2      OPC=movl_r32_r32      
  movl %eax, 0x70(%rsp)             #  48    0xc2a43  4      OPC=movl_m32_r32      
  movl $0xc, %eax                   #  49    0xc2a47  5      OPC=movl_r32_imm32    
  testl %edx, %edx                  #  50    0xc2a4c  2      OPC=testl_r32_r32     
  jne .L_c3083                      #  51    0xc2a4e  6      OPC=jne_label_1       
  cmpl $0x0, 0x4(%rbx)              #  52    0xc2a54  4      OPC=cmpl_m32_imm8     
  jle .L_c2a8e                      #  53    0xc2a58  2      OPC=jle_label         
  movl $0x0, %ebp                   #  54    0xc2a5a  5      OPC=movl_r32_imm32    
.L_c2a5f:                           #        0xc2a5f  0      OPC=<label>           
  movslq %ebp, %rax                 #  55    0xc2a5f  3      OPC=movslq_r64_r32    
  movq 0x8(%rbx), %rdx              #  56    0xc2a62  4      OPC=movq_r64_m64      
  movslq (%rdx,%rax,4), %rsi        #  57    0xc2a66  4      OPC=movslq_r64_m32    
  shlq $0x4, %rsi                   #  58    0xc2a6a  4      OPC=shlq_r64_imm8     
  addq 0x38(%r15), %rsi             #  59    0xc2a6e  4      OPC=addq_r64_m64      
  movq %r13, %rdi                   #  60    0xc2a72  3      OPC=movq_r64_r64      
  callq .re_node_set_merge          #  61    0xc2a75  5      OPC=callq_label       
  movl %eax, 0x70(%rsp)             #  62    0xc2a7a  4      OPC=movl_m32_r32      
  testl %eax, %eax                  #  63    0xc2a7e  2      OPC=testl_r32_r32     
  jne .L_c3003                      #  64    0xc2a80  6      OPC=jne_label_1       
  addl $0x1, %ebp                   #  65    0xc2a86  3      OPC=addl_r32_imm8     
  cmpl 0x4(%rbx), %ebp              #  66    0xc2a89  3      OPC=cmpl_r32_m32      
  jl .L_c2a5f                       #  67    0xc2a8c  2      OPC=jl_label          
.L_c2a8e:                           #        0xc2a8e  0      OPC=<label>           
  leaq 0x28(%r12), %rdx             #  68    0xc2a8e  5      OPC=leaq_r64_m16      
  movq 0x28(%rsp), %rsi             #  69    0xc2a93  5      OPC=movq_r64_m64      
  movq %rbx, %rdi                   #  70    0xc2a98  3      OPC=movq_r64_r64      
  callq .re_node_set_add_intersect  #  71    0xc2a9b  5      OPC=callq_label       
  movl %eax, 0x9c(%rsp)             #  72    0xc2aa0  7      OPC=movl_m32_r32      
  testl %eax, %eax                  #  73    0xc2aa7  2      OPC=testl_r32_r32     
  jne .L_c3083                      #  74    0xc2aa9  6      OPC=jne_label_1       
  cmpl $0x0, 0x1c(%r14)             #  75    0xc2aaf  5      OPC=cmpl_m32_imm8     
  je .L_c3045                       #  76    0xc2ab4  6      OPC=je_label_1        
  movq 0x38(%rsp), %rax             #  77    0xc2aba  5      OPC=movq_r64_m64      
  movq 0xa0(%rax), %rax             #  78    0xc2abf  7      OPC=movq_r64_m64      
  movq %rax, 0x8(%rsp)              #  79    0xc2ac6  5      OPC=movq_m64_r64      
  cmpl $0x0, 0x1c(%r14)             #  80    0xc2acb  5      OPC=cmpl_m32_imm8     
  jle .L_c300a                      #  81    0xc2ad0  6      OPC=jle_label_1       
  movl $0x0, %r13d                  #  82    0xc2ad6  6      OPC=movl_r32_imm32    
.L_c2adc:                           #        0xc2adc  0      OPC=<label>           
  movslq %r13d, %rax                #  83    0xc2adc  3      OPC=movslq_r64_r32    
  movq 0x20(%r14), %rdx             #  84    0xc2adf  4      OPC=movq_r64_m64      
  movslq (%rdx,%rax,4), %rax        #  85    0xc2ae3  4      OPC=movslq_r64_m32    
  leaq (%rax,%rax,4), %rax          #  86    0xc2ae7  4      OPC=leaq_r64_m16      
  movq 0x8(%rsp), %rcx              #  87    0xc2aeb  5      OPC=movq_r64_m64      
  leaq (%rcx,%rax,4), %rax          #  88    0xc2af0  4      OPC=leaq_r64_m16      
  movl 0x14(%rsp), %esi             #  89    0xc2af4  4      OPC=movl_r32_m32      
  cmpl 0x8(%rax), %esi              #  90    0xc2af8  3      OPC=cmpl_r32_m32      
  jle .L_c2c83                      #  91    0xc2afb  6      OPC=jle_label_1       
  cmpl 0x4(%rax), %esi              #  92    0xc2b01  3      OPC=cmpl_r32_m32      
  jg .L_c2c83                       #  93    0xc2b04  6      OPC=jg_label_1        
  movq (%r15), %r8                  #  94    0xc2b0a  3      OPC=movq_r64_m64      
  movslq (%rax), %rdx               #  95    0xc2b0d  3      OPC=movslq_r64_m32    
  shlq $0x4, %rdx                   #  96    0xc2b10  4      OPC=shlq_r64_imm8     
  movl (%r8,%rdx,1), %r12d          #  97    0xc2b14  4      OPC=movl_r32_m32      
  cmpl 0xc(%rax), %esi              #  98    0xc2b18  3      OPC=cmpl_r32_m32      
  je .L_c2b31                       #  99    0xc2b1b  2      OPC=je_label          
  movl $0x0, %ebp                   #  100   0xc2b1d  5      OPC=movl_r32_imm32    
  cmpl $0x0, 0x4(%rbx)              #  101   0xc2b22  4      OPC=cmpl_m32_imm8     
  jg .L_c2c3e                       #  102   0xc2b26  6      OPC=jg_label_1        
  jmpq .L_c2c83                     #  103   0xc2b2c  5      OPC=jmpq_label_1      
.L_c2b31:                           #        0xc2b31  0      OPC=<label>           
  movl 0x4(%rbx), %eax              #  104   0xc2b31  3      OPC=movl_r32_m32      
  testl %eax, %eax                  #  105   0xc2b34  2      OPC=testl_r32_r32     
  jle .L_c2c83                      #  106   0xc2b36  6      OPC=jle_label_1       
  movq 0x8(%rbx), %rdx              #  107   0xc2b3c  4      OPC=movq_r64_m64      
  leal -0x1(%rax), %eax             #  108   0xc2b40  3      OPC=leal_r32_m16      
  leaq 0x4(,%rax,4), %r9            #  109   0xc2b43  8      OPC=leaq_r64_m16      
  addq %rdx, %r9                    #  110   0xc2b4b  3      OPC=addq_r64_r64      
  movl $0xffffffff, %r10d           #  111   0xc2b4e  7      OPC=movl_r32_imm32_1  
  movl %r10d, %esi                  #  112   0xc2b55  3      OPC=movl_r32_r32      
.L_c2b57:                           #        0xc2b58  0      OPC=<label>           
  movl (%rdx), %edi                 #  113   0xc2b58  2      OPC=movl_r32_m32      
  movslq %edi, %rax                 #  114   0xc2b5a  3      OPC=movslq_r64_r32    
  shlq $0x4, %rax                   #  115   0xc2b5d  4      OPC=shlq_r64_imm8     
  addq %r8, %rax                    #  116   0xc2b61  3      OPC=addq_r64_r64      
  movzbl 0x8(%rax), %ecx            #  117   0xc2b64  4      OPC=movzbl_r32_m8     
  cmpl $0x8, %ecx                   #  118   0xc2b68  3      OPC=cmpl_r32_imm8     
  jne .L_c2b74                      #  119   0xc2b6b  2      OPC=jne_label         
  cmpl (%rax), %r12d                #  120   0xc2b6d  3      OPC=cmpl_r32_m32      
  cmovel %edi, %esi                 #  121   0xc2b70  3      OPC=cmovel_r32_r32    
  jmpq .L_c2b80                     #  122   0xc2b73  2      OPC=jmpq_label        
.L_c2b74:                           #        0xc2b75  0      OPC=<label>           
  cmpl $0x9, %ecx                   #  123   0xc2b75  3      OPC=cmpl_r32_imm8     
  jne .L_c2b80                      #  124   0xc2b78  2      OPC=jne_label         
  cmpl (%rax), %r12d                #  125   0xc2b7a  3      OPC=cmpl_r32_m32      
  cmovel %edi, %r10d                #  126   0xc2b7d  4      OPC=cmovel_r32_r32    
.L_c2b80:                           #        0xc2b81  0      OPC=<label>           
  addq $0x4, %rdx                   #  127   0xc2b81  4      OPC=addq_r64_imm8     
  cmpq %r9, %rdx                    #  128   0xc2b85  3      OPC=cmpq_r64_r64      
  jne .L_c2b57                      #  129   0xc2b88  2      OPC=jne_label         
  movl %r10d, %ebp                  #  130   0xc2b8a  3      OPC=movl_r32_r32      
  testl %esi, %esi                  #  131   0xc2b8d  2      OPC=testl_r32_r32     
  js .L_c3075                       #  132   0xc2b8f  6      OPC=js_label_1        
  movq 0x28(%rsp), %rcx             #  133   0xc2b95  5      OPC=movq_r64_m64      
  movq %rbx, %rdx                   #  134   0xc2b9a  3      OPC=movq_r64_r64      
  movq %r15, %rdi                   #  135   0xc2b9d  3      OPC=movq_r64_r64      
  callq .sub_epsilon_src_nodes      #  136   0xc2ba0  5      OPC=callq_label       
  testl %eax, %eax                  #  137   0xc2ba5  2      OPC=testl_r32_r32     
  jne .L_c3083                      #  138   0xc2ba7  6      OPC=jne_label_1       
  testl %ebp, %ebp                  #  139   0xc2bad  2      OPC=testl_r32_r32     
  js .L_c2c83                       #  140   0xc2baf  6      OPC=js_label_1        
  cmpl $0x0, 0x4(%rbx)              #  141   0xc2bb5  4      OPC=cmpl_m32_imm8     
  jle .L_c2c83                      #  142   0xc2bb9  6      OPC=jle_label_1       
.L_c2bbe:                           #        0xc2bbf  0      OPC=<label>           
  movl $0x0, %r12d                  #  143   0xc2bbf  6      OPC=movl_r32_imm32    
  movl %r13d, 0x20(%rsp)            #  144   0xc2bc5  5      OPC=movl_m32_r32      
  movq %r14, 0x30(%rsp)             #  145   0xc2bca  5      OPC=movq_m64_r64      
  movl %ebp, %r14d                  #  146   0xc2bcf  3      OPC=movl_r32_r32      
.L_c2bd1:                           #        0xc2bd2  0      OPC=<label>           
  movslq %r12d, %rax                #  147   0xc2bd2  3      OPC=movslq_r64_r32    
  movq 0x8(%rbx), %rdx              #  148   0xc2bd5  4      OPC=movq_r64_m64      
  movl (%rdx,%rax,4), %r13d         #  149   0xc2bd9  4      OPC=movl_r32_m32      
  movslq %r13d, %rbp                #  150   0xc2bdd  3      OPC=movslq_r64_r32    
  shlq $0x4, %rbp                   #  151   0xc2be0  4      OPC=shlq_r64_imm8     
  movq %rbp, %rdi                   #  152   0xc2be4  3      OPC=movq_r64_r64      
  addq 0x38(%r15), %rdi             #  153   0xc2be7  4      OPC=addq_r64_m64      
  movl %r14d, %esi                  #  154   0xc2beb  3      OPC=movl_r32_r32      
  callq .re_node_set_contains       #  155   0xc2bee  5      OPC=callq_label       
  testl %eax, %eax                  #  156   0xc2bf3  2      OPC=testl_r32_r32     
  jne .L_c2c28                      #  157   0xc2bf5  2      OPC=jne_label         
  movq %rbp, %rdi                   #  158   0xc2bf7  3      OPC=movq_r64_r64      
  addq 0x30(%r15), %rdi             #  159   0xc2bfa  4      OPC=addq_r64_m64      
  movl %r14d, %esi                  #  160   0xc2bfe  3      OPC=movl_r32_r32      
  callq .re_node_set_contains       #  161   0xc2c01  5      OPC=callq_label       
  testl %eax, %eax                  #  162   0xc2c06  2      OPC=testl_r32_r32     
  jne .L_c2c28                      #  163   0xc2c08  2      OPC=jne_label         
  movq 0x28(%rsp), %rcx             #  164   0xc2c0a  5      OPC=movq_r64_m64      
  movq %rbx, %rdx                   #  165   0xc2c0f  3      OPC=movq_r64_r64      
  movl %r13d, %esi                  #  166   0xc2c12  3      OPC=movl_r32_r32      
  movq %r15, %rdi                   #  167   0xc2c15  3      OPC=movq_r64_r64      
  callq .sub_epsilon_src_nodes      #  168   0xc2c18  5      OPC=callq_label       
  testl %eax, %eax                  #  169   0xc2c1d  2      OPC=testl_r32_r32     
  jne .L_c3083                      #  170   0xc2c1f  6      OPC=jne_label_1       
  subl $0x1, %r12d                  #  171   0xc2c25  4      OPC=subl_r32_imm8     
.L_c2c28:                           #        0xc2c29  0      OPC=<label>           
  addl $0x1, %r12d                  #  172   0xc2c29  4      OPC=addl_r32_imm8     
  cmpl 0x4(%rbx), %r12d             #  173   0xc2c2d  4      OPC=cmpl_r32_m32      
  jl .L_c2bd1                       #  174   0xc2c31  2      OPC=jl_label          
  movl 0x20(%rsp), %r13d            #  175   0xc2c33  5      OPC=movl_r32_m32      
  movq 0x30(%rsp), %r14             #  176   0xc2c38  5      OPC=movq_r64_m64      
  jmpq .L_c2c83                     #  177   0xc2c3d  2      OPC=jmpq_label        
.L_c2c3e:                           #        0xc2c3f  0      OPC=<label>           
  movslq %ebp, %rax                 #  178   0xc2c3f  3      OPC=movslq_r64_r32    
  movq 0x8(%rbx), %rdx              #  179   0xc2c42  4      OPC=movq_r64_m64      
  movl (%rdx,%rax,4), %esi          #  180   0xc2c46  3      OPC=movl_r32_m32      
  movslq %esi, %rax                 #  181   0xc2c49  3      OPC=movslq_r64_r32    
  shlq $0x4, %rax                   #  182   0xc2c4c  4      OPC=shlq_r64_imm8     
  addq (%r15), %rax                 #  183   0xc2c50  3      OPC=addq_r64_m64      
  movzbl 0x8(%rax), %edx            #  184   0xc2c53  4      OPC=movzbl_r32_m8     
  subl $0x8, %edx                   #  185   0xc2c57  3      OPC=subl_r32_imm8     
  cmpl $0x1, %edx                   #  186   0xc2c5a  3      OPC=cmpl_r32_imm8     
  ja .L_c2c7b                       #  187   0xc2c5d  2      OPC=ja_label          
  cmpl (%rax), %r12d                #  188   0xc2c5f  3      OPC=cmpl_r32_m32      
  jne .L_c2c7b                      #  189   0xc2c62  2      OPC=jne_label         
  movq 0x28(%rsp), %rcx             #  190   0xc2c64  5      OPC=movq_r64_m64      
  movq %rbx, %rdx                   #  191   0xc2c69  3      OPC=movq_r64_r64      
  movq %r15, %rdi                   #  192   0xc2c6c  3      OPC=movq_r64_r64      
  callq .sub_epsilon_src_nodes      #  193   0xc2c6f  5      OPC=callq_label       
  testl %eax, %eax                  #  194   0xc2c74  2      OPC=testl_r32_r32     
  jne .L_c3083                      #  195   0xc2c76  6      OPC=jne_label_1       
.L_c2c7b:                           #        0xc2c7c  0      OPC=<label>           
  addl $0x1, %ebp                   #  196   0xc2c7c  3      OPC=addl_r32_imm8     
  cmpl 0x4(%rbx), %ebp              #  197   0xc2c7f  3      OPC=cmpl_r32_m32      
  jl .L_c2c3e                       #  198   0xc2c82  2      OPC=jl_label          
.L_c2c83:                           #        0xc2c84  0      OPC=<label>           
  addl $0x1, %r13d                  #  199   0xc2c84  4      OPC=addl_r32_imm8     
  cmpl 0x1c(%r14), %r13d            #  200   0xc2c88  4      OPC=cmpl_r32_m32      
  jl .L_c2adc                       #  201   0xc2c8c  6      OPC=jl_label_1        
  jmpq .L_c300a                     #  202   0xc2c92  5      OPC=jmpq_label_1      
.L_c2c96:                           #        0xc2c97  0      OPC=<label>           
  movq 0x40(%rsp), %rbp             #  203   0xc2c97  5      OPC=movq_r64_m64      
  addq (%r14), %rbp                 #  204   0xc2c9c  3      OPC=addq_r64_m64      
  leaq 0x9c(%rsp), %rdi             #  205   0xc2c9f  8      OPC=leaq_r64_m16      
  movq %rbx, %rdx                   #  206   0xc2ca7  3      OPC=movq_r64_r64      
  movq %r15, %rsi                   #  207   0xc2caa  3      OPC=movq_r64_r64      
  callq .re_acquire_state           #  208   0xc2cad  5      OPC=callq_label       
  movq %rax, (%rbp)                 #  209   0xc2cb2  4      OPC=movq_m64_r64      
  movl 0x9c(%rsp), %eax             #  210   0xc2cb6  7      OPC=movl_r32_m32      
  testl %eax, %eax                  #  211   0xc2cbd  2      OPC=testl_r32_r32     
  jne .L_c3083                      #  212   0xc2cbf  6      OPC=jne_label_1       
.L_c2cc4:                           #        0xc2cc5  0      OPC=<label>           
  cmpq $0x0, 0x28(%rsp)             #  213   0xc2cc5  6      OPC=cmpq_m64_imm8     
  je .L_c2ff9                       #  214   0xc2ccb  6      OPC=je_label_1        
.L_c2cd0:                           #        0xc2cd1  0      OPC=<label>           
  movq 0x38(%rsp), %rax             #  215   0xc2cd1  5      OPC=movq_r64_m64      
  movq 0x88(%rax), %rax             #  216   0xc2cd6  7      OPC=movq_r64_m64      
  movq 0x18(%rsp), %rdi             #  217   0xc2cdd  5      OPC=movq_r64_m64      
  movq (%rax,%rdi,8), %rdx          #  218   0xc2ce2  4      OPC=movq_r64_m64      
  movl $0x0, %eax                   #  219   0xc2ce6  5      OPC=movl_r32_imm32    
  testb $0x40, 0x50(%rdx)           #  220   0xc2ceb  4      OPC=testb_m8_imm8     
  je .L_c3083                       #  221   0xc2cef  6      OPC=je_label_1        
  movq 0x38(%rsp), %rax             #  222   0xc2cf5  5      OPC=movq_r64_m64      
  movq 0x70(%rax), %r15             #  223   0xc2cfa  4      OPC=movq_r64_m64      
  movl 0x14(%rsp), %ebx             #  224   0xc2cfe  4      OPC=movl_r32_m32      
  movl %ebx, %esi                   #  225   0xc2d02  2      OPC=movl_r32_r32      
  movq %rax, %rdi                   #  226   0xc2d04  3      OPC=movq_r64_r64      
  callq .search_cur_bkref_entry     #  227   0xc2d07  5      OPC=callq_label       
  movl %eax, 0x68(%rsp)             #  228   0xc2d0c  4      OPC=movl_m32_r32      
  cmpl $0xffffffff, %eax            #  229   0xc2d10  6      OPC=cmpl_r32_imm32    
  nop                               #  230   0xc2d16  1      OPC=nop               
  nop                               #  231   0xc2d17  1      OPC=nop               
  nop                               #  232   0xc2d18  1      OPC=nop               
  je .L_c2fe5                       #  233   0xc2d19  6      OPC=je_label_1        
  movq $0x0, 0x70(%rsp)             #  234   0xc2d1f  9      OPC=movq_m64_imm32    
  movq 0x28(%rsp), %rdi             #  235   0xc2d28  5      OPC=movq_r64_m64      
  cmpl $0x0, 0x4(%rdi)              #  236   0xc2d2d  4      OPC=cmpl_m32_imm8     
  jle .L_c2fef                      #  237   0xc2d31  6      OPC=jle_label_1       
  cltq                              #  238   0xc2d37  2      OPC=cltq              
  leaq (%rax,%rax,4), %rax          #  239   0xc2d39  4      OPC=leaq_r64_m16      
  shlq $0x2, %rax                   #  240   0xc2d3d  4      OPC=shlq_r64_imm8     
  movq %rax, 0x58(%rsp)             #  241   0xc2d41  5      OPC=movq_m64_r64      
  movl $0x0, 0x18(%rsp)             #  242   0xc2d46  8      OPC=movl_m32_imm32    
  leaq 0x18(%r14), %rax             #  243   0xc2d4e  4      OPC=leaq_r64_m16      
  movq %rax, 0x48(%rsp)             #  244   0xc2d52  5      OPC=movq_m64_r64      
  leaq 0x70(%rsp), %rax             #  245   0xc2d57  5      OPC=leaq_r64_m16      
  movq %rax, 0x60(%rsp)             #  246   0xc2d5c  5      OPC=movq_m64_r64      
  leaq 0x88(%rsp), %rax             #  247   0xc2d61  8      OPC=leaq_r64_m16      
  movq %rax, 0x50(%rsp)             #  248   0xc2d69  5      OPC=movq_m64_r64      
  movl %ebx, %eax                   #  249   0xc2d6e  2      OPC=movl_r32_r32      
  addl $0x1, %eax                   #  250   0xc2d70  3      OPC=addl_r32_imm8     
  movl %eax, 0x6c(%rsp)             #  251   0xc2d73  4      OPC=movl_m32_r32      
.L_c2d70:                           #        0xc2d77  0      OPC=<label>           
  movslq 0x18(%rsp), %rax           #  252   0xc2d77  5      OPC=movslq_r64_m32    
  movq 0x28(%rsp), %rdi             #  253   0xc2d7c  5      OPC=movq_r64_m64      
  movq 0x8(%rdi), %rdx              #  254   0xc2d81  4      OPC=movq_r64_m64      
  movl (%rdx,%rax,4), %r12d         #  255   0xc2d85  4      OPC=movl_r32_m32      
  movslq %r12d, %rax                #  256   0xc2d89  3      OPC=movslq_r64_r32    
  movq %rax, %rsi                   #  257   0xc2d8c  3      OPC=movq_r64_r64      
  shlq $0x4, %rsi                   #  258   0xc2d8f  4      OPC=shlq_r64_imm8     
  movq %rsi, 0x20(%rsp)             #  259   0xc2d93  5      OPC=movq_m64_r64      
  movq (%r15), %rdx                 #  260   0xc2d98  3      OPC=movq_r64_m64      
  movzbl 0x8(%rdx,%rsi,1), %edx     #  261   0xc2d9b  5      OPC=movzbl_r32_m8     
  cmpl 0x10(%r14), %r12d            #  262   0xc2da0  4      OPC=cmpl_r32_m32      
  jne .L_c2dad                      #  263   0xc2da4  2      OPC=jne_label         
  movl 0x14(%rsp), %esi             #  264   0xc2da6  4      OPC=movl_r32_m32      
  cmpl 0x14(%r14), %esi             #  265   0xc2daa  4      OPC=cmpl_r32_m32      
  je .L_c2f94                       #  266   0xc2dae  6      OPC=je_label_1        
.L_c2dad:                           #        0xc2db4  0      OPC=<label>           
  cmpb $0x4, %dl                    #  267   0xc2db4  3      OPC=cmpb_r8_imm8      
  jne .L_c2f94                      #  268   0xc2db7  6      OPC=jne_label_1       
  movq 0x38(%rsp), %rsi             #  269   0xc2dbd  5      OPC=movq_r64_m64      
  movq 0x58(%rsp), %rbx             #  270   0xc2dc2  5      OPC=movq_r64_m64      
  addq 0xa0(%rsi), %rbx             #  271   0xc2dc7  7      OPC=addq_r64_m64      
  shlq $0x2, %rax                   #  272   0xc2dce  4      OPC=shlq_r64_imm8     
  movq %rax, 0x30(%rsp)             #  273   0xc2dd2  5      OPC=movq_m64_r64      
  movl 0x68(%rsp), %ebp             #  274   0xc2dd7  4      OPC=movl_r32_m32      
.L_c2dd4:                           #        0xc2ddb  0      OPC=<label>           
  movq %rbx, %rdx                   #  275   0xc2ddb  3      OPC=movq_r64_r64      
  cmpl (%rbx), %r12d                #  276   0xc2dde  3      OPC=cmpl_r32_m32      
  jne .L_c2f83                      #  277   0xc2de1  6      OPC=jne_label_1       
  movl 0xc(%rbx), %eax              #  278   0xc2de7  3      OPC=movl_r32_m32      
  subl 0x8(%rbx), %eax              #  279   0xc2dea  3      OPC=subl_r32_m32      
  movl 0x14(%rsp), %ecx             #  280   0xc2ded  4      OPC=movl_r32_m32      
  leal (%rcx,%rax,1), %r13d         #  281   0xc2df1  4      OPC=leal_r32_m16      
  testl %eax, %eax                  #  282   0xc2df5  2      OPC=testl_r32_r32     
  je .L_c2e04                       #  283   0xc2df7  2      OPC=je_label          
  movq 0x18(%r15), %rax             #  284   0xc2df9  4      OPC=movq_r64_m64      
  movq 0x30(%rsp), %rcx             #  285   0xc2dfd  5      OPC=movq_r64_m64      
  movl (%rax,%rcx,1), %eax          #  286   0xc2e02  3      OPC=movl_r32_m32      
  movl %eax, 0x8(%rsp)              #  287   0xc2e05  4      OPC=movl_m32_r32      
  jmpq .L_c2e18                     #  288   0xc2e09  2      OPC=jmpq_label        
.L_c2e04:                           #        0xc2e0b  0      OPC=<label>           
  movq 0x28(%r15), %rax             #  289   0xc2e0b  4      OPC=movq_r64_m64      
  movq 0x20(%rsp), %rcx             #  290   0xc2e0f  5      OPC=movq_r64_m64      
  movq 0x8(%rax,%rcx,1), %rax       #  291   0xc2e14  5      OPC=movq_r64_m64      
  movl (%rax), %eax                 #  292   0xc2e19  2      OPC=movl_r32_m32      
  movl %eax, 0x8(%rsp)              #  293   0xc2e1b  4      OPC=movl_m32_r32      
.L_c2e18:                           #        0xc2e1f  0      OPC=<label>           
  cmpl 0x14(%r14), %r13d            #  294   0xc2e1f  4      OPC=cmpl_r32_m32      
  jg .L_c2f76                       #  295   0xc2e23  6      OPC=jg_label_1        
  movslq %r13d, %rax                #  296   0xc2e29  3      OPC=movslq_r64_r32    
  movq (%r14), %rdx                 #  297   0xc2e2c  3      OPC=movq_r64_m64      
  movq (%rdx,%rax,8), %rdi          #  298   0xc2e2f  4      OPC=movq_r64_m64      
  testq %rdi, %rdi                  #  299   0xc2e33  3      OPC=testq_r64_r64     
  je .L_c2f7b                       #  300   0xc2e36  6      OPC=je_label_1        
  addq $0x8, %rdi                   #  301   0xc2e3c  4      OPC=addq_r64_imm8     
  movl 0x8(%rsp), %esi              #  302   0xc2e40  4      OPC=movl_r32_m32      
  callq .re_node_set_contains       #  303   0xc2e44  5      OPC=callq_label       
  movq %rbx, %rdx                   #  304   0xc2e49  3      OPC=movq_r64_r64      
  testl %eax, %eax                  #  305   0xc2e4c  2      OPC=testl_r32_r32     
  je .L_c2f83                       #  306   0xc2e4e  6      OPC=je_label_1        
  movl %r13d, %r9d                  #  307   0xc2e54  3      OPC=movl_r32_r32      
  movl 0x8(%rsp), %r8d              #  308   0xc2e57  5      OPC=movl_r32_m32      
  movl 0x14(%rsp), %ecx             #  309   0xc2e5c  4      OPC=movl_r32_m32      
  movl %r12d, %edx                  #  310   0xc2e60  3      OPC=movl_r32_r32      
  movq 0x48(%rsp), %rsi             #  311   0xc2e63  5      OPC=movq_r64_m64      
  movq 0x38(%rsp), %rdi             #  312   0xc2e68  5      OPC=movq_r64_m64      
  callq .check_dst_limits           #  313   0xc2e6d  5      OPC=callq_label       
  testl %eax, %eax                  #  314   0xc2e72  2      OPC=testl_r32_r32     
  jne .L_c2f80                      #  315   0xc2e74  6      OPC=jne_label_1       
  cmpq $0x0, 0x70(%rsp)             #  316   0xc2e7a  6      OPC=cmpq_m64_imm8     
  jne .L_c2ec7                      #  317   0xc2e80  2      OPC=jne_label         
  movq (%r14), %rax                 #  318   0xc2e82  3      OPC=movq_r64_m64      
  movq %rax, 0x70(%rsp)             #  319   0xc2e85  5      OPC=movq_m64_r64      
  movq 0x8(%r14), %rax              #  320   0xc2e8a  4      OPC=movq_r64_m64      
  movq %rax, 0x78(%rsp)             #  321   0xc2e8e  5      OPC=movq_m64_r64      
  movq 0x10(%r14), %rax             #  322   0xc2e93  4      OPC=movq_r64_m64      
  movq %rax, 0x80(%rsp)             #  323   0xc2e97  8      OPC=movq_m64_r64      
  movq 0x18(%r14), %rax             #  324   0xc2e9f  4      OPC=movq_r64_m64      
  movq %rax, 0x88(%rsp)             #  325   0xc2ea3  8      OPC=movq_m64_r64      
  movq 0x20(%r14), %rax             #  326   0xc2eab  4      OPC=movq_r64_m64      
  movq %rax, 0x90(%rsp)             #  327   0xc2eaf  8      OPC=movq_m64_r64      
  movq 0x48(%rsp), %rsi             #  328   0xc2eb7  5      OPC=movq_r64_m64      
  movq 0x50(%rsp), %rdi             #  329   0xc2ebc  5      OPC=movq_r64_m64      
  callq .re_node_set_init_copy      #  330   0xc2ec1  5      OPC=callq_label       
  testl %eax, %eax                  #  331   0xc2ec6  2      OPC=testl_r32_r32     
  jne .L_c2fb9                      #  332   0xc2ec8  6      OPC=jne_label_1       
.L_c2ec7:                           #        0xc2ece  0      OPC=<label>           
  movl %r12d, 0x80(%rsp)            #  333   0xc2ece  8      OPC=movl_m32_r32      
  movl 0x14(%rsp), %eax             #  334   0xc2ed6  4      OPC=movl_r32_m32      
  movl %eax, 0x84(%rsp)             #  335   0xc2eda  7      OPC=movl_m32_r32      
  movl %ebp, %esi                   #  336   0xc2ee1  2      OPC=movl_r32_r32      
  movq 0x50(%rsp), %rdi             #  337   0xc2ee3  5      OPC=movq_r64_m64      
  callq .re_node_set_insert         #  338   0xc2ee8  5      OPC=callq_label       
  testl %eax, %eax                  #  339   0xc2eed  2      OPC=testl_r32_r32     
  js .L_c2fb2                       #  340   0xc2eef  6      OPC=js_label_1        
  movq 0x70(%rsp), %rax             #  341   0xc2ef5  5      OPC=movq_r64_m64      
  movq 0x40(%rsp), %rdi             #  342   0xc2efa  5      OPC=movq_r64_m64      
  movq (%rax,%rdi,1), %rbx          #  343   0xc2eff  4      OPC=movq_r64_m64      
  movq 0x60(%rsp), %rsi             #  344   0xc2f03  5      OPC=movq_r64_m64      
  movq 0x38(%rsp), %rdi             #  345   0xc2f08  5      OPC=movq_r64_m64      
  callq .sift_states_backward       #  346   0xc2f0d  5      OPC=callq_label       
  testl %eax, %eax                  #  347   0xc2f12  2      OPC=testl_r32_r32     
  jne .L_c2fbd                      #  348   0xc2f14  6      OPC=jne_label_1       
  movq 0x8(%r14), %rsi              #  349   0xc2f1a  4      OPC=movq_r64_m64      
  testq %rsi, %rsi                  #  350   0xc2f1e  3      OPC=testq_r64_r64     
  je .L_c2f35                       #  351   0xc2f21  2      OPC=je_label          
  movl 0x6c(%rsp), %ecx             #  352   0xc2f23  4      OPC=movl_r32_m32      
  movq 0x70(%rsp), %rdx             #  353   0xc2f27  5      OPC=movq_r64_m64      
  movq %r15, %rdi                   #  354   0xc2f2c  3      OPC=movq_r64_r64      
  callq .merge_state_array          #  355   0xc2f2f  5      OPC=callq_label       
  testl %eax, %eax                  #  356   0xc2f34  2      OPC=testl_r32_r32     
  jne .L_c2fc1                      #  357   0xc2f36  6      OPC=jne_label_1       
.L_c2f35:                           #        0xc2f3c  0      OPC=<label>           
  movq 0x70(%rsp), %rax             #  358   0xc2f3c  5      OPC=movq_r64_m64      
  movq 0x40(%rsp), %rsi             #  359   0xc2f41  5      OPC=movq_r64_m64      
  movq %rbx, (%rax,%rsi,1)          #  360   0xc2f46  4      OPC=movq_m64_r64      
  movl %ebp, %esi                   #  361   0xc2f4a  2      OPC=movl_r32_r32      
  movq 0x50(%rsp), %rbx             #  362   0xc2f4c  5      OPC=movq_r64_m64      
  movq %rbx, %rdi                   #  363   0xc2f51  3      OPC=movq_r64_r64      
  callq .re_node_set_contains       #  364   0xc2f54  5      OPC=callq_label       
  leal -0x1(%rax), %esi             #  365   0xc2f59  3      OPC=leal_r32_m16      
  movq %rbx, %rdi                   #  366   0xc2f5c  3      OPC=movq_r64_r64      
  callq .re_node_set_remove_at      #  367   0xc2f5f  5      OPC=callq_label       
  movslq %ebp, %rax                 #  368   0xc2f64  3      OPC=movslq_r64_r32    
  leaq (%rax,%rax,4), %rdx          #  369   0xc2f67  4      OPC=leaq_r64_m16      
  movq 0x38(%rsp), %rax             #  370   0xc2f6b  5      OPC=movq_r64_m64      
  movq 0xa0(%rax), %rax             #  371   0xc2f70  7      OPC=movq_r64_m64      
  leaq (%rax,%rdx,4), %rdx          #  372   0xc2f77  4      OPC=leaq_r64_m16      
  jmpq .L_c2f83                     #  373   0xc2f7b  2      OPC=jmpq_label        
.L_c2f76:                           #        0xc2f7d  0      OPC=<label>           
  movq %rbx, %rdx                   #  374   0xc2f7d  3      OPC=movq_r64_r64      
  jmpq .L_c2f83                     #  375   0xc2f80  2      OPC=jmpq_label        
.L_c2f7b:                           #        0xc2f82  0      OPC=<label>           
  movq %rbx, %rdx                   #  376   0xc2f82  3      OPC=movq_r64_r64      
  jmpq .L_c2f83                     #  377   0xc2f85  2      OPC=jmpq_label        
.L_c2f80:                           #        0xc2f87  0      OPC=<label>           
  movq %rbx, %rdx                   #  378   0xc2f87  3      OPC=movq_r64_r64      
.L_c2f83:                           #        0xc2f8a  0      OPC=<label>           
  addl $0x1, %ebp                   #  379   0xc2f8a  3      OPC=addl_r32_imm8     
  leaq 0x14(%rdx), %rbx             #  380   0xc2f8d  4      OPC=leaq_r64_m16      
  cmpb $0x0, 0x10(%rdx)             #  381   0xc2f91  4      OPC=cmpb_m8_imm8      
  jne .L_c2dd4                      #  382   0xc2f95  6      OPC=jne_label_1       
.L_c2f94:                           #        0xc2f9b  0      OPC=<label>           
  addl $0x1, 0x18(%rsp)             #  383   0xc2f9b  5      OPC=addl_m32_imm8     
  movl 0x18(%rsp), %eax             #  384   0xc2fa0  4      OPC=movl_r32_m32      
  movq 0x28(%rsp), %rdi             #  385   0xc2fa4  5      OPC=movq_r64_m64      
  cmpl 0x4(%rdi), %eax              #  386   0xc2fa9  3      OPC=cmpl_r32_m32      
  jl .L_c2d70                       #  387   0xc2fac  6      OPC=jl_label_1        
  movl $0x0, %ebx                   #  388   0xc2fb2  5      OPC=movl_r32_imm32    
  jmpq .L_c2fc3                     #  389   0xc2fb7  2      OPC=jmpq_label        
.L_c2fb2:                           #        0xc2fb9  0      OPC=<label>           
  movl $0xc, %ebx                   #  390   0xc2fb9  5      OPC=movl_r32_imm32    
  jmpq .L_c2fc3                     #  391   0xc2fbe  2      OPC=jmpq_label        
.L_c2fb9:                           #        0xc2fc0  0      OPC=<label>           
  movl %eax, %ebx                   #  392   0xc2fc0  2      OPC=movl_r32_r32      
  jmpq .L_c2fc3                     #  393   0xc2fc2  2      OPC=jmpq_label        
.L_c2fbd:                           #        0xc2fc4  0      OPC=<label>           
  movl %eax, %ebx                   #  394   0xc2fc4  2      OPC=movl_r32_r32      
  jmpq .L_c2fc3                     #  395   0xc2fc6  2      OPC=jmpq_label        
.L_c2fc1:                           #        0xc2fc8  0      OPC=<label>           
  movl %eax, %ebx                   #  396   0xc2fc8  2      OPC=movl_r32_r32      
.L_c2fc3:                           #        0xc2fca  0      OPC=<label>           
  movl %ebx, %eax                   #  397   0xc2fca  2      OPC=movl_r32_r32      
  cmpq $0x0, 0x70(%rsp)             #  398   0xc2fcc  6      OPC=cmpq_m64_imm8     
  je .L_c3083                       #  399   0xc2fd2  6      OPC=je_label_1        
  movq 0x90(%rsp), %rdi             #  400   0xc2fd8  8      OPC=movq_r64_m64      
  callq .L_1f8d0                    #  401   0xc2fe0  5      OPC=callq_label       
  movl %ebx, %eax                   #  402   0xc2fe5  2      OPC=movl_r32_r32      
  jmpq .L_c3083                     #  403   0xc2fe7  5      OPC=jmpq_label_1      
.L_c2fe5:                           #        0xc2fec  0      OPC=<label>           
  movl $0x0, %eax                   #  404   0xc2fec  5      OPC=movl_r32_imm32    
  jmpq .L_c3083                     #  405   0xc2ff1  5      OPC=jmpq_label_1      
.L_c2fef:                           #        0xc2ff6  0      OPC=<label>           
  movl $0x0, %eax                   #  406   0xc2ff6  5      OPC=movl_r32_imm32    
  jmpq .L_c3083                     #  407   0xc2ffb  5      OPC=jmpq_label_1      
.L_c2ff9:                           #        0xc3000  0      OPC=<label>           
  movl $0x0, %eax                   #  408   0xc3000  5      OPC=movl_r32_imm32    
  jmpq .L_c3083                     #  409   0xc3005  5      OPC=jmpq_label_1      
.L_c3003:                           #        0xc300a  0      OPC=<label>           
  movl $0xc, %eax                   #  410   0xc300a  5      OPC=movl_r32_imm32    
  jmpq .L_c3083                     #  411   0xc300f  2      OPC=jmpq_label        
.L_c300a:                           #        0xc3011  0      OPC=<label>           
  movl $0x0, 0x9c(%rsp)             #  412   0xc3011  11     OPC=movl_m32_imm32    
  movq 0x40(%rsp), %rbp             #  413   0xc301c  5      OPC=movq_r64_m64      
  addq (%r14), %rbp                 #  414   0xc3021  3      OPC=addq_r64_m64      
  leaq 0x9c(%rsp), %rdi             #  415   0xc3024  8      OPC=leaq_r64_m16      
  movq %rbx, %rdx                   #  416   0xc302c  3      OPC=movq_r64_r64      
  movq %r15, %rsi                   #  417   0xc302f  3      OPC=movq_r64_r64      
  callq .re_acquire_state           #  418   0xc3032  5      OPC=callq_label       
  movq %rax, (%rbp)                 #  419   0xc3037  4      OPC=movq_m64_r64      
  movl 0x9c(%rsp), %eax             #  420   0xc303b  7      OPC=movl_r32_m32      
  testl %eax, %eax                  #  421   0xc3042  2      OPC=testl_r32_r32     
  je .L_c2cd0                       #  422   0xc3044  6      OPC=je_label_1        
  jmpq .L_c3083                     #  423   0xc304a  2      OPC=jmpq_label        
.L_c3045:                           #        0xc304c  0      OPC=<label>           
  movq 0x40(%rsp), %rbp             #  424   0xc304c  5      OPC=movq_r64_m64      
  addq (%r14), %rbp                 #  425   0xc3051  3      OPC=addq_r64_m64      
  leaq 0x9c(%rsp), %rdi             #  426   0xc3054  8      OPC=leaq_r64_m16      
  movq %rbx, %rdx                   #  427   0xc305c  3      OPC=movq_r64_r64      
  movq %r15, %rsi                   #  428   0xc305f  3      OPC=movq_r64_r64      
  callq .re_acquire_state           #  429   0xc3062  5      OPC=callq_label       
  movq %rax, (%rbp)                 #  430   0xc3067  4      OPC=movq_m64_r64      
  movl 0x9c(%rsp), %eax             #  431   0xc306b  7      OPC=movl_r32_m32      
  testl %eax, %eax                  #  432   0xc3072  2      OPC=testl_r32_r32     
  je .L_c2cd0                       #  433   0xc3074  6      OPC=je_label_1        
  jmpq .L_c3083                     #  434   0xc307a  2      OPC=jmpq_label        
.L_c3075:                           #        0xc307c  0      OPC=<label>           
  testl %r10d, %r10d                #  435   0xc307c  3      OPC=testl_r32_r32     
  jns .L_c2bbe                      #  436   0xc307f  6      OPC=jns_label_1       
  jmpq .L_c2c83                     #  437   0xc3085  5      OPC=jmpq_label_1      
.L_c3083:                           #        0xc308a  0      OPC=<label>           
  addq $0xa8, %rsp                  #  438   0xc308a  7      OPC=addq_r64_imm32    
  popq %rbx                         #  439   0xc3091  1      OPC=popq_r64_1        
  popq %rbp                         #  440   0xc3092  1      OPC=popq_r64_1        
  popq %r12                         #  441   0xc3093  2      OPC=popq_r64_1        
  popq %r13                         #  442   0xc3095  2      OPC=popq_r64_1        
  popq %r14                         #  443   0xc3097  2      OPC=popq_r64_1        
  popq %r15                         #  444   0xc3099  2      OPC=popq_r64_1        
  retq                              #  445   0xc309b  1      OPC=retq              
                                                                                   
.size update_cur_sifted_state, .-update_cur_sifted_state

