  .text
  .globl duplicate_node_closure
  .type duplicate_node_closure, @function

#! file-offset 0xbad50
#! rip-offset  0xbad50
#! capacity    670 bytes

# Text                           #  Line  RIP      Bytes  Opcode              
.duplicate_node_closure:         #        0xbad50  0      OPC=<label>         
  pushq %r15                     #  1     0xbad50  2      OPC=pushq_r64_1     
  pushq %r14                     #  2     0xbad52  2      OPC=pushq_r64_1     
  pushq %r13                     #  3     0xbad54  2      OPC=pushq_r64_1     
  pushq %r12                     #  4     0xbad56  2      OPC=pushq_r64_1     
  pushq %rbp                     #  5     0xbad58  1      OPC=pushq_r64_1     
  pushq %rbx                     #  6     0xbad59  1      OPC=pushq_r64_1     
  subq $0x18, %rsp               #  7     0xbad5a  4      OPC=subq_r64_imm8   
  movq %rdi, %rbx                #  8     0xbad5e  3      OPC=movq_r64_r64    
  movl %esi, %r14d               #  9     0xbad61  3      OPC=movl_r32_r32    
  movl %edx, %r12d               #  10    0xbad64  3      OPC=movl_r32_r32    
  movl %ecx, 0x4(%rsp)           #  11    0xbad67  4      OPC=movl_m32_r32    
  movl %r8d, %ebp                #  12    0xbad6b  3      OPC=movl_r32_r32    
.L_bad6e:                        #        0xbad6e  0      OPC=<label>         
  movslq %r14d, %r15             #  13    0xbad6e  3      OPC=movslq_r64_r32  
  movq %r15, %r13                #  14    0xbad71  3      OPC=movq_r64_r64    
  shlq $0x4, %r13                #  15    0xbad74  4      OPC=shlq_r64_imm8   
  movq (%rbx), %rax              #  16    0xbad78  3      OPC=movq_r64_m64    
  cmpb $0x4, 0x8(%rax,%r13,1)    #  17    0xbad7b  6      OPC=cmpb_m8_imm8    
  jne .L_bade8                   #  18    0xbad81  2      OPC=jne_label       
  movq 0x18(%rbx), %rax          #  19    0xbad83  4      OPC=movq_r64_m64    
  movl (%rax,%r15,4), %r14d      #  20    0xbad87  4      OPC=movl_r32_m32    
  movslq %r12d, %r13             #  21    0xbad8b  3      OPC=movslq_r64_r32  
  movq %r13, %rax                #  22    0xbad8e  3      OPC=movq_r64_r64    
  shlq $0x4, %rax                #  23    0xbad91  4      OPC=shlq_r64_imm8   
  movq %rax, %rcx                #  24    0xbad95  3      OPC=movq_r64_r64    
  movq 0x28(%rbx), %rax          #  25    0xbad98  4      OPC=movq_r64_m64    
  movq %rcx, 0x8(%rsp)           #  26    0xbad9c  5      OPC=movq_m64_r64    
  movl $0x0, 0x4(%rax,%rcx,1)    #  27    0xbada1  8      OPC=movl_m32_imm32  
  movl %ebp, %edx                #  28    0xbada9  2      OPC=movl_r32_r32    
  movl %r14d, %esi               #  29    0xbadab  3      OPC=movl_r32_r32    
  movq %rbx, %rdi                #  30    0xbadae  3      OPC=movq_r64_r64    
  callq .duplicate_node          #  31    0xbadb1  5      OPC=callq_label     
  movl %eax, %r12d               #  32    0xbadb6  3      OPC=movl_r32_r32    
  cmpl $0xffffffff, %eax         #  33    0xbadb9  6      OPC=cmpl_r32_imm32  
  nop                            #  34    0xbadbf  1      OPC=nop             
  nop                            #  35    0xbadc0  1      OPC=nop             
  nop                            #  36    0xbadc1  1      OPC=nop             
  je .L_bafa9                    #  37    0xbadc2  6      OPC=je_label_1      
  movq 0x18(%rbx), %rax          #  38    0xbadc8  4      OPC=movq_r64_m64    
  movl (%rax,%r15,4), %edx       #  39    0xbadcc  4      OPC=movl_r32_m32    
  movl %edx, (%rax,%r13,4)       #  40    0xbadd0  4      OPC=movl_m32_r32    
  movq 0x8(%rsp), %rdi           #  41    0xbadd4  5      OPC=movq_r64_m64    
  addq 0x28(%rbx), %rdi          #  42    0xbadd9  4      OPC=addq_r64_m64    
  movl %r12d, %esi               #  43    0xbaddd  3      OPC=movl_r32_r32    
  callq .re_node_set_insert      #  44    0xbade0  5      OPC=callq_label     
  testl %eax, %eax               #  45    0xbade5  2      OPC=testl_r32_r32   
  jns .L_bad6e                   #  46    0xbade7  2      OPC=jns_label       
  jmpq .L_bafb0                  #  47    0xbade9  5      OPC=jmpq_label_1    
.L_bade8:                        #        0xbadee  0      OPC=<label>         
  movq 0x28(%rbx), %rax          #  48    0xbadee  4      OPC=movq_r64_m64    
  leaq (%rax,%r13,1), %rdx       #  49    0xbadf2  4      OPC=leaq_r64_m16    
  movl 0x4(%rdx), %ecx           #  50    0xbadf6  3      OPC=movl_r32_m32    
  testl %ecx, %ecx               #  51    0xbadf9  2      OPC=testl_r32_r32   
  jne .L_bae10                   #  52    0xbadfb  2      OPC=jne_label       
  movq 0x18(%rbx), %rax          #  53    0xbadfd  4      OPC=movq_r64_m64    
  movl (%rax,%r15,4), %edx       #  54    0xbae01  4      OPC=movl_r32_m32    
  movslq %r12d, %r12             #  55    0xbae05  3      OPC=movslq_r64_r32  
  movl %edx, (%rax,%r12,4)       #  56    0xbae08  4      OPC=movl_m32_r32    
  movl $0x0, %eax                #  57    0xbae0c  5      OPC=movl_r32_imm32  
  jmpq .L_bafdf                  #  58    0xbae11  5      OPC=jmpq_label_1    
.L_bae10:                        #        0xbae16  0      OPC=<label>         
  cmpl $0x1, %ecx                #  59    0xbae16  3      OPC=cmpl_r32_imm8   
  jne .L_bae9c                   #  60    0xbae19  6      OPC=jne_label_1     
  movq 0x8(%rdx), %rdx           #  61    0xbae1f  4      OPC=movq_r64_m64    
  movl (%rdx), %ecx              #  62    0xbae23  2      OPC=movl_r32_m32    
  movslq %r12d, %r15             #  63    0xbae25  3      OPC=movslq_r64_r32  
  shlq $0x4, %r15                #  64    0xbae28  4      OPC=shlq_r64_imm8   
  movl $0x0, 0x4(%rax,%r15,1)    #  65    0xbae2c  9      OPC=movl_m32_imm32  
  cmpl %r14d, %r12d              #  66    0xbae35  3      OPC=cmpl_r32_r32    
  je .L_bae54                    #  67    0xbae38  2      OPC=je_label        
  cmpl 0x4(%rsp), %r14d          #  68    0xbae3a  5      OPC=cmpl_r32_m32    
  jne .L_bae54                   #  69    0xbae3f  2      OPC=jne_label       
  movq %r15, %rdi                #  70    0xbae41  3      OPC=movq_r64_r64    
  addq 0x28(%rbx), %rdi          #  71    0xbae44  4      OPC=addq_r64_m64    
  movl %ecx, %esi                #  72    0xbae48  2      OPC=movl_r32_r32    
  callq .re_node_set_insert      #  73    0xbae4a  5      OPC=callq_label     
  sarl $0x1f, %eax               #  74    0xbae4f  3      OPC=sarl_r32_imm8   
  andl $0xc, %eax                #  75    0xbae52  3      OPC=andl_r32_imm8   
  jmpq .L_bafdf                  #  76    0xbae55  5      OPC=jmpq_label_1    
.L_bae54:                        #        0xbae5a  0      OPC=<label>         
  movq (%rbx), %rax              #  77    0xbae5a  3      OPC=movq_r64_m64    
  movl 0x8(%rax,%r13,1), %eax    #  78    0xbae5d  5      OPC=movl_r32_m32    
  shrl $0x8, %eax                #  79    0xbae62  3      OPC=shrl_r32_imm8   
  andl $0x3ff, %eax              #  80    0xbae65  5      OPC=andl_eax_imm32  
  orl %eax, %ebp                 #  81    0xbae6a  2      OPC=orl_r32_r32     
  movl %ebp, %edx                #  82    0xbae6c  2      OPC=movl_r32_r32    
  movl %ecx, %r14d               #  83    0xbae6e  3      OPC=movl_r32_r32    
  movl %ecx, %esi                #  84    0xbae71  2      OPC=movl_r32_r32    
  movq %rbx, %rdi                #  85    0xbae73  3      OPC=movq_r64_r64    
  callq .duplicate_node          #  86    0xbae76  5      OPC=callq_label     
  movl %eax, %r12d               #  87    0xbae7b  3      OPC=movl_r32_r32    
  cmpl $0xffffffff, %eax         #  88    0xbae7e  6      OPC=cmpl_r32_imm32  
  nop                            #  89    0xbae84  1      OPC=nop             
  nop                            #  90    0xbae85  1      OPC=nop             
  nop                            #  91    0xbae86  1      OPC=nop             
  je .L_bafb7                    #  92    0xbae87  6      OPC=je_label_1      
  movq %r15, %rdi                #  93    0xbae8d  3      OPC=movq_r64_r64    
  addq 0x28(%rbx), %rdi          #  94    0xbae90  4      OPC=addq_r64_m64    
  movl %eax, %esi                #  95    0xbae94  2      OPC=movl_r32_r32    
  callq .re_node_set_insert      #  96    0xbae96  5      OPC=callq_label     
  testl %eax, %eax               #  97    0xbae9b  2      OPC=testl_r32_r32   
  js .L_bafbe                    #  98    0xbae9d  6      OPC=js_label_1      
  jmpq .L_bad6e                  #  99    0xbaea3  5      OPC=jmpq_label_1    
.L_bae9c:                        #        0xbaea8  0      OPC=<label>         
  movq 0x8(%rdx), %rdx           #  100   0xbaea8  4      OPC=movq_r64_m64    
  movl (%rdx), %r14d             #  101   0xbaeac  3      OPC=movl_r32_m32    
  movslq %r12d, %r15             #  102   0xbaeaf  3      OPC=movslq_r64_r32  
  shlq $0x4, %r15                #  103   0xbaeb2  4      OPC=shlq_r64_imm8   
  movl $0x0, 0x4(%rax,%r15,1)    #  104   0xbaeb6  9      OPC=movl_m32_imm32  
  movl 0x10(%rbx), %eax          #  105   0xbaebf  3      OPC=movl_r32_m32    
  leal -0x1(%rax), %esi          #  106   0xbaec2  3      OPC=leal_r32_m16    
  movq (%rbx), %rcx              #  107   0xbaec5  3      OPC=movq_r64_m64    
  movslq %esi, %rdx              #  108   0xbaec8  3      OPC=movslq_r64_r32  
  movq %rdx, %rax                #  109   0xbaecb  3      OPC=movq_r64_r64    
  shlq $0x4, %rax                #  110   0xbaece  4      OPC=shlq_r64_imm8   
  addq %rcx, %rax                #  111   0xbaed2  3      OPC=addq_r64_r64    
  testl %esi, %esi               #  112   0xbaed5  2      OPC=testl_r32_r32   
  jle .L_baf0d                   #  113   0xbaed7  2      OPC=jle_label       
  testb $0x4, 0xa(%rax)          #  114   0xbaed9  4      OPC=testb_m8_imm8   
  je .L_baf0d                    #  115   0xbaedd  2      OPC=je_label        
  movq 0x20(%rbx), %rdi          #  116   0xbaedf  4      OPC=movq_r64_m64    
.L_baed7:                        #        0xbaee3  0      OPC=<label>         
  cmpl (%rdi,%rdx,4), %r14d      #  117   0xbaee3  4      OPC=cmpl_r32_m32    
  jne .L_baef3                   #  118   0xbaee7  2      OPC=jne_label       
  movl 0x8(%rax), %eax           #  119   0xbaee9  3      OPC=movl_r32_m32    
  shrl $0x8, %eax                #  120   0xbaeec  3      OPC=shrl_r32_imm8   
  andl $0x3ff, %eax              #  121   0xbaeef  5      OPC=andl_eax_imm32  
  cmpl %eax, %ebp                #  122   0xbaef4  2      OPC=cmpl_r32_r32    
  jne .L_baef3                   #  123   0xbaef6  2      OPC=jne_label       
  cmpl $0xffffffff, %esi         #  124   0xbaef8  6      OPC=cmpl_r32_imm32  
  nop                            #  125   0xbaefe  1      OPC=nop             
  nop                            #  126   0xbaeff  1      OPC=nop             
  nop                            #  127   0xbaf00  1      OPC=nop             
  jne .L_baf5a                   #  128   0xbaf01  2      OPC=jne_label       
  jmpq .L_baf0d                  #  129   0xbaf03  2      OPC=jmpq_label      
.L_baef3:                        #        0xbaf05  0      OPC=<label>         
  subl $0x1, %esi                #  130   0xbaf05  3      OPC=subl_r32_imm8   
  movslq %esi, %rdx              #  131   0xbaf08  3      OPC=movslq_r64_r32  
  movq %rdx, %rax                #  132   0xbaf0b  3      OPC=movq_r64_r64    
  shlq $0x4, %rax                #  133   0xbaf0e  4      OPC=shlq_r64_imm8   
  addq %rcx, %rax                #  134   0xbaf12  3      OPC=addq_r64_r64    
  testl %esi, %esi               #  135   0xbaf15  2      OPC=testl_r32_r32   
  jle .L_baf0d                   #  136   0xbaf17  2      OPC=jle_label       
  testb $0x4, 0xa(%rax)          #  137   0xbaf19  4      OPC=testb_m8_imm8   
  jne .L_baed7                   #  138   0xbaf1d  2      OPC=jne_label       
.L_baf0d:                        #        0xbaf1f  0      OPC=<label>         
  movl %ebp, %edx                #  139   0xbaf1f  2      OPC=movl_r32_r32    
  movl %r14d, %esi               #  140   0xbaf21  3      OPC=movl_r32_r32    
  movq %rbx, %rdi                #  141   0xbaf24  3      OPC=movq_r64_r64    
  callq .duplicate_node          #  142   0xbaf27  5      OPC=callq_label     
  movl %eax, %r12d               #  143   0xbaf2c  3      OPC=movl_r32_r32    
  cmpl $0xffffffff, %eax         #  144   0xbaf2f  6      OPC=cmpl_r32_imm32  
  nop                            #  145   0xbaf35  1      OPC=nop             
  nop                            #  146   0xbaf36  1      OPC=nop             
  nop                            #  147   0xbaf37  1      OPC=nop             
  je .L_bafc5                    #  148   0xbaf38  6      OPC=je_label_1      
  movq %r15, %rdi                #  149   0xbaf3e  3      OPC=movq_r64_r64    
  addq 0x28(%rbx), %rdi          #  150   0xbaf41  4      OPC=addq_r64_m64    
  movl %eax, %esi                #  151   0xbaf45  2      OPC=movl_r32_r32    
  callq .re_node_set_insert      #  152   0xbaf47  5      OPC=callq_label     
  testl %eax, %eax               #  153   0xbaf4c  2      OPC=testl_r32_r32   
  js .L_bafcc                    #  154   0xbaf4e  6      OPC=js_label_1      
  movl %ebp, %r8d                #  155   0xbaf54  3      OPC=movl_r32_r32    
  movl 0x4(%rsp), %ecx           #  156   0xbaf57  4      OPC=movl_r32_m32    
  movl %r12d, %edx               #  157   0xbaf5b  3      OPC=movl_r32_r32    
  movl %r14d, %esi               #  158   0xbaf5e  3      OPC=movl_r32_r32    
  movq %rbx, %rdi                #  159   0xbaf61  3      OPC=movq_r64_r64    
  callq .duplicate_node_closure  #  160   0xbaf64  5      OPC=callq_label     
  testl %eax, %eax               #  161   0xbaf69  2      OPC=testl_r32_r32   
  je .L_baf6a                    #  162   0xbaf6b  2      OPC=je_label        
  jmpq .L_bafdf                  #  163   0xbaf6d  5      OPC=jmpq_label_1    
.L_baf5a:                        #        0xbaf72  0      OPC=<label>         
  movq %r15, %rdi                #  164   0xbaf72  3      OPC=movq_r64_r64    
  addq 0x28(%rbx), %rdi          #  165   0xbaf75  4      OPC=addq_r64_m64    
  callq .re_node_set_insert      #  166   0xbaf79  5      OPC=callq_label     
  testl %eax, %eax               #  167   0xbaf7e  2      OPC=testl_r32_r32   
  js .L_bafd3                    #  168   0xbaf80  2      OPC=js_label        
.L_baf6a:                        #        0xbaf82  0      OPC=<label>         
  movq 0x28(%rbx), %rax          #  169   0xbaf82  4      OPC=movq_r64_m64    
  movq 0x8(%rax,%r13,1), %rax    #  170   0xbaf86  5      OPC=movq_r64_m64    
  movl 0x4(%rax), %r14d          #  171   0xbaf8b  4      OPC=movl_r32_m32    
  movl %ebp, %edx                #  172   0xbaf8f  2      OPC=movl_r32_r32    
  movl %r14d, %esi               #  173   0xbaf91  3      OPC=movl_r32_r32    
  movq %rbx, %rdi                #  174   0xbaf94  3      OPC=movq_r64_r64    
  callq .duplicate_node          #  175   0xbaf97  5      OPC=callq_label     
  movl %eax, %r12d               #  176   0xbaf9c  3      OPC=movl_r32_r32    
  cmpl $0xffffffff, %eax         #  177   0xbaf9f  6      OPC=cmpl_r32_imm32  
  nop                            #  178   0xbafa5  1      OPC=nop             
  nop                            #  179   0xbafa6  1      OPC=nop             
  nop                            #  180   0xbafa7  1      OPC=nop             
  je .L_bafda                    #  181   0xbafa8  2      OPC=je_label        
  movq %r15, %rdi                #  182   0xbafaa  3      OPC=movq_r64_r64    
  addq 0x28(%rbx), %rdi          #  183   0xbafad  4      OPC=addq_r64_m64    
  movl %eax, %esi                #  184   0xbafb1  2      OPC=movl_r32_r32    
  callq .re_node_set_insert      #  185   0xbafb3  5      OPC=callq_label     
  testl %eax, %eax               #  186   0xbafb8  2      OPC=testl_r32_r32   
  jns .L_bad6e                   #  187   0xbafba  6      OPC=jns_label_1     
  movl $0xc, %eax                #  188   0xbafc0  5      OPC=movl_r32_imm32  
  jmpq .L_bafdf                  #  189   0xbafc5  2      OPC=jmpq_label      
.L_bafa9:                        #        0xbafc7  0      OPC=<label>         
  movl $0xc, %eax                #  190   0xbafc7  5      OPC=movl_r32_imm32  
  jmpq .L_bafdf                  #  191   0xbafcc  2      OPC=jmpq_label      
.L_bafb0:                        #        0xbafce  0      OPC=<label>         
  movl $0xc, %eax                #  192   0xbafce  5      OPC=movl_r32_imm32  
  jmpq .L_bafdf                  #  193   0xbafd3  2      OPC=jmpq_label      
.L_bafb7:                        #        0xbafd5  0      OPC=<label>         
  movl $0xc, %eax                #  194   0xbafd5  5      OPC=movl_r32_imm32  
  jmpq .L_bafdf                  #  195   0xbafda  2      OPC=jmpq_label      
.L_bafbe:                        #        0xbafdc  0      OPC=<label>         
  movl $0xc, %eax                #  196   0xbafdc  5      OPC=movl_r32_imm32  
  jmpq .L_bafdf                  #  197   0xbafe1  2      OPC=jmpq_label      
.L_bafc5:                        #        0xbafe3  0      OPC=<label>         
  movl $0xc, %eax                #  198   0xbafe3  5      OPC=movl_r32_imm32  
  jmpq .L_bafdf                  #  199   0xbafe8  2      OPC=jmpq_label      
.L_bafcc:                        #        0xbafea  0      OPC=<label>         
  movl $0xc, %eax                #  200   0xbafea  5      OPC=movl_r32_imm32  
  jmpq .L_bafdf                  #  201   0xbafef  2      OPC=jmpq_label      
.L_bafd3:                        #        0xbaff1  0      OPC=<label>         
  movl $0xc, %eax                #  202   0xbaff1  5      OPC=movl_r32_imm32  
  jmpq .L_bafdf                  #  203   0xbaff6  2      OPC=jmpq_label      
.L_bafda:                        #        0xbaff8  0      OPC=<label>         
  movl $0xc, %eax                #  204   0xbaff8  5      OPC=movl_r32_imm32  
.L_bafdf:                        #        0xbaffd  0      OPC=<label>         
  addq $0x18, %rsp               #  205   0xbaffd  4      OPC=addq_r64_imm8   
  popq %rbx                      #  206   0xbb001  1      OPC=popq_r64_1      
  popq %rbp                      #  207   0xbb002  1      OPC=popq_r64_1      
  popq %r12                      #  208   0xbb003  2      OPC=popq_r64_1      
  popq %r13                      #  209   0xbb005  2      OPC=popq_r64_1      
  popq %r14                      #  210   0xbb007  2      OPC=popq_r64_1      
  popq %r15                      #  211   0xbb009  2      OPC=popq_r64_1      
  retq                           #  212   0xbb00b  1      OPC=retq            
                                                                              
.size duplicate_node_closure, .-duplicate_node_closure

