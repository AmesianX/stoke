  .text
  .globl transit_state_bkref
  .type transit_state_bkref, @function

#! file-offset 0xc4590
#! rip-offset  0xc4590
#! capacity    1797 bytes

# Text                              #  Line  RIP      Bytes  Opcode               
.transit_state_bkref:               #        0xc4590  0      OPC=<label>          
  pushq %r15                        #  1     0xc4590  2      OPC=pushq_r64_1      
  pushq %r14                        #  2     0xc4592  2      OPC=pushq_r64_1      
  pushq %r13                        #  3     0xc4594  2      OPC=pushq_r64_1      
  pushq %r12                        #  4     0xc4596  2      OPC=pushq_r64_1      
  pushq %rbp                        #  5     0xc4598  1      OPC=pushq_r64_1      
  pushq %rbx                        #  6     0xc4599  1      OPC=pushq_r64_1      
  subq $0x98, %rsp                  #  7     0xc459a  7      OPC=subq_r64_imm32   
  movq 0x70(%rdi), %rax             #  8     0xc45a1  4      OPC=movq_r64_m64     
  movq %rax, 0x30(%rsp)             #  9     0xc45a5  5      OPC=movq_m64_r64     
  movl 0x38(%rdi), %eax             #  10    0xc45aa  3      OPC=movl_r32_m32     
  movl %eax, 0x14(%rsp)             #  11    0xc45ad  4      OPC=movl_m32_r32     
  cmpl $0x0, 0x4(%rsi)              #  12    0xc45b1  4      OPC=cmpl_m32_imm8    
  jle .L_c4c3c                      #  13    0xc45b5  6      OPC=jle_label_1      
  movq %rsi, 0x28(%rsp)             #  14    0xc45bb  5      OPC=movq_m64_r64     
  movq %rdi, %r15                   #  15    0xc45c0  3      OPC=movq_r64_r64     
  cltq                              #  16    0xc45c3  2      OPC=cltq             
  shlq $0x3, %rax                   #  17    0xc45c5  4      OPC=shlq_r64_imm8    
  movq %rax, 0x58(%rsp)             #  18    0xc45c9  5      OPC=movq_m64_r64     
  movl $0x0, 0x18(%rsp)             #  19    0xc45ce  8      OPC=movl_m32_imm32   
  leaq 0x70(%rsp), %rax             #  20    0xc45d6  5      OPC=leaq_r64_m16     
  movq %rax, 0x50(%rsp)             #  21    0xc45db  5      OPC=movq_m64_r64     
  leaq 0x8c(%rsp), %rax             #  22    0xc45e0  8      OPC=leaq_r64_m16     
  movq %rax, 0x60(%rsp)             #  23    0xc45e8  5      OPC=movq_m64_r64     
.L_c45ed:                           #        0xc45ed  0      OPC=<label>          
  movslq 0x18(%rsp), %rax           #  24    0xc45ed  5      OPC=movslq_r64_m32   
  movq 0x28(%rsp), %rdi             #  25    0xc45f2  5      OPC=movq_r64_m64     
  movq 0x8(%rdi), %rdx              #  26    0xc45f7  4      OPC=movq_r64_m64     
  movl (%rdx,%rax,4), %eax          #  27    0xc45fb  3      OPC=movl_r32_m32     
  movl %eax, 0x1c(%rsp)             #  28    0xc45fe  4      OPC=movl_m32_r32     
  cltq                              #  29    0xc4602  2      OPC=cltq             
  movq %rax, 0x48(%rsp)             #  30    0xc4604  5      OPC=movq_m64_r64     
  shlq $0x4, %rax                   #  31    0xc4609  4      OPC=shlq_r64_imm8    
  movq %rax, 0x40(%rsp)             #  32    0xc460d  5      OPC=movq_m64_r64     
  movq 0x30(%rsp), %rdi             #  33    0xc4612  5      OPC=movq_r64_m64     
  movq %rax, %rbx                   #  34    0xc4617  3      OPC=movq_r64_r64     
  addq (%rdi), %rbx                 #  35    0xc461a  3      OPC=addq_r64_m64     
  cmpb $0x4, 0x8(%rbx)              #  36    0xc461d  4      OPC=cmpb_m8_imm8     
  jne .L_c4c25                      #  37    0xc4621  6      OPC=jne_label_1      
  testl $0x3ff00, 0x8(%rbx)         #  38    0xc4627  7      OPC=testl_m32_imm32  
  je .L_c4686                       #  39    0xc462e  2      OPC=je_label         
  movl 0x78(%r15), %edx             #  40    0xc4630  4      OPC=movl_r32_m32     
  movl 0x14(%rsp), %esi             #  41    0xc4634  4      OPC=movl_r32_m32     
  movq %r15, %rdi                   #  42    0xc4638  3      OPC=movq_r64_r64     
  callq .re_string_context_at       #  43    0xc463b  5      OPC=callq_label      
  movl 0x8(%rbx), %edx              #  44    0xc4640  3      OPC=movl_r32_m32     
  shrl $0x8, %edx                   #  45    0xc4643  3      OPC=shrl_r32_imm8    
  movl %edx, %ecx                   #  46    0xc4646  2      OPC=movl_r32_r32     
  andw $0x3ff, %cx                  #  47    0xc4648  5      OPC=andw_r16_imm16   
  testb $0x4, %dl                   #  48    0xc464d  3      OPC=testb_r8_imm8    
  je .L_c465f                       #  49    0xc4650  2      OPC=je_label         
  testb $0x1, %al                   #  50    0xc4652  2      OPC=testb_al_imm8    
  je .L_c4c25                       #  51    0xc4654  6      OPC=je_label_1       
  jmpq .L_c4c49                     #  52    0xc465a  5      OPC=jmpq_label_1     
.L_c465f:                           #        0xc465f  0      OPC=<label>          
  testb $0x8, %cl                   #  53    0xc465f  3      OPC=testb_r8_imm8    
  je .L_c466c                       #  54    0xc4662  2      OPC=je_label         
  testb $0x1, %al                   #  55    0xc4664  2      OPC=testb_al_imm8    
  jne .L_c4c25                      #  56    0xc4666  6      OPC=jne_label_1      
.L_c466c:                           #        0xc466c  0      OPC=<label>          
  testb $0x20, %cl                  #  57    0xc466c  3      OPC=testb_r8_imm8    
  je .L_c4679                       #  58    0xc466f  2      OPC=je_label         
  testb $0x2, %al                   #  59    0xc4671  2      OPC=testb_al_imm8    
  je .L_c4c25                       #  60    0xc4673  6      OPC=je_label_1       
.L_c4679:                           #        0xc4679  0      OPC=<label>          
  testb $0x80, %cl                  #  61    0xc4679  3      OPC=testb_r8_imm8    
  je .L_c4686                       #  62    0xc467c  2      OPC=je_label         
  testb $0x8, %al                   #  63    0xc467e  2      OPC=testb_al_imm8    
  je .L_c4c25                       #  64    0xc4680  6      OPC=je_label_1       
.L_c4686:                           #        0xc4686  0      OPC=<label>          
  movl 0x94(%r15), %r14d            #  65    0xc4686  7      OPC=movl_r32_m32     
  movq 0x70(%r15), %rax             #  66    0xc468d  4      OPC=movq_r64_m64     
  movq %rax, 0x38(%rsp)             #  67    0xc4691  5      OPC=movq_m64_r64     
  movq 0x8(%r15), %rax              #  68    0xc4696  4      OPC=movq_r64_m64     
  movq %rax, 0x8(%rsp)              #  69    0xc469a  5      OPC=movq_m64_r64     
  movl 0x14(%rsp), %esi             #  70    0xc469f  4      OPC=movl_r32_m32     
  movq %r15, %rdi                   #  71    0xc46a3  3      OPC=movq_r64_r64     
  callq .search_cur_bkref_entry     #  72    0xc46a6  5      OPC=callq_label      
  cmpl $0xffffffff, %eax            #  73    0xc46ab  6      OPC=cmpl_r32_imm32   
  nop                               #  74    0xc46b1  1      OPC=nop              
  nop                               #  75    0xc46b2  1      OPC=nop              
  nop                               #  76    0xc46b3  1      OPC=nop              
  je .L_c46d7                       #  77    0xc46b4  2      OPC=je_label         
  cltq                              #  78    0xc46b6  2      OPC=cltq             
  leaq (%rax,%rax,4), %rdx          #  79    0xc46b8  4      OPC=leaq_r64_m16     
  movq 0xa0(%r15), %rax             #  80    0xc46bc  7      OPC=movq_r64_m64     
  leaq (%rax,%rdx,4), %rax          #  81    0xc46c3  4      OPC=leaq_r64_m16     
  movl 0x1c(%rsp), %edx             #  82    0xc46c7  4      OPC=movl_r32_m32     
.L_c46c5:                           #        0xc46cb  0      OPC=<label>          
  cmpl (%rax), %edx                 #  83    0xc46cb  2      OPC=cmpl_r32_m32     
  je .L_c4c60                       #  84    0xc46cd  6      OPC=je_label_1       
  addq $0x14, %rax                  #  85    0xc46d3  4      OPC=addq_r64_imm8    
  cmpb $0x0, -0x4(%rax)             #  86    0xc46d7  4      OPC=cmpb_m8_imm8     
  jne .L_c46c5                      #  87    0xc46db  2      OPC=jne_label        
.L_c46d7:                           #        0xc46dd  0      OPC=<label>          
  movq 0x38(%rsp), %rax             #  88    0xc46dd  5      OPC=movq_r64_m64     
  movq (%rax), %rax                 #  89    0xc46e2  3      OPC=movq_r64_m64     
  movq 0x40(%rsp), %rbx             #  90    0xc46e5  5      OPC=movq_r64_m64     
  movl (%rax,%rbx,1), %eax          #  91    0xc46ea  3      OPC=movl_r32_m32     
  movl %eax, 0x68(%rsp)             #  92    0xc46ed  4      OPC=movl_m32_r32     
  cmpl $0x0, 0xac(%r15)             #  93    0xc46f1  8      OPC=cmpl_m32_imm8    
  jle .L_c4c60                      #  94    0xc46f9  6      OPC=jle_label_1      
  movl $0x0, 0x20(%rsp)             #  95    0xc46ff  8      OPC=movl_m32_imm32   
  movl %r14d, 0x6c(%rsp)            #  96    0xc4707  5      OPC=movl_m32_r32     
.L_c4706:                           #        0xc470c  0      OPC=<label>          
  movslq 0x20(%rsp), %rax           #  97    0xc470c  5      OPC=movslq_r64_m32   
  movq 0xb8(%r15), %rdx             #  98    0xc4711  7      OPC=movq_r64_m64     
  movq (%rdx,%rax,8), %rbx          #  99    0xc4718  4      OPC=movq_r64_m64     
  movslq 0x4(%rbx), %rax            #  100   0xc471c  4      OPC=movslq_r64_m32   
  shlq $0x4, %rax                   #  101   0xc4720  4      OPC=shlq_r64_imm8    
  movq 0x38(%rsp), %rcx             #  102   0xc4724  5      OPC=movq_r64_m64     
  addq (%rcx), %rax                 #  103   0xc4729  3      OPC=addq_r64_m64     
  movl 0x68(%rsp), %ecx             #  104   0xc472c  4      OPC=movl_r32_m32     
  cmpl (%rax), %ecx                 #  105   0xc4730  2      OPC=cmpl_r32_m32     
  jne .L_c49e4                      #  106   0xc4732  6      OPC=jne_label_1      
  movl (%rbx), %eax                 #  107   0xc4738  2      OPC=movl_r32_m32     
  movl %eax, (%rsp)                 #  108   0xc473a  3      OPC=movl_m32_r32     
  cmpl $0x0, 0x14(%rbx)             #  109   0xc473d  4      OPC=cmpl_m32_imm8    
  jle .L_c4829                      #  110   0xc4741  6      OPC=jle_label_1      
  movl 0x14(%rsp), %r14d            #  111   0xc4747  5      OPC=movl_r32_m32     
  movl $0x0, %r12d                  #  112   0xc474c  6      OPC=movl_r32_imm32   
  movl %r14d, %r13d                 #  113   0xc4752  3      OPC=movl_r32_r32     
.L_c474f:                           #        0xc4755  0      OPC=<label>          
  movslq %r12d, %rax                #  114   0xc4755  3      OPC=movslq_r64_r32   
  movq 0x18(%rbx), %rdx             #  115   0xc4758  4      OPC=movq_r64_m64     
  movq (%rdx,%rax,8), %r14          #  116   0xc475c  4      OPC=movq_r64_m64     
  movl 0x4(%r14), %eax              #  117   0xc4760  4      OPC=movl_r32_m32     
  movl %eax, 0x10(%rsp)             #  118   0xc4764  4      OPC=movl_m32_r32     
  movl %eax, %ebp                   #  119   0xc4768  2      OPC=movl_r32_r32     
  subl (%rsp), %ebp                 #  120   0xc476a  3      OPC=subl_r32_m32     
  testl %ebp, %ebp                  #  121   0xc476d  2      OPC=testl_r32_r32    
  jle .L_c47b7                      #  122   0xc476f  2      OPC=jle_label        
  leal (%rbp,%r13,1), %esi          #  123   0xc4771  5      OPC=leal_r32_m16     
  cmpl 0x2c(%r15), %esi             #  124   0xc4776  4      OPC=cmpl_r32_m32     
  jle .L_c4799                      #  125   0xc477a  2      OPC=jle_label        
  cmpl 0x40(%r15), %esi             #  126   0xc477c  4      OPC=cmpl_r32_m32     
  jg .L_c4800                       #  127   0xc4780  6      OPC=jg_label_1       
  movq %r15, %rdi                   #  128   0xc4786  3      OPC=movq_r64_r64     
  callq .clean_state_log_if_needed  #  129   0xc4789  5      OPC=callq_label      
  testl %eax, %eax                  #  130   0xc478e  2      OPC=testl_r32_r32    
  jne .L_c4c75                      #  131   0xc4790  6      OPC=jne_label_1      
  movq 0x8(%r15), %rax              #  132   0xc4796  4      OPC=movq_r64_m64     
  movq %rax, 0x8(%rsp)              #  133   0xc479a  5      OPC=movq_m64_r64     
.L_c4799:                           #        0xc479f  0      OPC=<label>          
  movslq %ebp, %rdx                 #  134   0xc479f  3      OPC=movslq_r64_r32   
  movslq (%rsp), %rsi               #  135   0xc47a2  4      OPC=movslq_r64_m32   
  movq 0x8(%rsp), %rax              #  136   0xc47a6  5      OPC=movq_r64_m64     
  addq %rax, %rsi                   #  137   0xc47ab  3      OPC=addq_r64_r64     
  movslq %r13d, %rdi                #  138   0xc47ae  3      OPC=movslq_r64_r32   
  addq %rax, %rdi                   #  139   0xc47b1  3      OPC=addq_r64_r64     
  callq .__GI_memcmp                #  140   0xc47b4  5      OPC=callq_label      
  testl %eax, %eax                  #  141   0xc47b9  2      OPC=testl_r32_r32    
  jne .L_c4808                      #  142   0xc47bb  2      OPC=jne_label        
.L_c47b7:                           #        0xc47bd  0      OPC=<label>          
  addl %ebp, %r13d                  #  143   0xc47bd  3      OPC=addl_r32_r32     
  movl 0x14(%rsp), %r8d             #  144   0xc47c0  5      OPC=movl_r32_m32     
  movl 0x1c(%rsp), %ecx             #  145   0xc47c5  4      OPC=movl_r32_m32     
  movq %r14, %rdx                   #  146   0xc47c9  3      OPC=movq_r64_r64     
  movq %rbx, %rsi                   #  147   0xc47cc  3      OPC=movq_r64_r64     
  movq %r15, %rdi                   #  148   0xc47cf  3      OPC=movq_r64_r64     
  callq .get_subexp_sub             #  149   0xc47d2  5      OPC=callq_label      
  movq 0x8(%r15), %rcx              #  150   0xc47d7  4      OPC=movq_r64_m64     
  movq %rcx, 0x8(%rsp)              #  151   0xc47db  5      OPC=movq_m64_r64     
  cmpl $0x1, %eax                   #  152   0xc47e0  3      OPC=cmpl_r32_imm8    
  ja .L_c4a04                       #  153   0xc47e3  6      OPC=ja_label_1       
  addl $0x1, %r12d                  #  154   0xc47e9  4      OPC=addl_r32_imm8    
  movl 0x10(%rsp), %eax             #  155   0xc47ed  4      OPC=movl_r32_m32     
  movl %eax, (%rsp)                 #  156   0xc47f1  3      OPC=movl_m32_r32     
  cmpl 0x14(%rbx), %r12d            #  157   0xc47f4  4      OPC=cmpl_r32_m32     
  jl .L_c474f                       #  158   0xc47f8  6      OPC=jl_label_1       
  movl %r13d, %r14d                 #  159   0xc47fe  3      OPC=movl_r32_r32     
  movl %eax, %r13d                  #  160   0xc4801  3      OPC=movl_r32_r32     
  jmpq .L_c481b                     #  161   0xc4804  2      OPC=jmpq_label       
.L_c4800:                           #        0xc4806  0      OPC=<label>          
  movl %r13d, %r14d                 #  162   0xc4806  3      OPC=movl_r32_r32     
  movl %r12d, %eax                  #  163   0xc4809  3      OPC=movl_r32_r32     
  jmpq .L_c480e                     #  164   0xc480c  2      OPC=jmpq_label       
.L_c4808:                           #        0xc480e  0      OPC=<label>          
  movl %r13d, %r14d                 #  165   0xc480e  3      OPC=movl_r32_r32     
  movl %r12d, %eax                  #  166   0xc4811  3      OPC=movl_r32_r32     
.L_c480e:                           #        0xc4814  0      OPC=<label>          
  cmpl %eax, 0x14(%rbx)             #  167   0xc4814  3      OPC=cmpl_m32_r32     
  jg .L_c49e4                       #  168   0xc4817  6      OPC=jg_label_1       
  movl (%rsp), %r13d                #  169   0xc481d  4      OPC=movl_r32_m32     
.L_c481b:                           #        0xc4821  0      OPC=<label>          
  testl %r12d, %r12d                #  170   0xc4821  3      OPC=testl_r32_r32    
  setg %al                          #  171   0xc4824  3      OPC=setg_r8          
  movzbl %al, %eax                  #  172   0xc4827  3      OPC=movzbl_r32_r8    
  addl %eax, %r13d                  #  173   0xc482a  3      OPC=addl_r32_r32     
  jmpq .L_c4832                     #  174   0xc482d  2      OPC=jmpq_label       
.L_c4829:                           #        0xc482f  0      OPC=<label>          
  movl 0x14(%rsp), %r14d            #  175   0xc482f  5      OPC=movl_r32_m32     
  movl (%rsp), %r13d                #  176   0xc4834  4      OPC=movl_r32_m32     
.L_c4832:                           #        0xc4838  0      OPC=<label>          
  cmpl %r13d, 0x14(%rsp)            #  177   0xc4838  5      OPC=cmpl_m32_r32     
  jl .L_c49e4                       #  178   0xc483d  6      OPC=jl_label_1       
  movl 0x68(%rsp), %r12d            #  179   0xc4843  5      OPC=movl_r32_m32     
.L_c4842:                           #        0xc4848  0      OPC=<label>          
  movl %r13d, %eax                  #  180   0xc4848  3      OPC=movl_r32_r32     
  subl (%rbx), %eax                 #  181   0xc484b  2      OPC=subl_r32_m32     
  testl %eax, %eax                  #  182   0xc484d  2      OPC=testl_r32_r32    
  jle .L_c4899                      #  183   0xc484f  2      OPC=jle_label        
  cmpl %r14d, 0x2c(%r15)            #  184   0xc4851  4      OPC=cmpl_m32_r32     
  jg .L_c4878                       #  185   0xc4855  2      OPC=jg_label         
  cmpl %r14d, 0x40(%r15)            #  186   0xc4857  4      OPC=cmpl_m32_r32     
  jle .L_c49e4                      #  187   0xc485b  6      OPC=jle_label_1      
  leal 0x1(%r14), %esi              #  188   0xc4861  4      OPC=leal_r32_m16     
  movq %r15, %rdi                   #  189   0xc4865  3      OPC=movq_r64_r64     
  callq .extend_buffers             #  190   0xc4868  5      OPC=callq_label      
  testl %eax, %eax                  #  191   0xc486d  2      OPC=testl_r32_r32    
  jne .L_c4c75                      #  192   0xc486f  6      OPC=jne_label_1      
  movq 0x8(%r15), %rax              #  193   0xc4875  4      OPC=movq_r64_m64     
  movq %rax, 0x8(%rsp)              #  194   0xc4879  5      OPC=movq_m64_r64     
.L_c4878:                           #        0xc487e  0      OPC=<label>          
  leal 0x1(%r14), %edx              #  195   0xc487e  4      OPC=leal_r32_m16     
  movslq %r14d, %r14                #  196   0xc4882  3      OPC=movslq_r64_r32   
  movslq %r13d, %rax                #  197   0xc4885  3      OPC=movslq_r64_r32   
  movq 0x8(%rsp), %rcx              #  198   0xc4888  5      OPC=movq_r64_m64     
  movzbl -0x1(%rcx,%rax,1), %eax    #  199   0xc488d  5      OPC=movzbl_r32_m8    
  cmpb %al, (%rcx,%r14,1)           #  200   0xc4892  4      OPC=cmpb_m8_r8       
  jne .L_c49e4                      #  201   0xc4896  6      OPC=jne_label_1      
  movl %edx, %r14d                  #  202   0xc489c  3      OPC=movl_r32_r32     
.L_c4899:                           #        0xc489f  0      OPC=<label>          
  movslq %r13d, %rax                #  203   0xc489f  3      OPC=movslq_r64_r32   
  movq 0x88(%r15), %rdx             #  204   0xc48a2  7      OPC=movq_r64_m64     
  movq (%rdx,%rax,8), %rax          #  205   0xc48a9  4      OPC=movq_r64_m64     
  testq %rax, %rax                  #  206   0xc48ad  3      OPC=testq_r64_r64    
  je .L_c49d5                       #  207   0xc48b0  6      OPC=je_label_1       
  movl 0xc(%rax), %edi              #  208   0xc48b6  3      OPC=movl_r32_m32     
  testl %edi, %edi                  #  209   0xc48b9  2      OPC=testl_r32_r32    
  jle .L_c49d5                      #  210   0xc48bb  6      OPC=jle_label_1      
  movq 0x10(%rax), %rcx             #  211   0xc48c1  4      OPC=movq_r64_m64     
  movq 0x38(%rsp), %rax             #  212   0xc48c5  5      OPC=movq_r64_m64     
  movq (%rax), %rsi                 #  213   0xc48ca  3      OPC=movq_r64_m64     
  movq %rcx, %rdx                   #  214   0xc48cd  3      OPC=movq_r64_r64     
  leal -0x1(%rdi), %eax             #  215   0xc48d0  3      OPC=leal_r32_m16     
  leaq 0x4(,%rax,4), %rax           #  216   0xc48d3  8      OPC=leaq_r64_m16     
  addq %rax, %rcx                   #  217   0xc48db  3      OPC=addq_r64_r64     
.L_c48d8:                           #        0xc48de  0      OPC=<label>          
  movl (%rdx), %ebp                 #  218   0xc48de  2      OPC=movl_r32_m32     
  movslq %ebp, %rax                 #  219   0xc48e0  3      OPC=movslq_r64_r32   
  shlq $0x4, %rax                   #  220   0xc48e3  4      OPC=shlq_r64_imm8    
  addq %rsi, %rax                   #  221   0xc48e7  3      OPC=addq_r64_r64     
  cmpb $0x9, 0x8(%rax)              #  222   0xc48ea  4      OPC=cmpb_m8_imm8     
  jne .L_c48f9                      #  223   0xc48ee  2      OPC=jne_label        
  cmpl (%rax), %r12d                #  224   0xc48f0  3      OPC=cmpl_r32_m32     
  jne .L_c48f9                      #  225   0xc48f3  2      OPC=jne_label        
  cmpl $0xffffffff, %ebp            #  226   0xc48f5  6      OPC=cmpl_r32_imm32   
  nop                               #  227   0xc48fb  1      OPC=nop              
  nop                               #  228   0xc48fc  1      OPC=nop              
  nop                               #  229   0xc48fd  1      OPC=nop              
  jne .L_c4907                      #  230   0xc48fe  2      OPC=jne_label        
  jmpq .L_c49d5                     #  231   0xc4900  5      OPC=jmpq_label_1     
.L_c48f9:                           #        0xc4905  0      OPC=<label>          
  addq $0x4, %rdx                   #  232   0xc4905  4      OPC=addq_r64_imm8    
  cmpq %rcx, %rdx                   #  233   0xc4909  3      OPC=cmpq_r64_r64     
  jne .L_c48d8                      #  234   0xc490c  2      OPC=jne_label        
  jmpq .L_c49d5                     #  235   0xc490e  5      OPC=jmpq_label_1     
.L_c4907:                           #        0xc4913  0      OPC=<label>          
  cmpq $0x0, 0x8(%rbx)              #  236   0xc4913  5      OPC=cmpq_m64_imm8    
  jne .L_c4930                      #  237   0xc4918  2      OPC=jne_label        
  movl %r13d, %esi                  #  238   0xc491a  3      OPC=movl_r32_r32     
  subl (%rbx), %esi                 #  239   0xc491d  2      OPC=subl_r32_m32     
  addl $0x1, %esi                   #  240   0xc491f  3      OPC=addl_r32_imm8    
  movslq %esi, %rsi                 #  241   0xc4922  3      OPC=movslq_r64_r32   
  movl $0x10, %edi                  #  242   0xc4925  5      OPC=movl_r32_imm32   
  callq .L_1f8c0                    #  243   0xc492a  5      OPC=callq_label      
  movq %rax, 0x8(%rbx)              #  244   0xc492f  4      OPC=movq_m64_r64     
  testq %rax, %rax                  #  245   0xc4933  3      OPC=testq_r64_r64    
  je .L_c4c70                       #  246   0xc4936  6      OPC=je_label_1       
.L_c4930:                           #        0xc493c  0      OPC=<label>          
  subq $0x8, %rsp                   #  247   0xc493c  4      OPC=subq_r64_imm8    
  movl 0x4(%rbx), %edx              #  248   0xc4940  3      OPC=movl_r32_m32     
  movq 0x8(%rbx), %rsi              #  249   0xc4943  4      OPC=movq_r64_m64     
  pushq $0x9                        #  250   0xc4947  2      OPC=pushq_imm8       
  movl %r13d, %r9d                  #  251   0xc4949  3      OPC=movl_r32_r32     
  movl %ebp, %r8d                   #  252   0xc494c  3      OPC=movl_r32_r32     
  movl (%rbx), %ecx                 #  253   0xc494f  2      OPC=movl_r32_m32     
  movq %r15, %rdi                   #  254   0xc4951  3      OPC=movq_r64_r64     
  callq .check_arrival              #  255   0xc4954  5      OPC=callq_label      
  addq $0x10, %rsp                  #  256   0xc4959  4      OPC=addq_r64_imm8    
  cmpl $0x1, %eax                   #  257   0xc495d  3      OPC=cmpl_r32_imm8    
  je .L_c49d5                       #  258   0xc4960  2      OPC=je_label         
  testl %eax, %eax                  #  259   0xc4962  2      OPC=testl_r32_r32    
  jne .L_c4c75                      #  260   0xc4964  6      OPC=jne_label_1      
  movl 0x14(%rbx), %eax             #  261   0xc496a  3      OPC=movl_r32_m32     
  cmpl 0x10(%rbx), %eax             #  262   0xc496d  3      OPC=cmpl_r32_m32     
  jne .L_c4990                      #  263   0xc4970  2      OPC=jne_label        
  leal 0x1(%rax,%rax,1), %eax       #  264   0xc4972  4      OPC=leal_r32_m16     
  movl %eax, (%rsp)                 #  265   0xc4976  3      OPC=movl_m32_r32     
  movslq %eax, %rsi                 #  266   0xc4979  3      OPC=movslq_r64_r32   
  shlq $0x3, %rsi                   #  267   0xc497c  4      OPC=shlq_r64_imm8    
  movq 0x18(%rbx), %rdi             #  268   0xc4980  4      OPC=movq_r64_m64     
  callq .__tls_get_addr_plt         #  269   0xc4984  5      OPC=callq_label      
  testq %rax, %rax                  #  270   0xc4989  3      OPC=testq_r64_r64    
  je .L_c4c53                       #  271   0xc498c  6      OPC=je_label_1       
  movq %rax, 0x18(%rbx)             #  272   0xc4992  4      OPC=movq_m64_r64     
  movl (%rsp), %eax                 #  273   0xc4996  3      OPC=movl_r32_m32     
  movl %eax, 0x10(%rbx)             #  274   0xc4999  3      OPC=movl_m32_r32     
.L_c4990:                           #        0xc499c  0      OPC=<label>          
  movl $0x18, %esi                  #  275   0xc499c  5      OPC=movl_r32_imm32   
  movl $0x1, %edi                   #  276   0xc49a1  5      OPC=movl_r32_imm32   
  callq .L_1f8c0                    #  277   0xc49a6  5      OPC=callq_label      
  testq %rax, %rax                  #  278   0xc49ab  3      OPC=testq_r64_r64    
  je .L_c4c53                       #  279   0xc49ae  6      OPC=je_label_1       
  movslq 0x14(%rbx), %rcx           #  280   0xc49b4  4      OPC=movslq_r64_m32   
  movq 0x18(%rbx), %rdx             #  281   0xc49b8  4      OPC=movq_r64_m64     
  movq %rax, (%rdx,%rcx,8)          #  282   0xc49bc  4      OPC=movq_m64_r64     
  movl %ebp, (%rax)                 #  283   0xc49c0  2      OPC=movl_m32_r32     
  movl %r13d, 0x4(%rax)             #  284   0xc49c2  4      OPC=movl_m32_r32     
  addl $0x1, 0x14(%rbx)             #  285   0xc49c6  4      OPC=addl_m32_imm8    
  movl 0x14(%rsp), %r8d             #  286   0xc49ca  5      OPC=movl_r32_m32     
  movl 0x1c(%rsp), %ecx             #  287   0xc49cf  4      OPC=movl_r32_m32     
  movq %rax, %rdx                   #  288   0xc49d3  3      OPC=movq_r64_r64     
  movq %rbx, %rsi                   #  289   0xc49d6  3      OPC=movq_r64_r64     
  movq %r15, %rdi                   #  290   0xc49d9  3      OPC=movq_r64_r64     
  callq .get_subexp_sub             #  291   0xc49dc  5      OPC=callq_label      
.L_c49d5:                           #        0xc49e1  0      OPC=<label>          
  addl $0x1, %r13d                  #  292   0xc49e1  4      OPC=addl_r32_imm8    
  cmpl %r13d, 0x14(%rsp)            #  293   0xc49e5  5      OPC=cmpl_m32_r32     
  jge .L_c4842                      #  294   0xc49ea  6      OPC=jge_label_1      
.L_c49e4:                           #        0xc49f0  0      OPC=<label>          
  addl $0x1, 0x20(%rsp)             #  295   0xc49f0  5      OPC=addl_m32_imm8    
  movl 0x20(%rsp), %eax             #  296   0xc49f5  4      OPC=movl_r32_m32     
  cmpl 0xac(%r15), %eax             #  297   0xc49f9  7      OPC=cmpl_r32_m32     
  jl .L_c4706                       #  298   0xc4a00  6      OPC=jl_label_1       
  movl 0x6c(%rsp), %r14d            #  299   0xc4a06  5      OPC=movl_r32_m32     
  jmpq .L_c4c60                     #  300   0xc4a0b  5      OPC=jmpq_label_1     
.L_c4a04:                           #        0xc4a10  0      OPC=<label>          
  movl 0x6c(%rsp), %r14d            #  301   0xc4a10  5      OPC=movl_r32_m32     
  movl %eax, 0x8c(%rsp)             #  302   0xc4a15  7      OPC=movl_m32_r32     
  testl %eax, %eax                  #  303   0xc4a1c  2      OPC=testl_r32_r32    
  jne .L_c4c7c                      #  304   0xc4a1e  6      OPC=jne_label_1      
.L_c4a18:                           #        0xc4a24  0      OPC=<label>          
  cmpl 0x94(%r15), %r14d            #  305   0xc4a24  7      OPC=cmpl_r32_m32     
  jge .L_c4c25                      #  306   0xc4a2b  6      OPC=jge_label_1      
  movq 0x48(%rsp), %rax             #  307   0xc4a31  5      OPC=movq_r64_m64     
  shlq $0x2, %rax                   #  308   0xc4a36  4      OPC=shlq_r64_imm8    
  movq %rax, 0x38(%rsp)             #  309   0xc4a3a  5      OPC=movq_m64_r64     
  movl 0x14(%rsp), %r13d            #  310   0xc4a3f  5      OPC=movl_r32_m32     
  movl 0x1c(%rsp), %ebx             #  311   0xc4a44  4      OPC=movl_r32_m32     
.L_c4a3c:                           #        0xc4a48  0      OPC=<label>          
  movslq %r14d, %rax                #  312   0xc4a48  3      OPC=movslq_r64_r32   
  leaq (%rax,%rax,4), %rdx          #  313   0xc4a4b  4      OPC=leaq_r64_m16     
  movq 0xa0(%r15), %rax             #  314   0xc4a4f  7      OPC=movq_r64_m64     
  leaq (%rax,%rdx,4), %rax          #  315   0xc4a56  4      OPC=leaq_r64_m16     
  cmpl %ebx, (%rax)                 #  316   0xc4a5a  2      OPC=cmpl_m32_r32     
  jne .L_c4c14                      #  317   0xc4a5c  6      OPC=jne_label_1      
  cmpl %r13d, 0x4(%rax)             #  318   0xc4a62  4      OPC=cmpl_m32_r32     
  jne .L_c4c14                      #  319   0xc4a66  6      OPC=jne_label_1      
  movl 0xc(%rax), %ebp              #  320   0xc4a6c  3      OPC=movl_r32_m32     
  movl 0x8(%rax), %eax              #  321   0xc4a6f  3      OPC=movl_r32_m32     
  movl %ebp, %ecx                   #  322   0xc4a72  2      OPC=movl_r32_r32     
  subl %eax, %ecx                   #  323   0xc4a74  2      OPC=subl_r32_r32     
  movl %ecx, 0x8(%rsp)              #  324   0xc4a76  4      OPC=movl_m32_r32     
  jne .L_c4a94                      #  325   0xc4a7a  2      OPC=jne_label        
  movq 0x30(%rsp), %rdi             #  326   0xc4a7c  5      OPC=movq_r64_m64     
  movq 0x28(%rdi), %rdx             #  327   0xc4a81  4      OPC=movq_r64_m64     
  movq 0x40(%rsp), %rcx             #  328   0xc4a85  5      OPC=movq_r64_m64     
  movq 0x8(%rdx,%rcx,1), %rdx       #  329   0xc4a8a  5      OPC=movq_r64_m64     
  movslq (%rdx), %rdx               #  330   0xc4a8f  3      OPC=movslq_r64_m32   
  shlq $0x4, %rdx                   #  331   0xc4a92  4      OPC=shlq_r64_imm8    
  addq 0x30(%rdi), %rdx             #  332   0xc4a96  4      OPC=addq_r64_m64     
  movq %rdx, (%rsp)                 #  333   0xc4a9a  4      OPC=movq_m64_r64     
  jmpq .L_c4ab2                     #  334   0xc4a9e  2      OPC=jmpq_label       
.L_c4a94:                           #        0xc4aa0  0      OPC=<label>          
  movq 0x30(%rsp), %rcx             #  335   0xc4aa0  5      OPC=movq_r64_m64     
  movq 0x18(%rcx), %rdx             #  336   0xc4aa5  4      OPC=movq_r64_m64     
  movq 0x38(%rsp), %rdi             #  337   0xc4aa9  5      OPC=movq_r64_m64     
  movslq (%rdx,%rdi,1), %rdx        #  338   0xc4aae  4      OPC=movslq_r64_m32   
  shlq $0x4, %rdx                   #  339   0xc4ab2  4      OPC=shlq_r64_imm8    
  addq 0x30(%rcx), %rdx             #  340   0xc4ab6  4      OPC=addq_r64_m64     
  movq %rdx, (%rsp)                 #  341   0xc4aba  4      OPC=movq_m64_r64     
.L_c4ab2:                           #        0xc4abe  0      OPC=<label>          
  addl %r13d, %ebp                  #  342   0xc4abe  3      OPC=addl_r32_r32     
  subl %eax, %ebp                   #  343   0xc4ac1  2      OPC=subl_r32_r32     
  movl 0x78(%r15), %edx             #  344   0xc4ac3  4      OPC=movl_r32_m32     
  leal -0x1(%rbp), %esi             #  345   0xc4ac7  3      OPC=leal_r32_m16     
  movq %r15, %rdi                   #  346   0xc4aca  3      OPC=movq_r64_r64     
  callq .re_string_context_at       #  347   0xc4acd  5      OPC=callq_label      
  movl %eax, 0x10(%rsp)             #  348   0xc4ad2  4      OPC=movl_m32_r32     
  movq 0x88(%r15), %rax             #  349   0xc4ad6  7      OPC=movq_r64_m64     
  movslq %ebp, %rbp                 #  350   0xc4add  3      OPC=movslq_r64_r32   
  leaq (,%rbp,8), %r12              #  351   0xc4ae0  8      OPC=leaq_r64_m16     
  leaq (%rax,%r12,1), %rdi          #  352   0xc4ae8  4      OPC=leaq_r64_m16     
  movq %rdi, 0x20(%rsp)             #  353   0xc4aec  5      OPC=movq_m64_r64     
  movq (%rdi), %rdx                 #  354   0xc4af1  3      OPC=movq_r64_m64     
  movq 0x58(%rsp), %rcx             #  355   0xc4af4  5      OPC=movq_r64_m64     
  movq (%rax,%rcx,1), %rax          #  356   0xc4af9  4      OPC=movq_r64_m64     
  testq %rax, %rax                  #  357   0xc4afd  3      OPC=testq_r64_r64    
  je .L_c4aff                       #  358   0xc4b00  2      OPC=je_label         
  movl 0xc(%rax), %eax              #  359   0xc4b02  3      OPC=movl_r32_m32     
  movl %eax, 0x1c(%rsp)             #  360   0xc4b05  4      OPC=movl_m32_r32     
  jmpq .L_c4b07                     #  361   0xc4b09  2      OPC=jmpq_label       
.L_c4aff:                           #        0xc4b0b  0      OPC=<label>          
  movl $0x0, 0x1c(%rsp)             #  362   0xc4b0b  8      OPC=movl_m32_imm32   
.L_c4b07:                           #        0xc4b13  0      OPC=<label>          
  testq %rdx, %rdx                  #  363   0xc4b13  3      OPC=testq_r64_r64    
  jne .L_c4b4c                      #  364   0xc4b16  2      OPC=jne_label        
  movl 0x10(%rsp), %ecx             #  365   0xc4b18  4      OPC=movl_r32_m32     
  movq (%rsp), %rdx                 #  366   0xc4b1c  4      OPC=movq_r64_m64     
  movq 0x30(%rsp), %rsi             #  367   0xc4b20  5      OPC=movq_r64_m64     
  movq 0x60(%rsp), %rdi             #  368   0xc4b25  5      OPC=movq_r64_m64     
  callq .re_acquire_state_context   #  369   0xc4b2a  5      OPC=callq_label      
  movq 0x20(%rsp), %rdi             #  370   0xc4b2f  5      OPC=movq_r64_m64     
  movq %rax, (%rdi)                 #  371   0xc4b34  3      OPC=movq_m64_r64     
  movq 0x88(%r15), %rax             #  372   0xc4b37  7      OPC=movq_r64_m64     
  cmpq $0x0, (%rax,%rbp,8)          #  373   0xc4b3e  5      OPC=cmpq_m64_imm8    
  jne .L_c4bc1                      #  374   0xc4b43  6      OPC=jne_label_1      
  cmpl $0x0, 0x8c(%rsp)             #  375   0xc4b49  8      OPC=cmpl_m32_imm8    
  je .L_c4bc1                       #  376   0xc4b51  2      OPC=je_label         
  jmpq .L_c4c7c                     #  377   0xc4b53  5      OPC=jmpq_label_1     
.L_c4b4c:                           #        0xc4b58  0      OPC=<label>          
  movq 0x38(%rdx), %rsi             #  378   0xc4b58  4      OPC=movq_r64_m64     
  movq (%rsp), %rdx                 #  379   0xc4b5c  4      OPC=movq_r64_m64     
  movq 0x50(%rsp), %rdi             #  380   0xc4b60  5      OPC=movq_r64_m64     
  callq .re_node_set_init_union     #  381   0xc4b65  5      OPC=callq_label      
  movl %eax, 0x8c(%rsp)             #  382   0xc4b6a  7      OPC=movl_m32_r32     
  testl %eax, %eax                  #  383   0xc4b71  2      OPC=testl_r32_r32    
  je .L_c4b78                       #  384   0xc4b73  2      OPC=je_label         
  movq 0x78(%rsp), %rdi             #  385   0xc4b75  5      OPC=movq_r64_m64     
  callq .L_1f8d0                    #  386   0xc4b7a  5      OPC=callq_label      
  jmpq .L_c4c7c                     #  387   0xc4b7f  5      OPC=jmpq_label_1     
.L_c4b78:                           #        0xc4b84  0      OPC=<label>          
  addq 0x88(%r15), %r12             #  388   0xc4b84  7      OPC=addq_r64_m64     
  movl 0x10(%rsp), %ecx             #  389   0xc4b8b  4      OPC=movl_r32_m32     
  movq 0x50(%rsp), %rdx             #  390   0xc4b8f  5      OPC=movq_r64_m64     
  movq 0x30(%rsp), %rsi             #  391   0xc4b94  5      OPC=movq_r64_m64     
  movq 0x60(%rsp), %rdi             #  392   0xc4b99  5      OPC=movq_r64_m64     
  callq .re_acquire_state_context   #  393   0xc4b9e  5      OPC=callq_label      
  movq %rax, (%r12)                 #  394   0xc4ba3  4      OPC=movq_m64_r64     
  movq 0x78(%rsp), %rdi             #  395   0xc4ba7  5      OPC=movq_r64_m64     
  callq .L_1f8d0                    #  396   0xc4bac  5      OPC=callq_label      
  movq 0x88(%r15), %rax             #  397   0xc4bb1  7      OPC=movq_r64_m64     
  cmpq $0x0, (%rax,%rbp,8)          #  398   0xc4bb8  5      OPC=cmpq_m64_imm8    
  jne .L_c4bc1                      #  399   0xc4bbd  2      OPC=jne_label        
  cmpl $0x0, 0x8c(%rsp)             #  400   0xc4bbf  8      OPC=cmpl_m32_imm8    
  jne .L_c4c7c                      #  401   0xc4bc7  6      OPC=jne_label_1      
.L_c4bc1:                           #        0xc4bcd  0      OPC=<label>          
  cmpl $0x0, 0x8(%rsp)              #  402   0xc4bcd  5      OPC=cmpl_m32_imm8    
  jne .L_c4c14                      #  403   0xc4bd2  2      OPC=jne_label        
  movq 0x88(%r15), %rax             #  404   0xc4bd4  7      OPC=movq_r64_m64     
  movq 0x58(%rsp), %rdi             #  405   0xc4bdb  5      OPC=movq_r64_m64     
  movq (%rax,%rdi,1), %rax          #  406   0xc4be0  4      OPC=movq_r64_m64     
  movl 0x1c(%rsp), %edi             #  407   0xc4be4  4      OPC=movl_r32_m32     
  cmpl 0xc(%rax), %edi              #  408   0xc4be8  3      OPC=cmpl_r32_m32     
  jge .L_c4c14                      #  409   0xc4beb  2      OPC=jge_label        
  movl %r13d, %edx                  #  410   0xc4bed  3      OPC=movl_r32_r32     
  movq (%rsp), %rbp                 #  411   0xc4bf0  4      OPC=movq_r64_m64     
  movq %rbp, %rsi                   #  412   0xc4bf4  3      OPC=movq_r64_r64     
  movq %r15, %rdi                   #  413   0xc4bf7  3      OPC=movq_r64_r64     
  callq .check_subexp_matching_top  #  414   0xc4bfa  5      OPC=callq_label      
  movl %eax, 0x8c(%rsp)             #  415   0xc4bff  7      OPC=movl_m32_r32     
  testl %eax, %eax                  #  416   0xc4c06  2      OPC=testl_r32_r32    
  jne .L_c4c7c                      #  417   0xc4c08  2      OPC=jne_label        
  movq %rbp, %rsi                   #  418   0xc4c0a  3      OPC=movq_r64_r64     
  movq %r15, %rdi                   #  419   0xc4c0d  3      OPC=movq_r64_r64     
  callq .transit_state_bkref        #  420   0xc4c10  5      OPC=callq_label      
  movl %eax, 0x8c(%rsp)             #  421   0xc4c15  7      OPC=movl_m32_r32     
  testl %eax, %eax                  #  422   0xc4c1c  2      OPC=testl_r32_r32    
  jne .L_c4c7c                      #  423   0xc4c1e  2      OPC=jne_label        
.L_c4c14:                           #        0xc4c20  0      OPC=<label>          
  addl $0x1, %r14d                  #  424   0xc4c20  4      OPC=addl_r32_imm8    
  cmpl %r14d, 0x94(%r15)            #  425   0xc4c24  7      OPC=cmpl_m32_r32     
  jg .L_c4a3c                       #  426   0xc4c2b  6      OPC=jg_label_1       
.L_c4c25:                           #        0xc4c31  0      OPC=<label>          
  addl $0x1, 0x18(%rsp)             #  427   0xc4c31  5      OPC=addl_m32_imm8    
  movl 0x18(%rsp), %eax             #  428   0xc4c36  4      OPC=movl_r32_m32     
  movq 0x28(%rsp), %rdi             #  429   0xc4c3a  5      OPC=movq_r64_m64     
  cmpl %eax, 0x4(%rdi)              #  430   0xc4c3f  3      OPC=cmpl_m32_r32     
  jg .L_c45ed                       #  431   0xc4c42  6      OPC=jg_label_1       
.L_c4c3c:                           #        0xc4c48  0      OPC=<label>          
  movl $0x0, 0x8c(%rsp)             #  432   0xc4c48  11     OPC=movl_m32_imm32   
  jmpq .L_c4c7c                     #  433   0xc4c53  2      OPC=jmpq_label       
.L_c4c49:                           #        0xc4c55  0      OPC=<label>          
  testb $0x8, %cl                   #  434   0xc4c55  3      OPC=testb_r8_imm8    
  jne .L_c4c25                      #  435   0xc4c58  2      OPC=jne_label        
  jmpq .L_c466c                     #  436   0xc4c5a  5      OPC=jmpq_label_1     
.L_c4c53:                           #        0xc4c5f  0      OPC=<label>          
  movl $0xc, 0x8c(%rsp)             #  437   0xc4c5f  11     OPC=movl_m32_imm32   
  jmpq .L_c4c7c                     #  438   0xc4c6a  2      OPC=jmpq_label       
.L_c4c60:                           #        0xc4c6c  0      OPC=<label>          
  movl $0x0, 0x8c(%rsp)             #  439   0xc4c6c  11     OPC=movl_m32_imm32   
  jmpq .L_c4a18                     #  440   0xc4c77  5      OPC=jmpq_label_1     
.L_c4c70:                           #        0xc4c7c  0      OPC=<label>          
  movl $0xc, %eax                   #  441   0xc4c7c  5      OPC=movl_r32_imm32   
.L_c4c75:                           #        0xc4c81  0      OPC=<label>          
  movl %eax, 0x8c(%rsp)             #  442   0xc4c81  7      OPC=movl_m32_r32     
.L_c4c7c:                           #        0xc4c88  0      OPC=<label>          
  movl 0x8c(%rsp), %eax             #  443   0xc4c88  7      OPC=movl_r32_m32     
  addq $0x98, %rsp                  #  444   0xc4c8f  7      OPC=addq_r64_imm32   
  popq %rbx                         #  445   0xc4c96  1      OPC=popq_r64_1       
  popq %rbp                         #  446   0xc4c97  1      OPC=popq_r64_1       
  popq %r12                         #  447   0xc4c98  2      OPC=popq_r64_1       
  popq %r13                         #  448   0xc4c9a  2      OPC=popq_r64_1       
  popq %r14                         #  449   0xc4c9c  2      OPC=popq_r64_1       
  popq %r15                         #  450   0xc4c9e  2      OPC=popq_r64_1       
  retq                              #  451   0xc4ca0  1      OPC=retq             
                                                                                  
.size transit_state_bkref, .-transit_state_bkref

