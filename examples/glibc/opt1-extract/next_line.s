  .text
  .globl next_line
  .type next_line, @function

#! file-offset 0xdd3a4
#! rip-offset  0xdd3a4
#! capacity    504 bytes

# Text                       #  Line  RIP      Bytes  Opcode               
.next_line:                  #        0xdd3a4  0      OPC=<label>          
  pushq %r15                 #  1     0xdd3a4  2      OPC=pushq_r64_1      
  pushq %r14                 #  2     0xdd3a6  2      OPC=pushq_r64_1      
  pushq %r13                 #  3     0xdd3a8  2      OPC=pushq_r64_1      
  pushq %r12                 #  4     0xdd3aa  2      OPC=pushq_r64_1      
  pushq %rbp                 #  5     0xdd3ac  1      OPC=pushq_r64_1      
  pushq %rbx                 #  6     0xdd3ad  1      OPC=pushq_r64_1      
  subq $0x28, %rsp           #  7     0xdd3ae  4      OPC=subq_r64_imm8    
  movl %edi, 0x10(%rsp)      #  8     0xdd3b2  4      OPC=movl_m32_r32     
  movq %rsi, %r15            #  9     0xdd3b6  3      OPC=movq_r64_r64     
  movq %rdx, %r12            #  10    0xdd3b9  3      OPC=movq_r64_r64     
  movq %rcx, %rbp            #  11    0xdd3bc  3      OPC=movq_r64_r64     
  movq %r8, 0x8(%rsp)        #  12    0xdd3bf  5      OPC=movq_m64_r64     
  movq (%rdx), %rbx          #  13    0xdd3c4  3      OPC=movq_r64_m64     
  movq (%rcx), %r13          #  14    0xdd3c7  3      OPC=movq_r64_m64     
  movq %r13, %r14            #  15    0xdd3ca  3      OPC=movq_r64_r64     
  subq %rbx, %r14            #  16    0xdd3cd  3      OPC=subq_r64_r64     
  movq %r14, %rdx            #  17    0xdd3d0  3      OPC=movq_r64_r64     
  movl $0xa, %esi            #  18    0xdd3d3  5      OPC=movl_r32_imm32   
  movq %rbx, %rdi            #  19    0xdd3d8  3      OPC=movq_r64_r64     
  callq .memchr              #  20    0xdd3db  5      OPC=callq_label      
  testq %rax, %rax           #  21    0xdd3e0  3      OPC=testq_r64_r64    
  jne .L_dd535               #  22    0xdd3e3  6      OPC=jne_label_1      
  cmpq %r15, %rbx            #  23    0xdd3e9  3      OPC=cmpq_r64_r64     
  je .L_dd52d                #  24    0xdd3ec  6      OPC=je_label_1       
  cmpq 0x8(%rsp), %r13       #  25    0xdd3f2  5      OPC=cmpq_r64_m64     
  jne .L_dd581               #  26    0xdd3f7  6      OPC=jne_label_1      
  movq %r14, %rdx            #  27    0xdd3fd  3      OPC=movq_r64_r64     
  movq %rbx, %rsi            #  28    0xdd400  3      OPC=movq_r64_r64     
  movq %r15, %rdi            #  29    0xdd403  3      OPC=movq_r64_r64     
  callq .__GI_memmove        #  30    0xdd406  5      OPC=callq_label      
  movq %r15, %rax            #  31    0xdd40b  3      OPC=movq_r64_r64     
  addq (%rbp), %rax          #  32    0xdd40e  4      OPC=addq_r64_m64     
  subq (%r12), %rax          #  33    0xdd412  4      OPC=subq_r64_m64     
  movq %rax, (%rbp)          #  34    0xdd416  4      OPC=movq_m64_r64     
  movq %r15, (%r12)          #  35    0xdd41a  4      OPC=movq_m64_r64     
  movq (%rbp), %rsi          #  36    0xdd41e  4      OPC=movq_r64_m64     
  movslq 0x10(%rsp), %rax    #  37    0xdd422  5      OPC=movslq_r64_m32   
  movq %rax, 0x8(%rsp)       #  38    0xdd427  5      OPC=movq_m64_r64     
  movq %r13, %rdx            #  39    0xdd42c  3      OPC=movq_r64_r64     
  subq %rsi, %rdx            #  40    0xdd42f  3      OPC=subq_r64_r64     
  movq %rax, %rdi            #  41    0xdd432  3      OPC=movq_r64_r64     
  movl $0x0, %eax            #  42    0xdd435  5      OPC=movl_r32_imm32   
  syscall                    #  43    0xdd43a  2      OPC=syscall          
  cmpq $0xfffff000, %rax     #  44    0xdd43c  6      OPC=cmpq_rax_imm32   
  jbe .L_dd45a               #  45    0xdd442  2      OPC=jbe_label        
  negl %eax                  #  46    0xdd444  2      OPC=negl_r32         
  movq 0x2ada33(%rip), %rdx  #  47    0xdd446  7      OPC=movq_r64_m64     
  movl %eax, (%rdx)          #  48    0xdd44d  2      OPC=movl_m32_r32     
  nop                        #  49    0xdd44f  1      OPC=nop              
  movl $0x0, %eax            #  50    0xdd450  5      OPC=movl_r32_imm32   
  jmpq .L_dd58d              #  51    0xdd455  5      OPC=jmpq_label_1     
.L_dd45a:                    #        0xdd45a  0      OPC=<label>          
  testq %rax, %rax           #  52    0xdd45a  3      OPC=testq_r64_r64    
  js .L_dd573                #  53    0xdd45d  6      OPC=js_label_1       
  addq (%rbp), %rax          #  54    0xdd463  4      OPC=addq_r64_m64     
  movq %rax, %rbx            #  55    0xdd467  3      OPC=movq_r64_r64     
  movq %rax, (%rbp)          #  56    0xdd46a  4      OPC=movq_m64_r64     
  movq (%r12), %rdi          #  57    0xdd46e  4      OPC=movq_r64_m64     
  movq %rax, %rdx            #  58    0xdd472  3      OPC=movq_r64_r64     
  subq %rdi, %rdx            #  59    0xdd475  3      OPC=subq_r64_r64     
  movl $0xa, %esi            #  60    0xdd478  5      OPC=movl_r32_imm32   
  callq .memchr              #  61    0xdd47d  5      OPC=callq_label      
  testq %rax, %rax           #  62    0xdd482  3      OPC=testq_r64_r64    
  jne .L_dd587               #  63    0xdd485  6      OPC=jne_label_1      
  cmpq %rbx, %r13            #  64    0xdd48b  3      OPC=cmpq_r64_r64     
  jne .L_dd581               #  65    0xdd48e  6      OPC=jne_label_1      
  movq %r13, %rax            #  66    0xdd494  3      OPC=movq_r64_r64     
  subq %r15, %rax            #  67    0xdd497  3      OPC=subq_r64_r64     
  leaq (%rax,%rax,2), %rdx   #  68    0xdd49a  4      OPC=leaq_r64_m16     
  leaq 0x3(%rdx), %rax       #  69    0xdd49e  4      OPC=leaq_r64_m16     
  testq %rdx, %rdx           #  70    0xdd4a2  3      OPC=testq_r64_r64    
  cmovnsq %rdx, %rax         #  71    0xdd4a5  4      OPC=cmovnsq_r64_r64  
  sarq $0x2, %rax            #  72    0xdd4a9  4      OPC=sarq_r64_imm8    
  addq %rax, %r15            #  73    0xdd4ad  3      OPC=addq_r64_r64     
  movq %r15, 0x10(%rsp)      #  74    0xdd4b0  5      OPC=movq_m64_r64     
  movq %r13, %rax            #  75    0xdd4b5  3      OPC=movq_r64_r64     
  subq %r15, %rax            #  76    0xdd4b8  3      OPC=subq_r64_r64     
  movq %rax, 0x18(%rsp)      #  77    0xdd4bb  5      OPC=movq_m64_r64     
.L_dd4c0:                    #        0xdd4c0  0      OPC=<label>          
  movq %r15, (%rbp)          #  78    0xdd4c0  4      OPC=movq_m64_r64     
  movq 0x18(%rsp), %rdx      #  79    0xdd4c4  5      OPC=movq_r64_m64     
  movq 0x10(%rsp), %rsi      #  80    0xdd4c9  5      OPC=movq_r64_m64     
  movq 0x8(%rsp), %rdi       #  81    0xdd4ce  5      OPC=movq_r64_m64     
  movl $0x0, %eax            #  82    0xdd4d3  5      OPC=movl_r32_imm32   
  syscall                    #  83    0xdd4d8  2      OPC=syscall          
  movq %rax, %rbx            #  84    0xdd4da  3      OPC=movq_r64_r64     
  cmpq $0xfffff000, %rbx     #  85    0xdd4dd  7      OPC=cmpq_r64_imm32   
  jbe .L_dd4fc               #  86    0xdd4e4  2      OPC=jbe_label        
  negl %eax                  #  87    0xdd4e6  2      OPC=negl_r32         
  movq 0x2ad991(%rip), %rdx  #  88    0xdd4e8  7      OPC=movq_r64_m64     
  movl %eax, (%rdx)          #  89    0xdd4ef  2      OPC=movl_m32_r32     
  nop                        #  90    0xdd4f1  1      OPC=nop              
  movl $0x0, %eax            #  91    0xdd4f2  5      OPC=movl_r32_imm32   
  jmpq .L_dd58d              #  92    0xdd4f7  5      OPC=jmpq_label_1     
.L_dd4fc:                    #        0xdd4fc  0      OPC=<label>          
  testq %rbx, %rbx           #  93    0xdd4fc  3      OPC=testq_r64_r64    
  js .L_dd57a                #  94    0xdd4ff  2      OPC=js_label         
  movq (%rbp), %r14          #  95    0xdd501  4      OPC=movq_r64_m64     
  movq %rbx, %rdx            #  96    0xdd505  3      OPC=movq_r64_r64     
  movl $0xa, %esi            #  97    0xdd508  5      OPC=movl_r32_imm32   
  movq %r14, %rdi            #  98    0xdd50d  3      OPC=movq_r64_r64     
  callq .memchr              #  99    0xdd510  5      OPC=callq_label      
  movb $0xa, (%r14)          #  100   0xdd515  4      OPC=movb_m8_imm8     
  addq (%rbp), %rbx          #  101   0xdd519  4      OPC=addq_r64_m64     
  movq %rbx, (%rbp)          #  102   0xdd51d  4      OPC=movq_m64_r64     
  testq %rax, %rax           #  103   0xdd521  3      OPC=testq_r64_r64    
  jne .L_dd587               #  104   0xdd524  2      OPC=jne_label        
  cmpq %rbx, %r13            #  105   0xdd526  3      OPC=cmpq_r64_r64     
  je .L_dd4c0                #  106   0xdd529  2      OPC=je_label         
  jmpq .L_dd581              #  107   0xdd52b  2      OPC=jmpq_label       
.L_dd52d:                    #        0xdd52d  0      OPC=<label>          
  movq (%rbp), %rax          #  108   0xdd52d  4      OPC=movq_r64_m64     
  subq $0x1, %rax            #  109   0xdd531  4      OPC=subq_r64_imm8    
.L_dd535:                    #        0xdd535  0      OPC=<label>          
  addq $0x1, %rax            #  110   0xdd535  4      OPC=addq_r64_imm8    
  movq %rax, (%r12)          #  111   0xdd539  4      OPC=movq_m64_r64     
  movq (%rbp), %rdx          #  112   0xdd53d  4      OPC=movq_r64_m64     
  cmpq %rdx, %rax            #  113   0xdd541  3      OPC=cmpq_r64_r64     
  jbe .L_dd565               #  114   0xdd544  2      OPC=jbe_label        
  leaq 0x7c3a8(%rip), %rcx   #  115   0xdd546  7      OPC=leaq_r64_m16     
  movl $0x77, %edx           #  116   0xdd54d  5      OPC=movl_r32_imm32   
  leaq 0x7ff1f(%rip), %rsi   #  117   0xdd552  7      OPC=leaq_r64_m16     
  leaq 0x7c34f(%rip), %rdi   #  118   0xdd559  7      OPC=leaq_r64_m16     
  callq .__assert_fail       #  119   0xdd560  5      OPC=callq_label      
.L_dd565:                    #        0xdd565  0      OPC=<label>          
  cmpq %rdx, %rbx            #  120   0xdd565  3      OPC=cmpq_r64_r64     
  movl $0x0, %eax            #  121   0xdd568  5      OPC=movl_r32_imm32   
  cmovneq %rbx, %rax         #  122   0xdd56d  4      OPC=cmovneq_r64_r64  
  jmpq .L_dd58d              #  123   0xdd571  2      OPC=jmpq_label       
.L_dd573:                    #        0xdd573  0      OPC=<label>          
  movl $0x0, %eax            #  124   0xdd573  5      OPC=movl_r32_imm32   
  jmpq .L_dd58d              #  125   0xdd578  2      OPC=jmpq_label       
.L_dd57a:                    #        0xdd57a  0      OPC=<label>          
  movl $0x0, %eax            #  126   0xdd57a  5      OPC=movl_r32_imm32   
  jmpq .L_dd58d              #  127   0xdd57f  2      OPC=jmpq_label       
.L_dd581:                    #        0xdd581  0      OPC=<label>          
  movq (%r12), %rbx          #  128   0xdd581  4      OPC=movq_r64_m64     
  jmpq .L_dd52d              #  129   0xdd585  2      OPC=jmpq_label       
.L_dd587:                    #        0xdd587  0      OPC=<label>          
  movq (%r12), %rbx          #  130   0xdd587  4      OPC=movq_r64_m64     
  jmpq .L_dd535              #  131   0xdd58b  2      OPC=jmpq_label       
.L_dd58d:                    #        0xdd58d  0      OPC=<label>          
  addq $0x28, %rsp           #  132   0xdd58d  4      OPC=addq_r64_imm8    
  popq %rbx                  #  133   0xdd591  1      OPC=popq_r64_1       
  popq %rbp                  #  134   0xdd592  1      OPC=popq_r64_1       
  popq %r12                  #  135   0xdd593  2      OPC=popq_r64_1       
  popq %r13                  #  136   0xdd595  2      OPC=popq_r64_1       
  popq %r14                  #  137   0xdd597  2      OPC=popq_r64_1       
  popq %r15                  #  138   0xdd599  2      OPC=popq_r64_1       
  retq                       #  139   0xdd59b  1      OPC=retq             
                                                                           
.size next_line, .-next_line

