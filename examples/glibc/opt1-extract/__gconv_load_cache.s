  .text
  .globl __gconv_load_cache
  .type __gconv_load_cache, @function

#! file-offset 0x279a9
#! rip-offset  0x279a9
#! capacity    496 bytes

# Text                       #  Line  RIP      Bytes  Opcode                
.__gconv_load_cache:         #        0x279a9  0      OPC=<label>           
  pushq %r12                 #  1     0x279a9  2      OPC=pushq_r64_1       
  pushq %rbp                 #  2     0x279ab  1      OPC=pushq_r64_1       
  pushq %rbx                 #  3     0x279ac  1      OPC=pushq_r64_1       
  subq $0x90, %rsp           #  4     0x279ad  7      OPC=subq_r64_imm32    
  leaq 0x12fc0c(%rip), %rdi  #  5     0x279b4  7      OPC=leaq_r64_m16      
  callq .getenv              #  6     0x279bb  5      OPC=callq_label       
  movq %rax, 0x368e09(%rip)  #  7     0x279c0  7      OPC=movq_m64_r64      
  movl $0xffffffff, %ecx     #  8     0x279c7  6      OPC=movl_r32_imm32_1  
  testq %rax, %rax           #  9     0x279cd  3      OPC=testq_r64_r64     
  jne .L_27b8b               #  10    0x279d0  6      OPC=jne_label_1       
  movl $0x0, %edx            #  11    0x279d6  5      OPC=movl_r32_imm32    
  movl $0x0, %esi            #  12    0x279db  5      OPC=movl_r32_imm32    
  leaq 0x133792(%rip), %rdi  #  13    0x279e0  7      OPC=leaq_r64_m16      
  movl $0x2, %ecx            #  14    0x279e7  5      OPC=movl_r32_imm32    
  movl %ecx, %eax            #  15    0x279ec  2      OPC=movl_r32_r32      
  syscall                    #  16    0x279ee  2      OPC=syscall           
  movq %rax, %rbx            #  17    0x279f0  3      OPC=movq_r64_r64      
  cmpq $0xfffff000, %rax     #  18    0x279f3  6      OPC=cmpq_rax_imm32    
  jbe .L_27a10               #  19    0x279f9  2      OPC=jbe_label         
  negl %ebx                  #  20    0x279fb  2      OPC=negl_r32          
  movq 0x36347d(%rip), %rdx  #  21    0x279fd  7      OPC=movq_r64_m64      
  movl %ebx, (%rdx)          #  22    0x27a04  2      OPC=movl_m32_r32      
  nop                        #  23    0x27a06  1      OPC=nop               
  movl $0xffffffff, %ecx     #  24    0x27a07  6      OPC=movl_r32_imm32_1  
  jmpq .L_27b8b              #  25    0x27a0d  5      OPC=jmpq_label_1      
.L_27a10:                    #        0x27a12  0      OPC=<label>           
  movl %eax, %r12d           #  26    0x27a12  3      OPC=movl_r32_r32      
  cmpl $0xffffffff, %eax     #  27    0x27a15  6      OPC=cmpl_r32_imm32    
  nop                        #  28    0x27a1b  1      OPC=nop               
  nop                        #  29    0x27a1c  1      OPC=nop               
  nop                        #  30    0x27a1d  1      OPC=nop               
  je .L_27b86                #  31    0x27a1e  6      OPC=je_label_1        
  movq %rsp, %rdx            #  32    0x27a24  3      OPC=movq_r64_r64      
  movl %eax, %esi            #  33    0x27a27  2      OPC=movl_r32_r32      
  movl $0x1, %edi            #  34    0x27a29  5      OPC=movl_r32_imm32    
  callq .__fxstat            #  35    0x27a2e  5      OPC=callq_label       
  testl %eax, %eax           #  36    0x27a33  2      OPC=testl_r32_r32     
  js .L_27a3a                #  37    0x27a35  2      OPC=js_label          
  movq 0x30(%rsp), %rsi      #  38    0x27a37  5      OPC=movq_r64_m64      
  cmpq $0xf, %rsi            #  39    0x27a3c  4      OPC=cmpq_r64_imm8     
  ja .L_27a4e                #  40    0x27a40  2      OPC=ja_label          
.L_27a3a:                    #        0x27a42  0      OPC=<label>           
  movslq %ebx, %rdi          #  41    0x27a42  3      OPC=movslq_r64_r32    
  movl $0x3, %eax            #  42    0x27a45  5      OPC=movl_r32_imm32    
  syscall                    #  43    0x27a4a  2      OPC=syscall           
  movl $0xffffffff, %ecx     #  44    0x27a4c  6      OPC=movl_r32_imm32_1  
  jmpq .L_27b8b              #  45    0x27a52  5      OPC=jmpq_label_1      
.L_27a4e:                    #        0x27a57  0      OPC=<label>           
  movq %rsi, 0x365013(%rip)  #  46    0x27a57  7      OPC=movq_m64_r64      
  movl $0x0, %r9d            #  47    0x27a5e  6      OPC=movl_r32_imm32    
  movl %ebx, %r8d            #  48    0x27a64  3      OPC=movl_r32_r32      
  movl $0x1, %ecx            #  49    0x27a67  5      OPC=movl_r32_imm32    
  movl $0x1, %edx            #  50    0x27a6c  5      OPC=movl_r32_imm32    
  movl $0x0, %edi            #  51    0x27a71  5      OPC=movl_r32_imm32    
  callq .mmap                #  52    0x27a76  5      OPC=callq_label       
  movq %rax, 0x364ff7(%rip)  #  53    0x27a7b  7      OPC=movq_m64_r64      
  cmpq $0xff, %rax           #  54    0x27a82  4      OPC=cmpq_r64_imm8     
  jne .L_27af0               #  55    0x27a86  2      OPC=jne_label         
  movq 0x364fe2(%rip), %rdi  #  56    0x27a88  7      OPC=movq_r64_m64      
  callq .memalign_plt        #  57    0x27a8f  5      OPC=callq_label       
  movq %rax, 0x364fde(%rip)  #  58    0x27a94  7      OPC=movq_m64_r64      
  testq %rax, %rax           #  59    0x27a9b  3      OPC=testq_r64_r64     
  je .L_27a3a                #  60    0x27a9e  2      OPC=je_label          
  movl $0x0, %ebp            #  61    0x27aa0  5      OPC=movl_r32_imm32    
.L_27a9c:                    #        0x27aa5  0      OPC=<label>           
  movq 0x364fc5(%rip), %rdx  #  62    0x27aa5  7      OPC=movq_r64_m64      
  subq %rbp, %rdx            #  63    0x27aac  3      OPC=subq_r64_r64      
  movq %rbp, %rsi            #  64    0x27aaf  3      OPC=movq_r64_r64      
  addq 0x364fc0(%rip), %rsi  #  65    0x27ab2  7      OPC=addq_r64_m64      
  movl %r12d, %edi           #  66    0x27ab9  3      OPC=movl_r32_r32      
  callq .__read              #  67    0x27abc  5      OPC=callq_label       
  cmpq $0xff, %rax           #  68    0x27ac1  4      OPC=cmpq_r64_imm8     
  jne .L_27ada               #  69    0x27ac5  2      OPC=jne_label         
  movq 0x364fab(%rip), %rdi  #  70    0x27ac7  7      OPC=movq_r64_m64      
  callq .L_1f8d0             #  71    0x27ace  5      OPC=callq_label       
  movq $0x0, 0x364f9b(%rip)  #  72    0x27ad3  11     OPC=movq_m64_imm32    
  jmpq .L_27a3a              #  73    0x27ade  5      OPC=jmpq_label_1      
.L_27ada:                    #        0x27ae3  0      OPC=<label>           
  addq %rax, %rbp            #  74    0x27ae3  3      OPC=addq_r64_r64      
  cmpq 0x364f84(%rip), %rbp  #  75    0x27ae6  7      OPC=cmpq_r64_m64      
  jb .L_27a9c                #  76    0x27aed  2      OPC=jb_label          
  movl $0x1, 0x364f70(%rip)  #  77    0x27aef  10     OPC=movl_m32_imm32    
.L_27af0:                    #        0x27af9  0      OPC=<label>           
  movslq %ebx, %rdi          #  78    0x27af9  3      OPC=movslq_r64_r32    
  movl $0x3, %eax            #  79    0x27afc  5      OPC=movl_r32_imm32    
  syscall                    #  80    0x27b01  2      OPC=syscall           
  movq 0x364f6f(%rip), %rdi  #  81    0x27b03  7      OPC=movq_r64_m64      
  cmpl $0x20010324, (%rdi)   #  82    0x27b0a  6      OPC=cmpl_m32_imm32    
  jne .L_27b4e               #  83    0x27b10  2      OPC=jne_label         
  movq 0x364f58(%rip), %rdx  #  84    0x27b12  7      OPC=movq_r64_m64      
  movzwl 0x4(%rdi), %eax     #  85    0x27b19  4      OPC=movzwl_r32_m16    
  cmpq %rdx, %rax            #  86    0x27b1d  3      OPC=cmpq_r64_r64      
  jae .L_27b4e               #  87    0x27b20  2      OPC=jae_label         
  movzwl 0x6(%rdi), %ecx     #  88    0x27b22  4      OPC=movzwl_r32_m16    
  cmpq %rcx, %rdx            #  89    0x27b26  3      OPC=cmpq_r64_r64      
  jbe .L_27b4e               #  90    0x27b29  2      OPC=jbe_label         
  movzwl 0x8(%rdi), %eax     #  91    0x27b2b  4      OPC=movzwl_r32_m16    
  testw %ax, %ax             #  92    0x27b2f  3      OPC=testw_r16_r16     
  je .L_27b4e                #  93    0x27b32  2      OPC=je_label          
  movzwl %ax, %eax           #  94    0x27b34  3      OPC=movzwl_r32_r16    
  leaq (%rcx,%rax,4), %rax   #  95    0x27b37  4      OPC=leaq_r64_m16      
  cmpq %rax, %rdx            #  96    0x27b3b  3      OPC=cmpq_r64_r64      
  jb .L_27b4e                #  97    0x27b3e  2      OPC=jb_label          
  movzwl 0xa(%rdi), %eax     #  98    0x27b40  4      OPC=movzwl_r32_m16    
  cmpq %rax, %rdx            #  99    0x27b44  3      OPC=cmpq_r64_r64      
  jbe .L_27b4e               #  100   0x27b47  2      OPC=jbe_label         
  movzwl 0xc(%rdi), %eax     #  101   0x27b49  4      OPC=movzwl_r32_m16    
  movl $0x0, %ecx            #  102   0x27b4d  5      OPC=movl_r32_imm32    
  cmpq %rax, %rdx            #  103   0x27b52  3      OPC=cmpq_r64_r64      
  jae .L_27b8b               #  104   0x27b55  2      OPC=jae_label         
.L_27b4e:                    #        0x27b57  0      OPC=<label>           
  cmpl $0x0, 0x364f0b(%rip)  #  105   0x27b57  7      OPC=cmpl_m32_imm8     
  je .L_27b68                #  106   0x27b5e  2      OPC=je_label          
  callq .L_1f8d0             #  107   0x27b60  5      OPC=callq_label       
  movl $0x0, 0x364efa(%rip)  #  108   0x27b65  10     OPC=movl_m32_imm32    
  jmpq .L_27b74              #  109   0x27b6f  2      OPC=jmpq_label        
.L_27b68:                    #        0x27b71  0      OPC=<label>           
  movq 0x364ef9(%rip), %rsi  #  110   0x27b71  7      OPC=movq_r64_m64      
  callq .munmap              #  111   0x27b78  5      OPC=callq_label       
.L_27b74:                    #        0x27b7d  0      OPC=<label>           
  movq $0x0, 0x364ef1(%rip)  #  112   0x27b7d  11     OPC=movq_m64_imm32    
  movl $0xffffffff, %ecx     #  113   0x27b88  6      OPC=movl_r32_imm32_1  
  jmpq .L_27b8b              #  114   0x27b8e  2      OPC=jmpq_label        
.L_27b86:                    #        0x27b90  0      OPC=<label>           
  movl $0xffffffff, %ecx     #  115   0x27b90  6      OPC=movl_r32_imm32_1  
.L_27b8b:                    #        0x27b96  0      OPC=<label>           
  movl %ecx, %eax            #  116   0x27b96  2      OPC=movl_r32_r32      
  addq $0x90, %rsp           #  117   0x27b98  7      OPC=addq_r64_imm32    
  popq %rbx                  #  118   0x27b9f  1      OPC=popq_r64_1        
  popq %rbp                  #  119   0x27ba0  1      OPC=popq_r64_1        
  popq %r12                  #  120   0x27ba1  2      OPC=popq_r64_1        
  retq                       #  121   0x27ba3  1      OPC=retq              
                                                                            
.size __gconv_load_cache, .-__gconv_load_cache

